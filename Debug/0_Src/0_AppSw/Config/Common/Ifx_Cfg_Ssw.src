	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Config\\Common\\.Ifx_Cfg_Ssw.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Config\\Common\\Ifx_Cfg_Ssw.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Config\\Common\\Ifx_Cfg_Ssw.src ..\\0_Src\\0_AppSw\\Config\\Common\\Ifx_Cfg_Ssw.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Config\\Common\\Ifx_Cfg_Ssw.c'

	
$TC162
	.sdecl	'.zrodata.IfxScuWdt..2.cnt',data,rom
	.sect	'.zrodata.IfxScuWdt..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	-268213580
	.sdecl	'.zrodata.IfxPmsEvr..3.cnt',data,rom
	.sect	'.zrodata.IfxPmsEvr..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	-266043125
	.sdecl	'.zrodata.IfxScuWdt..4.cnt',data,rom
	.sect	'.zrodata.IfxScuWdt..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	-262142
	.sdecl	'.zrodata.IfxPmsEvr..5.cnt',data,rom
	.sect	'.zrodata.IfxPmsEvr..5.cnt'
	.align	2
.5.cnt:	.type	object
	.size	.5.cnt,4
	.word	1274791200
	
	.sdecl	'.text.Ifx_Cfg_Ssw.Ifx_Ssw_Pms_Init',code,cluster('Ifx_Ssw_Pms_Init')
	.sect	'.text.Ifx_Cfg_Ssw.Ifx_Ssw_Pms_Init'
	.align	2
	
	.global	Ifx_Ssw_Pms_Init

; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	     1  /**********************************************************************************************************************
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	     2   * \file Ifx_Cfg_Ssw.c
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	     3   * \brief Configuration file for the Startup Software
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	     4   * \copyright Copyright (C) Infineon Technologies AG 2019
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	     5   * 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	     6   * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	     7   * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	     8   * are agreed, use of this file is subject to following:
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	     9   * 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    10   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    11   * 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    12   * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    13   * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    14   * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    15   * Software is furnished to do so, all subject to the following:
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    16   * 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    17   * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    18   * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    19   * derivative works of the Software, unless such copies or derivative works are solely in the form of 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    20   * machine-executable object code generated by a source language processor.
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    21   * 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    22   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    23   * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    24   * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    25   * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    26   * IN THE SOFTWARE.
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    27   *********************************************************************************************************************/
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    28  
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    29  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    30  /*-----------------------------------------------------Includes------------------------------------------------------*/
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    31  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    32  #include "Ifx_Cfg_Ssw.h"
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    33  #include "Ifx_Ssw_Infra.h"
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    34  
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    35  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    36  /*---------------------------------------------Function Implementations----------------------------------------------*/
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    37  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    38  #if defined(__TASKING__)
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    39  #pragma optimize RL
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    40  #elif defined(__HIGHTEC__)
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    41  #pragma GCC optimize ("O1")
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    42  #endif
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    43  
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    44  #if (IFX_CFG_SSW_ENABLE_PMS_INIT == 1U)
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    45  void Ifx_Ssw_Pms_Init(void)
; Function Ifx_Ssw_Pms_Init
.L22:
Ifx_Ssw_Pms_Init:	.type	func

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    42   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    44   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    45   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    46   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    47   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    48   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    49   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    50   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    51   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    52   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    53   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    56  #ifndef IFXSCUWDT_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    57  #define IFXSCUWDT_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    59  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    60  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    63  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    64  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    65  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    66  #include "IfxScu_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    67  #include "IfxScuWdt.asm.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    69  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    70  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    71  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    74  /** \brief Endinit operation Timeout counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    75   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    76  #define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    79  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    80  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    82  /** \brief Configuration structure for Scu Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    83   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    84   * Safety WDT registers defined in IfxScuWdt.h file.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    86  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    88      uint16            password;                            /**< \brief password for access to WDTxCON0 reg */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    89      uint16            reload;                              /**< \brief WDT reload value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    90      IfxScu_WDTCON1_IR inputFrequency;                      /**< \brief input frequency of the WDT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    91      boolean           disableWatchdog;                     /**< \brief Disable Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    92      boolean           enableSmuRestriction;                /**< \brief Unlock Restriction Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    93      boolean           enableAutomaticPasswordChange;       /**< \brief Password Auto-sequence Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    94      boolean           enableTimerCheck;                    /**< \brief Counter Check Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    95      boolean           enableTimerCheckTolerance;           /**< \brief Timer Check Tolerance Request */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    96      boolean           clrInternalResetFlag;                /**< \brief Clear Internal Reset Flag */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    97      IfxScu_WDTCON1_IR globalEndInitInputFrequency;         /**< \brief input frequency of the global End init WDT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    98  } IfxScuWdt_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   100  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   101   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   102  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   103  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   104  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   107  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   108   *   This API initialize the ScuWdt configuration structure to default values, these default
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   109   *   values are for software specific, not necessarily hardware reset values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   110   *   User must use this API call before IfxScuWdt_Init API call
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   111   * \param config ScuWdt configuration structure to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   112   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   114  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   116  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   117   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   118   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   119   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   120   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   121   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   122   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   123   * \param wdt reference to register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   124   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   125   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   127  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   129  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   130   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   131   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   132   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   133   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   134   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   135   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   136   * \param wdt reference to register map of Safety WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   137   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   138   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   139   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   140  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   141  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   142  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   144  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   145   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   147  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   148  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   149  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   150  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   151  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   152   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   153   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   154   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   155   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   156   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   157   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   158   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   159   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   160   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   161   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   163  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   165  /** \brief Clear the Global safety Endinit password (Inline)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   166   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   167   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   169  IFX_INLINE void IfxScuWdt_clearGlobalSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   171  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   172   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   173   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   174   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   175   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   176   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   177   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   178   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   179   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   180   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   181   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   182  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   183  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   184  /** \brief API to fetch current password of global safety endinit Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   186   * This API will fetch current global endinit password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   187   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   188   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   189   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   190   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   191   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   192  IFX_INLINE uint16 IfxScuWdt_getGlobalSafetyEndinitPasswordInline(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   194  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   195   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   196   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   197   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   198   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   199   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   200   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   201   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   202   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   203   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   204  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   206  /** \brief Set the Global safety Endinit password (Inline)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   208   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   209   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   210  IFX_INLINE void IfxScuWdt_setGlobalSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   212  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   213   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   214   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   215   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   216   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   217   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   218   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   219   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   220   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   221  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   223  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   224  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   225  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   226  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   227  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   228   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   229   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   230   *   User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   231   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   232   *   ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   233   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   234   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   235   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   237  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   238  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   239  /** \brief API to Clear global ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   240   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   241   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   242   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   243   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   244   * always set the ENDINIT bit using other API IfxScuWdt_setGlobalEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   245   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   246   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getGlobalEndinitPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   247   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   248   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   250  IFX_EXTERN void IfxScuWdt_clearGlobalEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   251  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   252  /** \brief API to Clear global safety ENDINIT bit provided by safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   253   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   254   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   255   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   256   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   257   * always set the ENDINIT bit using other API IfxScuWdt_setGlobalSafetyEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   258   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   259   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getGlobalSafetyEndinitPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   260   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   261   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   262   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   263  IFX_EXTERN void IfxScuWdt_clearGlobalSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   265  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   266   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   267   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   268   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   269   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   270   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   271   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   272   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   275  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   277  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   278   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   279   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   280   *   User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   281   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   282   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   285  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   287  /** \brief API to set global ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   288   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   289   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   290   *   User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   291   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getGlobalEndinitPassword)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   292   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   293   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   294   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   295  IFX_EXTERN void IfxScuWdt_setGlobalEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   297  /** \brief API to set global safety ENDINIT bit provided by safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   298   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   299   *   This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   300   *   User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   301   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getGlobalSafetyEndinitPassword)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   302   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   303   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   304   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   305  IFX_EXTERN void IfxScuWdt_setGlobalSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   307  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   308   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   309   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   310   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   311   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   312   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   313   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   314   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   315  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   316  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   317  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   319  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   320   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   322  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   323  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   324  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   326  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   327   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   328   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   329   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   330   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   331   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   332   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   333   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   334   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   335  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   336  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   337  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   338   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   339   * \return Endinit status for the CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   340   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   341  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   343  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   344   * \return Endinit status for the Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   345   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   346  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   347  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   348  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   349   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   350   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   351   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   352   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   353   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   354   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   355   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   356  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   358  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   359  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   360  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   361  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   362  /** \brief SCUWDT API to change CPU Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   363   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   364   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   365   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   366   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   367   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   368   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   370  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   372  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   373   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   374   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   375   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   376   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   377   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   378   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   379   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   380   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   381  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   383  /** \brief API to change global endinit password.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   384   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   385   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   386   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getGlobalEndinitPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   387   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   388   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   390   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   391  IFX_EXTERN void IfxScuWdt_changeGlobalEndinitPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   393  /** \brief API to change global safety endinit password.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   394   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   395   *   This API will change password to new one for the corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   396   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getGlobalSafetyEndinitPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   397   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   398   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   399   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   400   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   401  IFX_EXTERN void IfxScuWdt_changeGlobalSafetyEndinitPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   403  /** \brief SCUWDT API to change Safety Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   404   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   405   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   406   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   407   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   408   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   409   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   410   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   411  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   412  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   413  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   414   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   415   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   416   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   417   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   418   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   419   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   420   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   422  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   423  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   424  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   425   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   426   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   427   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   428   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   429   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   432  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   434  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   435   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   436   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   437   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   438   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   439   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   442  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   444  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   445   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   446   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   447   *   periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   448   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   449   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   450   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   451   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   452  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   453  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   454  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   455   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   456   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   457   * periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   458   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   459   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   462  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   464  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   465   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   466   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   467   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   468   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   469   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   470   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   471  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   472  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   473  /** \brief SCUWDT API to fetch current endinit of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   474   * \return Endinit status for the CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   475   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   476  IFX_EXTERN boolean IfxScuWdt_getCpuWatchdogEndInit(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   477  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   478  /** \brief API to fetch current password of global endinit Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   479   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   480   * This API will fetch current global endinit password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   481   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   482   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   483   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   484   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   485   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   486  IFX_EXTERN uint16 IfxScuWdt_getGlobalEndinitPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   488  /** \brief API to fetch current password of global safety endinit Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   489   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   490   * This API will fetch current global endinit password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   491   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   492   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   493   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   494   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   496  IFX_EXTERN uint16 IfxScuWdt_getGlobalSafetyEndinitPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   498  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   500   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   501   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   502   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   503   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   504   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   505  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   506  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   507  /** \brief SCUWDT API to service CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   508   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   509   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   510   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   511   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   512   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   515  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   517  /** \brief SCUWDT API to service Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   518   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   519   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   520   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   521   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   522   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   523   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   524   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   525  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   526  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   527  /** \brief SCUWDT API to fetch current status of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   528   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   529   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   530  IFX_EXTERN uint8 IfxScuWdt_getCpuWatchdogStatus(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   532  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   534  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   535  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   536  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   538  /** \brief Enables the watchdog functionality with debugger connected,\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   539   * debug interface will also be enabled, if not enabled already.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   540   * \return Status, Success = 0, Failure = 1.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   542  IFX_EXTERN boolean IfxScuWdt_enableWatchdogWithDebugger(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   544  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   545  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   546  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   548  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   550      if (watchdog->CON0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   551      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   552          /* see Table 1 (Password Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   553          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   554                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   555                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   556                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   557      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   559      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   560      watchdog->CON0.U = (0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   561                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   562                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   563                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   565      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   566      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   567      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   568  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   569  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   571  IFX_INLINE void IfxScuWdt_clearGlobalSafetyEndinitInline(uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   572  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   573      /* Clear EndInit Watch-dog*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   574      MODULE_SCU.SEICON0.U = (0xFFFCU << 16U) | (password << IFX_SCU_SEICON0_EPW_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   576      while (MODULE_SCU.SEICON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   577      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   578  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   579  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   580  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   581  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   582  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   583      if (SCU_WDTS_CON0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   584      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   585          /* see Table 1 (Password Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   586          SCU_WDTS_CON0.U = (1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   587                            (0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   588                            (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   589                            (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   590      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   591  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   592      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   593      SCU_WDTS_CON0.U = (0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   594                        (1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   595                        (password << IFX_SCU_WDTS_CON0_PW_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   596                        (SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   598      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   599      while (SCU_WDTS_CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   600      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   601  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   604  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   605  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   606      uint16 password;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   608      /* Read Password from CON0 register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   609       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   610       * to toggle them before returning password */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   611      password  = watchdog->CON0.B.PW;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   612      password ^= 0x003F;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   614      return password;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   615  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   617  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   618  IFX_INLINE boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   619  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   620      return (boolean)watchdog->CON0.B.ENDINIT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   621  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   622  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   624  IFX_INLINE uint16 IfxScuWdt_getGlobalSafetyEndinitPasswordInline(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   625  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   626      /* Read Password from CON0 register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   627       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   628       * to toggle them before returning password */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   630      uint16 password = MODULE_SCU.SEICON0.B.EPW ^ 0x003F;
	ld.w	d15,.2.cnt
.L54:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     2   * \file IfxPmsEvr.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     3   * \brief PMS  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     4   * \ingroup IfxLld_Pms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    41   * \defgroup IfxLld_Pms_Std_Evr EVR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    42   * \ingroup IfxLld_Pms_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    43   * \defgroup IfxLld_Pms_Std_Evr_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    44   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    45   * \defgroup IfxLld_Pms_Std_Evr_Over-Voltage Over Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    46   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    47   * \defgroup IfxLld_Pms_Std_Evr_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    48   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    49   * \defgroup IfxLld_Pms_Std_Evr_Under-Voltage Under Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    50   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    51   * \defgroup IfxLld_Pms_Std_Evr_EVRC EVRC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    52   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    53   * \defgroup IfxLld_Pms_Std_Evr_EVR33 EVR33 Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    54   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    55   * \defgroup IfxLld_Pms_Std_Evr_SWD SWD Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    56   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    59  #ifndef IFXPMSEVR_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    60  #define IFXPMSEVR_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    62  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    63  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    66  #include "_Impl/IfxPms_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    67  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    69  #include "IfxPms_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    70  #include "IfxPms_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    71  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    72  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    74  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    75  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    78  #define IFXPMSEVR_ADC_VDD_LSB               (0.005f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    80  #define IFXPMSEVR_ADC_VDDP3_LSB             (0.015f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    82  #define IFXPMSEVR_ADC_VEXT_LSB              (0.02f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    84  #define IFXPMSEVR_CTRL_UP_WAIT_TIMEOUTCOUNT (0x100)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    86  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    87  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    88  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    89  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    90  /** \addtogroup IfxLld_Pms_Std_Evr_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    91   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    92  /** \brief Configure respective interrupts define in register Ifx_PMS.PMSIEN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    93   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    94  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    95  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    96      IfxPmsEvr_EnableInterrupt_ovswd   = 0,   /**< \brief OVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    97      IfxPmsEvr_EnableInterrupt_uvswd   = 1,   /**< \brief UVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    98      IfxPmsEvr_EnableInterrupt_ov33    = 2,   /**< \brief OV33Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    99      IfxPmsEvr_EnableInterrupt_uv33    = 3,   /**< \brief UV33 Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   100      IfxPmsEvr_EnableInterrupt_ovc     = 4,   /**< \brief OVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   101      IfxPmsEvr_EnableInterrupt_uvc     = 5,   /**< \brief UVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   102      IfxPmsEvr_EnableInterrupt_ovpre   = 6,   /**< \brief OVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   103      IfxPmsEvr_EnableInterrupt_uvpre   = 7,   /**< \brief UVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   104      IfxPmsEvr_EnableInterrupt_ovddm   = 8,   /**< \brief OVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   105      IfxPmsEvr_EnableInterrupt_uvddm   = 9,   /**< \brief UVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   106      IfxPmsEvr_EnableInterrupt_ovsb    = 10,  /**< \brief OVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   107      IfxPmsEvr_EnableInterrupt_uvsb    = 11,  /**< \brief UVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   108      IfxPmsEvr_EnableInterrupt_evrcmod = 16,  /**< \brief EVRCMOD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   109      IfxPmsEvr_EnableInterrupt_sdvok   = 17,  /**< \brief SDVOK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   110      IfxPmsEvr_EnableInterrupt_synclck = 18,  /**< \brief SD SYNCLCK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   111      IfxPmsEvr_EnableInterrupt_swdlvl  = 19,  /**< \brief SWDLVL Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   112      IfxPmsEvr_EnableInterrupt_wutwkp  = 21,  /**< \brief WUT WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   113      IfxPmsEvr_EnableInterrupt_esr0wkp = 22,  /**< \brief ESR0 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   114      IfxPmsEvr_EnableInterrupt_esr1wkp = 23,  /**< \brief ESR1 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   115      IfxPmsEvr_EnableInterrupt_pinawkp = 24,  /**< \brief PINA WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   116      IfxPmsEvr_EnableInterrupt_pinbwkp = 25,  /**< \brief PINB WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   117      IfxPmsEvr_EnableInterrupt_scrint  = 26,  /**< \brief SCR INT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   118      IfxPmsEvr_EnableInterrupt_scrrst  = 27,  /**< \brief SCR RST Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   119      IfxPmsEvr_EnableInterrupt_screcc  = 28,  /**< \brief SCR ECC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   120      IfxPmsEvr_EnableInterrupt_scrwdt  = 29   /**< \brief SCR WDT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   121  } IfxPmsEvr_EnableInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   123  /** \brief Current operation mode of EVRC Regulator defined in Ifx_PMS.EVR.STAT.B.EVRCMOD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   125  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   126  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   127      IfxPmsEvr_EvrcMode_pwmMode      = 0,  /**< \brief The step-down converter is in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   128                                            * normal operational closed loop state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   129      IfxPmsEvr_EvrcMode_lowPowerMode = 1,  /**< \brief The step-down converter is in low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   130                                             * power state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   131      IfxPmsEvr_EvrcMode_startupMode  = 2,  /**< \brief The step-down converter is in start-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   132                                             * phase */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   133      IfxPmsEvr_EvrcMode_disableMode  = 3   /**< \brief EVRC is Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   134  } IfxPmsEvr_EvrcMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   136  /** \brief Switching frequency division factor for external synchronisation defined in Ifx_PMS.EVRSDCTRL7.B.SYNCDIVFAC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   137   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   138  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   139  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   140      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_1  = 0,  /**< \brief fDCDCSYNC = fDCDC. The actual duty cycle is routed. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   141      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_2  = 1,  /**< \brief fDCDCSYNC = fDCDC/2. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   142      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_4  = 2,  /**< \brief fDCDCSYNC = fDCDC/4. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   143      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_8  = 3,  /**< \brief fDCDCSYNC = fDCDC/8. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   144      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_16 = 4,  /**< \brief fDCDCSYNC = fDCDC/16. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   145      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_32 = 5   /**< \brief fDCDCSYNC = fDCDC/32. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   146  } IfxPmsEvr_ExtSyncSwitchingFreqDivFactor;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   148  /** \brief Monitoring OverVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   149   * in .Ifx_PMS.EVR.MONCTRL register for overvoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   153      IfxPmsEvr_OverVoltageMonitoring_inactive                         = 0, /**< \brief Over-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   154      IfxPmsEvr_OverVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief Over-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   155      IfxPmsEvr_OverVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Over-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   156      IfxPmsEvr_OverVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Over-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   157  } IfxPmsEvr_OverVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   159  /** \brief set TRIM Value For respective Voltages.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   160   * Defined in Ifx_PMS.EVR.TRIM and Ifx_PMS.EVR.TRIM2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   161   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   162  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   163  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   164      IfxPmsEvr_PrimaryAdcTrimValue_0 = 0,      /**< \brief Primary Adc Trim Value 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   165      IfxPmsEvr_PrimaryAdcTrimValue_1,          /**< \brief Primary Adc Trim Value 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   166      IfxPmsEvr_PrimaryAdcTrimValue_2,          /**< \brief Primary Adc Trim Value 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   167      IfxPmsEvr_PrimaryAdcTrimValue_3,          /**< \brief Primary Adc Trim Value 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   168      IfxPmsEvr_PrimaryAdcTrimValue_4,          /**< \brief Primary Adc Trim Value 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   169      IfxPmsEvr_PrimaryAdcTrimValue_5,          /**< \brief Primary Adc Trim Value 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   170      IfxPmsEvr_PrimaryAdcTrimValue_6,          /**< \brief Primary Adc Trim Value 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   171      IfxPmsEvr_PrimaryAdcTrimValue_7,          /**< \brief Primary Adc Trim Value 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   172      IfxPmsEvr_PrimaryAdcTrimValue_8,          /**< \brief Primary Adc Trim Value 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   173      IfxPmsEvr_PrimaryAdcTrimValue_9,          /**< \brief Primary Adc Trim Value 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   174      IfxPmsEvr_PrimaryAdcTrimValue_10,         /**< \brief Primary Adc Trim Value 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   175      IfxPmsEvr_PrimaryAdcTrimValue_11,         /**< \brief Primary Adc Trim Value 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   176      IfxPmsEvr_PrimaryAdcTrimValue_12,         /**< \brief Primary Adc Trim Value 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   177      IfxPmsEvr_PrimaryAdcTrimValue_13,         /**< \brief Primary Adc Trim Value 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   178      IfxPmsEvr_PrimaryAdcTrimValue_14,         /**< \brief Primary Adc Trim Value 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   179      IfxPmsEvr_PrimaryAdcTrimValue_15,         /**< \brief Primary Adc Trim Value 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   180      IfxPmsEvr_PrimaryAdcTrimValue_16,         /**< \brief Primary Adc Trim Value 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   181      IfxPmsEvr_PrimaryAdcTrimValue_17,         /**< \brief Primary Adc Trim Value 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   182      IfxPmsEvr_PrimaryAdcTrimValue_18,         /**< \brief Primary Adc Trim Value 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   183      IfxPmsEvr_PrimaryAdcTrimValue_19,         /**< \brief Primary Adc Trim Value 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   184      IfxPmsEvr_PrimaryAdcTrimValue_20,         /**< \brief Primary Adc Trim Value 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   185      IfxPmsEvr_PrimaryAdcTrimValue_21,         /**< \brief Primary Adc Trim Value 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   186      IfxPmsEvr_PrimaryAdcTrimValue_22,         /**< \brief Primary Adc Trim Value 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   187      IfxPmsEvr_PrimaryAdcTrimValue_23,         /**< \brief Primary Adc Trim Value 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   188      IfxPmsEvr_PrimaryAdcTrimValue_24,         /**< \brief Primary Adc Trim Value 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   189      IfxPmsEvr_PrimaryAdcTrimValue_25,         /**< \brief Primary Adc Trim Value 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   190      IfxPmsEvr_PrimaryAdcTrimValue_26,         /**< \brief Primary Adc Trim Value 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   191      IfxPmsEvr_PrimaryAdcTrimValue_27,         /**< \brief Primary Adc Trim Value 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   192      IfxPmsEvr_PrimaryAdcTrimValue_28,         /**< \brief Primary Adc Trim Value 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   193      IfxPmsEvr_PrimaryAdcTrimValue_29,         /**< \brief Primary Adc Trim Value 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   194      IfxPmsEvr_PrimaryAdcTrimValue_30,         /**< \brief Primary Adc Trim Value 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   195      IfxPmsEvr_PrimaryAdcTrimValue_31,         /**< \brief Primary Adc Trim Value 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   196      IfxPmsEvr_PrimaryAdcTrimValue_32,         /**< \brief Primary Adc Trim Value 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   197      IfxPmsEvr_PrimaryAdcTrimValue_33,         /**< \brief Primary Adc Trim Value 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   198      IfxPmsEvr_PrimaryAdcTrimValue_34,         /**< \brief Primary Adc Trim Value 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   199      IfxPmsEvr_PrimaryAdcTrimValue_35,         /**< \brief Primary Adc Trim Value 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   200      IfxPmsEvr_PrimaryAdcTrimValue_36,         /**< \brief Primary Adc Trim Value 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   201      IfxPmsEvr_PrimaryAdcTrimValue_37,         /**< \brief Primary Adc Trim Value 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   202      IfxPmsEvr_PrimaryAdcTrimValue_38,         /**< \brief Primary Adc Trim Value 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   203      IfxPmsEvr_PrimaryAdcTrimValue_39,         /**< \brief Primary Adc Trim Value 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   204      IfxPmsEvr_PrimaryAdcTrimValue_40,         /**< \brief Primary Adc Trim Value 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   205      IfxPmsEvr_PrimaryAdcTrimValue_41,         /**< \brief Primary Adc Trim Value 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   206      IfxPmsEvr_PrimaryAdcTrimValue_42,         /**< \brief Primary Adc Trim Value 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   207      IfxPmsEvr_PrimaryAdcTrimValue_43,         /**< \brief Primary Adc Trim Value 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   208      IfxPmsEvr_PrimaryAdcTrimValue_44,         /**< \brief Primary Adc Trim Value 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   209      IfxPmsEvr_PrimaryAdcTrimValue_45,         /**< \brief Primary Adc Trim Value 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   210      IfxPmsEvr_PrimaryAdcTrimValue_46,         /**< \brief Primary Adc Trim Value 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   211      IfxPmsEvr_PrimaryAdcTrimValue_47,         /**< \brief Primary Adc Trim Value 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   212      IfxPmsEvr_PrimaryAdcTrimValue_48,         /**< \brief Primary Adc Trim Value 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   213      IfxPmsEvr_PrimaryAdcTrimValue_49,         /**< \brief Primary Adc Trim Value 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   214      IfxPmsEvr_PrimaryAdcTrimValue_50,         /**< \brief Primary Adc Trim Value 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   215      IfxPmsEvr_PrimaryAdcTrimValue_51,         /**< \brief Primary Adc Trim Value 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   216      IfxPmsEvr_PrimaryAdcTrimValue_52,         /**< \brief Primary Adc Trim Value 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   217      IfxPmsEvr_PrimaryAdcTrimValue_53,         /**< \brief Primary Adc Trim Value 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   218      IfxPmsEvr_PrimaryAdcTrimValue_54,         /**< \brief Primary Adc Trim Value 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   219      IfxPmsEvr_PrimaryAdcTrimValue_55,         /**< \brief Primary Adc Trim Value 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   220      IfxPmsEvr_PrimaryAdcTrimValue_56,         /**< \brief Primary Adc Trim Value 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   221      IfxPmsEvr_PrimaryAdcTrimValue_57,         /**< \brief Primary Adc Trim Value 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   222      IfxPmsEvr_PrimaryAdcTrimValue_58,         /**< \brief Primary Adc Trim Value 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   223      IfxPmsEvr_PrimaryAdcTrimValue_59,         /**< \brief Primary Adc Trim Value 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   224      IfxPmsEvr_PrimaryAdcTrimValue_60,         /**< \brief Primary Adc Trim Value 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   225      IfxPmsEvr_PrimaryAdcTrimValue_61,         /**< \brief Primary Adc Trim Value 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   226      IfxPmsEvr_PrimaryAdcTrimValue_62,         /**< \brief Primary Adc Trim Value 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   227      IfxPmsEvr_PrimaryAdcTrimValue_63          /**< \brief Primary Adc Trim Value 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   228  } IfxPmsEvr_PrimaryAdcTrimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   230  /** \brief This Declare the Under and overvoltage counter defined in Ifx_PMS.EVR.MONFILT.B.ERRCNTLIMT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   232  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   233  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   234      IfxPmsEvr_SecondaryVoltageErrorCounter_level0 = 0,      /**< \brief Error Counter Limit 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   235      IfxPmsEvr_SecondaryVoltageErrorCounter_level1,          /**< \brief Error Counter Limit 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   236      IfxPmsEvr_SecondaryVoltageErrorCounter_level2,          /**< \brief Error Counter Limit 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   237      IfxPmsEvr_SecondaryVoltageErrorCounter_level3,          /**< \brief Error Counter Limit 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   238      IfxPmsEvr_SecondaryVoltageErrorCounter_level4,          /**< \brief Error Counter Limit 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   239      IfxPmsEvr_SecondaryVoltageErrorCounter_level5,          /**< \brief Error Counter Limit 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   240      IfxPmsEvr_SecondaryVoltageErrorCounter_level6,          /**< \brief Error Counter Limit 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   241      IfxPmsEvr_SecondaryVoltageErrorCounter_level7,          /**< \brief Error Counter Limit 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   242      IfxPmsEvr_SecondaryVoltageErrorCounter_level8,          /**< \brief Error Counter Limit 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   243      IfxPmsEvr_SecondaryVoltageErrorCounter_level9,          /**< \brief Error Counter Limit 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   244      IfxPmsEvr_SecondaryVoltageErrorCounter_level10,         /**< \brief Error Counter Limit 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   245      IfxPmsEvr_SecondaryVoltageErrorCounter_level11,         /**< \brief Error Counter Limit 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   246      IfxPmsEvr_SecondaryVoltageErrorCounter_level12,         /**< \brief Error Counter Limit 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   247      IfxPmsEvr_SecondaryVoltageErrorCounter_level13,         /**< \brief Error Counter Limit 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   248      IfxPmsEvr_SecondaryVoltageErrorCounter_level14,         /**< \brief Error Counter Limit 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   249      IfxPmsEvr_SecondaryVoltageErrorCounter_level15,         /**< \brief Error Counter Limit 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   250      IfxPmsEvr_SecondaryVoltageErrorCounter_level16,         /**< \brief Error Counter Limit 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   251      IfxPmsEvr_SecondaryVoltageErrorCounter_level17,         /**< \brief Error Counter Limit 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   252      IfxPmsEvr_SecondaryVoltageErrorCounter_level18,         /**< \brief Error Counter Limit 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   253      IfxPmsEvr_SecondaryVoltageErrorCounter_level19,         /**< \brief Error Counter Limit 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   254      IfxPmsEvr_SecondaryVoltageErrorCounter_level20,         /**< \brief Error Counter Limit 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   255      IfxPmsEvr_SecondaryVoltageErrorCounter_level21,         /**< \brief Error Counter Limit 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   256      IfxPmsEvr_SecondaryVoltageErrorCounter_level22,         /**< \brief Error Counter Limit 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   257      IfxPmsEvr_SecondaryVoltageErrorCounter_level23,         /**< \brief Error Counter Limit 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   258      IfxPmsEvr_SecondaryVoltageErrorCounter_level24,         /**< \brief Error Counter Limit 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   259      IfxPmsEvr_SecondaryVoltageErrorCounter_level25,         /**< \brief Error Counter Limit 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   260      IfxPmsEvr_SecondaryVoltageErrorCounter_level26,         /**< \brief Error Counter Limit 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   261      IfxPmsEvr_SecondaryVoltageErrorCounter_level27,         /**< \brief Error Counter Limit 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   262      IfxPmsEvr_SecondaryVoltageErrorCounter_level28,         /**< \brief Error Counter Limit 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   263      IfxPmsEvr_SecondaryVoltageErrorCounter_level29,         /**< \brief Error Counter Limit 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   264      IfxPmsEvr_SecondaryVoltageErrorCounter_level30,         /**< \brief Error Counter Limit 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   265      IfxPmsEvr_SecondaryVoltageErrorCounter_level31,         /**< \brief Error Counter Limit 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   266      IfxPmsEvr_SecondaryVoltageErrorCounter_level32,         /**< \brief Error Counter Limit 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   267      IfxPmsEvr_SecondaryVoltageErrorCounter_level33,         /**< \brief Error Counter Limit 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   268      IfxPmsEvr_SecondaryVoltageErrorCounter_level34,         /**< \brief Error Counter Limit 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   269      IfxPmsEvr_SecondaryVoltageErrorCounter_level35,         /**< \brief Error Counter Limit 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   270      IfxPmsEvr_SecondaryVoltageErrorCounter_level36,         /**< \brief Error Counter Limit 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   271      IfxPmsEvr_SecondaryVoltageErrorCounter_level37,         /**< \brief Error Counter Limit 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   272      IfxPmsEvr_SecondaryVoltageErrorCounter_level38,         /**< \brief Error Counter Limit 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   273      IfxPmsEvr_SecondaryVoltageErrorCounter_level39,         /**< \brief Error Counter Limit 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   274      IfxPmsEvr_SecondaryVoltageErrorCounter_level40,         /**< \brief Error Counter Limit 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   275      IfxPmsEvr_SecondaryVoltageErrorCounter_level41,         /**< \brief Error Counter Limit 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   276      IfxPmsEvr_SecondaryVoltageErrorCounter_level42,         /**< \brief Error Counter Limit 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   277      IfxPmsEvr_SecondaryVoltageErrorCounter_level43,         /**< \brief Error Counter Limit 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   278      IfxPmsEvr_SecondaryVoltageErrorCounter_level44,         /**< \brief Error Counter Limit 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   279      IfxPmsEvr_SecondaryVoltageErrorCounter_level45,         /**< \brief Error Counter Limit 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   280      IfxPmsEvr_SecondaryVoltageErrorCounter_level46,         /**< \brief Error Counter Limit 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   281      IfxPmsEvr_SecondaryVoltageErrorCounter_level47,         /**< \brief Error Counter Limit 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   282      IfxPmsEvr_SecondaryVoltageErrorCounter_level48,         /**< \brief Error Counter Limit 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   283      IfxPmsEvr_SecondaryVoltageErrorCounter_level49,         /**< \brief Error Counter Limit 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   284      IfxPmsEvr_SecondaryVoltageErrorCounter_level50,         /**< \brief Error Counter Limit 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   285      IfxPmsEvr_SecondaryVoltageErrorCounter_level51,         /**< \brief Error Counter Limit 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   286      IfxPmsEvr_SecondaryVoltageErrorCounter_level52,         /**< \brief Error Counter Limit 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   287      IfxPmsEvr_SecondaryVoltageErrorCounter_level53,         /**< \brief Error Counter Limit 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   288      IfxPmsEvr_SecondaryVoltageErrorCounter_level54,         /**< \brief Error Counter Limit 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   289      IfxPmsEvr_SecondaryVoltageErrorCounter_level55,         /**< \brief Error Counter Limit 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   290      IfxPmsEvr_SecondaryVoltageErrorCounter_level56,         /**< \brief Error Counter Limit 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   291      IfxPmsEvr_SecondaryVoltageErrorCounter_level57,         /**< \brief Error Counter Limit 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   292      IfxPmsEvr_SecondaryVoltageErrorCounter_level58,         /**< \brief Error Counter Limit 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   293      IfxPmsEvr_SecondaryVoltageErrorCounter_level59,         /**< \brief Error Counter Limit 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   294      IfxPmsEvr_SecondaryVoltageErrorCounter_level60,         /**< \brief Error Counter Limit 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   295      IfxPmsEvr_SecondaryVoltageErrorCounter_level61,         /**< \brief Error Counter Limit 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   296      IfxPmsEvr_SecondaryVoltageErrorCounter_level62,         /**< \brief Error Counter Limit 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   297      IfxPmsEvr_SecondaryVoltageErrorCounter_level63          /**< \brief Error Counter Limit 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   298  } IfxPmsEvr_SecondaryVoltageErrorCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   300  /** \brief ADC result for the generating Alarm declare in Ifx_PMS.EVR.MONFILT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   301   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   302  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   303  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   304      IfxPmsEvr_SupplyFilter_eachConversionResult    = 0,    /**< \brief Each conversion result is compared with threshold to generate alarm */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   305      IfxPmsEvr_SupplyFilter_avgAdcConversionResult0 = 1,    /**< \brief A moving mean average of consecutive 0 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   306      IfxPmsEvr_SupplyFilter_avgAdcConversionResult1,        /**< \brief A moving mean average of consecutive 1 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   307      IfxPmsEvr_SupplyFilter_avgAdcConversionResult2,        /**< \brief A moving mean average of consecutive 2 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   308      IfxPmsEvr_SupplyFilter_avgAdcConversionResult3,        /**< \brief A moving mean average of consecutive 3 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   309      IfxPmsEvr_SupplyFilter_avgAdcConversionResult4,        /**< \brief A moving mean average of consecutive 4 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   310      IfxPmsEvr_SupplyFilter_avgAdcConversionResult5,        /**< \brief A moving mean average of consecutive 5 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   311      IfxPmsEvr_SupplyFilter_avgAdcConversionResult6,        /**< \brief A moving mean average of consecutive 6 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   312      IfxPmsEvr_SupplyFilter_avgAdcConversionResult7,        /**< \brief A moving mean average of consecutive 7 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   313      IfxPmsEvr_SupplyFilter_avgAdcConversionResult8,        /**< \brief A moving mean average of consecutive 8 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   314      IfxPmsEvr_SupplyFilter_avgAdcConversionResult9,        /**< \brief A moving mean average of consecutive 9 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   315      IfxPmsEvr_SupplyFilter_avgAdcConversionResult10,       /**< \brief A moving mean average of consecutive 10 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   316      IfxPmsEvr_SupplyFilter_avgAdcConversionResult11,       /**< \brief A moving mean average of consecutive 11 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   317      IfxPmsEvr_SupplyFilter_avgAdcConversionResult12,       /**< \brief A moving mean average of consecutive 12 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   318      IfxPmsEvr_SupplyFilter_avgAdcConversionResult13,       /**< \brief A moving mean average of consecutive 13 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   319      IfxPmsEvr_SupplyFilter_avgAdcConversionResult14        /**< \brief A moving mean average of consecutive 14 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   320  } IfxPmsEvr_SupplyFilter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   322  /** \brief Controls the voltage supply Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   323   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   324  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   325  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   326      IfxPmsEvr_SupplyMode_evrc  = 0,  /**< \brief select EVRC regulator or VDD Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   327      IfxPmsEvr_SupplyMode_evr33 = 1,  /**< \brief select EVR33 regulator or VDDP3 Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   328      IfxPmsEvr_SupplyMode_swd   = 2,  /**< \brief select  external VEXT suppy watchdog */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   329      IfxPmsEvr_SupplyMode_evrpr = 3,  /**< \brief select EVRPR or VDDPD supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   330      IfxPmsEvr_SupplyMode_vddm  = 4,  /**< \brief VDDM ADC Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   331      IfxPmsEvr_SupplyMode_sb    = 5   /**< \brief EVR Standby Supply or VEVRSB supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   332  } IfxPmsEvr_SupplyMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   334  /** \brief Monitoring underVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   335   * in Ifx_PMS.EVR.MONCTRL register for undervoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   336   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   337  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   338  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   339      IfxPmsEvr_UnderVoltageMonitoring_inactive                         = 0, /**< \brief Under-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   340      IfxPmsEvr_UnderVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief under-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   341      IfxPmsEvr_UnderVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Under-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   342      IfxPmsEvr_UnderVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Under-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   343  } IfxPmsEvr_UnderVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   344  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   345  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   346  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   347  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   348  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   349  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   351  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   352  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   353      volatile void *regAddr;       /**< \brief Register Address to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   354      uint32         value;         /**< \brief Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   355      uint32         mask;          /**< \brief Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   356  } IfxPmsEvr_StepDownRegulatorRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   358  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   359  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   360      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   361      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   362      float32                                         waitInSecs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   363  } IfxPmsEvr_initSequencePhase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   365  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   366  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   367      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   368      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   369  } IfxPmsEvr_checkRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   371  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   372  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   373      uint8                                  numOfPhases;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   374      IFX_CONST IfxPmsEvr_initSequencePhase *phaseConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   375  } IfxPmsEvr_initSequence;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   377  /** \addtogroup IfxLld_Pms_Std_Evr_Over-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   378   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   380  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   384  /** \brief set Over Voltage Monitoring Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   385   * \param pms pointer to the Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   386   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   387   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   388   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   390  IFX_INLINE void IfxPmsEvr_setOverVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_OverVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   392  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   393  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   394  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   396  /** \brief set Secondary Over Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   397   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   398   * \param thresholdLevel over-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   399   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   400   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   402   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   403  IFX_EXTERN void IfxPmsEvr_setSecondaryOverVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   404  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   405  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   407  /** \addtogroup IfxLld_Pms_Std_Evr_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   408   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   410  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   411  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   412  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   414  /** \brief Configure a Blanking Filter Delay
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   415   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   416   * \param delay Blanking Filter Delay in ms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   419  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   421  /** \brief This function enables the synchronisation output to synchronize the external
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   422   * SMPS regulator with respect to the internal EVRC regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   423   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   424   * \param enabled enable/disable DC-DC synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   425   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   426   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   427  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   429  /** \brief Enable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   430   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   431   * \param interruptType Select The Interrupt Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   432   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   433   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   434  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   435  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   436  /** \brief enables wakeup on VEXT supply ramp-up after blanking filter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   437   * time has expired
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   438   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   439   * \param enabled Wake-up Enable on VEXT Supply ramp-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   442  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   444  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   445   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   446   * \param trimValue OSC fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   448   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   449  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   450  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   451  /** \brief set frequency spread threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   452   * \param pms pointer to PMS module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   453   * \param thresholdLevel maximum frequency spreading value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   456  IFX_INLINE void IfxPmsEvr_setFrequencySpreadThreshold(Ifx_PMS *pms, uint16 thresholdLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   458  /** \brief This configures the state of N ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   459   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   460   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   461   * \param nmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   464  IFX_INLINE void IfxPmsEvr_setNmosLevel(Ifx_PMS *pms, boolean nmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   466  /** \brief This configures the state of P ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   467   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   468   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   469   * \param pmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   472  IFX_INLINE void IfxPmsEvr_setPmosLevel(Ifx_PMS *pms, boolean pmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   474  /** \brief set regulator switching frequency in Hz....(100MHz/samplingFactor)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   475   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   476   * \param samplingFactor Over-sampling Factor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   477   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   478   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   479  IFX_INLINE void IfxPmsEvr_setRegulatorSwitchingFrequency(Ifx_PMS *pms, uint16 samplingFactor);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   481  /** \brief set reset trim value for EVRC,EVR33 and external VEXT supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   482   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   483   * \param resetTrimValue Reset Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   484   * \param supply select EVRC,EVR33 regulator or external VEXT supply watchdog
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   487  IFX_INLINE void IfxPmsEvr_setResetTrimValueMv(Ifx_PMS *pms, float32 resetTrimValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   489  /** \brief SD Regulator Voltage Target selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   490   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   491   * \param outputLevel The VDD output level of the Step down regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   494  IFX_INLINE void IfxPmsEvr_setSdRegulatorOutputLevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   496  /** \brief SD Regulator Voltage Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   497   * \param pms Pointer to PMS Moule Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   498   * \param trimValue offset added to the VDD output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   499   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   501  IFX_INLINE void IfxPmsEvr_setSdRegulatorPrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   503  /** \brief set DLMU RAM Block in Standby Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   504   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   505   * \param ramBlock DLMU RAM block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   506   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   507   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   508  IFX_INLINE void IfxPmsEvr_setStandbyRamSupply(Ifx_PMS *pms, uint8 ramBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   509  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   510  /** \brief Set Switching frequency division factor for external synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   511   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   512   * \param divider Switching frequency division factor for external synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   515  IFX_INLINE void IfxPmsEvr_setSwitchingFreqDivFactorForExternalsync(Ifx_PMS *pms, IfxPmsEvr_ExtSyncSwitchingFreqDivFactor divider);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   517  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   518   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   519   * \param trimValue OSC Signed fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   520   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   521   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   522  IFX_INLINE void IfxPmsEvr_signedFineTrimEvrClock(Ifx_PMS *pms, sint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   525  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   526  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   528  /** \brief filter the  each conversion result or avarage of consecutive adc result to compare with threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   529   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   530   * \param adcFilterValue specify average of consecutive ADC results
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   531   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   532   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   534  IFX_EXTERN void IfxPmsEvr_filterSecondaryConversionResult(Ifx_PMS *pms, IfxPmsEvr_SupplyFilter adcFilterValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   536  /** \brief get secondray ADC result for respective Voltage supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   537   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   538   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   539   * \return last conversion result of the ADC measurement
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   540   * of respective voltage by secondary monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   542  IFX_EXTERN uint8 IfxPmsEvr_getSecondaryAdcResult(Ifx_PMS *pms, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   544  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   546  /** \addtogroup IfxLld_Pms_Std_Evr_Under-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   547   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   549  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   550  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   551  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   553  /** \brief set Under Voltage Monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   554   * \param pms Pointer to the PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   555   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   556   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   557   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   558   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   559  IFX_INLINE void IfxPmsEvr_setUnderVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_UnderVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   560  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   561  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   562  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   563  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   565  /** \brief set Secondary under Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   566   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   567   * \param thresholdLevel under-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   568   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   569   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   570   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   571   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   572  IFX_EXTERN void IfxPmsEvr_setSecondaryUnderVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   574  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   576  /** \addtogroup IfxLld_Pms_Std_Evr_EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   577   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   579  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   580  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   581  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   583  /** \brief Enabled/Disable Reset Trigger signal for EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   584   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   585   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   586   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   588  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   590  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   591   * \param averageADCC Average value of PMS_EVRADCSTAT.ADCCV.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   592   * \return ADC VDD Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   594  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   596  /** \brief get current operating mode of EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   597   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   598   * \return EVRC Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   599   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   600  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   602  /** \brief get EVRC Regulator Voltage status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   603   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   604   * \return EVRC Regulator Voltage OK status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   605   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   606  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   608  /** \brief get ADC 1.25 V Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   609   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   610   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   611   * the VDD / EVRC supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   613  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   615  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   617  /** \addtogroup IfxLld_Pms_Std_Evr_EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   618   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   620  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   621  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   624  /** \brief Enabled/Disable Reset Trigger signal for EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   625   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   626   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   627   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   628   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   629  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   631  /** \brief get ADC 3.3 V Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   632   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   633   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   634   * the VDDP3 / EVR33 supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   635   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   636  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   638  /** \brief set 3.3 V Regulator Voltage Primary ADC Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   639   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   640   * \param trimValue Trimming value offeset added to Output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   641   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   642   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   643  IFX_INLINE void IfxPmsEvr_setEvr33PrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   645  /** \brief The VDDP3 output level of the EVR33 LDO regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   646   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   647   * \param outputLevel define VDDP3 output level of the EVR33 LDO regulator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   648   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   649   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   650  IFX_INLINE void IfxPmsEvr_setEvr33VoltageOutputlevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   652  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   653  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   654  /** \addtogroup IfxLld_Pms_Std_Evr_SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   655   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   657  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   658  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   659  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   660  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   661  /** \brief get ADC External Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   662   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   663   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   664   * the external VEXT (3.3V / 5V) supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   665   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   666  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   668  /** \brief Enabled/Disable Reset Trigger signal for SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   669   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   670   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   671   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   673  IFX_INLINE void IfxPmsEvr_swdResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   675  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   678  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   679  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   681  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   682   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   683  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   685  /** \brief Disable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   686   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   687   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   688  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   690  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   691   * \param averageADC33V Average of PMS_EVRSTAT.ADC33V values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   692   * \return ADC VDDP3 Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   693   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   694  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   696  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   697   * \param averageADCSWDV Average of PMS_EVRADCSTAT.ADCSWDV values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   698   * \return ADC VEXT Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   699   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   700  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   702  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   703   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   704  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   706  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   707   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   708   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   709  IFX_INLINE void IfxPmsEvr_wait(float32 waitInSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   711  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   712  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   713  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   715  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase1Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   716  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   717  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase2Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   719  /** \brief
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   721  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase3Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   723  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequencePhase          IfxPmsEvr_cfgPhasesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   725  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequence               IfxPmsEvr_cfgSequenceDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   727  IFX_EXTERN IFX_CONST IfxPmsEvr_checkRegConfig             IfxPmsEvr_checkRegCfgDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   729  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_checkRegValuesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   731  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   732  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   733  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   735  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   736  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   737      boolean allRight = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   738      sint32  regCfgCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   739  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   740      if (PMS_EVRSTAT.B.EVRC == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   741      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   742          for (regCfgCount = 0; regCfgCount < checkConfig->numOfRegisters; regCfgCount++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   743          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   744              uint32                                      regVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   745              const IfxPmsEvr_StepDownRegulatorRegConfig *regConfig = &checkConfig->regConfig[regCfgCount];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   746              regVal  = (*((volatile uint32 *)regConfig->regAddr));
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   747              regVal &= regConfig->mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   749              if (regVal != regConfig->value)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   750              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   751                  allRight = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   752              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   753          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   755          /*Check if EVRSTAT.SDVOK is set*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   756          if (allRight == TRUE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   757          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   758              if (PMS_EVRSTAT.B.SDVOK != 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   759              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   760                  allRight = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   761              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   762          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   763      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   764  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   765      return allRight;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   769  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   771      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   773      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   775      pms->PMSWCR0.B.BLNKFIL = delay;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   776  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   777      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   778  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   780  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   781  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   782  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   783      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   785      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   786      uint32 mask = (1U << interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   787      pms->PMSIEN.U &= (~mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   789      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   790  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   791  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   793  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   794  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   795      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   796  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   797      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   799      pms->PMSWCR5.B.DCDCSYNCO = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   801      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   802  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   803  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   804  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   805  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   806  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   807      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   808  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   809      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   811      pms->PMSIEN.U |= (1U << interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   812  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   813      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   814  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   816  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   817  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   818  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   819      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   820  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   821      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   822  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   823      pms->PMSWCR0.B.PWRWKEN = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   824  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   825      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   826  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   827  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   829  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   830  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   831      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   833      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   834      pms->EVRRSTCON.B.BPRST33OFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   835      pms->EVRRSTCON.B.RST33OFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   837      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   838  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   839  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   841  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   842  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   843      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   844  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   845      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   846  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   847      pms->EVRRSTCON.B.BPRSTCOFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   848      pms->EVRRSTCON.B.RSTCOFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   849  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   850      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   851  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   852  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   854  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   855  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   856      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   858      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   860      pms->EVROSCCTRL.B.OSCFTRIM = trimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   861  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   862      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   863  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   864  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   866  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   867  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   868      float32 vddVoltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   869      vddVoltage = (IFXPMSEVR_ADC_VDD_LSB * averageADCC + 0.7125);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   870      return vddVoltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   871  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   872  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   874  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   875  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   876      float32 vddp3Voltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   877      vddp3Voltage = (IFXPMSEVR_ADC_VDDP3_LSB * averageADC33V + 0.9375);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   878      return vddp3Voltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   879  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   882  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   883  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   884      float32 vextVoltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   885      vextVoltage = (IFXPMSEVR_ADC_VEXT_LSB * averageADCSWDV + 1.050);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   886      return vextVoltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   887  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   889  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   890  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   891  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   892      return (IfxPmsEvr_EvrcMode)pms->EVRSTAT.B.EVRCMOD;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   893  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   895  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   896  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   897  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   898      return (boolean)pms->EVRSTAT.B.SDVOK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   899  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   900  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   901  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   902  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   903  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   904      return pms->EVRADCSTAT.B.ADC33V;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   905  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   906  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   907  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   908  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   909  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   910      return pms->EVRADCSTAT.B.ADCCV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   911  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   912  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   913  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   914  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   915  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   916      return pms->EVRADCSTAT.B.ADCSWDV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   917  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   918  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   920  #if defined(__TASKING__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   921  #pragma optimize L
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   922  #elif defined(__HIGHTEC__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   923  #pragma GCC optimize ("-O2")
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   924  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   925  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   926  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   927      boolean                                     pmsInitDone    = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   928      uint32                                      regVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   929      uint16                                      endinitSfty_pw = IfxScuWdt_getGlobalSafetyEndinitPasswordInline();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   930      const IfxPmsEvr_initSequencePhase          *phaseConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   931      const IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   932  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   933      if (PMS_EVRSTAT.B.EVRC == 1U)
	movh.a	a15,#61477
.L57:
	mov.a	a2,d15
.L58:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     2   * \file IfxPmsEvr.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     3   * \brief PMS  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     4   * \ingroup IfxLld_Pms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    41   * \defgroup IfxLld_Pms_Std_Evr EVR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    42   * \ingroup IfxLld_Pms_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    43   * \defgroup IfxLld_Pms_Std_Evr_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    44   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    45   * \defgroup IfxLld_Pms_Std_Evr_Over-Voltage Over Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    46   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    47   * \defgroup IfxLld_Pms_Std_Evr_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    48   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    49   * \defgroup IfxLld_Pms_Std_Evr_Under-Voltage Under Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    50   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    51   * \defgroup IfxLld_Pms_Std_Evr_EVRC EVRC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    52   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    53   * \defgroup IfxLld_Pms_Std_Evr_EVR33 EVR33 Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    54   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    55   * \defgroup IfxLld_Pms_Std_Evr_SWD SWD Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    56   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    59  #ifndef IFXPMSEVR_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    60  #define IFXPMSEVR_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    62  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    63  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    66  #include "_Impl/IfxPms_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    67  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    69  #include "IfxPms_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    70  #include "IfxPms_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    71  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    72  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    74  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    75  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    78  #define IFXPMSEVR_ADC_VDD_LSB               (0.005f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    80  #define IFXPMSEVR_ADC_VDDP3_LSB             (0.015f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    82  #define IFXPMSEVR_ADC_VEXT_LSB              (0.02f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    84  #define IFXPMSEVR_CTRL_UP_WAIT_TIMEOUTCOUNT (0x100)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    86  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    87  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    88  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    89  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    90  /** \addtogroup IfxLld_Pms_Std_Evr_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    91   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    92  /** \brief Configure respective interrupts define in register Ifx_PMS.PMSIEN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    93   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    94  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    95  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    96      IfxPmsEvr_EnableInterrupt_ovswd   = 0,   /**< \brief OVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    97      IfxPmsEvr_EnableInterrupt_uvswd   = 1,   /**< \brief UVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    98      IfxPmsEvr_EnableInterrupt_ov33    = 2,   /**< \brief OV33Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    99      IfxPmsEvr_EnableInterrupt_uv33    = 3,   /**< \brief UV33 Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   100      IfxPmsEvr_EnableInterrupt_ovc     = 4,   /**< \brief OVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   101      IfxPmsEvr_EnableInterrupt_uvc     = 5,   /**< \brief UVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   102      IfxPmsEvr_EnableInterrupt_ovpre   = 6,   /**< \brief OVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   103      IfxPmsEvr_EnableInterrupt_uvpre   = 7,   /**< \brief UVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   104      IfxPmsEvr_EnableInterrupt_ovddm   = 8,   /**< \brief OVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   105      IfxPmsEvr_EnableInterrupt_uvddm   = 9,   /**< \brief UVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   106      IfxPmsEvr_EnableInterrupt_ovsb    = 10,  /**< \brief OVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   107      IfxPmsEvr_EnableInterrupt_uvsb    = 11,  /**< \brief UVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   108      IfxPmsEvr_EnableInterrupt_evrcmod = 16,  /**< \brief EVRCMOD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   109      IfxPmsEvr_EnableInterrupt_sdvok   = 17,  /**< \brief SDVOK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   110      IfxPmsEvr_EnableInterrupt_synclck = 18,  /**< \brief SD SYNCLCK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   111      IfxPmsEvr_EnableInterrupt_swdlvl  = 19,  /**< \brief SWDLVL Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   112      IfxPmsEvr_EnableInterrupt_wutwkp  = 21,  /**< \brief WUT WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   113      IfxPmsEvr_EnableInterrupt_esr0wkp = 22,  /**< \brief ESR0 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   114      IfxPmsEvr_EnableInterrupt_esr1wkp = 23,  /**< \brief ESR1 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   115      IfxPmsEvr_EnableInterrupt_pinawkp = 24,  /**< \brief PINA WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   116      IfxPmsEvr_EnableInterrupt_pinbwkp = 25,  /**< \brief PINB WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   117      IfxPmsEvr_EnableInterrupt_scrint  = 26,  /**< \brief SCR INT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   118      IfxPmsEvr_EnableInterrupt_scrrst  = 27,  /**< \brief SCR RST Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   119      IfxPmsEvr_EnableInterrupt_screcc  = 28,  /**< \brief SCR ECC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   120      IfxPmsEvr_EnableInterrupt_scrwdt  = 29   /**< \brief SCR WDT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   121  } IfxPmsEvr_EnableInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   123  /** \brief Current operation mode of EVRC Regulator defined in Ifx_PMS.EVR.STAT.B.EVRCMOD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   125  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   126  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   127      IfxPmsEvr_EvrcMode_pwmMode      = 0,  /**< \brief The step-down converter is in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   128                                            * normal operational closed loop state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   129      IfxPmsEvr_EvrcMode_lowPowerMode = 1,  /**< \brief The step-down converter is in low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   130                                             * power state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   131      IfxPmsEvr_EvrcMode_startupMode  = 2,  /**< \brief The step-down converter is in start-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   132                                             * phase */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   133      IfxPmsEvr_EvrcMode_disableMode  = 3   /**< \brief EVRC is Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   134  } IfxPmsEvr_EvrcMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   136  /** \brief Switching frequency division factor for external synchronisation defined in Ifx_PMS.EVRSDCTRL7.B.SYNCDIVFAC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   137   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   138  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   139  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   140      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_1  = 0,  /**< \brief fDCDCSYNC = fDCDC. The actual duty cycle is routed. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   141      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_2  = 1,  /**< \brief fDCDCSYNC = fDCDC/2. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   142      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_4  = 2,  /**< \brief fDCDCSYNC = fDCDC/4. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   143      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_8  = 3,  /**< \brief fDCDCSYNC = fDCDC/8. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   144      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_16 = 4,  /**< \brief fDCDCSYNC = fDCDC/16. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   145      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_32 = 5   /**< \brief fDCDCSYNC = fDCDC/32. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   146  } IfxPmsEvr_ExtSyncSwitchingFreqDivFactor;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   148  /** \brief Monitoring OverVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   149   * in .Ifx_PMS.EVR.MONCTRL register for overvoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   153      IfxPmsEvr_OverVoltageMonitoring_inactive                         = 0, /**< \brief Over-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   154      IfxPmsEvr_OverVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief Over-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   155      IfxPmsEvr_OverVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Over-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   156      IfxPmsEvr_OverVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Over-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   157  } IfxPmsEvr_OverVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   159  /** \brief set TRIM Value For respective Voltages.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   160   * Defined in Ifx_PMS.EVR.TRIM and Ifx_PMS.EVR.TRIM2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   161   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   162  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   163  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   164      IfxPmsEvr_PrimaryAdcTrimValue_0 = 0,      /**< \brief Primary Adc Trim Value 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   165      IfxPmsEvr_PrimaryAdcTrimValue_1,          /**< \brief Primary Adc Trim Value 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   166      IfxPmsEvr_PrimaryAdcTrimValue_2,          /**< \brief Primary Adc Trim Value 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   167      IfxPmsEvr_PrimaryAdcTrimValue_3,          /**< \brief Primary Adc Trim Value 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   168      IfxPmsEvr_PrimaryAdcTrimValue_4,          /**< \brief Primary Adc Trim Value 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   169      IfxPmsEvr_PrimaryAdcTrimValue_5,          /**< \brief Primary Adc Trim Value 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   170      IfxPmsEvr_PrimaryAdcTrimValue_6,          /**< \brief Primary Adc Trim Value 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   171      IfxPmsEvr_PrimaryAdcTrimValue_7,          /**< \brief Primary Adc Trim Value 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   172      IfxPmsEvr_PrimaryAdcTrimValue_8,          /**< \brief Primary Adc Trim Value 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   173      IfxPmsEvr_PrimaryAdcTrimValue_9,          /**< \brief Primary Adc Trim Value 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   174      IfxPmsEvr_PrimaryAdcTrimValue_10,         /**< \brief Primary Adc Trim Value 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   175      IfxPmsEvr_PrimaryAdcTrimValue_11,         /**< \brief Primary Adc Trim Value 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   176      IfxPmsEvr_PrimaryAdcTrimValue_12,         /**< \brief Primary Adc Trim Value 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   177      IfxPmsEvr_PrimaryAdcTrimValue_13,         /**< \brief Primary Adc Trim Value 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   178      IfxPmsEvr_PrimaryAdcTrimValue_14,         /**< \brief Primary Adc Trim Value 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   179      IfxPmsEvr_PrimaryAdcTrimValue_15,         /**< \brief Primary Adc Trim Value 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   180      IfxPmsEvr_PrimaryAdcTrimValue_16,         /**< \brief Primary Adc Trim Value 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   181      IfxPmsEvr_PrimaryAdcTrimValue_17,         /**< \brief Primary Adc Trim Value 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   182      IfxPmsEvr_PrimaryAdcTrimValue_18,         /**< \brief Primary Adc Trim Value 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   183      IfxPmsEvr_PrimaryAdcTrimValue_19,         /**< \brief Primary Adc Trim Value 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   184      IfxPmsEvr_PrimaryAdcTrimValue_20,         /**< \brief Primary Adc Trim Value 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   185      IfxPmsEvr_PrimaryAdcTrimValue_21,         /**< \brief Primary Adc Trim Value 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   186      IfxPmsEvr_PrimaryAdcTrimValue_22,         /**< \brief Primary Adc Trim Value 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   187      IfxPmsEvr_PrimaryAdcTrimValue_23,         /**< \brief Primary Adc Trim Value 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   188      IfxPmsEvr_PrimaryAdcTrimValue_24,         /**< \brief Primary Adc Trim Value 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   189      IfxPmsEvr_PrimaryAdcTrimValue_25,         /**< \brief Primary Adc Trim Value 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   190      IfxPmsEvr_PrimaryAdcTrimValue_26,         /**< \brief Primary Adc Trim Value 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   191      IfxPmsEvr_PrimaryAdcTrimValue_27,         /**< \brief Primary Adc Trim Value 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   192      IfxPmsEvr_PrimaryAdcTrimValue_28,         /**< \brief Primary Adc Trim Value 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   193      IfxPmsEvr_PrimaryAdcTrimValue_29,         /**< \brief Primary Adc Trim Value 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   194      IfxPmsEvr_PrimaryAdcTrimValue_30,         /**< \brief Primary Adc Trim Value 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   195      IfxPmsEvr_PrimaryAdcTrimValue_31,         /**< \brief Primary Adc Trim Value 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   196      IfxPmsEvr_PrimaryAdcTrimValue_32,         /**< \brief Primary Adc Trim Value 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   197      IfxPmsEvr_PrimaryAdcTrimValue_33,         /**< \brief Primary Adc Trim Value 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   198      IfxPmsEvr_PrimaryAdcTrimValue_34,         /**< \brief Primary Adc Trim Value 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   199      IfxPmsEvr_PrimaryAdcTrimValue_35,         /**< \brief Primary Adc Trim Value 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   200      IfxPmsEvr_PrimaryAdcTrimValue_36,         /**< \brief Primary Adc Trim Value 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   201      IfxPmsEvr_PrimaryAdcTrimValue_37,         /**< \brief Primary Adc Trim Value 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   202      IfxPmsEvr_PrimaryAdcTrimValue_38,         /**< \brief Primary Adc Trim Value 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   203      IfxPmsEvr_PrimaryAdcTrimValue_39,         /**< \brief Primary Adc Trim Value 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   204      IfxPmsEvr_PrimaryAdcTrimValue_40,         /**< \brief Primary Adc Trim Value 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   205      IfxPmsEvr_PrimaryAdcTrimValue_41,         /**< \brief Primary Adc Trim Value 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   206      IfxPmsEvr_PrimaryAdcTrimValue_42,         /**< \brief Primary Adc Trim Value 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   207      IfxPmsEvr_PrimaryAdcTrimValue_43,         /**< \brief Primary Adc Trim Value 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   208      IfxPmsEvr_PrimaryAdcTrimValue_44,         /**< \brief Primary Adc Trim Value 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   209      IfxPmsEvr_PrimaryAdcTrimValue_45,         /**< \brief Primary Adc Trim Value 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   210      IfxPmsEvr_PrimaryAdcTrimValue_46,         /**< \brief Primary Adc Trim Value 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   211      IfxPmsEvr_PrimaryAdcTrimValue_47,         /**< \brief Primary Adc Trim Value 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   212      IfxPmsEvr_PrimaryAdcTrimValue_48,         /**< \brief Primary Adc Trim Value 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   213      IfxPmsEvr_PrimaryAdcTrimValue_49,         /**< \brief Primary Adc Trim Value 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   214      IfxPmsEvr_PrimaryAdcTrimValue_50,         /**< \brief Primary Adc Trim Value 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   215      IfxPmsEvr_PrimaryAdcTrimValue_51,         /**< \brief Primary Adc Trim Value 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   216      IfxPmsEvr_PrimaryAdcTrimValue_52,         /**< \brief Primary Adc Trim Value 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   217      IfxPmsEvr_PrimaryAdcTrimValue_53,         /**< \brief Primary Adc Trim Value 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   218      IfxPmsEvr_PrimaryAdcTrimValue_54,         /**< \brief Primary Adc Trim Value 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   219      IfxPmsEvr_PrimaryAdcTrimValue_55,         /**< \brief Primary Adc Trim Value 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   220      IfxPmsEvr_PrimaryAdcTrimValue_56,         /**< \brief Primary Adc Trim Value 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   221      IfxPmsEvr_PrimaryAdcTrimValue_57,         /**< \brief Primary Adc Trim Value 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   222      IfxPmsEvr_PrimaryAdcTrimValue_58,         /**< \brief Primary Adc Trim Value 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   223      IfxPmsEvr_PrimaryAdcTrimValue_59,         /**< \brief Primary Adc Trim Value 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   224      IfxPmsEvr_PrimaryAdcTrimValue_60,         /**< \brief Primary Adc Trim Value 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   225      IfxPmsEvr_PrimaryAdcTrimValue_61,         /**< \brief Primary Adc Trim Value 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   226      IfxPmsEvr_PrimaryAdcTrimValue_62,         /**< \brief Primary Adc Trim Value 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   227      IfxPmsEvr_PrimaryAdcTrimValue_63          /**< \brief Primary Adc Trim Value 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   228  } IfxPmsEvr_PrimaryAdcTrimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   230  /** \brief This Declare the Under and overvoltage counter defined in Ifx_PMS.EVR.MONFILT.B.ERRCNTLIMT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   232  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   233  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   234      IfxPmsEvr_SecondaryVoltageErrorCounter_level0 = 0,      /**< \brief Error Counter Limit 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   235      IfxPmsEvr_SecondaryVoltageErrorCounter_level1,          /**< \brief Error Counter Limit 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   236      IfxPmsEvr_SecondaryVoltageErrorCounter_level2,          /**< \brief Error Counter Limit 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   237      IfxPmsEvr_SecondaryVoltageErrorCounter_level3,          /**< \brief Error Counter Limit 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   238      IfxPmsEvr_SecondaryVoltageErrorCounter_level4,          /**< \brief Error Counter Limit 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   239      IfxPmsEvr_SecondaryVoltageErrorCounter_level5,          /**< \brief Error Counter Limit 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   240      IfxPmsEvr_SecondaryVoltageErrorCounter_level6,          /**< \brief Error Counter Limit 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   241      IfxPmsEvr_SecondaryVoltageErrorCounter_level7,          /**< \brief Error Counter Limit 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   242      IfxPmsEvr_SecondaryVoltageErrorCounter_level8,          /**< \brief Error Counter Limit 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   243      IfxPmsEvr_SecondaryVoltageErrorCounter_level9,          /**< \brief Error Counter Limit 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   244      IfxPmsEvr_SecondaryVoltageErrorCounter_level10,         /**< \brief Error Counter Limit 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   245      IfxPmsEvr_SecondaryVoltageErrorCounter_level11,         /**< \brief Error Counter Limit 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   246      IfxPmsEvr_SecondaryVoltageErrorCounter_level12,         /**< \brief Error Counter Limit 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   247      IfxPmsEvr_SecondaryVoltageErrorCounter_level13,         /**< \brief Error Counter Limit 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   248      IfxPmsEvr_SecondaryVoltageErrorCounter_level14,         /**< \brief Error Counter Limit 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   249      IfxPmsEvr_SecondaryVoltageErrorCounter_level15,         /**< \brief Error Counter Limit 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   250      IfxPmsEvr_SecondaryVoltageErrorCounter_level16,         /**< \brief Error Counter Limit 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   251      IfxPmsEvr_SecondaryVoltageErrorCounter_level17,         /**< \brief Error Counter Limit 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   252      IfxPmsEvr_SecondaryVoltageErrorCounter_level18,         /**< \brief Error Counter Limit 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   253      IfxPmsEvr_SecondaryVoltageErrorCounter_level19,         /**< \brief Error Counter Limit 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   254      IfxPmsEvr_SecondaryVoltageErrorCounter_level20,         /**< \brief Error Counter Limit 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   255      IfxPmsEvr_SecondaryVoltageErrorCounter_level21,         /**< \brief Error Counter Limit 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   256      IfxPmsEvr_SecondaryVoltageErrorCounter_level22,         /**< \brief Error Counter Limit 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   257      IfxPmsEvr_SecondaryVoltageErrorCounter_level23,         /**< \brief Error Counter Limit 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   258      IfxPmsEvr_SecondaryVoltageErrorCounter_level24,         /**< \brief Error Counter Limit 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   259      IfxPmsEvr_SecondaryVoltageErrorCounter_level25,         /**< \brief Error Counter Limit 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   260      IfxPmsEvr_SecondaryVoltageErrorCounter_level26,         /**< \brief Error Counter Limit 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   261      IfxPmsEvr_SecondaryVoltageErrorCounter_level27,         /**< \brief Error Counter Limit 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   262      IfxPmsEvr_SecondaryVoltageErrorCounter_level28,         /**< \brief Error Counter Limit 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   263      IfxPmsEvr_SecondaryVoltageErrorCounter_level29,         /**< \brief Error Counter Limit 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   264      IfxPmsEvr_SecondaryVoltageErrorCounter_level30,         /**< \brief Error Counter Limit 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   265      IfxPmsEvr_SecondaryVoltageErrorCounter_level31,         /**< \brief Error Counter Limit 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   266      IfxPmsEvr_SecondaryVoltageErrorCounter_level32,         /**< \brief Error Counter Limit 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   267      IfxPmsEvr_SecondaryVoltageErrorCounter_level33,         /**< \brief Error Counter Limit 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   268      IfxPmsEvr_SecondaryVoltageErrorCounter_level34,         /**< \brief Error Counter Limit 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   269      IfxPmsEvr_SecondaryVoltageErrorCounter_level35,         /**< \brief Error Counter Limit 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   270      IfxPmsEvr_SecondaryVoltageErrorCounter_level36,         /**< \brief Error Counter Limit 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   271      IfxPmsEvr_SecondaryVoltageErrorCounter_level37,         /**< \brief Error Counter Limit 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   272      IfxPmsEvr_SecondaryVoltageErrorCounter_level38,         /**< \brief Error Counter Limit 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   273      IfxPmsEvr_SecondaryVoltageErrorCounter_level39,         /**< \brief Error Counter Limit 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   274      IfxPmsEvr_SecondaryVoltageErrorCounter_level40,         /**< \brief Error Counter Limit 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   275      IfxPmsEvr_SecondaryVoltageErrorCounter_level41,         /**< \brief Error Counter Limit 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   276      IfxPmsEvr_SecondaryVoltageErrorCounter_level42,         /**< \brief Error Counter Limit 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   277      IfxPmsEvr_SecondaryVoltageErrorCounter_level43,         /**< \brief Error Counter Limit 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   278      IfxPmsEvr_SecondaryVoltageErrorCounter_level44,         /**< \brief Error Counter Limit 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   279      IfxPmsEvr_SecondaryVoltageErrorCounter_level45,         /**< \brief Error Counter Limit 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   280      IfxPmsEvr_SecondaryVoltageErrorCounter_level46,         /**< \brief Error Counter Limit 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   281      IfxPmsEvr_SecondaryVoltageErrorCounter_level47,         /**< \brief Error Counter Limit 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   282      IfxPmsEvr_SecondaryVoltageErrorCounter_level48,         /**< \brief Error Counter Limit 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   283      IfxPmsEvr_SecondaryVoltageErrorCounter_level49,         /**< \brief Error Counter Limit 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   284      IfxPmsEvr_SecondaryVoltageErrorCounter_level50,         /**< \brief Error Counter Limit 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   285      IfxPmsEvr_SecondaryVoltageErrorCounter_level51,         /**< \brief Error Counter Limit 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   286      IfxPmsEvr_SecondaryVoltageErrorCounter_level52,         /**< \brief Error Counter Limit 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   287      IfxPmsEvr_SecondaryVoltageErrorCounter_level53,         /**< \brief Error Counter Limit 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   288      IfxPmsEvr_SecondaryVoltageErrorCounter_level54,         /**< \brief Error Counter Limit 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   289      IfxPmsEvr_SecondaryVoltageErrorCounter_level55,         /**< \brief Error Counter Limit 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   290      IfxPmsEvr_SecondaryVoltageErrorCounter_level56,         /**< \brief Error Counter Limit 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   291      IfxPmsEvr_SecondaryVoltageErrorCounter_level57,         /**< \brief Error Counter Limit 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   292      IfxPmsEvr_SecondaryVoltageErrorCounter_level58,         /**< \brief Error Counter Limit 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   293      IfxPmsEvr_SecondaryVoltageErrorCounter_level59,         /**< \brief Error Counter Limit 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   294      IfxPmsEvr_SecondaryVoltageErrorCounter_level60,         /**< \brief Error Counter Limit 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   295      IfxPmsEvr_SecondaryVoltageErrorCounter_level61,         /**< \brief Error Counter Limit 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   296      IfxPmsEvr_SecondaryVoltageErrorCounter_level62,         /**< \brief Error Counter Limit 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   297      IfxPmsEvr_SecondaryVoltageErrorCounter_level63          /**< \brief Error Counter Limit 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   298  } IfxPmsEvr_SecondaryVoltageErrorCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   300  /** \brief ADC result for the generating Alarm declare in Ifx_PMS.EVR.MONFILT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   301   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   302  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   303  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   304      IfxPmsEvr_SupplyFilter_eachConversionResult    = 0,    /**< \brief Each conversion result is compared with threshold to generate alarm */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   305      IfxPmsEvr_SupplyFilter_avgAdcConversionResult0 = 1,    /**< \brief A moving mean average of consecutive 0 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   306      IfxPmsEvr_SupplyFilter_avgAdcConversionResult1,        /**< \brief A moving mean average of consecutive 1 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   307      IfxPmsEvr_SupplyFilter_avgAdcConversionResult2,        /**< \brief A moving mean average of consecutive 2 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   308      IfxPmsEvr_SupplyFilter_avgAdcConversionResult3,        /**< \brief A moving mean average of consecutive 3 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   309      IfxPmsEvr_SupplyFilter_avgAdcConversionResult4,        /**< \brief A moving mean average of consecutive 4 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   310      IfxPmsEvr_SupplyFilter_avgAdcConversionResult5,        /**< \brief A moving mean average of consecutive 5 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   311      IfxPmsEvr_SupplyFilter_avgAdcConversionResult6,        /**< \brief A moving mean average of consecutive 6 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   312      IfxPmsEvr_SupplyFilter_avgAdcConversionResult7,        /**< \brief A moving mean average of consecutive 7 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   313      IfxPmsEvr_SupplyFilter_avgAdcConversionResult8,        /**< \brief A moving mean average of consecutive 8 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   314      IfxPmsEvr_SupplyFilter_avgAdcConversionResult9,        /**< \brief A moving mean average of consecutive 9 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   315      IfxPmsEvr_SupplyFilter_avgAdcConversionResult10,       /**< \brief A moving mean average of consecutive 10 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   316      IfxPmsEvr_SupplyFilter_avgAdcConversionResult11,       /**< \brief A moving mean average of consecutive 11 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   317      IfxPmsEvr_SupplyFilter_avgAdcConversionResult12,       /**< \brief A moving mean average of consecutive 12 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   318      IfxPmsEvr_SupplyFilter_avgAdcConversionResult13,       /**< \brief A moving mean average of consecutive 13 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   319      IfxPmsEvr_SupplyFilter_avgAdcConversionResult14        /**< \brief A moving mean average of consecutive 14 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   320  } IfxPmsEvr_SupplyFilter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   322  /** \brief Controls the voltage supply Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   323   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   324  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   325  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   326      IfxPmsEvr_SupplyMode_evrc  = 0,  /**< \brief select EVRC regulator or VDD Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   327      IfxPmsEvr_SupplyMode_evr33 = 1,  /**< \brief select EVR33 regulator or VDDP3 Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   328      IfxPmsEvr_SupplyMode_swd   = 2,  /**< \brief select  external VEXT suppy watchdog */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   329      IfxPmsEvr_SupplyMode_evrpr = 3,  /**< \brief select EVRPR or VDDPD supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   330      IfxPmsEvr_SupplyMode_vddm  = 4,  /**< \brief VDDM ADC Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   331      IfxPmsEvr_SupplyMode_sb    = 5   /**< \brief EVR Standby Supply or VEVRSB supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   332  } IfxPmsEvr_SupplyMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   334  /** \brief Monitoring underVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   335   * in Ifx_PMS.EVR.MONCTRL register for undervoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   336   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   337  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   338  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   339      IfxPmsEvr_UnderVoltageMonitoring_inactive                         = 0, /**< \brief Under-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   340      IfxPmsEvr_UnderVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief under-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   341      IfxPmsEvr_UnderVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Under-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   342      IfxPmsEvr_UnderVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Under-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   343  } IfxPmsEvr_UnderVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   344  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   345  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   346  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   347  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   348  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   349  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   351  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   352  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   353      volatile void *regAddr;       /**< \brief Register Address to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   354      uint32         value;         /**< \brief Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   355      uint32         mask;          /**< \brief Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   356  } IfxPmsEvr_StepDownRegulatorRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   358  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   359  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   360      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   361      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   362      float32                                         waitInSecs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   363  } IfxPmsEvr_initSequencePhase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   365  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   366  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   367      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   368      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   369  } IfxPmsEvr_checkRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   371  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   372  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   373      uint8                                  numOfPhases;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   374      IFX_CONST IfxPmsEvr_initSequencePhase *phaseConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   375  } IfxPmsEvr_initSequence;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   377  /** \addtogroup IfxLld_Pms_Std_Evr_Over-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   378   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   380  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   384  /** \brief set Over Voltage Monitoring Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   385   * \param pms pointer to the Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   386   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   387   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   388   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   390  IFX_INLINE void IfxPmsEvr_setOverVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_OverVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   392  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   393  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   394  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   396  /** \brief set Secondary Over Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   397   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   398   * \param thresholdLevel over-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   399   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   400   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   402   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   403  IFX_EXTERN void IfxPmsEvr_setSecondaryOverVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   404  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   405  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   407  /** \addtogroup IfxLld_Pms_Std_Evr_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   408   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   410  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   411  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   412  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   414  /** \brief Configure a Blanking Filter Delay
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   415   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   416   * \param delay Blanking Filter Delay in ms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   419  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   421  /** \brief This function enables the synchronisation output to synchronize the external
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   422   * SMPS regulator with respect to the internal EVRC regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   423   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   424   * \param enabled enable/disable DC-DC synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   425   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   426   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   427  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   429  /** \brief Enable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   430   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   431   * \param interruptType Select The Interrupt Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   432   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   433   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   434  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   435  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   436  /** \brief enables wakeup on VEXT supply ramp-up after blanking filter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   437   * time has expired
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   438   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   439   * \param enabled Wake-up Enable on VEXT Supply ramp-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   442  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   444  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   445   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   446   * \param trimValue OSC fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   448   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   449  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   450  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   451  /** \brief set frequency spread threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   452   * \param pms pointer to PMS module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   453   * \param thresholdLevel maximum frequency spreading value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   456  IFX_INLINE void IfxPmsEvr_setFrequencySpreadThreshold(Ifx_PMS *pms, uint16 thresholdLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   458  /** \brief This configures the state of N ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   459   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   460   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   461   * \param nmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   464  IFX_INLINE void IfxPmsEvr_setNmosLevel(Ifx_PMS *pms, boolean nmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   466  /** \brief This configures the state of P ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   467   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   468   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   469   * \param pmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   472  IFX_INLINE void IfxPmsEvr_setPmosLevel(Ifx_PMS *pms, boolean pmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   474  /** \brief set regulator switching frequency in Hz....(100MHz/samplingFactor)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   475   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   476   * \param samplingFactor Over-sampling Factor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   477   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   478   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   479  IFX_INLINE void IfxPmsEvr_setRegulatorSwitchingFrequency(Ifx_PMS *pms, uint16 samplingFactor);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   481  /** \brief set reset trim value for EVRC,EVR33 and external VEXT supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   482   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   483   * \param resetTrimValue Reset Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   484   * \param supply select EVRC,EVR33 regulator or external VEXT supply watchdog
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   487  IFX_INLINE void IfxPmsEvr_setResetTrimValueMv(Ifx_PMS *pms, float32 resetTrimValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   489  /** \brief SD Regulator Voltage Target selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   490   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   491   * \param outputLevel The VDD output level of the Step down regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   494  IFX_INLINE void IfxPmsEvr_setSdRegulatorOutputLevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   496  /** \brief SD Regulator Voltage Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   497   * \param pms Pointer to PMS Moule Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   498   * \param trimValue offset added to the VDD output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   499   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   501  IFX_INLINE void IfxPmsEvr_setSdRegulatorPrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   503  /** \brief set DLMU RAM Block in Standby Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   504   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   505   * \param ramBlock DLMU RAM block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   506   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   507   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   508  IFX_INLINE void IfxPmsEvr_setStandbyRamSupply(Ifx_PMS *pms, uint8 ramBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   509  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   510  /** \brief Set Switching frequency division factor for external synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   511   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   512   * \param divider Switching frequency division factor for external synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   515  IFX_INLINE void IfxPmsEvr_setSwitchingFreqDivFactorForExternalsync(Ifx_PMS *pms, IfxPmsEvr_ExtSyncSwitchingFreqDivFactor divider);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   517  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   518   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   519   * \param trimValue OSC Signed fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   520   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   521   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   522  IFX_INLINE void IfxPmsEvr_signedFineTrimEvrClock(Ifx_PMS *pms, sint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   525  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   526  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   528  /** \brief filter the  each conversion result or avarage of consecutive adc result to compare with threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   529   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   530   * \param adcFilterValue specify average of consecutive ADC results
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   531   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   532   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   534  IFX_EXTERN void IfxPmsEvr_filterSecondaryConversionResult(Ifx_PMS *pms, IfxPmsEvr_SupplyFilter adcFilterValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   536  /** \brief get secondray ADC result for respective Voltage supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   537   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   538   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   539   * \return last conversion result of the ADC measurement
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   540   * of respective voltage by secondary monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   542  IFX_EXTERN uint8 IfxPmsEvr_getSecondaryAdcResult(Ifx_PMS *pms, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   544  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   546  /** \addtogroup IfxLld_Pms_Std_Evr_Under-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   547   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   549  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   550  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   551  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   553  /** \brief set Under Voltage Monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   554   * \param pms Pointer to the PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   555   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   556   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   557   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   558   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   559  IFX_INLINE void IfxPmsEvr_setUnderVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_UnderVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   560  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   561  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   562  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   563  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   565  /** \brief set Secondary under Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   566   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   567   * \param thresholdLevel under-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   568   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   569   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   570   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   571   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   572  IFX_EXTERN void IfxPmsEvr_setSecondaryUnderVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   574  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   576  /** \addtogroup IfxLld_Pms_Std_Evr_EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   577   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   579  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   580  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   581  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   583  /** \brief Enabled/Disable Reset Trigger signal for EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   584   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   585   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   586   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   588  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   590  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   591   * \param averageADCC Average value of PMS_EVRADCSTAT.ADCCV.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   592   * \return ADC VDD Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   594  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   596  /** \brief get current operating mode of EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   597   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   598   * \return EVRC Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   599   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   600  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   602  /** \brief get EVRC Regulator Voltage status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   603   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   604   * \return EVRC Regulator Voltage OK status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   605   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   606  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   608  /** \brief get ADC 1.25 V Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   609   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   610   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   611   * the VDD / EVRC supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   613  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   615  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   617  /** \addtogroup IfxLld_Pms_Std_Evr_EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   618   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   620  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   621  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   624  /** \brief Enabled/Disable Reset Trigger signal for EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   625   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   626   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   627   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   628   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   629  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   631  /** \brief get ADC 3.3 V Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   632   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   633   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   634   * the VDDP3 / EVR33 supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   635   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   636  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   638  /** \brief set 3.3 V Regulator Voltage Primary ADC Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   639   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   640   * \param trimValue Trimming value offeset added to Output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   641   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   642   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   643  IFX_INLINE void IfxPmsEvr_setEvr33PrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   645  /** \brief The VDDP3 output level of the EVR33 LDO regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   646   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   647   * \param outputLevel define VDDP3 output level of the EVR33 LDO regulator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   648   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   649   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   650  IFX_INLINE void IfxPmsEvr_setEvr33VoltageOutputlevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   652  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   653  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   654  /** \addtogroup IfxLld_Pms_Std_Evr_SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   655   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   657  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   658  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   659  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   660  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   661  /** \brief get ADC External Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   662   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   663   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   664   * the external VEXT (3.3V / 5V) supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   665   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   666  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   668  /** \brief Enabled/Disable Reset Trigger signal for SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   669   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   670   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   671   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   673  IFX_INLINE void IfxPmsEvr_swdResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   675  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   678  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   679  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   681  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   682   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   683  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   685  /** \brief Disable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   686   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   687   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   688  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   690  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   691   * \param averageADC33V Average of PMS_EVRSTAT.ADC33V values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   692   * \return ADC VDDP3 Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   693   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   694  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   696  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   697   * \param averageADCSWDV Average of PMS_EVRADCSTAT.ADCSWDV values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   698   * \return ADC VEXT Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   699   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   700  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   702  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   703   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   704  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   706  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   707   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   708   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   709  IFX_INLINE void IfxPmsEvr_wait(float32 waitInSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   711  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   712  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   713  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   715  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase1Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   716  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   717  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase2Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   719  /** \brief
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   721  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase3Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   723  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequencePhase          IfxPmsEvr_cfgPhasesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   725  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequence               IfxPmsEvr_cfgSequenceDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   727  IFX_EXTERN IFX_CONST IfxPmsEvr_checkRegConfig             IfxPmsEvr_checkRegCfgDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   729  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_checkRegValuesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   731  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   732  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   733  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   735  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   736  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   737      boolean allRight = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   738      sint32  regCfgCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   739  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   740      if (PMS_EVRSTAT.B.EVRC == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   741      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   742          for (regCfgCount = 0; regCfgCount < checkConfig->numOfRegisters; regCfgCount++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   743          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   744              uint32                                      regVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   745              const IfxPmsEvr_StepDownRegulatorRegConfig *regConfig = &checkConfig->regConfig[regCfgCount];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   746              regVal  = (*((volatile uint32 *)regConfig->regAddr));
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   747              regVal &= regConfig->mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   749              if (regVal != regConfig->value)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   750              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   751                  allRight = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   752              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   753          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   755          /*Check if EVRSTAT.SDVOK is set*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   756          if (allRight == TRUE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   757          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   758              if (PMS_EVRSTAT.B.SDVOK != 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   759              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   760                  allRight = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   761              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   762          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   763      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   764  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   765      return allRight;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   769  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   771      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   773      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   775      pms->PMSWCR0.B.BLNKFIL = delay;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   776  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   777      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   778  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   780  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   781  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   782  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   783      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   785      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   786      uint32 mask = (1U << interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   787      pms->PMSIEN.U &= (~mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   789      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   790  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   791  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   793  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   794  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   795      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   796  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   797      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   799      pms->PMSWCR5.B.DCDCSYNCO = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   801      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   802  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   803  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   804  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   805  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   806  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   807      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   808  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   809      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   811      pms->PMSIEN.U |= (1U << interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   812  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   813      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   814  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   816  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   817  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   818  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   819      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   820  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   821      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   822  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   823      pms->PMSWCR0.B.PWRWKEN = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   824  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   825      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   826  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   827  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   829  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   830  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   831      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   833      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   834      pms->EVRRSTCON.B.BPRST33OFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   835      pms->EVRRSTCON.B.RST33OFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   837      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   838  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   839  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   841  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   842  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   843      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   844  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   845      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   846  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   847      pms->EVRRSTCON.B.BPRSTCOFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   848      pms->EVRRSTCON.B.RSTCOFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   849  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   850      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   851  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   852  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   854  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   855  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   856      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   858      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   860      pms->EVROSCCTRL.B.OSCFTRIM = trimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   861  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   862      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   863  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   864  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   866  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   867  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   868      float32 vddVoltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   869      vddVoltage = (IFXPMSEVR_ADC_VDD_LSB * averageADCC + 0.7125);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   870      return vddVoltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   871  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   872  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   874  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   875  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   876      float32 vddp3Voltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   877      vddp3Voltage = (IFXPMSEVR_ADC_VDDP3_LSB * averageADC33V + 0.9375);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   878      return vddp3Voltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   879  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   882  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   883  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   884      float32 vextVoltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   885      vextVoltage = (IFXPMSEVR_ADC_VEXT_LSB * averageADCSWDV + 1.050);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   886      return vextVoltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   887  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   889  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   890  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   891  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   892      return (IfxPmsEvr_EvrcMode)pms->EVRSTAT.B.EVRCMOD;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   893  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   895  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   896  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   897  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   898      return (boolean)pms->EVRSTAT.B.SDVOK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   899  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   900  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   901  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   902  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   903  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   904      return pms->EVRADCSTAT.B.ADC33V;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   905  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   906  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   907  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   908  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   909  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   910      return pms->EVRADCSTAT.B.ADCCV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   911  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   912  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   913  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   914  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   915  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   916      return pms->EVRADCSTAT.B.ADCSWDV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   917  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   918  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   920  #if defined(__TASKING__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   921  #pragma optimize L
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   922  #elif defined(__HIGHTEC__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   923  #pragma GCC optimize ("-O2")
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   924  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   925  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   926  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   927      boolean                                     pmsInitDone    = TRUE;
	mov	d2,#1
.L59:
	ld.w	d15,[a2]
	extr.u	d15,d15,#2,#14
.L124:
	xor	d3,d15,#63

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     2   * \file IfxPmsEvr.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     3   * \brief PMS  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     4   * \ingroup IfxLld_Pms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    41   * \defgroup IfxLld_Pms_Std_Evr EVR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    42   * \ingroup IfxLld_Pms_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    43   * \defgroup IfxLld_Pms_Std_Evr_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    44   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    45   * \defgroup IfxLld_Pms_Std_Evr_Over-Voltage Over Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    46   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    47   * \defgroup IfxLld_Pms_Std_Evr_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    48   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    49   * \defgroup IfxLld_Pms_Std_Evr_Under-Voltage Under Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    50   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    51   * \defgroup IfxLld_Pms_Std_Evr_EVRC EVRC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    52   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    53   * \defgroup IfxLld_Pms_Std_Evr_EVR33 EVR33 Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    54   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    55   * \defgroup IfxLld_Pms_Std_Evr_SWD SWD Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    56   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    59  #ifndef IFXPMSEVR_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    60  #define IFXPMSEVR_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    62  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    63  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    66  #include "_Impl/IfxPms_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    67  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    69  #include "IfxPms_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    70  #include "IfxPms_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    71  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    72  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    74  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    75  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    78  #define IFXPMSEVR_ADC_VDD_LSB               (0.005f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    80  #define IFXPMSEVR_ADC_VDDP3_LSB             (0.015f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    82  #define IFXPMSEVR_ADC_VEXT_LSB              (0.02f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    84  #define IFXPMSEVR_CTRL_UP_WAIT_TIMEOUTCOUNT (0x100)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    86  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    87  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    88  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    89  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    90  /** \addtogroup IfxLld_Pms_Std_Evr_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    91   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    92  /** \brief Configure respective interrupts define in register Ifx_PMS.PMSIEN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    93   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    94  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    95  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    96      IfxPmsEvr_EnableInterrupt_ovswd   = 0,   /**< \brief OVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    97      IfxPmsEvr_EnableInterrupt_uvswd   = 1,   /**< \brief UVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    98      IfxPmsEvr_EnableInterrupt_ov33    = 2,   /**< \brief OV33Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    99      IfxPmsEvr_EnableInterrupt_uv33    = 3,   /**< \brief UV33 Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   100      IfxPmsEvr_EnableInterrupt_ovc     = 4,   /**< \brief OVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   101      IfxPmsEvr_EnableInterrupt_uvc     = 5,   /**< \brief UVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   102      IfxPmsEvr_EnableInterrupt_ovpre   = 6,   /**< \brief OVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   103      IfxPmsEvr_EnableInterrupt_uvpre   = 7,   /**< \brief UVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   104      IfxPmsEvr_EnableInterrupt_ovddm   = 8,   /**< \brief OVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   105      IfxPmsEvr_EnableInterrupt_uvddm   = 9,   /**< \brief UVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   106      IfxPmsEvr_EnableInterrupt_ovsb    = 10,  /**< \brief OVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   107      IfxPmsEvr_EnableInterrupt_uvsb    = 11,  /**< \brief UVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   108      IfxPmsEvr_EnableInterrupt_evrcmod = 16,  /**< \brief EVRCMOD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   109      IfxPmsEvr_EnableInterrupt_sdvok   = 17,  /**< \brief SDVOK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   110      IfxPmsEvr_EnableInterrupt_synclck = 18,  /**< \brief SD SYNCLCK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   111      IfxPmsEvr_EnableInterrupt_swdlvl  = 19,  /**< \brief SWDLVL Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   112      IfxPmsEvr_EnableInterrupt_wutwkp  = 21,  /**< \brief WUT WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   113      IfxPmsEvr_EnableInterrupt_esr0wkp = 22,  /**< \brief ESR0 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   114      IfxPmsEvr_EnableInterrupt_esr1wkp = 23,  /**< \brief ESR1 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   115      IfxPmsEvr_EnableInterrupt_pinawkp = 24,  /**< \brief PINA WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   116      IfxPmsEvr_EnableInterrupt_pinbwkp = 25,  /**< \brief PINB WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   117      IfxPmsEvr_EnableInterrupt_scrint  = 26,  /**< \brief SCR INT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   118      IfxPmsEvr_EnableInterrupt_scrrst  = 27,  /**< \brief SCR RST Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   119      IfxPmsEvr_EnableInterrupt_screcc  = 28,  /**< \brief SCR ECC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   120      IfxPmsEvr_EnableInterrupt_scrwdt  = 29   /**< \brief SCR WDT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   121  } IfxPmsEvr_EnableInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   123  /** \brief Current operation mode of EVRC Regulator defined in Ifx_PMS.EVR.STAT.B.EVRCMOD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   125  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   126  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   127      IfxPmsEvr_EvrcMode_pwmMode      = 0,  /**< \brief The step-down converter is in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   128                                            * normal operational closed loop state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   129      IfxPmsEvr_EvrcMode_lowPowerMode = 1,  /**< \brief The step-down converter is in low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   130                                             * power state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   131      IfxPmsEvr_EvrcMode_startupMode  = 2,  /**< \brief The step-down converter is in start-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   132                                             * phase */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   133      IfxPmsEvr_EvrcMode_disableMode  = 3   /**< \brief EVRC is Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   134  } IfxPmsEvr_EvrcMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   136  /** \brief Switching frequency division factor for external synchronisation defined in Ifx_PMS.EVRSDCTRL7.B.SYNCDIVFAC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   137   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   138  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   139  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   140      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_1  = 0,  /**< \brief fDCDCSYNC = fDCDC. The actual duty cycle is routed. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   141      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_2  = 1,  /**< \brief fDCDCSYNC = fDCDC/2. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   142      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_4  = 2,  /**< \brief fDCDCSYNC = fDCDC/4. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   143      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_8  = 3,  /**< \brief fDCDCSYNC = fDCDC/8. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   144      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_16 = 4,  /**< \brief fDCDCSYNC = fDCDC/16. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   145      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_32 = 5   /**< \brief fDCDCSYNC = fDCDC/32. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   146  } IfxPmsEvr_ExtSyncSwitchingFreqDivFactor;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   148  /** \brief Monitoring OverVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   149   * in .Ifx_PMS.EVR.MONCTRL register for overvoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   153      IfxPmsEvr_OverVoltageMonitoring_inactive                         = 0, /**< \brief Over-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   154      IfxPmsEvr_OverVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief Over-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   155      IfxPmsEvr_OverVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Over-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   156      IfxPmsEvr_OverVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Over-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   157  } IfxPmsEvr_OverVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   159  /** \brief set TRIM Value For respective Voltages.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   160   * Defined in Ifx_PMS.EVR.TRIM and Ifx_PMS.EVR.TRIM2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   161   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   162  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   163  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   164      IfxPmsEvr_PrimaryAdcTrimValue_0 = 0,      /**< \brief Primary Adc Trim Value 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   165      IfxPmsEvr_PrimaryAdcTrimValue_1,          /**< \brief Primary Adc Trim Value 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   166      IfxPmsEvr_PrimaryAdcTrimValue_2,          /**< \brief Primary Adc Trim Value 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   167      IfxPmsEvr_PrimaryAdcTrimValue_3,          /**< \brief Primary Adc Trim Value 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   168      IfxPmsEvr_PrimaryAdcTrimValue_4,          /**< \brief Primary Adc Trim Value 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   169      IfxPmsEvr_PrimaryAdcTrimValue_5,          /**< \brief Primary Adc Trim Value 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   170      IfxPmsEvr_PrimaryAdcTrimValue_6,          /**< \brief Primary Adc Trim Value 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   171      IfxPmsEvr_PrimaryAdcTrimValue_7,          /**< \brief Primary Adc Trim Value 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   172      IfxPmsEvr_PrimaryAdcTrimValue_8,          /**< \brief Primary Adc Trim Value 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   173      IfxPmsEvr_PrimaryAdcTrimValue_9,          /**< \brief Primary Adc Trim Value 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   174      IfxPmsEvr_PrimaryAdcTrimValue_10,         /**< \brief Primary Adc Trim Value 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   175      IfxPmsEvr_PrimaryAdcTrimValue_11,         /**< \brief Primary Adc Trim Value 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   176      IfxPmsEvr_PrimaryAdcTrimValue_12,         /**< \brief Primary Adc Trim Value 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   177      IfxPmsEvr_PrimaryAdcTrimValue_13,         /**< \brief Primary Adc Trim Value 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   178      IfxPmsEvr_PrimaryAdcTrimValue_14,         /**< \brief Primary Adc Trim Value 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   179      IfxPmsEvr_PrimaryAdcTrimValue_15,         /**< \brief Primary Adc Trim Value 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   180      IfxPmsEvr_PrimaryAdcTrimValue_16,         /**< \brief Primary Adc Trim Value 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   181      IfxPmsEvr_PrimaryAdcTrimValue_17,         /**< \brief Primary Adc Trim Value 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   182      IfxPmsEvr_PrimaryAdcTrimValue_18,         /**< \brief Primary Adc Trim Value 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   183      IfxPmsEvr_PrimaryAdcTrimValue_19,         /**< \brief Primary Adc Trim Value 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   184      IfxPmsEvr_PrimaryAdcTrimValue_20,         /**< \brief Primary Adc Trim Value 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   185      IfxPmsEvr_PrimaryAdcTrimValue_21,         /**< \brief Primary Adc Trim Value 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   186      IfxPmsEvr_PrimaryAdcTrimValue_22,         /**< \brief Primary Adc Trim Value 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   187      IfxPmsEvr_PrimaryAdcTrimValue_23,         /**< \brief Primary Adc Trim Value 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   188      IfxPmsEvr_PrimaryAdcTrimValue_24,         /**< \brief Primary Adc Trim Value 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   189      IfxPmsEvr_PrimaryAdcTrimValue_25,         /**< \brief Primary Adc Trim Value 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   190      IfxPmsEvr_PrimaryAdcTrimValue_26,         /**< \brief Primary Adc Trim Value 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   191      IfxPmsEvr_PrimaryAdcTrimValue_27,         /**< \brief Primary Adc Trim Value 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   192      IfxPmsEvr_PrimaryAdcTrimValue_28,         /**< \brief Primary Adc Trim Value 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   193      IfxPmsEvr_PrimaryAdcTrimValue_29,         /**< \brief Primary Adc Trim Value 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   194      IfxPmsEvr_PrimaryAdcTrimValue_30,         /**< \brief Primary Adc Trim Value 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   195      IfxPmsEvr_PrimaryAdcTrimValue_31,         /**< \brief Primary Adc Trim Value 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   196      IfxPmsEvr_PrimaryAdcTrimValue_32,         /**< \brief Primary Adc Trim Value 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   197      IfxPmsEvr_PrimaryAdcTrimValue_33,         /**< \brief Primary Adc Trim Value 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   198      IfxPmsEvr_PrimaryAdcTrimValue_34,         /**< \brief Primary Adc Trim Value 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   199      IfxPmsEvr_PrimaryAdcTrimValue_35,         /**< \brief Primary Adc Trim Value 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   200      IfxPmsEvr_PrimaryAdcTrimValue_36,         /**< \brief Primary Adc Trim Value 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   201      IfxPmsEvr_PrimaryAdcTrimValue_37,         /**< \brief Primary Adc Trim Value 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   202      IfxPmsEvr_PrimaryAdcTrimValue_38,         /**< \brief Primary Adc Trim Value 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   203      IfxPmsEvr_PrimaryAdcTrimValue_39,         /**< \brief Primary Adc Trim Value 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   204      IfxPmsEvr_PrimaryAdcTrimValue_40,         /**< \brief Primary Adc Trim Value 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   205      IfxPmsEvr_PrimaryAdcTrimValue_41,         /**< \brief Primary Adc Trim Value 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   206      IfxPmsEvr_PrimaryAdcTrimValue_42,         /**< \brief Primary Adc Trim Value 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   207      IfxPmsEvr_PrimaryAdcTrimValue_43,         /**< \brief Primary Adc Trim Value 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   208      IfxPmsEvr_PrimaryAdcTrimValue_44,         /**< \brief Primary Adc Trim Value 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   209      IfxPmsEvr_PrimaryAdcTrimValue_45,         /**< \brief Primary Adc Trim Value 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   210      IfxPmsEvr_PrimaryAdcTrimValue_46,         /**< \brief Primary Adc Trim Value 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   211      IfxPmsEvr_PrimaryAdcTrimValue_47,         /**< \brief Primary Adc Trim Value 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   212      IfxPmsEvr_PrimaryAdcTrimValue_48,         /**< \brief Primary Adc Trim Value 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   213      IfxPmsEvr_PrimaryAdcTrimValue_49,         /**< \brief Primary Adc Trim Value 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   214      IfxPmsEvr_PrimaryAdcTrimValue_50,         /**< \brief Primary Adc Trim Value 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   215      IfxPmsEvr_PrimaryAdcTrimValue_51,         /**< \brief Primary Adc Trim Value 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   216      IfxPmsEvr_PrimaryAdcTrimValue_52,         /**< \brief Primary Adc Trim Value 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   217      IfxPmsEvr_PrimaryAdcTrimValue_53,         /**< \brief Primary Adc Trim Value 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   218      IfxPmsEvr_PrimaryAdcTrimValue_54,         /**< \brief Primary Adc Trim Value 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   219      IfxPmsEvr_PrimaryAdcTrimValue_55,         /**< \brief Primary Adc Trim Value 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   220      IfxPmsEvr_PrimaryAdcTrimValue_56,         /**< \brief Primary Adc Trim Value 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   221      IfxPmsEvr_PrimaryAdcTrimValue_57,         /**< \brief Primary Adc Trim Value 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   222      IfxPmsEvr_PrimaryAdcTrimValue_58,         /**< \brief Primary Adc Trim Value 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   223      IfxPmsEvr_PrimaryAdcTrimValue_59,         /**< \brief Primary Adc Trim Value 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   224      IfxPmsEvr_PrimaryAdcTrimValue_60,         /**< \brief Primary Adc Trim Value 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   225      IfxPmsEvr_PrimaryAdcTrimValue_61,         /**< \brief Primary Adc Trim Value 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   226      IfxPmsEvr_PrimaryAdcTrimValue_62,         /**< \brief Primary Adc Trim Value 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   227      IfxPmsEvr_PrimaryAdcTrimValue_63          /**< \brief Primary Adc Trim Value 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   228  } IfxPmsEvr_PrimaryAdcTrimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   230  /** \brief This Declare the Under and overvoltage counter defined in Ifx_PMS.EVR.MONFILT.B.ERRCNTLIMT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   232  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   233  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   234      IfxPmsEvr_SecondaryVoltageErrorCounter_level0 = 0,      /**< \brief Error Counter Limit 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   235      IfxPmsEvr_SecondaryVoltageErrorCounter_level1,          /**< \brief Error Counter Limit 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   236      IfxPmsEvr_SecondaryVoltageErrorCounter_level2,          /**< \brief Error Counter Limit 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   237      IfxPmsEvr_SecondaryVoltageErrorCounter_level3,          /**< \brief Error Counter Limit 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   238      IfxPmsEvr_SecondaryVoltageErrorCounter_level4,          /**< \brief Error Counter Limit 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   239      IfxPmsEvr_SecondaryVoltageErrorCounter_level5,          /**< \brief Error Counter Limit 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   240      IfxPmsEvr_SecondaryVoltageErrorCounter_level6,          /**< \brief Error Counter Limit 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   241      IfxPmsEvr_SecondaryVoltageErrorCounter_level7,          /**< \brief Error Counter Limit 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   242      IfxPmsEvr_SecondaryVoltageErrorCounter_level8,          /**< \brief Error Counter Limit 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   243      IfxPmsEvr_SecondaryVoltageErrorCounter_level9,          /**< \brief Error Counter Limit 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   244      IfxPmsEvr_SecondaryVoltageErrorCounter_level10,         /**< \brief Error Counter Limit 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   245      IfxPmsEvr_SecondaryVoltageErrorCounter_level11,         /**< \brief Error Counter Limit 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   246      IfxPmsEvr_SecondaryVoltageErrorCounter_level12,         /**< \brief Error Counter Limit 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   247      IfxPmsEvr_SecondaryVoltageErrorCounter_level13,         /**< \brief Error Counter Limit 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   248      IfxPmsEvr_SecondaryVoltageErrorCounter_level14,         /**< \brief Error Counter Limit 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   249      IfxPmsEvr_SecondaryVoltageErrorCounter_level15,         /**< \brief Error Counter Limit 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   250      IfxPmsEvr_SecondaryVoltageErrorCounter_level16,         /**< \brief Error Counter Limit 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   251      IfxPmsEvr_SecondaryVoltageErrorCounter_level17,         /**< \brief Error Counter Limit 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   252      IfxPmsEvr_SecondaryVoltageErrorCounter_level18,         /**< \brief Error Counter Limit 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   253      IfxPmsEvr_SecondaryVoltageErrorCounter_level19,         /**< \brief Error Counter Limit 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   254      IfxPmsEvr_SecondaryVoltageErrorCounter_level20,         /**< \brief Error Counter Limit 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   255      IfxPmsEvr_SecondaryVoltageErrorCounter_level21,         /**< \brief Error Counter Limit 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   256      IfxPmsEvr_SecondaryVoltageErrorCounter_level22,         /**< \brief Error Counter Limit 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   257      IfxPmsEvr_SecondaryVoltageErrorCounter_level23,         /**< \brief Error Counter Limit 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   258      IfxPmsEvr_SecondaryVoltageErrorCounter_level24,         /**< \brief Error Counter Limit 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   259      IfxPmsEvr_SecondaryVoltageErrorCounter_level25,         /**< \brief Error Counter Limit 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   260      IfxPmsEvr_SecondaryVoltageErrorCounter_level26,         /**< \brief Error Counter Limit 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   261      IfxPmsEvr_SecondaryVoltageErrorCounter_level27,         /**< \brief Error Counter Limit 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   262      IfxPmsEvr_SecondaryVoltageErrorCounter_level28,         /**< \brief Error Counter Limit 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   263      IfxPmsEvr_SecondaryVoltageErrorCounter_level29,         /**< \brief Error Counter Limit 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   264      IfxPmsEvr_SecondaryVoltageErrorCounter_level30,         /**< \brief Error Counter Limit 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   265      IfxPmsEvr_SecondaryVoltageErrorCounter_level31,         /**< \brief Error Counter Limit 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   266      IfxPmsEvr_SecondaryVoltageErrorCounter_level32,         /**< \brief Error Counter Limit 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   267      IfxPmsEvr_SecondaryVoltageErrorCounter_level33,         /**< \brief Error Counter Limit 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   268      IfxPmsEvr_SecondaryVoltageErrorCounter_level34,         /**< \brief Error Counter Limit 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   269      IfxPmsEvr_SecondaryVoltageErrorCounter_level35,         /**< \brief Error Counter Limit 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   270      IfxPmsEvr_SecondaryVoltageErrorCounter_level36,         /**< \brief Error Counter Limit 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   271      IfxPmsEvr_SecondaryVoltageErrorCounter_level37,         /**< \brief Error Counter Limit 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   272      IfxPmsEvr_SecondaryVoltageErrorCounter_level38,         /**< \brief Error Counter Limit 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   273      IfxPmsEvr_SecondaryVoltageErrorCounter_level39,         /**< \brief Error Counter Limit 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   274      IfxPmsEvr_SecondaryVoltageErrorCounter_level40,         /**< \brief Error Counter Limit 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   275      IfxPmsEvr_SecondaryVoltageErrorCounter_level41,         /**< \brief Error Counter Limit 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   276      IfxPmsEvr_SecondaryVoltageErrorCounter_level42,         /**< \brief Error Counter Limit 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   277      IfxPmsEvr_SecondaryVoltageErrorCounter_level43,         /**< \brief Error Counter Limit 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   278      IfxPmsEvr_SecondaryVoltageErrorCounter_level44,         /**< \brief Error Counter Limit 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   279      IfxPmsEvr_SecondaryVoltageErrorCounter_level45,         /**< \brief Error Counter Limit 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   280      IfxPmsEvr_SecondaryVoltageErrorCounter_level46,         /**< \brief Error Counter Limit 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   281      IfxPmsEvr_SecondaryVoltageErrorCounter_level47,         /**< \brief Error Counter Limit 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   282      IfxPmsEvr_SecondaryVoltageErrorCounter_level48,         /**< \brief Error Counter Limit 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   283      IfxPmsEvr_SecondaryVoltageErrorCounter_level49,         /**< \brief Error Counter Limit 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   284      IfxPmsEvr_SecondaryVoltageErrorCounter_level50,         /**< \brief Error Counter Limit 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   285      IfxPmsEvr_SecondaryVoltageErrorCounter_level51,         /**< \brief Error Counter Limit 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   286      IfxPmsEvr_SecondaryVoltageErrorCounter_level52,         /**< \brief Error Counter Limit 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   287      IfxPmsEvr_SecondaryVoltageErrorCounter_level53,         /**< \brief Error Counter Limit 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   288      IfxPmsEvr_SecondaryVoltageErrorCounter_level54,         /**< \brief Error Counter Limit 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   289      IfxPmsEvr_SecondaryVoltageErrorCounter_level55,         /**< \brief Error Counter Limit 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   290      IfxPmsEvr_SecondaryVoltageErrorCounter_level56,         /**< \brief Error Counter Limit 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   291      IfxPmsEvr_SecondaryVoltageErrorCounter_level57,         /**< \brief Error Counter Limit 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   292      IfxPmsEvr_SecondaryVoltageErrorCounter_level58,         /**< \brief Error Counter Limit 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   293      IfxPmsEvr_SecondaryVoltageErrorCounter_level59,         /**< \brief Error Counter Limit 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   294      IfxPmsEvr_SecondaryVoltageErrorCounter_level60,         /**< \brief Error Counter Limit 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   295      IfxPmsEvr_SecondaryVoltageErrorCounter_level61,         /**< \brief Error Counter Limit 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   296      IfxPmsEvr_SecondaryVoltageErrorCounter_level62,         /**< \brief Error Counter Limit 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   297      IfxPmsEvr_SecondaryVoltageErrorCounter_level63          /**< \brief Error Counter Limit 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   298  } IfxPmsEvr_SecondaryVoltageErrorCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   300  /** \brief ADC result for the generating Alarm declare in Ifx_PMS.EVR.MONFILT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   301   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   302  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   303  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   304      IfxPmsEvr_SupplyFilter_eachConversionResult    = 0,    /**< \brief Each conversion result is compared with threshold to generate alarm */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   305      IfxPmsEvr_SupplyFilter_avgAdcConversionResult0 = 1,    /**< \brief A moving mean average of consecutive 0 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   306      IfxPmsEvr_SupplyFilter_avgAdcConversionResult1,        /**< \brief A moving mean average of consecutive 1 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   307      IfxPmsEvr_SupplyFilter_avgAdcConversionResult2,        /**< \brief A moving mean average of consecutive 2 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   308      IfxPmsEvr_SupplyFilter_avgAdcConversionResult3,        /**< \brief A moving mean average of consecutive 3 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   309      IfxPmsEvr_SupplyFilter_avgAdcConversionResult4,        /**< \brief A moving mean average of consecutive 4 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   310      IfxPmsEvr_SupplyFilter_avgAdcConversionResult5,        /**< \brief A moving mean average of consecutive 5 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   311      IfxPmsEvr_SupplyFilter_avgAdcConversionResult6,        /**< \brief A moving mean average of consecutive 6 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   312      IfxPmsEvr_SupplyFilter_avgAdcConversionResult7,        /**< \brief A moving mean average of consecutive 7 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   313      IfxPmsEvr_SupplyFilter_avgAdcConversionResult8,        /**< \brief A moving mean average of consecutive 8 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   314      IfxPmsEvr_SupplyFilter_avgAdcConversionResult9,        /**< \brief A moving mean average of consecutive 9 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   315      IfxPmsEvr_SupplyFilter_avgAdcConversionResult10,       /**< \brief A moving mean average of consecutive 10 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   316      IfxPmsEvr_SupplyFilter_avgAdcConversionResult11,       /**< \brief A moving mean average of consecutive 11 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   317      IfxPmsEvr_SupplyFilter_avgAdcConversionResult12,       /**< \brief A moving mean average of consecutive 12 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   318      IfxPmsEvr_SupplyFilter_avgAdcConversionResult13,       /**< \brief A moving mean average of consecutive 13 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   319      IfxPmsEvr_SupplyFilter_avgAdcConversionResult14        /**< \brief A moving mean average of consecutive 14 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   320  } IfxPmsEvr_SupplyFilter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   322  /** \brief Controls the voltage supply Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   323   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   324  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   325  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   326      IfxPmsEvr_SupplyMode_evrc  = 0,  /**< \brief select EVRC regulator or VDD Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   327      IfxPmsEvr_SupplyMode_evr33 = 1,  /**< \brief select EVR33 regulator or VDDP3 Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   328      IfxPmsEvr_SupplyMode_swd   = 2,  /**< \brief select  external VEXT suppy watchdog */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   329      IfxPmsEvr_SupplyMode_evrpr = 3,  /**< \brief select EVRPR or VDDPD supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   330      IfxPmsEvr_SupplyMode_vddm  = 4,  /**< \brief VDDM ADC Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   331      IfxPmsEvr_SupplyMode_sb    = 5   /**< \brief EVR Standby Supply or VEVRSB supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   332  } IfxPmsEvr_SupplyMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   334  /** \brief Monitoring underVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   335   * in Ifx_PMS.EVR.MONCTRL register for undervoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   336   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   337  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   338  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   339      IfxPmsEvr_UnderVoltageMonitoring_inactive                         = 0, /**< \brief Under-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   340      IfxPmsEvr_UnderVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief under-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   341      IfxPmsEvr_UnderVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Under-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   342      IfxPmsEvr_UnderVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Under-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   343  } IfxPmsEvr_UnderVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   344  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   345  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   346  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   347  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   348  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   349  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   351  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   352  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   353      volatile void *regAddr;       /**< \brief Register Address to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   354      uint32         value;         /**< \brief Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   355      uint32         mask;          /**< \brief Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   356  } IfxPmsEvr_StepDownRegulatorRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   358  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   359  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   360      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   361      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   362      float32                                         waitInSecs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   363  } IfxPmsEvr_initSequencePhase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   365  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   366  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   367      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   368      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   369  } IfxPmsEvr_checkRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   371  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   372  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   373      uint8                                  numOfPhases;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   374      IFX_CONST IfxPmsEvr_initSequencePhase *phaseConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   375  } IfxPmsEvr_initSequence;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   377  /** \addtogroup IfxLld_Pms_Std_Evr_Over-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   378   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   380  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   384  /** \brief set Over Voltage Monitoring Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   385   * \param pms pointer to the Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   386   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   387   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   388   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   390  IFX_INLINE void IfxPmsEvr_setOverVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_OverVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   392  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   393  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   394  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   396  /** \brief set Secondary Over Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   397   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   398   * \param thresholdLevel over-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   399   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   400   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   402   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   403  IFX_EXTERN void IfxPmsEvr_setSecondaryOverVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   404  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   405  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   407  /** \addtogroup IfxLld_Pms_Std_Evr_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   408   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   410  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   411  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   412  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   414  /** \brief Configure a Blanking Filter Delay
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   415   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   416   * \param delay Blanking Filter Delay in ms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   419  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   421  /** \brief This function enables the synchronisation output to synchronize the external
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   422   * SMPS regulator with respect to the internal EVRC regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   423   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   424   * \param enabled enable/disable DC-DC synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   425   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   426   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   427  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   429  /** \brief Enable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   430   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   431   * \param interruptType Select The Interrupt Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   432   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   433   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   434  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   435  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   436  /** \brief enables wakeup on VEXT supply ramp-up after blanking filter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   437   * time has expired
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   438   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   439   * \param enabled Wake-up Enable on VEXT Supply ramp-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   442  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   444  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   445   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   446   * \param trimValue OSC fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   448   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   449  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   450  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   451  /** \brief set frequency spread threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   452   * \param pms pointer to PMS module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   453   * \param thresholdLevel maximum frequency spreading value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   456  IFX_INLINE void IfxPmsEvr_setFrequencySpreadThreshold(Ifx_PMS *pms, uint16 thresholdLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   458  /** \brief This configures the state of N ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   459   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   460   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   461   * \param nmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   464  IFX_INLINE void IfxPmsEvr_setNmosLevel(Ifx_PMS *pms, boolean nmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   466  /** \brief This configures the state of P ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   467   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   468   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   469   * \param pmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   472  IFX_INLINE void IfxPmsEvr_setPmosLevel(Ifx_PMS *pms, boolean pmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   474  /** \brief set regulator switching frequency in Hz....(100MHz/samplingFactor)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   475   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   476   * \param samplingFactor Over-sampling Factor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   477   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   478   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   479  IFX_INLINE void IfxPmsEvr_setRegulatorSwitchingFrequency(Ifx_PMS *pms, uint16 samplingFactor);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   481  /** \brief set reset trim value for EVRC,EVR33 and external VEXT supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   482   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   483   * \param resetTrimValue Reset Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   484   * \param supply select EVRC,EVR33 regulator or external VEXT supply watchdog
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   487  IFX_INLINE void IfxPmsEvr_setResetTrimValueMv(Ifx_PMS *pms, float32 resetTrimValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   489  /** \brief SD Regulator Voltage Target selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   490   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   491   * \param outputLevel The VDD output level of the Step down regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   494  IFX_INLINE void IfxPmsEvr_setSdRegulatorOutputLevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   496  /** \brief SD Regulator Voltage Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   497   * \param pms Pointer to PMS Moule Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   498   * \param trimValue offset added to the VDD output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   499   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   501  IFX_INLINE void IfxPmsEvr_setSdRegulatorPrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   503  /** \brief set DLMU RAM Block in Standby Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   504   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   505   * \param ramBlock DLMU RAM block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   506   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   507   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   508  IFX_INLINE void IfxPmsEvr_setStandbyRamSupply(Ifx_PMS *pms, uint8 ramBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   509  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   510  /** \brief Set Switching frequency division factor for external synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   511   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   512   * \param divider Switching frequency division factor for external synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   515  IFX_INLINE void IfxPmsEvr_setSwitchingFreqDivFactorForExternalsync(Ifx_PMS *pms, IfxPmsEvr_ExtSyncSwitchingFreqDivFactor divider);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   517  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   518   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   519   * \param trimValue OSC Signed fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   520   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   521   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   522  IFX_INLINE void IfxPmsEvr_signedFineTrimEvrClock(Ifx_PMS *pms, sint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   525  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   526  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   528  /** \brief filter the  each conversion result or avarage of consecutive adc result to compare with threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   529   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   530   * \param adcFilterValue specify average of consecutive ADC results
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   531   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   532   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   534  IFX_EXTERN void IfxPmsEvr_filterSecondaryConversionResult(Ifx_PMS *pms, IfxPmsEvr_SupplyFilter adcFilterValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   536  /** \brief get secondray ADC result for respective Voltage supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   537   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   538   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   539   * \return last conversion result of the ADC measurement
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   540   * of respective voltage by secondary monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   542  IFX_EXTERN uint8 IfxPmsEvr_getSecondaryAdcResult(Ifx_PMS *pms, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   544  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   546  /** \addtogroup IfxLld_Pms_Std_Evr_Under-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   547   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   549  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   550  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   551  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   553  /** \brief set Under Voltage Monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   554   * \param pms Pointer to the PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   555   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   556   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   557   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   558   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   559  IFX_INLINE void IfxPmsEvr_setUnderVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_UnderVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   560  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   561  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   562  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   563  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   565  /** \brief set Secondary under Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   566   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   567   * \param thresholdLevel under-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   568   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   569   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   570   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   571   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   572  IFX_EXTERN void IfxPmsEvr_setSecondaryUnderVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   574  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   576  /** \addtogroup IfxLld_Pms_Std_Evr_EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   577   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   579  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   580  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   581  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   583  /** \brief Enabled/Disable Reset Trigger signal for EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   584   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   585   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   586   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   588  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   590  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   591   * \param averageADCC Average value of PMS_EVRADCSTAT.ADCCV.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   592   * \return ADC VDD Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   594  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   596  /** \brief get current operating mode of EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   597   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   598   * \return EVRC Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   599   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   600  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   602  /** \brief get EVRC Regulator Voltage status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   603   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   604   * \return EVRC Regulator Voltage OK status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   605   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   606  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   608  /** \brief get ADC 1.25 V Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   609   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   610   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   611   * the VDD / EVRC supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   613  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   615  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   617  /** \addtogroup IfxLld_Pms_Std_Evr_EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   618   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   620  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   621  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   624  /** \brief Enabled/Disable Reset Trigger signal for EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   625   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   626   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   627   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   628   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   629  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   631  /** \brief get ADC 3.3 V Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   632   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   633   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   634   * the VDDP3 / EVR33 supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   635   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   636  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   638  /** \brief set 3.3 V Regulator Voltage Primary ADC Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   639   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   640   * \param trimValue Trimming value offeset added to Output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   641   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   642   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   643  IFX_INLINE void IfxPmsEvr_setEvr33PrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   645  /** \brief The VDDP3 output level of the EVR33 LDO regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   646   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   647   * \param outputLevel define VDDP3 output level of the EVR33 LDO regulator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   648   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   649   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   650  IFX_INLINE void IfxPmsEvr_setEvr33VoltageOutputlevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   652  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   653  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   654  /** \addtogroup IfxLld_Pms_Std_Evr_SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   655   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   657  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   658  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   659  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   660  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   661  /** \brief get ADC External Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   662   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   663   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   664   * the external VEXT (3.3V / 5V) supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   665   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   666  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   668  /** \brief Enabled/Disable Reset Trigger signal for SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   669   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   670   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   671   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   673  IFX_INLINE void IfxPmsEvr_swdResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   675  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   678  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   679  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   681  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   682   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   683  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   685  /** \brief Disable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   686   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   687   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   688  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   690  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   691   * \param averageADC33V Average of PMS_EVRSTAT.ADC33V values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   692   * \return ADC VDDP3 Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   693   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   694  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   696  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   697   * \param averageADCSWDV Average of PMS_EVRADCSTAT.ADCSWDV values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   698   * \return ADC VEXT Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   699   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   700  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   702  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   703   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   704  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   706  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   707   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   708   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   709  IFX_INLINE void IfxPmsEvr_wait(float32 waitInSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   711  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   712  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   713  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   715  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase1Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   716  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   717  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase2Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   719  /** \brief
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   721  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase3Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   723  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequencePhase          IfxPmsEvr_cfgPhasesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   725  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequence               IfxPmsEvr_cfgSequenceDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   727  IFX_EXTERN IFX_CONST IfxPmsEvr_checkRegConfig             IfxPmsEvr_checkRegCfgDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   729  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_checkRegValuesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   731  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   732  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   733  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   735  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   736  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   737      boolean allRight = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   738      sint32  regCfgCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   739  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   740      if (PMS_EVRSTAT.B.EVRC == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   741      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   742          for (regCfgCount = 0; regCfgCount < checkConfig->numOfRegisters; regCfgCount++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   743          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   744              uint32                                      regVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   745              const IfxPmsEvr_StepDownRegulatorRegConfig *regConfig = &checkConfig->regConfig[regCfgCount];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   746              regVal  = (*((volatile uint32 *)regConfig->regAddr));
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   747              regVal &= regConfig->mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   749              if (regVal != regConfig->value)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   750              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   751                  allRight = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   752              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   753          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   755          /*Check if EVRSTAT.SDVOK is set*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   756          if (allRight == TRUE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   757          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   758              if (PMS_EVRSTAT.B.SDVOK != 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   759              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   760                  allRight = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   761              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   762          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   763      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   764  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   765      return allRight;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   769  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   771      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   773      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   775      pms->PMSWCR0.B.BLNKFIL = delay;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   776  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   777      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   778  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   780  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   781  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   782  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   783      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   785      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   786      uint32 mask = (1U << interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   787      pms->PMSIEN.U &= (~mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   789      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   790  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   791  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   793  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   794  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   795      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   796  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   797      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   799      pms->PMSWCR5.B.DCDCSYNCO = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   801      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   802  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   803  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   804  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   805  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   806  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   807      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   808  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   809      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   811      pms->PMSIEN.U |= (1U << interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   812  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   813      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   814  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   816  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   817  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   818  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   819      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   820  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   821      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   822  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   823      pms->PMSWCR0.B.PWRWKEN = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   824  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   825      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   826  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   827  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   829  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   830  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   831      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   833      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   834      pms->EVRRSTCON.B.BPRST33OFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   835      pms->EVRRSTCON.B.RST33OFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   837      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   838  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   839  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   841  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   842  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   843      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   844  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   845      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   846  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   847      pms->EVRRSTCON.B.BPRSTCOFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   848      pms->EVRRSTCON.B.RSTCOFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   849  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   850      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   851  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   852  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   854  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   855  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   856      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   858      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   860      pms->EVROSCCTRL.B.OSCFTRIM = trimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   861  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   862      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   863  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   864  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   866  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   867  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   868      float32 vddVoltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   869      vddVoltage = (IFXPMSEVR_ADC_VDD_LSB * averageADCC + 0.7125);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   870      return vddVoltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   871  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   872  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   874  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   875  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   876      float32 vddp3Voltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   877      vddp3Voltage = (IFXPMSEVR_ADC_VDDP3_LSB * averageADC33V + 0.9375);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   878      return vddp3Voltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   879  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   882  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   883  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   884      float32 vextVoltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   885      vextVoltage = (IFXPMSEVR_ADC_VEXT_LSB * averageADCSWDV + 1.050);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   886      return vextVoltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   887  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   889  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   890  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   891  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   892      return (IfxPmsEvr_EvrcMode)pms->EVRSTAT.B.EVRCMOD;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   893  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   895  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   896  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   897  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   898      return (boolean)pms->EVRSTAT.B.SDVOK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   899  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   900  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   901  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   902  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   903  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   904      return pms->EVRADCSTAT.B.ADC33V;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   905  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   906  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   907  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   908  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   909  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   910      return pms->EVRADCSTAT.B.ADCCV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   911  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   912  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   913  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   914  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   915  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   916      return pms->EVRADCSTAT.B.ADCSWDV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   917  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   918  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   920  #if defined(__TASKING__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   921  #pragma optimize L
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   922  #elif defined(__HIGHTEC__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   923  #pragma GCC optimize ("-O2")
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   924  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   925  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   926  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   927      boolean                                     pmsInitDone    = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   928      uint32                                      regVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   929      uint16                                      endinitSfty_pw = IfxScuWdt_getGlobalSafetyEndinitPasswordInline();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   930      const IfxPmsEvr_initSequencePhase          *phaseConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   931      const IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   932  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   933      if (PMS_EVRSTAT.B.EVRC == 1U)
	ld.bu	d15,[a15]@los(0xf024802c)
.L60:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   933      if (PMS_EVRSTAT.B.EVRC == 1U)      (inlined)
	jz.t	d15:0,.L2
.L125:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   934      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   935          /*Loop through each configured phase*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   936          for (phaseConfig = &sequence->phaseConfig[0];
	lea	a4,IfxPmsEvr_cfgSequenceDefault+4
	ld.a	a15,[a4]
.L103:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   937               phaseConfig < &sequence->phaseConfig[sequence->numOfPhases];      (inlined)
	j	.L3

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   938               phaseConfig++)      (inlined)
.L4:
	ld.w	d15,.2.cnt
.L104:
	sh	d4,d3,#2
.L126:
	mov.a	a5,d15
.L127:
	movh	d15,#65532
.L128:
	or	d15,d4
	st.w	[a5],d15

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   576      while (MODULE_SCU.SEICON0.B.ENDINIT == 1)      (inlined)
.L5:
	ld.w	d15,[a2]
.L129:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   576      while (MODULE_SCU.SEICON0.B.ENDINIT == 1)      (inlined)
	jnz.t	d15:1,.L5
.L64:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     2   * \file IfxPmsEvr.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     3   * \brief PMS  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     4   * \ingroup IfxLld_Pms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    41   * \defgroup IfxLld_Pms_Std_Evr EVR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    42   * \ingroup IfxLld_Pms_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    43   * \defgroup IfxLld_Pms_Std_Evr_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    44   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    45   * \defgroup IfxLld_Pms_Std_Evr_Over-Voltage Over Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    46   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    47   * \defgroup IfxLld_Pms_Std_Evr_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    48   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    49   * \defgroup IfxLld_Pms_Std_Evr_Under-Voltage Under Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    50   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    51   * \defgroup IfxLld_Pms_Std_Evr_EVRC EVRC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    52   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    53   * \defgroup IfxLld_Pms_Std_Evr_EVR33 EVR33 Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    54   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    55   * \defgroup IfxLld_Pms_Std_Evr_SWD SWD Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    56   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    59  #ifndef IFXPMSEVR_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    60  #define IFXPMSEVR_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    62  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    63  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    66  #include "_Impl/IfxPms_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    67  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    69  #include "IfxPms_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    70  #include "IfxPms_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    71  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    72  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    74  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    75  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    78  #define IFXPMSEVR_ADC_VDD_LSB               (0.005f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    80  #define IFXPMSEVR_ADC_VDDP3_LSB             (0.015f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    82  #define IFXPMSEVR_ADC_VEXT_LSB              (0.02f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    84  #define IFXPMSEVR_CTRL_UP_WAIT_TIMEOUTCOUNT (0x100)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    86  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    87  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    88  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    89  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    90  /** \addtogroup IfxLld_Pms_Std_Evr_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    91   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    92  /** \brief Configure respective interrupts define in register Ifx_PMS.PMSIEN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    93   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    94  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    95  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    96      IfxPmsEvr_EnableInterrupt_ovswd   = 0,   /**< \brief OVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    97      IfxPmsEvr_EnableInterrupt_uvswd   = 1,   /**< \brief UVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    98      IfxPmsEvr_EnableInterrupt_ov33    = 2,   /**< \brief OV33Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    99      IfxPmsEvr_EnableInterrupt_uv33    = 3,   /**< \brief UV33 Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   100      IfxPmsEvr_EnableInterrupt_ovc     = 4,   /**< \brief OVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   101      IfxPmsEvr_EnableInterrupt_uvc     = 5,   /**< \brief UVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   102      IfxPmsEvr_EnableInterrupt_ovpre   = 6,   /**< \brief OVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   103      IfxPmsEvr_EnableInterrupt_uvpre   = 7,   /**< \brief UVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   104      IfxPmsEvr_EnableInterrupt_ovddm   = 8,   /**< \brief OVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   105      IfxPmsEvr_EnableInterrupt_uvddm   = 9,   /**< \brief UVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   106      IfxPmsEvr_EnableInterrupt_ovsb    = 10,  /**< \brief OVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   107      IfxPmsEvr_EnableInterrupt_uvsb    = 11,  /**< \brief UVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   108      IfxPmsEvr_EnableInterrupt_evrcmod = 16,  /**< \brief EVRCMOD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   109      IfxPmsEvr_EnableInterrupt_sdvok   = 17,  /**< \brief SDVOK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   110      IfxPmsEvr_EnableInterrupt_synclck = 18,  /**< \brief SD SYNCLCK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   111      IfxPmsEvr_EnableInterrupt_swdlvl  = 19,  /**< \brief SWDLVL Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   112      IfxPmsEvr_EnableInterrupt_wutwkp  = 21,  /**< \brief WUT WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   113      IfxPmsEvr_EnableInterrupt_esr0wkp = 22,  /**< \brief ESR0 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   114      IfxPmsEvr_EnableInterrupt_esr1wkp = 23,  /**< \brief ESR1 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   115      IfxPmsEvr_EnableInterrupt_pinawkp = 24,  /**< \brief PINA WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   116      IfxPmsEvr_EnableInterrupt_pinbwkp = 25,  /**< \brief PINB WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   117      IfxPmsEvr_EnableInterrupt_scrint  = 26,  /**< \brief SCR INT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   118      IfxPmsEvr_EnableInterrupt_scrrst  = 27,  /**< \brief SCR RST Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   119      IfxPmsEvr_EnableInterrupt_screcc  = 28,  /**< \brief SCR ECC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   120      IfxPmsEvr_EnableInterrupt_scrwdt  = 29   /**< \brief SCR WDT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   121  } IfxPmsEvr_EnableInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   123  /** \brief Current operation mode of EVRC Regulator defined in Ifx_PMS.EVR.STAT.B.EVRCMOD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   125  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   126  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   127      IfxPmsEvr_EvrcMode_pwmMode      = 0,  /**< \brief The step-down converter is in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   128                                            * normal operational closed loop state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   129      IfxPmsEvr_EvrcMode_lowPowerMode = 1,  /**< \brief The step-down converter is in low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   130                                             * power state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   131      IfxPmsEvr_EvrcMode_startupMode  = 2,  /**< \brief The step-down converter is in start-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   132                                             * phase */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   133      IfxPmsEvr_EvrcMode_disableMode  = 3   /**< \brief EVRC is Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   134  } IfxPmsEvr_EvrcMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   136  /** \brief Switching frequency division factor for external synchronisation defined in Ifx_PMS.EVRSDCTRL7.B.SYNCDIVFAC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   137   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   138  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   139  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   140      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_1  = 0,  /**< \brief fDCDCSYNC = fDCDC. The actual duty cycle is routed. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   141      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_2  = 1,  /**< \brief fDCDCSYNC = fDCDC/2. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   142      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_4  = 2,  /**< \brief fDCDCSYNC = fDCDC/4. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   143      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_8  = 3,  /**< \brief fDCDCSYNC = fDCDC/8. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   144      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_16 = 4,  /**< \brief fDCDCSYNC = fDCDC/16. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   145      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_32 = 5   /**< \brief fDCDCSYNC = fDCDC/32. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   146  } IfxPmsEvr_ExtSyncSwitchingFreqDivFactor;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   148  /** \brief Monitoring OverVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   149   * in .Ifx_PMS.EVR.MONCTRL register for overvoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   153      IfxPmsEvr_OverVoltageMonitoring_inactive                         = 0, /**< \brief Over-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   154      IfxPmsEvr_OverVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief Over-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   155      IfxPmsEvr_OverVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Over-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   156      IfxPmsEvr_OverVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Over-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   157  } IfxPmsEvr_OverVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   159  /** \brief set TRIM Value For respective Voltages.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   160   * Defined in Ifx_PMS.EVR.TRIM and Ifx_PMS.EVR.TRIM2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   161   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   162  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   163  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   164      IfxPmsEvr_PrimaryAdcTrimValue_0 = 0,      /**< \brief Primary Adc Trim Value 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   165      IfxPmsEvr_PrimaryAdcTrimValue_1,          /**< \brief Primary Adc Trim Value 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   166      IfxPmsEvr_PrimaryAdcTrimValue_2,          /**< \brief Primary Adc Trim Value 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   167      IfxPmsEvr_PrimaryAdcTrimValue_3,          /**< \brief Primary Adc Trim Value 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   168      IfxPmsEvr_PrimaryAdcTrimValue_4,          /**< \brief Primary Adc Trim Value 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   169      IfxPmsEvr_PrimaryAdcTrimValue_5,          /**< \brief Primary Adc Trim Value 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   170      IfxPmsEvr_PrimaryAdcTrimValue_6,          /**< \brief Primary Adc Trim Value 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   171      IfxPmsEvr_PrimaryAdcTrimValue_7,          /**< \brief Primary Adc Trim Value 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   172      IfxPmsEvr_PrimaryAdcTrimValue_8,          /**< \brief Primary Adc Trim Value 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   173      IfxPmsEvr_PrimaryAdcTrimValue_9,          /**< \brief Primary Adc Trim Value 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   174      IfxPmsEvr_PrimaryAdcTrimValue_10,         /**< \brief Primary Adc Trim Value 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   175      IfxPmsEvr_PrimaryAdcTrimValue_11,         /**< \brief Primary Adc Trim Value 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   176      IfxPmsEvr_PrimaryAdcTrimValue_12,         /**< \brief Primary Adc Trim Value 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   177      IfxPmsEvr_PrimaryAdcTrimValue_13,         /**< \brief Primary Adc Trim Value 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   178      IfxPmsEvr_PrimaryAdcTrimValue_14,         /**< \brief Primary Adc Trim Value 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   179      IfxPmsEvr_PrimaryAdcTrimValue_15,         /**< \brief Primary Adc Trim Value 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   180      IfxPmsEvr_PrimaryAdcTrimValue_16,         /**< \brief Primary Adc Trim Value 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   181      IfxPmsEvr_PrimaryAdcTrimValue_17,         /**< \brief Primary Adc Trim Value 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   182      IfxPmsEvr_PrimaryAdcTrimValue_18,         /**< \brief Primary Adc Trim Value 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   183      IfxPmsEvr_PrimaryAdcTrimValue_19,         /**< \brief Primary Adc Trim Value 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   184      IfxPmsEvr_PrimaryAdcTrimValue_20,         /**< \brief Primary Adc Trim Value 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   185      IfxPmsEvr_PrimaryAdcTrimValue_21,         /**< \brief Primary Adc Trim Value 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   186      IfxPmsEvr_PrimaryAdcTrimValue_22,         /**< \brief Primary Adc Trim Value 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   187      IfxPmsEvr_PrimaryAdcTrimValue_23,         /**< \brief Primary Adc Trim Value 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   188      IfxPmsEvr_PrimaryAdcTrimValue_24,         /**< \brief Primary Adc Trim Value 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   189      IfxPmsEvr_PrimaryAdcTrimValue_25,         /**< \brief Primary Adc Trim Value 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   190      IfxPmsEvr_PrimaryAdcTrimValue_26,         /**< \brief Primary Adc Trim Value 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   191      IfxPmsEvr_PrimaryAdcTrimValue_27,         /**< \brief Primary Adc Trim Value 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   192      IfxPmsEvr_PrimaryAdcTrimValue_28,         /**< \brief Primary Adc Trim Value 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   193      IfxPmsEvr_PrimaryAdcTrimValue_29,         /**< \brief Primary Adc Trim Value 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   194      IfxPmsEvr_PrimaryAdcTrimValue_30,         /**< \brief Primary Adc Trim Value 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   195      IfxPmsEvr_PrimaryAdcTrimValue_31,         /**< \brief Primary Adc Trim Value 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   196      IfxPmsEvr_PrimaryAdcTrimValue_32,         /**< \brief Primary Adc Trim Value 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   197      IfxPmsEvr_PrimaryAdcTrimValue_33,         /**< \brief Primary Adc Trim Value 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   198      IfxPmsEvr_PrimaryAdcTrimValue_34,         /**< \brief Primary Adc Trim Value 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   199      IfxPmsEvr_PrimaryAdcTrimValue_35,         /**< \brief Primary Adc Trim Value 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   200      IfxPmsEvr_PrimaryAdcTrimValue_36,         /**< \brief Primary Adc Trim Value 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   201      IfxPmsEvr_PrimaryAdcTrimValue_37,         /**< \brief Primary Adc Trim Value 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   202      IfxPmsEvr_PrimaryAdcTrimValue_38,         /**< \brief Primary Adc Trim Value 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   203      IfxPmsEvr_PrimaryAdcTrimValue_39,         /**< \brief Primary Adc Trim Value 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   204      IfxPmsEvr_PrimaryAdcTrimValue_40,         /**< \brief Primary Adc Trim Value 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   205      IfxPmsEvr_PrimaryAdcTrimValue_41,         /**< \brief Primary Adc Trim Value 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   206      IfxPmsEvr_PrimaryAdcTrimValue_42,         /**< \brief Primary Adc Trim Value 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   207      IfxPmsEvr_PrimaryAdcTrimValue_43,         /**< \brief Primary Adc Trim Value 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   208      IfxPmsEvr_PrimaryAdcTrimValue_44,         /**< \brief Primary Adc Trim Value 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   209      IfxPmsEvr_PrimaryAdcTrimValue_45,         /**< \brief Primary Adc Trim Value 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   210      IfxPmsEvr_PrimaryAdcTrimValue_46,         /**< \brief Primary Adc Trim Value 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   211      IfxPmsEvr_PrimaryAdcTrimValue_47,         /**< \brief Primary Adc Trim Value 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   212      IfxPmsEvr_PrimaryAdcTrimValue_48,         /**< \brief Primary Adc Trim Value 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   213      IfxPmsEvr_PrimaryAdcTrimValue_49,         /**< \brief Primary Adc Trim Value 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   214      IfxPmsEvr_PrimaryAdcTrimValue_50,         /**< \brief Primary Adc Trim Value 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   215      IfxPmsEvr_PrimaryAdcTrimValue_51,         /**< \brief Primary Adc Trim Value 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   216      IfxPmsEvr_PrimaryAdcTrimValue_52,         /**< \brief Primary Adc Trim Value 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   217      IfxPmsEvr_PrimaryAdcTrimValue_53,         /**< \brief Primary Adc Trim Value 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   218      IfxPmsEvr_PrimaryAdcTrimValue_54,         /**< \brief Primary Adc Trim Value 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   219      IfxPmsEvr_PrimaryAdcTrimValue_55,         /**< \brief Primary Adc Trim Value 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   220      IfxPmsEvr_PrimaryAdcTrimValue_56,         /**< \brief Primary Adc Trim Value 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   221      IfxPmsEvr_PrimaryAdcTrimValue_57,         /**< \brief Primary Adc Trim Value 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   222      IfxPmsEvr_PrimaryAdcTrimValue_58,         /**< \brief Primary Adc Trim Value 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   223      IfxPmsEvr_PrimaryAdcTrimValue_59,         /**< \brief Primary Adc Trim Value 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   224      IfxPmsEvr_PrimaryAdcTrimValue_60,         /**< \brief Primary Adc Trim Value 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   225      IfxPmsEvr_PrimaryAdcTrimValue_61,         /**< \brief Primary Adc Trim Value 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   226      IfxPmsEvr_PrimaryAdcTrimValue_62,         /**< \brief Primary Adc Trim Value 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   227      IfxPmsEvr_PrimaryAdcTrimValue_63          /**< \brief Primary Adc Trim Value 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   228  } IfxPmsEvr_PrimaryAdcTrimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   230  /** \brief This Declare the Under and overvoltage counter defined in Ifx_PMS.EVR.MONFILT.B.ERRCNTLIMT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   232  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   233  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   234      IfxPmsEvr_SecondaryVoltageErrorCounter_level0 = 0,      /**< \brief Error Counter Limit 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   235      IfxPmsEvr_SecondaryVoltageErrorCounter_level1,          /**< \brief Error Counter Limit 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   236      IfxPmsEvr_SecondaryVoltageErrorCounter_level2,          /**< \brief Error Counter Limit 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   237      IfxPmsEvr_SecondaryVoltageErrorCounter_level3,          /**< \brief Error Counter Limit 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   238      IfxPmsEvr_SecondaryVoltageErrorCounter_level4,          /**< \brief Error Counter Limit 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   239      IfxPmsEvr_SecondaryVoltageErrorCounter_level5,          /**< \brief Error Counter Limit 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   240      IfxPmsEvr_SecondaryVoltageErrorCounter_level6,          /**< \brief Error Counter Limit 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   241      IfxPmsEvr_SecondaryVoltageErrorCounter_level7,          /**< \brief Error Counter Limit 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   242      IfxPmsEvr_SecondaryVoltageErrorCounter_level8,          /**< \brief Error Counter Limit 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   243      IfxPmsEvr_SecondaryVoltageErrorCounter_level9,          /**< \brief Error Counter Limit 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   244      IfxPmsEvr_SecondaryVoltageErrorCounter_level10,         /**< \brief Error Counter Limit 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   245      IfxPmsEvr_SecondaryVoltageErrorCounter_level11,         /**< \brief Error Counter Limit 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   246      IfxPmsEvr_SecondaryVoltageErrorCounter_level12,         /**< \brief Error Counter Limit 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   247      IfxPmsEvr_SecondaryVoltageErrorCounter_level13,         /**< \brief Error Counter Limit 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   248      IfxPmsEvr_SecondaryVoltageErrorCounter_level14,         /**< \brief Error Counter Limit 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   249      IfxPmsEvr_SecondaryVoltageErrorCounter_level15,         /**< \brief Error Counter Limit 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   250      IfxPmsEvr_SecondaryVoltageErrorCounter_level16,         /**< \brief Error Counter Limit 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   251      IfxPmsEvr_SecondaryVoltageErrorCounter_level17,         /**< \brief Error Counter Limit 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   252      IfxPmsEvr_SecondaryVoltageErrorCounter_level18,         /**< \brief Error Counter Limit 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   253      IfxPmsEvr_SecondaryVoltageErrorCounter_level19,         /**< \brief Error Counter Limit 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   254      IfxPmsEvr_SecondaryVoltageErrorCounter_level20,         /**< \brief Error Counter Limit 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   255      IfxPmsEvr_SecondaryVoltageErrorCounter_level21,         /**< \brief Error Counter Limit 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   256      IfxPmsEvr_SecondaryVoltageErrorCounter_level22,         /**< \brief Error Counter Limit 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   257      IfxPmsEvr_SecondaryVoltageErrorCounter_level23,         /**< \brief Error Counter Limit 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   258      IfxPmsEvr_SecondaryVoltageErrorCounter_level24,         /**< \brief Error Counter Limit 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   259      IfxPmsEvr_SecondaryVoltageErrorCounter_level25,         /**< \brief Error Counter Limit 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   260      IfxPmsEvr_SecondaryVoltageErrorCounter_level26,         /**< \brief Error Counter Limit 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   261      IfxPmsEvr_SecondaryVoltageErrorCounter_level27,         /**< \brief Error Counter Limit 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   262      IfxPmsEvr_SecondaryVoltageErrorCounter_level28,         /**< \brief Error Counter Limit 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   263      IfxPmsEvr_SecondaryVoltageErrorCounter_level29,         /**< \brief Error Counter Limit 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   264      IfxPmsEvr_SecondaryVoltageErrorCounter_level30,         /**< \brief Error Counter Limit 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   265      IfxPmsEvr_SecondaryVoltageErrorCounter_level31,         /**< \brief Error Counter Limit 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   266      IfxPmsEvr_SecondaryVoltageErrorCounter_level32,         /**< \brief Error Counter Limit 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   267      IfxPmsEvr_SecondaryVoltageErrorCounter_level33,         /**< \brief Error Counter Limit 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   268      IfxPmsEvr_SecondaryVoltageErrorCounter_level34,         /**< \brief Error Counter Limit 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   269      IfxPmsEvr_SecondaryVoltageErrorCounter_level35,         /**< \brief Error Counter Limit 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   270      IfxPmsEvr_SecondaryVoltageErrorCounter_level36,         /**< \brief Error Counter Limit 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   271      IfxPmsEvr_SecondaryVoltageErrorCounter_level37,         /**< \brief Error Counter Limit 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   272      IfxPmsEvr_SecondaryVoltageErrorCounter_level38,         /**< \brief Error Counter Limit 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   273      IfxPmsEvr_SecondaryVoltageErrorCounter_level39,         /**< \brief Error Counter Limit 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   274      IfxPmsEvr_SecondaryVoltageErrorCounter_level40,         /**< \brief Error Counter Limit 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   275      IfxPmsEvr_SecondaryVoltageErrorCounter_level41,         /**< \brief Error Counter Limit 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   276      IfxPmsEvr_SecondaryVoltageErrorCounter_level42,         /**< \brief Error Counter Limit 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   277      IfxPmsEvr_SecondaryVoltageErrorCounter_level43,         /**< \brief Error Counter Limit 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   278      IfxPmsEvr_SecondaryVoltageErrorCounter_level44,         /**< \brief Error Counter Limit 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   279      IfxPmsEvr_SecondaryVoltageErrorCounter_level45,         /**< \brief Error Counter Limit 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   280      IfxPmsEvr_SecondaryVoltageErrorCounter_level46,         /**< \brief Error Counter Limit 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   281      IfxPmsEvr_SecondaryVoltageErrorCounter_level47,         /**< \brief Error Counter Limit 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   282      IfxPmsEvr_SecondaryVoltageErrorCounter_level48,         /**< \brief Error Counter Limit 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   283      IfxPmsEvr_SecondaryVoltageErrorCounter_level49,         /**< \brief Error Counter Limit 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   284      IfxPmsEvr_SecondaryVoltageErrorCounter_level50,         /**< \brief Error Counter Limit 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   285      IfxPmsEvr_SecondaryVoltageErrorCounter_level51,         /**< \brief Error Counter Limit 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   286      IfxPmsEvr_SecondaryVoltageErrorCounter_level52,         /**< \brief Error Counter Limit 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   287      IfxPmsEvr_SecondaryVoltageErrorCounter_level53,         /**< \brief Error Counter Limit 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   288      IfxPmsEvr_SecondaryVoltageErrorCounter_level54,         /**< \brief Error Counter Limit 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   289      IfxPmsEvr_SecondaryVoltageErrorCounter_level55,         /**< \brief Error Counter Limit 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   290      IfxPmsEvr_SecondaryVoltageErrorCounter_level56,         /**< \brief Error Counter Limit 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   291      IfxPmsEvr_SecondaryVoltageErrorCounter_level57,         /**< \brief Error Counter Limit 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   292      IfxPmsEvr_SecondaryVoltageErrorCounter_level58,         /**< \brief Error Counter Limit 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   293      IfxPmsEvr_SecondaryVoltageErrorCounter_level59,         /**< \brief Error Counter Limit 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   294      IfxPmsEvr_SecondaryVoltageErrorCounter_level60,         /**< \brief Error Counter Limit 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   295      IfxPmsEvr_SecondaryVoltageErrorCounter_level61,         /**< \brief Error Counter Limit 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   296      IfxPmsEvr_SecondaryVoltageErrorCounter_level62,         /**< \brief Error Counter Limit 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   297      IfxPmsEvr_SecondaryVoltageErrorCounter_level63          /**< \brief Error Counter Limit 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   298  } IfxPmsEvr_SecondaryVoltageErrorCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   300  /** \brief ADC result for the generating Alarm declare in Ifx_PMS.EVR.MONFILT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   301   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   302  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   303  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   304      IfxPmsEvr_SupplyFilter_eachConversionResult    = 0,    /**< \brief Each conversion result is compared with threshold to generate alarm */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   305      IfxPmsEvr_SupplyFilter_avgAdcConversionResult0 = 1,    /**< \brief A moving mean average of consecutive 0 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   306      IfxPmsEvr_SupplyFilter_avgAdcConversionResult1,        /**< \brief A moving mean average of consecutive 1 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   307      IfxPmsEvr_SupplyFilter_avgAdcConversionResult2,        /**< \brief A moving mean average of consecutive 2 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   308      IfxPmsEvr_SupplyFilter_avgAdcConversionResult3,        /**< \brief A moving mean average of consecutive 3 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   309      IfxPmsEvr_SupplyFilter_avgAdcConversionResult4,        /**< \brief A moving mean average of consecutive 4 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   310      IfxPmsEvr_SupplyFilter_avgAdcConversionResult5,        /**< \brief A moving mean average of consecutive 5 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   311      IfxPmsEvr_SupplyFilter_avgAdcConversionResult6,        /**< \brief A moving mean average of consecutive 6 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   312      IfxPmsEvr_SupplyFilter_avgAdcConversionResult7,        /**< \brief A moving mean average of consecutive 7 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   313      IfxPmsEvr_SupplyFilter_avgAdcConversionResult8,        /**< \brief A moving mean average of consecutive 8 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   314      IfxPmsEvr_SupplyFilter_avgAdcConversionResult9,        /**< \brief A moving mean average of consecutive 9 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   315      IfxPmsEvr_SupplyFilter_avgAdcConversionResult10,       /**< \brief A moving mean average of consecutive 10 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   316      IfxPmsEvr_SupplyFilter_avgAdcConversionResult11,       /**< \brief A moving mean average of consecutive 11 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   317      IfxPmsEvr_SupplyFilter_avgAdcConversionResult12,       /**< \brief A moving mean average of consecutive 12 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   318      IfxPmsEvr_SupplyFilter_avgAdcConversionResult13,       /**< \brief A moving mean average of consecutive 13 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   319      IfxPmsEvr_SupplyFilter_avgAdcConversionResult14        /**< \brief A moving mean average of consecutive 14 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   320  } IfxPmsEvr_SupplyFilter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   322  /** \brief Controls the voltage supply Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   323   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   324  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   325  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   326      IfxPmsEvr_SupplyMode_evrc  = 0,  /**< \brief select EVRC regulator or VDD Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   327      IfxPmsEvr_SupplyMode_evr33 = 1,  /**< \brief select EVR33 regulator or VDDP3 Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   328      IfxPmsEvr_SupplyMode_swd   = 2,  /**< \brief select  external VEXT suppy watchdog */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   329      IfxPmsEvr_SupplyMode_evrpr = 3,  /**< \brief select EVRPR or VDDPD supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   330      IfxPmsEvr_SupplyMode_vddm  = 4,  /**< \brief VDDM ADC Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   331      IfxPmsEvr_SupplyMode_sb    = 5   /**< \brief EVR Standby Supply or VEVRSB supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   332  } IfxPmsEvr_SupplyMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   334  /** \brief Monitoring underVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   335   * in Ifx_PMS.EVR.MONCTRL register for undervoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   336   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   337  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   338  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   339      IfxPmsEvr_UnderVoltageMonitoring_inactive                         = 0, /**< \brief Under-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   340      IfxPmsEvr_UnderVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief under-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   341      IfxPmsEvr_UnderVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Under-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   342      IfxPmsEvr_UnderVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Under-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   343  } IfxPmsEvr_UnderVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   344  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   345  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   346  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   347  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   348  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   349  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   351  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   352  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   353      volatile void *regAddr;       /**< \brief Register Address to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   354      uint32         value;         /**< \brief Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   355      uint32         mask;          /**< \brief Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   356  } IfxPmsEvr_StepDownRegulatorRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   358  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   359  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   360      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   361      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   362      float32                                         waitInSecs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   363  } IfxPmsEvr_initSequencePhase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   365  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   366  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   367      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   368      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   369  } IfxPmsEvr_checkRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   371  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   372  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   373      uint8                                  numOfPhases;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   374      IFX_CONST IfxPmsEvr_initSequencePhase *phaseConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   375  } IfxPmsEvr_initSequence;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   377  /** \addtogroup IfxLld_Pms_Std_Evr_Over-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   378   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   380  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   384  /** \brief set Over Voltage Monitoring Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   385   * \param pms pointer to the Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   386   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   387   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   388   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   390  IFX_INLINE void IfxPmsEvr_setOverVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_OverVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   392  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   393  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   394  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   396  /** \brief set Secondary Over Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   397   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   398   * \param thresholdLevel over-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   399   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   400   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   402   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   403  IFX_EXTERN void IfxPmsEvr_setSecondaryOverVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   404  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   405  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   407  /** \addtogroup IfxLld_Pms_Std_Evr_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   408   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   410  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   411  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   412  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   414  /** \brief Configure a Blanking Filter Delay
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   415   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   416   * \param delay Blanking Filter Delay in ms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   419  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   421  /** \brief This function enables the synchronisation output to synchronize the external
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   422   * SMPS regulator with respect to the internal EVRC regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   423   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   424   * \param enabled enable/disable DC-DC synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   425   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   426   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   427  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   429  /** \brief Enable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   430   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   431   * \param interruptType Select The Interrupt Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   432   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   433   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   434  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   435  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   436  /** \brief enables wakeup on VEXT supply ramp-up after blanking filter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   437   * time has expired
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   438   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   439   * \param enabled Wake-up Enable on VEXT Supply ramp-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   442  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   444  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   445   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   446   * \param trimValue OSC fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   448   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   449  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   450  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   451  /** \brief set frequency spread threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   452   * \param pms pointer to PMS module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   453   * \param thresholdLevel maximum frequency spreading value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   456  IFX_INLINE void IfxPmsEvr_setFrequencySpreadThreshold(Ifx_PMS *pms, uint16 thresholdLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   458  /** \brief This configures the state of N ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   459   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   460   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   461   * \param nmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   464  IFX_INLINE void IfxPmsEvr_setNmosLevel(Ifx_PMS *pms, boolean nmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   466  /** \brief This configures the state of P ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   467   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   468   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   469   * \param pmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   472  IFX_INLINE void IfxPmsEvr_setPmosLevel(Ifx_PMS *pms, boolean pmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   474  /** \brief set regulator switching frequency in Hz....(100MHz/samplingFactor)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   475   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   476   * \param samplingFactor Over-sampling Factor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   477   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   478   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   479  IFX_INLINE void IfxPmsEvr_setRegulatorSwitchingFrequency(Ifx_PMS *pms, uint16 samplingFactor);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   481  /** \brief set reset trim value for EVRC,EVR33 and external VEXT supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   482   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   483   * \param resetTrimValue Reset Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   484   * \param supply select EVRC,EVR33 regulator or external VEXT supply watchdog
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   487  IFX_INLINE void IfxPmsEvr_setResetTrimValueMv(Ifx_PMS *pms, float32 resetTrimValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   489  /** \brief SD Regulator Voltage Target selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   490   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   491   * \param outputLevel The VDD output level of the Step down regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   494  IFX_INLINE void IfxPmsEvr_setSdRegulatorOutputLevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   496  /** \brief SD Regulator Voltage Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   497   * \param pms Pointer to PMS Moule Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   498   * \param trimValue offset added to the VDD output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   499   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   501  IFX_INLINE void IfxPmsEvr_setSdRegulatorPrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   503  /** \brief set DLMU RAM Block in Standby Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   504   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   505   * \param ramBlock DLMU RAM block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   506   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   507   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   508  IFX_INLINE void IfxPmsEvr_setStandbyRamSupply(Ifx_PMS *pms, uint8 ramBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   509  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   510  /** \brief Set Switching frequency division factor for external synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   511   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   512   * \param divider Switching frequency division factor for external synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   515  IFX_INLINE void IfxPmsEvr_setSwitchingFreqDivFactorForExternalsync(Ifx_PMS *pms, IfxPmsEvr_ExtSyncSwitchingFreqDivFactor divider);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   517  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   518   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   519   * \param trimValue OSC Signed fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   520   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   521   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   522  IFX_INLINE void IfxPmsEvr_signedFineTrimEvrClock(Ifx_PMS *pms, sint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   525  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   526  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   528  /** \brief filter the  each conversion result or avarage of consecutive adc result to compare with threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   529   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   530   * \param adcFilterValue specify average of consecutive ADC results
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   531   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   532   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   534  IFX_EXTERN void IfxPmsEvr_filterSecondaryConversionResult(Ifx_PMS *pms, IfxPmsEvr_SupplyFilter adcFilterValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   536  /** \brief get secondray ADC result for respective Voltage supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   537   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   538   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   539   * \return last conversion result of the ADC measurement
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   540   * of respective voltage by secondary monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   542  IFX_EXTERN uint8 IfxPmsEvr_getSecondaryAdcResult(Ifx_PMS *pms, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   544  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   546  /** \addtogroup IfxLld_Pms_Std_Evr_Under-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   547   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   549  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   550  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   551  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   553  /** \brief set Under Voltage Monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   554   * \param pms Pointer to the PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   555   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   556   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   557   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   558   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   559  IFX_INLINE void IfxPmsEvr_setUnderVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_UnderVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   560  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   561  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   562  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   563  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   565  /** \brief set Secondary under Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   566   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   567   * \param thresholdLevel under-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   568   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   569   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   570   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   571   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   572  IFX_EXTERN void IfxPmsEvr_setSecondaryUnderVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   574  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   576  /** \addtogroup IfxLld_Pms_Std_Evr_EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   577   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   579  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   580  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   581  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   583  /** \brief Enabled/Disable Reset Trigger signal for EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   584   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   585   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   586   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   588  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   590  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   591   * \param averageADCC Average value of PMS_EVRADCSTAT.ADCCV.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   592   * \return ADC VDD Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   594  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   596  /** \brief get current operating mode of EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   597   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   598   * \return EVRC Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   599   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   600  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   602  /** \brief get EVRC Regulator Voltage status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   603   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   604   * \return EVRC Regulator Voltage OK status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   605   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   606  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   608  /** \brief get ADC 1.25 V Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   609   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   610   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   611   * the VDD / EVRC supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   613  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   615  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   617  /** \addtogroup IfxLld_Pms_Std_Evr_EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   618   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   620  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   621  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   624  /** \brief Enabled/Disable Reset Trigger signal for EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   625   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   626   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   627   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   628   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   629  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   631  /** \brief get ADC 3.3 V Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   632   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   633   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   634   * the VDDP3 / EVR33 supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   635   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   636  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   638  /** \brief set 3.3 V Regulator Voltage Primary ADC Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   639   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   640   * \param trimValue Trimming value offeset added to Output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   641   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   642   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   643  IFX_INLINE void IfxPmsEvr_setEvr33PrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   645  /** \brief The VDDP3 output level of the EVR33 LDO regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   646   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   647   * \param outputLevel define VDDP3 output level of the EVR33 LDO regulator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   648   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   649   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   650  IFX_INLINE void IfxPmsEvr_setEvr33VoltageOutputlevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   652  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   653  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   654  /** \addtogroup IfxLld_Pms_Std_Evr_SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   655   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   657  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   658  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   659  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   660  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   661  /** \brief get ADC External Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   662   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   663   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   664   * the external VEXT (3.3V / 5V) supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   665   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   666  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   668  /** \brief Enabled/Disable Reset Trigger signal for SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   669   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   670   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   671   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   673  IFX_INLINE void IfxPmsEvr_swdResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   675  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   678  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   679  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   681  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   682   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   683  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   685  /** \brief Disable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   686   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   687   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   688  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   690  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   691   * \param averageADC33V Average of PMS_EVRSTAT.ADC33V values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   692   * \return ADC VDDP3 Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   693   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   694  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   696  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   697   * \param averageADCSWDV Average of PMS_EVRADCSTAT.ADCSWDV values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   698   * \return ADC VEXT Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   699   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   700  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   702  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   703   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   704  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   706  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   707   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   708   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   709  IFX_INLINE void IfxPmsEvr_wait(float32 waitInSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   711  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   712  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   713  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   715  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase1Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   716  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   717  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase2Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   719  /** \brief
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   721  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase3Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   723  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequencePhase          IfxPmsEvr_cfgPhasesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   725  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequence               IfxPmsEvr_cfgSequenceDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   727  IFX_EXTERN IFX_CONST IfxPmsEvr_checkRegConfig             IfxPmsEvr_checkRegCfgDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   729  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_checkRegValuesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   731  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   732  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   733  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   735  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   736  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   737      boolean allRight = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   738      sint32  regCfgCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   739  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   740      if (PMS_EVRSTAT.B.EVRC == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   741      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   742          for (regCfgCount = 0; regCfgCount < checkConfig->numOfRegisters; regCfgCount++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   743          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   744              uint32                                      regVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   745              const IfxPmsEvr_StepDownRegulatorRegConfig *regConfig = &checkConfig->regConfig[regCfgCount];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   746              regVal  = (*((volatile uint32 *)regConfig->regAddr));
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   747              regVal &= regConfig->mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   749              if (regVal != regConfig->value)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   750              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   751                  allRight = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   752              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   753          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   755          /*Check if EVRSTAT.SDVOK is set*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   756          if (allRight == TRUE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   757          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   758              if (PMS_EVRSTAT.B.SDVOK != 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   759              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   760                  allRight = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   761              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   762          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   763      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   764  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   765      return allRight;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   769  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   771      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   773      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   775      pms->PMSWCR0.B.BLNKFIL = delay;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   776  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   777      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   778  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   780  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   781  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   782  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   783      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   785      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   786      uint32 mask = (1U << interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   787      pms->PMSIEN.U &= (~mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   789      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   790  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   791  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   793  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   794  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   795      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   796  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   797      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   799      pms->PMSWCR5.B.DCDCSYNCO = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   801      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   802  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   803  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   804  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   805  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   806  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   807      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   808  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   809      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   811      pms->PMSIEN.U |= (1U << interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   812  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   813      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   814  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   816  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   817  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   818  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   819      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   820  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   821      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   822  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   823      pms->PMSWCR0.B.PWRWKEN = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   824  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   825      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   826  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   827  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   829  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   830  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   831      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   833      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   834      pms->EVRRSTCON.B.BPRST33OFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   835      pms->EVRRSTCON.B.RST33OFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   837      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   838  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   839  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   841  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   842  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   843      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   844  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   845      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   846  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   847      pms->EVRRSTCON.B.BPRSTCOFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   848      pms->EVRRSTCON.B.RSTCOFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   849  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   850      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   851  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   852  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   854  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   855  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   856      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   858      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   860      pms->EVROSCCTRL.B.OSCFTRIM = trimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   861  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   862      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   863  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   864  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   866  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   867  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   868      float32 vddVoltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   869      vddVoltage = (IFXPMSEVR_ADC_VDD_LSB * averageADCC + 0.7125);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   870      return vddVoltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   871  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   872  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   874  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   875  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   876      float32 vddp3Voltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   877      vddp3Voltage = (IFXPMSEVR_ADC_VDDP3_LSB * averageADC33V + 0.9375);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   878      return vddp3Voltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   879  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   882  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   883  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   884      float32 vextVoltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   885      vextVoltage = (IFXPMSEVR_ADC_VEXT_LSB * averageADCSWDV + 1.050);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   886      return vextVoltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   887  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   889  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   890  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   891  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   892      return (IfxPmsEvr_EvrcMode)pms->EVRSTAT.B.EVRCMOD;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   893  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   895  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   896  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   897  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   898      return (boolean)pms->EVRSTAT.B.SDVOK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   899  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   900  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   901  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   902  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   903  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   904      return pms->EVRADCSTAT.B.ADC33V;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   905  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   906  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   907  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   908  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   909  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   910      return pms->EVRADCSTAT.B.ADCCV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   911  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   912  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   913  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   914  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   915  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   916      return pms->EVRADCSTAT.B.ADCSWDV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   917  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   918  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   920  #if defined(__TASKING__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   921  #pragma optimize L
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   922  #elif defined(__HIGHTEC__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   923  #pragma GCC optimize ("-O2")
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   924  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   925  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   926  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   927      boolean                                     pmsInitDone    = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   928      uint32                                      regVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   929      uint16                                      endinitSfty_pw = IfxScuWdt_getGlobalSafetyEndinitPasswordInline();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   930      const IfxPmsEvr_initSequencePhase          *phaseConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   931      const IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   932  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   933      if (PMS_EVRSTAT.B.EVRC == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   934      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   935          /*Loop through each configured phase*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   936          for (phaseConfig = &sequence->phaseConfig[0];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   937               phaseConfig < &sequence->phaseConfig[sequence->numOfPhases];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   938               phaseConfig++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   939          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   940              IfxScuWdt_clearGlobalSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   941  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   942              /*Loop through each register which is configured in the phase configuration*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   943              for (regConfig = &phaseConfig->regConfig[0];
	ld.a	a6,[a15]4
.L105:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   944                   regConfig < &phaseConfig->regConfig[phaseConfig->numOfRegisters];      (inlined)
	j	.L6

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   945                   regConfig++)      (inlined)
.L7:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   944                   regConfig < &phaseConfig->regConfig[phaseConfig->numOfRegisters];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   945                   regConfig++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   946              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   947                  regVal  = (*((volatile uint32 *)regConfig->regAddr));
	ld.a	a7,[a6]
.L130:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   948                  regVal &= ~regConfig->mask;
	mov	d1,#-1
	ld.w	d15,[a6]8
.L131:
	xor	d15,d1
	ld.w	d0,[a7]
.L107:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   949                  regVal |= regConfig->value;
	and	d0,d15
	ld.w	d15,[a6]4
.L132:
	lea	a6,[a6]12
.L108:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   950  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   951                  /** During normal running one must wait for the LCK bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   952                   * However, for this function, as this is used only with CPU0 startup no wait required
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   953                   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   954                  (*((volatile uint32 *)regConfig->regAddr)) = regVal; /*Write to the physical register*/
	or	d0,d15
	st.w	[a7],d0

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   944                   regConfig < &phaseConfig->regConfig[phaseConfig->numOfRegisters];      (inlined)
.L6:
	mov.d	d0,a6
.L109:
	ld.bu	d15,[a15]
.L133:
	mul	d1,d15,#12
	ld.w	d15,[a15]4
.L134:
	add	d1,d15
.L135:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   944                   regConfig < &phaseConfig->regConfig[phaseConfig->numOfRegisters];      (inlined)
	jlt.u	d0,d1,.L7
.L136:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   955              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   956  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   957              PMS_EVRSDCTRL0.B.UP = 1;
	ld.w	d15,.3.cnt
	mov.a	a6,d15
.L106:
	ld.bu	d15,[a6]
.L137:
	or	d15,#64
	st.b	[a6],d15
.L69:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   631      return password;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   632  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   634  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   635  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   636  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   637      return (boolean)MODULE_SCU.WDTS.CON0.B.ENDINIT;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   638  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   640  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   641  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   642  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   643      uint16        password;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   644      Ifx_SCU_WDTS *watchdog = &MODULE_SCU.WDTS;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   646      /* Read Password from Safety WDT CON0 register
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   647       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   648       * to toggle them before returning password */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   649      password  = watchdog->CON0.B.PW;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   650      password ^= 0x003F;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   652      return password;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   656  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   658      if (watchdog->CON0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   660          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   661          watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   662                             (0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   663                             (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   664                             (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   666  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   667      /* Set ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   668      watchdog->CON0.U = (1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   669                         (1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   670                         (password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   671                         (watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   672  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   673      /* read back ENDINIT and wait until it has been set */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   674      while (watchdog->CON0.B.ENDINIT == 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   675      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   676  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   677  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   678  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   679  IFX_INLINE void IfxScuWdt_setGlobalSafetyEndinitInline(uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   681      /* Set EndInit Watch-dog*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   682      MODULE_SCU.SEICON0.U = (0xFFFCU << 16U) | (password << IFX_SCU_SEICON0_EPW_OFF) | (1 << IFX_SCU_SEICON0_ENDINIT_OFF);
	ld.w	d15,.4.cnt
.L138:
	or	d4,d15
	st.w	[a5],d4

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   684      while (MODULE_SCU.SEICON0.B.ENDINIT == 0)      (inlined)
.L8:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   683  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   684      while (MODULE_SCU.SEICON0.B.ENDINIT == 0)
	ld.w	d15,[a2]
.L139:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   684      while (MODULE_SCU.SEICON0.B.ENDINIT == 0)      (inlined)
	jz.t	d15:1,.L8
.L70:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     2   * \file IfxPmsEvr.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     3   * \brief PMS  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     4   * \ingroup IfxLld_Pms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    41   * \defgroup IfxLld_Pms_Std_Evr EVR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    42   * \ingroup IfxLld_Pms_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    43   * \defgroup IfxLld_Pms_Std_Evr_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    44   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    45   * \defgroup IfxLld_Pms_Std_Evr_Over-Voltage Over Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    46   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    47   * \defgroup IfxLld_Pms_Std_Evr_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    48   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    49   * \defgroup IfxLld_Pms_Std_Evr_Under-Voltage Under Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    50   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    51   * \defgroup IfxLld_Pms_Std_Evr_EVRC EVRC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    52   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    53   * \defgroup IfxLld_Pms_Std_Evr_EVR33 EVR33 Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    54   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    55   * \defgroup IfxLld_Pms_Std_Evr_SWD SWD Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    56   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    59  #ifndef IFXPMSEVR_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    60  #define IFXPMSEVR_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    62  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    63  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    66  #include "_Impl/IfxPms_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    67  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    69  #include "IfxPms_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    70  #include "IfxPms_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    71  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    72  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    74  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    75  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    78  #define IFXPMSEVR_ADC_VDD_LSB               (0.005f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    80  #define IFXPMSEVR_ADC_VDDP3_LSB             (0.015f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    82  #define IFXPMSEVR_ADC_VEXT_LSB              (0.02f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    84  #define IFXPMSEVR_CTRL_UP_WAIT_TIMEOUTCOUNT (0x100)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    86  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    87  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    88  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    89  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    90  /** \addtogroup IfxLld_Pms_Std_Evr_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    91   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    92  /** \brief Configure respective interrupts define in register Ifx_PMS.PMSIEN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    93   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    94  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    95  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    96      IfxPmsEvr_EnableInterrupt_ovswd   = 0,   /**< \brief OVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    97      IfxPmsEvr_EnableInterrupt_uvswd   = 1,   /**< \brief UVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    98      IfxPmsEvr_EnableInterrupt_ov33    = 2,   /**< \brief OV33Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    99      IfxPmsEvr_EnableInterrupt_uv33    = 3,   /**< \brief UV33 Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   100      IfxPmsEvr_EnableInterrupt_ovc     = 4,   /**< \brief OVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   101      IfxPmsEvr_EnableInterrupt_uvc     = 5,   /**< \brief UVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   102      IfxPmsEvr_EnableInterrupt_ovpre   = 6,   /**< \brief OVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   103      IfxPmsEvr_EnableInterrupt_uvpre   = 7,   /**< \brief UVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   104      IfxPmsEvr_EnableInterrupt_ovddm   = 8,   /**< \brief OVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   105      IfxPmsEvr_EnableInterrupt_uvddm   = 9,   /**< \brief UVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   106      IfxPmsEvr_EnableInterrupt_ovsb    = 10,  /**< \brief OVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   107      IfxPmsEvr_EnableInterrupt_uvsb    = 11,  /**< \brief UVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   108      IfxPmsEvr_EnableInterrupt_evrcmod = 16,  /**< \brief EVRCMOD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   109      IfxPmsEvr_EnableInterrupt_sdvok   = 17,  /**< \brief SDVOK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   110      IfxPmsEvr_EnableInterrupt_synclck = 18,  /**< \brief SD SYNCLCK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   111      IfxPmsEvr_EnableInterrupt_swdlvl  = 19,  /**< \brief SWDLVL Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   112      IfxPmsEvr_EnableInterrupt_wutwkp  = 21,  /**< \brief WUT WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   113      IfxPmsEvr_EnableInterrupt_esr0wkp = 22,  /**< \brief ESR0 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   114      IfxPmsEvr_EnableInterrupt_esr1wkp = 23,  /**< \brief ESR1 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   115      IfxPmsEvr_EnableInterrupt_pinawkp = 24,  /**< \brief PINA WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   116      IfxPmsEvr_EnableInterrupt_pinbwkp = 25,  /**< \brief PINB WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   117      IfxPmsEvr_EnableInterrupt_scrint  = 26,  /**< \brief SCR INT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   118      IfxPmsEvr_EnableInterrupt_scrrst  = 27,  /**< \brief SCR RST Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   119      IfxPmsEvr_EnableInterrupt_screcc  = 28,  /**< \brief SCR ECC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   120      IfxPmsEvr_EnableInterrupt_scrwdt  = 29   /**< \brief SCR WDT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   121  } IfxPmsEvr_EnableInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   123  /** \brief Current operation mode of EVRC Regulator defined in Ifx_PMS.EVR.STAT.B.EVRCMOD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   125  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   126  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   127      IfxPmsEvr_EvrcMode_pwmMode      = 0,  /**< \brief The step-down converter is in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   128                                            * normal operational closed loop state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   129      IfxPmsEvr_EvrcMode_lowPowerMode = 1,  /**< \brief The step-down converter is in low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   130                                             * power state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   131      IfxPmsEvr_EvrcMode_startupMode  = 2,  /**< \brief The step-down converter is in start-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   132                                             * phase */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   133      IfxPmsEvr_EvrcMode_disableMode  = 3   /**< \brief EVRC is Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   134  } IfxPmsEvr_EvrcMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   136  /** \brief Switching frequency division factor for external synchronisation defined in Ifx_PMS.EVRSDCTRL7.B.SYNCDIVFAC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   137   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   138  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   139  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   140      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_1  = 0,  /**< \brief fDCDCSYNC = fDCDC. The actual duty cycle is routed. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   141      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_2  = 1,  /**< \brief fDCDCSYNC = fDCDC/2. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   142      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_4  = 2,  /**< \brief fDCDCSYNC = fDCDC/4. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   143      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_8  = 3,  /**< \brief fDCDCSYNC = fDCDC/8. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   144      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_16 = 4,  /**< \brief fDCDCSYNC = fDCDC/16. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   145      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_32 = 5   /**< \brief fDCDCSYNC = fDCDC/32. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   146  } IfxPmsEvr_ExtSyncSwitchingFreqDivFactor;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   148  /** \brief Monitoring OverVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   149   * in .Ifx_PMS.EVR.MONCTRL register for overvoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   153      IfxPmsEvr_OverVoltageMonitoring_inactive                         = 0, /**< \brief Over-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   154      IfxPmsEvr_OverVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief Over-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   155      IfxPmsEvr_OverVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Over-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   156      IfxPmsEvr_OverVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Over-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   157  } IfxPmsEvr_OverVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   159  /** \brief set TRIM Value For respective Voltages.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   160   * Defined in Ifx_PMS.EVR.TRIM and Ifx_PMS.EVR.TRIM2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   161   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   162  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   163  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   164      IfxPmsEvr_PrimaryAdcTrimValue_0 = 0,      /**< \brief Primary Adc Trim Value 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   165      IfxPmsEvr_PrimaryAdcTrimValue_1,          /**< \brief Primary Adc Trim Value 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   166      IfxPmsEvr_PrimaryAdcTrimValue_2,          /**< \brief Primary Adc Trim Value 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   167      IfxPmsEvr_PrimaryAdcTrimValue_3,          /**< \brief Primary Adc Trim Value 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   168      IfxPmsEvr_PrimaryAdcTrimValue_4,          /**< \brief Primary Adc Trim Value 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   169      IfxPmsEvr_PrimaryAdcTrimValue_5,          /**< \brief Primary Adc Trim Value 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   170      IfxPmsEvr_PrimaryAdcTrimValue_6,          /**< \brief Primary Adc Trim Value 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   171      IfxPmsEvr_PrimaryAdcTrimValue_7,          /**< \brief Primary Adc Trim Value 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   172      IfxPmsEvr_PrimaryAdcTrimValue_8,          /**< \brief Primary Adc Trim Value 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   173      IfxPmsEvr_PrimaryAdcTrimValue_9,          /**< \brief Primary Adc Trim Value 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   174      IfxPmsEvr_PrimaryAdcTrimValue_10,         /**< \brief Primary Adc Trim Value 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   175      IfxPmsEvr_PrimaryAdcTrimValue_11,         /**< \brief Primary Adc Trim Value 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   176      IfxPmsEvr_PrimaryAdcTrimValue_12,         /**< \brief Primary Adc Trim Value 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   177      IfxPmsEvr_PrimaryAdcTrimValue_13,         /**< \brief Primary Adc Trim Value 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   178      IfxPmsEvr_PrimaryAdcTrimValue_14,         /**< \brief Primary Adc Trim Value 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   179      IfxPmsEvr_PrimaryAdcTrimValue_15,         /**< \brief Primary Adc Trim Value 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   180      IfxPmsEvr_PrimaryAdcTrimValue_16,         /**< \brief Primary Adc Trim Value 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   181      IfxPmsEvr_PrimaryAdcTrimValue_17,         /**< \brief Primary Adc Trim Value 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   182      IfxPmsEvr_PrimaryAdcTrimValue_18,         /**< \brief Primary Adc Trim Value 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   183      IfxPmsEvr_PrimaryAdcTrimValue_19,         /**< \brief Primary Adc Trim Value 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   184      IfxPmsEvr_PrimaryAdcTrimValue_20,         /**< \brief Primary Adc Trim Value 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   185      IfxPmsEvr_PrimaryAdcTrimValue_21,         /**< \brief Primary Adc Trim Value 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   186      IfxPmsEvr_PrimaryAdcTrimValue_22,         /**< \brief Primary Adc Trim Value 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   187      IfxPmsEvr_PrimaryAdcTrimValue_23,         /**< \brief Primary Adc Trim Value 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   188      IfxPmsEvr_PrimaryAdcTrimValue_24,         /**< \brief Primary Adc Trim Value 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   189      IfxPmsEvr_PrimaryAdcTrimValue_25,         /**< \brief Primary Adc Trim Value 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   190      IfxPmsEvr_PrimaryAdcTrimValue_26,         /**< \brief Primary Adc Trim Value 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   191      IfxPmsEvr_PrimaryAdcTrimValue_27,         /**< \brief Primary Adc Trim Value 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   192      IfxPmsEvr_PrimaryAdcTrimValue_28,         /**< \brief Primary Adc Trim Value 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   193      IfxPmsEvr_PrimaryAdcTrimValue_29,         /**< \brief Primary Adc Trim Value 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   194      IfxPmsEvr_PrimaryAdcTrimValue_30,         /**< \brief Primary Adc Trim Value 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   195      IfxPmsEvr_PrimaryAdcTrimValue_31,         /**< \brief Primary Adc Trim Value 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   196      IfxPmsEvr_PrimaryAdcTrimValue_32,         /**< \brief Primary Adc Trim Value 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   197      IfxPmsEvr_PrimaryAdcTrimValue_33,         /**< \brief Primary Adc Trim Value 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   198      IfxPmsEvr_PrimaryAdcTrimValue_34,         /**< \brief Primary Adc Trim Value 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   199      IfxPmsEvr_PrimaryAdcTrimValue_35,         /**< \brief Primary Adc Trim Value 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   200      IfxPmsEvr_PrimaryAdcTrimValue_36,         /**< \brief Primary Adc Trim Value 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   201      IfxPmsEvr_PrimaryAdcTrimValue_37,         /**< \brief Primary Adc Trim Value 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   202      IfxPmsEvr_PrimaryAdcTrimValue_38,         /**< \brief Primary Adc Trim Value 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   203      IfxPmsEvr_PrimaryAdcTrimValue_39,         /**< \brief Primary Adc Trim Value 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   204      IfxPmsEvr_PrimaryAdcTrimValue_40,         /**< \brief Primary Adc Trim Value 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   205      IfxPmsEvr_PrimaryAdcTrimValue_41,         /**< \brief Primary Adc Trim Value 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   206      IfxPmsEvr_PrimaryAdcTrimValue_42,         /**< \brief Primary Adc Trim Value 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   207      IfxPmsEvr_PrimaryAdcTrimValue_43,         /**< \brief Primary Adc Trim Value 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   208      IfxPmsEvr_PrimaryAdcTrimValue_44,         /**< \brief Primary Adc Trim Value 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   209      IfxPmsEvr_PrimaryAdcTrimValue_45,         /**< \brief Primary Adc Trim Value 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   210      IfxPmsEvr_PrimaryAdcTrimValue_46,         /**< \brief Primary Adc Trim Value 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   211      IfxPmsEvr_PrimaryAdcTrimValue_47,         /**< \brief Primary Adc Trim Value 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   212      IfxPmsEvr_PrimaryAdcTrimValue_48,         /**< \brief Primary Adc Trim Value 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   213      IfxPmsEvr_PrimaryAdcTrimValue_49,         /**< \brief Primary Adc Trim Value 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   214      IfxPmsEvr_PrimaryAdcTrimValue_50,         /**< \brief Primary Adc Trim Value 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   215      IfxPmsEvr_PrimaryAdcTrimValue_51,         /**< \brief Primary Adc Trim Value 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   216      IfxPmsEvr_PrimaryAdcTrimValue_52,         /**< \brief Primary Adc Trim Value 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   217      IfxPmsEvr_PrimaryAdcTrimValue_53,         /**< \brief Primary Adc Trim Value 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   218      IfxPmsEvr_PrimaryAdcTrimValue_54,         /**< \brief Primary Adc Trim Value 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   219      IfxPmsEvr_PrimaryAdcTrimValue_55,         /**< \brief Primary Adc Trim Value 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   220      IfxPmsEvr_PrimaryAdcTrimValue_56,         /**< \brief Primary Adc Trim Value 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   221      IfxPmsEvr_PrimaryAdcTrimValue_57,         /**< \brief Primary Adc Trim Value 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   222      IfxPmsEvr_PrimaryAdcTrimValue_58,         /**< \brief Primary Adc Trim Value 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   223      IfxPmsEvr_PrimaryAdcTrimValue_59,         /**< \brief Primary Adc Trim Value 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   224      IfxPmsEvr_PrimaryAdcTrimValue_60,         /**< \brief Primary Adc Trim Value 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   225      IfxPmsEvr_PrimaryAdcTrimValue_61,         /**< \brief Primary Adc Trim Value 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   226      IfxPmsEvr_PrimaryAdcTrimValue_62,         /**< \brief Primary Adc Trim Value 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   227      IfxPmsEvr_PrimaryAdcTrimValue_63          /**< \brief Primary Adc Trim Value 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   228  } IfxPmsEvr_PrimaryAdcTrimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   230  /** \brief This Declare the Under and overvoltage counter defined in Ifx_PMS.EVR.MONFILT.B.ERRCNTLIMT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   232  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   233  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   234      IfxPmsEvr_SecondaryVoltageErrorCounter_level0 = 0,      /**< \brief Error Counter Limit 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   235      IfxPmsEvr_SecondaryVoltageErrorCounter_level1,          /**< \brief Error Counter Limit 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   236      IfxPmsEvr_SecondaryVoltageErrorCounter_level2,          /**< \brief Error Counter Limit 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   237      IfxPmsEvr_SecondaryVoltageErrorCounter_level3,          /**< \brief Error Counter Limit 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   238      IfxPmsEvr_SecondaryVoltageErrorCounter_level4,          /**< \brief Error Counter Limit 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   239      IfxPmsEvr_SecondaryVoltageErrorCounter_level5,          /**< \brief Error Counter Limit 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   240      IfxPmsEvr_SecondaryVoltageErrorCounter_level6,          /**< \brief Error Counter Limit 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   241      IfxPmsEvr_SecondaryVoltageErrorCounter_level7,          /**< \brief Error Counter Limit 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   242      IfxPmsEvr_SecondaryVoltageErrorCounter_level8,          /**< \brief Error Counter Limit 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   243      IfxPmsEvr_SecondaryVoltageErrorCounter_level9,          /**< \brief Error Counter Limit 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   244      IfxPmsEvr_SecondaryVoltageErrorCounter_level10,         /**< \brief Error Counter Limit 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   245      IfxPmsEvr_SecondaryVoltageErrorCounter_level11,         /**< \brief Error Counter Limit 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   246      IfxPmsEvr_SecondaryVoltageErrorCounter_level12,         /**< \brief Error Counter Limit 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   247      IfxPmsEvr_SecondaryVoltageErrorCounter_level13,         /**< \brief Error Counter Limit 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   248      IfxPmsEvr_SecondaryVoltageErrorCounter_level14,         /**< \brief Error Counter Limit 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   249      IfxPmsEvr_SecondaryVoltageErrorCounter_level15,         /**< \brief Error Counter Limit 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   250      IfxPmsEvr_SecondaryVoltageErrorCounter_level16,         /**< \brief Error Counter Limit 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   251      IfxPmsEvr_SecondaryVoltageErrorCounter_level17,         /**< \brief Error Counter Limit 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   252      IfxPmsEvr_SecondaryVoltageErrorCounter_level18,         /**< \brief Error Counter Limit 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   253      IfxPmsEvr_SecondaryVoltageErrorCounter_level19,         /**< \brief Error Counter Limit 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   254      IfxPmsEvr_SecondaryVoltageErrorCounter_level20,         /**< \brief Error Counter Limit 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   255      IfxPmsEvr_SecondaryVoltageErrorCounter_level21,         /**< \brief Error Counter Limit 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   256      IfxPmsEvr_SecondaryVoltageErrorCounter_level22,         /**< \brief Error Counter Limit 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   257      IfxPmsEvr_SecondaryVoltageErrorCounter_level23,         /**< \brief Error Counter Limit 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   258      IfxPmsEvr_SecondaryVoltageErrorCounter_level24,         /**< \brief Error Counter Limit 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   259      IfxPmsEvr_SecondaryVoltageErrorCounter_level25,         /**< \brief Error Counter Limit 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   260      IfxPmsEvr_SecondaryVoltageErrorCounter_level26,         /**< \brief Error Counter Limit 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   261      IfxPmsEvr_SecondaryVoltageErrorCounter_level27,         /**< \brief Error Counter Limit 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   262      IfxPmsEvr_SecondaryVoltageErrorCounter_level28,         /**< \brief Error Counter Limit 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   263      IfxPmsEvr_SecondaryVoltageErrorCounter_level29,         /**< \brief Error Counter Limit 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   264      IfxPmsEvr_SecondaryVoltageErrorCounter_level30,         /**< \brief Error Counter Limit 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   265      IfxPmsEvr_SecondaryVoltageErrorCounter_level31,         /**< \brief Error Counter Limit 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   266      IfxPmsEvr_SecondaryVoltageErrorCounter_level32,         /**< \brief Error Counter Limit 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   267      IfxPmsEvr_SecondaryVoltageErrorCounter_level33,         /**< \brief Error Counter Limit 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   268      IfxPmsEvr_SecondaryVoltageErrorCounter_level34,         /**< \brief Error Counter Limit 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   269      IfxPmsEvr_SecondaryVoltageErrorCounter_level35,         /**< \brief Error Counter Limit 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   270      IfxPmsEvr_SecondaryVoltageErrorCounter_level36,         /**< \brief Error Counter Limit 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   271      IfxPmsEvr_SecondaryVoltageErrorCounter_level37,         /**< \brief Error Counter Limit 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   272      IfxPmsEvr_SecondaryVoltageErrorCounter_level38,         /**< \brief Error Counter Limit 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   273      IfxPmsEvr_SecondaryVoltageErrorCounter_level39,         /**< \brief Error Counter Limit 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   274      IfxPmsEvr_SecondaryVoltageErrorCounter_level40,         /**< \brief Error Counter Limit 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   275      IfxPmsEvr_SecondaryVoltageErrorCounter_level41,         /**< \brief Error Counter Limit 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   276      IfxPmsEvr_SecondaryVoltageErrorCounter_level42,         /**< \brief Error Counter Limit 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   277      IfxPmsEvr_SecondaryVoltageErrorCounter_level43,         /**< \brief Error Counter Limit 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   278      IfxPmsEvr_SecondaryVoltageErrorCounter_level44,         /**< \brief Error Counter Limit 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   279      IfxPmsEvr_SecondaryVoltageErrorCounter_level45,         /**< \brief Error Counter Limit 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   280      IfxPmsEvr_SecondaryVoltageErrorCounter_level46,         /**< \brief Error Counter Limit 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   281      IfxPmsEvr_SecondaryVoltageErrorCounter_level47,         /**< \brief Error Counter Limit 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   282      IfxPmsEvr_SecondaryVoltageErrorCounter_level48,         /**< \brief Error Counter Limit 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   283      IfxPmsEvr_SecondaryVoltageErrorCounter_level49,         /**< \brief Error Counter Limit 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   284      IfxPmsEvr_SecondaryVoltageErrorCounter_level50,         /**< \brief Error Counter Limit 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   285      IfxPmsEvr_SecondaryVoltageErrorCounter_level51,         /**< \brief Error Counter Limit 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   286      IfxPmsEvr_SecondaryVoltageErrorCounter_level52,         /**< \brief Error Counter Limit 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   287      IfxPmsEvr_SecondaryVoltageErrorCounter_level53,         /**< \brief Error Counter Limit 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   288      IfxPmsEvr_SecondaryVoltageErrorCounter_level54,         /**< \brief Error Counter Limit 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   289      IfxPmsEvr_SecondaryVoltageErrorCounter_level55,         /**< \brief Error Counter Limit 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   290      IfxPmsEvr_SecondaryVoltageErrorCounter_level56,         /**< \brief Error Counter Limit 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   291      IfxPmsEvr_SecondaryVoltageErrorCounter_level57,         /**< \brief Error Counter Limit 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   292      IfxPmsEvr_SecondaryVoltageErrorCounter_level58,         /**< \brief Error Counter Limit 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   293      IfxPmsEvr_SecondaryVoltageErrorCounter_level59,         /**< \brief Error Counter Limit 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   294      IfxPmsEvr_SecondaryVoltageErrorCounter_level60,         /**< \brief Error Counter Limit 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   295      IfxPmsEvr_SecondaryVoltageErrorCounter_level61,         /**< \brief Error Counter Limit 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   296      IfxPmsEvr_SecondaryVoltageErrorCounter_level62,         /**< \brief Error Counter Limit 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   297      IfxPmsEvr_SecondaryVoltageErrorCounter_level63          /**< \brief Error Counter Limit 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   298  } IfxPmsEvr_SecondaryVoltageErrorCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   300  /** \brief ADC result for the generating Alarm declare in Ifx_PMS.EVR.MONFILT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   301   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   302  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   303  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   304      IfxPmsEvr_SupplyFilter_eachConversionResult    = 0,    /**< \brief Each conversion result is compared with threshold to generate alarm */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   305      IfxPmsEvr_SupplyFilter_avgAdcConversionResult0 = 1,    /**< \brief A moving mean average of consecutive 0 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   306      IfxPmsEvr_SupplyFilter_avgAdcConversionResult1,        /**< \brief A moving mean average of consecutive 1 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   307      IfxPmsEvr_SupplyFilter_avgAdcConversionResult2,        /**< \brief A moving mean average of consecutive 2 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   308      IfxPmsEvr_SupplyFilter_avgAdcConversionResult3,        /**< \brief A moving mean average of consecutive 3 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   309      IfxPmsEvr_SupplyFilter_avgAdcConversionResult4,        /**< \brief A moving mean average of consecutive 4 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   310      IfxPmsEvr_SupplyFilter_avgAdcConversionResult5,        /**< \brief A moving mean average of consecutive 5 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   311      IfxPmsEvr_SupplyFilter_avgAdcConversionResult6,        /**< \brief A moving mean average of consecutive 6 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   312      IfxPmsEvr_SupplyFilter_avgAdcConversionResult7,        /**< \brief A moving mean average of consecutive 7 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   313      IfxPmsEvr_SupplyFilter_avgAdcConversionResult8,        /**< \brief A moving mean average of consecutive 8 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   314      IfxPmsEvr_SupplyFilter_avgAdcConversionResult9,        /**< \brief A moving mean average of consecutive 9 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   315      IfxPmsEvr_SupplyFilter_avgAdcConversionResult10,       /**< \brief A moving mean average of consecutive 10 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   316      IfxPmsEvr_SupplyFilter_avgAdcConversionResult11,       /**< \brief A moving mean average of consecutive 11 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   317      IfxPmsEvr_SupplyFilter_avgAdcConversionResult12,       /**< \brief A moving mean average of consecutive 12 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   318      IfxPmsEvr_SupplyFilter_avgAdcConversionResult13,       /**< \brief A moving mean average of consecutive 13 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   319      IfxPmsEvr_SupplyFilter_avgAdcConversionResult14        /**< \brief A moving mean average of consecutive 14 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   320  } IfxPmsEvr_SupplyFilter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   322  /** \brief Controls the voltage supply Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   323   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   324  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   325  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   326      IfxPmsEvr_SupplyMode_evrc  = 0,  /**< \brief select EVRC regulator or VDD Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   327      IfxPmsEvr_SupplyMode_evr33 = 1,  /**< \brief select EVR33 regulator or VDDP3 Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   328      IfxPmsEvr_SupplyMode_swd   = 2,  /**< \brief select  external VEXT suppy watchdog */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   329      IfxPmsEvr_SupplyMode_evrpr = 3,  /**< \brief select EVRPR or VDDPD supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   330      IfxPmsEvr_SupplyMode_vddm  = 4,  /**< \brief VDDM ADC Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   331      IfxPmsEvr_SupplyMode_sb    = 5   /**< \brief EVR Standby Supply or VEVRSB supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   332  } IfxPmsEvr_SupplyMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   334  /** \brief Monitoring underVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   335   * in Ifx_PMS.EVR.MONCTRL register for undervoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   336   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   337  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   338  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   339      IfxPmsEvr_UnderVoltageMonitoring_inactive                         = 0, /**< \brief Under-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   340      IfxPmsEvr_UnderVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief under-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   341      IfxPmsEvr_UnderVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Under-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   342      IfxPmsEvr_UnderVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Under-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   343  } IfxPmsEvr_UnderVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   344  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   345  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   346  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   347  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   348  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   349  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   351  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   352  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   353      volatile void *regAddr;       /**< \brief Register Address to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   354      uint32         value;         /**< \brief Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   355      uint32         mask;          /**< \brief Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   356  } IfxPmsEvr_StepDownRegulatorRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   358  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   359  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   360      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   361      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   362      float32                                         waitInSecs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   363  } IfxPmsEvr_initSequencePhase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   365  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   366  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   367      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   368      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   369  } IfxPmsEvr_checkRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   371  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   372  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   373      uint8                                  numOfPhases;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   374      IFX_CONST IfxPmsEvr_initSequencePhase *phaseConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   375  } IfxPmsEvr_initSequence;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   377  /** \addtogroup IfxLld_Pms_Std_Evr_Over-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   378   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   380  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   384  /** \brief set Over Voltage Monitoring Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   385   * \param pms pointer to the Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   386   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   387   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   388   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   390  IFX_INLINE void IfxPmsEvr_setOverVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_OverVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   392  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   393  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   394  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   396  /** \brief set Secondary Over Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   397   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   398   * \param thresholdLevel over-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   399   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   400   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   402   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   403  IFX_EXTERN void IfxPmsEvr_setSecondaryOverVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   404  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   405  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   407  /** \addtogroup IfxLld_Pms_Std_Evr_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   408   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   410  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   411  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   412  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   414  /** \brief Configure a Blanking Filter Delay
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   415   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   416   * \param delay Blanking Filter Delay in ms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   419  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   421  /** \brief This function enables the synchronisation output to synchronize the external
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   422   * SMPS regulator with respect to the internal EVRC regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   423   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   424   * \param enabled enable/disable DC-DC synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   425   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   426   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   427  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   429  /** \brief Enable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   430   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   431   * \param interruptType Select The Interrupt Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   432   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   433   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   434  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   435  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   436  /** \brief enables wakeup on VEXT supply ramp-up after blanking filter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   437   * time has expired
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   438   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   439   * \param enabled Wake-up Enable on VEXT Supply ramp-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   442  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   444  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   445   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   446   * \param trimValue OSC fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   448   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   449  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   450  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   451  /** \brief set frequency spread threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   452   * \param pms pointer to PMS module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   453   * \param thresholdLevel maximum frequency spreading value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   456  IFX_INLINE void IfxPmsEvr_setFrequencySpreadThreshold(Ifx_PMS *pms, uint16 thresholdLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   458  /** \brief This configures the state of N ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   459   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   460   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   461   * \param nmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   464  IFX_INLINE void IfxPmsEvr_setNmosLevel(Ifx_PMS *pms, boolean nmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   466  /** \brief This configures the state of P ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   467   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   468   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   469   * \param pmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   472  IFX_INLINE void IfxPmsEvr_setPmosLevel(Ifx_PMS *pms, boolean pmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   474  /** \brief set regulator switching frequency in Hz....(100MHz/samplingFactor)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   475   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   476   * \param samplingFactor Over-sampling Factor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   477   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   478   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   479  IFX_INLINE void IfxPmsEvr_setRegulatorSwitchingFrequency(Ifx_PMS *pms, uint16 samplingFactor);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   481  /** \brief set reset trim value for EVRC,EVR33 and external VEXT supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   482   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   483   * \param resetTrimValue Reset Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   484   * \param supply select EVRC,EVR33 regulator or external VEXT supply watchdog
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   487  IFX_INLINE void IfxPmsEvr_setResetTrimValueMv(Ifx_PMS *pms, float32 resetTrimValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   489  /** \brief SD Regulator Voltage Target selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   490   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   491   * \param outputLevel The VDD output level of the Step down regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   494  IFX_INLINE void IfxPmsEvr_setSdRegulatorOutputLevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   496  /** \brief SD Regulator Voltage Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   497   * \param pms Pointer to PMS Moule Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   498   * \param trimValue offset added to the VDD output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   499   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   501  IFX_INLINE void IfxPmsEvr_setSdRegulatorPrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   503  /** \brief set DLMU RAM Block in Standby Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   504   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   505   * \param ramBlock DLMU RAM block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   506   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   507   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   508  IFX_INLINE void IfxPmsEvr_setStandbyRamSupply(Ifx_PMS *pms, uint8 ramBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   509  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   510  /** \brief Set Switching frequency division factor for external synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   511   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   512   * \param divider Switching frequency division factor for external synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   515  IFX_INLINE void IfxPmsEvr_setSwitchingFreqDivFactorForExternalsync(Ifx_PMS *pms, IfxPmsEvr_ExtSyncSwitchingFreqDivFactor divider);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   517  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   518   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   519   * \param trimValue OSC Signed fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   520   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   521   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   522  IFX_INLINE void IfxPmsEvr_signedFineTrimEvrClock(Ifx_PMS *pms, sint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   525  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   526  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   528  /** \brief filter the  each conversion result or avarage of consecutive adc result to compare with threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   529   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   530   * \param adcFilterValue specify average of consecutive ADC results
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   531   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   532   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   534  IFX_EXTERN void IfxPmsEvr_filterSecondaryConversionResult(Ifx_PMS *pms, IfxPmsEvr_SupplyFilter adcFilterValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   536  /** \brief get secondray ADC result for respective Voltage supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   537   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   538   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   539   * \return last conversion result of the ADC measurement
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   540   * of respective voltage by secondary monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   542  IFX_EXTERN uint8 IfxPmsEvr_getSecondaryAdcResult(Ifx_PMS *pms, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   544  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   546  /** \addtogroup IfxLld_Pms_Std_Evr_Under-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   547   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   549  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   550  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   551  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   553  /** \brief set Under Voltage Monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   554   * \param pms Pointer to the PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   555   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   556   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   557   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   558   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   559  IFX_INLINE void IfxPmsEvr_setUnderVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_UnderVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   560  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   561  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   562  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   563  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   565  /** \brief set Secondary under Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   566   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   567   * \param thresholdLevel under-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   568   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   569   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   570   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   571   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   572  IFX_EXTERN void IfxPmsEvr_setSecondaryUnderVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   574  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   576  /** \addtogroup IfxLld_Pms_Std_Evr_EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   577   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   579  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   580  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   581  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   583  /** \brief Enabled/Disable Reset Trigger signal for EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   584   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   585   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   586   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   588  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   590  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   591   * \param averageADCC Average value of PMS_EVRADCSTAT.ADCCV.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   592   * \return ADC VDD Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   594  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   596  /** \brief get current operating mode of EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   597   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   598   * \return EVRC Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   599   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   600  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   602  /** \brief get EVRC Regulator Voltage status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   603   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   604   * \return EVRC Regulator Voltage OK status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   605   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   606  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   608  /** \brief get ADC 1.25 V Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   609   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   610   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   611   * the VDD / EVRC supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   613  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   615  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   617  /** \addtogroup IfxLld_Pms_Std_Evr_EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   618   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   620  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   621  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   624  /** \brief Enabled/Disable Reset Trigger signal for EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   625   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   626   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   627   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   628   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   629  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   631  /** \brief get ADC 3.3 V Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   632   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   633   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   634   * the VDDP3 / EVR33 supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   635   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   636  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   638  /** \brief set 3.3 V Regulator Voltage Primary ADC Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   639   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   640   * \param trimValue Trimming value offeset added to Output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   641   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   642   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   643  IFX_INLINE void IfxPmsEvr_setEvr33PrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   645  /** \brief The VDDP3 output level of the EVR33 LDO regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   646   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   647   * \param outputLevel define VDDP3 output level of the EVR33 LDO regulator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   648   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   649   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   650  IFX_INLINE void IfxPmsEvr_setEvr33VoltageOutputlevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   652  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   653  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   654  /** \addtogroup IfxLld_Pms_Std_Evr_SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   655   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   657  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   658  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   659  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   660  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   661  /** \brief get ADC External Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   662   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   663   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   664   * the external VEXT (3.3V / 5V) supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   665   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   666  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   668  /** \brief Enabled/Disable Reset Trigger signal for SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   669   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   670   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   671   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   673  IFX_INLINE void IfxPmsEvr_swdResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   675  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   678  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   679  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   681  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   682   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   683  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   685  /** \brief Disable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   686   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   687   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   688  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   690  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   691   * \param averageADC33V Average of PMS_EVRSTAT.ADC33V values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   692   * \return ADC VDDP3 Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   693   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   694  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   696  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   697   * \param averageADCSWDV Average of PMS_EVRADCSTAT.ADCSWDV values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   698   * \return ADC VEXT Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   699   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   700  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   702  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   703   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   704  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   706  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   707   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   708   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   709  IFX_INLINE void IfxPmsEvr_wait(float32 waitInSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   711  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   712  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   713  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   715  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase1Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   716  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   717  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase2Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   719  /** \brief
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   721  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase3Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   723  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequencePhase          IfxPmsEvr_cfgPhasesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   725  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequence               IfxPmsEvr_cfgSequenceDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   727  IFX_EXTERN IFX_CONST IfxPmsEvr_checkRegConfig             IfxPmsEvr_checkRegCfgDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   729  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_checkRegValuesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   731  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   732  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   733  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   735  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   736  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   737      boolean allRight = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   738      sint32  regCfgCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   739  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   740      if (PMS_EVRSTAT.B.EVRC == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   741      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   742          for (regCfgCount = 0; regCfgCount < checkConfig->numOfRegisters; regCfgCount++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   743          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   744              uint32                                      regVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   745              const IfxPmsEvr_StepDownRegulatorRegConfig *regConfig = &checkConfig->regConfig[regCfgCount];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   746              regVal  = (*((volatile uint32 *)regConfig->regAddr));
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   747              regVal &= regConfig->mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   749              if (regVal != regConfig->value)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   750              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   751                  allRight = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   752              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   753          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   755          /*Check if EVRSTAT.SDVOK is set*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   756          if (allRight == TRUE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   757          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   758              if (PMS_EVRSTAT.B.SDVOK != 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   759              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   760                  allRight = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   761              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   762          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   763      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   764  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   765      return allRight;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   769  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   771      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   773      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   775      pms->PMSWCR0.B.BLNKFIL = delay;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   776  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   777      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   778  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   780  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   781  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   782  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   783      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   785      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   786      uint32 mask = (1U << interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   787      pms->PMSIEN.U &= (~mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   789      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   790  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   791  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   793  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   794  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   795      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   796  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   797      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   799      pms->PMSWCR5.B.DCDCSYNCO = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   801      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   802  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   803  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   804  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   805  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   806  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   807      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   808  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   809      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   811      pms->PMSIEN.U |= (1U << interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   812  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   813      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   814  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   816  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   817  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   818  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   819      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   820  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   821      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   822  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   823      pms->PMSWCR0.B.PWRWKEN = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   824  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   825      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   826  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   827  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   829  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   830  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   831      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   833      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   834      pms->EVRRSTCON.B.BPRST33OFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   835      pms->EVRRSTCON.B.RST33OFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   837      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   838  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   839  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   841  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   842  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   843      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   844  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   845      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   846  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   847      pms->EVRRSTCON.B.BPRSTCOFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   848      pms->EVRRSTCON.B.RSTCOFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   849  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   850      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   851  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   852  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   854  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   855  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   856      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   858      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   860      pms->EVROSCCTRL.B.OSCFTRIM = trimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   861  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   862      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   863  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   864  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   866  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   867  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   868      float32 vddVoltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   869      vddVoltage = (IFXPMSEVR_ADC_VDD_LSB * averageADCC + 0.7125);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   870      return vddVoltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   871  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   872  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   874  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   875  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   876      float32 vddp3Voltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   877      vddp3Voltage = (IFXPMSEVR_ADC_VDDP3_LSB * averageADC33V + 0.9375);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   878      return vddp3Voltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   879  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   882  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   883  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   884      float32 vextVoltage = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   885      vextVoltage = (IFXPMSEVR_ADC_VEXT_LSB * averageADCSWDV + 1.050);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   886      return vextVoltage;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   887  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   889  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   890  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   891  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   892      return (IfxPmsEvr_EvrcMode)pms->EVRSTAT.B.EVRCMOD;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   893  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   895  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   896  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   897  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   898      return (boolean)pms->EVRSTAT.B.SDVOK;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   899  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   900  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   901  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   902  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   903  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   904      return pms->EVRADCSTAT.B.ADC33V;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   905  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   906  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   907  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   908  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   909  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   910      return pms->EVRADCSTAT.B.ADCCV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   911  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   912  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   913  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   914  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   915  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   916      return pms->EVRADCSTAT.B.ADCSWDV;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   917  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   918  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   920  #if defined(__TASKING__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   921  #pragma optimize L
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   922  #elif defined(__HIGHTEC__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   923  #pragma GCC optimize ("-O2")
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   924  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   925  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   926  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   927      boolean                                     pmsInitDone    = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   928      uint32                                      regVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   929      uint16                                      endinitSfty_pw = IfxScuWdt_getGlobalSafetyEndinitPasswordInline();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   930      const IfxPmsEvr_initSequencePhase          *phaseConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   931      const IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   932  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   933      if (PMS_EVRSTAT.B.EVRC == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   934      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   935          /*Loop through each configured phase*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   936          for (phaseConfig = &sequence->phaseConfig[0];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   937               phaseConfig < &sequence->phaseConfig[sequence->numOfPhases];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   938               phaseConfig++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   939          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   940              IfxScuWdt_clearGlobalSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   941  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   942              /*Loop through each register which is configured in the phase configuration*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   943              for (regConfig = &phaseConfig->regConfig[0];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   944                   regConfig < &phaseConfig->regConfig[phaseConfig->numOfRegisters];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   945                   regConfig++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   946              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   947                  regVal  = (*((volatile uint32 *)regConfig->regAddr));
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   948                  regVal &= ~regConfig->mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   949                  regVal |= regConfig->value;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   950  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   951                  /** During normal running one must wait for the LCK bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   952                   * However, for this function, as this is used only with CPU0 startup no wait required
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   953                   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   954                  (*((volatile uint32 *)regConfig->regAddr)) = regVal; /*Write to the physical register*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   955              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   956  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   957              PMS_EVRSDCTRL0.B.UP = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   958              IfxScuWdt_setGlobalSafetyEndinitInline(endinitSfty_pw);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   959  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   960              /* wait for the UP bit*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   961              sint32 timeoutCount = IFXPMSEVR_CTRL_UP_WAIT_TIMEOUTCOUNT;
	mov	d15,#256

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   971              } while (PMS_EVRSDCTRL0.B.UP == 1);      (inlined)
.L9:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   962  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   963              /*Now, wait for the UP bit at EVRSDCTRL0 is reset, which is to indicate the configurations are done*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   964              do
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   965              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   966                  if (--timeoutCount <= 0)
	add	d15,#-1
.L140:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   966                  if (--timeoutCount <= 0)      (inlined)
	jge	d15,#1,.L10
.L141:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   967                  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   968                      pmsInitDone = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   969                      break;
	mov	d2,#0

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   969                      break;      (inlined)
	j	.L11

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   966                  if (--timeoutCount <= 0)      (inlined)
.L10:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   970                  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   971              } while (PMS_EVRSDCTRL0.B.UP == 1);
	ld.bu	d0,[a6]
.L142:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   971              } while (PMS_EVRSDCTRL0.B.UP == 1);      (inlined)
	jnz.t	d0:6,.L9

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   973              IfxPmsEvr_wait(phaseConfig->waitInSecs);        // wait for configured time      (inlined)
.L11:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   972  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   973              IfxPmsEvr_wait(phaseConfig->waitInSecs);        // wait for configured time
	ld.w	d15,[a15]8
.L79:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   974          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   975      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   976  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   977      /*return the status*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   978      return pmsInitDone;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   979  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   980  #if defined(__TASKING__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   981  #pragma endoptimize
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   982  #elif defined(__HIGHTEC__)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   983  #pragma GCC reset_options
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   984  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   985  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   987  IFX_INLINE void IfxPmsEvr_setEvr33PrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   988  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   989      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   990  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   991      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   992      pms->EVRTRIM.B.EVR33VOUTTRIM = trimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   993  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   994      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   995  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   996  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   997  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   998  IFX_INLINE void IfxPmsEvr_setEvr33VoltageOutputlevel(Ifx_PMS *pms, uint8 outputLevel)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   999  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1000      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1001  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1002      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1003  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1004      pms->EVRTRIM.B.EVR33VOUTSEL = outputLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1005  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1006      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1007  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1009  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1010  IFX_INLINE void IfxPmsEvr_setFrequencySpreadThreshold(Ifx_PMS *pms, uint16 thresholdLevel)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1011  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1012      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1013  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1014      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1015      pms->EVRSDCTRL0.B.SDFREQSPRD = thresholdLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1016      pms->EVRSDCTRL0.B.UP         = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1017  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1018      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1019  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1020  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1021  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1022  IFX_INLINE void IfxPmsEvr_setNmosLevel(Ifx_PMS *pms, boolean nmosLevel)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1023  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1024      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1025  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1026      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1027  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1028      pms->EVRSDCTRL0.B.NGOFF = nmosLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1029      pms->EVRSDCTRL0.B.UP    = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1030  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1031      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1032  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1033  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1034  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1035  IFX_INLINE void IfxPmsEvr_setOverVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_OverVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1036  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1037      uint16          passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1038  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1039      Ifx_PMS_MONCTRL tempMONCTRL;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1040      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1041      tempMONCTRL.U = pms->MONCTRL.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1042  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1043      switch (supply)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1044      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1045      case IfxPmsEvr_SupplyMode_evrc:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1046          tempMONCTRL.B.EVRCOVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1047          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1048      case IfxPmsEvr_SupplyMode_evr33:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1049          tempMONCTRL.B.EVR33OVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1050          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1051      case IfxPmsEvr_SupplyMode_swd:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1052          tempMONCTRL.B.SWDOVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1053          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1054      case IfxPmsEvr_SupplyMode_evrpr:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1055          tempMONCTRL.B.PREOVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1056          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1057      case IfxPmsEvr_SupplyMode_vddm:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1058          tempMONCTRL.B.VDDMOVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1059          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1060      case IfxPmsEvr_SupplyMode_sb:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1061          tempMONCTRL.B.SBOVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1062          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1063      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1065      pms->MONCTRL.U = tempMONCTRL.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1066  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1067      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1068  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1069  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1070  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1071  IFX_INLINE void IfxPmsEvr_setPmosLevel(Ifx_PMS *pms, boolean pmosLevel)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1072  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1073      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1074  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1075      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1076  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1077      pms->EVRSDCTRL0.B.PGOFF = pmosLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1078      pms->EVRSDCTRL0.B.UP    = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1079  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1080      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1081  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1082  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1083  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1084  IFX_INLINE void IfxPmsEvr_setRegulatorSwitchingFrequency(Ifx_PMS *pms, uint16 samplingFactor)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1085  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1086      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1087  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1088      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1089  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1090      pms->EVRSDCTRL0.B.SDFREQ = samplingFactor;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1091      pms->EVRSDCTRL0.B.UP     = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1092  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1093      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1094  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1095  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1096  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1097  IFX_INLINE void IfxPmsEvr_setResetTrimValueMv(Ifx_PMS *pms, float32 resetTrimValue, IfxPmsEvr_SupplyMode supply)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1098  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1099      uint16            passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1100  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1101      Ifx_PMS_EVRRSTCON tempRSTCON;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1102      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1103      tempRSTCON.U = pms->EVRRSTCON.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1104  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1105      switch (supply)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1106      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1107      case IfxPmsEvr_SupplyMode_evrc:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1108          tempRSTCON.B.RSTCTRIM = ((resetTrimValue - 712.5) / 5);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1109          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1110      case IfxPmsEvr_SupplyMode_evr33:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1111          tempRSTCON.B.RST33TRIM = ((resetTrimValue - 937.5) / 15);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1112          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1113      case IfxPmsEvr_SupplyMode_swd:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1114          tempRSTCON.B.RSTSWDTRIM = ((resetTrimValue - 1050) / 20);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1115          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1116      default:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1117          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1118      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1119  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1120      pms->EVRRSTCON.U = tempRSTCON.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1121  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1122      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1123  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1124  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1125  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1126  IFX_INLINE void IfxPmsEvr_setSdRegulatorOutputLevel(Ifx_PMS *pms, uint8 outputLevel)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1127  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1128      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1129  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1130      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1131  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1132      pms->EVRTRIM.B.SDVOUTSEL = outputLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1133  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1134      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1135  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1136  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1137  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1138  IFX_INLINE void IfxPmsEvr_setSdRegulatorPrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1139  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1140      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1141  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1142      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1143      pms->EVRTRIM.B.SDVOUTTRIM = trimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1144  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1145      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1146  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1147  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1148  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1149  IFX_INLINE void IfxPmsEvr_setStandbyRamSupply(Ifx_PMS *pms, uint8 ramBlock)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1151      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1152  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1153      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1154  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1155      pms->PMSWCR0.B.STBYRAMSEL = ramBlock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1156  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1157      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1158  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1159  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1160  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1161  IFX_INLINE void IfxPmsEvr_setSwitchingFreqDivFactorForExternalsync(Ifx_PMS *pms, IfxPmsEvr_ExtSyncSwitchingFreqDivFactor divider)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1162  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1163      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1164  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1165      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1166      pms->EVRSDCTRL7.B.SYNCDIVFAC = divider;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1167      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1168  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1169  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1171  IFX_INLINE void IfxPmsEvr_setUnderVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_UnderVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1172  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1173      uint16          passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1174      Ifx_PMS_MONCTRL tempMONCTRL;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1175      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1176      tempMONCTRL.U = pms->MONCTRL.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1177  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1178      switch (supply)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1179      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1180      case IfxPmsEvr_SupplyMode_evrc:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1181          tempMONCTRL.B.EVRCUVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1182          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1183      case IfxPmsEvr_SupplyMode_evr33:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1184          tempMONCTRL.B.EVR33UVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1185          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1186      case IfxPmsEvr_SupplyMode_swd:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1187          tempMONCTRL.B.SWDUVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1188          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1189      case IfxPmsEvr_SupplyMode_evrpr:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1190          tempMONCTRL.B.PREUVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1191          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1192      case IfxPmsEvr_SupplyMode_vddm:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1193          tempMONCTRL.B.VDDMUVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1194          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1195      case IfxPmsEvr_SupplyMode_sb:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1196          tempMONCTRL.B.SBUVMOD = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1197          break;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1198      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1199  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1200      pms->MONCTRL.U = tempMONCTRL.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1201  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1202      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1203  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1204  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1205  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1206  IFX_INLINE void IfxPmsEvr_signedFineTrimEvrClock(Ifx_PMS *pms, sint8 trimValue)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1207  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1208      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1209  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1210      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1211      pms->EVROSCCTRL.B.OSCFPTRIM = trimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1212  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1213      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1214  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1215  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1216  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1217  IFX_INLINE void IfxPmsEvr_swdResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1218  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1219      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1221      IfxScuWdt_clearSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1222      pms->EVRRSTCON.B.BPRSTSWDOFF = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1223      pms->EVRRSTCON.B.RSTSWDOFF   = enableReset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1224  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1225      IfxScuWdt_setSafetyEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1226  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1229  IFX_INLINE void IfxPmsEvr_wait(float32 waitInSec)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1230  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1231      uint32 stmCount      = (uint32)((float32)33000000UL * waitInSec);
	ld.w	d0,.5.cnt
.L143:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1232      uint32 stmCountBegin = STM0_TIM0.U;     /* it is necessary to get this value to have minimum 100uS delay in subsequent CPU start */
	lea	a5,0xf0001010
.L144:
	mul.f	d15,d15,d0
	ld.w	d1,[a5]
.L110:
	ftouz	d15,d15

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1234      while ((uint32)(STM0_TIM0.U - stmCountBegin) < stmCount)      (inlined)
.L12:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1233  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1234      while ((uint32)(STM0_TIM0.U - stmCountBegin) < stmCount)
	ld.w	d0,[a5]
.L145:
	sub	d0,d1
.L146:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	  1234      while ((uint32)(STM0_TIM0.U - stmCountBegin) < stmCount)      (inlined)
	jlt.u	d0,d15,.L12
.L75:
	lea	a15,[a15]12

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   937               phaseConfig < &sequence->phaseConfig[sequence->numOfPhases];      (inlined)
.L3:
	mov.d	d15,a15
.L111:
	ld.bu	d0,IfxPmsEvr_cfgSequenceDefault
.L147:
	ld.w	d1,[a4]
.L148:
	mul	d0,d0,#12
	add	d0,d1
.L149:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   937               phaseConfig < &sequence->phaseConfig[sequence->numOfPhases];      (inlined)
	jlt.u	d15,d0,.L4

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   933      if (PMS_EVRSTAT.B.EVRC == 1U)      (inlined)
.L2:
	mov	d15,d2
.L41:

; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    46  {
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    47      if (IfxPmsEvr_runInitSequence(&IfxPmsEvr_cfgSequenceDefault) == 0)
	jne	d15,#0,.L13
.L150:

; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    48      {
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    49          __debug();
	debug
.L13:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   178      __asm("ji a11");      (inlined)
	ji a11
.L86:

; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    50          /* Application may have call to error handling here */
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    51      }
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    52  
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    53      Ifx_Ssw_jumpBackToLink();
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    54  }
	ret
.L39:
	
__Ifx_Ssw_Pms_Init_function_end:
	.size	Ifx_Ssw_Pms_Init,__Ifx_Ssw_Pms_Init_function_end-Ifx_Ssw_Pms_Init
.L33:
	; End of function
	
	.sdecl	'.text.Ifx_Cfg_Ssw.Ifx_Ssw_Pms_InitCheck',code,cluster('Ifx_Ssw_Pms_InitCheck')
	.sect	'.text.Ifx_Cfg_Ssw.Ifx_Ssw_Pms_InitCheck'
	.align	2
	
	.global	Ifx_Ssw_Pms_InitCheck

; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    55  
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    56  #if (IFX_CFG_SSW_ENABLE_PMS_INIT_CHECK == 1U)
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    57  void Ifx_Ssw_Pms_InitCheck(void)
; Function Ifx_Ssw_Pms_InitCheck
.L24:
Ifx_Ssw_Pms_InitCheck:	.type	func

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     2   * \file IfxPmsEvr.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     3   * \brief PMS  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     4   * \ingroup IfxLld_Pms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    41   * \defgroup IfxLld_Pms_Std_Evr EVR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    42   * \ingroup IfxLld_Pms_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    43   * \defgroup IfxLld_Pms_Std_Evr_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    44   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    45   * \defgroup IfxLld_Pms_Std_Evr_Over-Voltage Over Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    46   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    47   * \defgroup IfxLld_Pms_Std_Evr_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    48   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    49   * \defgroup IfxLld_Pms_Std_Evr_Under-Voltage Under Voltage Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    50   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    51   * \defgroup IfxLld_Pms_Std_Evr_EVRC EVRC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    52   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    53   * \defgroup IfxLld_Pms_Std_Evr_EVR33 EVR33 Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    54   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    55   * \defgroup IfxLld_Pms_Std_Evr_SWD SWD Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    56   * \ingroup IfxLld_Pms_Std_Evr
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    59  #ifndef IFXPMSEVR_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    60  #define IFXPMSEVR_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    61  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    62  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    63  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    66  #include "_Impl/IfxPms_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    67  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    68  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    69  #include "IfxPms_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    70  #include "IfxPms_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    71  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    72  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    74  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    75  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    78  #define IFXPMSEVR_ADC_VDD_LSB               (0.005f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    80  #define IFXPMSEVR_ADC_VDDP3_LSB             (0.015f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    82  #define IFXPMSEVR_ADC_VEXT_LSB              (0.02f)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    84  #define IFXPMSEVR_CTRL_UP_WAIT_TIMEOUTCOUNT (0x100)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    86  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    87  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    88  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    89  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    90  /** \addtogroup IfxLld_Pms_Std_Evr_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    91   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    92  /** \brief Configure respective interrupts define in register Ifx_PMS.PMSIEN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    93   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    94  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    95  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    96      IfxPmsEvr_EnableInterrupt_ovswd   = 0,   /**< \brief OVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    97      IfxPmsEvr_EnableInterrupt_uvswd   = 1,   /**< \brief UVSWD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    98      IfxPmsEvr_EnableInterrupt_ov33    = 2,   /**< \brief OV33Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	    99      IfxPmsEvr_EnableInterrupt_uv33    = 3,   /**< \brief UV33 Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   100      IfxPmsEvr_EnableInterrupt_ovc     = 4,   /**< \brief OVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   101      IfxPmsEvr_EnableInterrupt_uvc     = 5,   /**< \brief UVC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   102      IfxPmsEvr_EnableInterrupt_ovpre   = 6,   /**< \brief OVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   103      IfxPmsEvr_EnableInterrupt_uvpre   = 7,   /**< \brief UVPRE Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   104      IfxPmsEvr_EnableInterrupt_ovddm   = 8,   /**< \brief OVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   105      IfxPmsEvr_EnableInterrupt_uvddm   = 9,   /**< \brief UVDDM Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   106      IfxPmsEvr_EnableInterrupt_ovsb    = 10,  /**< \brief OVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   107      IfxPmsEvr_EnableInterrupt_uvsb    = 11,  /**< \brief UVSB Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   108      IfxPmsEvr_EnableInterrupt_evrcmod = 16,  /**< \brief EVRCMOD Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   109      IfxPmsEvr_EnableInterrupt_sdvok   = 17,  /**< \brief SDVOK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   110      IfxPmsEvr_EnableInterrupt_synclck = 18,  /**< \brief SD SYNCLCK Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   111      IfxPmsEvr_EnableInterrupt_swdlvl  = 19,  /**< \brief SWDLVL Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   112      IfxPmsEvr_EnableInterrupt_wutwkp  = 21,  /**< \brief WUT WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   113      IfxPmsEvr_EnableInterrupt_esr0wkp = 22,  /**< \brief ESR0 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   114      IfxPmsEvr_EnableInterrupt_esr1wkp = 23,  /**< \brief ESR1 WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   115      IfxPmsEvr_EnableInterrupt_pinawkp = 24,  /**< \brief PINA WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   116      IfxPmsEvr_EnableInterrupt_pinbwkp = 25,  /**< \brief PINB WKP Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   117      IfxPmsEvr_EnableInterrupt_scrint  = 26,  /**< \brief SCR INT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   118      IfxPmsEvr_EnableInterrupt_scrrst  = 27,  /**< \brief SCR RST Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   119      IfxPmsEvr_EnableInterrupt_screcc  = 28,  /**< \brief SCR ECC Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   120      IfxPmsEvr_EnableInterrupt_scrwdt  = 29   /**< \brief SCR WDT Interrupt enable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   121  } IfxPmsEvr_EnableInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   123  /** \brief Current operation mode of EVRC Regulator defined in Ifx_PMS.EVR.STAT.B.EVRCMOD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   125  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   126  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   127      IfxPmsEvr_EvrcMode_pwmMode      = 0,  /**< \brief The step-down converter is in
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   128                                            * normal operational closed loop state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   129      IfxPmsEvr_EvrcMode_lowPowerMode = 1,  /**< \brief The step-down converter is in low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   130                                             * power state */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   131      IfxPmsEvr_EvrcMode_startupMode  = 2,  /**< \brief The step-down converter is in start-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   132                                             * phase */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   133      IfxPmsEvr_EvrcMode_disableMode  = 3   /**< \brief EVRC is Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   134  } IfxPmsEvr_EvrcMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   136  /** \brief Switching frequency division factor for external synchronisation defined in Ifx_PMS.EVRSDCTRL7.B.SYNCDIVFAC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   137   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   138  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   139  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   140      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_1  = 0,  /**< \brief fDCDCSYNC = fDCDC. The actual duty cycle is routed. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   141      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_2  = 1,  /**< \brief fDCDCSYNC = fDCDC/2. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   142      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_4  = 2,  /**< \brief fDCDCSYNC = fDCDC/4. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   143      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_8  = 3,  /**< \brief fDCDCSYNC = fDCDC/8. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   144      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_16 = 4,  /**< \brief fDCDCSYNC = fDCDC/16. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   145      IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_32 = 5   /**< \brief fDCDCSYNC = fDCDC/32. Duty cycle is constant at 50%. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   146  } IfxPmsEvr_ExtSyncSwitchingFreqDivFactor;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   148  /** \brief Monitoring OverVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   149   * in .Ifx_PMS.EVR.MONCTRL register for overvoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   153      IfxPmsEvr_OverVoltageMonitoring_inactive                         = 0, /**< \brief Over-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   154      IfxPmsEvr_OverVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief Over-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   155      IfxPmsEvr_OverVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Over-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   156      IfxPmsEvr_OverVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Over-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   157  } IfxPmsEvr_OverVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   159  /** \brief set TRIM Value For respective Voltages.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   160   * Defined in Ifx_PMS.EVR.TRIM and Ifx_PMS.EVR.TRIM2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   161   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   162  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   163  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   164      IfxPmsEvr_PrimaryAdcTrimValue_0 = 0,      /**< \brief Primary Adc Trim Value 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   165      IfxPmsEvr_PrimaryAdcTrimValue_1,          /**< \brief Primary Adc Trim Value 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   166      IfxPmsEvr_PrimaryAdcTrimValue_2,          /**< \brief Primary Adc Trim Value 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   167      IfxPmsEvr_PrimaryAdcTrimValue_3,          /**< \brief Primary Adc Trim Value 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   168      IfxPmsEvr_PrimaryAdcTrimValue_4,          /**< \brief Primary Adc Trim Value 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   169      IfxPmsEvr_PrimaryAdcTrimValue_5,          /**< \brief Primary Adc Trim Value 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   170      IfxPmsEvr_PrimaryAdcTrimValue_6,          /**< \brief Primary Adc Trim Value 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   171      IfxPmsEvr_PrimaryAdcTrimValue_7,          /**< \brief Primary Adc Trim Value 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   172      IfxPmsEvr_PrimaryAdcTrimValue_8,          /**< \brief Primary Adc Trim Value 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   173      IfxPmsEvr_PrimaryAdcTrimValue_9,          /**< \brief Primary Adc Trim Value 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   174      IfxPmsEvr_PrimaryAdcTrimValue_10,         /**< \brief Primary Adc Trim Value 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   175      IfxPmsEvr_PrimaryAdcTrimValue_11,         /**< \brief Primary Adc Trim Value 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   176      IfxPmsEvr_PrimaryAdcTrimValue_12,         /**< \brief Primary Adc Trim Value 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   177      IfxPmsEvr_PrimaryAdcTrimValue_13,         /**< \brief Primary Adc Trim Value 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   178      IfxPmsEvr_PrimaryAdcTrimValue_14,         /**< \brief Primary Adc Trim Value 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   179      IfxPmsEvr_PrimaryAdcTrimValue_15,         /**< \brief Primary Adc Trim Value 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   180      IfxPmsEvr_PrimaryAdcTrimValue_16,         /**< \brief Primary Adc Trim Value 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   181      IfxPmsEvr_PrimaryAdcTrimValue_17,         /**< \brief Primary Adc Trim Value 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   182      IfxPmsEvr_PrimaryAdcTrimValue_18,         /**< \brief Primary Adc Trim Value 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   183      IfxPmsEvr_PrimaryAdcTrimValue_19,         /**< \brief Primary Adc Trim Value 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   184      IfxPmsEvr_PrimaryAdcTrimValue_20,         /**< \brief Primary Adc Trim Value 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   185      IfxPmsEvr_PrimaryAdcTrimValue_21,         /**< \brief Primary Adc Trim Value 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   186      IfxPmsEvr_PrimaryAdcTrimValue_22,         /**< \brief Primary Adc Trim Value 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   187      IfxPmsEvr_PrimaryAdcTrimValue_23,         /**< \brief Primary Adc Trim Value 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   188      IfxPmsEvr_PrimaryAdcTrimValue_24,         /**< \brief Primary Adc Trim Value 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   189      IfxPmsEvr_PrimaryAdcTrimValue_25,         /**< \brief Primary Adc Trim Value 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   190      IfxPmsEvr_PrimaryAdcTrimValue_26,         /**< \brief Primary Adc Trim Value 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   191      IfxPmsEvr_PrimaryAdcTrimValue_27,         /**< \brief Primary Adc Trim Value 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   192      IfxPmsEvr_PrimaryAdcTrimValue_28,         /**< \brief Primary Adc Trim Value 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   193      IfxPmsEvr_PrimaryAdcTrimValue_29,         /**< \brief Primary Adc Trim Value 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   194      IfxPmsEvr_PrimaryAdcTrimValue_30,         /**< \brief Primary Adc Trim Value 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   195      IfxPmsEvr_PrimaryAdcTrimValue_31,         /**< \brief Primary Adc Trim Value 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   196      IfxPmsEvr_PrimaryAdcTrimValue_32,         /**< \brief Primary Adc Trim Value 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   197      IfxPmsEvr_PrimaryAdcTrimValue_33,         /**< \brief Primary Adc Trim Value 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   198      IfxPmsEvr_PrimaryAdcTrimValue_34,         /**< \brief Primary Adc Trim Value 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   199      IfxPmsEvr_PrimaryAdcTrimValue_35,         /**< \brief Primary Adc Trim Value 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   200      IfxPmsEvr_PrimaryAdcTrimValue_36,         /**< \brief Primary Adc Trim Value 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   201      IfxPmsEvr_PrimaryAdcTrimValue_37,         /**< \brief Primary Adc Trim Value 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   202      IfxPmsEvr_PrimaryAdcTrimValue_38,         /**< \brief Primary Adc Trim Value 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   203      IfxPmsEvr_PrimaryAdcTrimValue_39,         /**< \brief Primary Adc Trim Value 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   204      IfxPmsEvr_PrimaryAdcTrimValue_40,         /**< \brief Primary Adc Trim Value 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   205      IfxPmsEvr_PrimaryAdcTrimValue_41,         /**< \brief Primary Adc Trim Value 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   206      IfxPmsEvr_PrimaryAdcTrimValue_42,         /**< \brief Primary Adc Trim Value 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   207      IfxPmsEvr_PrimaryAdcTrimValue_43,         /**< \brief Primary Adc Trim Value 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   208      IfxPmsEvr_PrimaryAdcTrimValue_44,         /**< \brief Primary Adc Trim Value 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   209      IfxPmsEvr_PrimaryAdcTrimValue_45,         /**< \brief Primary Adc Trim Value 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   210      IfxPmsEvr_PrimaryAdcTrimValue_46,         /**< \brief Primary Adc Trim Value 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   211      IfxPmsEvr_PrimaryAdcTrimValue_47,         /**< \brief Primary Adc Trim Value 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   212      IfxPmsEvr_PrimaryAdcTrimValue_48,         /**< \brief Primary Adc Trim Value 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   213      IfxPmsEvr_PrimaryAdcTrimValue_49,         /**< \brief Primary Adc Trim Value 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   214      IfxPmsEvr_PrimaryAdcTrimValue_50,         /**< \brief Primary Adc Trim Value 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   215      IfxPmsEvr_PrimaryAdcTrimValue_51,         /**< \brief Primary Adc Trim Value 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   216      IfxPmsEvr_PrimaryAdcTrimValue_52,         /**< \brief Primary Adc Trim Value 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   217      IfxPmsEvr_PrimaryAdcTrimValue_53,         /**< \brief Primary Adc Trim Value 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   218      IfxPmsEvr_PrimaryAdcTrimValue_54,         /**< \brief Primary Adc Trim Value 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   219      IfxPmsEvr_PrimaryAdcTrimValue_55,         /**< \brief Primary Adc Trim Value 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   220      IfxPmsEvr_PrimaryAdcTrimValue_56,         /**< \brief Primary Adc Trim Value 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   221      IfxPmsEvr_PrimaryAdcTrimValue_57,         /**< \brief Primary Adc Trim Value 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   222      IfxPmsEvr_PrimaryAdcTrimValue_58,         /**< \brief Primary Adc Trim Value 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   223      IfxPmsEvr_PrimaryAdcTrimValue_59,         /**< \brief Primary Adc Trim Value 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   224      IfxPmsEvr_PrimaryAdcTrimValue_60,         /**< \brief Primary Adc Trim Value 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   225      IfxPmsEvr_PrimaryAdcTrimValue_61,         /**< \brief Primary Adc Trim Value 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   226      IfxPmsEvr_PrimaryAdcTrimValue_62,         /**< \brief Primary Adc Trim Value 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   227      IfxPmsEvr_PrimaryAdcTrimValue_63          /**< \brief Primary Adc Trim Value 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   228  } IfxPmsEvr_PrimaryAdcTrimValue;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   230  /** \brief This Declare the Under and overvoltage counter defined in Ifx_PMS.EVR.MONFILT.B.ERRCNTLIMT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   232  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   233  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   234      IfxPmsEvr_SecondaryVoltageErrorCounter_level0 = 0,      /**< \brief Error Counter Limit 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   235      IfxPmsEvr_SecondaryVoltageErrorCounter_level1,          /**< \brief Error Counter Limit 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   236      IfxPmsEvr_SecondaryVoltageErrorCounter_level2,          /**< \brief Error Counter Limit 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   237      IfxPmsEvr_SecondaryVoltageErrorCounter_level3,          /**< \brief Error Counter Limit 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   238      IfxPmsEvr_SecondaryVoltageErrorCounter_level4,          /**< \brief Error Counter Limit 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   239      IfxPmsEvr_SecondaryVoltageErrorCounter_level5,          /**< \brief Error Counter Limit 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   240      IfxPmsEvr_SecondaryVoltageErrorCounter_level6,          /**< \brief Error Counter Limit 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   241      IfxPmsEvr_SecondaryVoltageErrorCounter_level7,          /**< \brief Error Counter Limit 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   242      IfxPmsEvr_SecondaryVoltageErrorCounter_level8,          /**< \brief Error Counter Limit 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   243      IfxPmsEvr_SecondaryVoltageErrorCounter_level9,          /**< \brief Error Counter Limit 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   244      IfxPmsEvr_SecondaryVoltageErrorCounter_level10,         /**< \brief Error Counter Limit 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   245      IfxPmsEvr_SecondaryVoltageErrorCounter_level11,         /**< \brief Error Counter Limit 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   246      IfxPmsEvr_SecondaryVoltageErrorCounter_level12,         /**< \brief Error Counter Limit 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   247      IfxPmsEvr_SecondaryVoltageErrorCounter_level13,         /**< \brief Error Counter Limit 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   248      IfxPmsEvr_SecondaryVoltageErrorCounter_level14,         /**< \brief Error Counter Limit 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   249      IfxPmsEvr_SecondaryVoltageErrorCounter_level15,         /**< \brief Error Counter Limit 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   250      IfxPmsEvr_SecondaryVoltageErrorCounter_level16,         /**< \brief Error Counter Limit 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   251      IfxPmsEvr_SecondaryVoltageErrorCounter_level17,         /**< \brief Error Counter Limit 17  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   252      IfxPmsEvr_SecondaryVoltageErrorCounter_level18,         /**< \brief Error Counter Limit 18  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   253      IfxPmsEvr_SecondaryVoltageErrorCounter_level19,         /**< \brief Error Counter Limit 19  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   254      IfxPmsEvr_SecondaryVoltageErrorCounter_level20,         /**< \brief Error Counter Limit 20  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   255      IfxPmsEvr_SecondaryVoltageErrorCounter_level21,         /**< \brief Error Counter Limit 21  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   256      IfxPmsEvr_SecondaryVoltageErrorCounter_level22,         /**< \brief Error Counter Limit 22  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   257      IfxPmsEvr_SecondaryVoltageErrorCounter_level23,         /**< \brief Error Counter Limit 23  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   258      IfxPmsEvr_SecondaryVoltageErrorCounter_level24,         /**< \brief Error Counter Limit 24  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   259      IfxPmsEvr_SecondaryVoltageErrorCounter_level25,         /**< \brief Error Counter Limit 25  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   260      IfxPmsEvr_SecondaryVoltageErrorCounter_level26,         /**< \brief Error Counter Limit 26  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   261      IfxPmsEvr_SecondaryVoltageErrorCounter_level27,         /**< \brief Error Counter Limit 27  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   262      IfxPmsEvr_SecondaryVoltageErrorCounter_level28,         /**< \brief Error Counter Limit 28  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   263      IfxPmsEvr_SecondaryVoltageErrorCounter_level29,         /**< \brief Error Counter Limit 29  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   264      IfxPmsEvr_SecondaryVoltageErrorCounter_level30,         /**< \brief Error Counter Limit 30  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   265      IfxPmsEvr_SecondaryVoltageErrorCounter_level31,         /**< \brief Error Counter Limit 31  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   266      IfxPmsEvr_SecondaryVoltageErrorCounter_level32,         /**< \brief Error Counter Limit 32  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   267      IfxPmsEvr_SecondaryVoltageErrorCounter_level33,         /**< \brief Error Counter Limit 33  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   268      IfxPmsEvr_SecondaryVoltageErrorCounter_level34,         /**< \brief Error Counter Limit 34  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   269      IfxPmsEvr_SecondaryVoltageErrorCounter_level35,         /**< \brief Error Counter Limit 35  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   270      IfxPmsEvr_SecondaryVoltageErrorCounter_level36,         /**< \brief Error Counter Limit 36  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   271      IfxPmsEvr_SecondaryVoltageErrorCounter_level37,         /**< \brief Error Counter Limit 37  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   272      IfxPmsEvr_SecondaryVoltageErrorCounter_level38,         /**< \brief Error Counter Limit 38  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   273      IfxPmsEvr_SecondaryVoltageErrorCounter_level39,         /**< \brief Error Counter Limit 39  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   274      IfxPmsEvr_SecondaryVoltageErrorCounter_level40,         /**< \brief Error Counter Limit 40  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   275      IfxPmsEvr_SecondaryVoltageErrorCounter_level41,         /**< \brief Error Counter Limit 41  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   276      IfxPmsEvr_SecondaryVoltageErrorCounter_level42,         /**< \brief Error Counter Limit 42  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   277      IfxPmsEvr_SecondaryVoltageErrorCounter_level43,         /**< \brief Error Counter Limit 43  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   278      IfxPmsEvr_SecondaryVoltageErrorCounter_level44,         /**< \brief Error Counter Limit 44  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   279      IfxPmsEvr_SecondaryVoltageErrorCounter_level45,         /**< \brief Error Counter Limit 45  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   280      IfxPmsEvr_SecondaryVoltageErrorCounter_level46,         /**< \brief Error Counter Limit 46  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   281      IfxPmsEvr_SecondaryVoltageErrorCounter_level47,         /**< \brief Error Counter Limit 47  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   282      IfxPmsEvr_SecondaryVoltageErrorCounter_level48,         /**< \brief Error Counter Limit 48  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   283      IfxPmsEvr_SecondaryVoltageErrorCounter_level49,         /**< \brief Error Counter Limit 49  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   284      IfxPmsEvr_SecondaryVoltageErrorCounter_level50,         /**< \brief Error Counter Limit 50  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   285      IfxPmsEvr_SecondaryVoltageErrorCounter_level51,         /**< \brief Error Counter Limit 51  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   286      IfxPmsEvr_SecondaryVoltageErrorCounter_level52,         /**< \brief Error Counter Limit 52  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   287      IfxPmsEvr_SecondaryVoltageErrorCounter_level53,         /**< \brief Error Counter Limit 53  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   288      IfxPmsEvr_SecondaryVoltageErrorCounter_level54,         /**< \brief Error Counter Limit 54  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   289      IfxPmsEvr_SecondaryVoltageErrorCounter_level55,         /**< \brief Error Counter Limit 55  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   290      IfxPmsEvr_SecondaryVoltageErrorCounter_level56,         /**< \brief Error Counter Limit 56  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   291      IfxPmsEvr_SecondaryVoltageErrorCounter_level57,         /**< \brief Error Counter Limit 57  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   292      IfxPmsEvr_SecondaryVoltageErrorCounter_level58,         /**< \brief Error Counter Limit 58  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   293      IfxPmsEvr_SecondaryVoltageErrorCounter_level59,         /**< \brief Error Counter Limit 59  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   294      IfxPmsEvr_SecondaryVoltageErrorCounter_level60,         /**< \brief Error Counter Limit 60  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   295      IfxPmsEvr_SecondaryVoltageErrorCounter_level61,         /**< \brief Error Counter Limit 61  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   296      IfxPmsEvr_SecondaryVoltageErrorCounter_level62,         /**< \brief Error Counter Limit 62  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   297      IfxPmsEvr_SecondaryVoltageErrorCounter_level63          /**< \brief Error Counter Limit 63  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   298  } IfxPmsEvr_SecondaryVoltageErrorCounter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   300  /** \brief ADC result for the generating Alarm declare in Ifx_PMS.EVR.MONFILT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   301   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   302  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   303  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   304      IfxPmsEvr_SupplyFilter_eachConversionResult    = 0,    /**< \brief Each conversion result is compared with threshold to generate alarm */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   305      IfxPmsEvr_SupplyFilter_avgAdcConversionResult0 = 1,    /**< \brief A moving mean average of consecutive 0 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   306      IfxPmsEvr_SupplyFilter_avgAdcConversionResult1,        /**< \brief A moving mean average of consecutive 1 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   307      IfxPmsEvr_SupplyFilter_avgAdcConversionResult2,        /**< \brief A moving mean average of consecutive 2 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   308      IfxPmsEvr_SupplyFilter_avgAdcConversionResult3,        /**< \brief A moving mean average of consecutive 3 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   309      IfxPmsEvr_SupplyFilter_avgAdcConversionResult4,        /**< \brief A moving mean average of consecutive 4 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   310      IfxPmsEvr_SupplyFilter_avgAdcConversionResult5,        /**< \brief A moving mean average of consecutive 5 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   311      IfxPmsEvr_SupplyFilter_avgAdcConversionResult6,        /**< \brief A moving mean average of consecutive 6 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   312      IfxPmsEvr_SupplyFilter_avgAdcConversionResult7,        /**< \brief A moving mean average of consecutive 7 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   313      IfxPmsEvr_SupplyFilter_avgAdcConversionResult8,        /**< \brief A moving mean average of consecutive 8 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   314      IfxPmsEvr_SupplyFilter_avgAdcConversionResult9,        /**< \brief A moving mean average of consecutive 9 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   315      IfxPmsEvr_SupplyFilter_avgAdcConversionResult10,       /**< \brief A moving mean average of consecutive 10 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   316      IfxPmsEvr_SupplyFilter_avgAdcConversionResult11,       /**< \brief A moving mean average of consecutive 11 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   317      IfxPmsEvr_SupplyFilter_avgAdcConversionResult12,       /**< \brief A moving mean average of consecutive 12 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   318      IfxPmsEvr_SupplyFilter_avgAdcConversionResult13,       /**< \brief A moving mean average of consecutive 13 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   319      IfxPmsEvr_SupplyFilter_avgAdcConversionResult14        /**< \brief A moving mean average of consecutive 14 ADC results  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   320  } IfxPmsEvr_SupplyFilter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   322  /** \brief Controls the voltage supply Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   323   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   324  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   325  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   326      IfxPmsEvr_SupplyMode_evrc  = 0,  /**< \brief select EVRC regulator or VDD Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   327      IfxPmsEvr_SupplyMode_evr33 = 1,  /**< \brief select EVR33 regulator or VDDP3 Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   328      IfxPmsEvr_SupplyMode_swd   = 2,  /**< \brief select  external VEXT suppy watchdog */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   329      IfxPmsEvr_SupplyMode_evrpr = 3,  /**< \brief select EVRPR or VDDPD supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   330      IfxPmsEvr_SupplyMode_vddm  = 4,  /**< \brief VDDM ADC Supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   331      IfxPmsEvr_SupplyMode_sb    = 5   /**< \brief EVR Standby Supply or VEVRSB supply */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   332  } IfxPmsEvr_SupplyMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   333  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   334  /** \brief Monitoring underVoltage for all bitfields defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   335   * in Ifx_PMS.EVR.MONCTRL register for undervoltage monitoring
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   336   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   337  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   338  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   339      IfxPmsEvr_UnderVoltageMonitoring_inactive                         = 0, /**< \brief Under-Voltage Monitoring inactive */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   340      IfxPmsEvr_UnderVoltageMonitoring_lowToHighVoltageTransition       = 1, /**< \brief under-Voltage event is generated when threshold is crossed in lower to higher voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   341      IfxPmsEvr_UnderVoltageMonitoring_highToLowVoltageTransition       = 2, /**< \brief Under-Voltage event is generated when threshold is crossed in higher to lower voltage transition */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   342      IfxPmsEvr_UnderVoltageMonitoring_eitherDirectionVoltageTransition = 3  /**< \brief Under-Voltage event is generated when threshold is crossed in either direction */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   343  } IfxPmsEvr_UnderVoltageMonitoring;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   344  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   345  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   346  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   347  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   348  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   349  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   351  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   352  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   353      volatile void *regAddr;       /**< \brief Register Address to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   354      uint32         value;         /**< \brief Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   355      uint32         mask;          /**< \brief Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   356  } IfxPmsEvr_StepDownRegulatorRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   358  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   359  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   360      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   361      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   362      float32                                         waitInSecs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   363  } IfxPmsEvr_initSequencePhase;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   365  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   366  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   367      uint8                                           numOfRegisters;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   368      IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig *regConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   369  } IfxPmsEvr_checkRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   371  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   372  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   373      uint8                                  numOfPhases;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   374      IFX_CONST IfxPmsEvr_initSequencePhase *phaseConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   375  } IfxPmsEvr_initSequence;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   377  /** \addtogroup IfxLld_Pms_Std_Evr_Over-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   378   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   380  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   381  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   384  /** \brief set Over Voltage Monitoring Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   385   * \param pms pointer to the Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   386   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   387   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   388   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   390  IFX_INLINE void IfxPmsEvr_setOverVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_OverVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   392  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   393  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   394  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   396  /** \brief set Secondary Over Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   397   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   398   * \param thresholdLevel over-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   399   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   400   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   402   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   403  IFX_EXTERN void IfxPmsEvr_setSecondaryOverVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   404  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   405  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   407  /** \addtogroup IfxLld_Pms_Std_Evr_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   408   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   410  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   411  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   412  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   414  /** \brief Configure a Blanking Filter Delay
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   415   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   416   * \param delay Blanking Filter Delay in ms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   419  IFX_INLINE void IfxPmsEvr_configureBlankingFilterDelay(Ifx_PMS *pms, uint8 delay);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   421  /** \brief This function enables the synchronisation output to synchronize the external
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   422   * SMPS regulator with respect to the internal EVRC regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   423   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   424   * \param enabled enable/disable DC-DC synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   425   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   426   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   427  IFX_INLINE void IfxPmsEvr_enableDcdcSynchronisation(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   429  /** \brief Enable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   430   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   431   * \param interruptType Select The Interrupt Type
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   432   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   433   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   434  IFX_INLINE void IfxPmsEvr_enableInterrupts(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   435  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   436  /** \brief enables wakeup on VEXT supply ramp-up after blanking filter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   437   * time has expired
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   438   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   439   * \param enabled Wake-up Enable on VEXT Supply ramp-up
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   442  IFX_INLINE void IfxPmsEvr_enableWakeupOnVextSupplyRampUp(Ifx_PMS *pms, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   444  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   445   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   446   * \param trimValue OSC fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   448   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   449  IFX_INLINE void IfxPmsEvr_fineTrimEvrClock(Ifx_PMS *pms, uint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   450  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   451  /** \brief set frequency spread threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   452   * \param pms pointer to PMS module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   453   * \param thresholdLevel maximum frequency spreading value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   456  IFX_INLINE void IfxPmsEvr_setFrequencySpreadThreshold(Ifx_PMS *pms, uint16 thresholdLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   458  /** \brief This configures the state of N ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   459   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   460   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   461   * \param nmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   464  IFX_INLINE void IfxPmsEvr_setNmosLevel(Ifx_PMS *pms, boolean nmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   466  /** \brief This configures the state of P ch. MOSFET driver during start-up and
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   467   * shut-down phases
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   468   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   469   * \param pmosLevel TRISTATE/LOW
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   472  IFX_INLINE void IfxPmsEvr_setPmosLevel(Ifx_PMS *pms, boolean pmosLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   474  /** \brief set regulator switching frequency in Hz....(100MHz/samplingFactor)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   475   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   476   * \param samplingFactor Over-sampling Factor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   477   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   478   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   479  IFX_INLINE void IfxPmsEvr_setRegulatorSwitchingFrequency(Ifx_PMS *pms, uint16 samplingFactor);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   481  /** \brief set reset trim value for EVRC,EVR33 and external VEXT supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   482   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   483   * \param resetTrimValue Reset Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   484   * \param supply select EVRC,EVR33 regulator or external VEXT supply watchdog
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   487  IFX_INLINE void IfxPmsEvr_setResetTrimValueMv(Ifx_PMS *pms, float32 resetTrimValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   489  /** \brief SD Regulator Voltage Target selection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   490   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   491   * \param outputLevel The VDD output level of the Step down regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   494  IFX_INLINE void IfxPmsEvr_setSdRegulatorOutputLevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   496  /** \brief SD Regulator Voltage Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   497   * \param pms Pointer to PMS Moule Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   498   * \param trimValue offset added to the VDD output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   499   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   501  IFX_INLINE void IfxPmsEvr_setSdRegulatorPrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   503  /** \brief set DLMU RAM Block in Standby Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   504   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   505   * \param ramBlock DLMU RAM block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   506   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   507   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   508  IFX_INLINE void IfxPmsEvr_setStandbyRamSupply(Ifx_PMS *pms, uint8 ramBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   509  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   510  /** \brief Set Switching frequency division factor for external synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   511   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   512   * \param divider Switching frequency division factor for external synchronisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   514   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   515  IFX_INLINE void IfxPmsEvr_setSwitchingFreqDivFactorForExternalsync(Ifx_PMS *pms, IfxPmsEvr_ExtSyncSwitchingFreqDivFactor divider);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   516  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   517  /** \brief OSC Fine Trim 100MHz Clock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   518   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   519   * \param trimValue OSC Signed fine trim value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   520   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   521   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   522  IFX_INLINE void IfxPmsEvr_signedFineTrimEvrClock(Ifx_PMS *pms, sint8 trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   525  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   526  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   528  /** \brief filter the  each conversion result or avarage of consecutive adc result to compare with threshold
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   529   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   530   * \param adcFilterValue specify average of consecutive ADC results
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   531   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   532   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   533   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   534  IFX_EXTERN void IfxPmsEvr_filterSecondaryConversionResult(Ifx_PMS *pms, IfxPmsEvr_SupplyFilter adcFilterValue, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   536  /** \brief get secondray ADC result for respective Voltage supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   537   * \param pms Pointer To PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   538   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   539   * \return last conversion result of the ADC measurement
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   540   * of respective voltage by secondary monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   542  IFX_EXTERN uint8 IfxPmsEvr_getSecondaryAdcResult(Ifx_PMS *pms, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   544  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   546  /** \addtogroup IfxLld_Pms_Std_Evr_Under-Voltage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   547   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   549  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   550  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   551  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   553  /** \brief set Under Voltage Monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   554   * \param pms Pointer to the PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   555   * \param mode specifies the monitoring mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   556   * \param supply select EVRC,EVR33,VDDM,SWD or SB supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   557   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   558   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   559  IFX_INLINE void IfxPmsEvr_setUnderVoltageMonitoringMode(Ifx_PMS *pms, IfxPmsEvr_UnderVoltageMonitoring mode, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   560  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   561  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   562  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   563  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   565  /** \brief set Secondary under Voltage Threshold level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   566   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   567   * \param thresholdLevel under-voltage monitoring threshold level of the respective
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   568   * regulator output or supply
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   569   * \param supply select EVRC,EVR33,SWD,EVRPR,VDDM or SB supply mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   570   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   571   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   572  IFX_EXTERN void IfxPmsEvr_setSecondaryUnderVoltageThresholdMv(Ifx_PMS *pms, float32 thresholdLevel, IfxPmsEvr_SupplyMode supply);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   574  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   576  /** \addtogroup IfxLld_Pms_Std_Evr_EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   577   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   578  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   579  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   580  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   581  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   583  /** \brief Enabled/Disable Reset Trigger signal for EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   584   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   585   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   586   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   588  IFX_INLINE void IfxPmsEvr_evrcResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   590  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   591   * \param averageADCC Average value of PMS_EVRADCSTAT.ADCCV.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   592   * \return ADC VDD Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   593   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   594  IFX_INLINE float32 IfxPmsEvr_getAdcVddResult(float32 averageADCC);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   596  /** \brief get current operating mode of EVRC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   597   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   598   * \return EVRC Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   599   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   600  IFX_INLINE IfxPmsEvr_EvrcMode IfxPmsEvr_getEvrcMode(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   602  /** \brief get EVRC Regulator Voltage status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   603   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   604   * \return EVRC Regulator Voltage OK status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   605   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   606  IFX_INLINE boolean IfxPmsEvr_getEvrcVoltageRegulator(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   608  /** \brief get ADC 1.25 V Core Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   609   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   610   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   611   * the VDD / EVRC supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   613  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvrcResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   615  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   617  /** \addtogroup IfxLld_Pms_Std_Evr_EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   618   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   620  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   621  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   623  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   624  /** \brief Enabled/Disable Reset Trigger signal for EVR33
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   625   * \param pms pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   626   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   627   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   628   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   629  IFX_INLINE void IfxPmsEvr_evr33ResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   631  /** \brief get ADC 3.3 V Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   632   * \param pms Pointer to PMS Module Space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   633   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   634   * the VDDP3 / EVR33 supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   635   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   636  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcEvr33Result(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   638  /** \brief set 3.3 V Regulator Voltage Primary ADC Trim Value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   639   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   640   * \param trimValue Trimming value offeset added to Output level
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   641   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   642   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   643  IFX_INLINE void IfxPmsEvr_setEvr33PrimaryAdcTrimValue(Ifx_PMS *pms, IfxPmsEvr_PrimaryAdcTrimValue trimValue);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   645  /** \brief The VDDP3 output level of the EVR33 LDO regulator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   646   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   647   * \param outputLevel define VDDP3 output level of the EVR33 LDO regulator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   648   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   649   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   650  IFX_INLINE void IfxPmsEvr_setEvr33VoltageOutputlevel(Ifx_PMS *pms, uint8 outputLevel);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   652  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   653  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   654  /** \addtogroup IfxLld_Pms_Std_Evr_SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   655   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   657  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   658  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   659  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   660  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   661  /** \brief get ADC External Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   662   * \param pms Pointer to PMS Module space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   663   * \return last conversion result of the ADC measurement of
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   664   * the external VEXT (3.3V / 5V) supply by the Primary Monitor
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   665   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   666  IFX_INLINE uint8 IfxPmsEvr_getPrimaryAdcSwdResult(Ifx_PMS *pms);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   668  /** \brief Enabled/Disable Reset Trigger signal for SWD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   669   * \param pms Pointer to PMS Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   670   * \param enableReset Enable/Disable the reset trigger signal
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   671   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   672   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   673  IFX_INLINE void IfxPmsEvr_swdResetTriggerSignalConfig(Ifx_PMS *pms, boolean enableReset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   675  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   677  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   678  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   679  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   681  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   682   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   683  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   685  /** \brief Disable Interrupts
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   686   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   687   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   688  IFX_INLINE void IfxPmsEvr_disableInterrupt(Ifx_PMS *pms, IfxPmsEvr_EnableInterrupt interruptType);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   689  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   690  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   691   * \param averageADC33V Average of PMS_EVRSTAT.ADC33V values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   692   * \return ADC VDDP3 Voltage Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   693   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   694  IFX_INLINE float32 IfxPmsEvr_getAdcVddp3Result(float32 averageADC33V);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   696  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   697   * \param averageADCSWDV Average of PMS_EVRADCSTAT.ADCSWDV values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   698   * \return ADC VEXT Supply Conversion Result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   699   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   700  IFX_INLINE float32 IfxPmsEvr_getAdcVextResult(float32 averageADCSWDV);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   701  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   702  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   703   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   704  IFX_INLINE boolean IfxPmsEvr_runInitSequence(const IfxPmsEvr_initSequence *const sequence);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   706  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   707   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   708   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   709  IFX_INLINE void IfxPmsEvr_wait(float32 waitInSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   711  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   712  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   713  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   715  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase1Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   716  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   717  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase2Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   719  /** \brief
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   721  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_cfgPhase3Default[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   723  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequencePhase          IfxPmsEvr_cfgPhasesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   725  IFX_EXTERN IFX_CONST IfxPmsEvr_initSequence               IfxPmsEvr_cfgSequenceDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   727  IFX_EXTERN IFX_CONST IfxPmsEvr_checkRegConfig             IfxPmsEvr_checkRegCfgDefault;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   729  IFX_EXTERN IFX_CONST IfxPmsEvr_StepDownRegulatorRegConfig IfxPmsEvr_checkRegValuesDefault[];
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   731  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   732  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   733  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   735  IFX_INLINE boolean IfxPmsEvr_areInitValuesRight(const IfxPmsEvr_checkRegConfig *const checkConfig)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   736  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   737      boolean allRight = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   738      sint32  regCfgCount;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   739  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   740      if (PMS_EVRSTAT.B.EVRC == 1U)
	movh.a	a15,#61477
	ld.bu	d15,[a15]@los(0xf024802c)
.L155:
	mov	d0,#1
.L112:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   740      if (PMS_EVRSTAT.B.EVRC == 1U)      (inlined)
	jz.t	d15:0,.L14
.L156:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   741      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   742          for (regCfgCount = 0; regCfgCount < checkConfig->numOfRegisters; regCfgCount++)
	mov	d1,#0
	ld.bu	d3,IfxPmsEvr_checkRegCfgDefault
.L113:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   742          for (regCfgCount = 0; regCfgCount < checkConfig->numOfRegisters; regCfgCount++)      (inlined)
	j	.L15
.L16:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   743          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   744              uint32                                      regVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   745              const IfxPmsEvr_StepDownRegulatorRegConfig *regConfig = &checkConfig->regConfig[regCfgCount];
	mul	d15,d1,#12
	ld.a	a15,IfxPmsEvr_checkRegCfgDefault+4
.L98:
	add	d1,#1
.L99:
	addsc.a	a15,a15,d15,#0
.L114:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   746              regVal  = (*((volatile uint32 *)regConfig->regAddr));
	ld.a	a2,[a15]
.L157:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   747              regVal &= regConfig->mask;
	ld.w	d15,[a15]8
.L158:
	ld.w	d2,[a2]
.L115:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   749              if (regVal != regConfig->value)
	and	d2,d15
	ld.w	d15,[a15]4
.L159:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   749              if (regVal != regConfig->value)      (inlined)
	eq	d15,d2,d15
.L160:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   750              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   751                  allRight = FALSE;
	cmovn	d0,d15,#0

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   742          for (regCfgCount = 0; regCfgCount < checkConfig->numOfRegisters; regCfgCount++)      (inlined)
.L15:
	jlt	d1,d3,.L16
.L161:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   756          if (allRight == TRUE)      (inlined)
	jeq	d0,#0,.L18
.L162:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   752              }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   753          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   755          /*Check if EVRSTAT.SDVOK is set*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   756          if (allRight == TRUE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   757          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   758              if (PMS_EVRSTAT.B.SDVOK != 1)
	movh.a	a15,#61477
	ld.bu	d15,[a15]@los(0xf024802e)
.L163:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   758              if (PMS_EVRSTAT.B.SDVOK != 1)      (inlined)
	and	d15,#32
.L164:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   759              {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   760                  allRight = FALSE;
	cmovn	d0,d15,#0

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   756          if (allRight == TRUE)      (inlined)
.L18:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Pms\Std\IfxPmsEvr.h	   740      if (PMS_EVRSTAT.B.EVRC == 1U)      (inlined)
.L14:

; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    58  {
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    59  
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    60      if (IfxPmsEvr_areInitValuesRight(&IfxPmsEvr_checkRegCfgDefault) == 0)
	jne	d0,#0,.L20
.L90:

; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    61      {
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    62          __debug();
	debug
.L20:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\1_SrvSw\Tricore\Compilers\Ifx_Ssw_CompilersTasking.h	   178      __asm("ji a11");      (inlined)
	ji a11
.L102:

; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    63          /* Application may have call to error handling here */
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    64      }
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    65      Ifx_Ssw_jumpBackToLink();
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    66  }
	ret
.L88:
	
__Ifx_Ssw_Pms_InitCheck_function_end:
	.size	Ifx_Ssw_Pms_InitCheck,__Ifx_Ssw_Pms_InitCheck_function_end-Ifx_Ssw_Pms_InitCheck
.L38:
	; End of function
	
	.calls	'Ifx_Ssw_Pms_Init','',0
	.extern	IfxPmsEvr_cfgSequenceDefault
	.extern	IfxPmsEvr_checkRegCfgDefault
	.calls	'Ifx_Ssw_Pms_InitCheck','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L26:
	.word	125608
	.half	3
	.word	.L27
	.byte	4
.L25:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Config\\Common\\Ifx_Cfg_Ssw.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L28
	.byte	2
	.byte	'Ifx_Ssw_DSYNC',0,3,1,125,21,1,1,3,0
.L85:
	.byte	2
	.byte	'Ifx_Ssw_jumpBackToLink',0,3,1,176,1,21,1,1
.L87:
	.byte	3,0,4,1,1,5
	.word	223
	.byte	2
	.byte	'Ifx__jump_and_link',0,3,2,58,17,1,1,6
	.byte	'fun',0,2,58,43
	.word	226
	.byte	3,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,2,149,2,18
	.word	271
	.byte	1,1,6
	.byte	'a',0,2,149,2,44
	.word	283
	.byte	3,0,2
	.byte	'Ifx__stopPerfCounters',0,3,2,169,2,17,1,1,3,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,5
	.word	395
	.byte	8
	.byte	'__ld64',0,3,3,132,1,19
	.word	369
	.byte	1,1,6
	.byte	'addr',0,3,132,1,32
	.word	401
	.byte	3,0,2
	.byte	'__st64',0,3,3,140,1,17,1,1,6
	.byte	'addr',0,3,140,1,30
	.word	401
	.byte	6
	.byte	'value',0,3,140,1,43
	.word	369
	.byte	3,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,5,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	510
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	510
	.byte	16,0,2,35,0,0,12,5,189,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	526
	.byte	4,2,35,0,0
.L45:
	.byte	7
	.byte	'unsigned char',0,1,8
.L61:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,5,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	662
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,12,5,197,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	701
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,5,135,10,16,4,11
	.byte	'AE',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	662
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	679
	.byte	16,0,2,35,2,0,12,5,205,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	967
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,5,136,17,25,12,13
	.byte	'CON0',0
	.word	622
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	927
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1158
	.byte	4,2,35,8,0,14
	.word	1198
	.byte	5
	.word	1261
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,4,164,4,17,1,1,6
	.byte	'watchdog',0,4,164,4,65
	.word	1266
	.byte	6
	.byte	'password',0,4,164,4,82
	.word	679
	.byte	3,0
.L63:
	.byte	2
	.byte	'IfxScuWdt_clearGlobalSafetyEndinitInline',0,3,4,187,4,17,1,1
.L65:
	.byte	6
	.byte	'password',0,4,187,4,65
	.word	679
.L67:
	.byte	3,0,2
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,4,197,4,17,1,1,6
	.byte	'password',0,4,197,4,59
	.word	679
	.byte	3,0
.L53:
	.byte	8
	.byte	'IfxScuWdt_getGlobalSafetyEndinitPasswordInline',0,3,4,240,4,19
	.word	679
	.byte	1,1
.L55:
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,4,144,5,17,1,1,6
	.byte	'watchdog',0,4,144,5,63
	.word	1266
	.byte	6
	.byte	'password',0,4,144,5,80
	.word	679
	.byte	3,0
.L68:
	.byte	2
	.byte	'IfxScuWdt_setGlobalSafetyEndinitInline',0,3,4,167,5,17,1,1
.L71:
	.byte	6
	.byte	'password',0,4,167,5,63
	.word	679
.L73:
	.byte	3,0,2
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,4,177,5,17,1,1,6
	.byte	'password',0,4,177,5,57
	.word	679
	.byte	3,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,4,220,4,19
	.word	679
	.byte	1,1,6
	.byte	'watchdog',0,4,220,4,74
	.word	1266
	.byte	3,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,4,129,5,19
	.word	679
	.byte	1,1,3,0,10
	.byte	'_Ifx_P_OUT_Bits',0,7,145,3,16,4,11
	.byte	'P0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,12,7,171,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1873
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,7,171,2,16,4,11
	.byte	'PS0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	662
	.byte	1,0,2,35,3,0,12,7,251,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2189
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,7,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	679
	.byte	16,0,2,35,2,0,12,7,155,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2760
	.byte	4,2,35,0,0,15,4
	.word	662
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,7,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	662
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	662
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	662
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	662
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	662
	.byte	5,0,2,35,3,0,12,7,171,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2889
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,7,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	662
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	662
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	662
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	662
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	662
	.byte	5,0,2,35,3,0,12,7,187,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3104
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,7,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	662
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	662
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	662
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	662
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	662
	.byte	5,0,2,35,3,0,12,7,195,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3319
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,7,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	662
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	662
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	662
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	662
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	662
	.byte	5,0,2,35,3,0,12,7,179,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3536
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,7,141,1,16,4,11
	.byte	'P0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,12,7,163,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3756
	.byte	4,2,35,0,0,15,24
	.word	662
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,7,212,3,16,4,11
	.byte	'PD0',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	662
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	662
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	662
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	662
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	662
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	662
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	662
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	662
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	662
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	662
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	662
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	662
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	662
	.byte	2,0,2,35,3,0,12,7,195,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4080
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,7,233,3,16,4,11
	.byte	'PD8',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	662
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	662
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	662
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	662
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	662
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	662
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	662
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	662
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	662
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	662
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	662
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	662
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	662
	.byte	2,0,2,35,3,0,12,7,203,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4384
	.byte	4,2,35,0,0,15,8
	.word	662
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,7,111,16,4,11
	.byte	'EN0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,12,7,147,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4709
	.byte	4,2,35,0,0,15,12
	.word	662
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,7,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,12,7,187,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5049
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,7,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,12,7,179,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5415
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,7,230,2,16,4,11
	.byte	'PS0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	487
	.byte	28,0,2,35,0,0,12,7,139,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5779
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,7,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	487
	.byte	24,0,2,35,0,0,12,7,155,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5926
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,7,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	487
	.byte	20,0,2,35,0,0,12,7,163,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6095
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,7,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	679
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,12,7,147,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6267
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,7,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	679
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	679
	.byte	12,0,2,35,2,0,12,7,219,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6442
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,7,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	487
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	8,0,2,35,3,0,12,7,235,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6616
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,7,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	487
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,12,7,243,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6790
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,7,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	487
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	662
	.byte	1,0,2,35,3,0,12,7,227,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6966
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,7,208,2,16,4,11
	.byte	'PS0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,12,7,131,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7122
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,7,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	679
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	662
	.byte	1,0,2,35,3,0,12,7,211,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7455
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,7,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	662
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	662
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,12,7,203,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7803
	.byte	4,2,35,0,0,15,32
	.word	8083
	.byte	16,7,0,15,56
	.word	662
	.byte	16,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,7,105,16,4,11
	.byte	'reserved_0',0,4
	.word	487
	.byte	32,0,2,35,0,0,12,7,139,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8141
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,7,68,16,4,11
	.byte	'EN0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	662
	.byte	1,0,2,35,3,0,12,7,131,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8228
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,7,220,5,25,128,2,13
	.byte	'OUT',0
	.word	2149
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2720
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2840
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2880
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3064
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3279
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3496
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3716
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2880
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4031
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4071
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4344
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4660
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4700
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5000
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5040
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5375
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5739
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4700
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5886
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6055
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6227
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6402
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6576
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6750
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6926
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7082
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7415
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7763
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4700
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	8123
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	8132
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	8188
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8755
	.byte	4,3,35,252,1,0,14
	.word	8795
	.byte	5
	.word	9365
	.byte	17,6,187,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,6,169,5,17,1,1,6
	.byte	'port',0,6,169,5,44
	.word	9370
	.byte	6
	.byte	'pinIndex',0,6,169,5,56
	.word	662
	.byte	6
	.byte	'action',0,6,169,5,80
	.word	9375
	.byte	3,0,2
	.byte	'IfxScuCcu_wait',0,3,8,157,14,17,1,1,6
	.byte	'timeSec',0,8,157,14,40
	.word	283
	.byte	19,3,0,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,8,188,13,20
	.word	283
	.byte	1,1,3,0,17,10,161,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_2',0,2,18
	.byte	'IfxCpu_ResourceCpu_3',0,3,18
	.byte	'IfxCpu_ResourceCpu_4',0,4,18
	.byte	'IfxCpu_ResourceCpu_5',0,5,18
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,9,235,6,31
	.word	9640
	.byte	1,1,3,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,9,233,5,20
	.word	662
	.byte	1,1,3,0
.L47:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,9,255,6,19
	.word	9887
	.byte	1,1,6
	.byte	'address',0,9,255,6,55
	.word	679
	.byte	3,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,9,156,7,20
	.word	662
	.byte	1,1,6
	.byte	'address',0,9,156,7,70
	.word	679
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,9,138,9,17,1,1,6
	.byte	'address',0,9,138,9,56
	.word	9887
	.byte	6
	.byte	'count',0,9,138,9,72
	.word	9887
	.byte	19,3,0,0,14
	.word	395
	.byte	5
	.word	10118
	.byte	20,11,223,2,9,12,13
	.byte	'regAddr',0
	.word	10123
	.byte	4,2,35,0,13
	.byte	'value',0
	.word	9887
	.byte	4,2,35,4,13
	.byte	'mask',0
	.word	9887
	.byte	4,2,35,8,0,21
	.word	10128
.L51:
	.byte	5
	.word	10181
	.byte	20,11,237,2,9,8,13
	.byte	'numOfRegisters',0
	.word	662
	.byte	1,2,35,0,13
	.byte	'regConfig',0
	.word	10186
	.byte	4,2,35,4,0,21
	.word	10191
	.byte	5
	.word	10241
	.byte	21
	.word	10246
.L89:
	.byte	8
	.byte	'IfxPmsEvr_areInitValuesRight',0,3,11,223,5,20
	.word	662
	.byte	1,1
.L91:
	.byte	6
	.byte	'checkConfig',0,11,223,5,87
	.word	10251
.L93:
	.byte	19
.L96:
	.byte	3,0,0,20,11,230,2,9,12,13
	.byte	'numOfRegisters',0
	.word	662
	.byte	1,2,35,0,13
	.byte	'regConfig',0
	.word	10186
	.byte	4,2,35,4,13
	.byte	'waitInSecs',0
	.word	283
	.byte	4,2,35,8,0,21
	.word	10322
.L49:
	.byte	5
	.word	10392
	.byte	20,11,243,2,9,8,13
	.byte	'numOfPhases',0
	.word	662
	.byte	1,2,35,0,13
	.byte	'phaseConfig',0
	.word	10397
	.byte	4,2,35,4,0,21
	.word	10402
	.byte	5
	.word	10451
	.byte	21
	.word	10456
.L40:
	.byte	8
	.byte	'IfxPmsEvr_runInitSequence',0,3,11,157,7,20
	.word	662
	.byte	1,1
.L42:
	.byte	6
	.byte	'sequence',0,11,157,7,82
	.word	10461
.L44:
	.byte	19
.L74:
	.byte	3,3,3,3,3,0,0
.L78:
	.byte	2
	.byte	'IfxPmsEvr_wait',0,3,11,205,9,17,1,1
.L80:
	.byte	6
	.byte	'waitInSec',0,11,205,9,40
	.word	283
.L82:
	.byte	3,0,21
	.word	503
	.byte	22
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,23
	.word	10574
	.byte	0,14
	.word	487
	.byte	5
	.word	487
	.byte	24
	.byte	'__cmpswapw',0
	.word	10616
	.byte	1,1,1,1,25
	.byte	'p',0
	.word	10621
	.byte	25
	.byte	'value',0
	.word	487
	.byte	25
	.byte	'compare',0
	.word	487
	.byte	0,26
	.byte	'__debug',0,1,1,1,1,27
	.word	167
	.byte	3,0,27
	.word	190
	.byte	3,0,27
	.word	231
	.byte	28
	.word	257
	.byte	3,0,27
	.word	292
	.byte	28
	.word	324
	.byte	3,0,27
	.word	337
	.byte	3,0,27
	.word	406
	.byte	28
	.word	425
	.byte	3,0,27
	.word	441
	.byte	28
	.word	456
	.byte	28
	.word	470
	.byte	3,0,27
	.word	1271
	.byte	28
	.word	1311
	.byte	28
	.word	1329
	.byte	3,0,27
	.word	1349
	.byte	28
	.word	1398
	.byte	3,0,27
	.word	1418
	.byte	28
	.word	1461
	.byte	3,0,27
	.word	1481
	.byte	3,0,27
	.word	1542
	.byte	28
	.word	1580
	.byte	28
	.word	1598
	.byte	3,0,27
	.word	1618
	.byte	28
	.word	1665
	.byte	3,0,27
	.word	1685
	.byte	28
	.word	1726
	.byte	3,0,27
	.word	1746
	.byte	28
	.word	1797
	.byte	3,0,27
	.word	1817
	.byte	3,0,27
	.word	9478
	.byte	28
	.word	9506
	.byte	28
	.word	9520
	.byte	28
	.word	9538
	.byte	3,0,27
	.word	9556
	.byte	28
	.word	9579
	.byte	19,29
	.word	9600
	.byte	30
	.word	9638
	.byte	0,3,0,0,27
	.word	9600
	.byte	3,0,27
	.word	9811
	.byte	3,0,27
	.word	9845
	.byte	3,0,27
	.word	9908
	.byte	28
	.word	9949
	.byte	3,0,27
	.word	9968
	.byte	28
	.word	10023
	.byte	3,0,27
	.word	10042
	.byte	28
	.word	10082
	.byte	28
	.word	10099
	.byte	19,3,0,0,27
	.word	10256
	.byte	28
	.word	10297
	.byte	19,3,0,0,27
	.word	10466
	.byte	28
	.word	10504
	.byte	19,19,29
	.word	10530
	.byte	28
	.word	10553
	.byte	30
	.word	10572
	.byte	0,0,29
	.word	1481
	.byte	30
	.word	1540
	.byte	0,3,29
	.word	1349
	.byte	28
	.word	1398
	.byte	30
	.word	1416
	.byte	0,3,29
	.word	1618
	.byte	28
	.word	1665
	.byte	30
	.word	1683
	.byte	0,3,3,0,0,27
	.word	10530
	.byte	28
	.word	10553
	.byte	3,0
.L76:
	.byte	7
	.byte	'long int',0,4,5,7
	.byte	'short int',0,2,5,31
	.byte	'__wchar_t',0,12,1,1
	.word	11100
	.byte	31
	.byte	'__size_t',0,12,1,1
	.word	487
	.byte	31
	.byte	'__ptrdiff_t',0,12,1,1
	.word	503
	.byte	32,1,5
	.word	11168
	.byte	31
	.byte	'__codeptr',0,12,1,1
	.word	11170
	.byte	31
	.byte	'boolean',0,13,104,29
	.word	662
	.byte	31
	.byte	'uint8',0,13,108,29
	.word	662
	.byte	31
	.byte	'uint16',0,13,112,29
	.word	679
	.byte	31
	.byte	'uint32',0,13,116,29
	.word	9887
	.byte	31
	.byte	'uint64',0,13,121,29
	.word	369
	.byte	7
	.byte	'char',0,1,6,31
	.byte	'sint8',0,13,125,29
	.word	11268
	.byte	31
	.byte	'sint16',0,13,129,1,29
	.word	11100
	.byte	31
	.byte	'sint32',0,13,134,1,29
	.word	11088
	.byte	7
	.byte	'long long int',0,8,5,31
	.byte	'sint64',0,13,141,1,29
	.word	11322
	.byte	31
	.byte	'float32',0,13,170,1,29
	.word	283
	.byte	31
	.byte	'pvoid',0,14,54,28
	.word	401
	.byte	31
	.byte	'Ifx_TickTime',0,14,76,28
	.word	11322
	.byte	17,14,127,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,31
	.byte	'Ifx_RxSel',0,14,137,1,3
	.word	11407
	.byte	31
	.byte	'Ifx_UReg_8Bit',0,15,96,24
	.word	662
	.byte	31
	.byte	'Ifx_UReg_32Bit',0,15,98,24
	.word	487
	.byte	31
	.byte	'Ifx_SReg_32Bit',0,15,101,24
	.word	503
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,16,68,16,4,11
	.byte	'ADDR',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_A_Bits',0,16,71,3
	.word	11612
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,16,74,16,4,11
	.byte	'VSS',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	510
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_BIV_Bits',0,16,78,3
	.word	11673
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,16,81,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	510
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	510
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	510
	.byte	4,0,2,35,0,0,31
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,16,87,3
	.word	11752
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,16,90,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	510
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	510
	.byte	4,0,2,35,0,0,31
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,16,95,3
	.word	11890
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,16,98,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	510
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	510
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	510
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	510
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,16,106,3
	.word	12011
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,16,109,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	510
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_BTV_Bits',0,16,113,3
	.word	12187
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,16,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	510
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_CCNT_Bits',0,16,120,3
	.word	12273
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,16,123,16,4,11
	.byte	'CM',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	510
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	510
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	510
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	510
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_CPU_CCTRL_Bits',0,16,131,1,3
	.word	12362
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,16,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	510
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_COMPAT_Bits',0,16,140,1,3
	.word	12509
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,16,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	510
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CORE_ID_Bits',0,16,147,1,3
	.word	12638
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,16,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	510
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_L_Bits',0,16,154,1,3
	.word	12738
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,16,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	510
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_U_Bits',0,16,161,1,3
	.word	12833
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,16,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	510
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	510
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPU_ID_Bits',0,16,169,1,3
	.word	12928
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,16,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	510
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	510
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPXE_Bits',0,16,176,1,3
	.word	13038
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,16,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	510
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	510
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_CREVT_Bits',0,16,187,1,3
	.word	13130
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,16,190,1,16,4,11
	.byte	'CID',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	510
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CUS_ID_Bits',0,16,194,1,3
	.word	13284
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,16,197,1,16,4,11
	.byte	'DATA',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_D_Bits',0,16,200,1,3
	.word	13378
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,16,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	510
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	510
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DATR_Bits',0,16,214,1,3
	.word	13441
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,16,217,1,16,4,11
	.byte	'DE',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	510
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	510
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	510
	.byte	19,0,2,35,0,0,31
	.byte	'Ifx_CPU_DBGSR_Bits',0,16,228,1,3
	.word	13667
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,16,231,1,16,4,11
	.byte	'DTA',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	510
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_DBGTCR_Bits',0,16,235,1,3
	.word	13882
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,16,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	510
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCON0_Bits',0,16,243,1,3
	.word	13976
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,16,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	510
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCON2_Bits',0,16,250,1,3
	.word	14092
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,16,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	510
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCX_Bits',0,16,129,2,3
	.word	14193
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,16,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_DEADD_Bits',0,16,135,2,3
	.word	14286
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,16,138,2,16,4,11
	.byte	'TA',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_DIEAR_Bits',0,16,141,2,3
	.word	14366
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,16,144,2,16,4,11
	.byte	'IED',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	510
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	510
	.byte	15,0,2,35,0,0,31
	.byte	'Ifx_CPU_DIETR_Bits',0,16,159,2,3
	.word	14435
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,16,162,2,16,4,11
	.byte	'EN0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,16,196,2,3
	.word	14719
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,16,199,2,16,4,11
	.byte	'EN0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,16,233,2,3
	.word	15310
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,16,236,2,16,4,11
	.byte	'EN32',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,16,142,3,3
	.word	15901
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,16,145,3,16,4,11
	.byte	'EN32',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,16,179,3,3
	.word	16502
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,16,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	510
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,16,186,3,3
	.word	17103
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,16,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	510
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,16,193,3,3
	.word	17218
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,16,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	510
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_DMS_Bits',0,16,200,3,3
	.word	17333
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,16,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	510
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	510
	.byte	14,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPRE_Bits',0,16,207,3,3
	.word	17426
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,16,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	510
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_L_Bits',0,16,214,3,3
	.word	17518
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,16,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	510
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_U_Bits',0,16,221,3,3
	.word	17613
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,16,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	510
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	510
	.byte	14,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPWE_Bits',0,16,228,3,3
	.word	17708
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,16,231,3,16,4,11
	.byte	'SRE',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	510
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	510
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	510
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	510
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_CPU_DSTR_Bits',0,16,250,3,3
	.word	17800
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,16,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	510
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	510
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_EXEVT_Bits',0,16,133,4,3
	.word	18139
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,16,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	510
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	510
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	510
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_FCX_Bits',0,16,141,4,3
	.word	18293
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,16,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	510
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	510
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	510
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	510
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	510
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	510
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	510
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	510
	.byte	2,0,2,35,0,0,31
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,16,154,4,3
	.word	18399
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,16,157,4,16,4,11
	.byte	'STALL',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	510
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	510
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	510
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	510
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	510
	.byte	6,0,2,35,0,0,31
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,16,165,4,3
	.word	18617
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,16,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	510
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	510
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	510
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	510
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	510
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	510
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	510
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	510
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	510
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	510
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	510
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	510
	.byte	2,0,2,35,0,0,31
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,16,182,4,3
	.word	18808
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,16,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	510
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,16,198,4,3
	.word	19108
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,16,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	510
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,16,205,4,3
	.word	19413
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,16,208,4,16,4,11
	.byte	'TST',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	510
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	510
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	510
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	510
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,16,227,4,3
	.word	19514
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,16,230,4,16,4,11
	.byte	'OPC',0,4
	.word	510
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	510
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	510
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	510
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,16,237,4,3
	.word	19863
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,16,240,4,16,4,11
	.byte	'PC',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,16,243,4,3
	.word	20023
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,16,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,16,249,4,3
	.word	20104
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,16,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,16,255,4,3
	.word	20191
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,16,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,16,133,5,3
	.word	20278
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,16,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	510
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_ICNT_Bits',0,16,140,5,3
	.word	20365
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,16,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	510
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	510
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	510
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	510
	.byte	8,0,2,35,0,0,31
	.byte	'Ifx_CPU_ICR_Bits',0,16,150,5,3
	.word	20456
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,16,153,5,16,4,11
	.byte	'ISP',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_ISP_Bits',0,16,156,5,3
	.word	20598
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,16,159,5,16,4,11
	.byte	'RST',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	510
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	510
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_KRST0_Bits',0,16,164,5,3
	.word	20664
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,16,167,5,16,4,11
	.byte	'RST',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	510
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_KRST1_Bits',0,16,171,5,3
	.word	20775
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,16,174,5,16,4,11
	.byte	'CLR',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	510
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,16,178,5,3
	.word	20867
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,16,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	510
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	510
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	510
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_LCX_Bits',0,16,186,5,3
	.word	20963
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,16,189,5,16,4,11
	.byte	'EN0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,16,223,5,3
	.word	21069
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,16,226,5,16,4,11
	.byte	'EN32',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,16,132,6,3
	.word	21652
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,16,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	510
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M1CNT_Bits',0,16,139,6,3
	.word	22245
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,16,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	510
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M2CNT_Bits',0,16,146,6,3
	.word	22338
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,16,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	510
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M3CNT_Bits',0,16,153,6,3
	.word	22431
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,16,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_OSEL_Bits',0,16,159,6,3
	.word	22524
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,16,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	510
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_PC_Bits',0,16,166,6,3
	.word	22597
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,16,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	510
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON0_Bits',0,16,174,6,3
	.word	22682
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,16,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	510
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON1_Bits',0,16,182,6,3
	.word	22798
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,16,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	510
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON2_Bits',0,16,189,6,3
	.word	22909
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,16,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	510
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	510
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	510
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	510
	.byte	2,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCXI_Bits',0,16,200,6,3
	.word	23010
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,16,203,6,16,4,11
	.byte	'TA',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_PIEAR_Bits',0,16,206,6,3
	.word	23163
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,16,209,6,16,4,11
	.byte	'IED',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	510
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	510
	.byte	15,0,2,35,0,0,31
	.byte	'Ifx_CPU_PIETR_Bits',0,16,224,6,3
	.word	23232
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,16,227,6,16,4,11
	.byte	'DAC',0,4
	.word	510
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA0_Bits',0,16,231,6,3
	.word	23516
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,16,234,6,16,4,11
	.byte	'CAC',0,4
	.word	510
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA1_Bits',0,16,238,6,3
	.word	23607
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,16,241,6,16,4,11
	.byte	'PSI',0,4
	.word	510
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA2_Bits',0,16,245,6,3
	.word	23698
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,16,248,6,16,4,11
	.byte	'FRE',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	510
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	510
	.byte	17,0,2,35,0,0,31
	.byte	'Ifx_CPU_PSTR_Bits',0,16,130,7,3
	.word	23789
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,16,133,7,16,4,11
	.byte	'CDC',0,4
	.word	510
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	510
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	510
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	510
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	510
	.byte	8,0,2,35,0,0,31
	.byte	'Ifx_CPU_PSW_Bits',0,16,145,7,3
	.word	23992
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,16,148,7,16,4,11
	.byte	'EN0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,16,182,7,3
	.word	24197
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,16,185,7,16,4,11
	.byte	'EN32',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,16,219,7,3
	.word	24764
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,16,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	510
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_RGN_LA_Bits',0,16,226,7,3
	.word	25341
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,16,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	510
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_RGN_UA_Bits',0,16,233,7,3
	.word	25436
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,16,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	510
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	510
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	510
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_SEGEN_Bits',0,16,242,7,3
	.word	25531
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,16,245,7,16,4,11
	.byte	'EN0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,16,151,8,3
	.word	25659
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,16,154,8,16,4,11
	.byte	'EN32',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,16,188,8,3
	.word	26242
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,16,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	510
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_CPU_SMACON_Bits',0,16,196,8,3
	.word	26835
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,16,199,8,16,4,11
	.byte	'EN0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,16,233,8,3
	.word	26953
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,16,236,8,16,4,11
	.byte	'EN32',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,16,142,9,3
	.word	27542
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,16,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	510
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	510
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_SWEVT_Bits',0,16,153,9,3
	.word	28141
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,16,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	510
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	510
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	510
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	510
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_CPU_SYSCON_Bits',0,16,171,9,3
	.word	28295
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,16,174,9,16,4,11
	.byte	'ASI',0,4
	.word	510
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	510
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,16,178,9,3
	.word	28594
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,16,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	510
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	510
	.byte	15,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_CON_Bits',0,16,189,9,3
	.word	28692
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,16,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	510
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	510
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,16,196,9,3
	.word	28864
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,16,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	510
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	510
	.byte	20,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,16,203,9,3
	.word	28993
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,16,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	510
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	510
	.byte	20,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,16,211,9,3
	.word	29123
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,16,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	510
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	510
	.byte	8,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,16,218,9,3
	.word	29275
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,16,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	510
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	510
	.byte	8,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,16,226,9,3
	.word	29402
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,16,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	510
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	510
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,16,233,9,3
	.word	29551
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,16,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	510
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	510
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	510
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	510
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	510
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	510
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,16,246,9,3
	.word	29665
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,16,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,16,252,9,3
	.word	29909
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,16,255,9,16,4,11
	.byte	'T0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	510
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,16,138,10,3
	.word	29989
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,16,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_TR_ADR_Bits',0,16,144,10,3
	.word	30184
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,16,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	510
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	510
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	510
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	510
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	510
	.byte	3,0,2,35,0,0,31
	.byte	'Ifx_CPU_TR_EVT_Bits',0,16,164,10,3
	.word	30257
	.byte	12,16,172,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11612
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_A',0,16,177,10,3
	.word	30575
	.byte	12,16,180,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11673
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BIV',0,16,185,10,3
	.word	30634
	.byte	12,16,188,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11752
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BLK_OMASK',0,16,193,10,3
	.word	30695
	.byte	12,16,196,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11890
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BLK_OTAR',0,16,201,10,3
	.word	30762
	.byte	12,16,204,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12011
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BLK_RABR',0,16,209,10,3
	.word	30828
	.byte	12,16,212,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12187
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BTV',0,16,217,10,3
	.word	30894
	.byte	12,16,220,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12273
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CCNT',0,16,225,10,3
	.word	30955
	.byte	12,16,228,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12362
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CCTRL',0,16,233,10,3
	.word	31017
	.byte	12,16,236,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12509
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_COMPAT',0,16,241,10,3
	.word	31080
	.byte	12,16,244,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12638
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CORE_ID',0,16,249,10,3
	.word	31144
	.byte	12,16,252,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12738
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_L',0,16,129,11,3
	.word	31209
	.byte	12,16,132,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12833
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_U',0,16,137,11,3
	.word	31272
	.byte	12,16,140,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12928
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPU_ID',0,16,145,11,3
	.word	31335
	.byte	12,16,148,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13038
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPXE',0,16,153,11,3
	.word	31399
	.byte	12,16,156,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13130
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CREVT',0,16,161,11,3
	.word	31461
	.byte	12,16,164,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13284
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CUS_ID',0,16,169,11,3
	.word	31524
	.byte	12,16,172,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13378
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_D',0,16,177,11,3
	.word	31588
	.byte	12,16,180,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13441
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DATR',0,16,185,11,3
	.word	31647
	.byte	12,16,188,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13667
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DBGSR',0,16,193,11,3
	.word	31709
	.byte	12,16,196,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13882
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DBGTCR',0,16,201,11,3
	.word	31772
	.byte	12,16,204,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13976
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCON0',0,16,209,11,3
	.word	31836
	.byte	12,16,212,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14092
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCON2',0,16,217,11,3
	.word	31899
	.byte	12,16,220,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14193
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCX',0,16,225,11,3
	.word	31962
	.byte	12,16,228,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14286
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DEADD',0,16,233,11,3
	.word	32023
	.byte	12,16,236,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14366
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DIEAR',0,16,241,11,3
	.word	32086
	.byte	12,16,244,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14435
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DIETR',0,16,249,11,3
	.word	32149
	.byte	12,16,252,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14719
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,16,129,12,3
	.word	32212
	.byte	12,16,132,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15310
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,16,137,12,3
	.word	32292
	.byte	12,16,140,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15901
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,16,145,12,3
	.word	32372
	.byte	12,16,148,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16502
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,16,153,12,3
	.word	32452
	.byte	12,16,156,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17103
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,16,161,12,3
	.word	32532
	.byte	12,16,164,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17218
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,16,169,12,3
	.word	32606
	.byte	12,16,172,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17333
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DMS',0,16,177,12,3
	.word	32680
	.byte	12,16,180,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17426
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPRE',0,16,185,12,3
	.word	32741
	.byte	12,16,188,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17518
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_L',0,16,193,12,3
	.word	32803
	.byte	12,16,196,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17613
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_U',0,16,201,12,3
	.word	32866
	.byte	12,16,204,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17708
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPWE',0,16,209,12,3
	.word	32929
	.byte	12,16,212,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17800
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DSTR',0,16,217,12,3
	.word	32991
	.byte	12,16,220,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18139
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_EXEVT',0,16,225,12,3
	.word	33053
	.byte	12,16,228,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18293
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FCX',0,16,233,12,3
	.word	33116
	.byte	12,16,236,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18399
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FLASHCON0',0,16,241,12,3
	.word	33177
	.byte	12,16,244,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18617
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FLASHCON1',0,16,249,12,3
	.word	33244
	.byte	12,16,252,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18808
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FLASHCON2',0,16,129,13,3
	.word	33311
	.byte	12,16,132,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19108
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FLASHCON3',0,16,137,13,3
	.word	33378
	.byte	12,16,140,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19413
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FLASHCON4',0,16,145,13,3
	.word	33445
	.byte	12,16,148,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19514
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,16,153,13,3
	.word	33512
	.byte	12,16,156,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19863
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,16,161,13,3
	.word	33582
	.byte	12,16,164,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20023
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,16,169,13,3
	.word	33652
	.byte	12,16,172,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20104
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,16,177,13,3
	.word	33721
	.byte	12,16,180,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20191
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,16,185,13,3
	.word	33792
	.byte	12,16,188,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20278
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,16,193,13,3
	.word	33863
	.byte	12,16,196,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20365
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ICNT',0,16,201,13,3
	.word	33934
	.byte	12,16,204,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20456
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ICR',0,16,209,13,3
	.word	33996
	.byte	12,16,212,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20598
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ISP',0,16,217,13,3
	.word	34057
	.byte	12,16,220,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20664
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_KRST0',0,16,225,13,3
	.word	34118
	.byte	12,16,228,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20775
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_KRST1',0,16,233,13,3
	.word	34181
	.byte	12,16,236,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20867
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_KRSTCLR',0,16,241,13,3
	.word	34244
	.byte	12,16,244,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20963
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_LCX',0,16,249,13,3
	.word	34309
	.byte	12,16,252,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21069
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,16,129,14,3
	.word	34370
	.byte	12,16,132,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21652
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,16,137,14,3
	.word	34446
	.byte	12,16,140,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22245
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M1CNT',0,16,145,14,3
	.word	34522
	.byte	12,16,148,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22338
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M2CNT',0,16,153,14,3
	.word	34585
	.byte	12,16,156,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22431
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M3CNT',0,16,161,14,3
	.word	34648
	.byte	12,16,164,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22524
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_OSEL',0,16,169,14,3
	.word	34711
	.byte	12,16,172,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22597
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PC',0,16,177,14,3
	.word	34773
	.byte	12,16,180,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22682
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON0',0,16,185,14,3
	.word	34833
	.byte	12,16,188,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22798
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON1',0,16,193,14,3
	.word	34896
	.byte	12,16,196,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22909
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON2',0,16,201,14,3
	.word	34959
	.byte	12,16,204,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23010
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCXI',0,16,209,14,3
	.word	35022
	.byte	12,16,212,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23163
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PIEAR',0,16,217,14,3
	.word	35084
	.byte	12,16,220,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23232
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PIETR',0,16,225,14,3
	.word	35147
	.byte	12,16,228,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23516
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA0',0,16,233,14,3
	.word	35210
	.byte	12,16,236,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23607
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA1',0,16,241,14,3
	.word	35272
	.byte	12,16,244,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23698
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA2',0,16,249,14,3
	.word	35334
	.byte	12,16,252,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23789
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PSTR',0,16,129,15,3
	.word	35396
	.byte	12,16,132,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23992
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PSW',0,16,137,15,3
	.word	35458
	.byte	12,16,140,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24197
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_RGN_ACCENA',0,16,145,15,3
	.word	35519
	.byte	12,16,148,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24764
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_RGN_ACCENB',0,16,153,15,3
	.word	35587
	.byte	12,16,156,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25341
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_RGN_LA',0,16,161,15,3
	.word	35655
	.byte	12,16,164,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25436
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_RGN_UA',0,16,169,15,3
	.word	35719
	.byte	12,16,172,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25531
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SEGEN',0,16,177,15,3
	.word	35783
	.byte	12,16,180,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25659
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,16,185,15,3
	.word	35846
	.byte	12,16,188,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26242
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,16,193,15,3
	.word	35922
	.byte	12,16,196,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26835
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SMACON',0,16,201,15,3
	.word	35998
	.byte	12,16,204,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26953
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,16,209,15,3
	.word	36062
	.byte	12,16,212,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27542
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,16,217,15,3
	.word	36141
	.byte	12,16,220,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28141
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SWEVT',0,16,225,15,3
	.word	36220
	.byte	12,16,228,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28295
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SYSCON',0,16,233,15,3
	.word	36283
	.byte	12,16,236,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28594
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TASK_ASI',0,16,241,15,3
	.word	36347
	.byte	12,16,244,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28692
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_CON',0,16,249,15,3
	.word	36413
	.byte	12,16,252,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28864
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,16,129,16,3
	.word	36478
	.byte	12,16,132,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28993
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,16,137,16,3
	.word	36554
	.byte	12,16,140,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29123
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,16,145,16,3
	.word	36632
	.byte	12,16,148,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29275
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,16,153,16,3
	.word	36710
	.byte	12,16,156,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29402
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,16,161,16,3
	.word	36787
	.byte	12,16,164,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29551
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,16,169,16,3
	.word	36864
	.byte	12,16,172,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29665
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,16,177,16,3
	.word	36935
	.byte	12,16,180,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29909
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_TIMER',0,16,185,16,3
	.word	37007
	.byte	12,16,188,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29989
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TRIG_ACC',0,16,193,16,3
	.word	37074
	.byte	12,16,196,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30184
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TR_ADR',0,16,201,16,3
	.word	37140
	.byte	12,16,204,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30257
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TR_EVT',0,16,209,16,3
	.word	37204
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,16,221,16,25,16,13
	.byte	'LA',0
	.word	35655
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	35719
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	35519
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	35587
	.byte	4,2,35,12,0,14
	.word	37268
	.byte	31
	.byte	'Ifx_CPU_RGN',0,16,227,16,3
	.word	37344
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,16,242,16,25,12,13
	.byte	'RABR',0
	.word	30828
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	30762
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	30695
	.byte	4,2,35,8,0,14
	.word	37370
	.byte	31
	.byte	'Ifx_CPU_BLK',0,16,247,16,3
	.word	37433
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,16,134,17,25,28,13
	.byte	'CON',0
	.word	33512
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	33652
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	33582
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2880
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	33721
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	33792
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	33863
	.byte	4,2,35,24,0,14
	.word	37459
	.byte	31
	.byte	'Ifx_CPU_FPU_TRAP',0,16,143,17,3
	.word	37584
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,16,158,17,25,8,13
	.byte	'L',0
	.word	32803
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	32866
	.byte	4,2,35,4,0,14
	.word	37615
	.byte	31
	.byte	'Ifx_CPU_DPR',0,16,162,17,3
	.word	37657
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,16,177,17,25,8,13
	.byte	'L',0
	.word	31209
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	31272
	.byte	4,2,35,4,0,14
	.word	37683
	.byte	31
	.byte	'Ifx_CPU_CPR',0,16,181,17,3
	.word	37725
	.byte	15,12
	.word	37007
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,16,196,17,25,16,13
	.byte	'CON',0
	.word	36413
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	37751
	.byte	12,2,35,4,0,14
	.word	37760
	.byte	31
	.byte	'Ifx_CPU_TPS',0,16,200,17,3
	.word	37808
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,16,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	36632
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	36554
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	36787
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	36710
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	36478
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	36935
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	36864
	.byte	4,2,35,24,0,14
	.word	37834
	.byte	31
	.byte	'Ifx_CPU_TPS_EXTIM',0,16,224,17,3
	.word	37983
	.byte	10
	.byte	'_Ifx_CPU_TR',0,16,239,17,25,8,13
	.byte	'EVT',0
	.word	37204
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	37140
	.byte	4,2,35,4,0,14
	.word	38015
	.byte	31
	.byte	'Ifx_CPU_TR',0,16,243,17,3
	.word	38060
	.byte	15,128,34
	.word	662
	.byte	16,255,33,0,15,236,253,2
	.word	662
	.byte	16,235,253,2,0,15,244,31
	.word	662
	.byte	16,243,31,0,15,128,1
	.word	37268
	.byte	16,7,0,14
	.word	38120
	.byte	15,232,1
	.word	662
	.byte	16,231,1,0,15,128,48
	.word	662
	.byte	16,255,47,0,15,128,3
	.word	37370
	.byte	16,31,0,14
	.word	38157
	.byte	15,160,39
	.word	662
	.byte	16,159,39,0,15,208,223,1
	.word	662
	.byte	16,207,223,1,0,15,248,1
	.word	662
	.byte	16,247,1,0,15,244,29
	.word	662
	.byte	16,243,29,0,15,188,3
	.word	662
	.byte	16,187,3,0,15,232,3
	.word	662
	.byte	16,231,3,0,15,252,23
	.word	662
	.byte	16,251,23,0,14
	.word	37459
	.byte	15,228,63
	.word	662
	.byte	16,227,63,0,15,144,1
	.word	37615
	.byte	16,17,0,14
	.word	38267
	.byte	15,240,30
	.word	662
	.byte	16,239,30,0,15,80
	.word	37683
	.byte	16,9,0,14
	.word	38293
	.byte	15,176,31
	.word	662
	.byte	16,175,31,0,15,16
	.word	662
	.byte	16,15,0,15,152,7
	.word	662
	.byte	16,151,7,0,14
	.word	37760
	.byte	15,48
	.word	662
	.byte	16,47,0,14
	.word	37834
	.byte	15,164,23
	.word	662
	.byte	16,163,23,0,15,64
	.word	38015
	.byte	16,7,0,14
	.word	38368
	.byte	15,192,23
	.word	662
	.byte	16,191,23,0,15,28
	.word	662
	.byte	16,27,0,15,180,1
	.word	662
	.byte	16,179,1,0,15,172,1
	.word	662
	.byte	16,171,1,0,15,64
	.word	31588
	.byte	16,15,0,15,64
	.word	662
	.byte	16,63,0,15,64
	.word	30575
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,16,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	38085
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	33177
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	33244
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	33311
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	33378
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	33445
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	38096
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	34118
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	34181
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	34244
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	38109
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	38130
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	4700
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	36062
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	36141
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	4700
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	36062
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	36141
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	4700
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	36062
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	36141
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	4700
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	36062
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	36141
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	4700
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	36062
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	36141
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	4700
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	36062
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	36141
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	4700
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	36062
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	36141
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	4700
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	36062
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	36141
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	35846
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	35922
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	4700
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	34370
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	34446
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	38135
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	32532
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	32606
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	32292
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	32452
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	32532
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	32606
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	32292
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	32452
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	32532
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	32606
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	32292
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	32452
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	32532
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	32606
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	32292
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	32452
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	32532
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	32606
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	32292
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	32452
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	32532
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	32606
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	32292
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	32452
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	32532
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	32606
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	32292
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	32452
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	32532
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	32606
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	32292
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	32452
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	4700
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	32212
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	32372
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	4700
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	32212
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	32372
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	4700
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	32212
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	32372
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	4700
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	32212
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	32372
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	4700
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	32212
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	32372
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	4700
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	32212
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	32372
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	4700
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	32212
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	32372
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	4700
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	32212
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	32372
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	38146
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	34711
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	5040
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	38167
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	38172
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	35783
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	38183
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	36347
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	38196
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	35210
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	35272
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	35334
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	38207
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	31899
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	4700
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	35998
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	32991
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	2880
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	31647
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	32023
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	32086
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	32149
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	4071
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	31836
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	38218
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	35396
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	34896
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	34959
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	34833
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	35084
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	35147
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	38229
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	31080
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	38240
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	38251
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	38256
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	38277
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	38282
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	38302
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	38307
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	31399
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	31399
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	31399
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	31399
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	32741
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	32741
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	32741
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	32741
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	32929
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	32929
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	32929
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	32929
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	38318
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	31399
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	31399
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	4700
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	32741
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	32741
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	4700
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	32929
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	32929
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	38327
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	38338
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	38343
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	38352
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	38357
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	38377
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	38382
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	31017
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	30955
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	33934
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	34522
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	34585
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	34648
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	38135
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	31709
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	2880
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	33053
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	31461
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	36220
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	38393
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	37074
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	5040
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	32680
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	31962
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	31772
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	38402
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	35022
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	35458
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	34773
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	4700
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	36283
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	31335
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	31144
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	30634
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	30894
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	34057
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	33996
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	4700
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	33116
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	34309
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	38318
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	31524
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	38413
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	38424
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	38433
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	38442
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	38433
	.byte	64,4,35,192,255,7,0,14
	.word	38451
	.byte	31
	.byte	'Ifx_CPU',0,16,210,19,3
	.word	43549
	.byte	17,10,124,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_2',0,2,18
	.byte	'IfxCpu_Id_3',0,3,18
	.byte	'IfxCpu_Id_4',0,4,18
	.byte	'IfxCpu_Id_6',0,6,18
	.byte	'IfxCpu_Id_none',0,7,0,31
	.byte	'IfxCpu_Id',0,10,133,1,3
	.word	43571
	.byte	31
	.byte	'IfxCpu_ResourceCpu',0,10,170,1,3
	.word	9640
	.byte	10
	.byte	'_Ifx_SRC_SRCR_Bits',0,17,68,16,4,11
	.byte	'SRPN',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	662
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	662
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	662
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SRC_SRCR_Bits',0,17,85,3
	.word	43725
	.byte	12,17,93,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43725
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SRC_SRCR',0,17,98,3
	.word	44041
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,17,110,25,4,13
	.byte	'SB',0
	.word	44041
	.byte	4,2,35,0,0,14
	.word	44101
	.byte	31
	.byte	'Ifx_SRC_CPU_CPU',0,17,113,3
	.word	44136
	.byte	15,24
	.word	44101
	.byte	16,5,0,14
	.word	44165
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,17,128,1,25,24,13
	.byte	'CPU',0
	.word	44174
	.byte	24,2,35,0,0,14
	.word	44179
	.byte	31
	.byte	'Ifx_SRC_CPU',0,17,131,1,3
	.word	44212
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,17,146,1,25,4,13
	.byte	'SR',0
	.word	44041
	.byte	4,2,35,0,0,14
	.word	44238
	.byte	31
	.byte	'Ifx_SRC_AGBT_AGBT',0,17,149,1,3
	.word	44276
	.byte	15,4
	.word	44238
	.byte	16,0,0,14
	.word	44308
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,17,164,1,25,4,13
	.byte	'AGBT',0
	.word	44317
	.byte	4,2,35,0,0,14
	.word	44322
	.byte	31
	.byte	'Ifx_SRC_AGBT',0,17,167,1,3
	.word	44357
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,17,182,1,25,4,13
	.byte	'SR',0
	.word	44041
	.byte	4,2,35,0,0,14
	.word	44384
	.byte	31
	.byte	'Ifx_SRC_XBAR_XBAR',0,17,185,1,3
	.word	44422
	.byte	15,12
	.word	44384
	.byte	16,2,0,14
	.word	44454
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,17,200,1,25,12,13
	.byte	'XBAR',0
	.word	44463
	.byte	12,2,35,0,0,14
	.word	44468
	.byte	31
	.byte	'Ifx_SRC_XBAR',0,17,203,1,3
	.word	44503
	.byte	15,8
	.word	44041
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,17,218,1,25,8,13
	.byte	'SR',0
	.word	44530
	.byte	8,2,35,0,0,14
	.word	44539
	.byte	31
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,17,221,1,3
	.word	44585
	.byte	14
	.word	44539
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,17,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	44625
	.byte	8,2,35,0,0,14
	.word	44630
	.byte	31
	.byte	'Ifx_SRC_CERBERUS',0,17,239,1,3
	.word	44673
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,17,254,1,25,12,13
	.byte	'TX',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	44041
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	44041
	.byte	4,2,35,8,0,14
	.word	44704
	.byte	31
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,17,131,2,3
	.word	44771
	.byte	15,144,1
	.word	44704
	.byte	16,11,0,14
	.word	44807
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,17,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	44817
	.byte	144,1,2,35,0,0,14
	.word	44822
	.byte	31
	.byte	'Ifx_SRC_ASCLIN',0,17,149,2,3
	.word	44863
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,17,164,2,25,20,13
	.byte	'TX',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	44041
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	44041
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	44041
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	44041
	.byte	4,2,35,16,0,14
	.word	44892
	.byte	31
	.byte	'Ifx_SRC_QSPI_QSPI',0,17,171,2,3
	.word	44978
	.byte	15,120
	.word	44892
	.byte	16,5,0,14
	.word	45010
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,17,186,2,25,120,13
	.byte	'QSPI',0
	.word	45019
	.byte	120,2,35,0,0,14
	.word	45024
	.byte	31
	.byte	'Ifx_SRC_QSPI',0,17,189,2,3
	.word	45059
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,17,204,2,25,4,13
	.byte	'SR',0
	.word	44041
	.byte	4,2,35,0,0,14
	.word	45086
	.byte	31
	.byte	'Ifx_SRC_HSCT_HSCT',0,17,207,2,3
	.word	45124
	.byte	15,8
	.word	45086
	.byte	16,1,0,14
	.word	45156
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,17,222,2,25,8,13
	.byte	'HSCT',0
	.word	45165
	.byte	8,2,35,0,0,14
	.word	45170
	.byte	31
	.byte	'Ifx_SRC_HSCT',0,17,225,2,3
	.word	45205
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,17,240,2,25,16,13
	.byte	'COK',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	44041
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	44041
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	44041
	.byte	4,2,35,12,0,14
	.word	45232
	.byte	31
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,17,246,2,3
	.word	45313
	.byte	15,64
	.word	45232
	.byte	16,3,0,14
	.word	45348
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,17,133,3,25,68,13
	.byte	'CH',0
	.word	45357
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	44041
	.byte	4,2,35,64,0,14
	.word	45362
	.byte	31
	.byte	'Ifx_SRC_HSSL_HSSL',0,17,137,3,3
	.word	45413
	.byte	15,136,1
	.word	45362
	.byte	16,1,0,14
	.word	45445
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,17,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	45455
	.byte	136,1,2,35,0,0,14
	.word	45460
	.byte	31
	.byte	'Ifx_SRC_HSSL',0,17,155,3,3
	.word	45497
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,17,170,3,25,16,13
	.byte	'DTR',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	44041
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	44041
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2880
	.byte	4,2,35,12,0,14
	.word	45524
	.byte	31
	.byte	'Ifx_SRC_I2C_I2C',0,17,176,3,3
	.word	45605
	.byte	15,32
	.word	45524
	.byte	16,1,0,14
	.word	45635
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,17,191,3,25,32,13
	.byte	'I2C',0
	.word	45644
	.byte	32,2,35,0,0,14
	.word	45649
	.byte	31
	.byte	'Ifx_SRC_I2C',0,17,194,3,3
	.word	45682
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,17,209,3,25,4,13
	.byte	'SR',0
	.word	44041
	.byte	4,2,35,0,0,14
	.word	45708
	.byte	31
	.byte	'Ifx_SRC_SENT_SENT',0,17,212,3,3
	.word	45746
	.byte	15,40
	.word	45708
	.byte	16,9,0,14
	.word	45778
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,17,227,3,25,40,13
	.byte	'SENT',0
	.word	45787
	.byte	40,2,35,0,0,14
	.word	45792
	.byte	31
	.byte	'Ifx_SRC_SENT',0,17,230,3,3
	.word	45827
	.byte	15,20
	.word	44041
	.byte	16,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,17,245,3,25,20,13
	.byte	'SR',0
	.word	45854
	.byte	20,2,35,0,0,14
	.word	45863
	.byte	31
	.byte	'Ifx_SRC_MSC_MSC',0,17,248,3,3
	.word	45899
	.byte	15,80
	.word	45863
	.byte	16,3,0,14
	.word	45929
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,17,135,4,25,80,13
	.byte	'MSC',0
	.word	45938
	.byte	80,2,35,0,0,14
	.word	45943
	.byte	31
	.byte	'Ifx_SRC_MSC',0,17,138,4,3
	.word	45976
	.byte	15,16
	.word	44041
	.byte	16,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,17,153,4,25,16,13
	.byte	'SR',0
	.word	46002
	.byte	16,2,35,0,0,14
	.word	46011
	.byte	31
	.byte	'Ifx_SRC_CCU6_CCU',0,17,156,4,3
	.word	46048
	.byte	15,32
	.word	46011
	.byte	16,1,0,14
	.word	46079
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,17,171,4,25,32,13
	.byte	'CCU',0
	.word	46088
	.byte	32,2,35,0,0,14
	.word	46093
	.byte	31
	.byte	'Ifx_SRC_CCU6',0,17,174,4,3
	.word	46127
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,17,189,4,25,24,13
	.byte	'CIRQ',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	44041
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	44041
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	44041
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	44041
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	44041
	.byte	4,2,35,20,0,14
	.word	46154
	.byte	31
	.byte	'Ifx_SRC_GPT12_GPT12',0,17,197,4,3
	.word	46256
	.byte	15,24
	.word	46154
	.byte	16,0,0,14
	.word	46290
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,17,212,4,25,24,13
	.byte	'GPT12',0
	.word	46299
	.byte	24,2,35,0,0,14
	.word	46304
	.byte	31
	.byte	'Ifx_SRC_GPT12',0,17,215,4,3
	.word	46341
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,17,230,4,25,8,13
	.byte	'SR',0
	.word	44530
	.byte	8,2,35,0,0,14
	.word	46369
	.byte	31
	.byte	'Ifx_SRC_STM_STM',0,17,233,4,3
	.word	46405
	.byte	15,48
	.word	46369
	.byte	16,5,0,14
	.word	46435
	.byte	10
	.byte	'_Ifx_SRC_STM',0,17,248,4,25,48,13
	.byte	'STM',0
	.word	46444
	.byte	48,2,35,0,0,14
	.word	46449
	.byte	31
	.byte	'Ifx_SRC_STM',0,17,251,4,3
	.word	46482
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,17,138,5,25,4,13
	.byte	'SR',0
	.word	44041
	.byte	4,2,35,0,0,14
	.word	46508
	.byte	31
	.byte	'Ifx_SRC_FCE_FCE0',0,17,141,5,3
	.word	46545
	.byte	14
	.word	46508
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,17,156,5,25,4,13
	.byte	'FCE0',0
	.word	46576
	.byte	4,2,35,0,0,14
	.word	46581
	.byte	31
	.byte	'Ifx_SRC_FCE',0,17,159,5,3
	.word	46615
	.byte	15,32
	.word	662
	.byte	16,31,0,15,128,4
	.word	44041
	.byte	16,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,17,174,5,25,176,4,13
	.byte	'ERR',0
	.word	46002
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	46641
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	46650
	.byte	128,4,2,35,48,0,14
	.word	46660
	.byte	31
	.byte	'Ifx_SRC_DMA_DMA',0,17,179,5,3
	.word	46732
	.byte	15,176,4
	.word	46660
	.byte	16,0,0,14
	.word	46762
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,17,194,5,25,176,4,13
	.byte	'DMA',0
	.word	46772
	.byte	176,4,2,35,0,0,14
	.word	46777
	.byte	31
	.byte	'Ifx_SRC_DMA',0,17,197,5,3
	.word	46812
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,17,212,5,25,8,13
	.byte	'ERR',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	44041
	.byte	4,2,35,4,0,14
	.word	46838
	.byte	31
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,17,216,5,3
	.word	46892
	.byte	15,8
	.word	46838
	.byte	16,0,0,14
	.word	46926
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,17,231,5,25,8,13
	.byte	'SDMMC',0
	.word	46935
	.byte	8,2,35,0,0,14
	.word	46940
	.byte	31
	.byte	'Ifx_SRC_SDMMC',0,17,234,5,3
	.word	46977
	.byte	15,40
	.word	44041
	.byte	16,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,17,249,5,25,40,13
	.byte	'SR',0
	.word	47005
	.byte	40,2,35,0,0,14
	.word	47014
	.byte	31
	.byte	'Ifx_SRC_GETH_GETH',0,17,252,5,3
	.word	47052
	.byte	15,40
	.word	47014
	.byte	16,0,0,14
	.word	47084
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,17,139,6,25,40,13
	.byte	'GETH',0
	.word	47093
	.byte	40,2,35,0,0,14
	.word	47098
	.byte	31
	.byte	'Ifx_SRC_GETH',0,17,142,6,3
	.word	47133
	.byte	15,64
	.word	44041
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,17,157,6,25,64,13
	.byte	'INT',0
	.word	47160
	.byte	64,2,35,0,0,14
	.word	47169
	.byte	31
	.byte	'Ifx_SRC_CAN_CAN',0,17,160,6,3
	.word	47206
	.byte	15,192,1
	.word	47169
	.byte	16,2,0,14
	.word	47236
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,17,175,6,25,192,1,13
	.byte	'CAN',0
	.word	47246
	.byte	192,1,2,35,0,0,14
	.word	47251
	.byte	31
	.byte	'Ifx_SRC_CAN',0,17,178,6,3
	.word	47286
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,17,193,6,25,16,13
	.byte	'SR0',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	44041
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	44041
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	44041
	.byte	4,2,35,12,0,14
	.word	47312
	.byte	31
	.byte	'Ifx_SRC_VADC_G',0,17,199,6,3
	.word	47387
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,17,214,6,25,4,13
	.byte	'SR0',0
	.word	44041
	.byte	4,2,35,0,0,14
	.word	47416
	.byte	31
	.byte	'Ifx_SRC_VADC_FC',0,17,217,6,3
	.word	47453
	.byte	15,192,1
	.word	47312
	.byte	16,11,0,14
	.word	47483
	.byte	15,32
	.word	47416
	.byte	16,7,0,14
	.word	47498
	.byte	15,32
	.word	47312
	.byte	16,1,0,14
	.word	47512
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,17,233,6,25,128,2,13
	.byte	'G',0
	.word	47493
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	47507
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	47521
	.byte	32,3,35,224,1,0,14
	.word	47526
	.byte	31
	.byte	'Ifx_SRC_VADC',0,17,238,6,3
	.word	47586
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,17,253,6,25,8,13
	.byte	'SRM',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	44041
	.byte	4,2,35,4,0,14
	.word	47613
	.byte	31
	.byte	'Ifx_SRC_DSADC_DSADC',0,17,129,7,3
	.word	47667
	.byte	15,112
	.word	47613
	.byte	16,13,0,14
	.word	47701
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,17,144,7,25,112,13
	.byte	'DSADC',0
	.word	47710
	.byte	112,2,35,0,0,14
	.word	47715
	.byte	31
	.byte	'Ifx_SRC_DSADC',0,17,147,7,3
	.word	47752
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,17,162,7,25,48,13
	.byte	'INT0',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	44041
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	44041
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	44041
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	44041
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	44041
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	44041
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	44041
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	44041
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	44041
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4700
	.byte	8,2,35,40,0,14
	.word	47780
	.byte	31
	.byte	'Ifx_SRC_ERAY_ERAY',0,17,175,7,3
	.word	47975
	.byte	15,96
	.word	47780
	.byte	16,1,0,14
	.word	48007
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,17,190,7,25,96,13
	.byte	'ERAY',0
	.word	48016
	.byte	96,2,35,0,0,14
	.word	48021
	.byte	31
	.byte	'Ifx_SRC_ERAY',0,17,193,7,3
	.word	48056
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,17,208,7,25,8,13
	.byte	'HSM',0
	.word	44530
	.byte	8,2,35,0,0,14
	.word	48083
	.byte	31
	.byte	'Ifx_SRC_HSM_HSM',0,17,211,7,3
	.word	48120
	.byte	15,8
	.word	48083
	.byte	16,0,0,14
	.word	48150
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,17,226,7,25,8,13
	.byte	'HSM',0
	.word	48159
	.byte	8,2,35,0,0,14
	.word	48164
	.byte	31
	.byte	'Ifx_SRC_HSM',0,17,229,7,3
	.word	48197
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,17,244,7,25,16,13
	.byte	'SCUERU',0
	.word	46002
	.byte	16,2,35,0,0,14
	.word	48223
	.byte	31
	.byte	'Ifx_SRC_SCU',0,17,247,7,3
	.word	48259
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,17,134,8,25,4,13
	.byte	'SR',0
	.word	44041
	.byte	4,2,35,0,0,14
	.word	48285
	.byte	31
	.byte	'Ifx_SRC_PMS_PMS',0,17,137,8,3
	.word	48321
	.byte	15,16
	.word	48285
	.byte	16,3,0,14
	.word	48351
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,17,152,8,25,16,13
	.byte	'PMS',0
	.word	48360
	.byte	16,2,35,0,0,14
	.word	48365
	.byte	31
	.byte	'Ifx_SRC_PMS',0,17,155,8,3
	.word	48398
	.byte	15,12
	.word	44041
	.byte	16,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,17,170,8,25,12,13
	.byte	'SR',0
	.word	48424
	.byte	12,2,35,0,0,14
	.word	48433
	.byte	31
	.byte	'Ifx_SRC_SMU_SMU',0,17,173,8,3
	.word	48469
	.byte	15,12
	.word	48433
	.byte	16,0,0,14
	.word	48499
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,17,188,8,25,12,13
	.byte	'SMU',0
	.word	48508
	.byte	12,2,35,0,0,14
	.word	48513
	.byte	31
	.byte	'Ifx_SRC_SMU',0,17,191,8,3
	.word	48546
	.byte	15,32
	.word	44041
	.byte	16,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,17,206,8,25,32,13
	.byte	'SR',0
	.word	48572
	.byte	32,2,35,0,0,14
	.word	48581
	.byte	31
	.byte	'Ifx_SRC_PSI5_PSI5',0,17,209,8,3
	.word	48619
	.byte	15,32
	.word	48581
	.byte	16,0,0,14
	.word	48651
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,17,224,8,25,32,13
	.byte	'PSI5',0
	.word	48660
	.byte	32,2,35,0,0,14
	.word	48665
	.byte	31
	.byte	'Ifx_SRC_PSI5',0,17,227,8,3
	.word	48700
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,17,242,8,25,12,13
	.byte	'BFR',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	44041
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	44041
	.byte	4,2,35,8,0,14
	.word	48727
	.byte	31
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,17,247,8,3
	.word	48796
	.byte	14
	.word	48727
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,17,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	48831
	.byte	12,2,35,0,0,14
	.word	48836
	.byte	31
	.byte	'Ifx_SRC_HSPDM',0,17,137,9,3
	.word	48874
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,17,152,9,25,24,13
	.byte	'LI0',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	44041
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	44041
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	44041
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	44041
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	44041
	.byte	4,2,35,20,0,14
	.word	48902
	.byte	31
	.byte	'Ifx_SRC_DAM_DAM',0,17,160,9,3
	.word	49003
	.byte	15,48
	.word	48902
	.byte	16,1,0,14
	.word	49033
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,17,175,9,25,48,13
	.byte	'DAM',0
	.word	49042
	.byte	48,2,35,0,0,14
	.word	49047
	.byte	31
	.byte	'Ifx_SRC_DAM',0,17,178,9,3
	.word	49080
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,17,193,9,25,32,13
	.byte	'SR',0
	.word	48572
	.byte	32,2,35,0,0,14
	.word	49106
	.byte	31
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,17,196,9,3
	.word	49146
	.byte	15,32
	.word	49106
	.byte	16,0,0,14
	.word	49180
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,17,211,9,25,32,13
	.byte	'PSI5S',0
	.word	49189
	.byte	32,2,35,0,0,14
	.word	49194
	.byte	31
	.byte	'Ifx_SRC_PSI5S',0,17,214,9,3
	.word	49231
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,17,229,9,25,8,13
	.byte	'ERR',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	44041
	.byte	4,2,35,4,0,14
	.word	49259
	.byte	31
	.byte	'Ifx_SRC_RIF_RIF',0,17,233,9,3
	.word	49309
	.byte	15,16
	.word	49259
	.byte	16,1,0,14
	.word	49339
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,17,248,9,25,16,13
	.byte	'RIF',0
	.word	49348
	.byte	16,2,35,0,0,14
	.word	49353
	.byte	31
	.byte	'Ifx_SRC_RIF',0,17,251,9,3
	.word	49386
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,17,138,10,25,8,13
	.byte	'INT',0
	.word	44041
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	44041
	.byte	4,2,35,4,0,14
	.word	49412
	.byte	31
	.byte	'Ifx_SRC_SPU_SPU',0,17,142,10,3
	.word	49462
	.byte	15,16
	.word	49412
	.byte	16,1,0,14
	.word	49492
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,17,157,10,25,16,13
	.byte	'SPU',0
	.word	49501
	.byte	16,2,35,0,0,14
	.word	49506
	.byte	31
	.byte	'Ifx_SRC_SPU',0,17,160,10,3
	.word	49539
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,17,175,10,25,32,13
	.byte	'SR',0
	.word	48572
	.byte	32,2,35,0,0,14
	.word	49565
	.byte	31
	.byte	'Ifx_SRC_GPSR_GPSR',0,17,178,10,3
	.word	49603
	.byte	15,192,1
	.word	49565
	.byte	16,5,0,14
	.word	49635
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,17,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	49645
	.byte	192,1,2,35,0,0,14
	.word	49650
	.byte	31
	.byte	'Ifx_SRC_GPSR',0,17,196,10,3
	.word	49687
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,5,68,16,4,11
	.byte	'EN0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_ACCEN00_Bits',0,5,102,3
	.word	49714
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,5,105,16,4,11
	.byte	'reserved_0',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN01_Bits',0,5,108,3
	.word	50273
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,5,111,16,4,11
	.byte	'EN0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_ACCEN10_Bits',0,5,145,1,3
	.word	50352
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,5,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN11_Bits',0,5,151,1,3
	.word	50912
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,5,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	662
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	487
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,5,164,1,3
	.word	50993
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,5,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	662
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	662
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	662
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	662
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	662
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	662
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON0_Bits',0,5,181,1,3
	.word	51210
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,5,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	662
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	662
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	662
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	662
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON1_Bits',0,5,199,1,3
	.word	51483
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,5,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	662
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	487
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON10_Bits',0,5,206,1,3
	.word	51809
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,5,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	662
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	487
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON11_Bits',0,5,213,1,3
	.word	51911
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,5,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	662
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	487
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	662
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON2_Bits',0,5,228,1,3
	.word	52013
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,5,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	662
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	487
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON3_Bits',0,5,248,1,3
	.word	52287
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,5,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	679
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	487
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	662
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON4_Bits',0,5,132,2,3
	.word	52656
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,5,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	487
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON5_Bits',0,5,143,2,3
	.word	52836
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,5,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	662
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	487
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON6_Bits',0,5,150,2,3
	.word	53005
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,5,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	662
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	487
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON7_Bits',0,5,157,2,3
	.word	53105
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,5,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	662
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	487
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON8_Bits',0,5,164,2,3
	.word	53205
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,5,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	662
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	487
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON9_Bits',0,5,171,2,3
	.word	53305
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,5,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	662
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	662
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	662
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	662
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CHIPID_Bits',0,5,185,2,3
	.word	53405
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,5,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	679
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	679
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,5,200,2,3
	.word	53608
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,5,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	679
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	487
	.byte	20,0,2,35,0,0,31
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,5,207,2,3
	.word	53840
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,5,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	510
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_SCU_EICON0_Bits',0,5,216,2,3
	.word	53942
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,5,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	487
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_EICON1_Bits',0,5,228,2,3
	.word	54070
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,5,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	662
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	662
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	487
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	662
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	662
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EICR_Bits',0,5,250,2,3
	.word	54259
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,5,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	662
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_EIFILT_Bits',0,5,147,3,3
	.word	54623
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,5,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	487
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_EIFR_Bits',0,5,161,3,3
	.word	55062
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,5,164,3,16,4,11
	.byte	'AE',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	679
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_EISR_Bits',0,5,174,3,3
	.word	55273
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,5,177,3,16,4,11
	.byte	'POL',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	679
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	679
	.byte	14,0,2,35,2,0,31
	.byte	'Ifx_SCU_EMSR_Bits',0,5,187,3,3
	.word	55449
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,5,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	487
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	662
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	662
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_EMSSW_Bits',0,5,196,3,3
	.word	55643
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,5,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	679
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	487
	.byte	23,0,2,35,0,0,31
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,5,204,3,3
	.word	55778
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,5,207,3,16,4,11
	.byte	'ARI',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	487
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_ESROCFG_Bits',0,5,212,3,3
	.word	55914
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,5,215,3,16,4,11
	.byte	'EN0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	662
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	679
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	662
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	662
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_SCU_EXTCON_Bits',0,5,226,3,3
	.word	56025
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,5,229,3,16,4,11
	.byte	'STEP',0,2
	.word	679
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	662
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	679
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	662
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_FDR_Bits',0,5,237,3,3
	.word	56243
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,5,240,3,16,4,11
	.byte	'FS0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_SCU_FMR_Bits',0,5,132,4,3
	.word	56406
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,5,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_ID_Bits',0,5,140,4,3
	.word	56742
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,5,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_SCU_IGCR_Bits',0,5,167,4,3
	.word	56849
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,5,170,4,16,4,11
	.byte	'P0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	487
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_IN_Bits',0,5,175,4,3
	.word	57301
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,5,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_IOCR_Bits',0,5,185,4,3
	.word	57400
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,5,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	487
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	679
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,5,198,4,3
	.word	57550
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,5,201,4,16,4,11
	.byte	'SEED',0,4
	.word	487
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	662
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,5,208,4,3
	.word	57788
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,5,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	679
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	487
	.byte	20,0,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,5,215,4,3
	.word	57949
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,5,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,5,221,4,3
	.word	58055
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,5,224,4,16,4,11
	.byte	'LS2',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	679
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	679
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_LCLCON0_Bits',0,5,232,4,3
	.word	58141
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,5,235,4,16,4,11
	.byte	'LS3',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	679
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	679
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_LCLCON1_Bits',0,5,243,4,3
	.word	58309
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,5,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	679
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	679
	.byte	10,0,2,35,2,0,31
	.byte	'Ifx_SCU_LCLTEST_Bits',0,5,134,5,3
	.word	58477
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,5,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	662
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	679
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_MANID_Bits',0,5,142,5,3
	.word	58791
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,5,145,5,16,4,11
	.byte	'PS0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	679
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	679
	.byte	14,0,2,35,2,0,31
	.byte	'Ifx_SCU_OMR_Bits',0,5,153,5,3
	.word	58902
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,5,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	662
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	662
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	662
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	662
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	662
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	662
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_OSCCON_Bits',0,5,177,5,3
	.word	59060
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,5,180,5,16,4,11
	.byte	'P0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	487
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_OUT_Bits',0,5,185,5,3
	.word	59471
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,5,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	679
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	662
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	662
	.byte	6,0,2,35,3,0,31
	.byte	'Ifx_SCU_OVCCON_Bits',0,5,204,5,3
	.word	59572
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,5,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	487
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,5,216,5,3
	.word	59890
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,5,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	487
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDISC_Bits',0,5,224,5,3
	.word	60077
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,5,227,5,16,4,11
	.byte	'PD0',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	662
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	662
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	662
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	487
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDR_Bits',0,5,234,5,3
	.word	60188
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,5,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	487
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDRR_Bits',0,5,248,5,3
	.word	60321
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,5,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	679
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	662
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	662
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	662
	.byte	5,0,2,35,3,0,31
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,5,134,6,3
	.word	60524
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,5,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	662
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	662
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	487
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,5,143,6,3
	.word	60764
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,5,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	487
	.byte	25,0,2,35,0,0,31
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,5,156,6,3
	.word	60908
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,5,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	487
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR0_Bits',0,5,165,6,3
	.word	61130
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,5,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	487
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR1_Bits',0,5,174,6,3
	.word	61266
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,5,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	487
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR2_Bits',0,5,183,6,3
	.word	61402
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,5,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	487
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR3_Bits',0,5,192,6,3
	.word	61538
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,5,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	487
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR4_Bits',0,5,201,6,3
	.word	61674
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,5,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	487
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR5_Bits',0,5,210,6,3
	.word	61810
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,5,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	679
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	679
	.byte	12,0,2,35,2,0,31
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,5,227,6,3
	.word	61946
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,5,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	487
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	662
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,5,241,6,3
	.word	62218
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,5,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	679
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	679
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,5,135,7,3
	.word	62463
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,5,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	679
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	679
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	662
	.byte	6,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,5,143,7,3
	.word	62851
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,5,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	662
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	662
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	662
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	662
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,5,157,7,3
	.word	62969
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,5,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	662
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	662
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	662
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	662
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	679
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	662
	.byte	6,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,5,172,7,3
	.word	63212
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,5,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	662
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	662
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	662
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	662
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	662
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	662
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	662
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	662
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	679
	.byte	10,0,2,35,2,0,31
	.byte	'Ifx_SCU_RSTCON_Bits',0,5,189,7,3
	.word	63479
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,5,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	679
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_RSTCON2_Bits',0,5,206,7,3
	.word	63738
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,5,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_RSTCON3_Bits',0,5,212,7,3
	.word	64043
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,5,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	662
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,5,245,7,3
	.word	64124
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,5,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	510
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_SCU_SEICON0_Bits',0,5,254,7,3
	.word	64673
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,5,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	487
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_SEICON1_Bits',0,5,138,8,3
	.word	64803
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,5,141,8,16,4,11
	.byte	'AE',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	679
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_SEISR_Bits',0,5,151,8,3
	.word	64994
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,5,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	679
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_STCON_Bits',0,5,161,8,3
	.word	65172
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,5,164,8,16,4,11
	.byte	'MEM',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM1_Bits',0,5,167,8,3
	.word	65323
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,5,170,8,16,4,11
	.byte	'MEM',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM2_Bits',0,5,173,8,3
	.word	65395
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,5,176,8,16,4,11
	.byte	'MEM',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM3_Bits',0,5,179,8,3
	.word	65467
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,5,182,8,16,4,11
	.byte	'MEM',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM4_Bits',0,5,185,8,3
	.word	65539
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,5,188,8,16,4,11
	.byte	'MEM',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM5_Bits',0,5,191,8,3
	.word	65611
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,5,194,8,16,4,11
	.byte	'MEM',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM6_Bits',0,5,197,8,3
	.word	65683
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,5,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	662
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	662
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_STSTAT_Bits',0,5,216,8,3
	.word	65755
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,5,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	679
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,5,224,8,3
	.word	66084
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,5,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,5,234,8,3
	.word	66204
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,5,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	662
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	662
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_SYSCON_Bits',0,5,249,8,3
	.word	66374
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,5,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	679
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	662
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	662
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	662
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,5,137,9,3
	.word	66637
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,5,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	662
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	487
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,5,144,9,3
	.word	66916
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,5,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	679
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,5,151,9,3
	.word	67020
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,5,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	662
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	487
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,5,164,9,3
	.word	67126
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,5,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	487
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,5,174,9,3
	.word	67349
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,5,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	662
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,5,199,9,3
	.word	67497
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,5,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,5,215,9,3
	.word	67985
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,5,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	487
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSET_Bits',0,5,225,9,3
	.word	68282
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,5,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	487
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,5,235,9,3
	.word	68430
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,5,244,9,3
	.word	526
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,5,132,10,3
	.word	701
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,5,148,10,3
	.word	967
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,5,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	510
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,5,157,10,3
	.word	68680
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,5,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	662
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,5,173,10,3
	.word	68806
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,5,176,10,16,4,11
	.byte	'AE',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	662
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,5,189,10,3
	.word	69058
	.byte	12,5,197,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49714
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN00',0,5,202,10,3
	.word	69277
	.byte	12,5,205,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50273
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN01',0,5,210,10,3
	.word	69342
	.byte	12,5,213,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50352
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN10',0,5,218,10,3
	.word	69407
	.byte	12,5,221,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50912
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN11',0,5,226,10,3
	.word	69472
	.byte	12,5,229,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50993
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ARSTDIS',0,5,234,10,3
	.word	69537
	.byte	12,5,237,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51210
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON0',0,5,242,10,3
	.word	69602
	.byte	12,5,245,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51483
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON1',0,5,250,10,3
	.word	69667
	.byte	12,5,253,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51809
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON10',0,5,130,11,3
	.word	69732
	.byte	12,5,133,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51911
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON11',0,5,138,11,3
	.word	69798
	.byte	12,5,141,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52013
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON2',0,5,146,11,3
	.word	69864
	.byte	12,5,149,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52287
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON3',0,5,154,11,3
	.word	69929
	.byte	12,5,157,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52656
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON4',0,5,162,11,3
	.word	69994
	.byte	12,5,165,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52836
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON5',0,5,170,11,3
	.word	70059
	.byte	12,5,173,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53005
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON6',0,5,178,11,3
	.word	70124
	.byte	12,5,181,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53105
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON7',0,5,186,11,3
	.word	70189
	.byte	12,5,189,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53205
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON8',0,5,194,11,3
	.word	70254
	.byte	12,5,197,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53305
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON9',0,5,202,11,3
	.word	70319
	.byte	12,5,205,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53405
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CHIPID',0,5,210,11,3
	.word	70384
	.byte	12,5,213,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53608
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSCLIM',0,5,218,11,3
	.word	70448
	.byte	12,5,221,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53840
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSCSTAT',0,5,226,11,3
	.word	70513
	.byte	12,5,229,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53942
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EICON0',0,5,234,11,3
	.word	70579
	.byte	12,5,237,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54070
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EICON1',0,5,242,11,3
	.word	70643
	.byte	12,5,245,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54259
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EICR',0,5,250,11,3
	.word	70707
	.byte	12,5,253,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54623
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EIFILT',0,5,130,12,3
	.word	70769
	.byte	12,5,133,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55062
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EIFR',0,5,138,12,3
	.word	70833
	.byte	12,5,141,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55273
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EISR',0,5,146,12,3
	.word	70895
	.byte	12,5,149,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55449
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EMSR',0,5,154,12,3
	.word	70957
	.byte	12,5,157,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55643
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EMSSW',0,5,162,12,3
	.word	71019
	.byte	12,5,165,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55778
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,5,170,12,3
	.word	71082
	.byte	12,5,173,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55914
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ESROCFG',0,5,178,12,3
	.word	71155
	.byte	12,5,181,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56025
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EXTCON',0,5,186,12,3
	.word	71220
	.byte	12,5,189,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56243
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_FDR',0,5,194,12,3
	.word	71284
	.byte	12,5,197,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56406
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_FMR',0,5,202,12,3
	.word	71345
	.byte	12,5,205,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56742
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ID',0,5,210,12,3
	.word	71406
	.byte	12,5,213,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56849
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IGCR',0,5,218,12,3
	.word	71466
	.byte	12,5,221,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57301
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IN',0,5,226,12,3
	.word	71528
	.byte	12,5,229,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57400
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IOCR',0,5,234,12,3
	.word	71588
	.byte	12,5,237,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57550
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL0',0,5,242,12,3
	.word	71650
	.byte	12,5,245,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57788
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL1',0,5,250,12,3
	.word	71718
	.byte	12,5,253,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57949
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL2',0,5,130,13,3
	.word	71786
	.byte	12,5,133,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58055
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL3',0,5,138,13,3
	.word	71854
	.byte	12,5,141,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58141
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LCLCON0',0,5,146,13,3
	.word	71922
	.byte	12,5,149,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58309
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LCLCON1',0,5,154,13,3
	.word	71987
	.byte	12,5,157,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58477
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LCLTEST',0,5,162,13,3
	.word	72052
	.byte	12,5,165,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58791
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_MANID',0,5,170,13,3
	.word	72117
	.byte	12,5,173,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58902
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OMR',0,5,178,13,3
	.word	72180
	.byte	12,5,181,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59060
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OSCCON',0,5,186,13,3
	.word	72241
	.byte	12,5,189,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59471
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OUT',0,5,194,13,3
	.word	72305
	.byte	12,5,197,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59572
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OVCCON',0,5,202,13,3
	.word	72366
	.byte	12,5,205,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59890
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OVCENABLE',0,5,210,13,3
	.word	72430
	.byte	12,5,213,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60077
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDISC',0,5,218,13,3
	.word	72497
	.byte	12,5,221,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60188
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDR',0,5,226,13,3
	.word	72560
	.byte	12,5,229,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60321
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDRR',0,5,234,13,3
	.word	72621
	.byte	12,5,237,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60524
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PERPLLCON0',0,5,242,13,3
	.word	72683
	.byte	12,5,245,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60764
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PERPLLCON1',0,5,250,13,3
	.word	72751
	.byte	12,5,253,13,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60908
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PERPLLSTAT',0,5,130,14,3
	.word	72819
	.byte	12,5,133,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61130
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR0',0,5,138,14,3
	.word	72887
	.byte	12,5,141,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61266
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR1',0,5,146,14,3
	.word	72951
	.byte	12,5,149,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61402
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR2',0,5,154,14,3
	.word	73015
	.byte	12,5,157,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61538
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR3',0,5,162,14,3
	.word	73079
	.byte	12,5,165,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61674
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR4',0,5,170,14,3
	.word	73143
	.byte	12,5,173,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61810
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR5',0,5,178,14,3
	.word	73207
	.byte	12,5,181,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61946
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSTAT0',0,5,186,14,3
	.word	73271
	.byte	12,5,189,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62218
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWCR1',0,5,194,14,3
	.word	73336
	.byte	12,5,197,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62463
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMTRCSR0',0,5,202,14,3
	.word	73401
	.byte	12,5,205,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62851
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMTRCSR1',0,5,210,14,3
	.word	73467
	.byte	12,5,213,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62969
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMTRCSR2',0,5,218,14,3
	.word	73533
	.byte	12,5,221,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63212
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMTRCSR3',0,5,226,14,3
	.word	73599
	.byte	12,5,229,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63479
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTCON',0,5,234,14,3
	.word	73665
	.byte	12,5,237,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63738
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTCON2',0,5,242,14,3
	.word	73729
	.byte	12,5,245,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64043
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTCON3',0,5,250,14,3
	.word	73794
	.byte	12,5,253,14,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64124
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTSTAT',0,5,130,15,3
	.word	73859
	.byte	12,5,133,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64673
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SEICON0',0,5,138,15,3
	.word	73924
	.byte	12,5,141,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64803
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SEICON1',0,5,146,15,3
	.word	73989
	.byte	12,5,149,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64994
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SEISR',0,5,154,15,3
	.word	74054
	.byte	12,5,157,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65172
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STCON',0,5,162,15,3
	.word	74117
	.byte	12,5,165,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65323
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM1',0,5,170,15,3
	.word	74180
	.byte	12,5,173,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65395
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM2',0,5,178,15,3
	.word	74244
	.byte	12,5,181,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65467
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM3',0,5,186,15,3
	.word	74308
	.byte	12,5,189,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65539
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM4',0,5,194,15,3
	.word	74372
	.byte	12,5,197,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65611
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM5',0,5,202,15,3
	.word	74436
	.byte	12,5,205,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65683
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STMEM6',0,5,210,15,3
	.word	74500
	.byte	12,5,213,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65755
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STSTAT',0,5,218,15,3
	.word	74564
	.byte	12,5,221,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66084
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SWAPCTRL',0,5,226,15,3
	.word	74628
	.byte	12,5,229,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66204
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SWRSTCON',0,5,234,15,3
	.word	74694
	.byte	12,5,237,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66374
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SYSCON',0,5,242,15,3
	.word	74760
	.byte	12,5,245,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66637
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SYSPLLCON0',0,5,250,15,3
	.word	74824
	.byte	12,5,253,15,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66916
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SYSPLLCON1',0,5,130,16,3
	.word	74892
	.byte	12,5,133,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67020
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SYSPLLCON2',0,5,138,16,3
	.word	74960
	.byte	12,5,141,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67126
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SYSPLLSTAT',0,5,146,16,3
	.word	75028
	.byte	12,5,149,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67349
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPCLR',0,5,154,16,3
	.word	75096
	.byte	12,5,157,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67497
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPDIS0',0,5,162,16,3
	.word	75161
	.byte	12,5,165,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67985
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPDIS1',0,5,170,16,3
	.word	75227
	.byte	12,5,173,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68282
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSET',0,5,178,16,3
	.word	75293
	.byte	12,5,181,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68430
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSTAT',0,5,186,16,3
	.word	75358
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON0',0,5,194,16,3
	.word	622
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON1',0,5,202,16,3
	.word	927
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_SR',0,5,210,16,3
	.word	1158
	.byte	12,5,213,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68680
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_CON0',0,5,218,16,3
	.word	75509
	.byte	12,5,221,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68806
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_CON1',0,5,226,16,3
	.word	75576
	.byte	12,5,229,16,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69058
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_SR',0,5,234,16,3
	.word	75643
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,5,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	71082
	.byte	4,2,35,0,0,14
	.word	75708
	.byte	31
	.byte	'Ifx_SCU_ESRCFGX',0,5,249,16,3
	.word	75749
	.byte	14
	.word	1198
	.byte	31
	.byte	'Ifx_SCU_WDTCPU',0,5,141,17,3
	.word	75779
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,5,156,17,25,12,13
	.byte	'CON0',0
	.word	75509
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	75576
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	75643
	.byte	4,2,35,8,0,14
	.word	75808
	.byte	31
	.byte	'Ifx_SCU_WDTS',0,5,161,17,3
	.word	75869
	.byte	15,8
	.word	75708
	.byte	16,1,0,14
	.word	75896
	.byte	15,20
	.word	662
	.byte	16,19,0,15,36
	.word	662
	.byte	16,35,0,15,16
	.word	70707
	.byte	16,3,0,15,16
	.word	71466
	.byte	16,3,0,15,72
	.word	1198
	.byte	16,5,0,14
	.word	75946
	.byte	14
	.word	75808
	.byte	15,176,2
	.word	662
	.byte	16,175,2,0,10
	.byte	'_Ifx_SCU',0,5,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	4700
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	71406
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2880
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	72241
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	75028
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	74824
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	74892
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	74960
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	72819
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	72683
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	72751
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	69602
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	69667
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	71284
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	71220
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	69864
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	69929
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	69994
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	70059
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	73859
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2880
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	73665
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	69537
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	74694
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	73729
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	73794
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	2880
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	75905
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	71155
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	74760
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	70124
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	70189
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	70254
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	70319
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	69732
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	69798
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	2880
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	72560
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	71588
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	72305
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	72180
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	71528
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	38318
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	74564
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	74117
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	72887
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	72951
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	73015
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	73079
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	73143
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	73207
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	2880
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	73271
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	73336
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	38318
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	70957
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	71019
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	70513
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	70448
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	75910
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	75227
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	75358
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	75293
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	75096
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	75161
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	71922
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	71987
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	72052
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	70384
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	72117
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	2880
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	74628
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	75910
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	71650
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	71718
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	71786
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	71854
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	38318
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	74180
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	74244
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	72497
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4700
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	73401
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	73467
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	73533
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	73599
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	4071
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	74308
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	74372
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	74436
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	74500
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	38318
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	72430
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	72366
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	75919
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	70769
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	75928
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	70833
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	71345
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	72621
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	75937
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	38318
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	75955
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	4700
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	70579
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	70643
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	70895
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	75960
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	73924
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	73989
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	74054
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	75965
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	69472
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	69407
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	69342
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	69277
	.byte	4,3,35,252,7,0,14
	.word	75976
	.byte	31
	.byte	'Ifx_SCU',0,5,166,18,3
	.word	78097
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,18,68,16,4,11
	.byte	'EN0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_STM_ACCEN0_Bits',0,18,102,3
	.word	78119
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,18,105,16,4,11
	.byte	'reserved_0',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_ACCEN1_Bits',0,18,108,3
	.word	78676
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,18,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_CAP_Bits',0,18,114,3
	.word	78753
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,18,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_CAPSV_Bits',0,18,120,3
	.word	78826
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,18,123,16,4,11
	.byte	'DISR',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	487
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_STM_CLC_Bits',0,18,130,1,3
	.word	78903
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,18,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	662
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	662
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	662
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	662
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	662
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	662
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	662
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	662
	.byte	3,0,2,35,3,0,31
	.byte	'Ifx_STM_CMCON_Bits',0,18,143,1,3
	.word	79045
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,18,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_CMP_Bits',0,18,149,1,3
	.word	79265
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,18,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	487
	.byte	25,0,2,35,0,0,31
	.byte	'Ifx_STM_ICR_Bits',0,18,162,1,3
	.word	79334
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,18,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_STM_ID_Bits',0,18,170,1,3
	.word	79537
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,18,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	487
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_STM_ISCR_Bits',0,18,180,1,3
	.word	79641
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,18,183,1,16,4,11
	.byte	'RST',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	487
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_STM_KRST0_Bits',0,18,188,1,3
	.word	79792
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,18,191,1,16,4,11
	.byte	'RST',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	487
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_STM_KRST1_Bits',0,18,195,1,3
	.word	79903
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,18,198,1,16,4,11
	.byte	'CLR',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	487
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_STM_KRSTCLR_Bits',0,18,202,1,3
	.word	79995
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,18,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	487
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_STM_OCS_Bits',0,18,213,1,3
	.word	80091
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,18,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM0_Bits',0,18,219,1,3
	.word	80259
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,18,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM0SV_Bits',0,18,225,1,3
	.word	80332
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,18,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM1_Bits',0,18,231,1,3
	.word	80409
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,18,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM2_Bits',0,18,237,1,3
	.word	80482
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,18,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM3_Bits',0,18,243,1,3
	.word	80555
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,18,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM4_Bits',0,18,249,1,3
	.word	80629
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,18,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM5_Bits',0,18,255,1,3
	.word	80703
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,18,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM6_Bits',0,18,133,2,3
	.word	80777
	.byte	12,18,141,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78119
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ACCEN0',0,18,146,2,3
	.word	80851
	.byte	12,18,149,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78676
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ACCEN1',0,18,154,2,3
	.word	80915
	.byte	12,18,157,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78753
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CAP',0,18,162,2,3
	.word	80979
	.byte	12,18,165,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78826
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CAPSV',0,18,170,2,3
	.word	81040
	.byte	12,18,173,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78903
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CLC',0,18,178,2,3
	.word	81103
	.byte	12,18,181,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79045
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CMCON',0,18,186,2,3
	.word	81164
	.byte	12,18,189,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79265
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CMP',0,18,194,2,3
	.word	81227
	.byte	12,18,197,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79334
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ICR',0,18,202,2,3
	.word	81288
	.byte	12,18,205,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79537
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ID',0,18,210,2,3
	.word	81349
	.byte	12,18,213,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79641
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ISCR',0,18,218,2,3
	.word	81409
	.byte	12,18,221,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79792
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_KRST0',0,18,226,2,3
	.word	81471
	.byte	12,18,229,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79903
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_KRST1',0,18,234,2,3
	.word	81534
	.byte	12,18,237,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79995
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_KRSTCLR',0,18,242,2,3
	.word	81597
	.byte	12,18,245,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80091
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_OCS',0,18,250,2,3
	.word	81662
	.byte	12,18,253,2,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80259
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM0',0,18,130,3,3
	.word	81723
	.byte	12,18,133,3,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80332
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM0SV',0,18,138,3,3
	.word	81785
	.byte	12,18,141,3,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80409
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM1',0,18,146,3,3
	.word	81849
	.byte	12,18,149,3,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80482
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM2',0,18,154,3,3
	.word	81911
	.byte	12,18,157,3,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80555
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM3',0,18,162,3,3
	.word	81973
	.byte	12,18,165,3,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80629
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM4',0,18,170,3,3
	.word	82035
	.byte	12,18,173,3,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80703
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM5',0,18,178,3,3
	.word	82097
	.byte	12,18,181,3,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80777
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM6',0,18,186,3,3
	.word	82159
	.byte	17,19,162,11,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,31
	.byte	'IfxScu_WDTCON1_IR',0,19,167,11,3
	.word	82221
	.byte	31
	.byte	'Ifx_P_ACCEN0_Bits',0,7,102,3
	.word	8228
	.byte	31
	.byte	'Ifx_P_ACCEN1_Bits',0,7,108,3
	.word	8141
	.byte	31
	.byte	'Ifx_P_ESR_Bits',0,7,130,1,3
	.word	4709
	.byte	31
	.byte	'Ifx_P_ID_Bits',0,7,138,1,3
	.word	2760
	.byte	31
	.byte	'Ifx_P_IN_Bits',0,7,160,1,3
	.word	3756
	.byte	31
	.byte	'Ifx_P_IOCR0_Bits',0,7,173,1,3
	.word	2889
	.byte	31
	.byte	'Ifx_P_IOCR12_Bits',0,7,186,1,3
	.word	3536
	.byte	31
	.byte	'Ifx_P_IOCR4_Bits',0,7,199,1,3
	.word	3104
	.byte	31
	.byte	'Ifx_P_IOCR8_Bits',0,7,212,1,3
	.word	3319
	.byte	31
	.byte	'Ifx_P_LPCR_Bits',0,7,231,1,3
	.word	7803
	.byte	31
	.byte	'Ifx_P_OMCR_Bits',0,7,253,1,3
	.word	7455
	.byte	31
	.byte	'Ifx_P_OMCR0_Bits',0,7,136,2,3
	.word	6442
	.byte	31
	.byte	'Ifx_P_OMCR12_Bits',0,7,146,2,3
	.word	6966
	.byte	31
	.byte	'Ifx_P_OMCR4_Bits',0,7,157,2,3
	.word	6616
	.byte	31
	.byte	'Ifx_P_OMCR8_Bits',0,7,168,2,3
	.word	6790
	.byte	31
	.byte	'Ifx_P_OMR_Bits',0,7,205,2,3
	.word	2189
	.byte	31
	.byte	'Ifx_P_OMSR_Bits',0,7,227,2,3
	.word	7122
	.byte	31
	.byte	'Ifx_P_OMSR0_Bits',0,7,237,2,3
	.word	5779
	.byte	31
	.byte	'Ifx_P_OMSR12_Bits',0,7,248,2,3
	.word	6267
	.byte	31
	.byte	'Ifx_P_OMSR4_Bits',0,7,131,3,3
	.word	5926
	.byte	31
	.byte	'Ifx_P_OMSR8_Bits',0,7,142,3,3
	.word	6095
	.byte	31
	.byte	'Ifx_P_OUT_Bits',0,7,164,3,3
	.word	1873
	.byte	31
	.byte	'Ifx_P_PCSR_Bits',0,7,187,3,3
	.word	5415
	.byte	31
	.byte	'Ifx_P_PDISC_Bits',0,7,209,3,3
	.word	5049
	.byte	31
	.byte	'Ifx_P_PDR0_Bits',0,7,230,3,3
	.word	4080
	.byte	31
	.byte	'Ifx_P_PDR1_Bits',0,7,251,3,3
	.word	4384
	.byte	31
	.byte	'Ifx_P_ACCEN0',0,7,136,4,3
	.word	8755
	.byte	31
	.byte	'Ifx_P_ACCEN1',0,7,144,4,3
	.word	8188
	.byte	31
	.byte	'Ifx_P_ESR',0,7,152,4,3
	.word	5000
	.byte	31
	.byte	'Ifx_P_ID',0,7,160,4,3
	.word	2840
	.byte	31
	.byte	'Ifx_P_IN',0,7,168,4,3
	.word	4031
	.byte	31
	.byte	'Ifx_P_IOCR0',0,7,176,4,3
	.word	3064
	.byte	31
	.byte	'Ifx_P_IOCR12',0,7,184,4,3
	.word	3716
	.byte	31
	.byte	'Ifx_P_IOCR4',0,7,192,4,3
	.word	3279
	.byte	31
	.byte	'Ifx_P_IOCR8',0,7,200,4,3
	.word	3496
	.byte	31
	.byte	'Ifx_P_LPCR',0,7,208,4,3
	.word	8083
	.byte	31
	.byte	'Ifx_P_OMCR',0,7,216,4,3
	.word	7763
	.byte	31
	.byte	'Ifx_P_OMCR0',0,7,224,4,3
	.word	6576
	.byte	31
	.byte	'Ifx_P_OMCR12',0,7,232,4,3
	.word	7082
	.byte	31
	.byte	'Ifx_P_OMCR4',0,7,240,4,3
	.word	6750
	.byte	31
	.byte	'Ifx_P_OMCR8',0,7,248,4,3
	.word	6926
	.byte	31
	.byte	'Ifx_P_OMR',0,7,128,5,3
	.word	2720
	.byte	31
	.byte	'Ifx_P_OMSR',0,7,136,5,3
	.word	7415
	.byte	31
	.byte	'Ifx_P_OMSR0',0,7,144,5,3
	.word	5886
	.byte	31
	.byte	'Ifx_P_OMSR12',0,7,152,5,3
	.word	6402
	.byte	31
	.byte	'Ifx_P_OMSR4',0,7,160,5,3
	.word	6055
	.byte	31
	.byte	'Ifx_P_OMSR8',0,7,168,5,3
	.word	6227
	.byte	31
	.byte	'Ifx_P_OUT',0,7,176,5,3
	.word	2149
	.byte	31
	.byte	'Ifx_P_PCSR',0,7,184,5,3
	.word	5739
	.byte	31
	.byte	'Ifx_P_PDISC',0,7,192,5,3
	.word	5375
	.byte	31
	.byte	'Ifx_P_PDR0',0,7,200,5,3
	.word	4344
	.byte	31
	.byte	'Ifx_P_PDR1',0,7,208,5,3
	.word	4660
	.byte	14
	.word	8795
	.byte	31
	.byte	'Ifx_P',0,7,128,6,3
	.word	83537
	.byte	17,6,73,9,1,18
	.byte	'IfxPort_ControlledBy_port',0,0,18
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,31
	.byte	'IfxPort_ControlledBy',0,6,77,3
	.word	83557
	.byte	17,6,81,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,31
	.byte	'IfxPort_InputMode',0,6,87,3
	.word	83648
	.byte	17,6,91,9,1,18
	.byte	'IfxPort_LvdsMode_high',0,0,18
	.byte	'IfxPort_LvdsMode_medium',0,1,0,31
	.byte	'IfxPort_LvdsMode',0,6,95,3
	.word	83799
	.byte	17,6,126,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,31
	.byte	'IfxPort_OutputIdx',0,6,136,1,3
	.word	83880
	.byte	17,6,140,1,9,1,18
	.byte	'IfxPort_OutputMode_none',0,0,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,31
	.byte	'IfxPort_OutputMode',0,6,145,1,3
	.word	84124
	.byte	17,6,151,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,31
	.byte	'IfxPort_PadDriver',0,6,165,1,3
	.word	84248
	.byte	17,6,169,1,9,1,18
	.byte	'IfxPort_PadSupply_3v',0,0,18
	.byte	'IfxPort_PadSupply_5v',0,1,0,31
	.byte	'IfxPort_PadSupply',0,6,173,1,3
	.word	84698
	.byte	17,6,177,1,9,1,18
	.byte	'IfxPort_PinFunctionMode_digital',0,0,18
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,31
	.byte	'IfxPort_PinFunctionMode',0,6,181,1,3
	.word	84778
	.byte	31
	.byte	'IfxPort_State',0,6,193,1,3
	.word	9375
	.byte	20,6,246,1,9,8,13
	.byte	'port',0
	.word	9370
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	662
	.byte	1,2,35,4,0,31
	.byte	'IfxPort_Pin',0,6,250,1,3
	.word	84908
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,20,68,16,4,11
	.byte	'EN0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SMU_ACCEN0_Bits',0,20,102,3
	.word	84968
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,20,105,16,4,11
	.byte	'reserved_0',0,4
	.word	487
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SMU_ACCEN1_Bits',0,20,108,3
	.word	85525
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,20,111,16,4,11
	.byte	'DF0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SMU_AD_Bits',0,20,145,1,3
	.word	85602
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,20,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SMU_AEX_Bits',0,20,176,1,3
	.word	86152
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,20,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	510
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	510
	.byte	4,0,2,35,0,0,31
	.byte	'Ifx_SMU_AEXCLR_Bits',0,20,207,1,3
	.word	86709
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,20,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	679
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SMU_AFCNT_Bits',0,20,217,1,3
	.word	87305
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,20,220,1,16,4,11
	.byte	'SF0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_SMU_AG_Bits',0,20,254,1,3
	.word	87445
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,20,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	510
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	510
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	510
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	510
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	510
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	510
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	510
	.byte	2,0,2,35,0,0,31
	.byte	'Ifx_SMU_AGC_Bits',0,20,142,2,3
	.word	87996
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,20,145,2,16,4,11
	.byte	'CF0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_SMU_AGCF_Bits',0,20,179,2,3
	.word	88258
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,20,182,2,16,4,11
	.byte	'FE0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_SMU_AGFSP_Bits',0,20,216,2,3
	.word	88813
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,20,219,2,16,4,11
	.byte	'DISR',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	487
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SMU_CLC_Bits',0,20,226,2,3
	.word	89370
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,20,229,2,16,4,11
	.byte	'CMD',0,4
	.word	510
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	510
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	510
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SMU_CMD_Bits',0,20,234,2,3
	.word	89513
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,20,237,2,16,4,11
	.byte	'SSM',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	487
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SMU_DBG_Bits',0,20,241,2,3
	.word	89616
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,20,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	510
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	510
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	510
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	510
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	510
	.byte	10,0,2,35,0,0,31
	.byte	'Ifx_SMU_FSP_Bits',0,20,252,2,3
	.word	89704
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,20,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SMU_ID_Bits',0,20,132,3,3
	.word	89859
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,20,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	510
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	510
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	510
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_SMU_KEYS_Bits',0,20,140,3,3
	.word	89969
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,20,143,3,16,4,11
	.byte	'TGS',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	487
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_SMU_OCS_Bits',0,20,153,3,3
	.word	90081
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,20,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	510
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	510
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	510
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	510
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	510
	.byte	9,0,2,35,0,0,31
	.byte	'Ifx_SMU_PCTL_Bits',0,20,167,3,3
	.word	90273
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,20,170,3,16,4,11
	.byte	'TE0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_SMU_RMCTL_Bits',0,20,204,3,3
	.word	90504
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,20,207,3,16,4,11
	.byte	'EF0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_SMU_RMEF_Bits',0,20,241,3,3
	.word	91208
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,20,244,3,16,4,11
	.byte	'STS0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_SMU_RMSTS_Bits',0,20,150,4,3
	.word	91910
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,20,153,4,16,4,11
	.byte	'GID0',0,4
	.word	510
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	510
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	510
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	510
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	510
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	510
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_SMU_RTAC00_Bits',0,20,161,4,3
	.word	92625
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,20,164,4,16,4,11
	.byte	'GID2',0,4
	.word	510
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	510
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	510
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	510
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	510
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	510
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_SMU_RTAC01_Bits',0,20,172,4,3
	.word	92793
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,20,175,4,16,4,11
	.byte	'GID0',0,4
	.word	510
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	510
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	510
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	510
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	510
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	510
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_SMU_RTAC10_Bits',0,20,183,4,3
	.word	92961
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,20,186,4,16,4,11
	.byte	'GID2',0,4
	.word	510
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	510
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	510
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	510
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	510
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	510
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_SMU_RTAC11_Bits',0,20,194,4,3
	.word	93129
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,20,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	510
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	510
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SMU_RTC_Bits',0,20,203,4,3
	.word	93297
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,20,206,4,16,4,11
	.byte	'CMD',0,4
	.word	510
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	510
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	510
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	510
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	510
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_SMU_STS_Bits',0,20,220,4,3
	.word	93417
	.byte	12,20,228,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84968
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_ACCEN0',0,20,233,4,3
	.word	93672
	.byte	12,20,236,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85525
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_ACCEN1',0,20,241,4,3
	.word	93736
	.byte	12,20,244,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85602
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_AD',0,20,249,4,3
	.word	93800
	.byte	12,20,252,4,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86152
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_AEX',0,20,129,5,3
	.word	93860
	.byte	12,20,132,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86709
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_AEXCLR',0,20,137,5,3
	.word	93921
	.byte	12,20,140,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87305
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_AFCNT',0,20,145,5,3
	.word	93985
	.byte	12,20,148,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87445
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_AG',0,20,153,5,3
	.word	94048
	.byte	12,20,156,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87996
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_AGC',0,20,161,5,3
	.word	94108
	.byte	12,20,164,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88258
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_AGCF',0,20,169,5,3
	.word	94169
	.byte	12,20,172,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88813
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_AGFSP',0,20,177,5,3
	.word	94231
	.byte	12,20,180,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89370
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_CLC',0,20,185,5,3
	.word	94294
	.byte	12,20,188,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89513
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_CMD',0,20,193,5,3
	.word	94355
	.byte	12,20,196,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89616
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_DBG',0,20,201,5,3
	.word	94416
	.byte	12,20,204,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89704
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_FSP',0,20,209,5,3
	.word	94477
	.byte	12,20,212,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89859
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_ID',0,20,217,5,3
	.word	94538
	.byte	12,20,220,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89969
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_KEYS',0,20,225,5,3
	.word	94598
	.byte	12,20,228,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90081
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_OCS',0,20,233,5,3
	.word	94660
	.byte	12,20,236,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90273
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_PCTL',0,20,241,5,3
	.word	94721
	.byte	12,20,244,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90504
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_RMCTL',0,20,249,5,3
	.word	94783
	.byte	12,20,252,5,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91208
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_RMEF',0,20,129,6,3
	.word	94846
	.byte	12,20,132,6,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91910
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_RMSTS',0,20,137,6,3
	.word	94908
	.byte	12,20,140,6,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92625
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_RTAC00',0,20,145,6,3
	.word	94971
	.byte	12,20,148,6,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92793
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_RTAC01',0,20,153,6,3
	.word	95035
	.byte	12,20,156,6,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92961
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_RTAC10',0,20,161,6,3
	.word	95099
	.byte	12,20,164,6,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93129
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_RTAC11',0,20,169,6,3
	.word	95163
	.byte	12,20,172,6,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93297
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_RTC',0,20,177,6,3
	.word	95227
	.byte	12,20,180,6,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	93417
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SMU_STS',0,20,185,6,3
	.word	95288
	.byte	17,8,210,2,9,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,31
	.byte	'IfxScuCcu_LowPowerDivRatio',0,8,216,2,3
	.word	95349
	.byte	17,8,220,2,9,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,18
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,31
	.byte	'IfxScuCcu_ModulationAmplitude',0,8,229,2,3
	.word	95542
	.byte	17,8,254,3,9,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,31
	.byte	'IfxScuCcu_PllInputClockSelection',0,8,131,4,3
	.word	95843
	.byte	17,8,135,4,9,1,18
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,18
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,18
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,18
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,31
	.byte	'IfxScuCcu_Traprequest',0,8,141,4,3
	.word	96017
	.byte	17,8,147,4,9,1,18
	.byte	'IfxScuCcu_ModEn_disabled',0,0,18
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,31
	.byte	'IfxScuCcu_ModEn',0,8,151,4,3
	.word	96171
	.byte	20,8,162,4,9,6,13
	.byte	'pDivider',0
	.word	662
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	662
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	662
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	662
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	662
	.byte	1,2,35,4,0,31
	.byte	'IfxScuCcu_PerPllConfig',0,8,171,4,3
	.word	96256
	.byte	20,8,176,4,9,4,13
	.byte	'pDivider',0
	.word	662
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	662
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	662
	.byte	1,2,35,2,0,31
	.byte	'IfxScuCcu_SysPllConfig',0,8,181,4,3
	.word	96394
	.byte	20,8,189,4,9,8,13
	.byte	'value',0
	.word	9887
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9887
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_CcuconRegConfig',0,8,193,4,3
	.word	96488
	.byte	20,8,197,4,9,6,13
	.byte	'k2Step',0
	.word	662
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	283
	.byte	4,2,35,2,0,31
	.byte	'IfxScuCcu_PllStepConfig',0,8,201,4,3
	.word	96559
	.byte	20,8,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	9887
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	95843
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	96394
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	96256
	.byte	6,2,35,10,0,31
	.byte	'IfxScuCcu_pllsParameterConfig',0,8,211,4,3
	.word	96633
	.byte	20,8,219,4,9,8,13
	.byte	'value',0
	.word	9887
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9887
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,8,223,4,3
	.word	96778
	.byte	20,8,231,4,9,80,13
	.byte	'ccucon0',0
	.word	96488
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	96488
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	96488
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	96488
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	96488
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	96488
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	96488
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	96488
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	96488
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	96488
	.byte	8,2,35,72,0,31
	.byte	'IfxScuCcu_ClockDistributionConfig',0,8,243,4,3
	.word	96854
	.byte	20,8,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	96633
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	283
	.byte	4,2,35,16,0,31
	.byte	'IfxScuCcu_InitialStepConfig',0,8,251,4,3
	.word	97076
	.byte	21
	.word	96559
	.byte	5
	.word	97162
	.byte	20,8,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	662
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	97167
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_PllThrottleConfig',0,8,131,5,3
	.word	97172
	.byte	20,8,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	96171
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	95542
	.byte	1,2,35,1,0,31
	.byte	'IfxScuCcu_Mod_Config',0,8,141,5,3
	.word	97254
	.byte	17,9,141,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,31
	.byte	'IfxCpu_CounterMode',0,9,145,1,3
	.word	97328
	.byte	20,9,198,1,9,6,13
	.byte	'counter',0
	.word	9887
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	662
	.byte	1,2,35,4,0,31
	.byte	'IfxCpu_Counter',0,9,202,1,3
	.word	97417
	.byte	20,9,210,1,9,32,13
	.byte	'instruction',0
	.word	97417
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	97417
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	97417
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	97417
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	97417
	.byte	6,2,35,24,0,31
	.byte	'IfxCpu_Perf',0,9,217,1,3
	.word	97483
	.byte	10
	.byte	'_Ifx_PMS_ACCEN0_Bits',0,21,68,16,4,11
	.byte	'EN0',0,4
	.word	510
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	510
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	510
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	510
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	510
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	510
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	510
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	510
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	510
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	510
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	510
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	510
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	510
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	510
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	510
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	510
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	510
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	510
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	510
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	510
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	510
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	510
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	510
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	510
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	510
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	510
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	510
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	510
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	510
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	510
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	510
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	510
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_PMS_ACCEN0_Bits',0,21,102,3
	.word	97601
	.byte	10
	.byte	'_Ifx_PMS_ACCEN1_Bits',0,21,105,16,4,11
	.byte	'reserved_0',0,4
	.word	510
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_PMS_ACCEN1_Bits',0,21,108,3
	.word	98158
	.byte	10
	.byte	'_Ifx_PMS_AGFSP_STDBY0_Bits',0,21,111,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'FE4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'FE5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'FE6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'FE7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'FE8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'FE9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'FE10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'FE11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'FE12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'FE13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'FE14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'FE15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	679
	.byte	13,2,2,35,2,11
	.byte	'BITPROT',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_AGFSP_STDBY0_Bits',0,21,133,1,3
	.word	98235
	.byte	10
	.byte	'_Ifx_PMS_AGFSP_STDBY1_Bits',0,21,136,1,16,4,11
	.byte	'FE0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'FE1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'FE2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'FE3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'FE4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'FE5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'FE7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'FE8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'FE9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'FE10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'FE11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'FE12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'FE13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'FE14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'FE15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'FE16',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	679
	.byte	13,2,2,35,2,11
	.byte	'BITPROT',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_AGFSP_STDBY1_Bits',0,21,158,1,3
	.word	98665
	.byte	10
	.byte	'_Ifx_PMS_AG_STDBY0_Bits',0,21,161,1,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'SF4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'SF5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'SF6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'SF7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'SF8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'SF9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'SF10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'SF11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'SF12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'SF13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'SF14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'SF15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	679
	.byte	13,2,2,35,2,11
	.byte	'FSPERR',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_AG_STDBY0_Bits',0,21,183,1,3
	.word	99068
	.byte	10
	.byte	'_Ifx_PMS_AG_STDBY1_Bits',0,21,186,1,16,4,11
	.byte	'SF0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'SF1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'SF2',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'SF3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'SF4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'SF5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'SF7',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'SF8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'SF9',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'SF10',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'SF11',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'SF12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'SF13',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'SF14',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'SF15',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'SF16',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	679
	.byte	13,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_AG_STDBY1_Bits',0,21,208,1,3
	.word	99492
	.byte	10
	.byte	'_Ifx_PMS_CMD_STDBY_Bits',0,21,211,1,16,4,11
	.byte	'SMUEN',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'FSP0EN',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'FSP1EN',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'ASCE',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	487
	.byte	26,2,2,35,0,11
	.byte	'BITPROT',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_CMD_STDBY_Bits',0,21,220,1,3
	.word	99893
	.byte	10
	.byte	'_Ifx_PMS_DTSLIM_Bits',0,21,223,1,16,4,11
	.byte	'LOWER',0,2
	.word	679
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	3,1,2,35,1,11
	.byte	'LLU',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	679
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	2,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_DTSLIM_Bits',0,21,232,1,3
	.word	100089
	.byte	10
	.byte	'_Ifx_PMS_DTSSTAT_Bits',0,21,235,1,16,4,11
	.byte	'RESULT',0,2
	.word	679
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	487
	.byte	20,0,2,35,0,0,31
	.byte	'Ifx_PMS_DTSSTAT_Bits',0,21,239,1,3
	.word	100272
	.byte	10
	.byte	'_Ifx_PMS_EVR33CON_Bits',0,21,242,1,16,4,11
	.byte	'SHVH33',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'SHHVEN',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'SHLVEN',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'SHVL33',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVR33CON_Bits',0,21,255,1,3
	.word	100372
	.byte	10
	.byte	'_Ifx_PMS_EVRADCSTAT_Bits',0,21,130,2,16,4,11
	.byte	'ADCCV',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'OVC',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'OV33',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'OVSWD',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'UVC',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'UV33',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'UVSWD',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRADCSTAT_Bits',0,21,142,2,3
	.word	100658
	.byte	10
	.byte	'_Ifx_PMS_EVROSCCTRL_Bits',0,21,145,2,16,4,11
	.byte	'OSCFTRIM',0,1
	.word	662
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	679
	.byte	10,0,2,35,0,11
	.byte	'OSCFPTRIM',0,1
	.word	662
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	679
	.byte	7,3,2,35,2,11
	.byte	'OSCTEMPOFFS',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'OSCTRIMEN',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVROSCCTRL_Bits',0,21,154,2,3
	.word	100896
	.byte	10
	.byte	'_Ifx_PMS_EVRRSTCON_Bits',0,21,157,2,16,4,11
	.byte	'RSTCTRIM',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'RST33TRIM',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'RSTSWDTRIM',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'RSTCOFF',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'BPRSTCOFF',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRRSTCON_Bits',0,21,170,2,3
	.word	101114
	.byte	10
	.byte	'_Ifx_PMS_EVRRSTSTAT_Bits',0,21,173,2,16,4,11
	.byte	'RSTC',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'RST33',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'RSTSWD',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'RSTCOFF',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	662
	.byte	3,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRRSTSTAT_Bits',0,21,184,2,3
	.word	101405
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF0_Bits',0,21,187,2,16,4,11
	.byte	'M0S0EN',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'M0S2EN',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'M0S3EN',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'M0S3CLIP',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'M0S4EN',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'M0RAMPEN',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'M0SFRGET',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'M0SKIPEN',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'M0S3COEFF',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'M0S4COEFF',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'M0SRMPCOEFF',0,1
	.word	662
	.byte	4,4,2,35,2,11
	.byte	'M0FGETCOEFF',0,1
	.word	662
	.byte	4,0,2,35,2,11
	.byte	'M0S2COEFF',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'M0S2VINSRC',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'M0S2VOSRC',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'M0SRMPCOEFFFRAC',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF0_Bits',0,21,206,2,3
	.word	101650
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF1_Bits',0,21,209,2,16,4,11
	.byte	'M0VOCFLPF',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'M0VOCFINC',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'M0VOUT',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'M0VIN',0,2
	.word	679
	.byte	11,5,2,35,2,11
	.byte	'M0S3COEFFFRAC',0,1
	.word	662
	.byte	2,3,2,35,3,11
	.byte	'M0S2COEFFFRAC',0,1
	.word	662
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF1_Bits',0,21,218,2,3
	.word	102063
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF2_Bits',0,21,221,2,16,4,11
	.byte	'M1S0EN',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'M1S2EN',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'M1S3EN',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'M1S3CLIP',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'M1S4EN',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'M1RAMPEN',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'M1SFRGET',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'M1SKIPEN',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'M1S3COEFF',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'M1S4COEFF',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'M1SRMPCOEFF',0,1
	.word	662
	.byte	4,4,2,35,2,11
	.byte	'M1FGETCOEFF',0,1
	.word	662
	.byte	4,0,2,35,2,11
	.byte	'M1S2COEFF',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'M1S2VINSRC',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'M1S2VOSRC',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF2_Bits',0,21,239,2,3
	.word	102272
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF3_Bits',0,21,242,2,16,4,11
	.byte	'M1VOCFLPF',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'M1VOCFINC',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'M1VOUT',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'M1VIN',0,2
	.word	679
	.byte	11,5,2,35,2,11
	.byte	'M1S3COEFFFRAC',0,1
	.word	662
	.byte	2,3,2,35,3,11
	.byte	'M1S2COEFFFRAC',0,1
	.word	662
	.byte	2,1,2,35,3,11
	.byte	'M1SRMPCOEFFFRAC',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF3_Bits',0,21,251,2,3
	.word	102666
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF4_Bits',0,21,254,2,16,4,11
	.byte	'M2S0EN',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'M2S2EN',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'M2S3EN',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'M2S3CLIP',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'M2S4EN',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'M2RAMPEN',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'M2SFRGET',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'M2SKIPEN',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'M2S3COEFF',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'M2S4COEFF',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'M2SRMPCOEFF',0,1
	.word	662
	.byte	4,4,2,35,2,11
	.byte	'M2FGETCOEFF',0,1
	.word	662
	.byte	4,0,2,35,2,11
	.byte	'M2S2COEFF',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'M2S2VINSRC',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'M2S2VOSRC',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF4_Bits',0,21,144,3,3
	.word	102887
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF5_Bits',0,21,147,3,16,4,11
	.byte	'M2VOCFLPF',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'M2VOCFINC',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'M2VOUT',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'M2VIN',0,2
	.word	679
	.byte	11,5,2,35,2,11
	.byte	'M2S3COEFFFRAC',0,1
	.word	662
	.byte	2,3,2,35,3,11
	.byte	'M2S2COEFFFRAC',0,1
	.word	662
	.byte	2,1,2,35,3,11
	.byte	'M2SRMPCOEFFFRAC',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF5_Bits',0,21,156,3,3
	.word	103281
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF6_Bits',0,21,159,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF6_Bits',0,21,166,3,3
	.word	103502
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF7_Bits',0,21,169,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF7_Bits',0,21,175,3,3
	.word	103664
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF8_Bits',0,21,178,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF8_Bits',0,21,185,3,3
	.word	103807
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCOEFF9_Bits',0,21,188,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF9_Bits',0,21,194,3,3
	.word	103972
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL0_Bits',0,21,197,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	679
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,2
	.word	679
	.byte	12,4,2,35,2,11
	.byte	'NGOFF',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'PGOFF',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL0_Bits',0,21,205,3,3
	.word	104117
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL1_Bits',0,21,208,3,16,4,11
	.byte	'M0TOFF',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'M0TON',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'M0S0COEFF',0,1
	.word	662
	.byte	4,4,2,35,2,11
	.byte	'M0DEADBD',0,1
	.word	662
	.byte	2,2,2,35,2,11
	.byte	'M0ADCZB',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'M0SKIP',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	2,2,2,35,3,11
	.byte	'SYNCEN',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL1_Bits',0,21,219,3,3
	.word	104285
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL10_Bits',0,21,222,3,16,4,11
	.byte	'SHVH',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'SHVL',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	12,4,2,35,2,11
	.byte	'SHHVEN',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'SHLVEN',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL10_Bits',0,21,230,3,3
	.word	104519
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL11_Bits',0,21,233,3,16,4,11
	.byte	'DROOPVH',0,1
	.word	662
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	662
	.byte	3,0,2,35,0,11
	.byte	'DROOPVL',0,1
	.word	662
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	662
	.byte	3,0,2,35,1,11
	.byte	'SYNCMAXDEV',0,1
	.word	662
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	662
	.byte	3,0,2,35,2,11
	.byte	'SYNCHYST',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'SYNCMUXSEL',0,1
	.word	662
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL11_Bits',0,21,246,3,3
	.word	104700
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL2_Bits',0,21,249,3,16,4,11
	.byte	'LPBNDOFFSET',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'LPBNDWIDTH',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'LPLPFCOEFF',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'SDFREQLP',0,2
	.word	679
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	2,2,2,35,3,11
	.byte	'EVRCMOD',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL2_Bits',0,21,131,4,3
	.word	104998
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL3_Bits',0,21,134,4,16,4,11
	.byte	'M1TOFF',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'M1TON',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'M1S0COEFF',0,1
	.word	662
	.byte	4,4,2,35,2,11
	.byte	'M1DEADBD',0,1
	.word	662
	.byte	2,2,2,35,2,11
	.byte	'M1ADCZB',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'M1SKIP',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL3_Bits',0,21,143,4,3
	.word	105230
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL4_Bits',0,21,146,4,16,4,11
	.byte	'VOKCFG',0,1
	.word	662
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	679
	.byte	10,0,2,35,0,11
	.byte	'SDFREQST',0,2
	.word	679
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL4_Bits',0,21,152,4,3
	.word	105431
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL5_Bits',0,21,155,4,16,4,11
	.byte	'M2TOFF',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'M2TON',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'M2S0COEFF',0,1
	.word	662
	.byte	4,4,2,35,2,11
	.byte	'M2DEADBD',0,1
	.word	662
	.byte	2,2,2,35,2,11
	.byte	'M2ADCZB',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'M2SKIP',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL5_Bits',0,21,164,4,3
	.word	105579
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL6_Bits',0,21,167,4,16,4,11
	.byte	'SVINTH',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'SVOTH',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'SINCLO',0,1
	.word	662
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'SINCHI',0,1
	.word	662
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	679
	.byte	8,1,2,35,2,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL6_Bits',0,21,176,4,3
	.word	105780
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL7_Bits',0,21,179,4,16,4,11
	.byte	'DRVNI',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'DRVPCBF',0,1
	.word	662
	.byte	2,4,2,35,0,11
	.byte	'DRVP',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'DRVSLOMODE',0,1
	.word	662
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	662
	.byte	6,0,2,35,1,11
	.byte	'DRVSPR',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'SYNCDIVFAC',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	662
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL7_Bits',0,21,190,4,3
	.word	105977
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL8_Bits',0,21,193,4,16,4,11
	.byte	'FBADCOFFS',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'FBADCSMP',0,1
	.word	662
	.byte	6,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'FBADCBLNK',0,1
	.word	662
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	662
	.byte	2,4,2,35,2,11
	.byte	'FBADCLPF',0,1
	.word	662
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'FBADCERR',0,1
	.word	662
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	662
	.byte	2,4,2,35,3,11
	.byte	'FBADCLSB',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	662
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL8_Bits',0,21,207,4,3
	.word	106217
	.byte	10
	.byte	'_Ifx_PMS_EVRSDCTRL9_Bits',0,21,210,4,16,4,11
	.byte	'FFADCOFFS',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'FFADCLPF',0,1
	.word	662
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	487
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDCTRL9_Bits',0,21,216,4,3
	.word	106534
	.byte	10
	.byte	'_Ifx_PMS_EVRSDSTAT0_Bits',0,21,219,4,16,4,11
	.byte	'ADCFBCV',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'DPWMOUT',0,2
	.word	679
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSDSTAT0_Bits',0,21,225,4,3
	.word	106678
	.byte	10
	.byte	'_Ifx_PMS_EVRSTAT_Bits',0,21,228,4,16,4,11
	.byte	'EVRC',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'OVC',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'UVC',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'SYNCLCK',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'EVR33VOK',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	662
	.byte	3,3,2,35,1,11
	.byte	'RSTC',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'RST33',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'RSTSWD',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'EVRCSHLV',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'EVRCSHHV',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'EVR33SHLV',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'EVR33SHHV',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'SWDLVL',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'SDVOK',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'EVRCMOD',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'OVPRE',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'OVSB',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'OVDDM',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'UVPRE',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'UVSB',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'UVDDM',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRSTAT_Bits',0,21,130,5,3
	.word	106826
	.byte	10
	.byte	'_Ifx_PMS_EVRTRIM_Bits',0,21,133,5,16,4,11
	.byte	'EVR33VOUTSEL',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'EVR33VOUTTRIM',0,1
	.word	662
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'SDVOUTTRIM',0,1
	.word	662
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRTRIM_Bits',0,21,142,5,3
	.word	107386
	.byte	10
	.byte	'_Ifx_PMS_EVRTRIMSTAT_Bits',0,21,145,5,16,4,11
	.byte	'EVR33VOUTSEL',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'EVR33VOUTTRIM',0,1
	.word	662
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'SDVOUTTRIM',0,1
	.word	662
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_PMS_EVRTRIMSTAT_Bits',0,21,153,5,3
	.word	107591
	.byte	10
	.byte	'_Ifx_PMS_HSMOVMON_Bits',0,21,156,5,16,4,11
	.byte	'EVRCOVVAL',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'EVRCOFF',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'EVR33OFF',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'SWDOFF',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	662
	.byte	4,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_HSMOVMON_Bits',0,21,166,5,3
	.word	107796
	.byte	10
	.byte	'_Ifx_PMS_HSMUVMON_Bits',0,21,169,5,16,4,11
	.byte	'EVRCUVVAL',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'EVRCOFF',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'EVR33OFF',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'SWDOFF',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'HSMFIL',0,1
	.word	662
	.byte	4,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_HSMUVMON_Bits',0,21,179,5,3
	.word	108016
	.byte	10
	.byte	'_Ifx_PMS_ID_Bits',0,21,182,5,16,4,11
	.byte	'MODREV',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_PMS_ID_Bits',0,21,187,5,3
	.word	108231
	.byte	10
	.byte	'_Ifx_PMS_MONBISTCTRL_Bits',0,21,190,5,16,4,11
	.byte	'TSTEN',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'TSTCLR',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	487
	.byte	28,2,2,35,0,11
	.byte	'BITPROT',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_MONBISTCTRL_Bits',0,21,197,5,3
	.word	108338
	.byte	10
	.byte	'_Ifx_PMS_MONBISTSTAT_Bits',0,21,200,5,16,4,11
	.byte	'TSTOK',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'TSTRUN',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'TSTDONE',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'SMUERR',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'PMSERR',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	487
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_PMS_MONBISTSTAT_Bits',0,21,209,5,3
	.word	108504
	.byte	10
	.byte	'_Ifx_PMS_MONCTRL_Bits',0,21,212,5,16,4,11
	.byte	'EVRCOVMOD',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'PREOVMOD',0,1
	.word	662
	.byte	2,4,2,35,0,11
	.byte	'EVRCUVMOD',0,1
	.word	662
	.byte	2,2,2,35,0,11
	.byte	'PREUVMOD',0,1
	.word	662
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	662
	.byte	2,6,2,35,1,11
	.byte	'VDDMOVMOD',0,1
	.word	662
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	662
	.byte	2,2,2,35,1,11
	.byte	'VDDMUVMOD',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	662
	.byte	2,6,2,35,2,11
	.byte	'SBOVMOD',0,1
	.word	662
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	662
	.byte	2,2,2,35,2,11
	.byte	'SBUVMOD',0,1
	.word	662
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_MONCTRL_Bits',0,21,229,5,3
	.word	108705
	.byte	10
	.byte	'_Ifx_PMS_MONFILT_Bits',0,21,232,5,16,4,11
	.byte	'EVRCFIL',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'PREFIL',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'EVR33FIL',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'VDDMFIL',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'SWDFIL',0,1
	.word	662
	.byte	4,4,2,35,2,11
	.byte	'SBFIL',0,1
	.word	662
	.byte	4,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	5,3,2,35,3,11
	.byte	'CLRFIL',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_MONFILT_Bits',0,21,244,5,3
	.word	109072
	.byte	10
	.byte	'_Ifx_PMS_MONSTAT1_Bits',0,21,247,5,16,4,11
	.byte	'ADCCV',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'ACTVCNT',0,1
	.word	662
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_PMS_MONSTAT1_Bits',0,21,254,5,3
	.word	109322
	.byte	10
	.byte	'_Ifx_PMS_MONSTAT2_Bits',0,21,129,6,16,4,11
	.byte	'ADCPRE',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'ADCSB',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'ADCVDDM',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_PMS_MONSTAT2_Bits',0,21,135,6,3
	.word	109479
	.byte	10
	.byte	'_Ifx_PMS_OTSC0_Bits',0,21,138,6,16,4,11
	.byte	'B0LAM',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'B0HAM',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'B1LAM',0,1
	.word	662
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	662
	.byte	4,0,2,35,2,11
	.byte	'B1HAM',0,1
	.word	662
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	662
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_PMS_OTSC0_Bits',0,21,148,6,3
	.word	109617
	.byte	10
	.byte	'_Ifx_PMS_OTSC1_Bits',0,21,151,6,16,4,11
	.byte	'B0EC',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'B1EC',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'DMONAD',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'SMCDBG',0,1
	.word	662
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_PMS_OTSC1_Bits',0,21,159,6,3
	.word	109831
	.byte	10
	.byte	'_Ifx_PMS_OTSS_Bits',0,21,162,6,16,4,11
	.byte	'OTGB0',0,1
	.word	662
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	662
	.byte	4,0,2,35,0,11
	.byte	'OTGB1',0,1
	.word	662
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	679
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_PMS_OTSS_Bits',0,21,169,6,3
	.word	109999
	.byte	10
	.byte	'_Ifx_PMS_OVMON_Bits',0,21,172,6,16,4,11
	.byte	'EVRCOVVAL',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_OVMON_Bits',0,21,180,6,3
	.word	110154
	.byte	10
	.byte	'_Ifx_PMS_OVMON2_Bits',0,21,183,6,16,4,11
	.byte	'PREOVVAL',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'VDDMOVVAL',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'SBOVVAL',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_OVMON2_Bits',0,21,191,6,3
	.word	110334
	.byte	10
	.byte	'_Ifx_PMS_PMSIEN_Bits',0,21,194,6,16,4,11
	.byte	'OVSWD',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'UVSWD',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'OV33',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'UV33',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'OVC',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'UVC',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'OVPRE',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'UVPRE',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'OVDDM',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'UVDDM',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'OVSB',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'UVSB',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'EVRCMOD',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'SDVOK',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'SYNCLCK',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'SWDLVL',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	662
	.byte	1,3,2,35,2,11
	.byte	'WUTWKP',0,1
	.word	662
	.byte	1,2,2,35,2,11
	.byte	'ESR0WKP',0,1
	.word	662
	.byte	1,1,2,35,2,11
	.byte	'ESR1WKP',0,1
	.word	662
	.byte	1,0,2,35,2,11
	.byte	'PINAWKP',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'PINBWKP',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'SCRINT',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'SCRRST',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'SCRECC',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'SCRWDT',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	662
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_PMS_PMSIEN_Bits',0,21,224,6,3
	.word	110513
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR0_Bits',0,21,227,6,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	2,6,2,35,0,11
	.byte	'VEXTSTBYEN',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'VDDSTBYEN',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	662
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	662
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	662
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	662
	.byte	2,0,2,35,1,11
	.byte	'STBYRAMSEL',0,1
	.word	662
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'BLNKFIL',0,1
	.word	662
	.byte	4,0,2,35,2,11
	.byte	'ESR0WKEN',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'ESR1WKEN',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'PINAWKEN',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'PINBWKEN',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'PWRWKEN',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'SCRWKEN',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'PORSTWKEN',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'WUTWKEN',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_PMSWCR0_Bits',0,21,251,6,3
	.word	111074
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR2_Bits',0,21,254,6,16,4,11
	.byte	'SCRINT',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	662
	.byte	5,0,2,35,3,0,31
	.byte	'Ifx_PMS_PMSWCR2_Bits',0,21,139,7,3
	.word	111584
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR3_Bits',0,21,142,7,16,4,11
	.byte	'WUTREL',0,4
	.word	487
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	3,5,2,35,3,11
	.byte	'WUTEN',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'BUSY',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'WUTDIV',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_PMSWCR3_Bits',0,21,151,7,3
	.word	111853
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR4_Bits',0,21,154,7,16,4,11
	.byte	'BPSCRSTREQ',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	662
	.byte	2,4,2,35,0,11
	.byte	'BPPORSTREQ',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'PORSTREQ',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'SCRCLKSEL',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	679
	.byte	9,0,2,35,0,11
	.byte	'SCRCFG',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'BPSCREN',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'SCREN',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	662
	.byte	6,0,2,35,3,0,31
	.byte	'Ifx_PMS_PMSWCR4_Bits',0,21,167,7,3
	.word	112046
	.byte	10
	.byte	'_Ifx_PMS_PMSWCR5_Bits',0,21,170,7,16,4,11
	.byte	'BPTRISTREQ',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'TRISTREQ',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'ESR0TRIST',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'PORSTDF',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'DCDCSYNCO',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	487
	.byte	25,0,2,35,0,0,31
	.byte	'Ifx_PMS_PMSWCR5_Bits',0,21,180,7,3
	.word	112331
	.byte	10
	.byte	'_Ifx_PMS_PMSWSTAT_Bits',0,21,183,7,16,4,11
	.byte	'reserved_0',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'HWCFGEVR',0,1
	.word	662
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'HWCFG4',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'HWCFG5',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'TRIST',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'TESTMODE',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'ESR0TRIST',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	662
	.byte	2,5,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	4,0,2,35,1,11
	.byte	'SCR',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'SCRST',0,1
	.word	662
	.byte	1,6,2,35,2,11
	.byte	'SCRCLK',0,1
	.word	662
	.byte	1,5,2,35,2,11
	.byte	'PORSTREQ',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	662
	.byte	4,0,2,35,2,11
	.byte	'WUTEN',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'WUTRUN',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'WUTMODE',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'ESR0INT',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'ESR1INT',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'PINAINT',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'PINBINT',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_PMSWSTAT_Bits',0,21,209,7,3
	.word	112559
	.byte	10
	.byte	'_Ifx_PMS_PMSWSTAT2_Bits',0,21,212,7,16,4,11
	.byte	'ESR0WKP',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'PWRWKP',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'SCRWKP',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'PORSTWKP',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'WUTWKP',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'ESR0OVRUN',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'ESR1OVRUN',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'PINAOVRUN',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'PINBOVRUN',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'VDDSTBYEN',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'SCROVRUN',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'PORSTOVRUN',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'WUTOVRUN',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	662
	.byte	3,5,2,35,2,11
	.byte	'VEXTSTBYEN',0,1
	.word	662
	.byte	1,4,2,35,2,11
	.byte	'BLNKFIL',0,1
	.word	662
	.byte	4,0,2,35,2,11
	.byte	'ESR0WKEN',0,1
	.word	662
	.byte	1,7,2,35,3,11
	.byte	'ESR1WKEN',0,1
	.word	662
	.byte	1,6,2,35,3,11
	.byte	'PINAWKEN',0,1
	.word	662
	.byte	1,5,2,35,3,11
	.byte	'PINBWKEN',0,1
	.word	662
	.byte	1,4,2,35,3,11
	.byte	'PWRWKEN',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'SCRWKEN',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'PORSTWKEN',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'WUTWKEN',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_PMSWSTAT2_Bits',0,21,241,7,3
	.word	113088
	.byte	10
	.byte	'_Ifx_PMS_PMSWSTATCLR_Bits',0,21,244,7,16,4,11
	.byte	'ESR0WKPCLR',0,1
	.word	662
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	662
	.byte	1,6,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	662
	.byte	1,5,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	662
	.byte	1,4,2,35,0,11
	.byte	'PWRWKPCLR',0,1
	.word	662
	.byte	1,3,2,35,0,11
	.byte	'SCRWKPCLR',0,1
	.word	662
	.byte	1,2,2,35,0,11
	.byte	'PORSTWKPCLR',0,1
	.word	662
	.byte	1,1,2,35,0,11
	.byte	'WUTWKPCLR',0,1
	.word	662
	.byte	1,0,2,35,0,11
	.byte	'ESR0OVRUNCLR',0,1
	.word	662
	.byte	1,7,2,35,1,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	662
	.byte	1,6,2,35,1,11
	.byte	'PINAOVRUNCLR',0,1
	.word	662
	.byte	1,5,2,35,1,11
	.byte	'PINBOVRUNCLR',0,1
	.word	662
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	662
	.byte	1,3,2,35,1,11
	.byte	'SCROVRUNCLR',0,1
	.word	662
	.byte	1,2,2,35,1,11
	.byte	'PORSTOVRUNCLR',0,1
	.word	662
	.byte	1,1,2,35,1,11
	.byte	'WUTOVRUNCLR',0,1
	.word	662
	.byte	1,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	662
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	679
	.byte	11,4,2,35,2,11
	.byte	'ESR0INTCLR',0,1
	.word	662
	.byte	1,3,2,35,3,11
	.byte	'ESR1INTCLR',0,1
	.word	662
	.byte	1,2,2,35,3,11
	.byte	'PINAINTCLR',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'PINBINTCLR',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_PMSWSTATCLR_Bits',0,21,140,8,3
	.word	113686
	.byte	10
	.byte	'_Ifx_PMS_PMSWUTCNT_Bits',0,21,143,8,16,4,11
	.byte	'WUTCNT',0,4
	.word	487
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_PMS_PMSWUTCNT_Bits',0,21,147,8,3
	.word	114248
	.byte	10
	.byte	'_Ifx_PMS_UVMON_Bits',0,21,150,8,16,4,11
	.byte	'EVRCUVVAL',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	662
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_UVMON_Bits',0,21,158,8,3
	.word	114352
	.byte	10
	.byte	'_Ifx_PMS_UVMON2_Bits',0,21,161,8,16,4,11
	.byte	'PREUVVAL',0,1
	.word	662
	.byte	8,0,2,35,0,11
	.byte	'VDDMUVVAL',0,1
	.word	662
	.byte	8,0,2,35,1,11
	.byte	'SBUVVAL',0,1
	.word	662
	.byte	8,0,2,35,2,11
	.byte	'VDDMLVLSEL',0,1
	.word	662
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	662
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	662
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_PMS_UVMON2_Bits',0,21,169,8,3
	.word	114532
	.byte	12,21,177,8,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97601
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_ACCEN0',0,21,182,8,3
	.word	114710
	.byte	12,21,185,8,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98158
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_ACCEN1',0,21,190,8,3
	.word	114774
	.byte	12,21,193,8,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98235
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_AGFSP_STDBY0',0,21,198,8,3
	.word	114838
	.byte	12,21,201,8,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98665
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_AGFSP_STDBY1',0,21,206,8,3
	.word	114908
	.byte	12,21,209,8,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99068
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_AG_STDBY0',0,21,214,8,3
	.word	114978
	.byte	12,21,217,8,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99492
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_AG_STDBY1',0,21,222,8,3
	.word	115045
	.byte	12,21,225,8,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99893
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_CMD_STDBY',0,21,230,8,3
	.word	115112
	.byte	12,21,233,8,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100089
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_DTSLIM',0,21,238,8,3
	.word	115179
	.byte	12,21,241,8,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100272
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_DTSSTAT',0,21,246,8,3
	.word	115243
	.byte	12,21,249,8,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100372
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVR33CON',0,21,254,8,3
	.word	115308
	.byte	12,21,129,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100658
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRADCSTAT',0,21,134,9,3
	.word	115374
	.byte	12,21,137,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100896
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVROSCCTRL',0,21,142,9,3
	.word	115442
	.byte	12,21,145,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101114
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRRSTCON',0,21,150,9,3
	.word	115510
	.byte	12,21,153,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101405
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRRSTSTAT',0,21,158,9,3
	.word	115577
	.byte	12,21,161,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101650
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF0',0,21,166,9,3
	.word	115645
	.byte	12,21,169,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102063
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF1',0,21,174,9,3
	.word	115714
	.byte	12,21,177,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102272
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF2',0,21,182,9,3
	.word	115783
	.byte	12,21,185,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102666
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF3',0,21,190,9,3
	.word	115852
	.byte	12,21,193,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102887
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF4',0,21,198,9,3
	.word	115921
	.byte	12,21,201,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103281
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF5',0,21,206,9,3
	.word	115990
	.byte	12,21,209,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103502
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF6',0,21,214,9,3
	.word	116059
	.byte	12,21,217,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103664
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF7',0,21,222,9,3
	.word	116128
	.byte	12,21,225,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103807
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF8',0,21,230,9,3
	.word	116197
	.byte	12,21,233,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103972
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCOEFF9',0,21,238,9,3
	.word	116266
	.byte	12,21,241,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104117
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL0',0,21,246,9,3
	.word	116335
	.byte	12,21,249,9,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104285
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL1',0,21,254,9,3
	.word	116403
	.byte	12,21,129,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104519
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL10',0,21,134,10,3
	.word	116471
	.byte	12,21,137,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104700
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL11',0,21,142,10,3
	.word	116540
	.byte	12,21,145,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104998
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL2',0,21,150,10,3
	.word	116609
	.byte	12,21,153,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105230
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL3',0,21,158,10,3
	.word	116677
	.byte	12,21,161,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105431
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL4',0,21,166,10,3
	.word	116745
	.byte	12,21,169,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105579
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL5',0,21,174,10,3
	.word	116813
	.byte	12,21,177,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105780
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL6',0,21,182,10,3
	.word	116881
	.byte	12,21,185,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105977
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL7',0,21,190,10,3
	.word	116949
	.byte	12,21,193,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106217
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL8',0,21,198,10,3
	.word	117017
	.byte	12,21,201,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106534
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDCTRL9',0,21,206,10,3
	.word	117085
	.byte	12,21,209,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106678
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSDSTAT0',0,21,214,10,3
	.word	117153
	.byte	12,21,217,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106826
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRSTAT',0,21,222,10,3
	.word	117221
	.byte	12,21,225,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107386
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRTRIM',0,21,230,10,3
	.word	117286
	.byte	12,21,233,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107591
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_EVRTRIMSTAT',0,21,238,10,3
	.word	117351
	.byte	12,21,241,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107796
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_HSMOVMON',0,21,246,10,3
	.word	117420
	.byte	12,21,249,10,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108016
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_HSMUVMON',0,21,254,10,3
	.word	117486
	.byte	12,21,129,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108231
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_ID',0,21,134,11,3
	.word	117552
	.byte	12,21,137,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108338
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_MONBISTCTRL',0,21,142,11,3
	.word	117612
	.byte	12,21,145,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108504
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_MONBISTSTAT',0,21,150,11,3
	.word	117681
	.byte	12,21,153,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108705
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_MONCTRL',0,21,158,11,3
	.word	117750
	.byte	12,21,161,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109072
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_MONFILT',0,21,166,11,3
	.word	117815
	.byte	12,21,169,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109322
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_MONSTAT1',0,21,174,11,3
	.word	117880
	.byte	12,21,177,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109479
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_MONSTAT2',0,21,182,11,3
	.word	117946
	.byte	12,21,185,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109617
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_OTSC0',0,21,190,11,3
	.word	118012
	.byte	12,21,193,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109831
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_OTSC1',0,21,198,11,3
	.word	118075
	.byte	12,21,201,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109999
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_OTSS',0,21,206,11,3
	.word	118138
	.byte	12,21,209,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110154
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_OVMON',0,21,214,11,3
	.word	118200
	.byte	12,21,217,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110334
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_OVMON2',0,21,222,11,3
	.word	118263
	.byte	12,21,225,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110513
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_PMSIEN',0,21,230,11,3
	.word	118327
	.byte	12,21,233,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111074
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_PMSWCR0',0,21,238,11,3
	.word	118391
	.byte	12,21,241,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111584
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_PMSWCR2',0,21,246,11,3
	.word	118456
	.byte	12,21,249,11,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111853
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_PMSWCR3',0,21,254,11,3
	.word	118521
	.byte	12,21,129,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112046
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_PMSWCR4',0,21,134,12,3
	.word	118586
	.byte	12,21,137,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112331
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_PMSWCR5',0,21,142,12,3
	.word	118651
	.byte	12,21,145,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112559
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_PMSWSTAT',0,21,150,12,3
	.word	118716
	.byte	12,21,153,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113088
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_PMSWSTAT2',0,21,158,12,3
	.word	118782
	.byte	12,21,161,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113686
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_PMSWSTATCLR',0,21,166,12,3
	.word	118849
	.byte	12,21,169,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114248
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_PMSWUTCNT',0,21,174,12,3
	.word	118918
	.byte	12,21,177,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114352
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_UVMON',0,21,182,12,3
	.word	118985
	.byte	12,21,185,12,9,4,13
	.byte	'U',0
	.word	487
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	503
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114532
	.byte	4,2,35,0,0,31
	.byte	'Ifx_PMS_UVMON2',0,21,190,12,3
	.word	119048
	.byte	10
	.byte	'_Ifx_PMS',0,21,202,12,25,128,4,13
	.byte	'reserved_0',0
	.word	4700
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	117552
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	46641
	.byte	32,2,35,12,13
	.byte	'EVRSTAT',0
	.word	117221
	.byte	4,2,35,44,13
	.byte	'reserved_30',0
	.word	2880
	.byte	4,2,35,48,13
	.byte	'EVRADCSTAT',0
	.word	115374
	.byte	4,2,35,52,13
	.byte	'reserved_38',0
	.word	2880
	.byte	4,2,35,56,13
	.byte	'EVRRSTCON',0
	.word	115510
	.byte	4,2,35,60,13
	.byte	'reserved_40',0
	.word	2880
	.byte	4,2,35,64,13
	.byte	'EVRRSTSTAT',0
	.word	115577
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	2880
	.byte	4,2,35,72,13
	.byte	'EVRTRIM',0
	.word	117286
	.byte	4,2,35,76,13
	.byte	'EVRTRIMSTAT',0
	.word	117351
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5040
	.byte	12,2,35,84,13
	.byte	'MONSTAT1',0
	.word	117880
	.byte	4,2,35,96,13
	.byte	'MONSTAT2',0
	.word	117946
	.byte	4,2,35,100,13
	.byte	'MONCTRL',0
	.word	117750
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	2880
	.byte	4,2,35,108,13
	.byte	'MONFILT',0
	.word	117815
	.byte	4,2,35,112,13
	.byte	'PMSIEN',0
	.word	118327
	.byte	4,2,35,116,13
	.byte	'UVMON',0
	.word	118985
	.byte	4,2,35,120,13
	.byte	'OVMON',0
	.word	118200
	.byte	4,2,35,124,13
	.byte	'UVMON2',0
	.word	119048
	.byte	4,3,35,128,1,13
	.byte	'OVMON2',0
	.word	118263
	.byte	4,3,35,132,1,13
	.byte	'HSMUVMON',0
	.word	117486
	.byte	4,3,35,136,1,13
	.byte	'HSMOVMON',0
	.word	117420
	.byte	4,3,35,140,1,13
	.byte	'EVR33CON',0
	.word	115308
	.byte	4,3,35,144,1,13
	.byte	'reserved_94',0
	.word	5040
	.byte	12,3,35,148,1,13
	.byte	'EVROSCCTRL',0
	.word	115442
	.byte	4,3,35,160,1,13
	.byte	'reserved_A4',0
	.word	38318
	.byte	16,3,35,164,1,13
	.byte	'PMSWCR0',0
	.word	118391
	.byte	4,3,35,180,1,13
	.byte	'PMSWCR2',0
	.word	118456
	.byte	4,3,35,184,1,13
	.byte	'reserved_BC',0
	.word	2880
	.byte	4,3,35,188,1,13
	.byte	'PMSWCR3',0
	.word	118521
	.byte	4,3,35,192,1,13
	.byte	'PMSWCR4',0
	.word	118586
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR5',0
	.word	118651
	.byte	4,3,35,200,1,13
	.byte	'reserved_CC',0
	.word	4700
	.byte	8,3,35,204,1,13
	.byte	'PMSWSTAT',0
	.word	118716
	.byte	4,3,35,212,1,13
	.byte	'PMSWSTAT2',0
	.word	118782
	.byte	4,3,35,216,1,13
	.byte	'PMSWUTCNT',0
	.word	118918
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	4700
	.byte	8,3,35,224,1,13
	.byte	'PMSWSTATCLR',0
	.word	118849
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	38318
	.byte	16,3,35,236,1,13
	.byte	'EVRSDSTAT0',0
	.word	117153
	.byte	4,3,35,252,1,13
	.byte	'reserved_100',0
	.word	4700
	.byte	8,3,35,128,2,13
	.byte	'EVRSDCTRL0',0
	.word	116335
	.byte	4,3,35,136,2,13
	.byte	'EVRSDCTRL1',0
	.word	116403
	.byte	4,3,35,140,2,13
	.byte	'EVRSDCTRL2',0
	.word	116609
	.byte	4,3,35,144,2,13
	.byte	'EVRSDCTRL3',0
	.word	116677
	.byte	4,3,35,148,2,13
	.byte	'EVRSDCTRL4',0
	.word	116745
	.byte	4,3,35,152,2,13
	.byte	'EVRSDCTRL5',0
	.word	116813
	.byte	4,3,35,156,2,13
	.byte	'EVRSDCTRL6',0
	.word	116881
	.byte	4,3,35,160,2,13
	.byte	'EVRSDCTRL7',0
	.word	116949
	.byte	4,3,35,164,2,13
	.byte	'EVRSDCTRL8',0
	.word	117017
	.byte	4,3,35,168,2,13
	.byte	'EVRSDCTRL9',0
	.word	117085
	.byte	4,3,35,172,2,13
	.byte	'EVRSDCTRL10',0
	.word	116471
	.byte	4,3,35,176,2,13
	.byte	'EVRSDCTRL11',0
	.word	116540
	.byte	4,3,35,180,2,13
	.byte	'reserved_138',0
	.word	38318
	.byte	16,3,35,184,2,13
	.byte	'EVRSDCOEFF0',0
	.word	115645
	.byte	4,3,35,200,2,13
	.byte	'EVRSDCOEFF1',0
	.word	115714
	.byte	4,3,35,204,2,13
	.byte	'EVRSDCOEFF2',0
	.word	115783
	.byte	4,3,35,208,2,13
	.byte	'EVRSDCOEFF3',0
	.word	115852
	.byte	4,3,35,212,2,13
	.byte	'EVRSDCOEFF4',0
	.word	115921
	.byte	4,3,35,216,2,13
	.byte	'EVRSDCOEFF5',0
	.word	115990
	.byte	4,3,35,220,2,13
	.byte	'EVRSDCOEFF6',0
	.word	116059
	.byte	4,3,35,224,2,13
	.byte	'EVRSDCOEFF7',0
	.word	116128
	.byte	4,3,35,228,2,13
	.byte	'EVRSDCOEFF8',0
	.word	116197
	.byte	4,3,35,232,2,13
	.byte	'EVRSDCOEFF9',0
	.word	116266
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	4071
	.byte	24,3,35,240,2,13
	.byte	'AG_STDBY0',0
	.word	114978
	.byte	4,3,35,136,3,13
	.byte	'AG_STDBY1',0
	.word	115045
	.byte	4,3,35,140,3,13
	.byte	'MONBISTSTAT',0
	.word	117681
	.byte	4,3,35,144,3,13
	.byte	'reserved_194',0
	.word	2880
	.byte	4,3,35,148,3,13
	.byte	'MONBISTCTRL',0
	.word	117612
	.byte	4,3,35,152,3,13
	.byte	'CMD_STDBY',0
	.word	115112
	.byte	4,3,35,156,3,13
	.byte	'reserved_1A0',0
	.word	2880
	.byte	4,3,35,160,3,13
	.byte	'AGFSP_STDBY0',0
	.word	114838
	.byte	4,3,35,164,3,13
	.byte	'AGFSP_STDBY1',0
	.word	114908
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	75910
	.byte	20,3,35,172,3,13
	.byte	'DTSSTAT',0
	.word	115243
	.byte	4,3,35,192,3,13
	.byte	'reserved_1C4',0
	.word	2880
	.byte	4,3,35,196,3,13
	.byte	'DTSLIM',0
	.word	115179
	.byte	4,3,35,200,3,13
	.byte	'reserved_1CC',0
	.word	75910
	.byte	20,3,35,204,3,13
	.byte	'OTSS',0
	.word	118138
	.byte	4,3,35,224,3,13
	.byte	'OTSC0',0
	.word	118012
	.byte	4,3,35,228,3,13
	.byte	'OTSC1',0
	.word	118075
	.byte	4,3,35,232,3,13
	.byte	'reserved_1EC',0
	.word	5040
	.byte	12,3,35,236,3,13
	.byte	'ACCEN1',0
	.word	114774
	.byte	4,3,35,248,3,13
	.byte	'ACCEN0',0
	.word	114710
	.byte	4,3,35,252,3,0,14
	.word	119112
	.byte	31
	.byte	'Ifx_PMS',0,21,165,13,3
	.word	120920
	.byte	17,11,94,9,1,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovswd',0,0,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvswd',0,1,18
	.byte	'IfxPmsEvr_EnableInterrupt_ov33',0,2,18
	.byte	'IfxPmsEvr_EnableInterrupt_uv33',0,3,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovc',0,4,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvc',0,5,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovpre',0,6,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvpre',0,7,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovddm',0,8,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvddm',0,9,18
	.byte	'IfxPmsEvr_EnableInterrupt_ovsb',0,10,18
	.byte	'IfxPmsEvr_EnableInterrupt_uvsb',0,11,18
	.byte	'IfxPmsEvr_EnableInterrupt_evrcmod',0,16,18
	.byte	'IfxPmsEvr_EnableInterrupt_sdvok',0,17,18
	.byte	'IfxPmsEvr_EnableInterrupt_synclck',0,18,18
	.byte	'IfxPmsEvr_EnableInterrupt_swdlvl',0,19,18
	.byte	'IfxPmsEvr_EnableInterrupt_wutwkp',0,21,18
	.byte	'IfxPmsEvr_EnableInterrupt_esr0wkp',0,22,18
	.byte	'IfxPmsEvr_EnableInterrupt_esr1wkp',0,23,18
	.byte	'IfxPmsEvr_EnableInterrupt_pinawkp',0,24,18
	.byte	'IfxPmsEvr_EnableInterrupt_pinbwkp',0,25,18
	.byte	'IfxPmsEvr_EnableInterrupt_scrint',0,26,18
	.byte	'IfxPmsEvr_EnableInterrupt_scrrst',0,27,18
	.byte	'IfxPmsEvr_EnableInterrupt_screcc',0,28,18
	.byte	'IfxPmsEvr_EnableInterrupt_scrwdt',0,29,0,31
	.byte	'IfxPmsEvr_EnableInterrupt',0,11,121,3
	.word	120942
	.byte	17,11,125,9,1,18
	.byte	'IfxPmsEvr_EvrcMode_pwmMode',0,0,18
	.byte	'IfxPmsEvr_EvrcMode_lowPowerMode',0,1,18
	.byte	'IfxPmsEvr_EvrcMode_startupMode',0,2,18
	.byte	'IfxPmsEvr_EvrcMode_disableMode',0,3,0,31
	.byte	'IfxPmsEvr_EvrcMode',0,11,134,1,3
	.word	121842
	.byte	17,11,138,1,9,1,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_1',0,0,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_2',0,1,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_4',0,2,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_8',0,3,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_16',0,4,18
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor_32',0,5,0,31
	.byte	'IfxPmsEvr_ExtSyncSwitchingFreqDivFactor',0,11,146,1,3
	.word	122005
	.byte	17,11,151,1,9,1,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_inactive',0,0,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_lowToHighVoltageTransition',0,1,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_highToLowVoltageTransition',0,2,18
	.byte	'IfxPmsEvr_OverVoltageMonitoring_eitherDirectionVoltageTransition',0,3,0,31
	.byte	'IfxPmsEvr_OverVoltageMonitoring',0,11,157,1,3
	.word	122327
	.byte	17,11,162,1,9,1,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_0',0,0,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_1',0,1,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_2',0,2,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_3',0,3,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_4',0,4,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_5',0,5,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_6',0,6,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_7',0,7,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_8',0,8,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_9',0,9,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_10',0,10,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_11',0,11,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_12',0,12,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_13',0,13,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_14',0,14,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_15',0,15,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_16',0,16,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_17',0,17,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_18',0,18,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_19',0,19,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_20',0,20,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_21',0,21,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_22',0,22,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_23',0,23,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_24',0,24,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_25',0,25,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_26',0,26,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_27',0,27,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_28',0,28,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_29',0,29,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_30',0,30,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_31',0,31,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_32',0,32,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_33',0,33,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_34',0,34,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_35',0,35,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_36',0,36,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_37',0,37,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_38',0,38,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_39',0,39,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_40',0,40,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_41',0,41,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_42',0,42,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_43',0,43,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_44',0,44,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_45',0,45,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_46',0,46,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_47',0,47,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_48',0,48,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_49',0,49,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_50',0,50,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_51',0,51,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_52',0,52,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_53',0,53,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_54',0,54,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_55',0,55,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_56',0,56,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_57',0,57,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_58',0,58,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_59',0,59,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_60',0,60,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_61',0,61,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_62',0,62,18
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue_63',0,63,0,31
	.byte	'IfxPmsEvr_PrimaryAdcTrimValue',0,11,228,1,3
	.word	122607
	.byte	17,11,196,2,9,1,18
	.byte	'IfxPmsEvr_SupplyMode_evrc',0,0,18
	.byte	'IfxPmsEvr_SupplyMode_evr33',0,1,18
	.byte	'IfxPmsEvr_SupplyMode_swd',0,2,18
	.byte	'IfxPmsEvr_SupplyMode_evrpr',0,3,18
	.byte	'IfxPmsEvr_SupplyMode_vddm',0,4,18
	.byte	'IfxPmsEvr_SupplyMode_sb',0,5,0,31
	.byte	'IfxPmsEvr_SupplyMode',0,11,204,2,3
	.word	124883
	.byte	17,11,209,2,9,1,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_inactive',0,0,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_lowToHighVoltageTransition',0,1,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_highToLowVoltageTransition',0,2,18
	.byte	'IfxPmsEvr_UnderVoltageMonitoring_eitherDirectionVoltageTransition',0,3,0,31
	.byte	'IfxPmsEvr_UnderVoltageMonitoring',0,11,215,2,3
	.word	125087
	.byte	31
	.byte	'IfxPmsEvr_StepDownRegulatorRegConfig',0,11,228,2,3
	.word	10128
	.byte	31
	.byte	'IfxPmsEvr_initSequencePhase',0,11,235,2,3
	.word	10322
	.byte	31
	.byte	'IfxPmsEvr_checkRegConfig',0,11,241,2,3
	.word	10191
	.byte	31
	.byte	'IfxPmsEvr_initSequence',0,11,247,2,3
	.word	10402
	.byte	21
	.word	10402
	.byte	33
	.byte	'IfxPmsEvr_cfgSequenceDefault',0,11,213,5,59
	.word	125521
	.byte	1,1,21
	.word	10191
	.byte	33
	.byte	'IfxPmsEvr_checkRegCfgDefault',0,11,215,5,59
	.word	125566
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L27:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,21,0,54,15,39,12,0,0,5,15,0,73,19,0,0,6,5,0,3,8,58,15,59,15,57,15,73,19,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,38,0,73,19
	.byte	0,0,22,46,1,3,8,54,15,39,12,63,12,60,12,0,0,23,5,0,73,19,0,0,24,46,1,3,8,73,19,54,15,39,12,63,12,60,12
	.byte	0,0,25,5,0,3,8,73,19,0,0,26,46,0,3,8,54,15,39,12,63,12,60,12,0,0,27,46,1,49,19,0,0,28,5,0,49,19,0,0,29
	.byte	29,1,49,19,0,0,30,11,0,49,19,0,0,31,22,0,3,8,58,15,59,15,57,15,73,19,0,0,32,21,0,54,15,0,0,33,52,0,3,8
	.byte	58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L28:
	.word	.L117-.L116
.L116:
	.half	3
	.word	.L119-.L118
.L118:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std',0,0
	.byte	'Ifx_Ssw_CompilersTasking.h',0,1,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,2,0,0
	.byte	'IfxCpu_Intrinsics.h',0,2,0,0
	.byte	'IfxScuWdt.h',0,3,0,0
	.byte	'IfxScu_regdef.h',0,4,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,4,0,0
	.byte	'IfxScuCcu.h',0,3,0,0
	.byte	'IfxCpu.h',0,2,0,0
	.byte	'IfxCpu_cfg.h',0,6,0,0
	.byte	'IfxPmsEvr.h',0,7,0,0
	.byte	'..\\0_Src\\0_AppSw\\Config\\Common\\Ifx_Cfg_Ssw.c',0,0,0,0
	.byte	'Platform_Types.h',0,2,0,0
	.byte	'Ifx_Types.h',0,2,0,0
	.byte	'Ifx_TypesReg.h',0,4,0,0
	.byte	'IfxCpu_regdef.h',0,4,0,0
	.byte	'IfxSrc_regdef.h',0,4,0,0
	.byte	'IfxStm_regdef.h',0,4,0,0
	.byte	'IfxScu_cfg.h',0,6,0,0
	.byte	'IfxSmu_regdef.h',0,4,0,0
	.byte	'IfxPms_regdef.h',0,4,0,0,0
.L119:
.L117:
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_Pms_Init')
	.sect	'.debug_info'
.L29:
	.word	647
	.half	3
	.word	.L30
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Config\\Common\\Ifx_Cfg_Ssw.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L32,.L31
	.byte	2
	.word	.L25
	.byte	3
	.byte	'Ifx_Ssw_Pms_Init',0,1,45,6,1,1,1
	.word	.L22,.L39,.L21
	.byte	4
	.word	.L22,.L39
	.byte	5
	.word	.L40,.L22,.L41
	.byte	6
	.word	.L42,.L43
	.byte	7
	.word	.L44,.L22,.L41
	.byte	8
	.byte	'pmsInitDone',0,2,159,7,49
	.word	.L45,.L46
	.byte	8
	.byte	'regVal',0,2,160,7,49
	.word	.L47,.L48
	.byte	8
	.byte	'phaseConfig',0,2,162,7,49
	.word	.L49,.L50
	.byte	8
	.byte	'regConfig',0,2,163,7,49
	.word	.L51,.L52
	.byte	5
	.word	.L53,.L22,.L54
	.byte	9
	.word	.L55,.L56
	.byte	8
	.byte	'password',0,3,246,4,12
	.word	.L61,.L62
	.byte	0,0,10
	.word	.L53,.L57,.L58
	.byte	10
	.word	.L53,.L59,.L60
	.byte	5
	.word	.L63,.L4,.L64
	.byte	6
	.word	.L65,.L66
	.byte	11
	.word	.L67,.L4,.L64
	.byte	0,5
	.word	.L68,.L69,.L70
	.byte	6
	.word	.L71,.L72
	.byte	11
	.word	.L73,.L69,.L70
	.byte	0,7
	.word	.L74,.L70,.L75
	.byte	8
	.byte	'timeoutCount',0,2,193,7,20
	.word	.L76,.L77
	.byte	5
	.word	.L78,.L79,.L75
	.byte	6
	.word	.L80,.L81
	.byte	7
	.word	.L82,.L79,.L75
	.byte	8
	.byte	'stmCount',0,2,207,9,12
	.word	.L47,.L83
	.byte	8
	.byte	'stmCountBegin',0,2,208,9,12
	.word	.L47,.L84
	.byte	0,0,0,0,0,5
	.word	.L85,.L13,.L86
	.byte	11
	.word	.L87,.L13,.L86
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_Pms_Init')
	.sect	'.debug_abbrev'
.L30:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	1,49,16,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,1,49,16,85,6,0,0,10,29,0,49,16,17
	.byte	1,18,1,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_Pms_Init')
	.sect	'.debug_line'
.L31:
	.word	.L121-.L120
.L120:
	.half	3
	.word	.L123-.L122
.L122:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers',0,0
	.byte	'..\\0_Src\\0_AppSw\\Config\\Common\\Ifx_Cfg_Ssw.c',0,0,0,0
	.byte	'IfxPmsEvr.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'Ifx_Ssw_CompilersTasking.h',0,3,0,0,0
.L123:
	.byte	4,3,5,43,7,0,5,2
	.word	.L22
	.byte	3,245,4,1,4,2,5,22,9
	.half	.L54-.L22
	.byte	3,175,2,1,4,3,5,43,9
	.half	.L57-.L54
	.byte	3,209,125,1,4,2,5,64,9
	.half	.L58-.L57
	.byte	3,169,2,1,4,3,5,43,9
	.half	.L59-.L58
	.byte	3,215,125,1,5,48,9
	.half	.L124-.L59
	.byte	1,4,2,5,22,3,175,2,1,5,5,9
	.half	.L60-.L124
	.byte	1,5,37,7,9
	.half	.L125-.L60
	.byte	3,3,1,5,73,9
	.half	.L103-.L125
	.byte	3,1,1,4,3,5,23,9
	.half	.L4-.L103
	.byte	3,149,125,1,5,57,9
	.half	.L104-.L4
	.byte	1,5,23,9
	.half	.L126-.L104
	.byte	1,5,37,9
	.half	.L127-.L126
	.byte	1,5,57,9
	.half	.L128-.L127
	.byte	1,5,26,1,5,32,9
	.half	.L5-.L128
	.byte	3,2,1,5,45,9
	.half	.L129-.L5
	.byte	1,4,2,5,42,7,9
	.half	.L64-.L129
	.byte	3,239,2,1,5,82,9
	.half	.L105-.L64
	.byte	3,1,1,5,58,9
	.half	.L7-.L105
	.byte	3,3,1,5,27,9
	.half	.L130-.L7
	.byte	3,1,1,5,37,1,5,27,9
	.half	.L131-.L130
	.byte	1,5,28,3,127,1,5,24,9
	.half	.L107-.L131
	.byte	3,1,1,5,36,3,1,1,5,27,9
	.half	.L132-.L107
	.byte	3,124,1,5,24,9
	.half	.L108-.L132
	.byte	3,4,1,5,60,3,5,1,5,18,9
	.half	.L6-.L108
	.byte	3,118,1,5,65,9
	.half	.L109-.L6
	.byte	1,5,53,9
	.half	.L133-.L109
	.byte	1,5,42,1,5,53,9
	.half	.L134-.L133
	.byte	1,5,82,9
	.half	.L135-.L134
	.byte	1,5,29,7,9
	.half	.L136-.L135
	.byte	3,13,1,5,33,9
	.half	.L137-.L136
	.byte	1,4,3,5,37,9
	.half	.L69-.L137
	.byte	3,237,125,1,5,57,9
	.half	.L138-.L69
	.byte	1,5,26,1,5,32,9
	.half	.L8-.L138
	.byte	3,2,1,5,45,9
	.half	.L139-.L8
	.byte	1,4,2,5,33,7,9
	.half	.L70-.L139
	.byte	3,149,2,1,5,21,9
	.half	.L9-.L70
	.byte	3,5,1,5,17,9
	.half	.L140-.L9
	.byte	1,5,33,7,9
	.half	.L141-.L140
	.byte	3,2,1,5,21,3,1,1,5,38,9
	.half	.L10-.L141
	.byte	3,2,1,5,47,9
	.half	.L142-.L10
	.byte	1,5,39,7,9
	.half	.L11-.L142
	.byte	3,2,1,5,37,9
	.half	.L79-.L11
	.byte	3,130,2,1,9
	.half	.L143-.L79
	.byte	3,1,1,5,59,9
	.half	.L144-.L143
	.byte	3,127,1,5,37,3,1,1,5,28,9
	.half	.L110-.L144
	.byte	3,127,1,5,30,9
	.half	.L12-.L110
	.byte	3,3,1,5,33,9
	.half	.L145-.L12
	.byte	1,5,60,9
	.half	.L146-.L145
	.byte	1,5,25,7,9
	.half	.L75-.L146
	.byte	3,216,125,1,5,14,9
	.half	.L3-.L75
	.byte	3,127,1,5,59,9
	.half	.L111-.L3
	.byte	1,5,37,9
	.half	.L147-.L111
	.byte	1,5,50,9
	.half	.L148-.L147
	.byte	1,5,73,9
	.half	.L149-.L148
	.byte	1,5,5,7,9
	.half	.L2-.L149
	.byte	3,41,1,4,1,9
	.half	.L41-.L2
	.byte	3,221,120,1,5,16,7,9
	.half	.L150-.L41
	.byte	3,2,1,4,4,5,5,9
	.half	.L13-.L150
	.byte	3,129,1,1,4,1,5,1,9
	.half	.L86-.L13
	.byte	3,132,127,1,7,9
	.half	.L33-.L86
	.byte	0,1,1
.L121:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_Pms_Init')
	.sect	'.debug_ranges'
.L32:
	.word	-1,.L22,0,.L33-.L22,0,0
.L56:
	.word	-1,.L22,0,.L54-.L22,.L57-.L22,.L58-.L22,.L59-.L22,.L60-.L22,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Ssw_Pms_InitCheck')
	.sect	'.debug_info'
.L34:
	.word	389
	.half	3
	.word	.L35
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Config\\Common\\Ifx_Cfg_Ssw.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L37,.L36
	.byte	2
	.word	.L25
	.byte	3
	.byte	'Ifx_Ssw_Pms_InitCheck',0,1,57,6,1,1,1
	.word	.L24,.L88,.L23
	.byte	4
	.word	.L24,.L88
	.byte	5
	.word	.L89,.L24,.L90
	.byte	6
	.word	.L91,.L92
	.byte	7
	.word	.L93,.L24,.L90
	.byte	8
	.byte	'allRight',0,2,225,5,13
	.word	.L45,.L94
	.byte	8
	.byte	'regCfgCount',0,2,226,5,13
	.word	.L76,.L95
	.byte	9
	.word	.L96,.L97
	.byte	8
	.byte	'regVal',0,2,232,5,57
	.word	.L47,.L100
	.byte	8
	.byte	'regConfig',0,2,233,5,57
	.word	.L51,.L101
	.byte	0,0,0,5
	.word	.L85,.L20,.L102
	.byte	10
	.word	.L87,.L20,.L102
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Ssw_Pms_InitCheck')
	.sect	'.debug_abbrev'
.L35:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	1,49,16,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,1,49,16,85,6,0,0,10,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Ssw_Pms_InitCheck')
	.sect	'.debug_line'
.L36:
	.word	.L152-.L151
.L151:
	.half	3
	.word	.L154-.L153
.L153:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers',0,0
	.byte	'..\\0_Src\\0_AppSw\\Config\\Common\\Ifx_Cfg_Ssw.c',0,0,0,0
	.byte	'IfxPmsEvr.h',0,1,0,0
	.byte	'Ifx_Ssw_CompilersTasking.h',0,2,0,0,0
.L154:
	.byte	4,2,5,22,7,0,5,2
	.word	.L24
	.byte	3,227,5,1,9
	.half	.L155-.L24
	.byte	3,125,1,5,5,9
	.half	.L112-.L155
	.byte	3,3,1,5,26,7,9
	.half	.L156-.L112
	.byte	3,2,1,5,56,1,5,72,9
	.half	.L113-.L156
	.byte	1,5,92,9
	.half	.L16-.L113
	.byte	3,3,1,5,81,1,5,85,9
	.half	.L98-.L16
	.byte	3,125,1,5,92,9
	.half	.L99-.L98
	.byte	3,3,1,5,54,9
	.half	.L114-.L99
	.byte	3,1,1,5,32,9
	.half	.L157-.L114
	.byte	3,1,1,5,24,9
	.half	.L158-.L157
	.byte	3,127,1,5,20,9
	.half	.L115-.L158
	.byte	3,1,1,5,36,3,2,1,5,13,9
	.half	.L159-.L115
	.byte	1,5,26,9
	.half	.L160-.L159
	.byte	3,2,1,5,72,9
	.half	.L15-.L160
	.byte	3,119,1,5,9,7,9
	.half	.L161-.L15
	.byte	3,14,1,5,30,7,9
	.half	.L162-.L161
	.byte	3,2,1,5,13,9
	.half	.L163-.L162
	.byte	1,5,26,9
	.half	.L164-.L163
	.byte	3,2,1,4,1,5,5,9
	.half	.L14-.L164
	.byte	3,196,122,1,5,16,7,9
	.half	.L90-.L14
	.byte	3,2,1,4,3,5,5,9
	.half	.L20-.L90
	.byte	3,244,0,1,4,1,5,1,9
	.half	.L102-.L20
	.byte	3,144,127,1,7,9
	.half	.L38-.L102
	.byte	0,1,1
.L152:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Ssw_Pms_InitCheck')
	.sect	'.debug_ranges'
.L37:
	.word	-1,.L24,0,.L38-.L24,0,0
.L97:
	.word	-1,.L24,.L16-.L24,.L98-.L24,.L99-.L24,.L15-.L24,0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_Pms_Init')
	.sect	'.debug_loc'
.L21:
	.word	-1,.L22,0,.L39-.L22
	.half	2
	.byte	138,0
	.word	0,0
.L66:
	.word	0,0
.L62:
	.word	-1,.L22,.L60-.L22,.L39-.L22
	.half	1
	.byte	83
	.word	0,0
.L72:
	.word	0,0
.L50:
	.word	-1,.L22,.L103-.L22,.L2-.L22
	.half	1
	.byte	111
	.word	.L4-.L22,.L104-.L22
	.half	1
	.byte	95
	.word	.L111-.L22,.L2-.L22
	.half	1
	.byte	95
	.word	0,0
.L46:
	.word	-1,.L22,.L59-.L22,.L39-.L22
	.half	1
	.byte	82
	.word	0,0
.L52:
	.word	-1,.L22,.L105-.L22,.L106-.L22
	.half	1
	.byte	102
	.word	.L7-.L22,.L107-.L22
	.half	5
	.byte	144,32,157,32,0
	.word	.L109-.L22,.L9-.L22
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L48:
	.word	-1,.L22,.L108-.L22,.L6-.L22
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L43:
	.word	0,0
.L83:
	.word	-1,.L22,.L12-.L22,.L3-.L22
	.half	1
	.byte	95
	.word	0,0
.L84:
	.word	-1,.L22,.L110-.L22,.L3-.L22
	.half	1
	.byte	81
	.word	0,0
.L77:
	.word	-1,.L22,.L9-.L22,.L79-.L22
	.half	1
	.byte	95
	.word	0,0
.L81:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Ssw_Pms_InitCheck')
	.sect	'.debug_loc'
.L23:
	.word	-1,.L24,0,.L88-.L24
	.half	2
	.byte	138,0
	.word	0,0
.L94:
	.word	-1,.L24,.L112-.L24,.L88-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L92:
	.word	0,0
.L95:
	.word	-1,.L24,.L113-.L24,.L14-.L24
	.half	1
	.byte	81
	.word	0,0
.L101:
	.word	-1,.L24,.L114-.L24,.L15-.L24
	.half	1
	.byte	111
	.word	0,0
.L100:
	.word	-1,.L24,.L115-.L24,.L15-.L24
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L165:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_Pms_Init')
	.sect	'.debug_frame'
	.word	16
	.word	.L165,.L22,.L39-.L22
	.byte	8,19,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Ssw_Pms_InitCheck')
	.sect	'.debug_frame'
	.word	24
	.word	.L165,.L24,.L88-.L24
	.byte	8,19,8,20,8,21,8,22,8,23,0,0

; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    67  #endif /* End of Ifx_Ssw_Pms_InitCheck() */
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    68  #endif /* End of Ifx_Ssw_Pms_Init() */
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    69  
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    70  #if (IFX_CFG_SSW_ENABLE_LBIST == 1)
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    71  void Ifx_Ssw_Lbist(void)
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    72  {
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    73      if (!IfxScuLbist_isDone())
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    74      {
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    75          if(Ifx_Ssw_isColdPoweronReset())
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    76          {
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    77              IfxScuLbist_triggerInline(&IfxScuLbist_defaultConfig);
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    78          }
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    79      }
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    80      if (!IfxScuLbist_evaluateResult(IfxScuLbist_defaultConfig.signature))
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    81      {
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    82           __debug();
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    83           /* Application may have call to error handling here */
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    84           
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    85           /* Infinite loop to ensure that the error is notified as 'debugger is not connected at this point of time' */
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    86           while(1);
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    87      }
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    88  
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    89      Ifx_Ssw_jumpBackToLink();
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    90  }
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    91  #endif
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    92  
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    93  #if defined(__TASKING__)
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    94  #pragma endoptimize
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    95  #elif defined(__HIGHTEC__)
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    96  #pragma GCC reset_options
; ..\0_Src\0_AppSw\Config\Common\Ifx_Cfg_Ssw.c	    97  #endif

	; Module end
