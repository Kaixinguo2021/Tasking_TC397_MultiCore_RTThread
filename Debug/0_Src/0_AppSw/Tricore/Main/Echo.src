	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Tricore\\Main\\.Echo.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Rtl8211f -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Tricore\\Main\\Echo.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Tricore\\Main\\Echo.src ..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c'

	
$TC162
	.sdecl	'.zrodata.Echo..6.cnt',data,rom
	.sect	'.zrodata.Echo..6.cnt'
	.align	2
.6.cnt:	.type	object
	.size	.6.cnt,4
	.word	184592576
	
	.sdecl	'.text.Echo.echoInit',code,cluster('echoInit')
	.sect	'.text.Echo.echoInit'
	.align	2
	
	.global	echoInit

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	     1  /**********************************************************************************************************************
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	     2   * \file Echo.c
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	     3   * \copyright Copyright (C) Infineon Technologies AG 2019
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	     4   *
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	     5   * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	     6   * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	     7   * are agreed, use of this file is subject to following:
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	     8   *
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	     9   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    10   *
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    11   * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    12   * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    13   * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    14   * Software is furnished to do so, all subject to the following:
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    15   *
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    16   * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    17   * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    18   * derivative works of the Software, unless such copies or derivative works are solely in the form of
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    19   * machine-executable object code generated by a source language processor.
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    20   *
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    21   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    22   * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    23   * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    24   * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    25   * IN THE SOFTWARE.
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    26   *********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    27  /*
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    28   * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    29   * All rights reserved. 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    30   * 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    31   * Redistribution and use in source and binary forms, with or without modification, 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    32   * are permitted provided that the following conditions are met:
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    33   *
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    34   * 1. Redistributions of source code must retain the above copyright notice,
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    35   *    this list of conditions and the following disclaimer.
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    36   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    37   *    this list of conditions and the following disclaimer in the documentation
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    38   *    and/or other materials provided with the distribution.
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    39   * 3. The name of the author may not be used to endorse or promote products
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    40   *    derived from this software without specific prior written permission. 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    41   *
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    42   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    43   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    44   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    45   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    46   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    47   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    48   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    49   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    50   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    51   * OF SUCH DAMAGE.
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    52   *
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    53   * This file is part of and a contribution to the lwIP TCP/IP stack.
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    54   *
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    55   * Credits go to Adam Dunkels (and the current maintainers) of this software.
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    56   *
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    57   * Christiaan Simons rewrote this file to get a more stable echo example.
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    58   */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    59  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    60  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    61  /*-----------------------------------------------------Includes------------------------------------------------------*/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    62  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    63  #include "Echo.h"
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    64  #include <string.h>
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    65  #include "lwip/opt.h"
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    66  #include "lwip/debug.h"
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    67  #include "lwip/stats.h"
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    68  #include "lwip/tcp.h"
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    69  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    70  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    71  /*------------------------------------------------------Macros-------------------------------------------------------*/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    72  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    73  #define STORAGE_SIZE_BYTES 256          /* Size in bytes of the space in memory allocated for storing incoming data */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    74  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    75  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    76  /*-------------------------------------------------Data Structures---------------------------------------------------*/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    77  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    78  enum EchoStates                         /* States of the session with the remote user                               */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    79  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    80      ES_NONE = 0,                        /* Session not completely initialized                                       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    81      ES_ACCEPTED,                        /* Session assigned to a remote client and resources are being allocated    */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    82      ES_RECEIVING,                       /* Session is receiving data sent from remote client                        */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    83      ES_CLOSING                          /* Session is being closed and assigned resources will be deallocated       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    84  };
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    85  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    86  typedef struct tcp_pcb tcpPcb;          /* Define a more convenient type                                            */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    87  typedef struct pbuf pBuf;               /* Define a more convenient type                                            */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    88  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    89  typedef struct                          /* Session data structure used for communicating with a single remote client*/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    90  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    91      u8_t state;                         /* The current state for the session                                        */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    92      tcpPcb *pcb;                        /* Pointer to the TCP protocol control block used for this session          */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    93      pBuf *p;                            /* Pointer to the packet buffers used to store received packets             */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    94      char storage[STORAGE_SIZE_BYTES];   /* Storage for the received strings                                         */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    95      uint16 nextFreeStoragePos;          /* Position of the next free position in the storage array                  */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    96  } EchoSession;
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    97  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    98  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	    99  /*-------------------------------------------------Global variables--------------------------------------------------*/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   100  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   101  /* Infineon Logo to be printed on the terminal at every new connection */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   102  char * g_Logo =
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   103  "                   *******\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   104             ********\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   105         **** ***             ****  *\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   106      *****   ***            ***   **\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   107    *****     ***  ** ****  *****  **   ** ****    ****     ****   *******\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   108   ****       ***  ***  **   ***   **   **   **  ***  **  ***  ***  **  ***\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   109   ****       ***  ***  **   ***   **   **   **  ******** **   ***  **  ***\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   110   *****      ***  ***  **   ***   **   **   **  ***      ***  ***  **  ***\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   111    ******    ***  ***  **   ***   **   **   **    *****    ****    **  ***\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   112       ******                                                                    *\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   113          *******                                                          **\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   114               *********                                           ****\r\n\ 
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   115                       *****************************************\r\n\n\0";
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   116  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   117  tcpPcb *g_echoPcb;                                                  /* Pointer to the TCP protocol control block    */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   118  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   119  /*------------------------------------------------Function Prototypes------------------------------------------------*/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   120  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   121  err_t echoAccept (void *arg, tcpPcb *newPcb, err_t err);            /* Accept callback is called every time a client establishes a new connection                   */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   122  err_t echoRecv (void *arg, tcpPcb *tpcb, pBuf *p, err_t err);       /* Recv callback is called every time data is received through the TCP connection               */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   123  void echoError (void *arg, err_t err);                              /* Error callback is called if a fatal error has already occurred on the connection             */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   124  err_t echoPoll (void *arg, tcpPcb *tpcb);                           /* Poll function is called periodically by the TCP stack                                        */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   125  err_t echoSent (void *arg, tcpPcb *tpcb, u16_t len);                /* Sent callback is called when TCP data has successfully been delivered to the remote host     */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   126  void echoSend (tcpPcb *tPcb, EchoSession *es);                      /* Send function enqueues TCP data to be delivered to the remote client                         */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   127  void echoUnpack (tcpPcb *tPcb, EchoSession *es);                    /* Unpack function dequeues data from the package buffer and copies it in the session storage   */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   128  void echoClose (tcpPcb *tPcb, EchoSession *es);                     /* Close function closes a TCP connection and deallocates session resources                     */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   129  static err_t tcp_client_recv(void *arg, struct tcp_pcb *tpcb,struct pbuf *p, err_t err);
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   130  static err_t tcp_client_connected(void *arg, struct tcp_pcb *tpcb, err_t err);
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   131  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   132  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   133  /*---------------------------------------------Function Implementations----------------------------------------------*/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   134  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   135  /* Function to initialize the ECHO program */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   136  void echoInit(void)
; Function echoInit
.L54:
echoInit:	.type	func

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   137  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   138      g_echoPcb = tcp_new();                                          /* Create a new TCP protocol control block                                                      */
	call	tcp_new
.L354:
	st.a	g_echoPcb,a2
.L355:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   139      if (g_echoPcb != NULL)                                          /* If the creation was successful...                                                            */
	mov.aa	a4,a2
.L356:
	jz.a	a4,.L2
.L146:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   140      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   141          err_t err = tcp_bind(g_echoPcb, IP_ADDR_ANY, 80);           /* ...bind the TCP procotol control block to any local address and local port 80.               */
	lea	a5,ip_addr_any
.L357:
	mov	d4,#80
	call	tcp_bind
.L224:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   142          if (err == ERR_OK)                                          /* If the binding was successful...                                                             */
	jne	d2,#0,.L3
.L358:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   143          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   144              g_echoPcb = tcp_listen(g_echoPcb);                      /* ...set the TCP control block able to accept incoming connections.                            */
	ld.a	a4,g_echoPcb
	mov	d4,#255
	call	tcp_listen_with_backlog
.L225:
	st.a	g_echoPcb,a2
.L359:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   145              tcp_accept(g_echoPcb, echoAccept);                      /* Configure the callback function to be called when a new connection is established.           */
	mov.aa	a4,a2
.L360:
	movh.a	a5,#@his(echoAccept)
	lea	a5,[a5]@los(echoAccept)
	j	tcp_accept
.L3:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   146          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   147          else
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   148          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   149              LWIP_DEBUGF(ECHO_DEBUG | LWIP_DBG_STATE, ("Echo: unable to bind to any address on port 80.\n"));
	movh.a	a4,#@his(.2.str)
	lea	a4,[a4]@los(.2.str)
.L147:
	j	.L5
.L2:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   150          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   151      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   152      else
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   153      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   154          LWIP_DEBUGF(ECHO_DEBUG | LWIP_DBG_STATE, ("Echo: unable to create a TCP control block.\n"));
	movh.a	a4,#@his(.3.str)
	lea	a4,[a4]@los(.3.str)
.L5:
	j	Ifx_Lwip_printf
.L145:
	
__echoInit_function_end:
	.size	echoInit,__echoInit_function_end-echoInit
.L85:
	; End of function
	
	.sdecl	'.text.Echo.echoAccept',code,cluster('echoAccept')
	.sect	'.text.Echo.echoAccept'
	.align	2
	
	.global	echoAccept

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   155      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   156  }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   157  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   158  /* Accept callback: it is called every time a client establish a new connection */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   159  err_t echoAccept(void *arg, tcpPcb *newPcb, err_t err)
; Function echoAccept
.L56:
echoAccept:	.type	func
	mov.aa	a12,a5
.L164:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   160  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   161      LWIP_UNUSED_ARG(arg);                                               /* Eliminate compiler warning about unused arguments                                        */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   162      LWIP_UNUSED_ARG(err);                                               /* Eliminate compiler warning about unused arguments                                        */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   163  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   164      err_t retErr;                                                       /* Allocate memory for function return value                                                */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   165      EchoSession *es = (EchoSession*) mem_malloc(sizeof(EchoSession));   /* Allocate memory for the session data                                                     */
	mov	d4,#272
	call	mem_malloc
.L226:
	mov.aa	a15,a2
.L228:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   166      if (es != NULL)                                                     /* If memory allocation was successful the session can be initialized                       */
	jz.a	a15,.L6
.L373:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   167      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   168          es->state = ES_ACCEPTED;                                        /* The new session has been accepted                                                        */
	mov	d15,#1
	st.b	[a15],d15
.L374:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   169          es->pcb = newPcb;                                               /* A pointer to the TCP control block to use for this session is saved in the session       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   170          es->p = NULL;                                                   /* The packet buffer for received data is initially empty                                   */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   171          memset(es->storage, 0, STORAGE_SIZE_BYTES);                     /* Allocate memory for storing processed received data                                      */
	mov	d4,#0
	st.a	[a15]4,a12
.L375:
	mov	d5,#256
	mov.a	a2,#0
.L227:
	st.a	[a15]8,a2
.L376:
	lea	a4,[a15]12
.L377:
	call	memset
.L378:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   172          es->nextFreeStoragePos = 0;                                     /* The first free position in the received data array is the beginning of the array         */
	mov	d15,#0
	st.h	[a15]268,d15
.L379:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   173  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   174          tcp_arg(newPcb, es);                                            /* Specify that the session shall be passed as argument to every callback function          */
	mov.aa	a4,a12
.L229:
	mov.aa	a5,a15
.L231:
	call	tcp_arg
.L230:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   175          tcp_recv(newPcb, echoRecv);                                     /* Configure the callback function to be called when new data is received                   */
	movh.a	a5,#@his(echoRecv)
	lea	a5,[a5]@los(echoRecv)
	mov.aa	a4,a12
.L232:
	call	tcp_recv
.L233:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   176          tcp_sent(newPcb, echoSent);                                     /* Configure the callback function to be called when new data is sent                       */
	movh.a	a5,#@his(echoSent)
	lea	a5,[a5]@los(echoSent)
	mov.aa	a4,a12
.L234:
	call	tcp_sent
.L235:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   177          tcp_err(newPcb, echoError);                                     /* Configure the callback function to be called when a fatal connection error occurs        */
	movh.a	a5,#@his(echoError)
	lea	a5,[a5]@los(echoError)
	mov.aa	a4,a12
.L236:
	call	tcp_err
.L237:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   178          tcp_poll(newPcb, echoPoll, 0);                                  /* Configure the callback function to be periodically called by TCP
	movh.a	a5,#@his(echoPoll)
	lea	a5,[a5]@los(echoPoll)
.L380:
	mov	d4,#0
	mov.aa	a4,a12
.L238:
	call	tcp_poll
.L239:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   179                                                                           * The time interval is specified as multiple of the TCP coarse timer interval, which is
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   180                                                                           * called twice a second                                                                    */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   181          retErr = ERR_OK;                                                /* Set the return value when no error occured                                               */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   182  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   183          tcp_write(newPcb, g_Logo, strlen(g_Logo), 1);                   /* Send the Infineon logo to the remote client                                              */
	ld.a	a4,g_Logo
	call	strlen
.L381:
	extr.u	d4,d2,#0,#16
	mov.aa	a4,a12
.L240:
	mov	d5,#1
	ld.a	a5,g_Logo
.L382:
	call	tcp_write
.L241:
	j	.L7
.L6:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   184      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   185      else                                                                /* If it was not possible to allocate the necessary memory for the session...               */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   186      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   187          retErr = ERR_MEM;                                               /* ... set the return value to "Out of memory".                                             */
	mov	d15,#-1
.L7:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   188      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   189      return retErr;                                                      /* Return result                                                                            */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   190  }
	mov	d2,d15
	ret
.L158:
	
__echoAccept_function_end:
	.size	echoAccept,__echoAccept_function_end-echoAccept
.L95:
	; End of function
	
	.sdecl	'.text.Echo.echoRecv',code,cluster('echoRecv')
	.sect	'.text.Echo.echoRecv'
	.align	2
	
	.global	echoRecv

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   191  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   192  /* Recv callback: it is called every time data is received through the TCP connection */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   193  err_t echoRecv (void *arg, tcpPcb *tpcb, pBuf *p, err_t err)
; Function echoRecv
.L58:
echoRecv:	.type	func
	mov.aa	a15,a4
.L244:
	mov.aa	a12,a5
.L245:
	mov.aa	a13,a6
.L246:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   194  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   195      err_t retErr;                                                       /* Allocate memory for function return value                                                */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   196      EchoSession *es = (EchoSession*) arg;                               /* Get a pointer to the current session                                                     */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   197  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   198      if (p == NULL)                                                      /* If there is no enqueued received data after the RECV callback was called, it means the   */
	mov	d15,d4
	jnz.a	a13,.L9
.L247:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   199      {                                                                   /* remote client closed the connection in the meanwhile                                     */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   200          es->state = ES_CLOSING;                                         /* Set the state of this session to CLOSING in order to free its resources                  */
	mov	d15,#3
	st.b	[a15],d15
.L248:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   201          if (es->p == NULL)                                              /* If the session does not have any leftover unprocessed data...                            */
	ld.a	a2,[a15]8
.L387:
	jnz.a	a2,.L10
.L388:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   202          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   203              echoClose(tpcb, es);                                        /* ... close the session and free its resources.                                            */
	mov.aa	a4,a12
.L242:
	mov.aa	a5,a15
.L249:
	call	echoClose
.L243:
	j	.L11
.L9:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   204          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   205          else                                                            /* If the session does have leftover unprocessed data...                                    */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   206          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   207              echoUnpack(tpcb, es);                                       /* ... process unprocessed data ...                                                         */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   208              echoSend(tpcb, es);                                         /* ... and send processed data.                                                             */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   209          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   210          retErr = ERR_OK;                                                /* Signal a successful outcome                                                              */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   211      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   212      else if (err != ERR_OK)                                             /* If there was an error while receiving data...                                            */
	jeq	d15,#0,.L12
.L389:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   213      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   214          /* Cleanup, for unkown reason */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   215          if (p != NULL)                                                  /* ... if some data was received and stored...                                              */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   216          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   217              es->p = NULL;                                               /* ... invalidate the unprocessed data contained in the session.                            */
	mov.a	a2,#0
.L390:
	st.a	[a15]8,a2
.L391:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   218              pbuf_free(p);                                               /* Dereference and deallocate last received data which is probably corrupted                */
	mov.aa	a4,a13
.L250:
	call	pbuf_free
.L251:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   219          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   220          retErr = err;                                                   /* Propagate the error                                                                      */
	j	.L13
.L12:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   221      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   222      else if (es->state == ES_ACCEPTED)                                  /* If the current session is in state ACCEPTED...                                           */
	ld.bu	d15,[a15]
.L252:
	jne	d15,#1,.L14
.L392:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   223      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   224          es->state = ES_RECEIVING;                                       /* ... change its state to RECEIVING.                                                       */
	mov	d15,#2
	st.b	[a15],d15
.L393:
	j	.L15
.L14:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   225          es->p = p;                                                      /* Set the unprocessed data buffer of the session to the received one                       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   226          echoUnpack(tpcb, es);                                           /* Perform a first incoming data processing                                                 */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   227          echoSend(tpcb, es);                                             /* Send the first echo to remote client                                                     */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   228          retErr = ERR_OK;                                                /* Signal a successful outcome                                                              */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   229      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   230      else if (es->state == ES_RECEIVING)                                 /* If the current session was already receiving data...                                     */
	jne	d15,#2,.L16
.L394:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   231      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   232          if (es->p == NULL)                                              /* ... and no unprocessed data is contained in the session...                               */
	ld.a	a4,[a15]8
.L253:
	jnz.a	a4,.L17
.L15:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   233          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   234              es->p = p;                                                  /* ... set the unprocessed data buffer of the session to the received one                   */
	st.a	[a15]8,a13
.L10:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   235              echoUnpack(tpcb, es);                                       /* Process the incoming data                                                                */
	mov.aa	a4,a12
.L255:
	mov.aa	a5,a15
.L256:
	call	echoUnpack
.L254:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   236              echoSend(tpcb, es);                                         /* Send an echo to the remote client                                                        */
	mov.aa	a4,a12
.L257:
	mov.aa	a5,a15
.L259:
	call	echoSend
.L258:
	j	.L18
.L17:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   237          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   238          else                                                            /* If the session still contains some unprocessed received data...                          */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   239          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   240              pBuf *ptr = es->p;                                          /* ... create a local reference for the received data                                       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   241              pbuf_chain(ptr, p);                                         /* Chain the old unprocessed data contained in the session with the new one                 */
	mov.aa	a5,a13
.L260:
	call	pbuf_chain
.L176:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   242          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   243          retErr = ERR_OK;                                                /* Signal a successful outcome                                                              */
	j	.L19
.L16:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   244      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   245      else                                                                /* If we got new incoming data in an unknown state, discard the data                        */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   246      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   247          tcp_recved(tpcb, p->tot_len);                                   /* Mark the incoming data as received                                                       */
	ld.hu	d4,[a13]8
.L262:
	mov.aa	a4,a12
.L261:
	call	tcp_recved
.L263:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   248          es->p = NULL;                                                   /* Invalidate the unprocessed data contained in the session                                 */
	mov.a	a2,#0
.L395:
	st.a	[a15]8,a2
.L396:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   249          pbuf_free(p);                                                   /* Dereference and deallocate last received data                                            */
	mov.aa	a4,a13
.L264:
	call	pbuf_free
.L19:
.L18:
.L11:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   250          retErr = ERR_OK;                                                /* Signal a successful outcome                                                              */
	mov	d15,#0
.L13:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   251      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   252      return retErr;                                                      /* Return result                                                                            */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   253  }
	mov	d2,d15
	ret
.L168:
	
__echoRecv_function_end:
	.size	echoRecv,__echoRecv_function_end-echoRecv
.L100:
	; End of function
	
	.sdecl	'.text.Echo.echoError',code,cluster('echoError')
	.sect	'.text.Echo.echoError'
	.align	2
	
	.global	echoError

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   254  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   255  /* Error callback: it is called if a fatal error has already occurred on the connection */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   256  void echoError(void *arg, err_t err)
; Function echoError
.L60:
echoError:	.type	func

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   257  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   258      LWIP_UNUSED_ARG(err);                                               /* Eliminate compiler warning about unused arguments                                        */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   259  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   260      EchoSession *es = (EchoSession*) arg;                               /* Get a pointer to the current session                                                     */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   261  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   262      if (es != NULL)                                                     /* If a session exists we cannot do anything with it anymore, since the fatal error         */
	jz.a	a4,.L21
.L401:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   263      {                                                                   /* occurred ...                                                                             */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   264          mem_free(es);                                                   /* ... free memory assigned to the session                                                  */
	j	mem_free
.L21:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   265      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   266  }
	ret
.L177:
	
__echoError_function_end:
	.size	echoError,__echoError_function_end-echoError
.L105:
	; End of function
	
	.sdecl	'.text.Echo.echoPoll',code,cluster('echoPoll')
	.sect	'.text.Echo.echoPoll'
	.align	2
	
	.global	echoPoll

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   267  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   268  /* Poll function: it is called periodically by the TCP stack */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   269  err_t echoPoll(void *arg, tcpPcb *tpcb)
; Function echoPoll
.L62:
echoPoll:	.type	func
	mov.aa	a15,a4
.L266:
	mov.aa	a12,a5
.L267:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   270  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   271      err_t retErr;                                                       /* Allocate memory for function return value                                                */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   272      EchoSession *es = (EchoSession*) arg;                               /* Get a pointer to the current session                                                     */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   273  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   274      if (es != NULL)                                                     /* If a session exists ...                                                                  */
	jz.a	a15,.L22
.L406:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   275      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   276          if (es->p != NULL ||                                            /* ... and if the session has any leftover unprocessed data...                              */
	ld.w	d15,[a15]8
.L407:
	jne	d15,#0,.L23
.L408:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   277              es->nextFreeStoragePos != 0)                                /* ... or there is still data in the session storage to send back...                        */
	ld.hu	d15,[a15]268
.L409:
	jeq	d15,#0,.L24
.L23:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   278          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   279              echoUnpack(tpcb, es);                                       /* ... process unprocessed data ...                                                         */
	mov.aa	a4,a12
.L265:
	mov.aa	a5,a15
.L269:
	call	echoUnpack
.L268:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   280              echoSend(tpcb, es);                                         /* ... and send processed data.                                                             */
	mov.aa	a4,a12
.L270:
	mov.aa	a5,a15
.L272:
	call	echoSend
.L271:
	j	.L25
.L24:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   281          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   282          else                                                            /* If the session has no leftover unprocessed data...                                       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   283          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   284              if (es->state == ES_CLOSING)                                /* ... and the session was marked for being closed...                                       */
	ld.bu	d15,[a15]
.L410:
	jne	d15,#3,.L26
.L411:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   285              {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   286                  echoClose(tpcb, es);                                    /* ... close the session and free its resources.                                            */
	mov.aa	a4,a12
.L273:
	mov.aa	a5,a15
.L274:
	call	echoClose
.L26:
.L25:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   287              }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   288          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   289          retErr = ERR_OK;                                                /* Signal a successful outcome                                                              */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   290      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   291      else                                                                /* If no session exists something went wrong, the TCP connection has to be aborted          */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   292      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   293          tcp_abort(tpcb);                                                /* Abort the TCP connection                                                                 */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   294          retErr = ERR_ABRT;                                              /* Propagate the abort error                                                                */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   295      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   296      return retErr;                                                      /* Return result                                                                            */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   297  }
	mov	d2,#0
	ret
.L22:
	mov.aa	a4,a12
.L275:
	call	tcp_abort
.L276:
	mov	d2,#-13
	ret
.L181:
	
__echoPoll_function_end:
	.size	echoPoll,__echoPoll_function_end-echoPoll
.L110:
	; End of function
	
	.sdecl	'.text.Echo.echoSent',code,cluster('echoSent')
	.sect	'.text.Echo.echoSent'
	.align	2
	
	.global	echoSent

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   298  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   299  /* Sent callback: it is called when TCP data has successfully been delivered to the remote host */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   300  err_t echoSent(void *arg, tcpPcb *tpcb, u16_t len)
; Function echoSent
.L64:
echoSent:	.type	func
	mov.aa	a15,a4
.L192:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   301  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   302      LWIP_UNUSED_ARG(len);                                               /* Eliminates compiler warning about unused arguments                                       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   303  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   304      EchoSession *es = (EchoSession*) arg;                               /* Get a pointer to the current session                                                     */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   305  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   306      if (es->p != NULL )                                                 /* If the session has any leftover unprocessed data...                                      */
	ld.w	d15,[a15]8
.L193:
	mov.aa	a12,a5
.L194:
	jeq	d15,#0,.L29
.L416:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   307      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   308          echoUnpack(tpcb, es);                                           /* ... process unprocessed data ...                                                         */
	mov.aa	a4,a12
.L277:
	mov.aa	a5,a15
.L279:
	call	echoUnpack
.L278:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   309          echoSend(tpcb, es);                                             /* ... and send processed data.                                                             */
	mov.aa	a4,a12
.L280:
	mov.aa	a5,a15
.L282:
	call	echoSend
.L281:
	j	.L30
.L29:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   310      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   311      else                                                                /* If the session has no leftover unprocessed data...                                       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   312      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   313          if (es->state == ES_CLOSING)                                    /* ... and the session was marked for being closed...                                       */
	ld.bu	d15,[a15]
.L417:
	jne	d15,#3,.L31
.L418:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   314          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   315              echoClose(tpcb, es);                                        /* ... close the session and free its resources.                                            */
	mov.aa	a4,a12
.L283:
	mov.aa	a5,a15
.L284:
	call	echoClose
.L31:
.L30:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   316          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   317      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   318      return ERR_OK;                                                      /* Return successful result                                                                 */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   319  }
	mov	d2,#0
	ret
.L186:
	
__echoSent_function_end:
	.size	echoSent,__echoSent_function_end-echoSent
.L115:
	; End of function
	
	.sdecl	'.text.Echo.echoSend',code,cluster('echoSend')
	.sect	'.text.Echo.echoSend'
	.align	2
	
	.global	echoSend

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   320  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   321  /* Send function: enqueues TCP data to be delivered to the remote client */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   322  void echoSend(tcpPcb *tpcb, EchoSession *es)
; Function echoSend
.L66:
echoSend:	.type	func
	mov.aa	a12,a5
.L287:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   323  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   324      if(es->nextFreeStoragePos == 0)                                     /* If the next free position in the storage array is the beginning of the array, there is   */
	ld.hu	d0,[a12]268
.L423:
	mov.aa	a15,a4
.L288:
	jeq	d0,#0,.L33
.L424:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   325      {                                                                   /* nothing to send                                                                          */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   326          return;
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   327      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   328      if(es->storage[es->nextFreeStoragePos - 1] != '\n' &&               /* If the string to be sent does not end with a new line...                                 */
	addsc.a	a2,a12,d0,#0
	ld.b	d1,[a2]11
.L425:
	mov	d15,#10
.L426:
	jeq	d15,d1,.L34
.L427:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   329         es->nextFreeStoragePos < STORAGE_SIZE_BYTES)                     /* ... and the storage is not full ...                                                      */
	mov	d15,#256
.L428:
	jlt.u	d0,d15,.L35
.L34:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   330      {                                                                   /* ... do not send yet. Wait for the string to be echoed to terminate                       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   331          return;                                                         /* or the storage to completely fill.                                                       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   332      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   333      err_t wrErr = tcp_write(tpcb, "Board: ", 7, 1);                     /* Enqueue an echo preamble to be sent to the remote client                                 */
	mov	d4,#7
	lea	a5,.4.str
.L285:
	mov	d5,#1
	call	tcp_write
.L286:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   334      wrErr |= tcp_write(tpcb, es->storage, es->nextFreeStoragePos, 1);   /* Enqueue the string stored in the session for sending                                     */
	mov	d15,d2
	lea	a5,[a12]12
.L290:
	ld.hu	d4,[a12]268
.L429:
	mov	d5,#1
	mov.aa	a4,a15
.L291:
	call	tcp_write
.L289:
	or	d15,d2
.L430:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   335      if(wrErr == ERR_OK)                                                 /* If data was correctly enqueued for TCP transmission ...                                  */
	jne	d15,#0,.L36
.L431:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   336      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   337          es->nextFreeStoragePos = 0;                                     /* ... remove sent data from the session storage.                                           */
	st.h	[a12]268,d15
.L36:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   338      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   339  }
.L35:
.L33:
	ret
.L196:
	
__echoSend_function_end:
	.size	echoSend,__echoSend_function_end-echoSend
.L120:
	; End of function
	
	.sdecl	'.text.Echo.echoUnpack',code,cluster('echoUnpack')
	.sect	'.text.Echo.echoUnpack'
	.align	2
	
	.global	echoUnpack

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   340  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   341  /* Unpack function: dequeues data from the package buffer and copies it in the session storage */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   342  void echoUnpack(tcpPcb *tpcb, EchoSession *es)
; Function echoUnpack
.L68:
echoUnpack:	.type	func
	mov.aa	a12,a4
.L292:
	mov.aa	a15,a5
.L293:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   343  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   344      pBuf *ptr;                                                          /* Local reference to a packet buffer                                                       */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   345  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   346      while ((es->p != NULL))                                             /* Process data while there still are packets to process                                    */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   347      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   348          ptr = es->p;                                                    /* Local reference of the packet to process                                                 */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   349  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   350          if (es->nextFreeStoragePos + ptr->len <= STORAGE_SIZE_BYTES)    /* If there is enough space in the session storage for the new data ...                     */
	lea	a13,[a15]268
.L436:
	j	.L37
.L38:
	ld.a	a14,[a15]8
.L294:
	ld.hu	d15,[a15]268
.L437:
	mov	d1,#256
.L438:
	ld.hu	d4,[a14]10
.L439:
	add	d0,d15,d4
.L440:
	jlt	d1,d0,.L39
.L441:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   351          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   352              memcpy(&es->storage[es->nextFreeStoragePos],                /* ... copy data in the session storage                                                     */
	addsc.a	a2,a15,d15,#0
.L442:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   353                      ptr->payload,
	ld.a	a5,[a14]4
.L443:
	lea	a4,[a2]12
.L444:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   354                      ptr->len);
	call	memcpy
.L445:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   355              es->nextFreeStoragePos += ptr->len;                         /* Increase the index of the new free position in the session storage array                 */
	ld.hu	d15,[a15]268
.L446:
	ld.hu	d0,[a14]10
.L447:
	add	d15,d0
	st.h	[a13],d15
.L204:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   356  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   357              u16_t plen = ptr->len;                                      /* Number of bytes successfully received and stored                                         */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   358  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   359              es->p = ptr->next;                                          /* Get the next packet in the chain (if any)                                                */
	ld.a	a4,[a14]
.L448:
	ld.hu	d15,[a14]10
.L295:
	st.a	[a15]8,a4
.L449:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   360              if (es->p != NULL)                                          /* If there is another packet to be processed...                                            */
	jz.a	a4,.L40
.L450:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   361              {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   362                  pbuf_ref(es->p);                                        /* Inform the LwIP framework that the packet to be processed is linked to the session,      */
	call	pbuf_ref
.L40:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   363              }                                                           /* and shall not be disposed                                                                */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   364  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   365              u8_t freed;                                                 /* Number of bytes successfully freed from memory                                           */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   366              do
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   367              {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   368                  freed = pbuf_free(ptr);                                 /* Free memory used by the packet that was just processed                                   */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   369              } while (freed == 0);
.L41:
	mov.aa	a4,a14
.L296:
	call	pbuf_free
.L297:
	jeq	d2,#0,.L41
.L451:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   370  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   371              tcp_recved(tpcb, plen);                                     /* Signal the remote host that more data can be received                                    */
	mov.aa	a4,a12
.L298:
	mov	d4,d15
	call	tcp_recved
.L39:
.L37:
	ld.w	d15,[a15]8
.L452:
	jne	d15,#0,.L38
.L453:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   372          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   373      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   374  }
	ret
.L200:
	
__echoUnpack_function_end:
	.size	echoUnpack,__echoUnpack_function_end-echoUnpack
.L125:
	; End of function
	
	.sdecl	'.text.Echo.echoClose',code,cluster('echoClose')
	.sect	'.text.Echo.echoClose'
	.align	2
	
	.global	echoClose

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   375  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   376  /* Close function: closes a TCP connection and deallocates session resources */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   377  void echoClose(tcpPcb *tpcb, EchoSession *es)
; Function echoClose
.L70:
echoClose:	.type	func
	mov.aa	a15,a4
.L301:
	mov.aa	a12,a5
.L302:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   378  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   379      tcp_arg(tpcb, NULL);                                                /* Set the argument passed to every callback to NULL                                        */
	mov.a	a5,#0
.L299:
	call	tcp_arg
.L300:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   380      tcp_sent(tpcb, NULL);                                               /* Set the data sent callback to NULL                                                       */
	mov.a	a5,#0
	mov.aa	a4,a15
.L303:
	call	tcp_sent
.L304:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   381      tcp_recv(tpcb, NULL);                                               /* Set the data received callback to NULL                                                   */
	mov.a	a5,#0
	mov.aa	a4,a15
.L305:
	call	tcp_recv
.L306:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   382      tcp_err(tpcb, NULL);                                                /* Set the data error callback to NULL                                                      */
	mov.a	a5,#0
	mov.aa	a4,a15
.L307:
	call	tcp_err
.L308:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   383      tcp_poll(tpcb, NULL, 0);                                            /* Set the periodical callback to NULL                                                      */
	mov.a	a5,#0
.L458:
	mov	d4,#0
	mov.aa	a4,a15
.L309:
	call	tcp_poll
.L310:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   384  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   385      if (es != NULL)                                                     /* If a session still exists...                                                             */
	jz.a	a12,.L42
.L459:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   386      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   387          mem_free(es);                                                   /* ...free memory assigned to the session.                                                  */
	mov.aa	a4,a12
.L311:
	call	mem_free
.L42:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   388      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   389      tcp_close(tpcb);                                                    /* Close the TCP connection                                                                 */
	mov.aa	a4,a15
.L312:
	j	tcp_close
.L208:
	
__echoClose_function_end:
	.size	echoClose,__echoClose_function_end-echoClose
.L130:
	; End of function
	
	.sdecl	'.text.Echo.tcp_client_init',code,cluster('tcp_client_init')
	.sect	'.text.Echo.tcp_client_init'
	.align	2
	
	.global	tcp_client_init

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   390  }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   391  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   392  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   393  /******************************************************************************
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   394     * 描述  : 创建tcp客户端
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   395    * 参数  : 无
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   396    * 返回  : 无
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   397   ******************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   398   void tcp_client_init(void)
; Function tcp_client_init
.L72:
tcp_client_init:	.type	func
	sub.a	a10,#8
.L313:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   399   {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   400      #define TCP_REMOTE_PORT  8088
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   401      #define TCP_LOCAL_PORT   8089
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   402  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   403      struct tcp_pcb *tpcb;
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   404       /* 服务器IP */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   405       ip_addr_t serverIp;
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   406       IP4_ADDR(&serverIp, 192, 168, 0, 11);
	ld.w	d15,.6.cnt
	st.w	[a10],d15
.L365:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   407   
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   408       /* 创建tcp控制块 */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   409       tpcb = tcp_new();
	call	tcp_new
.L314:
	mov.aa	a15,a2
.L316:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   410       
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   411       if (tpcb != NULL)
	jz.a	a15,.L43
.L156:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   412       {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   413           err_t err;
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   414           
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   415           err = tcp_bind(tpcb, IP_ADDR_ANY, TCP_LOCAL_PORT);
	lea	a5,ip_addr_any
.L366:
	mov	d4,#8089
	mov.aa	a4,a15
.L315:
	call	tcp_bind
.L317:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   416   
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   417           if (err == ERR_OK)
	jne	d2,#0,.L44
.L367:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   418           {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   419               /* 连接服务器 */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   420               tcp_connect(tpcb, &serverIp, TCP_REMOTE_PORT, tcp_client_connected);
	mov.aa	a5,a10
.L368:
	mov	d4,#8088
	movh.a	a6,#@his(tcp_client_connected)
	lea	a6,[a6]@los(tcp_client_connected)
	mov.aa	a4,a15
.L318:
	j	tcp_connect
.L43:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   421           }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   422           else
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   423           {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   424               memp_free(MEMP_TCP_PCB, tpcb);
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   425           }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   426       }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   427   }
	ret
.L44:
	mov	d4,#1
	mov.aa	a4,a15
.L319:
	j	memp_free
.L150:
	
__tcp_client_init_function_end:
	.size	tcp_client_init,__tcp_client_init_function_end-tcp_client_init
.L90:
	; End of function
	
	.sdecl	'.text.Echo.tcp_client_recv',code,cluster('tcp_client_recv')
	.sect	'.text.Echo.tcp_client_recv'
	.align	2
	

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   428  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   429  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   430  /******************************************************************************
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   431   * 描述  : 数据接收回调函数
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   432   * 参数  : -
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   433   * 返回  : -
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   434   ******************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   435  static err_t tcp_client_recv(void *arg, struct tcp_pcb *tpcb,
; Function tcp_client_recv
.L74:
tcp_client_recv:	.type	func
	mov.aa	a15,a5
.L323:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   436                              struct pbuf *p, err_t err)
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   437  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   438      #define TCP_SEND_DATA_LEN  200
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   439  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   440      uint32_t i;
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   441      static uint8_t sendData[TCP_SEND_DATA_LEN] = {0xAA,0x01,0x02,0xAA,0x01,0xAA,0x01,0xAA,0x01,0xAA,0x01};
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   442  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   443      /* 关闭nagle算法 */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   444      tcp_nagle_disable(tpcb);
	mov	d8,d4
	ld.hu	d15,[a15]26
.L324:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   445      /* 发送数据 */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   446      tcp_write(tpcb, sendData, TCP_SEND_DATA_LEN, 1);
	mov	d4,#200
	movh.a	a5,#@his(_999001_sendData)
.L321:
	or	d15,#64
	st.h	[a15]26,d15
.L464:
	mov	d5,#1
	lea	a5,[a5]@los(_999001_sendData)
.L465:
	mov.aa	a4,a15
.L320:
	mov.aa	a12,a6
.L325:
	call	tcp_write
.L322:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   447      tcp_output(tpcb);
	mov.aa	a4,a15
.L326:
	call	tcp_output
.L327:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   448  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   449      if (p != NULL)
	jz.a	a12,.L46

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   450      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   451          struct pbuf *ptmp = p;
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   452          
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   453          while(ptmp != NULL)
.L47:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   454          {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   455              ptmp = p->next;
	ld.w	d15,[a12]
.L466:
	jne	d15,#0,.L47
.L467:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   456          }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   457          
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   458          tcp_recved(tpcb, p->tot_len);
	ld.hu	d4,[a12]8
	mov.aa	a4,a15
.L328:
	call	tcp_recved
.L329:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   459          
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   460          /* 释放缓冲区数据 */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   461          pbuf_free(p);
	mov.aa	a4,a12
.L330:
	call	pbuf_free
.L218:
	j	.L48
.L46:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   462      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   463      else if (err == ERR_OK)
	jne	d8,#0,.L49
.L468:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   464      {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   465          tcp_recved(tpcb, p->tot_len);
	ld.hu	d4,0x8
	mov.aa	a4,a15
.L331:
	call	tcp_recved
.L332:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   466          
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   467          return tcp_close(tpcb);
	mov.aa	a4,a15
.L333:
	j	tcp_close
.L49:
.L48:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   468      }
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   469  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   470      return ERR_OK;
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   471  }
	mov	d2,#0
	ret
.L211:
	
__tcp_client_recv_function_end:
	.size	tcp_client_recv,__tcp_client_recv_function_end-tcp_client_recv
.L135:
	; End of function
	
	.sdecl	'.text.Echo.tcp_client_connected',code,cluster('tcp_client_connected')
	.sect	'.text.Echo.tcp_client_connected'
	.align	2
	

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   472    
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   473  /******************************************************************************
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   474   * 描述  : 连接服务器回调函数
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   475   * 参数  : -
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   476   * 返回  : -
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   477   ******************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   478  static err_t tcp_client_connected(void *arg, struct tcp_pcb *tpcb, err_t err)
; Function tcp_client_connected
.L76:
tcp_client_connected:	.type	func
	mov.aa	a15,a5
.L336:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   479  {
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   480      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("tcp_client_connected\r\n"));
	movh.a	a4,#@his(.5.str)
.L334:
	lea	a4,[a4]@los(.5.str)
	call	Ifx_Lwip_printf
.L335:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   481  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   482      /* 注册接收回调函数 */
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   483      tcp_recv(tpcb, tcp_client_recv);
	movh.a	a5,#@his(tcp_client_recv)
	lea	a5,[a5]@los(tcp_client_recv)
	mov.aa	a4,a15
.L337:
	call	tcp_recv
.L338:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   484  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   485      tcp_nagle_disable(tpcb);
	ld.hu	d15,[a15]26
	or	d15,#64
	st.h	[a15]26,d15
.L473:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   486      tcp_write(tpcb, g_Logo, strlen(g_Logo), 1);
	ld.a	a4,g_Logo
	call	strlen
.L474:
	extr.u	d4,d2,#0,#16
	mov.aa	a4,a15
.L339:
	mov	d5,#1
	ld.a	a5,g_Logo
.L475:
	call	tcp_write
.L340:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   487      tcp_output(tpcb);
	mov.aa	a4,a15
.L341:
	call	tcp_output
.L342:

; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   488  
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   489      return ERR_OK;
; ..\0_Src\0_AppSw\Tricore\Main\Echo.c	   489  }

	mov	d2,#0


	ret
.L219:
	
__tcp_client_connected_function_end:
	.size	tcp_client_connected,__tcp_client_connected_function_end-tcp_client_connected
.L140:
	; End of function
	
	.sdecl	'.rodata.Echo..1.str',data,rom
	.sect	'.rodata.Echo..1.str'
.1.str:	.type	object
	.size	.1.str,794
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,42
	.byte	42,42,42,42
	.byte	42,42,13,10
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,42
	.byte	42,42,42,42
	.byte	42,42,42,13
	.byte	10,32,32,32
	.byte	32,32,32,32
	.byte	42,42,42,42
	.byte	32,42,42,42
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,42,42,42
	.byte	42,32,32,42
	.byte	13,10,32,32
	.byte	32,32,42,42
	.byte	42,42,42,32
	.byte	32,32,42,42
	.byte	42,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,42,42,42
	.byte	32,32,32,42
	.byte	42,13,10,32
	.byte	32,42,42,42
	.byte	42,42,32,32
	.byte	32,32,32,42
	.byte	42,42,32,32
	.byte	42,42,32,42
	.byte	42,42,42,32
	.byte	32,42,42,42
	.byte	42,42,32,32
	.byte	42,42,32,32
	.byte	32,42,42,32
	.byte	42,42,42,42
	.byte	32,32,32,32
	.byte	42,42,42,42
	.byte	32,32,32,32
	.byte	32,42,42,42
	.byte	42,32,32,32
	.byte	42,42,42,42
	.byte	42,42,42,13
	.byte	10,32,42,42
	.byte	42,42,32,32
	.byte	32,32,32,32
	.byte	32,42,42,42
	.byte	32,32,42,42
	.byte	42,32,32,42
	.byte	42,32,32,32
	.byte	42,42,42,32
	.byte	32,32,42,42
	.byte	32,32,32,42
	.byte	42,32,32,32
	.byte	42,42,32,32
	.byte	42,42,42,32
	.byte	32,42,42,32
	.byte	32,42,42,42
	.byte	32,32,42,42
	.byte	42,32,32,42
	.byte	42,32,32,42
	.byte	42,42,13,10
	.byte	32,42,42,42
	.byte	42,32,32,32
	.byte	32,32,32,32
	.byte	42,42,42,32
	.byte	32,42,42,42
	.byte	32,32,42,42
	.byte	32,32,32,42
	.byte	42,42,32,32
	.byte	32,42,42,32
	.byte	32,32,42,42
	.byte	32,32,32,42
	.byte	42,32,32,42
	.byte	42,42,42,42
	.byte	42,42,42,32
	.byte	42,42,32,32
	.byte	32,42,42,42
	.byte	32,32,42,42
	.byte	32,32,42,42
	.byte	42,13,10,32
	.byte	42,42,42,42
	.byte	42,32,32,32
	.byte	32,32,32,42
	.byte	42,42,32,32
	.byte	42,42,42,32
	.byte	32,42,42,32
	.byte	32,32,42,42
	.byte	42,32,32,32
	.byte	42,42,32,32
	.byte	32,42,42,32
	.byte	32,32,42,42
	.byte	32,32,42,42
	.byte	42,32,32,32
	.byte	32,32,32,42
	.byte	42,42,32,32
	.byte	42,42,42,32
	.byte	32,42,42,32
	.byte	32,42,42,42
	.byte	13,10,32,32
	.byte	42,42,42,42
	.byte	42,42,32,32
	.byte	32,32,42,42
	.byte	42,32,32,42
	.byte	42,42,32,32
	.byte	42,42,32,32
	.byte	32,42,42,42
	.byte	32,32,32,42
	.byte	42,32,32,32
	.byte	42,42,32,32
	.byte	32,42,42,32
	.byte	32,32,32,42
	.byte	42,42,42,42
	.byte	32,32,32,32
	.byte	42,42,42,42
	.byte	32,32,32,32
	.byte	42,42,32,32
	.byte	42,42,42,13
	.byte	10,32,32,32
	.byte	32,32,42,42
	.byte	42,42,42,42
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	42,13,10,32
	.byte	32,32,32,32
	.byte	32,32,32,42
	.byte	42,42,42,42
	.byte	42,42,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	42,42,13,10
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,42,42,42
	.byte	42,42,42,42
	.byte	42,42,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,42,42,42
	.byte	42,13,10,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	42,42,42,42
	.byte	42,42,42,42
	.byte	42,42,42,42
	.byte	42,42,42,42
	.byte	42,42,42,42
	.byte	42,42,42,42
	.byte	42,42,42,42
	.byte	42,42,42,42
	.byte	42,42,42,42
	.byte	42,42,42,42
	.byte	42,13,10,10
	.space	2
	.sdecl	'.zdata.Echo.g_Logo',data,cluster('g_Logo')
	.sect	'.zdata.Echo.g_Logo'
	.global	g_Logo
	.align	4
g_Logo:	.type	object
	.size	g_Logo,4
	.word	.1.str
	.sdecl	'.zbss.Echo.g_echoPcb',data,cluster('g_echoPcb')
	.sect	'.zbss.Echo.g_echoPcb'
	.global	g_echoPcb
	.align	4
g_echoPcb:	.type	object
	.size	g_echoPcb,4
	.space	4
	.sdecl	'.rodata.Echo..2.str',data,rom
	.sect	'.rodata.Echo..2.str'
.2.str:	.type	object
	.size	.2.str,49
	.byte	69,99,104,111
	.byte	58,32,117,110
	.byte	97,98,108,101
	.byte	32,116,111,32
	.byte	98,105,110,100
	.byte	32,116,111,32
	.byte	97,110,121,32
	.byte	97,100,100,114
	.byte	101,115,115,32
	.byte	111,110,32,112
	.byte	111,114,116,32
	.byte	56,48,46,10
	.space	1
	.sdecl	'.rodata.Echo..3.str',data,rom
	.sect	'.rodata.Echo..3.str'
.3.str:	.type	object
	.size	.3.str,45
	.byte	69,99,104,111
	.byte	58,32,117,110
	.byte	97,98,108,101
	.byte	32,116,111,32
	.byte	99,114,101,97
	.byte	116,101,32,97
	.byte	32,84,67,80
	.byte	32,99,111,110
	.byte	116,114,111,108
	.byte	32,98,108,111
	.byte	99,107,46,10
	.space	1
	.sdecl	'.zrodata.Echo..4.str',data,rom
	.sect	'.zrodata.Echo..4.str'
.4.str:	.type	object
	.size	.4.str,8
	.byte	66,111,97,114
	.byte	100,58,32
	.space	1
	.sdecl	'.data.Echo._999001_sendData',data,cluster('_999001_sendData')
	.sect	'.data.Echo._999001_sendData'
_999001_sendData:	.type	object
	.size	_999001_sendData,200
	.byte	170,1,2,170
	.byte	1,170,1,170
	.byte	1,170,1
	.space	189
	.sdecl	'.rodata.Echo..5.str',data,rom
	.sect	'.rodata.Echo..5.str'
.5.str:	.type	object
	.size	.5.str,23
	.byte	116,99,112,95
	.byte	99,108,105,101
	.byte	110,116,95,99
	.byte	111,110,110,101
	.byte	99,116,101,100
	.byte	13,10
	.space	1
	.calls	'__INDIRECT__','echoAccept'
	.calls	'__INDIRECT__','echoRecv'
	.calls	'__INDIRECT__','echoError'
	.calls	'__INDIRECT__','echoPoll'
	.calls	'__INDIRECT__','echoSent'
	.calls	'__INDIRECT__','tcp_client_recv'
	.calls	'__INDIRECT__','tcp_client_connected'
	.calls	'echoInit','tcp_new'
	.calls	'echoInit','tcp_bind'
	.calls	'echoInit','tcp_listen_with_backlog'
	.calls	'echoInit','tcp_accept'
	.calls	'echoInit','Ifx_Lwip_printf'
	.calls	'echoAccept','mem_malloc'
	.calls	'echoAccept','memset'
	.calls	'echoAccept','tcp_arg'
	.calls	'echoAccept','tcp_recv'
	.calls	'echoAccept','tcp_sent'
	.calls	'echoAccept','tcp_err'
	.calls	'echoAccept','tcp_poll'
	.calls	'echoAccept','strlen'
	.calls	'echoAccept','tcp_write'
	.calls	'echoRecv','echoClose'
	.calls	'echoRecv','pbuf_free'
	.calls	'echoRecv','echoUnpack'
	.calls	'echoRecv','echoSend'
	.calls	'echoRecv','pbuf_chain'
	.calls	'echoRecv','tcp_recved'
	.calls	'echoError','mem_free'
	.calls	'echoPoll','echoUnpack'
	.calls	'echoPoll','echoSend'
	.calls	'echoPoll','echoClose'
	.calls	'echoPoll','tcp_abort'
	.calls	'echoSent','echoUnpack'
	.calls	'echoSent','echoSend'
	.calls	'echoSent','echoClose'
	.calls	'echoSend','tcp_write'
	.calls	'echoUnpack','memcpy'
	.calls	'echoUnpack','pbuf_ref'
	.calls	'echoUnpack','pbuf_free'
	.calls	'echoUnpack','tcp_recved'
	.calls	'echoClose','tcp_arg'
	.calls	'echoClose','tcp_sent'
	.calls	'echoClose','tcp_recv'
	.calls	'echoClose','tcp_err'
	.calls	'echoClose','tcp_poll'
	.calls	'echoClose','mem_free'
	.calls	'echoClose','tcp_close'
	.calls	'tcp_client_init','tcp_new'
	.calls	'tcp_client_init','tcp_bind'
	.calls	'tcp_client_init','tcp_connect'
	.calls	'tcp_client_init','memp_free'
	.calls	'tcp_client_recv','tcp_write'
	.calls	'tcp_client_recv','tcp_output'
	.calls	'tcp_client_recv','tcp_recved'
	.calls	'tcp_client_recv','pbuf_free'
	.calls	'tcp_client_recv','tcp_close'
	.calls	'tcp_client_connected','Ifx_Lwip_printf'
	.calls	'tcp_client_connected','tcp_recv'
	.calls	'tcp_client_connected','strlen'
	.calls	'tcp_client_connected','tcp_write'
	.calls	'tcp_client_connected','tcp_output'
	.calls	'echoInit','',0
	.calls	'echoAccept','',0
	.calls	'echoRecv','',0
	.calls	'echoError','',0
	.calls	'echoPoll','',0
	.calls	'echoSent','',0
	.calls	'echoSend','',0
	.calls	'echoUnpack','',0
	.calls	'echoClose','',0
	.calls	'tcp_client_init','',8
	.calls	'tcp_client_recv','',0
	.extern	strlen
	.extern	memcpy
	.extern	memset
	.extern	Ifx_Lwip_printf
	.extern	mem_malloc
	.extern	mem_free
	.extern	memp_free
	.extern	pbuf_ref
	.extern	pbuf_free
	.extern	pbuf_chain
	.extern	ip_addr_any
	.extern	tcp_new
	.extern	tcp_arg
	.extern	tcp_recv
	.extern	tcp_sent
	.extern	tcp_err
	.extern	tcp_accept
	.extern	tcp_poll
	.extern	tcp_recved
	.extern	tcp_bind
	.extern	tcp_connect
	.extern	tcp_listen_with_backlog
	.extern	tcp_abort
	.extern	tcp_close
	.extern	tcp_write
	.extern	tcp_output
	.extern	__INDIRECT__
	.calls	'tcp_client_connected','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L78:
	.word	5626
	.half	3
	.word	.L79
	.byte	4
.L77:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L80
	.byte	2
	.byte	'int',0,4,5,3
	.word	156
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	163
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.word	205
	.byte	7
	.word	205
	.byte	8
	.byte	'__cmpswapw',0
	.word	221
	.byte	1,1,1,1,9
	.byte	'p',0
	.word	226
	.byte	9
	.byte	'value',0
	.word	205
	.byte	9
	.byte	'compare',0
	.word	205
	.byte	0
.L148:
	.byte	2
	.byte	'char',0,1,6,2
	.byte	'unsigned long int',0,4,7
.L153:
	.byte	10
	.byte	'ip4_addr',0,2,51,8,4,11
	.byte	'addr',0
	.word	291
	.byte	4,2,35,0,0
.L206:
	.byte	2
	.byte	'unsigned char',0,1,8,12
	.byte	'void',0
.L159:
	.byte	7
	.word	358
	.byte	13
	.byte	'tcp_state',0,3,56,6,1,14
	.byte	'CLOSED',0,0,14
	.byte	'LISTEN',0,1,14
	.byte	'SYN_SENT',0,2,14
	.byte	'SYN_RCVD',0,3,14
	.byte	'ESTABLISHED',0,4,14
	.byte	'FIN_WAIT_1',0,5,14
	.byte	'FIN_WAIT_2',0,6,14
	.byte	'CLOSE_WAIT',0,7,14
	.byte	'CLOSING',0,8,14
	.byte	'LAST_ACK',0,9,14
	.byte	'TIME_WAIT',0,10,0
.L189:
	.byte	2
	.byte	'unsigned short int',0,2,7,2
	.byte	'short int',0,2,5,15
	.byte	'tcp_seg',0,1,210,2,10,1,7
	.word	546
	.byte	10
	.byte	'pbuf',0,4,186,1,8,16,11
	.byte	'next',0
	.word	.L214-.L78
	.byte	4,2,35,0,11
	.byte	'payload',0
	.word	364
	.byte	4,2,35,4,11
	.byte	'tot_len',0
	.word	511
	.byte	2,2,35,8,11
	.byte	'len',0
	.word	511
	.byte	2,2,35,10,11
	.byte	'type_internal',0
	.word	341
	.byte	1,2,35,12,11
	.byte	'flags',0
	.word	341
	.byte	1,2,35,13,11
	.byte	'ref',0
	.word	341
	.byte	1,2,35,14,11
	.byte	'if_idx',0
	.word	341
	.byte	1,2,35,15,0
.L214:
	.byte	7
	.word	565
	.byte	16
	.word	283
	.byte	1,1,5
	.word	364
	.byte	5
	.word	.L151-.L78
	.byte	5
	.word	283
	.byte	0,7
	.word	710
	.byte	17
	.byte	'tcp_accept_fn',0,1,70,17
	.word	733
	.byte	10
	.byte	'tcp_pcb_listen',0,1,223,1,8,28,11
	.byte	'local_ip',0
	.word	312
	.byte	4,2,35,0,11
	.byte	'remote_ip',0
	.word	312
	.byte	4,2,35,4,11
	.byte	'netif_idx',0
	.word	341
	.byte	1,2,35,8,11
	.byte	'so_options',0
	.word	341
	.byte	1,2,35,9,11
	.byte	'tos',0
	.word	341
	.byte	1,2,35,10,11
	.byte	'ttl',0
	.word	341
	.byte	1,2,35,11,11
	.byte	'next',0
	.word	.L343-.L78
	.byte	4,2,35,12,11
	.byte	'callback_arg',0
	.word	364
	.byte	4,2,35,16,11
	.byte	'state',0
	.word	369
	.byte	1,2,35,20,11
	.byte	'prio',0
	.word	341
	.byte	1,2,35,21,11
	.byte	'local_port',0
	.word	511
	.byte	2,2,35,22,11
	.byte	'accept',0
	.word	738
	.byte	4,2,35,24,0
.L343:
	.byte	7
	.word	760
	.byte	16
	.word	283
	.byte	1,1,5
	.word	364
	.byte	5
	.word	.L151-.L78
	.byte	5
	.word	511
	.byte	0,7
	.word	990
	.byte	17
	.byte	'tcp_sent_fn',0,1,96,17
	.word	1013
	.byte	16
	.word	283
	.byte	1,1,5
	.word	364
	.byte	5
	.word	.L151-.L78
	.byte	5
	.word	705
	.byte	5
	.word	283
	.byte	0,7
	.word	1038
	.byte	17
	.byte	'tcp_recv_fn',0,1,82,17
	.word	1066
	.byte	17
	.byte	'tcp_connected_fn',0,1,134,1,17
	.word	733
	.byte	16
	.word	283
	.byte	1,1,5
	.word	364
	.byte	5
	.word	.L151-.L78
	.byte	0,7
	.word	1117
	.byte	17
	.byte	'tcp_poll_fn',0,1,108,17
	.word	1135
	.byte	18,1,1,5
	.word	364
	.byte	5
	.word	283
	.byte	0,7
	.word	1160
	.byte	17
	.byte	'tcp_err_fn',0,1,120,17
	.word	1174
	.byte	10
	.byte	'tcp_pcb',0,1,242,1,8,156,1,11
	.byte	'local_ip',0
	.word	312
	.byte	4,2,35,0,11
	.byte	'remote_ip',0
	.word	312
	.byte	4,2,35,4,11
	.byte	'netif_idx',0
	.word	341
	.byte	1,2,35,8,11
	.byte	'so_options',0
	.word	341
	.byte	1,2,35,9,11
	.byte	'tos',0
	.word	341
	.byte	1,2,35,10,11
	.byte	'ttl',0
	.word	341
	.byte	1,2,35,11,11
	.byte	'next',0
	.word	.L151-.L78
	.byte	4,2,35,12,11
	.byte	'callback_arg',0
	.word	364
	.byte	4,2,35,16,11
	.byte	'state',0
	.word	369
	.byte	1,2,35,20,11
	.byte	'prio',0
	.word	341
	.byte	1,2,35,21,11
	.byte	'local_port',0
	.word	511
	.byte	2,2,35,22,11
	.byte	'remote_port',0
	.word	511
	.byte	2,2,35,24,11
	.byte	'flags',0
	.word	511
	.byte	2,2,35,26,11
	.byte	'polltmr',0
	.word	341
	.byte	1,2,35,28,11
	.byte	'pollinterval',0
	.word	341
	.byte	1,2,35,29,11
	.byte	'last_timer',0
	.word	341
	.byte	1,2,35,30,11
	.byte	'tmr',0
	.word	291
	.byte	4,2,35,32,11
	.byte	'rcv_nxt',0
	.word	291
	.byte	4,2,35,36,11
	.byte	'rcv_wnd',0
	.word	511
	.byte	2,2,35,40,11
	.byte	'rcv_ann_wnd',0
	.word	511
	.byte	2,2,35,42,11
	.byte	'rcv_ann_right_edge',0
	.word	291
	.byte	4,2,35,44,11
	.byte	'rtime',0
	.word	533
	.byte	2,2,35,48,11
	.byte	'mss',0
	.word	511
	.byte	2,2,35,50,11
	.byte	'rttest',0
	.word	291
	.byte	4,2,35,52,11
	.byte	'rtseq',0
	.word	291
	.byte	4,2,35,56,11
	.byte	'sa',0
	.word	533
	.byte	2,2,35,60,11
	.byte	'sv',0
	.word	533
	.byte	2,2,35,62,11
	.byte	'rto',0
	.word	533
	.byte	2,2,35,64,11
	.byte	'nrtx',0
	.word	341
	.byte	1,2,35,66,11
	.byte	'dupacks',0
	.word	341
	.byte	1,2,35,67,11
	.byte	'lastack',0
	.word	291
	.byte	4,2,35,68,11
	.byte	'cwnd',0
	.word	511
	.byte	2,2,35,72,11
	.byte	'ssthresh',0
	.word	511
	.byte	2,2,35,74,11
	.byte	'rto_end',0
	.word	291
	.byte	4,2,35,76,11
	.byte	'snd_nxt',0
	.word	291
	.byte	4,2,35,80,11
	.byte	'snd_wl1',0
	.word	291
	.byte	4,2,35,84,11
	.byte	'snd_wl2',0
	.word	291
	.byte	4,2,35,88,11
	.byte	'snd_lbb',0
	.word	291
	.byte	4,2,35,92,11
	.byte	'snd_wnd',0
	.word	511
	.byte	2,2,35,96,11
	.byte	'snd_wnd_max',0
	.word	511
	.byte	2,2,35,98,11
	.byte	'snd_buf',0
	.word	511
	.byte	2,2,35,100,11
	.byte	'snd_queuelen',0
	.word	511
	.byte	2,2,35,102,11
	.byte	'unsent_oversize',0
	.word	511
	.byte	2,2,35,104,11
	.byte	'bytes_acked',0
	.word	511
	.byte	2,2,35,106,11
	.byte	'unsent',0
	.word	560
	.byte	4,2,35,108,11
	.byte	'unacked',0
	.word	560
	.byte	4,2,35,112,11
	.byte	'ooseq',0
	.word	560
	.byte	4,2,35,116,11
	.byte	'refused_data',0
	.word	705
	.byte	4,2,35,120,11
	.byte	'listener',0
	.word	985
	.byte	4,2,35,124,11
	.byte	'sent',0
	.word	1018
	.byte	4,3,35,128,1,11
	.byte	'recv',0
	.word	1071
	.byte	4,3,35,132,1,11
	.byte	'connected',0
	.word	1091
	.byte	4,3,35,136,1,11
	.byte	'poll',0
	.word	1140
	.byte	4,3,35,140,1,11
	.byte	'errf',0
	.word	1179
	.byte	4,3,35,144,1,11
	.byte	'keep_idle',0
	.word	291
	.byte	4,3,35,148,1,11
	.byte	'persist_cnt',0
	.word	341
	.byte	1,3,35,152,1,11
	.byte	'persist_backoff',0
	.word	341
	.byte	1,3,35,153,1,11
	.byte	'persist_probe',0
	.word	341
	.byte	1,3,35,154,1,11
	.byte	'keep_cnt_sent',0
	.word	341
	.byte	1,3,35,155,1,0
.L151:
	.byte	7
	.word	1198
	.byte	7
	.word	710
	.byte	7
	.word	990
	.byte	7
	.word	1038
	.byte	7
	.word	710
	.byte	7
	.word	1117
	.byte	7
	.word	1160
	.byte	2
	.byte	'char',0,1,6,3
	.word	2295
	.byte	7
	.word	2303
	.byte	19
	.byte	'strlen',0,5,52,17
	.word	205
	.byte	1,1,1,1,20,5,52,39
	.word	2308
	.byte	0,21
	.word	364
	.byte	3
	.word	358
	.byte	7
	.word	2346
	.byte	21
	.word	2351
	.byte	19
	.byte	'memcpy',0,5,53,17
	.word	364
	.byte	1,1,1,1,20,5,53,33
	.word	2341
	.byte	20,5,53,56
	.word	2356
	.byte	20,5,53,68
	.word	205
	.byte	0,19
	.byte	'memset',0,5,56,17
	.word	364
	.byte	1,1,1,1,20,5,56,33
	.word	364
	.byte	20,5,56,36
	.word	156
	.byte	20,5,56,41
	.word	205
	.byte	0,19
	.byte	'Ifx_Lwip_printf',0,6,123,6
	.word	283
	.byte	1,1,1,1,22
	.byte	's',0,6,123,34
	.word	2308
	.byte	23,6,123,37,0,19
	.byte	'mem_malloc',0,7,74,7
	.word	364
	.byte	1,1,1,1,22
	.byte	'size',0,7,74,29
	.word	511
	.byte	0,24
	.byte	'mem_free',0,7,76,7,1,1,1,1,22
	.byte	'mem',0,7,76,22
	.word	364
	.byte	0,25,8,52,9,1,14
	.byte	'MEMP_UDP_PCB',0,0,14
	.byte	'MEMP_TCP_PCB',0,1,14
	.byte	'MEMP_TCP_PCB_LISTEN',0,2,14
	.byte	'MEMP_TCP_SEG',0,3,14
	.byte	'MEMP_REASSDATA',0,4,14
	.byte	'MEMP_FRAG_PBUF',0,5,14
	.byte	'MEMP_SYS_TIMEOUT',0,6,14
	.byte	'MEMP_PBUF',0,7,14
	.byte	'MEMP_PBUF_POOL',0,8,14
	.byte	'MEMP_MAX',0,9,0,24
	.byte	'memp_free',0,8,149,1,7,1,1,1,1,22
	.byte	'type',0,8,149,1,24
	.word	2559
	.byte	22
	.byte	'mem',0,8,149,1,36
	.word	364
	.byte	0,24
	.byte	'pbuf_ref',0,4,164,2,6,1,1,1,1,22
	.byte	'p',0,4,164,2,28
	.word	705
	.byte	0,19
	.byte	'pbuf_free',0,4,165,2,6
	.word	341
	.byte	1,1,1,1,22
	.byte	'p',0,4,165,2,29
	.word	705
	.byte	0,24
	.byte	'pbuf_chain',0,4,168,2,6,1,1,1,1,22
	.byte	'head',0,4,168,2,30
	.word	705
	.byte	22
	.byte	'tail',0,4,168,2,49
	.word	705
	.byte	0,26
	.byte	'tcp_new',0,1,155,3,18
	.word	2260
	.byte	1,1,1,1,24
	.byte	'tcp_arg',0,1,158,3,18,1,1,1,1,22
	.byte	'pcb',0,1,158,3,47
	.word	2260
	.byte	22
	.byte	'arg',0,1,158,3,58
	.word	364
	.byte	0,24
	.byte	'tcp_recv',0,1,160,3,18,1,1,1,1,22
	.byte	'pcb',0,1,160,3,47
	.word	2260
	.byte	22
	.byte	'recv',0,1,160,3,64
	.word	1071
	.byte	0,24
	.byte	'tcp_sent',0,1,161,3,18,1,1,1,1,22
	.byte	'pcb',0,1,161,3,47
	.word	2260
	.byte	22
	.byte	'sent',0,1,161,3,64
	.word	1018
	.byte	0,24
	.byte	'tcp_err',0,1,162,3,18,1,1,1,1,22
	.byte	'pcb',0,1,162,3,47
	.word	2260
	.byte	22
	.byte	'err',0,1,162,3,63
	.word	1179
	.byte	0,24
	.byte	'tcp_accept',0,1,163,3,18,1,1,1,1,22
	.byte	'pcb',0,1,163,3,47
	.word	2260
	.byte	22
	.byte	'accept',0,1,163,3,66
	.word	738
	.byte	0,24
	.byte	'tcp_poll',0,1,165,3,18,1,1,1,1,22
	.byte	'pcb',0,1,165,3,47
	.word	2260
	.byte	22
	.byte	'poll',0,1,165,3,64
	.word	1140
	.byte	22
	.byte	'interval',0,1,165,3,75
	.word	341
	.byte	0,24
	.byte	'tcp_recved',0,1,201,3,18,1,1,1,1,22
	.byte	'pcb',0,1,201,3,47
	.word	2260
	.byte	22
	.byte	'len',0,1,201,3,58
	.word	511
	.byte	0,3
	.word	312
	.byte	7
	.word	3248
	.byte	19
	.byte	'tcp_bind',0,1,202,3,18
	.word	283
	.byte	1,1,1,1,22
	.byte	'pcb',0,1,202,3,47
	.word	2260
	.byte	22
	.byte	'ipaddr',0,1,202,3,69
	.word	3253
	.byte	22
	.byte	'port',0,1,203,3,37
	.word	511
	.byte	0,19
	.byte	'tcp_connect',0,1,205,3,18
	.word	283
	.byte	1,1,1,1,22
	.byte	'pcb',0,1,205,3,47
	.word	2260
	.byte	22
	.byte	'ipaddr',0,1,205,3,69
	.word	3253
	.byte	22
	.byte	'port',0,1,206,3,37
	.word	511
	.byte	22
	.byte	'connected',0,1,206,3,60
	.word	1091
	.byte	0,19
	.byte	'tcp_listen_with_backlog',0,1,209,3,18
	.word	2260
	.byte	1,1,1,1,22
	.byte	'pcb',0,1,209,3,58
	.word	2260
	.byte	22
	.byte	'backlog',0,1,209,3,68
	.word	341
	.byte	0,24
	.byte	'tcp_abort',0,1,213,3,18,1,1,1,1,22
	.byte	'pcb',0,1,213,3,45
	.word	2260
	.byte	0,19
	.byte	'tcp_close',0,1,214,3,18
	.word	283
	.byte	1,1,1,1,22
	.byte	'pcb',0,1,214,3,47
	.word	2260
	.byte	0,19
	.byte	'tcp_write',0,1,217,3,18
	.word	283
	.byte	1,1,1,1,22
	.byte	'pcb',0,1,217,3,47
	.word	2260
	.byte	22
	.byte	'dataptr',0,1,217,3,64
	.word	2351
	.byte	22
	.byte	'len',0,1,217,3,79
	.word	511
	.byte	22
	.byte	'apiflags',0,1,218,3,36
	.word	341
	.byte	0,19
	.byte	'tcp_output',0,1,222,3,18
	.word	283
	.byte	1,1,1,1,22
	.byte	'pcb',0,1,222,3,47
	.word	2260
	.byte	0
.L161:
	.byte	7
	.word	1198
.L171:
	.byte	7
	.word	565
	.byte	27,128,2
	.word	2295
	.byte	28,255,1,0,29,9,89,9,144,2,11
	.byte	'state',0
	.word	341
	.byte	1,2,35,0,11
	.byte	'pcb',0
	.word	3673
	.byte	4,2,35,4,11
	.byte	'p',0
	.word	3678
	.byte	4,2,35,8,11
	.byte	'storage',0
	.word	3683
	.byte	128,2,2,35,12,11
	.byte	'nextFreeStoragePos',0
	.word	511
	.byte	2,3,35,140,2,0
.L166:
	.byte	7
	.word	3694
.L217:
	.byte	27,200,1
	.word	341
	.byte	28,199,1,0,30
	.byte	'__INDIRECT__',0,9,1,1,1,1,1,17
	.byte	'__wchar_t',0,9,1,1
	.word	533
	.byte	17
	.byte	'__size_t',0,9,1,1
	.word	205
	.byte	17
	.byte	'__ptrdiff_t',0,9,1,1
	.word	156
	.byte	31,1,7
	.word	3878
	.byte	17
	.byte	'__codeptr',0,9,1,1
	.word	3880
	.byte	17
	.byte	'__intptr_t',0,9,1,1
	.word	156
	.byte	17
	.byte	'__uintptr_t',0,9,1,1
	.word	205
	.byte	17
	.byte	'size_t',0,5,29,25
	.word	205
	.byte	17
	.byte	'uint8',0,10,108,29
	.word	341
	.byte	17
	.byte	'uint16',0,10,112,29
	.word	511
	.byte	17
	.byte	'uint32',0,10,116,29
	.word	291
	.byte	17
	.byte	'sint8',0,10,125,29
	.word	283
	.byte	17
	.byte	'sint16',0,10,129,1,29
	.word	533
	.byte	2
	.byte	'long int',0,4,5,17
	.byte	'sint32',0,10,134,1,29
	.word	4031
	.byte	2
	.byte	'long long int',0,8,5,17
	.byte	'sint64',0,10,141,1,29
	.word	4059
	.byte	2
	.byte	'float',0,4,4,17
	.byte	'float32',0,10,170,1,29
	.word	4092
	.byte	17
	.byte	'pvoid',0,11,54,28
	.word	364
	.byte	17
	.byte	'Ifx_TickTime',0,11,76,28
	.word	4059
	.byte	17
	.byte	'u8_t',0,6,85,16
	.word	341
	.byte	17
	.byte	'u16_t',0,6,86,16
	.word	511
	.byte	17
	.byte	'u32_t',0,6,87,16
	.word	291
	.byte	17
	.byte	's8_t',0,6,88,16
	.word	283
	.byte	17
	.byte	's16_t',0,6,89,16
	.word	533
	.byte	17
	.byte	'intmax_t',0,12,198,2,41
	.word	4059
	.byte	17
	.byte	'mem_size_t',0,7,67,15
	.word	511
	.byte	17
	.byte	'memp_t',0,8,56,3
	.word	2559
	.byte	17
	.byte	'tcpwnd_size_t',0,3,53,15
	.word	511
	.byte	17
	.byte	'err_t',0,13,96,14
	.word	283
	.byte	18,1,1,5
	.word	705
	.byte	0,7
	.word	4309
	.byte	17
	.byte	'pbuf_free_custom_fn',0,4,242,1,16
	.word	4318
	.byte	17
	.byte	'ip4_addr_t',0,2,57,25
	.word	312
	.byte	17
	.byte	'ip_addr_t',0,14,142,2,20
	.word	312
	.byte	3
	.word	312
	.byte	32
	.byte	'ip_addr_any',0,14,241,2,24
	.word	4390
	.byte	1,1,3
	.word	312
	.byte	7
	.word	4418
	.byte	16
	.word	283
	.byte	1,1,5
	.word	.L344-.L78
	.byte	5
	.word	705
	.byte	5
	.word	4423
	.byte	0,7
	.word	4428
	.byte	17
	.byte	'netif_output_fn',0,15,189,1,17
	.word	4451
	.byte	16
	.word	283
	.byte	1,1,5
	.word	.L344-.L78
	.byte	5
	.word	705
	.byte	0,7
	.word	4481
	.byte	17
	.byte	'netif_linkoutput_fn',0,15,212,1,17
	.word	4499
	.byte	27,6
	.word	341
	.byte	28,5,0,27,2
	.word	2295
	.byte	28,1,0,10
	.byte	'netif',0,15,132,2,8,48,11
	.byte	'next',0
	.word	.L344-.L78
	.byte	4,2,35,0,11
	.byte	'ip_addr',0
	.word	312
	.byte	4,2,35,4,11
	.byte	'netmask',0
	.word	312
	.byte	4,2,35,8,11
	.byte	'gw',0
	.word	312
	.byte	4,2,35,12,11
	.byte	'input',0
	.word	.L345-.L78
	.byte	4,2,35,16,11
	.byte	'output',0
	.word	4456
	.byte	4,2,35,20,11
	.byte	'linkoutput',0
	.word	4504
	.byte	4,2,35,24,11
	.byte	'state',0
	.word	364
	.byte	4,2,35,28,11
	.byte	'mtu',0
	.word	511
	.byte	2,2,35,32,11
	.byte	'hwaddr',0
	.word	4533
	.byte	6,2,35,34,11
	.byte	'hwaddr_len',0
	.word	341
	.byte	1,2,35,40,11
	.byte	'flags',0
	.word	341
	.byte	1,2,35,41,11
	.byte	'name',0
	.word	4542
	.byte	2,2,35,42,11
	.byte	'num',0
	.word	341
	.byte	1,2,35,44,11
	.byte	'rs_count',0
	.word	341
	.byte	1,2,35,45,0
.L344:
	.byte	7
	.word	4551
	.byte	16
	.word	283
	.byte	1,1,5
	.word	705
	.byte	5
	.word	4799
	.byte	0,7
	.word	4804
.L345:
	.byte	17
	.byte	'netif_input_fn',0,15,178,1,17
	.word	4822
	.byte	7
	.word	4804
	.byte	7
	.word	4428
	.byte	7
	.word	4481
	.byte	10
	.byte	'link_changed_s',0,15,213,4,10,1,11
	.byte	'state',0
	.word	341
	.byte	1,2,35,0,0,10
	.byte	'status_changed_s',0,15,219,4,10,1,11
	.byte	'state',0
	.word	341
	.byte	1,2,35,0,0,10
	.byte	'ipv4_changed_s',0,15,225,4,10,12,11
	.byte	'old_address',0
	.word	3253
	.byte	4,2,35,0,11
	.byte	'old_netmask',0
	.word	3253
	.byte	4,2,35,4,11
	.byte	'old_gw',0
	.word	3253
	.byte	4,2,35,8,0,10
	.byte	'ipv6_set_s',0,15,233,4,10,8,11
	.byte	'addr_index',0
	.word	283
	.byte	1,2,35,0,11
	.byte	'old_address',0
	.word	3253
	.byte	4,2,35,4,0,10
	.byte	'ipv6_addr_state_changed_s',0,15,241,4,10,8,11
	.byte	'addr_index',0
	.word	283
	.byte	1,2,35,0,11
	.byte	'old_state',0
	.word	341
	.byte	1,2,35,1,11
	.byte	'address',0
	.word	3253
	.byte	4,2,35,4,0,33,15,210,4,9,12,11
	.byte	'link_changed',0
	.word	4866
	.byte	1,2,35,0,11
	.byte	'status_changed',0
	.word	4903
	.byte	1,2,35,0,11
	.byte	'ipv4_changed',0
	.word	4942
	.byte	12,2,35,0,11
	.byte	'ipv6_set',0
	.word	5022
	.byte	8,2,35,0,11
	.byte	'ipv6_addr_state_changed',0
	.word	5081
	.byte	8,2,35,0,0,3
	.word	5170
	.byte	7
	.word	5296
	.byte	18,1,1,5
	.word	4799
	.byte	5
	.word	511
	.byte	5
	.word	5301
	.byte	0,7
	.word	5306
	.byte	17
	.byte	'netif_ext_callback_fn',0,15,132,5,16
	.word	5325
	.byte	10
	.byte	'ip4_addr_packed',0,16,53,8,4,11
	.byte	'addr',0
	.word	291
	.byte	4,2,35,0,0,17
	.byte	'ip4_addr_p_t',0,16,61,32
	.word	5361
	.byte	18,1,1,5
	.word	341
	.byte	5
	.word	364
	.byte	0,7
	.word	5418
	.byte	17
	.byte	'tcp_extarg_callback_pcb_destroyed_fn',0,1,173,1,16
	.word	5432
	.byte	16
	.word	283
	.byte	1,1,5
	.word	341
	.byte	5
	.word	985
	.byte	5
	.word	2260
	.byte	0,7
	.word	5483
	.byte	17
	.byte	'tcp_extarg_callback_passive_open_fn',0,1,182,1,17
	.word	5506
	.byte	17
	.byte	'tcpflags_t',0,1,206,1,15
	.word	511
	.byte	17
	.byte	'tcpPcb',0,9,86,24
	.word	1198
	.byte	17
	.byte	'pBuf',0,9,87,21
	.word	565
	.byte	17
	.byte	'EchoSession',0,9,96,3
	.word	3694
.L223:
	.byte	7
	.word	2295
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L79:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,46,1,3,8,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,9,5,0,3,8,73,19,0,0,10,19,1,3,8,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,12,59,0,3,8,0,0,13,4,1,3,8,58,15,59,15,57,15,11,15,0,0,14,40,0,3,8,28,13,0,0,15,19,0,3,8,58,15,59
	.byte	15,57,15,60,12,0,0,16,21,1,73,19,54,15,39,12,0,0,17,22,0,3,8,58,15,59,15,57,15,73,19,0,0,18,21,1,54,15
	.byte	39,12,0,0,19,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,20,5,0,58,15,59,15,57,15,73
	.byte	19,0,0,21,55,0,73,19,0,0,22,5,0,3,8,58,15,59,15,57,15,73,19,0,0,23,24,0,58,15,59,15,57,15,0,0,24,46,1
	.byte	3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,25,4,1,58,15,59,15,57,15,11,15,0,0,26,46,0,3,8,58,15
	.byte	59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,27,1,1,11,15,73,19,0,0,28,33,0,47,15,0,0,29,19,1,58,15,59
	.byte	15,57,15,11,15,0,0,30,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,31,21,0,54,15,0,0,32,52,0,3,8,58
	.byte	15,59,15,57,15,73,19,63,12,60,12,0,0,33,23,1,58,15,59,15,57,15,11,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L80:
	.word	.L347-.L346
.L346:
	.half	3
	.word	.L349-.L348
.L348:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot',0
	.byte	0
	.byte	'tcp.h',0,1,0,0
	.byte	'ip4_addr.h',0,1,0,0
	.byte	'tcpbase.h',0,1,0,0
	.byte	'pbuf.h',0,1,0,0
	.byte	'string.h',0,2,0,0
	.byte	'cc.h',0,3,0,0
	.byte	'mem.h',0,1,0,0
	.byte	'memp.h',0,1,0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0
	.byte	'Platform_Types.h',0,4,0,0
	.byte	'Ifx_Types.h',0,4,0,0
	.byte	'stdint.h',0,2,0,0
	.byte	'err.h',0,1,0,0
	.byte	'ip_addr.h',0,1,0,0
	.byte	'netif.h',0,1,0,0
	.byte	'ip4.h',0,5,0,0,0
.L349:
.L347:
	.sdecl	'.debug_info',debug,cluster('echoInit')
	.sect	'.debug_info'
.L81:
	.word	229
	.half	3
	.word	.L82
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L84,.L83
	.byte	2
	.word	.L77
	.byte	3
	.byte	'echoInit',0,1,136,1,6,1,1,1
	.word	.L54,.L145,.L53
	.byte	4
	.word	.L54,.L145
	.byte	4
	.word	.L146,.L147
	.byte	5
	.byte	'err',0,1,141,1,15
	.word	.L148,.L149
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('echoInit')
	.sect	'.debug_abbrev'
.L82:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('echoInit')
	.sect	'.debug_line'
.L83:
	.word	.L351-.L350
.L350:
	.half	3
	.word	.L353-.L352
.L352:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L353:
	.byte	5,24,7,0,5,2
	.word	.L54
	.byte	3,137,1,1,5,15,9
	.half	.L354-.L54
	.byte	1,5,9,9
	.half	.L355-.L354
	.byte	3,1,1,5,5,9
	.half	.L356-.L355
	.byte	1,5,41,7,9
	.half	.L146-.L356
	.byte	3,2,1,5,54,9
	.half	.L357-.L146
	.byte	1,5,9,9
	.half	.L224-.L357
	.byte	3,1,1,5,25,7,9
	.half	.L358-.L224
	.byte	3,2,1,5,23,9
	.half	.L225-.L358
	.byte	1,5,24,9
	.half	.L359-.L225
	.byte	3,1,1,5,35,9
	.half	.L360-.L359
	.byte	1,5,13,9
	.half	.L3-.L360
	.byte	3,4,1,5,9,9
	.half	.L147-.L3
	.byte	3,126,1,9
	.half	.L2-.L147
	.byte	3,7,1,5,1,9
	.half	.L85-.L2
	.byte	3,2,0,1,1
.L351:
	.sdecl	'.debug_ranges',debug,cluster('echoInit')
	.sect	'.debug_ranges'
.L84:
	.word	-1,.L54,0,.L85-.L54,0,0
	.sdecl	'.debug_info',debug,cluster('tcp_client_init')
	.sect	'.debug_info'
.L86:
	.word	272
	.half	3
	.word	.L87
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L89,.L88
	.byte	2
	.word	.L77
	.byte	3
	.byte	'tcp_client_init',0,1,142,3,7,1,1,1
	.word	.L72,.L150,.L71
	.byte	4
	.word	.L72,.L150
	.byte	5
	.byte	'tpcb',0,1,147,3,21
	.word	.L151,.L152
	.byte	5
	.byte	'serverIp',0,1,149,3,16
	.word	.L153,.L154
	.byte	6
	.word	.L155
	.byte	5
	.byte	'err',0,1,157,3,16
	.word	.L148,.L157
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('tcp_client_init')
	.sect	'.debug_abbrev'
.L87:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,11,1
	.byte	85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('tcp_client_init')
	.sect	'.debug_line'
.L88:
	.word	.L362-.L361
.L361:
	.half	3
	.word	.L364-.L363
.L363:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L364:
	.byte	5,7,7,0,5,2
	.word	.L72
	.byte	3,141,3,1,5,6,9
	.half	.L313-.L72
	.byte	3,8,1,5,20,9
	.half	.L365-.L313
	.byte	3,3,1,5,11,9
	.half	.L314-.L365
	.byte	1,5,6,9
	.half	.L316-.L314
	.byte	3,2,1,5,31,7,9
	.half	.L156-.L316
	.byte	3,4,1,5,44,9
	.half	.L366-.L156
	.byte	1,5,10,9
	.half	.L317-.L366
	.byte	3,2,1,5,33,7,9
	.half	.L367-.L317
	.byte	3,3,1,5,43,9
	.half	.L368-.L367
	.byte	1,5,60,1,5,2,9
	.half	.L43-.L368
	.byte	3,7,1,5,24,7,9
	.half	.L44-.L43
	.byte	3,125,1,5,38,1,5,2,9
	.half	.L90-.L44
	.byte	3,3,0,1,1
.L362:
	.sdecl	'.debug_ranges',debug,cluster('tcp_client_init')
	.sect	'.debug_ranges'
.L89:
	.word	-1,.L72,0,.L90-.L72,0,0
.L155:
	.word	-1,.L72,.L156-.L72,.L43-.L72,.L44-.L72,.L150-.L72,0,0
	.sdecl	'.debug_info',debug,cluster('echoAccept')
	.sect	'.debug_info'
.L91:
	.word	308
	.half	3
	.word	.L92
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L94,.L93
	.byte	2
	.word	.L77
	.byte	3
	.byte	'echoAccept',0,1,159,1,7
	.word	.L148
	.byte	1,1,1
	.word	.L56,.L158,.L55
	.byte	4
	.byte	'arg',0,1,159,1,24
	.word	.L159,.L160
	.byte	4
	.byte	'newPcb',0,1,159,1,37
	.word	.L161,.L162
	.byte	4
	.byte	'err',0,1,159,1,51
	.word	.L148,.L163
	.byte	5
	.word	.L56,.L158
	.byte	5
	.word	.L164,.L158
	.byte	6
	.byte	'retErr',0,1,164,1,11
	.word	.L148,.L165
	.byte	6
	.byte	'es',0,1,165,1,18
	.word	.L166,.L167
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('echoAccept')
	.sect	'.debug_abbrev'
.L92:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('echoAccept')
	.sect	'.debug_line'
.L93:
	.word	.L370-.L369
.L369:
	.half	3
	.word	.L372-.L371
.L371:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L372:
	.byte	5,7,7,0,5,2
	.word	.L56
	.byte	3,158,1,1,5,49,9
	.half	.L164-.L56
	.byte	3,6,1,5,21,9
	.half	.L226-.L164
	.byte	1,5,5,9
	.half	.L228-.L226
	.byte	3,1,1,5,21,7,9
	.half	.L373-.L228
	.byte	3,2,1,5,19,1,5,29,9
	.half	.L374-.L373
	.byte	3,3,1,5,17,3,126,1,5,32,9
	.half	.L375-.L374
	.byte	3,2,1,5,17,3,127,1,5,15,9
	.half	.L227-.L375
	.byte	1,5,18,9
	.half	.L376-.L227
	.byte	3,1,1,5,32,9
	.half	.L377-.L376
	.byte	1,5,34,9
	.half	.L378-.L377
	.byte	3,1,1,5,32,1,5,25,9
	.half	.L379-.L378
	.byte	3,2,1,5,26,9
	.half	.L230-.L379
	.byte	3,1,1,9
	.half	.L233-.L230
	.byte	3,1,1,5,25,9
	.half	.L235-.L233
	.byte	3,1,1,5,26,9
	.half	.L237-.L235
	.byte	3,1,1,5,36,9
	.half	.L380-.L237
	.byte	1,5,42,9
	.half	.L239-.L380
	.byte	3,5,1,5,41,9
	.half	.L381-.L239
	.byte	1,5,51,1,5,27,9
	.half	.L240-.L381
	.byte	1,5,51,9
	.half	.L382-.L240
	.byte	1,5,32,9
	.half	.L241-.L382
	.byte	3,113,1,5,16,9
	.half	.L6-.L241
	.byte	3,19,1,5,5,9
	.half	.L7-.L6
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L95-.L7
	.byte	0,1,1
.L370:
	.sdecl	'.debug_ranges',debug,cluster('echoAccept')
	.sect	'.debug_ranges'
.L94:
	.word	-1,.L56,0,.L95-.L56,0,0
	.sdecl	'.debug_info',debug,cluster('echoRecv')
	.sect	'.debug_info'
.L96:
	.word	318
	.half	3
	.word	.L97
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L99,.L98
	.byte	2
	.word	.L77
	.byte	3
	.byte	'echoRecv',0,1,193,1,7
	.word	.L148
	.byte	1,1,1
	.word	.L58,.L168,.L57
	.byte	4
	.byte	'arg',0,1,193,1,23
	.word	.L159,.L169
	.byte	4
	.byte	'tpcb',0,1,193,1,36
	.word	.L161,.L170
	.byte	4
	.byte	'p',0,1,193,1,48
	.word	.L171,.L172
	.byte	4
	.byte	'err',0,1,193,1,57
	.word	.L148,.L173
	.byte	5
	.word	.L58,.L168
	.byte	6
	.byte	'retErr',0,1,195,1,11
	.word	.L148,.L174
	.byte	6
	.byte	'es',0,1,196,1,18
	.word	.L166,.L175
	.byte	7
	.word	.L17,.L176
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('echoRecv')
	.sect	'.debug_abbrev'
.L97:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('echoRecv')
	.sect	'.debug_line'
.L98:
	.word	.L384-.L383
.L383:
	.half	3
	.word	.L386-.L385
.L385:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L386:
	.byte	5,7,7,0,5,2
	.word	.L58
	.byte	3,192,1,1,5,5,9
	.half	.L246-.L58
	.byte	3,5,1,5,21,7,9
	.half	.L247-.L246
	.byte	3,2,1,5,19,1,5,15,9
	.half	.L248-.L247
	.byte	3,1,1,5,9,9
	.half	.L387-.L248
	.byte	1,5,29,7,9
	.half	.L388-.L387
	.byte	3,2,1,5,32,9
	.half	.L243-.L388
	.byte	1,5,10,9
	.half	.L9-.L243
	.byte	3,9,1,5,21,7,9
	.half	.L389-.L9
	.byte	3,5,1,5,19,9
	.half	.L390-.L389
	.byte	1,5,23,9
	.half	.L391-.L390
	.byte	3,1,1,5,21,9
	.half	.L251-.L391
	.byte	3,2,1,5,16,9
	.half	.L12-.L251
	.byte	3,2,1,5,10,9
	.half	.L252-.L12
	.byte	1,5,21,7,9
	.half	.L392-.L252
	.byte	3,2,1,5,19,1,5,33,9
	.half	.L393-.L392
	.byte	1,5,10,9
	.half	.L14-.L393
	.byte	3,6,1,5,15,7,9
	.half	.L394-.L14
	.byte	3,2,1,5,9,9
	.half	.L253-.L394
	.byte	1,5,19,7,9
	.half	.L15-.L253
	.byte	3,2,1,5,30,9
	.half	.L10-.L15
	.byte	3,1,1,5,28,9
	.half	.L254-.L10
	.byte	3,1,1,5,22,9
	.half	.L258-.L254
	.byte	3,126,1,5,29,9
	.half	.L17-.L258
	.byte	3,7,1,5,24,9
	.half	.L176-.L17
	.byte	3,2,1,5,27,9
	.half	.L16-.L176
	.byte	3,4,1,5,17,9
	.half	.L263-.L16
	.byte	3,1,1,5,15,9
	.half	.L395-.L263
	.byte	1,5,19,9
	.half	.L396-.L395
	.byte	3,1,1,5,16,9
	.half	.L11-.L396
	.byte	3,1,1,5,5,9
	.half	.L13-.L11
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L100-.L13
	.byte	0,1,1
.L384:
	.sdecl	'.debug_ranges',debug,cluster('echoRecv')
	.sect	'.debug_ranges'
.L99:
	.word	-1,.L58,0,.L100-.L58,0,0
	.sdecl	'.debug_info',debug,cluster('echoError')
	.sect	'.debug_info'
.L101:
	.word	263
	.half	3
	.word	.L102
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L104,.L103
	.byte	2
	.word	.L77
	.byte	3
	.byte	'echoError',0,1,128,2,6,1,1,1
	.word	.L60,.L177,.L59
	.byte	4
	.byte	'arg',0,1,128,2,22
	.word	.L159,.L178
	.byte	4
	.byte	'err',0,1,128,2,33
	.word	.L148,.L179
	.byte	5
	.word	.L60,.L177
	.byte	5
	.word	.L60,.L177
	.byte	6
	.byte	'es',0,1,132,2,18
	.word	.L166,.L180
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('echoError')
	.sect	'.debug_abbrev'
.L102:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('echoError')
	.sect	'.debug_line'
.L103:
	.word	.L398-.L397
.L397:
	.half	3
	.word	.L400-.L399
.L399:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L400:
	.byte	5,5,7,0,5,2
	.word	.L60
	.byte	3,133,2,1,5,18,7,9
	.half	.L401-.L60
	.byte	3,2,1,5,1,7,9
	.half	.L21-.L401
	.byte	3,2,1,7,9
	.half	.L105-.L21
	.byte	0,1,1
.L398:
	.sdecl	'.debug_ranges',debug,cluster('echoError')
	.sect	'.debug_ranges'
.L104:
	.word	-1,.L60,0,.L105-.L60,0,0
	.sdecl	'.debug_info',debug,cluster('echoPoll')
	.sect	'.debug_info'
.L106:
	.word	277
	.half	3
	.word	.L107
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L109,.L108
	.byte	2
	.word	.L77
	.byte	3
	.byte	'echoPoll',0,1,141,2,7
	.word	.L148
	.byte	1,1,1
	.word	.L62,.L181,.L61
	.byte	4
	.byte	'arg',0,1,141,2,22
	.word	.L159,.L182
	.byte	4
	.byte	'tpcb',0,1,141,2,35
	.word	.L161,.L183
	.byte	5
	.word	.L62,.L181
	.byte	6
	.byte	'retErr',0,1,143,2,11
	.word	.L148,.L184
	.byte	6
	.byte	'es',0,1,144,2,18
	.word	.L166,.L185
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('echoPoll')
	.sect	'.debug_abbrev'
.L107:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('echoPoll')
	.sect	'.debug_line'
.L108:
	.word	.L403-.L402
.L402:
	.half	3
	.word	.L405-.L404
.L404:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L405:
	.byte	5,7,7,0,5,2
	.word	.L62
	.byte	3,140,2,1,5,5,9
	.half	.L267-.L62
	.byte	3,5,1,5,15,7,9
	.half	.L406-.L267
	.byte	3,2,1,5,13,9
	.half	.L407-.L406
	.byte	1,5,15,7,9
	.half	.L408-.L407
	.byte	3,1,1,5,36,9
	.half	.L409-.L408
	.byte	1,5,30,7,9
	.half	.L23-.L409
	.byte	3,2,1,5,28,9
	.half	.L268-.L23
	.byte	3,1,1,5,33,9
	.half	.L271-.L268
	.byte	3,127,1,5,19,9
	.half	.L24-.L271
	.byte	3,5,1,5,13,9
	.half	.L410-.L24
	.byte	1,5,33,7,9
	.half	.L411-.L410
	.byte	3,2,1,5,16,9
	.half	.L25-.L411
	.byte	3,3,1,5,1,3,8,1,5,19,7,9
	.half	.L22-.L25
	.byte	3,124,1,5,16,9
	.half	.L276-.L22
	.byte	3,1,1,5,1,3,3,1,7,9
	.half	.L110-.L276
	.byte	0,1,1
.L403:
	.sdecl	'.debug_ranges',debug,cluster('echoPoll')
	.sect	'.debug_ranges'
.L109:
	.word	-1,.L62,0,.L110-.L62,0,0
	.sdecl	'.debug_info',debug,cluster('echoSent')
	.sect	'.debug_info'
.L111:
	.word	280
	.half	3
	.word	.L112
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L114,.L113
	.byte	2
	.word	.L77
	.byte	3
	.byte	'echoSent',0,1,172,2,7
	.word	.L148
	.byte	1,1,1
	.word	.L64,.L186,.L63
	.byte	4
	.byte	'arg',0,1,172,2,22
	.word	.L159,.L187
	.byte	4
	.byte	'tpcb',0,1,172,2,35
	.word	.L161,.L188
	.byte	4
	.byte	'len',0,1,172,2,47
	.word	.L189,.L190
	.byte	5
	.word	.L64,.L186
	.byte	6
	.word	.L191
	.byte	7
	.byte	'es',0,1,176,2,18
	.word	.L166,.L195
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('echoSent')
	.sect	'.debug_abbrev'
.L112:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	11,1,85,6,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('echoSent')
	.sect	'.debug_line'
.L113:
	.word	.L413-.L412
.L412:
	.half	3
	.word	.L415-.L414
.L414:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L415:
	.byte	5,7,7,0,5,2
	.word	.L64
	.byte	3,171,2,1,5,11,9
	.half	.L192-.L64
	.byte	3,6,1,5,7,9
	.half	.L193-.L192
	.byte	3,122,1,5,5,9
	.half	.L194-.L193
	.byte	3,6,1,5,26,7,9
	.half	.L416-.L194
	.byte	3,2,1,5,24,9
	.half	.L278-.L416
	.byte	3,1,1,5,29,9
	.half	.L281-.L278
	.byte	3,127,1,5,15,9
	.half	.L29-.L281
	.byte	3,5,1,5,9,9
	.half	.L417-.L29
	.byte	1,5,29,7,9
	.half	.L418-.L417
	.byte	3,2,1,5,12,9
	.half	.L30-.L418
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L115-.L30
	.byte	0,1,1
.L413:
	.sdecl	'.debug_ranges',debug,cluster('echoSent')
	.sect	'.debug_ranges'
.L114:
	.word	-1,.L64,0,.L115-.L64,0,0
.L191:
	.word	-1,.L64,.L192-.L64,.L193-.L64,.L194-.L64,.L186-.L64,0,0
	.sdecl	'.debug_info',debug,cluster('echoSend')
	.sect	'.debug_info'
.L116:
	.word	265
	.half	3
	.word	.L117
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L119,.L118
	.byte	2
	.word	.L77
	.byte	3
	.byte	'echoSend',0,1,194,2,6,1,1,1
	.word	.L66,.L196,.L65
	.byte	4
	.byte	'tpcb',0,1,194,2,23
	.word	.L161,.L197
	.byte	4
	.byte	'es',0,1,194,2,42
	.word	.L166,.L198
	.byte	5
	.word	.L66,.L196
	.byte	5
	.word	.L34,.L196
	.byte	6
	.byte	'wrErr',0,1,205,2,11
	.word	.L148,.L199
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('echoSend')
	.sect	'.debug_abbrev'
.L117:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('echoSend')
	.sect	'.debug_line'
.L118:
	.word	.L420-.L419
.L419:
	.half	3
	.word	.L422-.L421
.L421:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L422:
	.byte	5,6,7,0,5,2
	.word	.L66
	.byte	3,193,2,1,5,10,9
	.half	.L287-.L66
	.byte	3,2,1,5,6,9
	.half	.L423-.L287
	.byte	3,126,1,5,5,9
	.half	.L288-.L423
	.byte	3,2,1,5,19,7,9
	.half	.L424-.L288
	.byte	3,4,1,5,51,9
	.half	.L425-.L424
	.byte	1,5,8,9
	.half	.L426-.L425
	.byte	1,5,33,7,9
	.half	.L427-.L426
	.byte	3,1,1,5,31,9
	.half	.L428-.L427
	.byte	1,5,46,7,9
	.half	.L34-.L428
	.byte	3,4,1,5,35,1,5,49,9
	.half	.L285-.L34
	.byte	1,5,17,9
	.half	.L286-.L285
	.byte	1,5,32,3,1,1,5,45,9
	.half	.L290-.L286
	.byte	1,5,67,9
	.half	.L429-.L290
	.byte	1,5,11,9
	.half	.L289-.L429
	.byte	1,5,5,9
	.half	.L430-.L289
	.byte	3,1,1,5,32,7,9
	.half	.L431-.L430
	.byte	3,2,1,5,1,9
	.half	.L33-.L431
	.byte	3,2,1,7,9
	.half	.L120-.L33
	.byte	0,1,1
.L420:
	.sdecl	'.debug_ranges',debug,cluster('echoSend')
	.sect	'.debug_ranges'
.L119:
	.word	-1,.L66,0,.L120-.L66,0,0
	.sdecl	'.debug_info',debug,cluster('echoUnpack')
	.sect	'.debug_info'
.L121:
	.word	312
	.half	3
	.word	.L122
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L124,.L123
	.byte	2
	.word	.L77
	.byte	3
	.byte	'echoUnpack',0,1,214,2,6,1,1,1
	.word	.L68,.L200,.L67
	.byte	4
	.byte	'tpcb',0,1,214,2,25
	.word	.L161,.L201
	.byte	4
	.byte	'es',0,1,214,2,44
	.word	.L166,.L202
	.byte	5
	.word	.L68,.L200
	.byte	6
	.byte	'ptr',0,1,216,2,11
	.word	.L171,.L203
	.byte	5
	.word	.L204,.L37
	.byte	6
	.byte	'plen',0,1,229,2,19
	.word	.L189,.L205
	.byte	5
	.word	.L41,.L37
	.byte	6
	.byte	'freed',0,1,237,2,18
	.word	.L206,.L207
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('echoUnpack')
	.sect	'.debug_abbrev'
.L122:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('echoUnpack')
	.sect	'.debug_line'
.L123:
	.word	.L433-.L432
.L432:
	.half	3
	.word	.L435-.L434
.L434:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L435:
	.byte	5,6,7,0,5,2
	.word	.L68
	.byte	3,213,2,1,5,15,9
	.half	.L293-.L68
	.byte	3,8,1,5,27,9
	.half	.L436-.L293
	.byte	3,124,1,5,17,9
	.half	.L38-.L436
	.byte	3,2,1,5,15,9
	.half	.L294-.L38
	.byte	3,2,1,5,50,9
	.half	.L437-.L294
	.byte	1,5,41,9
	.half	.L438-.L437
	.byte	1,5,36,9
	.half	.L439-.L438
	.byte	1,5,9,9
	.half	.L440-.L439
	.byte	1,5,32,7,9
	.half	.L441-.L440
	.byte	3,2,1,5,24,9
	.half	.L442-.L441
	.byte	3,1,1,5,23,9
	.half	.L443-.L442
	.byte	3,127,1,5,24,9
	.half	.L444-.L443
	.byte	3,2,1,5,15,9
	.half	.L445-.L444
	.byte	3,1,1,5,42,9
	.half	.L446-.L445
	.byte	1,5,36,9
	.half	.L447-.L446
	.byte	1,5,24,9
	.half	.L204-.L447
	.byte	3,4,1,5,29,9
	.half	.L448-.L204
	.byte	3,126,1,5,19,9
	.half	.L295-.L448
	.byte	3,2,1,5,13,9
	.half	.L449-.L295
	.byte	3,1,1,5,28,7,9
	.half	.L450-.L449
	.byte	3,2,1,5,35,9
	.half	.L41-.L450
	.byte	3,6,1,5,33,9
	.half	.L297-.L41
	.byte	3,1,1,5,30,7,9
	.half	.L451-.L297
	.byte	3,2,1,5,15,9
	.half	.L37-.L451
	.byte	3,103,1,5,27,9
	.half	.L452-.L37
	.byte	1,5,1,7,9
	.half	.L453-.L452
	.byte	3,28,1,7,9
	.half	.L125-.L453
	.byte	0,1,1
.L433:
	.sdecl	'.debug_ranges',debug,cluster('echoUnpack')
	.sect	'.debug_ranges'
.L124:
	.word	-1,.L68,0,.L125-.L68,0,0
	.sdecl	'.debug_info',debug,cluster('echoClose')
	.sect	'.debug_info'
.L126:
	.word	236
	.half	3
	.word	.L127
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L129,.L128
	.byte	2
	.word	.L77
	.byte	3
	.byte	'echoClose',0,1,249,2,6,1,1,1
	.word	.L70,.L208,.L69
	.byte	4
	.byte	'tpcb',0,1,249,2,24
	.word	.L161,.L209
	.byte	4
	.byte	'es',0,1,249,2,43
	.word	.L166,.L210
	.byte	5
	.word	.L70,.L208
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('echoClose')
	.sect	'.debug_abbrev'
.L127:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('echoClose')
	.sect	'.debug_line'
.L128:
	.word	.L455-.L454
.L454:
	.half	3
	.word	.L457-.L456
.L456:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L457:
	.byte	5,6,7,0,5,2
	.word	.L70
	.byte	3,248,2,1,5,19,9
	.half	.L302-.L70
	.byte	3,2,1,5,20,9
	.half	.L300-.L302
	.byte	3,1,1,9
	.half	.L304-.L300
	.byte	3,1,1,5,19,9
	.half	.L306-.L304
	.byte	3,1,1,5,20,9
	.half	.L308-.L306
	.byte	3,1,1,5,26,9
	.half	.L458-.L308
	.byte	1,5,5,9
	.half	.L310-.L458
	.byte	3,2,1,5,18,7,9
	.half	.L459-.L310
	.byte	3,2,1,5,15,9
	.half	.L42-.L459
	.byte	3,2,1,5,1,9
	.half	.L130-.L42
	.byte	3,1,0,1,1
.L455:
	.sdecl	'.debug_ranges',debug,cluster('echoClose')
	.sect	'.debug_ranges'
.L129:
	.word	-1,.L70,0,.L130-.L70,0,0
	.sdecl	'.debug_info',debug,cluster('tcp_client_recv')
	.sect	'.debug_info'
.L131:
	.word	312
	.half	3
	.word	.L132
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L134,.L133
	.byte	2
	.word	.L77
	.byte	3
	.byte	'tcp_client_recv',0,1,179,3,14
	.word	.L148
	.byte	1,1
	.word	.L74,.L211,.L73
	.byte	4
	.byte	'arg',0,1,179,3,36
	.word	.L159,.L212
	.byte	4
	.byte	'tpcb',0,1,179,3,57
	.word	.L151,.L213
	.byte	4
	.byte	'p',0,1,180,3,42
	.word	.L214,.L215
	.byte	4
	.byte	'err',0,1,180,3,51
	.word	.L148,.L216
	.byte	5
	.word	.L74,.L211
	.byte	6
	.byte	'sendData',0,1,185,3,20
	.word	.L217
	.byte	5,3
	.word	_999001_sendData
	.byte	7
	.word	.L47,.L218
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('tcp_client_recv')
	.sect	'.debug_abbrev'
.L132:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,9,0,0,7,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('tcp_client_recv')
	.sect	'.debug_line'
.L133:
	.word	.L461-.L460
.L460:
	.half	3
	.word	.L463-.L462
.L462:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L463:
	.byte	5,14,7,0,5,2
	.word	.L74
	.byte	3,178,3,1,5,5,9
	.half	.L323-.L74
	.byte	3,9,1,5,31,9
	.half	.L324-.L323
	.byte	3,2,1,5,21,1,5,5,9
	.half	.L321-.L324
	.byte	3,126,1,5,50,9
	.half	.L464-.L321
	.byte	3,2,1,5,21,1,5,50,9
	.half	.L465-.L464
	.byte	1,5,14,9
	.half	.L320-.L465
	.byte	3,117,1,5,50,9
	.half	.L325-.L320
	.byte	3,11,1,5,16,9
	.half	.L322-.L325
	.byte	3,1,1,5,5,9
	.half	.L327-.L322
	.byte	3,2,1,5,21,7,9
	.half	.L47-.L327
	.byte	3,6,1,5,27,9
	.half	.L466-.L47
	.byte	3,126,1,7,9
	.half	.L467-.L466
	.byte	3,5,1,5,19,9
	.half	.L329-.L467
	.byte	3,3,1,5,37,9
	.half	.L218-.L329
	.byte	3,125,1,5,10,9
	.half	.L46-.L218
	.byte	3,5,1,5,27,7,9
	.half	.L468-.L46
	.byte	3,2,1,5,26,9
	.half	.L332-.L468
	.byte	3,2,1,5,12,9
	.half	.L48-.L332
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L135-.L48
	.byte	0,1,1
.L461:
	.sdecl	'.debug_ranges',debug,cluster('tcp_client_recv')
	.sect	'.debug_ranges'
.L134:
	.word	-1,.L74,0,.L135-.L74,0,0
	.sdecl	'.debug_info',debug,cluster('tcp_client_connected')
	.sect	'.debug_info'
.L136:
	.word	268
	.half	3
	.word	.L137
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L139,.L138
	.byte	2
	.word	.L77
	.byte	3
	.byte	'tcp_client_connected',0,1,222,3,14
	.word	.L148
	.byte	1,1
	.word	.L76,.L219,.L75
	.byte	4
	.byte	'arg',0,1,222,3,41
	.word	.L159,.L220
	.byte	4
	.byte	'tpcb',0,1,222,3,62
	.word	.L151,.L221
	.byte	4
	.byte	'err',0,1,222,3,74
	.word	.L148,.L222
	.byte	5
	.word	.L76,.L219
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('tcp_client_connected')
	.sect	'.debug_abbrev'
.L137:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('tcp_client_connected')
	.sect	'.debug_line'
.L138:
	.word	.L470-.L469
.L469:
	.half	3
	.word	.L472-.L471
.L471:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0,0,0,0,0
.L472:
	.byte	5,14,7,0,5,2
	.word	.L76
	.byte	3,221,3,1,5,5,9
	.half	.L336-.L76
	.byte	3,2,1,5,20,9
	.half	.L335-.L336
	.byte	3,3,1,5,5,9
	.half	.L338-.L335
	.byte	3,2,1,5,36,9
	.half	.L473-.L338
	.byte	3,1,1,5,35,9
	.half	.L474-.L473
	.byte	1,5,45,1,5,21,9
	.half	.L339-.L474
	.byte	1,5,45,9
	.half	.L475-.L339
	.byte	1,5,16,9
	.half	.L340-.L475
	.byte	3,1,1,5,12,9
	.half	.L342-.L340
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L140-.L342
	.byte	0,1,1
.L470:
	.sdecl	'.debug_ranges',debug,cluster('tcp_client_connected')
	.sect	'.debug_ranges'
.L139:
	.word	-1,.L76,0,.L140-.L76,0,0
	.sdecl	'.debug_info',debug,cluster('g_Logo')
	.sect	'.debug_info'
.L141:
	.word	176
	.half	3
	.word	.L142
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L77
	.byte	3
	.byte	'g_Logo',0,9,102,8
	.word	.L223
	.byte	1,5,3
	.word	g_Logo
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_Logo')
	.sect	'.debug_abbrev'
.L142:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('g_echoPcb')
	.sect	'.debug_info'
.L143:
	.word	179
	.half	3
	.word	.L144
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Echo.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L77
	.byte	3
	.byte	'g_echoPcb',0,9,117,9
	.word	.L161
	.byte	1,5,3
	.word	g_echoPcb
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_echoPcb')
	.sect	'.debug_abbrev'
.L144:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('echoAccept')
	.sect	'.debug_loc'
.L160:
	.word	-1,.L56,0,.L226-.L56
	.half	1
	.byte	100
	.word	0,0
.L55:
	.word	-1,.L56,0,.L158-.L56
	.half	2
	.byte	138,0
	.word	0,0
.L163:
	.word	-1,.L56,0,.L226-.L56
	.half	1
	.byte	84
	.word	0,0
.L167:
	.word	-1,.L56,.L226-.L56,.L227-.L56
	.half	1
	.byte	98
	.word	.L228-.L56,.L158-.L56
	.half	1
	.byte	111
	.word	.L231-.L56,.L230-.L56
	.half	1
	.byte	101
	.word	.L6-.L56,.L7-.L56
	.half	1
	.byte	98
	.word	0,0
.L162:
	.word	-1,.L56,0,.L226-.L56
	.half	1
	.byte	101
	.word	.L164-.L56,.L158-.L56
	.half	1
	.byte	108
	.word	.L229-.L56,.L230-.L56
	.half	1
	.byte	100
	.word	.L232-.L56,.L233-.L56
	.half	1
	.byte	100
	.word	.L234-.L56,.L235-.L56
	.half	1
	.byte	100
	.word	.L236-.L56,.L237-.L56
	.half	1
	.byte	100
	.word	.L238-.L56,.L239-.L56
	.half	1
	.byte	100
	.word	.L240-.L56,.L241-.L56
	.half	1
	.byte	100
	.word	0,0
.L165:
	.word	-1,.L56,.L7-.L56,.L158-.L56
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('echoClose')
	.sect	'.debug_loc'
.L69:
	.word	-1,.L70,0,.L208-.L70
	.half	2
	.byte	138,0
	.word	0,0
.L210:
	.word	-1,.L70,0,.L299-.L70
	.half	1
	.byte	101
	.word	.L302-.L70,.L208-.L70
	.half	1
	.byte	108
	.word	.L311-.L70,.L42-.L70
	.half	1
	.byte	100
	.word	0,0
.L209:
	.word	-1,.L70,0,.L300-.L70
	.half	1
	.byte	100
	.word	.L301-.L70,.L208-.L70
	.half	1
	.byte	111
	.word	.L303-.L70,.L304-.L70
	.half	1
	.byte	100
	.word	.L305-.L70,.L306-.L70
	.half	1
	.byte	100
	.word	.L307-.L70,.L308-.L70
	.half	1
	.byte	100
	.word	.L309-.L70,.L310-.L70
	.half	1
	.byte	100
	.word	.L312-.L70,.L208-.L70
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('echoError')
	.sect	'.debug_loc'
.L178:
	.word	-1,.L60,0,.L177-.L60
	.half	1
	.byte	100
	.word	0,0
.L59:
	.word	-1,.L60,0,.L177-.L60
	.half	2
	.byte	138,0
	.word	0,0
.L179:
	.word	-1,.L60,0,.L177-.L60
	.half	1
	.byte	84
	.word	0,0
.L180:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('echoInit')
	.sect	'.debug_loc'
.L53:
	.word	-1,.L54,0,.L145-.L54
	.half	2
	.byte	138,0
	.word	0,0
.L149:
	.word	-1,.L54,.L224-.L54,.L225-.L54
	.half	1
	.byte	82
	.word	.L3-.L54,.L2-.L54
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('echoPoll')
	.sect	'.debug_loc'
.L182:
	.word	-1,.L62,0,.L265-.L62
	.half	1
	.byte	100
	.word	.L266-.L62,.L181-.L62
	.half	1
	.byte	111
	.word	.L269-.L62,.L268-.L62
	.half	1
	.byte	101
	.word	.L272-.L62,.L271-.L62
	.half	1
	.byte	101
	.word	.L24-.L62,.L273-.L62
	.half	1
	.byte	100
	.word	.L274-.L62,.L25-.L62
	.half	1
	.byte	101
	.word	.L22-.L62,.L275-.L62
	.half	1
	.byte	100
	.word	0,0
.L61:
	.word	-1,.L62,0,.L181-.L62
	.half	2
	.byte	138,0
	.word	0,0
.L185:
	.word	0,0
.L184:
	.word	0,0
.L183:
	.word	-1,.L62,0,.L265-.L62
	.half	1
	.byte	101
	.word	.L267-.L62,.L181-.L62
	.half	1
	.byte	108
	.word	.L265-.L62,.L268-.L62
	.half	1
	.byte	100
	.word	.L270-.L62,.L271-.L62
	.half	1
	.byte	100
	.word	.L24-.L62,.L273-.L62
	.half	1
	.byte	101
	.word	.L273-.L62,.L25-.L62
	.half	1
	.byte	100
	.word	.L22-.L62,.L275-.L62
	.half	1
	.byte	101
	.word	.L275-.L62,.L276-.L62
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('echoRecv')
	.sect	'.debug_loc'
.L169:
	.word	-1,.L58,0,.L242-.L58
	.half	1
	.byte	100
	.word	.L244-.L58,.L168-.L58
	.half	1
	.byte	111
	.word	.L249-.L58,.L243-.L58
	.half	1
	.byte	101
	.word	.L9-.L58,.L250-.L58
	.half	1
	.byte	100
	.word	.L12-.L58,.L253-.L58
	.half	1
	.byte	100
	.word	.L256-.L58,.L254-.L58
	.half	1
	.byte	101
	.word	.L259-.L58,.L258-.L58
	.half	1
	.byte	101
	.word	.L16-.L58,.L261-.L58
	.half	1
	.byte	100
	.word	0,0
.L57:
	.word	-1,.L58,0,.L168-.L58
	.half	2
	.byte	138,0
	.word	0,0
.L173:
	.word	-1,.L58,0,.L243-.L58
	.half	1
	.byte	84
	.word	.L247-.L58,.L248-.L58
	.half	1
	.byte	95
	.word	.L9-.L58,.L251-.L58
	.half	1
	.byte	84
	.word	.L9-.L58,.L252-.L58
	.half	1
	.byte	95
	.word	.L12-.L58,.L254-.L58
	.half	1
	.byte	84
	.word	.L17-.L58,.L176-.L58
	.half	1
	.byte	84
	.word	.L16-.L58,.L262-.L58
	.half	1
	.byte	84
	.word	.L13-.L58,.L168-.L58
	.half	1
	.byte	95
	.word	0,0
.L175:
	.word	0,0
.L172:
	.word	-1,.L58,0,.L243-.L58
	.half	1
	.byte	102
	.word	.L246-.L58,.L168-.L58
	.half	1
	.byte	109
	.word	.L9-.L58,.L250-.L58
	.half	1
	.byte	102
	.word	.L250-.L58,.L251-.L58
	.half	1
	.byte	100
	.word	.L12-.L58,.L254-.L58
	.half	1
	.byte	102
	.word	.L17-.L58,.L260-.L58
	.half	1
	.byte	102
	.word	.L260-.L58,.L176-.L58
	.half	1
	.byte	101
	.word	.L16-.L58,.L263-.L58
	.half	1
	.byte	102
	.word	.L264-.L58,.L11-.L58
	.half	1
	.byte	100
	.word	0,0
.L174:
	.word	0,0
.L170:
	.word	-1,.L58,0,.L242-.L58
	.half	1
	.byte	101
	.word	.L245-.L58,.L168-.L58
	.half	1
	.byte	108
	.word	.L242-.L58,.L243-.L58
	.half	1
	.byte	100
	.word	.L9-.L58,.L251-.L58
	.half	1
	.byte	101
	.word	.L12-.L58,.L255-.L58
	.half	1
	.byte	101
	.word	.L255-.L58,.L254-.L58
	.half	1
	.byte	100
	.word	.L257-.L58,.L258-.L58
	.half	1
	.byte	100
	.word	.L17-.L58,.L260-.L58
	.half	1
	.byte	101
	.word	.L16-.L58,.L261-.L58
	.half	1
	.byte	101
	.word	.L261-.L58,.L263-.L58
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('echoSend')
	.sect	'.debug_loc'
.L65:
	.word	-1,.L66,0,.L196-.L66
	.half	2
	.byte	138,0
	.word	0,0
.L198:
	.word	-1,.L66,0,.L285-.L66
	.half	1
	.byte	101
	.word	.L287-.L66,.L196-.L66
	.half	1
	.byte	108
	.word	0,0
.L197:
	.word	-1,.L66,0,.L286-.L66
	.half	1
	.byte	100
	.word	.L288-.L66,.L196-.L66
	.half	1
	.byte	111
	.word	.L291-.L66,.L289-.L66
	.half	1
	.byte	100
	.word	0,0
.L199:
	.word	-1,.L66,.L286-.L66,.L289-.L66
	.half	1
	.byte	82
	.word	.L290-.L66,.L33-.L66
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('echoSent')
	.sect	'.debug_loc'
.L187:
	.word	-1,.L64,0,.L277-.L64
	.half	1
	.byte	100
	.word	.L192-.L64,.L186-.L64
	.half	1
	.byte	111
	.word	.L279-.L64,.L278-.L64
	.half	1
	.byte	101
	.word	.L282-.L64,.L281-.L64
	.half	1
	.byte	101
	.word	.L29-.L64,.L283-.L64
	.half	1
	.byte	100
	.word	.L284-.L64,.L30-.L64
	.half	1
	.byte	101
	.word	0,0
.L63:
	.word	-1,.L64,0,.L186-.L64
	.half	2
	.byte	138,0
	.word	0,0
.L195:
	.word	0,0
.L190:
	.word	-1,.L64,0,.L278-.L64
	.half	1
	.byte	84
	.word	.L29-.L64,.L30-.L64
	.half	1
	.byte	84
	.word	0,0
.L188:
	.word	-1,.L64,0,.L277-.L64
	.half	1
	.byte	101
	.word	.L194-.L64,.L186-.L64
	.half	1
	.byte	108
	.word	.L277-.L64,.L278-.L64
	.half	1
	.byte	100
	.word	.L280-.L64,.L281-.L64
	.half	1
	.byte	100
	.word	.L29-.L64,.L283-.L64
	.half	1
	.byte	101
	.word	.L283-.L64,.L30-.L64
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('echoUnpack')
	.sect	'.debug_loc'
.L67:
	.word	-1,.L68,0,.L200-.L68
	.half	2
	.byte	138,0
	.word	0,0
.L202:
	.word	-1,.L68,0,.L38-.L68
	.half	1
	.byte	101
	.word	.L293-.L68,.L200-.L68
	.half	1
	.byte	111
	.word	0,0
.L207:
	.word	-1,.L68,.L297-.L68,.L37-.L68
	.half	1
	.byte	82
	.word	0,0
.L205:
	.word	-1,.L68,.L295-.L68,.L37-.L68
	.half	1
	.byte	95
	.word	0,0
.L203:
	.word	-1,.L68,.L294-.L68,.L37-.L68
	.half	1
	.byte	110
	.word	.L296-.L68,.L297-.L68
	.half	1
	.byte	100
	.word	0,0
.L201:
	.word	-1,.L68,0,.L38-.L68
	.half	1
	.byte	100
	.word	.L292-.L68,.L200-.L68
	.half	1
	.byte	108
	.word	.L298-.L68,.L37-.L68
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('tcp_client_connected')
	.sect	'.debug_loc'
.L220:
	.word	-1,.L76,0,.L334-.L76
	.half	1
	.byte	100
	.word	0,0
.L222:
	.word	-1,.L76,0,.L335-.L76
	.half	1
	.byte	84
	.word	0,0
.L75:
	.word	-1,.L76,0,.L219-.L76
	.half	2
	.byte	138,0
	.word	0,0
.L221:
	.word	-1,.L76,0,.L335-.L76
	.half	1
	.byte	101
	.word	.L336-.L76,.L219-.L76
	.half	1
	.byte	111
	.word	.L337-.L76,.L338-.L76
	.half	1
	.byte	100
	.word	.L339-.L76,.L340-.L76
	.half	1
	.byte	100
	.word	.L341-.L76,.L342-.L76
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('tcp_client_init')
	.sect	'.debug_loc'
.L157:
	.word	-1,.L72,.L317-.L72,.L43-.L72
	.half	1
	.byte	82
	.word	.L44-.L72,.L150-.L72
	.half	1
	.byte	82
	.word	0,0
.L154:
	.word	-1,.L72,0,.L150-.L72
	.half	2
	.byte	145,120
	.word	0,0
.L71:
	.word	-1,.L72,0,.L313-.L72
	.half	2
	.byte	138,0
	.word	.L313-.L72,.L43-.L72
	.half	2
	.byte	138,8
	.word	.L43-.L72,.L43-.L72
	.half	2
	.byte	138,0
	.word	.L43-.L72,.L44-.L72
	.half	2
	.byte	138,8
	.word	.L44-.L72,.L44-.L72
	.half	2
	.byte	138,0
	.word	.L44-.L72,.L150-.L72
	.half	2
	.byte	138,8
	.word	.L150-.L72,.L150-.L72
	.half	2
	.byte	138,0
	.word	0,0
.L152:
	.word	-1,.L72,.L314-.L72,.L315-.L72
	.half	1
	.byte	98
	.word	.L316-.L72,.L150-.L72
	.half	1
	.byte	111
	.word	.L315-.L72,.L317-.L72
	.half	1
	.byte	100
	.word	.L318-.L72,.L43-.L72
	.half	1
	.byte	100
	.word	.L43-.L72,.L44-.L72
	.half	1
	.byte	98
	.word	.L319-.L72,.L150-.L72
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('tcp_client_recv')
	.sect	'.debug_loc'
.L212:
	.word	-1,.L74,0,.L320-.L74
	.half	1
	.byte	100
	.word	0,0
.L216:
	.word	-1,.L74,0,.L321-.L74
	.half	1
	.byte	84
	.word	.L324-.L74,.L211-.L74
	.half	1
	.byte	88
	.word	0,0
.L215:
	.word	-1,.L74,0,.L322-.L74
	.half	1
	.byte	102
	.word	.L325-.L74,.L211-.L74
	.half	1
	.byte	108
	.word	.L330-.L74,.L218-.L74
	.half	1
	.byte	100
	.word	0,0
.L73:
	.word	-1,.L74,0,.L211-.L74
	.half	2
	.byte	138,0
	.word	0,0
.L213:
	.word	-1,.L74,0,.L321-.L74
	.half	1
	.byte	101
	.word	.L323-.L74,.L211-.L74
	.half	1
	.byte	111
	.word	.L320-.L74,.L322-.L74
	.half	1
	.byte	100
	.word	.L326-.L74,.L327-.L74
	.half	1
	.byte	100
	.word	.L328-.L74,.L329-.L74
	.half	1
	.byte	100
	.word	.L331-.L74,.L332-.L74
	.half	1
	.byte	100
	.word	.L333-.L74,.L48-.L74
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L476:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('echoInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L54,.L145-.L54
	.sdecl	'.debug_frame',debug,cluster('echoAccept')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L56,.L158-.L56
	.sdecl	'.debug_frame',debug,cluster('echoRecv')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L58,.L168-.L58
	.sdecl	'.debug_frame',debug,cluster('echoError')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L60,.L177-.L60
	.sdecl	'.debug_frame',debug,cluster('echoPoll')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L62,.L181-.L62
	.sdecl	'.debug_frame',debug,cluster('echoSent')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L64,.L186-.L64
	.sdecl	'.debug_frame',debug,cluster('echoSend')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L66,.L196-.L66
	.sdecl	'.debug_frame',debug,cluster('echoUnpack')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L68,.L200-.L68
	.sdecl	'.debug_frame',debug,cluster('echoClose')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L70,.L208-.L70
	.sdecl	'.debug_frame',debug,cluster('tcp_client_init')
	.sect	'.debug_frame'
	.word	68
	.word	.L476,.L72,.L150-.L72
	.byte	4
	.word	(.L313-.L72)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L43-.L313)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L44-.L43)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L150-.L44)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('tcp_client_recv')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L74,.L211-.L74
	.sdecl	'.debug_frame',debug,cluster('tcp_client_connected')
	.sect	'.debug_frame'
	.word	12
	.word	.L476,.L76,.L219-.L76


	; Module end
