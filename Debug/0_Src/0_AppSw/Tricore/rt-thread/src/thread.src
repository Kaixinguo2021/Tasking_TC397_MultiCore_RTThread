	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\.thread.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.src ..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c'

	
$TC162
	
	.sdecl	'.text.thread.rt_thread_suspend_sethook',code,cluster('rt_thread_suspend_sethook')
	.sect	'.text.thread.rt_thread_suspend_sethook'
	.align	2
	
	.global	rt_thread_suspend_sethook

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	     1  /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	     3   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	     4   * SPDX-License-Identifier: Apache-2.0
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	     5   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	     6   * Change Logs:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	     7   * Date           Author       Notes
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	     8   * 2006-03-28     Bernard      first version
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	     9   * 2006-04-29     Bernard      implement thread timer
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    10   * 2006-04-30     Bernard      added THREAD_DEBUG
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    11   * 2006-05-27     Bernard      fixed the rt_thread_yield bug
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    12   * 2006-06-03     Bernard      fixed the thread timer init bug
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    13   * 2006-08-10     Bernard      fixed the timer bug in thread_sleep
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    14   * 2006-09-03     Bernard      changed rt_timer_delete to rt_timer_detach
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    15   * 2006-09-03     Bernard      implement rt_thread_detach
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    16   * 2008-02-16     Bernard      fixed the rt_thread_timeout bug
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    17   * 2010-03-21     Bernard      change the errno of rt_thread_delay/sleep to
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    18   *                             RT_EOK.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    19   * 2010-11-10     Bernard      add cleanup callback function in thread exit.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    20   * 2011-09-01     Bernard      fixed rt_thread_exit issue when the current
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    21   *                             thread preempted, which reported by Jiaxing Lee.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    22   * 2011-09-08     Bernard      fixed the scheduling issue in rt_thread_startup.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    23   * 2012-12-29     Bernard      fixed compiling warning.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    24   * 2016-08-09     ArdaFu       add thread suspend and resume hook.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    25   * 2017-04-10     armink       fixed the rt_thread_delete and rt_thread_detach
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    26   *                             bug when thread has not startup.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    27   * 2018-11-22     Jesven       yield is same to rt_schedule
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    28   *                             add support for tasks bound to cpu
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    29   * 2021-02-24     Meco Man     rearrange rt_thread_control() - schedule the thread when close it
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    30   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    31  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    32  #include <rthw.h>
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    33  #include <rtthread.h>
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    34  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    35  extern rt_list_t rt_thread_defunct;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    36  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    37  #ifdef RT_USING_HOOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    38  static void (*rt_thread_suspend_hook)(rt_thread_t thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    39  static void (*rt_thread_resume_hook) (rt_thread_t thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    40  static void (*rt_thread_inited_hook) (rt_thread_t thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    41  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    42  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    43   * @ingroup Hook
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    44   * This function sets a hook function when the system suspend a thread.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    45   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    46   * @param hook the specified hook function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    47   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    48   * @note the hook function must be simple and never be blocked or suspend.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    49   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    50  void rt_thread_suspend_sethook(void (*hook)(rt_thread_t thread))
; Function rt_thread_suspend_sethook
.L45:
rt_thread_suspend_sethook:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    51  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    52      rt_thread_suspend_hook = hook;
	st.a	rt_thread_suspend_hook,a4
.L537:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    53  }
	ret
.L268:
	
__rt_thread_suspend_sethook_function_end:
	.size	rt_thread_suspend_sethook,__rt_thread_suspend_sethook_function_end-rt_thread_suspend_sethook
.L157:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_resume_sethook',code,cluster('rt_thread_resume_sethook')
	.sect	'.text.thread.rt_thread_resume_sethook'
	.align	2
	
	.global	rt_thread_resume_sethook

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    54  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    55  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    56   * @ingroup Hook
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    57   * This function sets a hook function when the system resume a thread.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    58   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    59   * @param hook the specified hook function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    60   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    61   * @note the hook function must be simple and never be blocked or suspend.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    62   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    63  void rt_thread_resume_sethook(void (*hook)(rt_thread_t thread))
; Function rt_thread_resume_sethook
.L47:
rt_thread_resume_sethook:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    64  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    65      rt_thread_resume_hook = hook;
	st.a	rt_thread_resume_hook,a4
.L542:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    66  }
	ret
.L271:
	
__rt_thread_resume_sethook_function_end:
	.size	rt_thread_resume_sethook,__rt_thread_resume_sethook_function_end-rt_thread_resume_sethook
.L162:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_inited_sethook',code,cluster('rt_thread_inited_sethook')
	.sect	'.text.thread.rt_thread_inited_sethook'
	.align	2
	
	.global	rt_thread_inited_sethook

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    67  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    68  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    69   * @ingroup Hook
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    70   * This function sets a hook function when a thread is initialized.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    71   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    72   * @param hook the specified hook function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    73   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    74  void rt_thread_inited_sethook(void (*hook)(rt_thread_t thread))
; Function rt_thread_inited_sethook
.L49:
rt_thread_inited_sethook:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    75  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    76      rt_thread_inited_hook = hook;
	st.a	rt_thread_inited_hook,a4
.L547:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    77  }
	ret
.L273:
	
__rt_thread_inited_sethook_function_end:
	.size	rt_thread_inited_sethook,__rt_thread_inited_sethook_function_end-rt_thread_inited_sethook
.L167:
	; End of function
	
	.sdecl	'.text.thread._thread_cleanup_execute',code,cluster('_thread_cleanup_execute')
	.sect	'.text.thread._thread_cleanup_execute'
	.align	2
	

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    78  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    79  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    80  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    81  /* must be invoke witch rt_hw_interrupt_disable */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    82  static void _thread_cleanup_execute(rt_thread_t thread)
; Function _thread_cleanup_execute
.L51:
_thread_cleanup_execute:	.type	func
	mov.aa	a15,a4
.L313:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    83  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    84      register rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    85  #ifdef RT_USING_MODULE
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    86      struct rt_dlmodule *module = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    87  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    88      level = rt_hw_interrupt_disable();
	call	rt_hw_interrupt_disable
.L312:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    89  #ifdef RT_USING_MODULE
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    90      module = (struct rt_dlmodule*)thread->module_id;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    91      if (module)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    92      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    93          dlmodule_destroy(module);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    94      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    95  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    96      /* invoke thread cleanup */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    97      if (thread->cleanup != RT_NULL)
	ld.a	a2,[a15]120
.L552:
	mov	d15,d2
.L314:
	jz.a	a2,.L2
.L553:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    98          thread->cleanup(thread);
	mov.aa	a4,a15
.L315:
	calli	a2
.L2:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	    99  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   100  #ifdef RT_USING_SIGNALS
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   101      rt_thread_free_sig(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   102  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   103      rt_hw_interrupt_enable(level);
	mov	d4,d15
.L316:
	j	rt_hw_interrupt_enable
.L275:
	
___thread_cleanup_execute_function_end:
	.size	_thread_cleanup_execute,___thread_cleanup_execute_function_end-_thread_cleanup_execute
.L172:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_exit',code,cluster('rt_thread_exit')
	.sect	'.text.thread.rt_thread_exit'
	.align	2
	
	.global	rt_thread_exit

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   104  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   105  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   106  void rt_thread_exit(void)
; Function rt_thread_exit
.L53:
rt_thread_exit:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   107  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   108      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   109      register rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   110  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   111      /* get current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   112      thread = rt_thread_self();
	call	rt_thread_self
.L317:
	mov.aa	a12,a2
.L319:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   113  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   114      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   115      level = rt_hw_interrupt_disable();
	call	rt_hw_interrupt_disable
.L318:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   116  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   117      _thread_cleanup_execute(thread);
	mov	d15,d2
	mov.aa	a4,a12
.L321:
	call	_thread_cleanup_execute
.L320:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   118  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   119      /* remove from schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   120      rt_schedule_remove_thread(thread);
	mov.aa	a4,a12
.L322:
	call	rt_schedule_remove_thread
.L323:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   121      /* change stat */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   122      thread->stat = RT_THREAD_CLOSE;
	mov	d0,#4
	st.b	[a12]52,d0
.L558:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   123  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   124      /* remove it from timer list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   125      rt_timer_detach(&thread->thread_timer);
	lea	a4,[a12]76
	call	rt_timer_detach
.L559:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   126  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   127      if (rt_object_is_systemobject((rt_object_t)thread) == RT_TRUE)
	mov.aa	a4,a12
.L324:
	call	rt_object_is_systemobject
.L325:
	jne	d2,#1,.L3
.L560:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   128      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   129          rt_object_detach((rt_object_t)thread);
	mov.aa	a4,a12
.L326:
	call	rt_object_detach
.L327:
	j	.L4
.L3:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   130      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   131      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   132      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   133          /* insert to defunct thread list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   134          rt_list_insert_after(&rt_thread_defunct, &(thread->tlist));
	lea	a4,rt_thread_defunct
.L561:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
	ld.a	a15,[a4]
.L282:
	lea	a2,[a12]20
.L289:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
	st.a	[a15]4,a2
.L562:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
	ld.a	a15,[a4]
.L563:
	st.a	[a2],a15
.L564:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
	st.a	[a4],a2
.L565:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
	st.a	[a12]24,a4
.L4:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   135      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   136  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   137      /* switch to next task */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   138      rt_schedule();
	call	rt_schedule
.L566:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   139  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   140      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   141      rt_hw_interrupt_enable(level);
	mov	d4,d15
.L328:
	j	rt_hw_interrupt_enable
.L278:
	
__rt_thread_exit_function_end:
	.size	rt_thread_exit,__rt_thread_exit_function_end-rt_thread_exit
.L177:
	; End of function
	
	.sdecl	'.text.thread._rt_thread_init',code,cluster('_rt_thread_init')
	.sect	'.text.thread._rt_thread_init'
	.align	2
	

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   142  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   143  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   144  static rt_err_t _rt_thread_init(struct rt_thread *thread,
; Function _rt_thread_init
.L55:
_rt_thread_init:	.type	func
	mov.aa	a15,a4
.L331:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   145                                  const char       *name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   146                                  void (*entry)(void *parameter),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   147                                  void             *parameter,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   148                                  void             *stack_start,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   149                                  rt_uint32_t       stack_size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   150                                  rt_uint8_t        priority,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   151                                  rt_uint32_t       tick)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   152  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   153      /* init thread list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   154      rt_list_init(&(thread->tlist));
	lea	a2,[a15]20
.L300:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
	st.a	[a15]24,a2
.L301:
	ld.a	a4,[a10]
.L306:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
	st.a	[a2],a2
.L307:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   155  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   156      thread->entry = (void *)entry;
	st.a	[a15]32,a6
.L571:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   157      thread->parameter = parameter;
	mov	d15,d4
	st.a	[a15]36,a7
.L332:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   158  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   159      /* stack init */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   160      thread->stack_addr = stack_start;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   161      thread->stack_size = stack_size;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   162  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   163      /* init thread stack */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   164      rt_memset(thread->stack_addr, '#', thread->stack_size);
	mov	d4,#35
	st.a	[a15]40,a4
.L330:
	mov	e8,d6,d5
	st.w	[a15]44,d15
.L572:
	mov	d5,d15
	call	rt_memset
.L329:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   165  #ifdef ARCH_CPU_STACK_GROWS_UPWARD
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   166      thread->sp = (void *)rt_hw_stack_init(thread->entry, thread->parameter,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   167                                            (void *)((char *)thread->stack_addr),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   168                                            (void *)rt_thread_exit);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   169  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   170      thread->sp = (void *)rt_hw_stack_init(thread->entry, thread->parameter,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   171                                            (rt_uint8_t *)((char *)thread->stack_addr + thread->stack_size - sizeof(rt_ubase_t)),
	ld.a	a2,[a15]40
.L573:
	ld.w	d15,[a15]44
.L333:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   172                                            (void *)rt_thread_exit);
	movh.a	a7,#@his(rt_thread_exit)
.L574:
	addsc.a	a6,a2,d15,#0
.L575:
	lea	a7,[a7]@los(rt_thread_exit)
.L576:
	add.a	a6,#-4
.L577:
	ld.a	a4,[a15]32
.L578:
	ld.a	a5,[a15]36
.L579:
	call	rt_hw_stack_init
.L580:
	st.a	[a15]28,a2
.L334:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   173  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   174  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   175      /* priority init */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   176      RT_ASSERT(priority < RT_THREAD_PRIORITY_MAX);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   177      thread->init_priority    = priority;
	st.b	[a15]54,d8
.L581:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   178      thread->current_priority = priority;
	st.b	[a15]53,d8
.L335:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   179  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   180      thread->number_mask = 0;
	mov	d4,#0
	st.w	[a15]56,d4
.L336:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   181  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   182      thread->number = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   183      thread->high_mask = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   184  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   185  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   186      /* tick init */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   187      thread->init_tick      = tick;
	st.w	[a15]66,d9
.L582:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   188      thread->remaining_tick = tick;
	st.w	[a15]70,d9
.L337:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   189  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   190      /* error and flags */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   191      thread->error = RT_EOK;
	st.w	[a15]48,d4
.L583:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   192      thread->stat  = RT_THREAD_INIT;
	st.b	[a15]52,d4
.L584:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   193  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   194  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   195      /* not bind on any cpu */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   196      thread->bind_cpu = RT_CPUS_NR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   197      thread->oncpu = RT_CPU_DETACHED;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   198  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   199      /* lock init */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   200      thread->scheduler_lock_nest = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   201      thread->cpus_lock_nest = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   202      thread->critical_lock_nest = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   203  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   204  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   205      /* initialize cleanup function and user data */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   206      thread->cleanup   = 0;
	mov.a	a2,#0
.L585:
	st.a	[a15]120,a2
.L586:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   207      thread->user_data = 0;
	st.w	[a15]124,d4
.L587:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   208  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   209      /* initialize thread timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   210      rt_timer_init(&(thread->thread_timer),
	lea	a4,[a15]76
.L588:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   211                    thread->name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   212                    rt_thread_timeout,
	movh.a	a6,#@his(rt_thread_timeout)
	lea	a6,[a6]@los(rt_thread_timeout)
.L589:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   213                    thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   214                    0,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   215                    RT_TIMER_FLAG_ONE_SHOT);
	mov	d5,d4
	mov.aa	a5,a15
.L338:
	mov.aa	a7,a15
.L340:
	call	rt_timer_init
.L339:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   216  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   217      /* initialize signal */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   218  #ifdef RT_USING_SIGNALS
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   219      thread->sig_mask    = 0x00;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   220      thread->sig_pending = 0x00;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   221  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   222  #ifndef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   223      thread->sig_ret     = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   224  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   225      thread->sig_vectors = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   226      thread->si_list     = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   227  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   228  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   229  #ifdef RT_USING_LWP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   230      thread->lwp = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   231  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   232  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   233      RT_OBJECT_HOOK_CALL(rt_thread_inited_hook, (thread));
	ld.a	a2,rt_thread_inited_hook
	jz.a	a2,.L5
	mov.aa	a4,a15
.L341:
	calli	a2
.L5:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   234  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   235      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   236  }
	mov	d2,#0
	ret
.L290:
	
___rt_thread_init_function_end:
	.size	_rt_thread_init,___rt_thread_init_function_end-_rt_thread_init
.L182:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_init',code,cluster('rt_thread_init')
	.sect	'.text.thread.rt_thread_init'
	.align	2
	
	.global	rt_thread_init

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   237  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   238  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   239   * @addtogroup Thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   240   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   241  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   242  /**@{*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   243  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   244  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   245   * This function will initialize a thread, normally it's used to initialize a
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   246   * static thread object.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   247   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   248   * @param thread the static thread object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   249   * @param name the name of thread, which shall be unique
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   250   * @param entry the entry function of thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   251   * @param parameter the parameter of thread enter function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   252   * @param stack_start the start address of thread stack
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   253   * @param stack_size the size of thread stack
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   254   * @param priority the priority of thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   255   * @param tick the time slice if there are same priority thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   256   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   257   * @return the operation status, RT_EOK on OK, -RT_ERROR on error
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   258   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   259  rt_err_t rt_thread_init(struct rt_thread *thread,
; Function rt_thread_init
.L57:
rt_thread_init:	.type	func
	mov	d15,d4
	sub.a	a10,#8
.L342:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   260                          const char       *name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   261                          void (*entry)(void *parameter),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   262                          void             *parameter,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   263                          void             *stack_start,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   264                          rt_uint32_t       stack_size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   265                          rt_uint8_t        priority,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   266                          rt_uint32_t       tick)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   267  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   268      /* thread check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   269      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   270      RT_ASSERT(stack_start != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   271  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   272      /* initialize thread object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   273      rt_object_init((rt_object_t)thread, RT_Object_Class_Thread, name);
	mov	d4,#1
	mov.aa	a15,a4
.L344:
	mov	e8,d6,d5
	mov.aa	a12,a5
.L345:
	mov.aa	a13,a6
.L346:
	mov.aa	a14,a7
.L347:
	call	rt_object_init
.L343:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   274  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   275      return _rt_thread_init(thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   276                             name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   277                             entry,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   278                             parameter,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   279                             stack_start,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   280                             stack_size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   281                             priority,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   282                             tick);
	mov	e4,d8,d15
	mov.aa	a4,a15
.L348:
	mov	d6,d9
	mov.aa	a5,a12
.L349:
	mov.aa	a6,a13
.L350:
	mov.aa	a7,a14
.L351:
	ld.a	a2,[a10]8
.L352:
	st.a	[a10],a2
.L417:
	j	_rt_thread_init
.L195:
	
__rt_thread_init_function_end:
	.size	rt_thread_init,__rt_thread_init_function_end-rt_thread_init
.L92:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_self',code,cluster('rt_thread_self')
	.sect	'.text.thread.rt_thread_self'
	.align	2
	
	.global	rt_thread_self

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   283  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   284  RTM_EXPORT(rt_thread_init);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   285  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   286  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   287   * This function will return self thread object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   288   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   289   * @return the self thread object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   290   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   291  rt_thread_t rt_thread_self(void)
; Function rt_thread_self
.L59:
rt_thread_self:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   292  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   293  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   294      rt_base_t lock;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   295      rt_thread_t self;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   296  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   297      lock = rt_hw_local_irq_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   298      self = rt_cpu_self()->current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   299      rt_hw_local_irq_enable(lock);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   300      return self;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   301  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   302      extern rt_thread_t rt_current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   303  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   304      return rt_current_thread;
	ld.a	a2,rt_current_thread
.L432:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   305  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   306  }
	ret
.L213:
	
__rt_thread_self_function_end:
	.size	rt_thread_self,__rt_thread_self_function_end-rt_thread_self
.L102:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_startup',code,cluster('rt_thread_startup')
	.sect	'.text.thread.rt_thread_startup'
	.align	2
	
	.global	rt_thread_startup

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   307  RTM_EXPORT(rt_thread_self);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   308  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   309  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   310   * This function will start a thread and put it to system ready queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   311   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   312   * @param thread the thread to be started
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   313   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   314   * @return the operation status, RT_EOK on OK, -RT_ERROR on error
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   315   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   316  rt_err_t rt_thread_startup(rt_thread_t thread)
; Function rt_thread_startup
.L61:
rt_thread_startup:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   317  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   318      /* thread check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   319      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   320      RT_ASSERT((thread->stat & RT_THREAD_STAT_MASK) == RT_THREAD_INIT);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   321      RT_ASSERT(rt_object_get_type((rt_object_t)thread) == RT_Object_Class_Thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   322  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   323      /* set current priority to initialize priority */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   324      thread->current_priority = thread->init_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   325  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   326      /* calculate priority attribute */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   327  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   328      thread->number      = thread->current_priority >> 3;            /* 5bit */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   329      thread->number_mask = 1L << thread->number;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   330      thread->high_mask   = 1L << (thread->current_priority & 0x07);  /* 3bit */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   331  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   332      thread->number_mask = 1L << thread->current_priority;
	mov	d15,#1
	ld.bu	d0,[a4]54
.L441:
	st.b	[a4]53,d0
.L442:
	sha	d15,d15,d0
	st.w	[a4]56,d15
.L443:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   333  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   334  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   335      RT_DEBUG_LOG(RT_DEBUG_THREAD, ("startup a thread:%s with priority:%d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   336                                     thread->name, thread->init_priority));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   337      /* change thread stat */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   338      thread->stat = RT_THREAD_SUSPEND;
	mov	d15,#2
	st.b	[a4]52,d15
.L444:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   339      /* then resume it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   340      rt_thread_resume(thread);
	call	rt_thread_resume
.L353:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   341      if (rt_thread_self() != RT_NULL)
	call	rt_thread_self
.L445:
	jz.a	a2,.L9
.L446:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   342      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   343          /* do a scheduling */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   344          rt_schedule();
	call	rt_schedule
.L9:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   345      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   346  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   347      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   348  }
	mov	d2,#0
	ret
.L217:
	
__rt_thread_startup_function_end:
	.size	rt_thread_startup,__rt_thread_startup_function_end-rt_thread_startup
.L112:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_detach',code,cluster('rt_thread_detach')
	.sect	'.text.thread.rt_thread_detach'
	.align	2
	
	.global	rt_thread_detach

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   349  RTM_EXPORT(rt_thread_startup);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   350  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   351  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   352   * This function will detach a thread. The thread object will be removed from
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   353   * thread queue and detached/deleted from system object management.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   354   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   355   * @param thread the thread to be deleted
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   356   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   357   * @return the operation status, RT_EOK on OK, -RT_ERROR on error
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   358   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   359  rt_err_t rt_thread_detach(rt_thread_t thread)
; Function rt_thread_detach
.L63:
rt_thread_detach:	.type	func
	mov.aa	a15,a4
.L354:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   360  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   361      /* thread check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   362      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   363      RT_ASSERT(rt_object_get_type((rt_object_t)thread) == RT_Object_Class_Thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   364      RT_ASSERT(rt_object_is_systemobject((rt_object_t)thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   365  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   366      if ((thread->stat & RT_THREAD_STAT_MASK) == RT_THREAD_CLOSE)
	ld.bu	d15,[a15]52
.L422:
	and	d15,#7
.L423:
	jeq	d15,#4,.L11
.L424:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   367          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   368  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   369      if ((thread->stat & RT_THREAD_STAT_MASK) != RT_THREAD_INIT)
	jeq	d15,#0,.L12
.L425:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   370      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   371          /* remove from schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   372          rt_schedule_remove_thread(thread);
	call	rt_schedule_remove_thread
.L12:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   373      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   374  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   375      _thread_cleanup_execute(thread);
	mov.aa	a4,a15
.L355:
	call	_thread_cleanup_execute
.L356:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   376  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   377      /* release thread timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   378      rt_timer_detach(&(thread->thread_timer));
	lea	a4,[a15]76
	call	rt_timer_detach
.L426:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   379  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   380      /* change stat */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   381      thread->stat = RT_THREAD_CLOSE;
	mov	d15,#4
	st.b	[a15]52,d15
.L427:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   382  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   383      /* detach thread object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   384      rt_object_detach((rt_object_t)thread);
	mov.aa	a4,a15
.L357:
	call	rt_object_detach

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   385  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   386      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   387  }
.L11:
	mov	d2,#0
	ret
.L210:
	
__rt_thread_detach_function_end:
	.size	rt_thread_detach,__rt_thread_detach_function_end-rt_thread_detach
.L97:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_yield',code,cluster('rt_thread_yield')
	.sect	'.text.thread.rt_thread_yield'
	.align	2
	
	.global	rt_thread_yield

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   388  RTM_EXPORT(rt_thread_detach);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   389  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   390  #ifdef RT_USING_HEAP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   391  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   392   * This function will create a thread object and allocate thread object memory
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   393   * and stack.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   394   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   395   * @param name the name of thread, which shall be unique
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   396   * @param entry the entry function of thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   397   * @param parameter the parameter of thread enter function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   398   * @param stack_size the size of thread stack
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   399   * @param priority the priority of thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   400   * @param tick the time slice if there are same priority thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   401   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   402   * @return the created thread object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   403   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   404  rt_thread_t rt_thread_create(const char *name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   405                               void (*entry)(void *parameter),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   406                               void       *parameter,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   407                               rt_uint32_t stack_size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   408                               rt_uint8_t  priority,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   409                               rt_uint32_t tick)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   410  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   411      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   412      void *stack_start;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   413  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   414      thread = (struct rt_thread *)rt_object_allocate(RT_Object_Class_Thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   415                                                      name);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   416      if (thread == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   417          return RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   418  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   419      stack_start = (void *)RT_KERNEL_MALLOC(stack_size);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   420      if (stack_start == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   421      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   422          /* allocate stack failure */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   423          rt_object_delete((rt_object_t)thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   424  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   425          return RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   426      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   427  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   428      _rt_thread_init(thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   429                      name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   430                      entry,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   431                      parameter,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   432                      stack_start,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   433                      stack_size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   434                      priority,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   435                      tick);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   436  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   437      return thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   438  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   439  RTM_EXPORT(rt_thread_create);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   440  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   441  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   442   * This function will delete a thread. The thread object will be removed from
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   443   * thread queue and deleted from system object management in the idle thread.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   444   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   445   * @param thread the thread to be deleted
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   446   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   447   * @return the operation status, RT_EOK on OK, -RT_ERROR on error
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   448   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   449  rt_err_t rt_thread_delete(rt_thread_t thread)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   450  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   451      rt_base_t lock;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   452  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   453      /* thread check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   454      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   455      RT_ASSERT(rt_object_get_type((rt_object_t)thread) == RT_Object_Class_Thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   456      RT_ASSERT(rt_object_is_systemobject((rt_object_t)thread) == RT_FALSE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   457  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   458      if ((thread->stat & RT_THREAD_STAT_MASK) == RT_THREAD_CLOSE)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   459          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   460  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   461      if ((thread->stat & RT_THREAD_STAT_MASK) != RT_THREAD_INIT)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   462      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   463          /* remove from schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   464          rt_schedule_remove_thread(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   465      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   466  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   467      _thread_cleanup_execute(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   468  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   469      /* release thread timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   470      rt_timer_detach(&(thread->thread_timer));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   471  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   472      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   473      lock = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   474  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   475      /* change stat */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   476      thread->stat = RT_THREAD_CLOSE;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   477  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   478      /* insert to defunct thread list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   479      rt_list_insert_after(&rt_thread_defunct, &(thread->tlist));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   480  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   481      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   482      rt_hw_interrupt_enable(lock);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   483  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   484      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   485  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   486  RTM_EXPORT(rt_thread_delete);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   487  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   488  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   489  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   490   * This function will let current thread yield processor, and scheduler will
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   491   * choose a highest thread to run. After yield processor, the current thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   492   * is still in READY state.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   493   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   494   * @return RT_EOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   495   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   496  rt_err_t rt_thread_yield(void)
; Function rt_thread_yield
.L65:
rt_thread_yield:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   497  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   498      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   499      rt_base_t lock;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   500  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   501      thread = rt_thread_self();
	call	rt_thread_self
.L358:
	mov.aa	a15,a2
.L360:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   502      lock = rt_hw_interrupt_disable();
	call	rt_hw_interrupt_disable
.L359:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   503      thread->remaining_tick = thread->init_tick;
	ld.w	d15,[a15]66
.L451:
	st.w	[a15]70,d15
.L452:
	mov	d8,d2
.L362:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   504      thread->stat |= RT_THREAD_STAT_YIELD;
	ld.bu	d15,[a15]52
.L453:
	or	d15,#8
	st.b	[a15]52,d15
.L454:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   505      rt_schedule();
	call	rt_schedule
.L361:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   506      rt_hw_interrupt_enable(lock);
	mov	d4,d8
	call	rt_hw_interrupt_enable
.L455:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   507  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   508      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   509  }
	mov	d2,#0
	ret
.L219:
	
__rt_thread_yield_function_end:
	.size	rt_thread_yield,__rt_thread_yield_function_end-rt_thread_yield
.L117:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_sleep',code,cluster('rt_thread_sleep')
	.sect	'.text.thread.rt_thread_sleep'
	.align	2
	
	.global	rt_thread_sleep

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   510  RTM_EXPORT(rt_thread_yield);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   511  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   512  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   513   * This function will let current thread sleep for some ticks.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   514   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   515   * @param tick the sleep ticks
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   516   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   517   * @return RT_EOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   518   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   519  rt_err_t rt_thread_sleep(rt_tick_t tick)
; Function rt_thread_sleep
.L67:
rt_thread_sleep:	.type	func
	sub.a	a10,#8
.L363:
	st.w	[a10],d4
.L594:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   520  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   521      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   522      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   523  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   524      /* set to current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   525      thread = rt_thread_self();
	call	rt_thread_self
.L364:
	mov.aa	a15,a2
.L366:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   526      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   527      RT_ASSERT(rt_object_get_type((rt_object_t)thread) == RT_Object_Class_Thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   528  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   529      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   530      temp = rt_hw_interrupt_disable();
	call	rt_hw_interrupt_disable
.L365:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   531  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   532      /* suspend thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   533      rt_thread_suspend(thread);
	mov	d15,d2
	mov.aa	a4,a15
.L368:
	call	rt_thread_suspend
.L367:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   534  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   535      /* reset the timeout of thread timer and start it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   536      rt_timer_control(&(thread->thread_timer), RT_TIMER_CTRL_SET_TIME, &tick);
	lea	a4,[a15]76
.L595:
	mov	d4,#0
	mov.aa	a5,a10
	call	rt_timer_control
.L596:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   537      rt_timer_start(&(thread->thread_timer));
	lea	a4,[a15]76
	call	rt_timer_start
.L597:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   538  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   539      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   540      rt_hw_interrupt_enable(temp);
	mov	d4,d15
	call	rt_hw_interrupt_enable
.L598:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   541  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   542      rt_schedule();
	call	rt_schedule
.L599:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   543  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   544      /* clear error number of this thread to RT_EOK */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   545      if (thread->error == -RT_ETIMEOUT)
	ld.w	d15,[a15]48
.L369:
	jne	d15,#-2,.L15
.L600:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   546          thread->error = RT_EOK;
	mov	d15,#0
	st.w	[a15]48,d15
.L15:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   547  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   548      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   549  }
	mov	d2,#0
	ret
.L308:
	
__rt_thread_sleep_function_end:
	.size	rt_thread_sleep,__rt_thread_sleep_function_end-rt_thread_sleep
.L187:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_delay',code,cluster('rt_thread_delay')
	.sect	'.text.thread.rt_thread_delay'
	.align	2
	
	.global	rt_thread_delay

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   550  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   551  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   552   * This function will let current thread delay for some ticks.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   553   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   554   * @param tick the delay ticks
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   555   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   556   * @return RT_EOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   557   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   558  rt_err_t rt_thread_delay(rt_tick_t tick)
; Function rt_thread_delay
.L69:
rt_thread_delay:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   559  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   560      return rt_thread_sleep(tick);
	j	rt_thread_sleep
.L222:
	
__rt_thread_delay_function_end:
	.size	rt_thread_delay,__rt_thread_delay_function_end-rt_thread_delay
.L122:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_delay_until',code,cluster('rt_thread_delay_until')
	.sect	'.text.thread.rt_thread_delay_until'
	.align	2
	
	.global	rt_thread_delay_until

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   561  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   562  RTM_EXPORT(rt_thread_delay);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   563  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   564  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   565   * This function will let current thread delay until (*tick + inc_tick).
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   566   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   567   * @param tick the tick of last wakeup.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   568   * @param inc_tick the increment tick
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   569   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   570   * @return RT_EOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   571   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   572  rt_err_t rt_thread_delay_until(rt_tick_t *tick, rt_tick_t inc_tick)
; Function rt_thread_delay_until
.L71:
rt_thread_delay_until:	.type	func
	sub.a	a10,#8
.L370:
	mov.aa	a12,a4
.L372:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   573  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   574      register rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   575      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   576      rt_tick_t cur_tick;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   577  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   578      RT_ASSERT(tick != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   579  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   580      /* set to current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   581      thread = rt_thread_self();
	mov	d15,d4
	call	rt_thread_self
.L371:
	mov.aa	a15,a2
.L375:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   582      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   583      RT_ASSERT(rt_object_get_type((rt_object_t)thread) == RT_Object_Class_Thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   584  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   585      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   586      level = rt_hw_interrupt_disable();
	call	rt_hw_interrupt_disable
.L374:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   587  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   588      cur_tick = rt_tick_get();
	mov	d8,d2
	call	rt_tick_get
.L376:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   589      if (cur_tick - *tick < inc_tick)
	ld.w	d0,[a12]
.L464:
	sub	d1,d2,d0
.L465:
	jge.u	d1,d15,.L18
.L231:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   590      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   591          rt_tick_t left_tick;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   592  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   593          *tick += inc_tick;
	add	d0,d15
	st.w	[a12],d0
.L466:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   594          left_tick = *tick - cur_tick;
	sub	d0,d2
	st.w	[a10],d0
.L467:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   595  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   596          /* suspend thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   597          rt_thread_suspend(thread);
	mov.aa	a4,a15
.L378:
	call	rt_thread_suspend
.L377:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   598  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   599          /* reset the timeout of thread timer and start it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   600          rt_timer_control(&(thread->thread_timer), RT_TIMER_CTRL_SET_TIME, &left_tick);
	lea	a4,[a15]76
.L468:
	mov	d4,#0
	mov.aa	a5,a10
	call	rt_timer_control
.L469:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   601          rt_timer_start(&(thread->thread_timer));
	lea	a4,[a15]76
	call	rt_timer_start
.L470:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   602  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   603          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   604          rt_hw_interrupt_enable(level);
	mov	d4,d8
	call	rt_hw_interrupt_enable
.L471:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   605  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   606          rt_schedule();
	call	rt_schedule
.L472:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   607  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   608          /* clear error number of this thread to RT_EOK */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   609          if (thread->error == -RT_ETIMEOUT)
	ld.w	d15,[a15]48
.L373:
	jne	d15,#-2,.L19
.L473:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   610          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   611              thread->error = RT_EOK;
	mov	d15,#0
	st.w	[a15]48,d15
.L232:
	j	.L20
.L18:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   612          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   613      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   614      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   615      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   616          *tick = cur_tick;
	st.w	[a12],d2
.L474:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   617          rt_hw_interrupt_enable(level);
	mov	d4,d8
	call	rt_hw_interrupt_enable
.L20:
.L19:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   618      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   619  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   620      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   621  }
	mov	d2,#0
	ret
.L224:
	
__rt_thread_delay_until_function_end:
	.size	rt_thread_delay_until,__rt_thread_delay_until_function_end-rt_thread_delay_until
.L127:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_mdelay',code,cluster('rt_thread_mdelay')
	.sect	'.text.thread.rt_thread_mdelay'
	.align	2
	
	.global	rt_thread_mdelay

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   622  RTM_EXPORT(rt_thread_delay_until);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   623  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   624  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   625   * This function will let current thread delay for some milliseconds.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   626   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   627   * @param ms the delay ms time
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   628   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   629   * @return RT_EOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   630   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   631  rt_err_t rt_thread_mdelay(rt_int32_t ms)
; Function rt_thread_mdelay
.L73:
rt_thread_mdelay:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   632  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   633      rt_tick_t tick;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   634  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   635      tick = rt_tick_from_millisecond(ms);
	call	rt_tick_from_millisecond
.L379:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   636  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   637      return rt_thread_sleep(tick);
	mov	d4,d2
.L380:
	j	rt_thread_sleep
.L234:
	
__rt_thread_mdelay_function_end:
	.size	rt_thread_mdelay,__rt_thread_mdelay_function_end-rt_thread_mdelay
.L132:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_control',code,cluster('rt_thread_control')
	.sect	'.text.thread.rt_thread_control'
	.align	2
	
	.global	rt_thread_control

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   638  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   639  RTM_EXPORT(rt_thread_mdelay);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   640  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   641  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   642   * This function will control thread behaviors according to control command.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   643   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   644   * @param thread the specified thread to be controlled
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   645   * @param cmd the control command, which includes
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   646   *  RT_THREAD_CTRL_CHANGE_PRIORITY for changing priority level of thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   647   *  RT_THREAD_CTRL_STARTUP for starting a thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   648   *  RT_THREAD_CTRL_CLOSE for delete a thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   649   *  RT_THREAD_CTRL_BIND_CPU for bind the thread to a CPU.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   650   * @param arg the argument of control command
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   651   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   652   * @return RT_EOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   653   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   654  rt_err_t rt_thread_control(rt_thread_t thread, int cmd, void *arg)
; Function rt_thread_control
.L75:
rt_thread_control:	.type	func
	mov.aa	a15,a4
.L382:
	mov.aa	a12,a5
.L383:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   655  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   656      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   657  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   658      /* thread check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   659      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   660      RT_ASSERT(rt_object_get_type((rt_object_t)thread) == RT_Object_Class_Thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   661  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   662      switch (cmd)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   663      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   664          case RT_THREAD_CTRL_CHANGE_PRIORITY:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   665          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   666              /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   667              temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   668  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   669              /* for ready thread, change queue */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   670              if ((thread->stat & RT_THREAD_STAT_MASK) == RT_THREAD_READY)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   671              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   672                  /* remove thread from schedule queue first */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   673                  rt_schedule_remove_thread(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   674  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   675                  /* change thread priority */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   676                  thread->current_priority = *(rt_uint8_t *)arg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   677  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   678                  /* recalculate priority attribute */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   679      #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   680                  thread->number      = thread->current_priority >> 3;            /* 5bit */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   681                  thread->number_mask = 1 << thread->number;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   682                  thread->high_mask   = 1 << (thread->current_priority & 0x07);   /* 3bit */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   683      #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   684                  thread->number_mask = 1 << thread->current_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   685      #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   686  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   687                  /* insert thread to schedule queue again */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   688                  rt_schedule_insert_thread(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   689              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   690              else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   691              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   692                  thread->current_priority = *(rt_uint8_t *)arg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   693  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   694                  /* recalculate priority attribute */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   695      #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   696                  thread->number      = thread->current_priority >> 3;            /* 5bit */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   697                  thread->number_mask = 1 << thread->number;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   698                  thread->high_mask   = 1 << (thread->current_priority & 0x07);   /* 3bit */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   699      #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   700                  thread->number_mask = 1 << thread->current_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   701      #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   702              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   703  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   704              /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   705              rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   706              break;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   707          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   708  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   709          case RT_THREAD_CTRL_STARTUP:
	jeq	d4,#0,.L23
.L483:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   710          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   711              return rt_thread_startup(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   712          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   713  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   714          case RT_THREAD_CTRL_CLOSE:
	jeq	d4,#1,.L24
.L484:
	jne	d4,#2,.L26
.L485:
	call	rt_hw_interrupt_disable
.L381:
	ld.bu	d15,[a15]52
.L486:
	mov	d8,d2
.L385:
	and	d15,#7
.L487:
	jne	d15,#1,.L27
.L488:
	mov.aa	a4,a15
.L386:
	call	rt_schedule_remove_thread
.L384:
	ld.bu	d0,[a12]
.L489:
	st.b	[a15]53,d0
.L490:
	sha	d15,d15,d0
	st.w	[a15]56,d15
.L491:
	mov.aa	a4,a15
.L387:
	call	rt_schedule_insert_thread
.L388:
	j	.L28
.L27:
	mov	d15,#1
	ld.bu	d0,[a12]
.L492:
	st.b	[a15]53,d0
.L493:
	sha	d15,d15,d0
	st.w	[a15]56,d15
.L28:
	mov	d4,d8
	call	rt_hw_interrupt_enable
.L494:
	j	.L29
.L23:
	j	rt_thread_startup
.L24:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   715          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   716              rt_err_t rt_err;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   717  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   718              if (rt_object_is_systemobject((rt_object_t)thread) == RT_TRUE)
	call	rt_object_is_systemobject
.L389:
	jne	d2,#1,.L31
.L495:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   719              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   720                  rt_err = rt_thread_detach(thread);
	mov.aa	a4,a15
.L390:
	call	rt_thread_detach
.L391:
	mov	d15,d2
.L31:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   721              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   722      #ifdef RT_USING_HEAP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   723              else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   724              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   725                  rt_err = rt_thread_delete(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   726              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   727      #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   728              rt_schedule();
	call	rt_schedule
.L392:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   729              return rt_err;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   730          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   731  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   732      #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   733          case RT_THREAD_CTRL_BIND_CPU:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   734          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   735              rt_uint8_t cpu;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   736  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   737              if ((thread->stat & RT_THREAD_STAT_MASK) != RT_THREAD_INIT)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   738              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   739                  /* we only support bind cpu before started phase. */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   740                  return RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   741              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   742  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   743              cpu = (rt_uint8_t)(size_t)arg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   744              thread->bind_cpu = cpu > RT_CPUS_NR? RT_CPUS_NR : cpu;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   745              break;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   746          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   747      #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   748  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   749          default:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   750              break;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   751      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   752  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   753      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   754  }
	mov	d2,d15
	ret
.L29:
.L26:
	mov	d2,#0
	ret
.L238:
	
__rt_thread_control_function_end:
	.size	rt_thread_control,__rt_thread_control_function_end-rt_thread_control
.L137:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_suspend',code,cluster('rt_thread_suspend')
	.sect	'.text.thread.rt_thread_suspend'
	.align	2
	
	.global	rt_thread_suspend

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   755  RTM_EXPORT(rt_thread_control);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   756  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   757  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   758   * This function will suspend the specified thread.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   759   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   760   * @param thread the thread to be suspended
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   761   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   762   * @return the operation status, RT_EOK on OK, -RT_ERROR on error
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   763   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   764   * @note if suspend self thread, after this function call, the
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   765   * rt_schedule() must be invoked.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   766   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   767  rt_err_t rt_thread_suspend(rt_thread_t thread)
; Function rt_thread_suspend
.L77:
rt_thread_suspend:	.type	func
	mov.aa	a15,a4
.L394:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   768  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   769      register rt_base_t stat;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   770      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   771  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   772      /* thread check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   773      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   774      RT_ASSERT(rt_object_get_type((rt_object_t)thread) == RT_Object_Class_Thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   775  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   776      RT_DEBUG_LOG(RT_DEBUG_THREAD, ("thread suspend:  %s\n", thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   777  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   778      stat = thread->stat & RT_THREAD_STAT_MASK;
	ld.bu	d15,[a15]52
.L395:
	and	d15,#7
.L500:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   779      if ((stat != RT_THREAD_READY) && (stat != RT_THREAD_RUNNING))
	jeq	d15,#1,.L34
.L501:
	jeq	d15,#3,.L35
.L502:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   780      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   781          RT_DEBUG_LOG(RT_DEBUG_THREAD, ("thread suspend: thread disorder, 0x%2x\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   782                                         thread->stat));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   783          return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   784      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   785  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   786      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   787      temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   788      if (stat == RT_THREAD_RUNNING)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   789      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   790          /* not suspend running status thread on other core */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   791          RT_ASSERT(thread == rt_thread_self());
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   792      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   793  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   794      /* change thread stat */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   795      rt_schedule_remove_thread(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   796      thread->stat = RT_THREAD_SUSPEND | (thread->stat & ~RT_THREAD_STAT_MASK);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   797  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   798      /* stop thread timer anyway */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   799      rt_timer_stop(&(thread->thread_timer));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   800  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   801      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   802      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   803  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   804      RT_OBJECT_HOOK_CALL(rt_thread_suspend_hook, (thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   805      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   806  }
	mov	d2,#-1
	ret
.L35:
.L34:
	call	rt_hw_interrupt_disable
.L393:
	mov	d8,d2
	mov.aa	a4,a15
.L398:
	call	rt_schedule_remove_thread
.L397:
	ld.bu	d15,[a15]52
.L396:
	lea	a4,[a15]76
.L503:
	and	d15,#248
.L504:
	or	d15,#2
	st.b	[a15]52,d15
.L505:
	call	rt_timer_stop
.L506:
	mov	d4,d8
	call	rt_hw_interrupt_enable
.L507:
	ld.a	a2,rt_thread_suspend_hook
	jz.a	a2,.L37
	mov.aa	a4,a15
.L399:
	calli	a2
.L37:
	mov	d2,#0
	ret
.L244:
	
__rt_thread_suspend_function_end:
	.size	rt_thread_suspend,__rt_thread_suspend_function_end-rt_thread_suspend
.L142:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_resume',code,cluster('rt_thread_resume')
	.sect	'.text.thread.rt_thread_resume'
	.align	2
	
	.global	rt_thread_resume

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   807  RTM_EXPORT(rt_thread_suspend);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   808  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   809  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   810   * This function will resume a thread and put it to system ready queue.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   811   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   812   * @param thread the thread to be resumed
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   813   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   814   * @return the operation status, RT_EOK on OK, -RT_ERROR on error
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   815   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   816  rt_err_t rt_thread_resume(rt_thread_t thread)
; Function rt_thread_resume
.L79:
rt_thread_resume:	.type	func
	mov.aa	a12,a4
.L401:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   817  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   818      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   819  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   820      /* thread check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   821      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   822      RT_ASSERT(rt_object_get_type((rt_object_t)thread) == RT_Object_Class_Thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   823  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   824      RT_DEBUG_LOG(RT_DEBUG_THREAD, ("thread resume:  %s\n", thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   825  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   826      if ((thread->stat & RT_THREAD_STAT_MASK) != RT_THREAD_SUSPEND)
	ld.bu	d15,[a12]52
.L512:
	and	d15,#7
.L513:
	jeq	d15,#2,.L39
.L514:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   827      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   828          RT_DEBUG_LOG(RT_DEBUG_THREAD, ("thread resume: thread disorder, %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   829                                         thread->stat));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   830  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   831          return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   832      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   833  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   834      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   835      temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   836  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   837      /* remove from suspend list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   838      rt_list_remove(&(thread->tlist));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   839  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   840      rt_timer_stop(&thread->thread_timer);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   841  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   842      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   843      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   844  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   845      /* insert to schedule ready list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   846      rt_schedule_insert_thread(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   847  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   848      RT_OBJECT_HOOK_CALL(rt_thread_resume_hook, (thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   849      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   850  }
	mov	d2,#-1
	ret
.L39:
	call	rt_hw_interrupt_disable
.L400:
	lea	a2,[a12]20
.L252:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
	ld.a	a4,[a2]
.L515:
	ld.a	a15,[a12]24
.L253:
	mov	d15,d2
.L258:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
	st.a	[a4]4,a15
.L516:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
	ld.a	a15,[a12]24
.L517:
	ld.a	a4,[a2]
.L518:
	st.a	[a15],a4
.L519:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
	st.a	[a12]24,a2
.L259:
	lea	a4,[a12]76
.L260:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
	st.a	[a2],a2
.L261:
	call	rt_timer_stop
.L402:
	mov	d4,d15
	call	rt_hw_interrupt_enable
.L520:
	mov.aa	a4,a12
.L403:
	call	rt_schedule_insert_thread
.L404:
	ld.a	a15,rt_thread_resume_hook
	jz.a	a15,.L41
	mov.aa	a4,a12
.L405:
	calli	a15
.L41:
	mov	d2,#0
	ret
.L248:
	
__rt_thread_resume_function_end:
	.size	rt_thread_resume,__rt_thread_resume_function_end-rt_thread_resume
.L147:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_timeout',code,cluster('rt_thread_timeout')
	.sect	'.text.thread.rt_thread_timeout'
	.align	2
	
	.global	rt_thread_timeout

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   851  RTM_EXPORT(rt_thread_resume);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   852  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   853  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   854   * This function is the timeout function for thread, normally which is invoked
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   855   * when thread is timeout to wait some resource.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   856   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   857   * @param parameter the parameter of thread timeout function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   858   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   859  void rt_thread_timeout(void *parameter)
; Function rt_thread_timeout
.L81:
rt_thread_timeout:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   860  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   861      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   862  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   863      thread = (struct rt_thread *)parameter;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   864  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   865      /* thread check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   866      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   867      RT_ASSERT((thread->stat & RT_THREAD_STAT_MASK) == RT_THREAD_SUSPEND);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   868      RT_ASSERT(rt_object_get_type((rt_object_t)thread) == RT_Object_Class_Thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   869  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   870      /* set error number */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   871      thread->error = -RT_ETIMEOUT;
	mov	d15,#-2
	st.w	[a4]48,d15
.L525:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   872  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   873      /* remove from suspend list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   874      rt_list_remove(&(thread->tlist));
	lea	a2,[a4]20
.L265:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
	ld.a	a5,[a2]
.L526:
	ld.a	a15,[a4]24
.L527:
	st.a	[a5]4,a15
.L528:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
	ld.a	a15,[a4]24
.L529:
	ld.a	a5,[a2]
.L530:
	st.a	[a15],a5
.L531:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
	st.a	[a4]24,a2
.L532:
	st.a	[a2],a2
.L266:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   875  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   876      /* insert to schedule ready list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   877      rt_schedule_insert_thread(thread);
	call	rt_schedule_insert_thread
.L406:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   878  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   879      /* do schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   880      rt_schedule();
	j	rt_schedule
.L262:
	
__rt_thread_timeout_function_end:
	.size	rt_thread_timeout,__rt_thread_timeout_function_end-rt_thread_timeout
.L152:
	; End of function
	
	.sdecl	'.text.thread.rt_thread_find',code,cluster('rt_thread_find')
	.sect	'.text.thread.rt_thread_find'
	.align	2
	
	.global	rt_thread_find

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   881  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   882  RTM_EXPORT(rt_thread_timeout);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   883  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   884  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   885   * This function will find the specified thread.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   886   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   887   * @param name the name of thread finding
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   888   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   889   * @return the found thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   890   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   891   * @note please don't invoke this function in interrupt status.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   892   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   893  rt_thread_t rt_thread_find(char *name)
; Function rt_thread_find
.L83:
rt_thread_find:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   894  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   895      return (rt_thread_t)rt_object_find(name, RT_Object_Class_Thread);
	mov	d4,#1
	j	rt_object_find
.L214:
	
__rt_thread_find_function_end:
	.size	rt_thread_find,__rt_thread_find_function_end-rt_thread_find
.L107:
	; End of function
	
	.sdecl	'.zbss.thread.rt_thread_suspend_hook',data,cluster('rt_thread_suspend_hook')
	.sect	'.zbss.thread.rt_thread_suspend_hook'
	.align	4
rt_thread_suspend_hook:	.type	object
	.size	rt_thread_suspend_hook,4
	.space	4
	.sdecl	'.zbss.thread.rt_thread_resume_hook',data,cluster('rt_thread_resume_hook')
	.sect	'.zbss.thread.rt_thread_resume_hook'
	.align	4
rt_thread_resume_hook:	.type	object
	.size	rt_thread_resume_hook,4
	.space	4
	.sdecl	'.zbss.thread.rt_thread_inited_hook',data,cluster('rt_thread_inited_hook')
	.sect	'.zbss.thread.rt_thread_inited_hook'
	.align	4
rt_thread_inited_hook:	.type	object
	.size	rt_thread_inited_hook,4
	.space	4
	.calls	'__INDIRECT__','rt_thread_timeout'
	.calls	'__INDIRECT__','rt_thread_exit'
	.calls	'_thread_cleanup_execute','rt_hw_interrupt_disable'
	.calls	'_thread_cleanup_execute','__INDIRECT__'
	.calls	'_thread_cleanup_execute','rt_hw_interrupt_enable'
	.calls	'rt_thread_exit','rt_thread_self'
	.calls	'rt_thread_exit','rt_hw_interrupt_disable'
	.calls	'rt_thread_exit','_thread_cleanup_execute'
	.calls	'rt_thread_exit','rt_schedule_remove_thread'
	.calls	'rt_thread_exit','rt_timer_detach'
	.calls	'rt_thread_exit','rt_object_is_systemobject'
	.calls	'rt_thread_exit','rt_object_detach'
	.calls	'rt_thread_exit','rt_schedule'
	.calls	'rt_thread_exit','rt_hw_interrupt_enable'
	.calls	'_rt_thread_init','rt_memset'
	.calls	'_rt_thread_init','rt_hw_stack_init'
	.calls	'_rt_thread_init','rt_timer_init'
	.calls	'_rt_thread_init','__INDIRECT__'
	.calls	'rt_thread_init','rt_object_init'
	.calls	'rt_thread_init','_rt_thread_init'
	.calls	'rt_thread_startup','rt_thread_resume'
	.calls	'rt_thread_startup','rt_thread_self'
	.calls	'rt_thread_startup','rt_schedule'
	.calls	'rt_thread_detach','rt_schedule_remove_thread'
	.calls	'rt_thread_detach','_thread_cleanup_execute'
	.calls	'rt_thread_detach','rt_timer_detach'
	.calls	'rt_thread_detach','rt_object_detach'
	.calls	'rt_thread_yield','rt_thread_self'
	.calls	'rt_thread_yield','rt_hw_interrupt_disable'
	.calls	'rt_thread_yield','rt_schedule'
	.calls	'rt_thread_yield','rt_hw_interrupt_enable'
	.calls	'rt_thread_sleep','rt_thread_self'
	.calls	'rt_thread_sleep','rt_hw_interrupt_disable'
	.calls	'rt_thread_sleep','rt_thread_suspend'
	.calls	'rt_thread_sleep','rt_timer_control'
	.calls	'rt_thread_sleep','rt_timer_start'
	.calls	'rt_thread_sleep','rt_hw_interrupt_enable'
	.calls	'rt_thread_sleep','rt_schedule'
	.calls	'rt_thread_delay','rt_thread_sleep'
	.calls	'rt_thread_delay_until','rt_thread_self'
	.calls	'rt_thread_delay_until','rt_hw_interrupt_disable'
	.calls	'rt_thread_delay_until','rt_tick_get'
	.calls	'rt_thread_delay_until','rt_thread_suspend'
	.calls	'rt_thread_delay_until','rt_timer_control'
	.calls	'rt_thread_delay_until','rt_timer_start'
	.calls	'rt_thread_delay_until','rt_hw_interrupt_enable'
	.calls	'rt_thread_delay_until','rt_schedule'
	.calls	'rt_thread_mdelay','rt_tick_from_millisecond'
	.calls	'rt_thread_mdelay','rt_thread_sleep'
	.calls	'rt_thread_control','rt_hw_interrupt_disable'
	.calls	'rt_thread_control','rt_schedule_remove_thread'
	.calls	'rt_thread_control','rt_schedule_insert_thread'
	.calls	'rt_thread_control','rt_hw_interrupt_enable'
	.calls	'rt_thread_control','rt_thread_startup'
	.calls	'rt_thread_control','rt_object_is_systemobject'
	.calls	'rt_thread_control','rt_thread_detach'
	.calls	'rt_thread_control','rt_schedule'
	.calls	'rt_thread_suspend','rt_hw_interrupt_disable'
	.calls	'rt_thread_suspend','rt_schedule_remove_thread'
	.calls	'rt_thread_suspend','rt_timer_stop'
	.calls	'rt_thread_suspend','rt_hw_interrupt_enable'
	.calls	'rt_thread_suspend','__INDIRECT__'
	.calls	'rt_thread_resume','rt_hw_interrupt_disable'
	.calls	'rt_thread_resume','rt_timer_stop'
	.calls	'rt_thread_resume','rt_hw_interrupt_enable'
	.calls	'rt_thread_resume','rt_schedule_insert_thread'
	.calls	'rt_thread_resume','__INDIRECT__'
	.calls	'rt_thread_timeout','rt_schedule_insert_thread'
	.calls	'rt_thread_timeout','rt_schedule'
	.calls	'rt_thread_find','rt_object_find'
	.calls	'rt_thread_suspend_sethook','',0
	.calls	'rt_thread_resume_sethook','',0
	.calls	'rt_thread_inited_sethook','',0
	.calls	'_thread_cleanup_execute','',0
	.calls	'rt_thread_exit','',0
	.calls	'_rt_thread_init','',0
	.calls	'rt_thread_init','',8
	.calls	'rt_thread_self','',0
	.calls	'rt_thread_startup','',0
	.calls	'rt_thread_detach','',0
	.calls	'rt_thread_yield','',0
	.calls	'rt_thread_sleep','',8
	.calls	'rt_thread_delay','',0
	.calls	'rt_thread_delay_until','',8
	.calls	'rt_thread_mdelay','',0
	.calls	'rt_thread_control','',0
	.calls	'rt_thread_suspend','',0
	.calls	'rt_thread_resume','',0
	.calls	'rt_thread_timeout','',0
	.extern	rt_object_init
	.extern	rt_object_detach
	.extern	rt_object_is_systemobject
	.extern	rt_object_find
	.extern	rt_tick_get
	.extern	rt_tick_from_millisecond
	.extern	rt_timer_init
	.extern	rt_timer_detach
	.extern	rt_timer_start
	.extern	rt_timer_stop
	.extern	rt_timer_control
	.extern	rt_schedule
	.extern	rt_schedule_insert_thread
	.extern	rt_schedule_remove_thread
	.extern	rt_memset
	.extern	rt_hw_stack_init
	.extern	rt_hw_interrupt_disable
	.extern	rt_hw_interrupt_enable
	.extern	rt_thread_defunct
	.extern	rt_current_thread
	.extern	__INDIRECT__
	.calls	'rt_thread_find','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L85:
	.word	3250
	.half	3
	.word	.L86
	.byte	4
.L84:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L87
	.byte	2
	.word	.L407-.L85
.L407:
	.byte	3
	.byte	'rt_list_node',0,2,229,2,8,8,4
	.byte	'next',0
	.word	170
	.byte	4,2,35,0,4
	.byte	'prev',0
	.word	170
	.byte	4,2,35,4,0,2
	.word	175
.L299:
	.byte	5
	.byte	'rt_list_init',0,3,1,47,16,1,1
.L302:
	.byte	6
	.byte	'l',0,1,47,40
	.word	223
.L304:
	.byte	7,0
.L281:
	.byte	5
	.byte	'rt_list_insert_after',0,3,1,58,16,1,1
.L283:
	.byte	6
	.byte	'l',0,1,58,48
	.word	223
.L285:
	.byte	6
	.byte	'n',0,1,58,62
	.word	223
.L287:
	.byte	7,0
.L251:
	.byte	5
	.byte	'rt_list_remove',0,3,1,86,16,1,1
.L254:
	.byte	6
	.byte	'n',0,1,86,42
	.word	223
.L256:
	.byte	7,0
.L235:
	.byte	8
	.byte	'int',0,4,5,9
	.word	344
	.byte	10
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,11
	.word	351
	.byte	0
.L205:
	.byte	8
	.byte	'unsigned int',0,4,7,12
	.word	393
	.byte	2
	.word	393
	.byte	13
	.byte	'__cmpswapw',0
	.word	409
	.byte	1,1,1,1,14
	.byte	'p',0
	.word	414
	.byte	14
	.byte	'value',0
	.word	393
	.byte	14
	.byte	'compare',0
	.word	393
	.byte	0,15
	.word	228
	.byte	16
	.word	248
	.byte	7,0,15
	.word	260
	.byte	16
	.word	288
	.byte	16
	.word	298
	.byte	7,0,15
	.word	310
	.byte	16
	.word	332
	.byte	7,0,8
	.byte	'char',0,1,6,17,8
	.word	512
	.byte	18,7,0
.L207:
	.byte	8
	.byte	'unsigned char',0,1,8,3
	.byte	'rt_object',0,2,131,3,8,20,4
	.byte	'name',0
	.word	520
	.byte	8,2,35,0,4
	.byte	'type',0
	.word	529
	.byte	1,2,35,8,4
	.byte	'flag',0
	.word	529
	.byte	1,2,35,9,4
	.byte	'list',0
	.word	175
	.byte	8,2,35,12,0,2
	.word	546
	.byte	19
	.byte	'rt_object_class_type',0,2,161,3,6,1,20
	.byte	'RT_Object_Class_Null',0,0,20
	.byte	'RT_Object_Class_Thread',0,1,20
	.byte	'RT_Object_Class_Semaphore',0,2,20
	.byte	'RT_Object_Class_Mutex',0,3,20
	.byte	'RT_Object_Class_Event',0,4,20
	.byte	'RT_Object_Class_MailBox',0,5,20
	.byte	'RT_Object_Class_MessageQueue',0,6,20
	.byte	'RT_Object_Class_MemHeap',0,7,20
	.byte	'RT_Object_Class_MemPool',0,8,20
	.byte	'RT_Object_Class_Device',0,9,20
	.byte	'RT_Object_Class_Timer',0,10,20
	.byte	'RT_Object_Class_Module',0,11,20
	.byte	'RT_Object_Class_Unknown',0,12,20
	.byte	'RT_Object_Class_Static',0,128,1,0,9
	.word	512
.L198:
	.byte	2
	.word	1011
	.byte	21
	.byte	'rt_object_init',0,3,47,6,1,1,1,1,6
	.byte	'object',0,3,47,47
	.word	619
	.byte	6
	.byte	'type',0,3,48,47
	.word	624
	.byte	6
	.byte	'name',0,3,49,47
	.word	1016
	.byte	0,22
	.byte	'rt_object_t',0,2,142,3,27
	.word	619
	.byte	21
	.byte	'rt_object_detach',0,3,50,6,1,1,1,1,6
	.byte	'object',0,3,50,35
	.word	1086
	.byte	0,2
	.word	546
	.byte	23
	.byte	'rt_object_is_systemobject',0,3,54,11
	.word	344
	.byte	1,1,1,1,6
	.byte	'object',0,3,54,49
	.word	1086
	.byte	0,23
	.byte	'rt_object_find',0,3,56,13
	.word	1086
	.byte	1,1,1,1,6
	.byte	'name',0,3,56,40
	.word	1016
	.byte	6
	.byte	'type',0,3,56,57
	.word	529
	.byte	0,24
	.byte	'rt_tick_get',0,3,77,11
	.word	393
	.byte	1,1,1,1,23
	.byte	'rt_tick_from_millisecond',0,3,80,12
	.word	393
	.byte	1,1,1,1,6
	.byte	'ms',0,3,80,48
	.word	344
	.byte	0,17,8
	.word	175
	.byte	18,0,0,25
	.byte	'void',0
.L202:
	.byte	2
	.word	1343
	.byte	26,1,1,11
	.word	1349
	.byte	0
.L200:
	.byte	2
	.word	1354
	.byte	3
	.byte	'rt_timer',0,2,236,3,8,44,4
	.byte	'parent',0
	.word	546
	.byte	20,2,35,0,4
	.byte	'row',0
	.word	1334
	.byte	8,2,35,20,4
	.byte	'timeout_func',0
	.word	1363
	.byte	4,2,35,28,4
	.byte	'parameter',0
	.word	1349
	.byte	4,2,35,32,4
	.byte	'init_tick',0
	.word	393
	.byte	4,2,35,36,4
	.byte	'timeout_tick',0
	.word	393
	.byte	4,2,35,40,0,2
	.word	1368
	.byte	22
	.byte	'rt_timer_t',0,2,248,3,26
	.word	1495
	.byte	21
	.byte	'rt_timer_init',0,3,86,6,1,1,1,1,6
	.byte	'timer',0,3,86,32
	.word	1500
	.byte	6
	.byte	'name',0,3,87,32
	.word	1016
	.byte	6
	.byte	'timeout',0,3,88,27
	.word	1363
	.byte	6
	.byte	'parameter',0,3,89,32
	.word	1349
	.byte	6
	.byte	'time',0,3,90,32
	.word	393
	.byte	6
	.byte	'flag',0,3,91,32
	.word	529
	.byte	0,2
	.word	1368
.L194:
	.byte	8
	.byte	'long int',0,4,5,23
	.byte	'rt_timer_detach',0,3,92,10
	.word	1635
	.byte	1,1,1,1,6
	.byte	'timer',0,3,92,37
	.word	1500
	.byte	0,23
	.byte	'rt_timer_start',0,3,99,10
	.word	1635
	.byte	1,1,1,1,6
	.byte	'timer',0,3,99,36
	.word	1500
	.byte	0,23
	.byte	'rt_timer_stop',0,3,100,10
	.word	1635
	.byte	1,1,1,1,6
	.byte	'timer',0,3,100,35
	.word	1500
	.byte	0,23
	.byte	'rt_timer_control',0,3,101,10
	.word	1635
	.byte	1,1,1,1,6
	.byte	'timer',0,3,101,38
	.word	1500
	.byte	6
	.byte	'cmd',0,3,101,49
	.word	344
	.byte	6
	.byte	'arg',0,3,101,60
	.word	1349
	.byte	0,8
	.byte	'unsigned long int',0,4,7,26,1,1,11
	.word	.L196-.L85
	.byte	0
.L269:
	.byte	2
	.word	1862
	.byte	3
	.byte	'rt_thread',0,2,213,4,8,128,1,4
	.byte	'name',0
	.word	520
	.byte	8,2,35,0,4
	.byte	'type',0
	.word	529
	.byte	1,2,35,8,4
	.byte	'flags',0
	.word	529
	.byte	1,2,35,9,4
	.byte	'list',0
	.word	175
	.byte	8,2,35,12,4
	.byte	'tlist',0
	.word	175
	.byte	8,2,35,20,4
	.byte	'sp',0
	.word	1349
	.byte	4,2,35,28,4
	.byte	'entry',0
	.word	1349
	.byte	4,2,35,32,4
	.byte	'parameter',0
	.word	1349
	.byte	4,2,35,36,4
	.byte	'stack_addr',0
	.word	1349
	.byte	4,2,35,40,4
	.byte	'stack_size',0
	.word	393
	.byte	4,2,35,44,4
	.byte	'error',0
	.word	1635
	.byte	4,2,35,48,4
	.byte	'stat',0
	.word	529
	.byte	1,2,35,52,4
	.byte	'current_priority',0
	.word	529
	.byte	1,2,35,53,4
	.byte	'init_priority',0
	.word	529
	.byte	1,2,35,54,4
	.byte	'number_mask',0
	.word	393
	.byte	4,2,35,56,4
	.byte	'event_set',0
	.word	393
	.byte	4,2,35,60,4
	.byte	'event_info',0
	.word	529
	.byte	1,2,35,64,4
	.byte	'init_tick',0
	.word	1841
	.byte	4,2,35,66,4
	.byte	'remaining_tick',0
	.word	1841
	.byte	4,2,35,70,4
	.byte	'thread_timer',0
	.word	1368
	.byte	44,2,35,76,4
	.byte	'cleanup',0
	.word	1871
	.byte	4,2,35,120,4
	.byte	'user_data',0
	.word	1841
	.byte	4,2,35,124,0
.L196:
	.byte	2
	.word	1876
	.byte	2
	.word	1876
.L211:
	.byte	22
	.byte	'rt_thread_t',0,2,160,5,27
	.word	2291
.L215:
	.byte	2
	.word	512
.L225:
	.byte	2
	.word	393
	.byte	27
	.byte	'rt_schedule',0,3,180,1,6,1,1,1,1,21
	.byte	'rt_schedule_insert_thread',0,3,181,1,6,1,1,1,1,6
	.byte	'thread',0,3,181,1,50
	.word	2291
	.byte	0,21
	.byte	'rt_schedule_remove_thread',0,3,182,1,6,1,1,1,1,6
	.byte	'thread',0,3,182,1,50
	.word	2291
	.byte	0,23
	.byte	'rt_memset',0,3,158,4,7
	.word	1349
	.byte	1,1,1,1,6
	.byte	'src',0,3,158,4,23
	.word	1349
	.byte	6
	.byte	'c',0,3,158,4,32
	.word	344
	.byte	6
	.byte	'n',0,3,158,4,46
	.word	1841
	.byte	0,2
	.word	529
	.byte	23
	.byte	'rt_hw_stack_init',0,4,65,13
	.word	2516
	.byte	1,1,1,1,6
	.byte	'entry',0,4,65,42
	.word	1349
	.byte	6
	.byte	'parameter',0,4,66,42
	.word	1349
	.byte	6
	.byte	'stack_addr',0,4,67,42
	.word	2516
	.byte	6
	.byte	'exit',0,4,68,42
	.word	1349
	.byte	0,24
	.byte	'rt_hw_interrupt_disable',0,4,105,11
	.word	1635
	.byte	1,1,1,1,21
	.byte	'rt_hw_interrupt_enable',0,4,106,6,1,1,1,1,6
	.byte	'level',0,4,106,39
	.word	1635
	.byte	0,28
	.byte	'__INDIRECT__',0,5,1,1,1,1,1,22
	.byte	'__size_t',0,5,1,1
	.word	393
	.byte	29,1,2
	.word	2734
	.byte	22
	.byte	'__codeptr',0,5,1,1
	.word	2736
	.byte	22
	.byte	'__intptr_t',0,5,1,1
	.word	344
	.byte	22
	.byte	'__uintptr_t',0,5,1,1
	.word	393
	.byte	22
	.byte	'rt_int32_t',0,2,68,41
	.word	344
	.byte	22
	.byte	'rt_uint8_t',0,2,69,41
	.word	529
	.byte	8
	.byte	'unsigned short int',0,2,7,22
	.byte	'rt_uint16_t',0,2,70,41
	.word	2836
	.byte	22
	.byte	'rt_uint32_t',0,2,71,41
	.word	393
	.byte	22
	.byte	'rt_bool_t',0,2,82,41
	.word	344
	.byte	22
	.byte	'rt_base_t',0,2,83,41
	.word	1635
	.byte	22
	.byte	'rt_ubase_t',0,2,84,41
	.word	1841
	.byte	22
	.byte	'rt_err_t',0,2,86,41
	.word	1635
	.byte	22
	.byte	'rt_tick_t',0,2,88,41
	.word	393
	.byte	22
	.byte	'rt_size_t',0,2,90,41
	.word	1841
	.byte	22
	.byte	'rt_list_t',0,2,234,2,29
	.word	175
	.byte	2
	.word	.L408-.L85
.L408:
	.byte	3
	.byte	'rt_slist_node',0,2,239,2,8,4,4
	.byte	'next',0
	.word	3025
	.byte	4,2,35,0,0,22
	.byte	'rt_slist_t',0,2,243,2,30
	.word	3030
	.byte	22
	.byte	'uint16_t',0,6,246,1,41
	.word	2836
	.byte	22
	.byte	'uint32_t',0,6,254,1,41
	.word	393
	.byte	22
	.byte	'time_t',0,7,44,25
	.word	1841
	.byte	22
	.byte	'fd_mask',0,8,39,17
	.word	1635
	.byte	26,1,1,11
	.word	344
	.byte	11
	.word	1349
	.byte	0,2
	.word	3152
	.byte	22
	.byte	'rt_isr_handler_t',0,4,73,16
	.word	3166
	.byte	30
	.byte	'rt_thread_defunct',0,5,35,18
	.word	175
	.byte	1,1,30
	.byte	'rt_current_thread',0,5,174,2,24
	.word	2301
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,15,0,73,19,0,0,3,19,1,3,8,58,15,59,15,57,15,11,15,0,0
	.byte	4,13,0,3,8,73,19,11,15,56,9,0,0,5,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,6,5,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,7,11,0,0,0,8,36,0,3,8,11,15,62,15,0,0,9,38,0,73,19,0,0,10,46,1,3,8,54,15,39,12,63,12
	.byte	60,12,0,0,11,5,0,73,19,0,0,12,53,0,73,19,0,0,13,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,14,5,0,3,8
	.byte	73,19,0,0,15,46,1,49,19,0,0,16,5,0,49,19,0,0,17,1,1,11,15,73,19,0,0,18,33,0,47,15,0,0,19,4,1,3,8,58,15
	.byte	59,15,57,15,11,15,0,0,20,40,0,3,8,28,13,0,0,21,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0
	.byte	22,22,0,3,8,58,15,59,15,57,15,73,19,0,0,23,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0
	.byte	0,24,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,25,59,0,3,8,0,0,26,21,1,54,15,39,12
	.byte	0,0,27,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,28,46,0,3,8,58,15,59,15,57,15,54,15,63,12
	.byte	60,12,0,0,29,21,0,54,15,0,0,30,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L87:
	.word	.L410-.L409
.L409:
	.half	3
	.word	.L412-.L411
.L411:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc',0
	.byte	0
	.byte	'rtservice.h',0,1,0,0
	.byte	'rtdef.h',0,1,0,0
	.byte	'rtthread.h',0,1,0,0
	.byte	'rthw.h',0,1,0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0
	.byte	'stdint.h',0,2,0,0
	.byte	'time.h',0,2,0,0
	.byte	'libc_fdset.h',0,3,0,0,0
.L412:
.L410:
	.sdecl	'.debug_info',debug,cluster('rt_thread_init')
	.sect	'.debug_info'
.L88:
	.word	394
	.half	3
	.word	.L89
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L91,.L90
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_init',0,1,131,2,10
	.word	.L194
	.byte	1,1,1
	.word	.L57,.L195,.L56
	.byte	4
	.byte	'thread',0,1,131,2,43
	.word	.L196,.L197
	.byte	4
	.byte	'name',0,1,132,2,43
	.word	.L198,.L199
	.byte	4
	.byte	'entry',0,1,133,2,32
	.word	.L200,.L201
	.byte	4
	.byte	'parameter',0,1,134,2,43
	.word	.L202,.L203
	.byte	4
	.byte	'stack_start',0,1,135,2,43
	.word	.L202,.L204
	.byte	4
	.byte	'stack_size',0,1,136,2,43
	.word	.L205,.L206
	.byte	4
	.byte	'priority',0,1,137,2,43
	.word	.L207,.L208
	.byte	4
	.byte	'tick',0,1,138,2,43
	.word	.L205,.L209
	.byte	5
	.word	.L57,.L195
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_init')
	.sect	'.debug_abbrev'
.L89:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_init')
	.sect	'.debug_line'
.L90:
	.word	.L414-.L413
.L413:
	.half	3
	.word	.L416-.L415
.L415:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L416:
	.byte	5,10,7,0,5,2
	.word	.L57
	.byte	3,130,2,1,5,41,9
	.half	.L342-.L57
	.byte	3,14,1,5,10,3,114,1,5,65,9
	.half	.L347-.L342
	.byte	3,14,1,5,28,9
	.half	.L343-.L347
	.byte	3,9,1,9
	.half	.L351-.L343
	.byte	3,125,1,9
	.half	.L417-.L351
	.byte	3,3,1,5,1,7,9
	.half	.L92-.L417
	.byte	3,1,0,1,1
.L414:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_init')
	.sect	'.debug_ranges'
.L91:
	.word	-1,.L57,0,.L92-.L57,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_detach')
	.sect	'.debug_info'
.L93:
	.word	247
	.half	3
	.word	.L94
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L96,.L95
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_detach',0,1,231,2,10
	.word	.L194
	.byte	1,1,1
	.word	.L63,.L210,.L62
	.byte	4
	.byte	'thread',0,1,231,2,39
	.word	.L211,.L212
	.byte	5
	.word	.L63,.L210
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_detach')
	.sect	'.debug_abbrev'
.L94:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_detach')
	.sect	'.debug_line'
.L95:
	.word	.L419-.L418
.L418:
	.half	3
	.word	.L421-.L420
.L420:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L421:
	.byte	5,10,7,0,5,2
	.word	.L63
	.byte	3,230,2,1,5,16,9
	.half	.L354-.L63
	.byte	3,7,1,5,23,9
	.half	.L422-.L354
	.byte	1,5,5,9
	.half	.L423-.L422
	.byte	1,7,9
	.half	.L424-.L423
	.byte	3,3,1,5,35,7,9
	.half	.L425-.L424
	.byte	3,3,1,5,29,9
	.half	.L12-.L425
	.byte	3,3,1,9
	.half	.L356-.L12
	.byte	3,3,1,5,20,9
	.half	.L426-.L356
	.byte	3,3,1,5,18,1,5,22,9
	.half	.L427-.L426
	.byte	3,3,1,5,12,9
	.half	.L11-.L427
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L97-.L11
	.byte	0,1,1
.L419:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_detach')
	.sect	'.debug_ranges'
.L96:
	.word	-1,.L63,0,.L97-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_self')
	.sect	'.debug_info'
.L98:
	.word	225
	.half	3
	.word	.L99
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L101,.L100
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_self',0,1,163,2,13
	.word	.L211
	.byte	1,1,1
	.word	.L59,.L213,.L58
	.byte	4
	.word	.L59,.L213
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_self')
	.sect	'.debug_abbrev'
.L99:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_self')
	.sect	'.debug_line'
.L100:
	.word	.L429-.L428
.L428:
	.half	3
	.word	.L431-.L430
.L430:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L431:
	.byte	5,12,7,0,5,2
	.word	.L59
	.byte	3,175,2,1,5,1,9
	.half	.L432-.L59
	.byte	3,2,1,7,9
	.half	.L102-.L432
	.byte	0,1,1
.L429:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_self')
	.sect	'.debug_ranges'
.L101:
	.word	-1,.L59,0,.L102-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_find')
	.sect	'.debug_info'
.L103:
	.word	243
	.half	3
	.word	.L104
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L106,.L105
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_find',0,1,253,6,13
	.word	.L211
	.byte	1,1,1
	.word	.L83,.L214,.L82
	.byte	4
	.byte	'name',0,1,253,6,34
	.word	.L215,.L216
	.byte	5
	.word	.L83,.L214
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_find')
	.sect	'.debug_abbrev'
.L104:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_find')
	.sect	'.debug_line'
.L105:
	.word	.L434-.L433
.L433:
	.half	3
	.word	.L436-.L435
.L435:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L436:
	.byte	5,46,7,0,5,2
	.word	.L83
	.byte	3,254,6,1,5,1,9
	.half	.L107-.L83
	.byte	3,1,0,1,1
.L434:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_find')
	.sect	'.debug_ranges'
.L106:
	.word	-1,.L83,0,.L107-.L83,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_startup')
	.sect	'.debug_info'
.L108:
	.word	248
	.half	3
	.word	.L109
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L111,.L110
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_startup',0,1,188,2,10
	.word	.L194
	.byte	1,1,1
	.word	.L61,.L217,.L60
	.byte	4
	.byte	'thread',0,1,188,2,40
	.word	.L211,.L218
	.byte	5
	.word	.L61,.L217
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_startup')
	.sect	'.debug_abbrev'
.L109:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_startup')
	.sect	'.debug_line'
.L110:
	.word	.L438-.L437
.L437:
	.half	3
	.word	.L440-.L439
.L439:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L440:
	.byte	5,27,7,0,5,2
	.word	.L61
	.byte	3,203,2,1,5,38,3,120,1,5,30,9
	.half	.L441-.L61
	.byte	1,9
	.half	.L442-.L441
	.byte	3,8,1,5,25,1,5,20,9
	.half	.L443-.L442
	.byte	3,6,1,5,18,1,5,22,9
	.half	.L444-.L443
	.byte	3,2,1,5,23,9
	.half	.L353-.L444
	.byte	3,1,1,5,5,9
	.half	.L445-.L353
	.byte	1,5,20,7,9
	.half	.L446-.L445
	.byte	3,3,1,5,12,9
	.half	.L9-.L446
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L112-.L9
	.byte	0,1,1
.L438:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_startup')
	.sect	'.debug_ranges'
.L111:
	.word	-1,.L61,0,.L112-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_yield')
	.sect	'.debug_info'
.L113:
	.word	265
	.half	3
	.word	.L114
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L116,.L115
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_yield',0,1,240,3,10
	.word	.L194
	.byte	1,1,1
	.word	.L65,.L219,.L64
	.byte	4
	.word	.L65,.L219
	.byte	5
	.byte	'thread',0,1,242,3,23
	.word	.L196,.L220
	.byte	5
	.byte	'lock',0,1,243,3,15
	.word	.L194,.L221
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_yield')
	.sect	'.debug_abbrev'
.L114:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_yield')
	.sect	'.debug_line'
.L115:
	.word	.L448-.L447
.L447:
	.half	3
	.word	.L450-.L449
.L449:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L450:
	.byte	5,28,7,0,5,2
	.word	.L65
	.byte	3,244,3,1,5,12,9
	.half	.L358-.L65
	.byte	1,5,35,9
	.half	.L360-.L358
	.byte	3,1,1,5,36,9
	.half	.L359-.L360
	.byte	3,1,1,5,28,9
	.half	.L451-.L359
	.byte	1,5,10,9
	.half	.L452-.L451
	.byte	3,127,1,5,11,9
	.half	.L362-.L452
	.byte	3,2,1,5,18,9
	.half	.L453-.L362
	.byte	1,5,16,9
	.half	.L454-.L453
	.byte	3,1,1,5,28,9
	.half	.L361-.L454
	.byte	3,1,1,5,12,9
	.half	.L455-.L361
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L117-.L455
	.byte	0,1,1
.L448:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_yield')
	.sect	'.debug_ranges'
.L116:
	.word	-1,.L65,0,.L117-.L65,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_delay')
	.sect	'.debug_info'
.L118:
	.word	244
	.half	3
	.word	.L119
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L121,.L120
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_delay',0,1,174,4,10
	.word	.L194
	.byte	1,1,1
	.word	.L69,.L222,.L68
	.byte	4
	.byte	'tick',0,1,174,4,36
	.word	.L205,.L223
	.byte	5
	.word	.L69,.L222
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_delay')
	.sect	'.debug_abbrev'
.L119:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_delay')
	.sect	'.debug_line'
.L120:
	.word	.L457-.L456
.L456:
	.half	3
	.word	.L459-.L458
.L458:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L459:
	.byte	5,28,7,0,5,2
	.word	.L69
	.byte	3,175,4,1,5,1,7,9
	.half	.L122-.L69
	.byte	3,1,0,1,1
.L457:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_delay')
	.sect	'.debug_ranges'
.L121:
	.word	-1,.L69,0,.L122-.L69,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_delay_until')
	.sect	'.debug_info'
.L123:
	.word	367
	.half	3
	.word	.L124
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L126,.L125
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_delay_until',0,1,188,4,10
	.word	.L194
	.byte	1,1,1
	.word	.L71,.L224,.L70
	.byte	4
	.byte	'tick',0,1,188,4,43
	.word	.L225,.L226
	.byte	4
	.byte	'inc_tick',0,1,188,4,59
	.word	.L205,.L227
	.byte	5
	.word	.L71,.L224
	.byte	6
	.byte	'level',0,1,190,4,24
	.word	.L194,.L228
	.byte	6
	.byte	'thread',0,1,191,4,23
	.word	.L196,.L229
	.byte	6
	.byte	'cur_tick',0,1,192,4,15
	.word	.L205,.L230
	.byte	5
	.word	.L231,.L232
	.byte	6
	.byte	'left_tick',0,1,207,4,19
	.word	.L205,.L233
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_delay_until')
	.sect	'.debug_abbrev'
.L124:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_delay_until')
	.sect	'.debug_line'
.L125:
	.word	.L461-.L460
.L460:
	.half	3
	.word	.L463-.L462
.L462:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L463:
	.byte	5,10,7,0,5,2
	.word	.L71
	.byte	3,187,4,1,5,28,9
	.half	.L372-.L71
	.byte	3,9,1,5,12,9
	.half	.L371-.L372
	.byte	1,5,36,9
	.half	.L375-.L371
	.byte	3,5,1,5,11,9
	.half	.L374-.L375
	.byte	1,5,27,3,2,1,5,20,9
	.half	.L376-.L374
	.byte	3,1,1,5,18,9
	.half	.L464-.L376
	.byte	1,5,5,9
	.half	.L465-.L464
	.byte	1,5,15,7,9
	.half	.L231-.L465
	.byte	3,4,1,5,27,9
	.half	.L466-.L231
	.byte	3,1,1,5,19,1,5,27,9
	.half	.L467-.L466
	.byte	3,3,1,5,34,9
	.half	.L377-.L467
	.byte	3,3,1,5,51,9
	.half	.L468-.L377
	.byte	1,5,76,1,5,32,9
	.half	.L469-.L468
	.byte	3,1,1,9
	.half	.L470-.L469
	.byte	3,3,1,5,20,9
	.half	.L471-.L470
	.byte	3,2,1,5,19,9
	.half	.L472-.L471
	.byte	3,3,1,5,9,9
	.half	.L373-.L472
	.byte	1,5,29,7,9
	.half	.L473-.L373
	.byte	3,2,1,5,27,1,5,9,9
	.half	.L232-.L473
	.byte	3,126,1,5,15,9
	.half	.L18-.L232
	.byte	3,7,1,5,32,9
	.half	.L474-.L18
	.byte	3,1,1,5,12,9
	.half	.L19-.L474
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L127-.L19
	.byte	0,1,1
.L461:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_delay_until')
	.sect	'.debug_ranges'
.L126:
	.word	-1,.L71,0,.L127-.L71,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_mdelay')
	.sect	'.debug_info'
.L128:
	.word	262
	.half	3
	.word	.L129
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L131,.L130
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_mdelay',0,1,247,4,10
	.word	.L194
	.byte	1,1,1
	.word	.L73,.L234,.L72
	.byte	4
	.byte	'ms',0,1,247,4,38
	.word	.L235,.L236
	.byte	5
	.word	.L73,.L234
	.byte	6
	.byte	'tick',0,1,249,4,15
	.word	.L205,.L237
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_mdelay')
	.sect	'.debug_abbrev'
.L129:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_mdelay')
	.sect	'.debug_line'
.L130:
	.word	.L476-.L475
.L475:
	.half	3
	.word	.L478-.L477
.L477:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L478:
	.byte	5,37,7,0,5,2
	.word	.L73
	.byte	3,250,4,1,5,28,9
	.half	.L379-.L73
	.byte	3,2,1,5,1,9
	.half	.L132-.L379
	.byte	3,1,0,1,1
.L476:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_mdelay')
	.sect	'.debug_ranges'
.L131:
	.word	-1,.L73,0,.L132-.L73,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_control')
	.sect	'.debug_info'
.L133:
	.word	331
	.half	3
	.word	.L134
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L136,.L135
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_control',0,1,142,5,10
	.word	.L194
	.byte	1,1,1
	.word	.L75,.L238,.L74
	.byte	4
	.byte	'thread',0,1,142,5,40
	.word	.L211,.L239
	.byte	4
	.byte	'cmd',0,1,142,5,52
	.word	.L235,.L240
	.byte	4
	.byte	'arg',0,1,142,5,63
	.word	.L202,.L241
	.byte	5
	.word	.L75,.L238
	.byte	6
	.byte	'temp',0,1,144,5,24
	.word	.L194,.L242
	.byte	5
	.word	.L24,.L26
	.byte	6
	.byte	'rt_err',0,1,204,5,22
	.word	.L194,.L243
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_control')
	.sect	'.debug_abbrev'
.L134:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_control')
	.sect	'.debug_line'
.L135:
	.word	.L480-.L479
.L479:
	.half	3
	.word	.L482-.L481
.L481:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L482:
	.byte	5,10,7,0,5,2
	.word	.L75
	.byte	3,141,5,1,5,14,9
	.half	.L383-.L75
	.byte	3,55,1,7,9
	.half	.L483-.L383
	.byte	3,5,1,7,9
	.half	.L484-.L483
	.byte	3,78,1,5,43,7,9
	.half	.L485-.L484
	.byte	3,3,1,5,24,9
	.half	.L381-.L485
	.byte	3,3,1,5,18,9
	.half	.L486-.L381
	.byte	3,125,1,5,31,9
	.half	.L385-.L486
	.byte	3,3,1,5,13,9
	.half	.L487-.L385
	.byte	1,5,43,7,9
	.half	.L488-.L487
	.byte	3,3,1,5,44,9
	.half	.L384-.L488
	.byte	3,3,1,5,42,9
	.half	.L489-.L384
	.byte	1,5,41,9
	.half	.L490-.L489
	.byte	3,8,1,5,37,1,5,43,9
	.half	.L491-.L490
	.byte	3,4,1,5,50,9
	.half	.L388-.L491
	.byte	3,113,1,5,39,9
	.half	.L27-.L388
	.byte	3,27,1,5,44,3,120,1,5,42,9
	.half	.L492-.L27
	.byte	1,5,41,9
	.half	.L493-.L492
	.byte	3,8,1,5,37,1,5,36,9
	.half	.L28-.L493
	.byte	3,5,1,5,13,9
	.half	.L494-.L28
	.byte	3,1,1,5,38,9
	.half	.L23-.L494
	.byte	3,5,1,5,43,7,9
	.half	.L24-.L23
	.byte	3,7,1,5,13,9
	.half	.L389-.L24
	.byte	1,5,43,7,9
	.half	.L495-.L389
	.byte	3,2,1,5,24,9
	.half	.L391-.L495
	.byte	1,9
	.half	.L31-.L391
	.byte	3,8,1,5,13,9
	.half	.L392-.L31
	.byte	3,1,1,5,1,3,25,1,5,12,7,9
	.half	.L26-.L392
	.byte	3,127,1,5,1,3,1,1,7,9
	.half	.L137-.L26
	.byte	0,1,1
.L480:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_control')
	.sect	'.debug_ranges'
.L136:
	.word	-1,.L75,0,.L137-.L75,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_suspend')
	.sect	'.debug_info'
.L138:
	.word	285
	.half	3
	.word	.L139
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L141,.L140
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_suspend',0,1,255,5,10
	.word	.L194
	.byte	1,1,1
	.word	.L77,.L244,.L76
	.byte	4
	.byte	'thread',0,1,255,5,40
	.word	.L211,.L245
	.byte	5
	.word	.L77,.L244
	.byte	6
	.byte	'stat',0,1,129,6,24
	.word	.L194,.L246
	.byte	6
	.byte	'temp',0,1,130,6,24
	.word	.L194,.L247
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_suspend')
	.sect	'.debug_abbrev'
.L139:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_suspend')
	.sect	'.debug_line'
.L140:
	.word	.L497-.L496
.L496:
	.half	3
	.word	.L499-.L498
.L498:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L499:
	.byte	5,10,7,0,5,2
	.word	.L77
	.byte	3,254,5,1,5,18,9
	.half	.L394-.L77
	.byte	3,11,1,5,25,9
	.half	.L395-.L394
	.byte	1,5,9,9
	.half	.L500-.L395
	.byte	3,1,1,5,44,7,9
	.half	.L501-.L500
	.byte	1,5,16,7,9
	.half	.L502-.L501
	.byte	3,4,1,5,1,3,23,1,5,35,7,9
	.half	.L34-.L502
	.byte	3,109,1,5,10,9
	.half	.L393-.L34
	.byte	1,5,31,3,8,1,5,47,9
	.half	.L397-.L393
	.byte	3,1,1,5,27,9
	.half	.L396-.L397
	.byte	3,3,1,5,54,9
	.half	.L503-.L396
	.byte	3,125,1,5,38,9
	.half	.L504-.L503
	.byte	1,5,18,1,5,27,9
	.half	.L505-.L504
	.byte	3,3,1,5,28,9
	.half	.L506-.L505
	.byte	3,3,1,5,5,9
	.half	.L507-.L506
	.byte	3,2,1,5,12,9
	.half	.L37-.L507
	.byte	3,1,1,5,1,3,1,1,7,9
	.half	.L142-.L37
	.byte	0,1,1
.L497:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_suspend')
	.sect	'.debug_ranges'
.L141:
	.word	-1,.L77,0,.L142-.L77,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_resume')
	.sect	'.debug_info'
.L143:
	.word	344
	.half	3
	.word	.L144
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L146,.L145
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_resume',0,1,176,6,10
	.word	.L194
	.byte	1,1,1
	.word	.L79,.L248,.L78
	.byte	4
	.byte	'thread',0,1,176,6,39
	.word	.L211,.L249
	.byte	5
	.word	.L79,.L248
	.byte	6
	.byte	'temp',0,1,178,6,24
	.word	.L194,.L250
	.byte	7
	.word	.L251,.L252,.L253
	.byte	8
	.word	.L254,.L255
	.byte	9
	.word	.L256,.L257
	.byte	0,7
	.word	.L251,.L258,.L259
	.byte	8
	.word	.L254,.L255
	.byte	0,7
	.word	.L251,.L260,.L261
	.byte	8
	.word	.L254,.L255
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_resume')
	.sect	'.debug_abbrev'
.L144:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85
	.byte	6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_resume')
	.sect	'.debug_line'
.L145:
	.word	.L509-.L508
.L508:
	.half	3
	.word	.L511-.L510
.L510:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L511:
	.byte	5,10,7,0,5,2
	.word	.L79
	.byte	3,175,6,1,5,16,9
	.half	.L401-.L79
	.byte	3,10,1,5,23,9
	.half	.L512-.L401
	.byte	1,5,5,9
	.half	.L513-.L512
	.byte	1,5,16,7,9
	.half	.L514-.L513
	.byte	3,5,1,5,1,3,19,1,5,35,7,9
	.half	.L39-.L514
	.byte	3,113,1,5,28,9
	.half	.L400-.L39
	.byte	3,3,1,4,2,5,6,9
	.half	.L252-.L400
	.byte	3,146,122,1,5,22,9
	.half	.L515-.L252
	.byte	1,4,1,5,10,9
	.half	.L253-.L515
	.byte	3,235,5,1,4,2,5,19,9
	.half	.L258-.L253
	.byte	3,149,122,1,5,6,9
	.half	.L516-.L258
	.byte	3,1,1,5,22,9
	.half	.L517-.L516
	.byte	1,5,19,9
	.half	.L518-.L517
	.byte	1,5,23,9
	.half	.L519-.L518
	.byte	3,2,1,4,1,5,26,9
	.half	.L259-.L519
	.byte	3,237,5,1,4,2,5,13,9
	.half	.L260-.L259
	.byte	3,147,122,1,4,1,5,26,9
	.half	.L261-.L260
	.byte	3,237,5,1,5,28,9
	.half	.L402-.L261
	.byte	3,3,1,5,31,9
	.half	.L520-.L402
	.byte	3,3,1,5,5,9
	.half	.L404-.L520
	.byte	3,2,1,5,12,9
	.half	.L41-.L404
	.byte	3,1,1,5,1,3,1,1,7,9
	.half	.L147-.L41
	.byte	0,1,1
.L509:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_resume')
	.sect	'.debug_ranges'
.L146:
	.word	-1,.L79,0,.L147-.L79,0,0
.L257:
	.word	-1,.L79,.L252-.L79,.L253-.L79,.L258-.L79,.L259-.L79,.L260-.L79,.L261-.L79,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_timeout')
	.sect	'.debug_info'
.L148:
	.word	304
	.half	3
	.word	.L149
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L151,.L150
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_timeout',0,1,219,6,6,1,1,1
	.word	.L81,.L262,.L80
	.byte	4
	.byte	'parameter',0,1,219,6,30
	.word	.L202,.L263
	.byte	5
	.word	.L81,.L262
	.byte	6
	.byte	'thread',0,1,221,6,23
	.word	.L196,.L264
	.byte	7
	.word	.L251,.L265,.L266
	.byte	8
	.word	.L254,.L267
	.byte	9
	.word	.L256,.L265,.L266
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_timeout')
	.sect	'.debug_abbrev'
.L149:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_timeout')
	.sect	'.debug_line'
.L150:
	.word	.L522-.L521
.L521:
	.half	3
	.word	.L524-.L523
.L523:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L524:
	.byte	5,21,7,0,5,2
	.word	.L81
	.byte	3,230,6,1,5,19,1,5,28,9
	.half	.L525-.L81
	.byte	3,3,1,4,2,5,6,9
	.half	.L265-.L525
	.byte	3,238,121,1,5,22,9
	.half	.L526-.L265
	.byte	1,5,19,9
	.half	.L527-.L526
	.byte	1,5,6,9
	.half	.L528-.L527
	.byte	3,1,1,5,22,9
	.half	.L529-.L528
	.byte	1,5,19,9
	.half	.L530-.L529
	.byte	1,5,23,9
	.half	.L531-.L530
	.byte	3,2,1,5,13,9
	.half	.L532-.L531
	.byte	1,4,1,5,31,9
	.half	.L266-.L532
	.byte	3,146,6,1,5,16,9
	.half	.L406-.L266
	.byte	3,3,1,5,1,7,9
	.half	.L152-.L406
	.byte	3,1,0,1,1
.L522:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_timeout')
	.sect	'.debug_ranges'
.L151:
	.word	-1,.L81,0,.L152-.L81,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_suspend_sethook')
	.sect	'.debug_info'
.L153:
	.word	248
	.half	3
	.word	.L154
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L156,.L155
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_suspend_sethook',0,1,50,6,1,1,1
	.word	.L45,.L268,.L44
	.byte	4
	.byte	'hook',0,1,50,39
	.word	.L269,.L270
	.byte	5
	.word	.L45,.L268
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_suspend_sethook')
	.sect	'.debug_abbrev'
.L154:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_suspend_sethook')
	.sect	'.debug_line'
.L155:
	.word	.L534-.L533
.L533:
	.half	3
	.word	.L536-.L535
.L535:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L536:
	.byte	5,28,7,0,5,2
	.word	.L45
	.byte	3,51,1,5,1,9
	.half	.L537-.L45
	.byte	3,1,1,7,9
	.half	.L157-.L537
	.byte	0,1,1
.L534:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_suspend_sethook')
	.sect	'.debug_ranges'
.L156:
	.word	-1,.L45,0,.L157-.L45,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_resume_sethook')
	.sect	'.debug_info'
.L158:
	.word	247
	.half	3
	.word	.L159
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L161,.L160
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_resume_sethook',0,1,63,6,1,1,1
	.word	.L47,.L271,.L46
	.byte	4
	.byte	'hook',0,1,63,38
	.word	.L269,.L272
	.byte	5
	.word	.L47,.L271
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_resume_sethook')
	.sect	'.debug_abbrev'
.L159:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_resume_sethook')
	.sect	'.debug_line'
.L160:
	.word	.L539-.L538
.L538:
	.half	3
	.word	.L541-.L540
.L540:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L541:
	.byte	5,27,7,0,5,2
	.word	.L47
	.byte	3,192,0,1,5,1,9
	.half	.L542-.L47
	.byte	3,1,1,7,9
	.half	.L162-.L542
	.byte	0,1,1
.L539:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_resume_sethook')
	.sect	'.debug_ranges'
.L161:
	.word	-1,.L47,0,.L162-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_inited_sethook')
	.sect	'.debug_info'
.L163:
	.word	247
	.half	3
	.word	.L164
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L166,.L165
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_inited_sethook',0,1,74,6,1,1,1
	.word	.L49,.L273,.L48
	.byte	4
	.byte	'hook',0,1,74,38
	.word	.L269,.L274
	.byte	5
	.word	.L49,.L273
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_inited_sethook')
	.sect	'.debug_abbrev'
.L164:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_inited_sethook')
	.sect	'.debug_line'
.L165:
	.word	.L544-.L543
.L543:
	.half	3
	.word	.L546-.L545
.L545:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L546:
	.byte	5,27,7,0,5,2
	.word	.L49
	.byte	3,203,0,1,5,1,9
	.half	.L547-.L49
	.byte	3,1,1,7,9
	.half	.L167-.L547
	.byte	0,1,1
.L544:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_inited_sethook')
	.sect	'.debug_ranges'
.L166:
	.word	-1,.L49,0,.L167-.L49,0,0
	.sdecl	'.debug_info',debug,cluster('_thread_cleanup_execute')
	.sect	'.debug_info'
.L168:
	.word	266
	.half	3
	.word	.L169
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L171,.L170
	.byte	2
	.word	.L84
	.byte	3
	.byte	'_thread_cleanup_execute',0,1,82,13,1,1
	.word	.L51,.L275,.L50
	.byte	4
	.byte	'thread',0,1,82,49
	.word	.L211,.L276
	.byte	5
	.word	.L51,.L275
	.byte	6
	.byte	'level',0,1,84,24
	.word	.L194,.L277
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('_thread_cleanup_execute')
	.sect	'.debug_abbrev'
.L169:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('_thread_cleanup_execute')
	.sect	'.debug_line'
.L170:
	.word	.L549-.L548
.L548:
	.half	3
	.word	.L551-.L550
.L550:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L551:
	.byte	5,13,7,0,5,2
	.word	.L51
	.byte	3,209,0,1,5,36,9
	.half	.L313-.L51
	.byte	3,6,1,5,15,9
	.half	.L312-.L313
	.byte	3,9,1,5,11,9
	.half	.L552-.L312
	.byte	3,119,1,5,5,9
	.half	.L314-.L552
	.byte	3,9,1,5,25,7,9
	.half	.L553-.L314
	.byte	3,1,1,5,28,9
	.half	.L2-.L553
	.byte	3,5,1,5,1,9
	.half	.L172-.L2
	.byte	3,1,0,1,1
.L549:
	.sdecl	'.debug_ranges',debug,cluster('_thread_cleanup_execute')
	.sect	'.debug_ranges'
.L171:
	.word	-1,.L51,0,.L172-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_exit')
	.sect	'.debug_info'
.L173:
	.word	331
	.half	3
	.word	.L174
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L176,.L175
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_exit',0,1,106,6,1,1,1
	.word	.L53,.L278,.L52
	.byte	4
	.word	.L53,.L278
	.byte	5
	.byte	'thread',0,1,108,23
	.word	.L196,.L279
	.byte	5
	.byte	'level',0,1,109,24
	.word	.L194,.L280
	.byte	6
	.word	.L281,.L3,.L282
	.byte	7
	.word	.L283,.L284
	.byte	7
	.word	.L285,.L286
	.byte	8
	.word	.L287,.L288
	.byte	0,6
	.word	.L281,.L289,.L4
	.byte	7
	.word	.L283,.L284
	.byte	7
	.word	.L285,.L286
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_exit')
	.sect	'.debug_abbrev'
.L174:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_exit')
	.sect	'.debug_line'
.L175:
	.word	.L555-.L554
.L554:
	.half	3
	.word	.L557-.L556
.L556:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L557:
	.byte	5,28,7,0,5,2
	.word	.L53
	.byte	3,239,0,1,5,12,9
	.half	.L317-.L53
	.byte	1,5,36,9
	.half	.L319-.L317
	.byte	3,3,1,5,11,9
	.half	.L318-.L319
	.byte	1,5,29,3,2,1,5,31,9
	.half	.L320-.L318
	.byte	3,3,1,5,20,9
	.half	.L323-.L320
	.byte	3,2,1,5,18,1,5,28,9
	.half	.L558-.L323
	.byte	3,3,1,5,35,9
	.half	.L559-.L558
	.byte	3,2,1,5,5,9
	.half	.L325-.L559
	.byte	1,5,26,7,9
	.half	.L560-.L325
	.byte	3,2,1,5,46,9
	.half	.L327-.L560
	.byte	1,5,31,9
	.half	.L3-.L327
	.byte	3,5,1,4,2,5,6,9
	.half	.L561-.L3
	.byte	3,182,127,1,4,1,5,58,9
	.half	.L282-.L561
	.byte	3,202,0,1,4,2,5,19,9
	.half	.L289-.L282
	.byte	3,182,127,1,5,16,9
	.half	.L562-.L289
	.byte	3,1,1,5,13,9
	.half	.L563-.L562
	.byte	1,9
	.half	.L564-.L563
	.byte	3,2,1,9
	.half	.L565-.L564
	.byte	3,1,1,4,1,5,16,9
	.half	.L4-.L565
	.byte	3,202,0,1,5,28,9
	.half	.L566-.L4
	.byte	3,3,1,5,1,9
	.half	.L177-.L566
	.byte	3,1,0,1,1
.L555:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_exit')
	.sect	'.debug_ranges'
.L176:
	.word	-1,.L53,0,.L177-.L53,0,0
.L288:
	.word	-1,.L53,.L3-.L53,.L282-.L53,.L289-.L53,.L4-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('_rt_thread_init')
	.sect	'.debug_info'
.L178:
	.word	450
	.half	3
	.word	.L179
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L181,.L180
	.byte	2
	.word	.L84
	.byte	3
	.byte	'_rt_thread_init',0,1,144,1,17
	.word	.L194
	.byte	1,1
	.word	.L55,.L290,.L54
	.byte	4
	.byte	'thread',0,1,144,1,51
	.word	.L196,.L291
	.byte	4
	.byte	'name',0,1,145,1,51
	.word	.L198,.L292
	.byte	4
	.byte	'entry',0,1,146,1,40
	.word	.L200,.L293
	.byte	4
	.byte	'parameter',0,1,147,1,51
	.word	.L202,.L294
	.byte	4
	.byte	'stack_start',0,1,148,1,51
	.word	.L202,.L295
	.byte	4
	.byte	'stack_size',0,1,149,1,51
	.word	.L205,.L296
	.byte	4
	.byte	'priority',0,1,150,1,51
	.word	.L207,.L297
	.byte	4
	.byte	'tick',0,1,151,1,51
	.word	.L205,.L298
	.byte	5
	.word	.L55,.L290
	.byte	6
	.word	.L299,.L300,.L301
	.byte	7
	.word	.L302,.L303
	.byte	8
	.word	.L304,.L305
	.byte	0,6
	.word	.L299,.L306,.L307
	.byte	7
	.word	.L302,.L303
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('_rt_thread_init')
	.sect	'.debug_abbrev'
.L179:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('_rt_thread_init')
	.sect	'.debug_line'
.L180:
	.word	.L568-.L567
.L567:
	.half	3
	.word	.L570-.L569
.L569:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L570:
	.byte	5,17,7,0,5,2
	.word	.L55
	.byte	3,143,1,1,5,26,9
	.half	.L331-.L55
	.byte	3,10,1,4,2,5,23,9
	.half	.L300-.L331
	.byte	3,151,127,1,4,1,5,17,9
	.half	.L301-.L300
	.byte	3,223,0,1,4,2,5,13,9
	.half	.L306-.L301
	.byte	3,161,127,1,4,1,5,19,9
	.half	.L307-.L306
	.byte	3,235,0,1,5,17,9
	.half	.L571-.L307
	.byte	3,116,1,5,23,3,13,1,5,35,9
	.half	.L332-.L571
	.byte	3,7,1,5,24,3,124,1,5,17,9
	.half	.L330-.L332
	.byte	3,112,1,5,24,3,17,1,5,46,9
	.half	.L572-.L330
	.byte	3,3,1,5,72,9
	.half	.L329-.L572
	.byte	3,7,1,5,93,9
	.half	.L573-.L329
	.byte	1,5,43,9
	.half	.L333-.L573
	.byte	3,1,1,5,85,9
	.half	.L574-.L333
	.byte	3,127,1,5,43,9
	.half	.L575-.L574
	.byte	3,1,1,5,106,9
	.half	.L576-.L575
	.byte	3,127,1,5,49,9
	.half	.L577-.L576
	.byte	3,127,1,5,64,9
	.half	.L578-.L577
	.byte	1,5,43,9
	.half	.L579-.L578
	.byte	3,2,1,5,16,9
	.half	.L580-.L579
	.byte	3,126,1,5,30,9
	.half	.L334-.L580
	.byte	3,7,1,9
	.half	.L581-.L334
	.byte	3,1,1,5,27,9
	.half	.L335-.L581
	.byte	3,2,1,5,25,1,5,28,9
	.half	.L336-.L335
	.byte	3,7,1,9
	.half	.L582-.L336
	.byte	3,1,1,5,19,9
	.half	.L337-.L582
	.byte	3,3,1,9
	.half	.L583-.L337
	.byte	3,1,1,5,25,9
	.half	.L584-.L583
	.byte	3,14,1,5,23,9
	.half	.L585-.L584
	.byte	1,9
	.half	.L586-.L585
	.byte	3,1,1,5,27,9
	.half	.L587-.L586
	.byte	3,3,1,5,19,9
	.half	.L588-.L587
	.byte	3,2,1,9
	.half	.L589-.L588
	.byte	3,3,1,5,5,9
	.half	.L339-.L589
	.byte	3,18,1,5,12,9
	.half	.L5-.L339
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L182-.L5
	.byte	0,1,1
.L568:
	.sdecl	'.debug_ranges',debug,cluster('_rt_thread_init')
	.sect	'.debug_ranges'
.L181:
	.word	-1,.L55,0,.L182-.L55,0,0
.L305:
	.word	-1,.L55,.L300-.L55,.L301-.L55,.L306-.L55,.L307-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_sleep')
	.sect	'.debug_info'
.L183:
	.word	283
	.half	3
	.word	.L184
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L186,.L185
	.byte	2
	.word	.L84
	.byte	3
	.byte	'rt_thread_sleep',0,1,135,4,10
	.word	.L194
	.byte	1,1,1
	.word	.L67,.L308,.L66
	.byte	4
	.byte	'tick',0,1,135,4,36
	.word	.L205,.L309
	.byte	5
	.word	.L67,.L308
	.byte	6
	.byte	'temp',0,1,137,4,24
	.word	.L194,.L310
	.byte	6
	.byte	'thread',0,1,138,4,23
	.word	.L196,.L311
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_sleep')
	.sect	'.debug_abbrev'
.L184:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_thread_sleep')
	.sect	'.debug_line'
.L185:
	.word	.L591-.L590
.L590:
	.half	3
	.word	.L593-.L592
.L592:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0,0,0,0,0
.L593:
	.byte	5,10,7,0,5,2
	.word	.L67
	.byte	3,134,4,1,5,28,9
	.half	.L594-.L67
	.byte	3,6,1,5,12,9
	.half	.L364-.L594
	.byte	1,5,35,9
	.half	.L366-.L364
	.byte	3,5,1,5,10,9
	.half	.L365-.L366
	.byte	1,5,23,3,3,1,5,30,9
	.half	.L367-.L365
	.byte	3,3,1,5,47,9
	.half	.L595-.L367
	.byte	1,5,72,1,5,28,9
	.half	.L596-.L595
	.byte	3,1,1,9
	.half	.L597-.L596
	.byte	3,3,1,5,16,9
	.half	.L598-.L597
	.byte	3,2,1,5,15,9
	.half	.L599-.L598
	.byte	3,3,1,5,5,9
	.half	.L369-.L599
	.byte	1,5,25,7,9
	.half	.L600-.L369
	.byte	3,1,1,5,23,1,5,12,9
	.half	.L15-.L600
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L187-.L15
	.byte	0,1,1
.L591:
	.sdecl	'.debug_ranges',debug,cluster('rt_thread_sleep')
	.sect	'.debug_ranges'
.L186:
	.word	-1,.L67,0,.L187-.L67,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_suspend_hook')
	.sect	'.debug_info'
.L188:
	.word	205
	.half	3
	.word	.L189
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L84
	.byte	3
	.byte	'rt_thread_suspend_hook',0,5,38,15
	.word	.L269
	.byte	5,3
	.word	rt_thread_suspend_hook
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_suspend_hook')
	.sect	'.debug_abbrev'
.L189:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_resume_hook')
	.sect	'.debug_info'
.L190:
	.word	204
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L84
	.byte	3
	.byte	'rt_thread_resume_hook',0,5,39,15
	.word	.L269
	.byte	5,3
	.word	rt_thread_resume_hook
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_resume_hook')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_inited_hook')
	.sect	'.debug_info'
.L192:
	.word	204
	.half	3
	.word	.L193
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\thread.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L84
	.byte	3
	.byte	'rt_thread_inited_hook',0,5,40,15
	.word	.L269
	.byte	5,3
	.word	rt_thread_inited_hook
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_inited_hook')
	.sect	'.debug_abbrev'
.L193:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('_rt_thread_init')
	.sect	'.debug_loc'
.L54:
	.word	-1,.L55,0,.L290-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L293:
	.word	-1,.L55,0,.L329-.L55
	.half	1
	.byte	102
	.word	0,0
.L303:
	.word	0,0
.L292:
	.word	-1,.L55,0,.L329-.L55
	.half	1
	.byte	101
	.word	0,0
.L294:
	.word	-1,.L55,0,.L329-.L55
	.half	1
	.byte	103
	.word	0,0
.L297:
	.word	-1,.L55,0,.L329-.L55
	.half	1
	.byte	85
	.word	.L334-.L55,.L335-.L55
	.half	1
	.byte	88
	.word	0,0
.L296:
	.word	-1,.L55,0,.L330-.L55
	.half	1
	.byte	84
	.word	.L332-.L55,.L333-.L55
	.half	1
	.byte	95
	.word	0,0
.L295:
	.word	-1,.L55,0,.L290-.L55
	.half	2
	.byte	145,0
	.word	0,.L290-.L55
	.half	2
	.byte	145,0
	.word	.L306-.L55,.L329-.L55
	.half	1
	.byte	100
	.word	0,0
.L291:
	.word	-1,.L55,0,.L306-.L55
	.half	1
	.byte	100
	.word	.L331-.L55,.L290-.L55
	.half	1
	.byte	111
	.word	.L338-.L55,.L339-.L55
	.half	1
	.byte	101
	.word	.L340-.L55,.L339-.L55
	.half	1
	.byte	103
	.word	.L341-.L55,.L5-.L55
	.half	1
	.byte	100
	.word	0,0
.L298:
	.word	-1,.L55,0,.L329-.L55
	.half	1
	.byte	86
	.word	.L336-.L55,.L337-.L55
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('_thread_cleanup_execute')
	.sect	'.debug_loc'
.L50:
	.word	-1,.L51,0,.L275-.L51
	.half	2
	.byte	138,0
	.word	0,0
.L277:
	.word	-1,.L51,.L312-.L51,.L2-.L51
	.half	1
	.byte	82
	.word	.L314-.L51,.L275-.L51
	.half	1
	.byte	95
	.word	.L316-.L51,.L275-.L51
	.half	1
	.byte	84
	.word	0,0
.L276:
	.word	-1,.L51,0,.L312-.L51
	.half	1
	.byte	100
	.word	.L313-.L51,.L275-.L51
	.half	1
	.byte	111
	.word	.L315-.L51,.L2-.L51
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_control')
	.sect	'.debug_loc'
.L241:
	.word	-1,.L75,0,.L381-.L75
	.half	1
	.byte	101
	.word	.L383-.L75,.L238-.L75
	.half	1
	.byte	108
	.word	.L23-.L75,.L389-.L75
	.half	1
	.byte	101
	.word	0,0
.L240:
	.word	-1,.L75,0,.L381-.L75
	.half	1
	.byte	84
	.word	.L23-.L75,.L389-.L75
	.half	1
	.byte	84
	.word	0,0
.L243:
	.word	-1,.L75,.L391-.L75,.L31-.L75
	.half	1
	.byte	82
	.word	.L392-.L75,.L26-.L75
	.half	1
	.byte	95
	.word	0,0
.L74:
	.word	-1,.L75,0,.L238-.L75
	.half	2
	.byte	138,0
	.word	0,0
.L242:
	.word	-1,.L75,.L381-.L75,.L384-.L75
	.half	1
	.byte	82
	.word	.L385-.L75,.L23-.L75
	.half	1
	.byte	88
	.word	.L27-.L75,.L28-.L75
	.half	1
	.byte	82
	.word	0,0
.L239:
	.word	-1,.L75,0,.L381-.L75
	.half	1
	.byte	100
	.word	.L382-.L75,.L238-.L75
	.half	1
	.byte	111
	.word	.L386-.L75,.L384-.L75
	.half	1
	.byte	100
	.word	.L387-.L75,.L388-.L75
	.half	1
	.byte	100
	.word	.L23-.L75,.L389-.L75
	.half	1
	.byte	100
	.word	.L390-.L75,.L391-.L75
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_delay')
	.sect	'.debug_loc'
.L68:
	.word	-1,.L69,0,.L222-.L69
	.half	2
	.byte	138,0
	.word	0,0
.L223:
	.word	-1,.L69,0,.L222-.L69
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_delay_until')
	.sect	'.debug_loc'
.L230:
	.word	-1,.L71,.L376-.L71,.L377-.L71
	.half	1
	.byte	82
	.word	.L18-.L71,.L19-.L71
	.half	1
	.byte	82
	.word	0,0
.L227:
	.word	-1,.L71,0,.L371-.L71
	.half	1
	.byte	84
	.word	.L371-.L71,.L373-.L71
	.half	1
	.byte	95
	.word	.L18-.L71,.L19-.L71
	.half	1
	.byte	95
	.word	0,0
.L233:
	.word	-1,.L71,0,.L224-.L71
	.half	2
	.byte	145,120
	.word	0,0
.L228:
	.word	-1,.L71,.L374-.L71,.L376-.L71
	.half	1
	.byte	82
	.word	.L376-.L71,.L224-.L71
	.half	1
	.byte	88
	.word	0,0
.L70:
	.word	-1,.L71,0,.L370-.L71
	.half	2
	.byte	138,0
	.word	.L370-.L71,.L224-.L71
	.half	2
	.byte	138,8
	.word	.L224-.L71,.L224-.L71
	.half	2
	.byte	138,0
	.word	0,0
.L229:
	.word	-1,.L71,.L371-.L71,.L374-.L71
	.half	1
	.byte	98
	.word	.L375-.L71,.L224-.L71
	.half	1
	.byte	111
	.word	.L378-.L71,.L377-.L71
	.half	1
	.byte	100
	.word	0,0
.L226:
	.word	-1,.L71,0,.L371-.L71
	.half	1
	.byte	100
	.word	.L372-.L71,.L224-.L71
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_detach')
	.sect	'.debug_loc'
.L62:
	.word	-1,.L63,0,.L210-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L212:
	.word	-1,.L63,0,.L12-.L63
	.half	1
	.byte	100
	.word	.L354-.L63,.L210-.L63
	.half	1
	.byte	111
	.word	.L355-.L63,.L356-.L63
	.half	1
	.byte	100
	.word	.L357-.L63,.L11-.L63
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_exit')
	.sect	'.debug_loc'
.L284:
	.word	0,0
.L280:
	.word	-1,.L53,.L318-.L53,.L320-.L53
	.half	1
	.byte	82
	.word	.L321-.L53,.L278-.L53
	.half	1
	.byte	95
	.word	.L328-.L53,.L278-.L53
	.half	1
	.byte	84
	.word	0,0
.L286:
	.word	0,0
.L52:
	.word	-1,.L53,0,.L278-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L279:
	.word	-1,.L53,.L317-.L53,.L318-.L53
	.half	1
	.byte	98
	.word	.L319-.L53,.L278-.L53
	.half	1
	.byte	108
	.word	.L321-.L53,.L320-.L53
	.half	1
	.byte	100
	.word	.L322-.L53,.L323-.L53
	.half	1
	.byte	100
	.word	.L324-.L53,.L325-.L53
	.half	1
	.byte	100
	.word	.L326-.L53,.L327-.L53
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_find')
	.sect	'.debug_loc'
.L216:
	.word	-1,.L83,0,.L214-.L83
	.half	1
	.byte	100
	.word	0,0
.L82:
	.word	-1,.L83,0,.L214-.L83
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_init')
	.sect	'.debug_loc'
.L201:
	.word	-1,.L57,0,.L343-.L57
	.half	1
	.byte	102
	.word	.L346-.L57,.L195-.L57
	.half	1
	.byte	109
	.word	.L350-.L57,.L195-.L57
	.half	1
	.byte	102
	.word	0,0
.L199:
	.word	-1,.L57,0,.L343-.L57
	.half	1
	.byte	101
	.word	.L345-.L57,.L195-.L57
	.half	1
	.byte	108
	.word	.L349-.L57,.L195-.L57
	.half	1
	.byte	101
	.word	0,0
.L203:
	.word	-1,.L57,0,.L343-.L57
	.half	1
	.byte	103
	.word	.L347-.L57,.L195-.L57
	.half	1
	.byte	110
	.word	.L351-.L57,.L195-.L57
	.half	1
	.byte	103
	.word	0,0
.L208:
	.word	-1,.L57,0,.L343-.L57
	.half	1
	.byte	85
	.word	.L343-.L57,.L348-.L57
	.half	1
	.byte	88
	.word	0,0
.L56:
	.word	-1,.L57,0,.L342-.L57
	.half	2
	.byte	138,0
	.word	.L342-.L57,.L195-.L57
	.half	2
	.byte	138,8
	.word	.L195-.L57,.L195-.L57
	.half	2
	.byte	138,0
	.word	0,0
.L206:
	.word	-1,.L57,0,.L344-.L57
	.half	1
	.byte	84
	.word	.L342-.L57,.L195-.L57
	.half	1
	.byte	95
	.word	0,0
.L204:
	.word	-1,.L57,0,.L195-.L57
	.half	2
	.byte	145,0
	.word	.L352-.L57,.L195-.L57
	.half	1
	.byte	98
	.word	0,0
.L197:
	.word	-1,.L57,0,.L343-.L57
	.half	1
	.byte	100
	.word	.L344-.L57,.L195-.L57
	.half	1
	.byte	111
	.word	.L348-.L57,.L195-.L57
	.half	1
	.byte	100
	.word	0,0
.L209:
	.word	-1,.L57,0,.L343-.L57
	.half	1
	.byte	86
	.word	.L348-.L57,.L349-.L57
	.half	1
	.byte	89
	.word	.L349-.L57,.L195-.L57
	.half	1
	.byte	86
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_inited_sethook')
	.sect	'.debug_loc'
.L274:
	.word	-1,.L49,0,.L273-.L49
	.half	1
	.byte	100
	.word	0,0
.L48:
	.word	-1,.L49,0,.L273-.L49
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_mdelay')
	.sect	'.debug_loc'
.L236:
	.word	-1,.L73,0,.L379-.L73
	.half	1
	.byte	84
	.word	0,0
.L72:
	.word	-1,.L73,0,.L234-.L73
	.half	2
	.byte	138,0
	.word	0,0
.L237:
	.word	-1,.L73,.L379-.L73,.L234-.L73
	.half	1
	.byte	82
	.word	.L380-.L73,.L234-.L73
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_resume')
	.sect	'.debug_loc'
.L255:
	.word	0,0
.L78:
	.word	-1,.L79,0,.L248-.L79
	.half	2
	.byte	138,0
	.word	0,0
.L250:
	.word	-1,.L79,.L400-.L79,.L402-.L79
	.half	1
	.byte	82
	.word	.L258-.L79,.L248-.L79
	.half	1
	.byte	95
	.word	0,0
.L249:
	.word	-1,.L79,0,.L400-.L79
	.half	1
	.byte	100
	.word	.L401-.L79,.L248-.L79
	.half	1
	.byte	108
	.word	.L403-.L79,.L404-.L79
	.half	1
	.byte	100
	.word	.L405-.L79,.L41-.L79
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_resume_sethook')
	.sect	'.debug_loc'
.L272:
	.word	-1,.L47,0,.L271-.L47
	.half	1
	.byte	100
	.word	0,0
.L46:
	.word	-1,.L47,0,.L271-.L47
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_self')
	.sect	'.debug_loc'
.L58:
	.word	-1,.L59,0,.L213-.L59
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_sleep')
	.sect	'.debug_loc'
.L66:
	.word	-1,.L67,0,.L363-.L67
	.half	2
	.byte	138,0
	.word	.L363-.L67,.L308-.L67
	.half	2
	.byte	138,8
	.word	.L308-.L67,.L308-.L67
	.half	2
	.byte	138,0
	.word	0,0
.L310:
	.word	-1,.L67,.L365-.L67,.L367-.L67
	.half	1
	.byte	82
	.word	.L368-.L67,.L369-.L67
	.half	1
	.byte	95
	.word	0,0
.L311:
	.word	-1,.L67,.L364-.L67,.L365-.L67
	.half	1
	.byte	98
	.word	.L366-.L67,.L308-.L67
	.half	1
	.byte	111
	.word	.L368-.L67,.L367-.L67
	.half	1
	.byte	100
	.word	0,0
.L309:
	.word	-1,.L67,0,.L308-.L67
	.half	2
	.byte	145,120
	.word	0,.L364-.L67
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_startup')
	.sect	'.debug_loc'
.L60:
	.word	-1,.L61,0,.L217-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L218:
	.word	-1,.L61,0,.L353-.L61
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_suspend')
	.sect	'.debug_loc'
.L76:
	.word	-1,.L77,0,.L244-.L77
	.half	2
	.byte	138,0
	.word	0,0
.L246:
	.word	-1,.L77,.L395-.L77,.L396-.L77
	.half	1
	.byte	95
	.word	0,0
.L247:
	.word	-1,.L77,.L393-.L77,.L397-.L77
	.half	1
	.byte	82
	.word	.L398-.L77,.L244-.L77
	.half	1
	.byte	88
	.word	0,0
.L245:
	.word	-1,.L77,0,.L393-.L77
	.half	1
	.byte	100
	.word	.L394-.L77,.L244-.L77
	.half	1
	.byte	111
	.word	.L398-.L77,.L397-.L77
	.half	1
	.byte	100
	.word	.L399-.L77,.L37-.L77
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_suspend_sethook')
	.sect	'.debug_loc'
.L270:
	.word	-1,.L45,0,.L268-.L45
	.half	1
	.byte	100
	.word	0,0
.L44:
	.word	-1,.L45,0,.L268-.L45
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_timeout')
	.sect	'.debug_loc'
.L267:
	.word	0,0
.L263:
	.word	-1,.L81,0,.L406-.L81
	.half	1
	.byte	100
	.word	0,0
.L80:
	.word	-1,.L81,0,.L262-.L81
	.half	2
	.byte	138,0
	.word	0,0
.L264:
	.word	-1,.L81,0,.L406-.L81
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_thread_yield')
	.sect	'.debug_loc'
.L221:
	.word	-1,.L65,.L359-.L65,.L361-.L65
	.half	1
	.byte	82
	.word	.L362-.L65,.L219-.L65
	.half	1
	.byte	88
	.word	0,0
.L64:
	.word	-1,.L65,0,.L219-.L65
	.half	2
	.byte	138,0
	.word	0,0
.L220:
	.word	-1,.L65,.L358-.L65,.L359-.L65
	.half	1
	.byte	98
	.word	.L360-.L65,.L219-.L65
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L601:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('rt_thread_suspend_sethook')
	.sect	'.debug_frame'
	.word	24
	.word	.L601,.L45,.L268-.L45
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('rt_thread_resume_sethook')
	.sect	'.debug_frame'
	.word	24
	.word	.L601,.L47,.L271-.L47
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('rt_thread_inited_sethook')
	.sect	'.debug_frame'
	.word	24
	.word	.L601,.L49,.L273-.L49
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('_thread_cleanup_execute')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L51,.L275-.L51
	.sdecl	'.debug_frame',debug,cluster('rt_thread_exit')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L53,.L278-.L53
	.sdecl	'.debug_frame',debug,cluster('_rt_thread_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L55,.L290-.L55
	.sdecl	'.debug_frame',debug,cluster('rt_thread_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L601,.L57,.L195-.L57
	.byte	4
	.word	(.L342-.L57)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L195-.L342)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('rt_thread_self')
	.sect	'.debug_frame'
	.word	24
	.word	.L601,.L59,.L213-.L59
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('rt_thread_startup')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L61,.L217-.L61
	.sdecl	'.debug_frame',debug,cluster('rt_thread_detach')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L63,.L210-.L63
	.sdecl	'.debug_frame',debug,cluster('rt_thread_yield')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L65,.L219-.L65
	.sdecl	'.debug_frame',debug,cluster('rt_thread_sleep')
	.sect	'.debug_frame'
	.word	36
	.word	.L601,.L67,.L308-.L67
	.byte	4
	.word	(.L363-.L67)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L308-.L363)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('rt_thread_delay')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L69,.L222-.L69
	.sdecl	'.debug_frame',debug,cluster('rt_thread_delay_until')
	.sect	'.debug_frame'
	.word	36
	.word	.L601,.L71,.L224-.L71
	.byte	4
	.word	(.L370-.L71)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L224-.L370)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('rt_thread_mdelay')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L73,.L234-.L73
	.sdecl	'.debug_frame',debug,cluster('rt_thread_control')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L75,.L238-.L75
	.sdecl	'.debug_frame',debug,cluster('rt_thread_suspend')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L77,.L244-.L77
	.sdecl	'.debug_frame',debug,cluster('rt_thread_resume')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L79,.L248-.L79
	.sdecl	'.debug_frame',debug,cluster('rt_thread_timeout')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L81,.L262-.L81
	.sdecl	'.debug_frame',debug,cluster('rt_thread_find')
	.sect	'.debug_frame'
	.word	12
	.word	.L601,.L83,.L214-.L83

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   896  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   897  RTM_EXPORT(rt_thread_find);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   898  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\thread.c	   899  /**@}*/

	; Module end
