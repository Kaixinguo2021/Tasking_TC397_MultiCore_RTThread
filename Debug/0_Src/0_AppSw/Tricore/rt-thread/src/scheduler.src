	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\.scheduler.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.src ..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c'

	
$TC162
	
	.sdecl	'.text.scheduler.rt_scheduler_sethook',code,cluster('rt_scheduler_sethook')
	.sect	'.text.scheduler.rt_scheduler_sethook'
	.align	2
	
	.global	rt_scheduler_sethook

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	     1  /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	     3   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	     4   * SPDX-License-Identifier: Apache-2.0
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	     5   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	     6   * Change Logs:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	     7   * Date           Author       Notes
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	     8   * 2006-03-17     Bernard      the first version
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	     9   * 2006-04-28     Bernard      fix the scheduler algorthm
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    10   * 2006-04-30     Bernard      add SCHEDULER_DEBUG
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    11   * 2006-05-27     Bernard      fix the scheduler algorthm for same priority
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    12   *                             thread schedule
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    13   * 2006-06-04     Bernard      rewrite the scheduler algorithm
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    14   * 2006-08-03     Bernard      add hook support
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    15   * 2006-09-05     Bernard      add 32 priority level support
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    16   * 2006-09-24     Bernard      add rt_system_scheduler_start function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    17   * 2009-09-16     Bernard      fix _rt_scheduler_stack_check
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    18   * 2010-04-11     yi.qiu       add module feature
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    19   * 2010-07-13     Bernard      fix the maximal number of rt_scheduler_lock_nest
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    20   *                             issue found by kuronca
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    21   * 2010-12-13     Bernard      add defunct list initialization even if not use heap.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    22   * 2011-05-10     Bernard      clean scheduler debug log.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    23   * 2013-12-21     Grissiom     add rt_critical_level
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    24   * 2018-11-22     Jesven       remove the current task from ready queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    25   *                             add per cpu ready queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    26   *                             add _get_highest_priority_thread to find highest priority task
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    27   *                             rt_schedule_insert_thread won't insert current task to ready queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    28   *                             in smp version, rt_hw_context_switch_interrupt maybe switch to
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    29   *                               new task directly
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    30   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    31   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    32  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    33  #include <rtthread.h>
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    34  #include <rthw.h>
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    35  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    36  rt_list_t rt_thread_priority_table[RT_THREAD_PRIORITY_MAX];
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    37  rt_uint32_t rt_thread_ready_priority_group;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    38  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    39  /* Maximum priority level, 256 */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    40  rt_uint8_t rt_thread_ready_table[32];
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    41  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    42  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    43  #ifndef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    44  extern volatile rt_uint8_t rt_interrupt_nest;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    45  static rt_int16_t rt_scheduler_lock_nest;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    46  struct rt_thread *rt_current_thread = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    47  rt_uint8_t rt_current_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    48  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    49  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    50  rt_list_t rt_thread_defunct;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    51  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    52  #ifdef RT_USING_HOOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    53  static void (*rt_scheduler_hook)(struct rt_thread *from, struct rt_thread *to);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    54  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    55  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    56   * @addtogroup Hook
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    57   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    58  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    59  /**@{*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    60  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    61  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    62   * This function will set a hook function, which will be invoked when thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    63   * switch happens.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    64   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    65   * @param hook the hook function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    66   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    67  void
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    68  rt_scheduler_sethook(void (*hook)(struct rt_thread *from, struct rt_thread *to))
; Function rt_scheduler_sethook
.L25:
rt_scheduler_sethook:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    69  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    70      rt_scheduler_hook = hook;
	st.a	rt_scheduler_hook,a4
.L341:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    71  }
	ret
.L179:
	
__rt_scheduler_sethook_function_end:
	.size	rt_scheduler_sethook,__rt_scheduler_sethook_function_end-rt_scheduler_sethook
.L96:
	; End of function
	
	.sdecl	'.text.scheduler._get_highest_priority_thread',code,cluster('_get_highest_priority_thread')
	.sect	'.text.scheduler._get_highest_priority_thread'
	.align	2
	

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    72  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    73  /**@}*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    74  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    75  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    76  #ifdef RT_USING_OVERFLOW_CHECK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    77  static void _rt_scheduler_stack_check(struct rt_thread *thread)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    78  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    79      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    80  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    81  #if defined(ARCH_CPU_STACK_GROWS_UPWARD)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    82      if (*((rt_uint8_t *)((rt_ubase_t)thread->stack_addr + thread->stack_size - 1)) != '#' ||
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    83  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    84      if (*((rt_uint8_t *)thread->stack_addr) != '#' ||
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    85  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    86          (rt_ubase_t)thread->sp <= (rt_ubase_t)thread->stack_addr ||
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    87          (rt_ubase_t)thread->sp >
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    88          (rt_ubase_t)thread->stack_addr + (rt_ubase_t)thread->stack_size)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    89      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    90          rt_ubase_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    91  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    92          rt_kprintf("thread:%s stack overflow\n", thread->name);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    93  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    94          level = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    95          while (level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    96      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    97  #if defined(ARCH_CPU_STACK_GROWS_UPWARD)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    98      else if ((rt_ubase_t)thread->sp > ((rt_ubase_t)thread->stack_addr + thread->stack_size))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	    99      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   100          rt_kprintf("warning: %s stack is close to the top of stack address.\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   101                     thread->name);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   102      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   103  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   104      else if ((rt_ubase_t)thread->sp <= ((rt_ubase_t)thread->stack_addr + 32))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   105      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   106          rt_kprintf("warning: %s stack is close to end of stack address.\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   107                     thread->name);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   108      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   109  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   110  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   111  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   112  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   113  /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   114   * get the highest priority thread in ready queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   115   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   116  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   117  static struct rt_thread* _get_highest_priority_thread(rt_ubase_t *highest_prio)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   118  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   119      register struct rt_thread *highest_priority_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   120      register rt_ubase_t highest_ready_priority, local_highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   121      struct rt_cpu* pcpu = rt_cpu_self();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   122  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   123      register rt_ubase_t number;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   124  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   125      number = __rt_ffs(rt_thread_ready_priority_group) - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   126      highest_ready_priority = (number << 3) + __rt_ffs(rt_thread_ready_table[number]) - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   127      number = __rt_ffs(pcpu->priority_group) - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   128      local_highest_ready_priority = (number << 3) + __rt_ffs(pcpu->ready_table[number]) - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   129  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   130      highest_ready_priority = __rt_ffs(rt_thread_ready_priority_group) - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   131      local_highest_ready_priority = __rt_ffs(pcpu->priority_group) - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   132  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   133  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   134      /* get highest ready priority thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   135      if (highest_ready_priority < local_highest_ready_priority)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   136      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   137          *highest_prio = highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   138          highest_priority_thread = rt_list_entry(rt_thread_priority_table[highest_ready_priority].next,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   139                                    struct rt_thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   140                                    tlist);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   141      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   142      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   143      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   144          *highest_prio = local_highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   145          highest_priority_thread = rt_list_entry(pcpu->priority_table[local_highest_ready_priority].next,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   146                                    struct rt_thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   147                                    tlist);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   148      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   149  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   150      return highest_priority_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   151  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   152  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   153  static struct rt_thread* _get_highest_priority_thread(rt_ubase_t *highest_prio)
; Function _get_highest_priority_thread
.L27:
_get_highest_priority_thread:	.type	func
	mov.aa	a15,a4
.L192:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   154  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   155      register struct rt_thread *highest_priority_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   156      register rt_ubase_t highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   157  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   158  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   159      register rt_ubase_t number;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   160  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   161      number = __rt_ffs(rt_thread_ready_priority_group) - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   162      highest_ready_priority = (number << 3) + __rt_ffs(rt_thread_ready_table[number]) - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   163  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   164      highest_ready_priority = __rt_ffs(rt_thread_ready_priority_group) - 1;
	ld.w	d4,rt_thread_ready_priority_group
	call	__rt_ffs
.L191:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   165  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   166  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   167      /* get highest ready priority thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   168      highest_priority_thread = rt_list_entry(rt_thread_priority_table[highest_ready_priority].next,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   169                                struct rt_thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   170                                tlist);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   171  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   172      *highest_prio = highest_ready_priority;
	add	d15,d2,#-1
	st.w	[a15],d15
.L194:
	movh.a	a15,#@his(rt_thread_priority_table)
.L193:
	lea	a15,[a15]@los(rt_thread_priority_table)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]
	lea	a2,[a15]-20
.L346:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   173  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   174      return highest_priority_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   175  }
	ret
.L182:
	
___get_highest_priority_thread_function_end:
	.size	_get_highest_priority_thread,___get_highest_priority_thread_function_end-_get_highest_priority_thread
.L101:
	; End of function
	
	.sdecl	'.text.scheduler.rt_system_scheduler_init',code,cluster('rt_system_scheduler_init')
	.sect	'.text.scheduler.rt_system_scheduler_init'
	.align	2
	
	.global	rt_system_scheduler_init

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   176  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   177  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   178  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   179   * @ingroup SystemInit
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   180   * This function will initialize the system scheduler
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   181   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   182  void rt_system_scheduler_init(void)
; Function rt_system_scheduler_init
.L29:
rt_system_scheduler_init:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   183  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   184  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   185      int cpu;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   186  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   187      register rt_base_t offset;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   188  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   189  #ifndef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   190      rt_scheduler_lock_nest = 0;
	mov	d15,#0
	st.h	rt_scheduler_lock_nest,d15
.L234:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   191  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   192  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   193      RT_DEBUG_LOG(RT_DEBUG_SCHEDULER, ("start scheduler: max priority 0x%02x\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   194                                        RT_THREAD_PRIORITY_MAX));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   195  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   196      for (offset = 0; offset < RT_THREAD_PRIORITY_MAX; offset ++)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   197      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   198          rt_list_init(&rt_thread_priority_table[offset]);
	fcall	.cocofun_1
.L235:
	lea	a4,31
.L3:
	mov.aa	a15,a2
.L236:
	lea	a2,[a2]8
.L131:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
	st.a	[a15]4,a15
.L237:
	st.a	[a15],a15
	loop	a4,.L3
.L132:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   199      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   200  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   201      for (cpu = 0; cpu < RT_CPUS_NR; cpu++)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   202      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   203          struct rt_cpu *pcpu =  rt_cpu_index(cpu);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   204          for (offset = 0; offset < RT_THREAD_PRIORITY_MAX; offset ++)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   205          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   206              rt_list_init(&pcpu->priority_table[offset]);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   207          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   208  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   209          pcpu->irq_switch_flag = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   210          pcpu->current_priority = RT_THREAD_PRIORITY_MAX - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   211          pcpu->current_thread = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   212          pcpu->priority_group = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   213  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   214  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   215          rt_memset(pcpu->ready_table, 0, sizeof(pcpu->ready_table));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   216  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   217      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   218  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   219  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   220      /* initialize ready priority group */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   221      rt_thread_ready_priority_group = 0;
	st.w	rt_thread_ready_priority_group,d15
.L136:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   222  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   223  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   224      /* initialize ready table */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   225      rt_memset(rt_thread_ready_table, 0, sizeof(rt_thread_ready_table));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   226  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   227  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   228      /* initialize thread defunct */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   229      rt_list_init(&rt_thread_defunct);
	lea	a15,rt_thread_defunct
.L238:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
	st.a	rt_thread_defunct+4,a15
.L239:
	st.a	[a15],a15
.L137:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   230  }
	ret
.L126:
	
__rt_system_scheduler_init_function_end:
	.size	rt_system_scheduler_init,__rt_system_scheduler_init_function_end-rt_system_scheduler_init
.L56:
	; End of function
	
	.sdecl	'.text.scheduler..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.scheduler..cocofun_1'
	.align	2
; Function .cocofun_1
.L31:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	movh.a	a2,#@his(rt_thread_priority_table)
	lea	a2,[a2]@los(rt_thread_priority_table)
.L351:
	fret
.L106:
	; End of function
	.sdecl	'.text.scheduler.rt_system_scheduler_start',code,cluster('rt_system_scheduler_start')
	.sect	'.text.scheduler.rt_system_scheduler_start'
	.align	2
	
	.global	rt_system_scheduler_start

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   231  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   232  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   233   * @ingroup SystemInit
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   234   * This function will startup scheduler. It will select one thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   235   * with the highest priority level, then switch to it.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   236   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   237  void rt_system_scheduler_start(void)
; Function rt_system_scheduler_start
.L33:
rt_system_scheduler_start:	.type	func
	sub.a	a10,#8
.L195:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   238  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   239      register struct rt_thread *to_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   240      rt_ubase_t highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   241  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   242      to_thread = _get_highest_priority_thread(&highest_ready_priority);
	mov.aa	a4,a10
	call	_get_highest_priority_thread
.L196:
	mov.aa	a15,a2
.L198:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   243  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   244  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   245      to_thread->oncpu = rt_hw_cpu_id();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   246  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   247      rt_current_thread = to_thread;
	st.a	rt_current_thread,a15
.L244:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   248  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   249  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   250      rt_schedule_remove_thread(to_thread);
	mov.aa	a4,a15
.L197:
	call	rt_schedule_remove_thread
.L200:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   251      to_thread->stat = RT_THREAD_RUNNING;
	mov	d15,#3
	st.b	[a15]52,d15
.L245:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   252  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   253      /* switch to new thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   254  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   255      rt_hw_context_switch_to((rt_ubase_t)&to_thread->sp, to_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   256  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   257      rt_hw_context_switch_to((rt_ubase_t)&to_thread->sp);
	lea	a15,[a15]28
.L199:
	mov.d	d4,a15
.L246:
	j	rt_hw_context_switch_to
.L138:
	
__rt_system_scheduler_start_function_end:
	.size	rt_system_scheduler_start,__rt_system_scheduler_start_function_end-rt_system_scheduler_start
.L61:
	; End of function
	
	.sdecl	'.text.scheduler.rt_schedule',code,cluster('rt_schedule')
	.sect	'.text.scheduler.rt_schedule'
	.align	2
	
	.global	rt_schedule

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   258  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   259  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   260      /* never come back */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   261  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   262  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   263  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   264   * @addtogroup Thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   265   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   266  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   267  /**@{*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   268  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   269  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   270  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   271  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   272   * This function will handle IPI interrupt and do a scheduling in system;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   273   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   274   * @param vector, the number of IPI interrupt for system scheduling
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   275   * @param param, use RT_NULL
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   276   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   277   * NOTE: this function should be invoke or register as ISR in BSP.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   278   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   279  void rt_scheduler_ipi_handler(int vector, void *param)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   280  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   281      rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   282  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   283  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   284  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   285   * This function will perform one scheduling. It will select one thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   286   * with the highest priority level in global ready queue or local ready queue,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   287   * then switch to it.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   288   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   289  void rt_schedule(void)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   290  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   291      rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   292      struct rt_thread *to_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   293      struct rt_thread *current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   294      struct rt_cpu    *pcpu;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   295      int cpu_id;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   296  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   297      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   298      level  = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   299  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   300      cpu_id = rt_hw_cpu_id();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   301      pcpu   = rt_cpu_index(cpu_id);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   302      current_thread = pcpu->current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   303  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   304      /* whether do switch in interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   305      if (pcpu->irq_nest)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   306      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   307          pcpu->irq_switch_flag = 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   308          rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   309          goto __exit;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   310      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   311  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   312  #ifdef RT_USING_SIGNALS
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   313      if ((current_thread->stat & RT_THREAD_STAT_MASK) == RT_THREAD_SUSPEND)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   314      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   315          /* if current_thread signal is in pending */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   316  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   317          if ((current_thread->stat & RT_THREAD_STAT_SIGNAL_MASK) & RT_THREAD_STAT_SIGNAL_PENDING)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   318          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   319              rt_thread_resume(current_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   320          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   321      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   322  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   323  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   324      if (current_thread->scheduler_lock_nest == 1) /* whether lock scheduler */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   325      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   326          rt_ubase_t highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   327  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   328          if (rt_thread_ready_priority_group != 0 || pcpu->priority_group != 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   329          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   330              to_thread = _get_highest_priority_thread(&highest_ready_priority);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   331              current_thread->oncpu = RT_CPU_DETACHED;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   332              if ((current_thread->stat & RT_THREAD_STAT_MASK) == RT_THREAD_RUNNING)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   333              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   334                  if (current_thread->current_priority < highest_ready_priority)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   335                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   336                      to_thread = current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   337                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   338                  else if (current_thread->current_priority == highest_ready_priority && (current_thread->stat & RT_THREAD_STAT_YIELD_MASK) == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   339                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   340                      to_thread = current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   341                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   342                  else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   343                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   344                      rt_schedule_insert_thread(current_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   345                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   346                  current_thread->stat &= ~RT_THREAD_STAT_YIELD_MASK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   347              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   348              to_thread->oncpu = cpu_id;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   349              if (to_thread != current_thread)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   350              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   351                  /* if the destination thread is not the same as current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   352                  pcpu->current_priority = (rt_uint8_t)highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   353  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   354                  RT_OBJECT_HOOK_CALL(rt_scheduler_hook, (current_thread, to_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   355  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   356                  rt_schedule_remove_thread(to_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   357                  to_thread->stat = RT_THREAD_RUNNING | (to_thread->stat & ~RT_THREAD_STAT_MASK);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   358  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   359                  /* switch to new thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   360                  RT_DEBUG_LOG(RT_DEBUG_SCHEDULER,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   361                          ("[%d]switch to priority#%d "
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   362                           "thread:%.*s(sp:0x%08x), "
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   363                           "from thread:%.*s(sp: 0x%08x)\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   364                           pcpu->irq_nest, highest_ready_priority,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   365                           RT_NAME_MAX, to_thread->name, to_thread->sp,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   366                           RT_NAME_MAX, current_thread->name, current_thread->sp));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   367  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   368  #ifdef RT_USING_OVERFLOW_CHECK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   369                  _rt_scheduler_stack_check(to_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   370  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   371  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   372                  rt_hw_context_switch((rt_ubase_t)&current_thread->sp,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   373                          (rt_ubase_t)&to_thread->sp, to_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   374              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   375          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   376      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   377  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   378      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   379      rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   380  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   381  #ifdef RT_USING_SIGNALS
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   382      /* check stat of thread for signal */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   383      level = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   384      if (current_thread->stat & RT_THREAD_STAT_SIGNAL_PENDING)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   385      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   386          extern void rt_thread_handle_sig(rt_bool_t clean_state);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   387  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   388          current_thread->stat &= ~RT_THREAD_STAT_SIGNAL_PENDING;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   389  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   390          rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   391  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   392          /* check signal status */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   393          rt_thread_handle_sig(RT_TRUE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   394      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   395      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   396      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   397          rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   398      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   399  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   400  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   401  __exit:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   402      return ;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   403  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   404  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   405  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   406   * This function will perform one schedule. It will select one thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   407   * with the highest priority level, then switch to it.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   408   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   409  void rt_schedule(void)
; Function rt_schedule
.L35:
rt_schedule:	.type	func
	sub.a	a10,#8
.L201:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   410  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   411      rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   412      struct rt_thread *to_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   413      struct rt_thread *from_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   414  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   415      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   416      level = rt_hw_interrupt_disable();
	call	rt_hw_interrupt_disable
.L202:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   417  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   418      /* check the scheduler is enabled or not */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   419      if (rt_scheduler_lock_nest == 0)
	mov	d9,d2
	ld.h	d15,rt_scheduler_lock_nest
.L209:
	jne	d15,#0,.L4
.L146:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   420      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   421          rt_ubase_t highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   422  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   423          if (rt_thread_ready_priority_group != 0)
	ld.w	d15,rt_thread_ready_priority_group
.L251:
	jeq	d15,#0,.L5
.L148:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   424          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   425              /* need_insert_from_thread: need to insert from_thread to ready queue */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   426              int need_insert_from_thread = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   427  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   428              to_thread = _get_highest_priority_thread(&highest_ready_priority);
	mov	d8,#0
	mov.aa	a4,a10
.L210:
	call	_get_highest_priority_thread
.L203:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   429  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   430              if ((rt_current_thread->stat & RT_THREAD_STAT_MASK) == RT_THREAD_RUNNING)
	ld.a	a15,rt_current_thread
.L252:
	mov.aa	a12,a2
.L211:
	ld.w	d0,[a10]
.L205:
	lea	a2,[a15]52
.L204:
	ld.bu	d15,[a2]
.L253:
	and	d1,d15,#7
.L254:
	jne	d1,#3,.L6
.L255:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   431              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   432                  if (rt_current_thread->current_priority < highest_ready_priority)
	ld.bu	d1,[a15]53
.L256:
	jlt.u	d1,d0,.L7
.L257:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   433                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   434                      to_thread = rt_current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   435                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   436                  else if (rt_current_thread->current_priority == highest_ready_priority && (rt_current_thread->stat & RT_THREAD_STAT_YIELD_MASK) == 0)
	jne	d1,d0,.L8
.L258:
	jnz.t	d15:3,.L9
.L7:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   437                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   438                      to_thread = rt_current_thread;
	mov.aa	a12,a15
.L259:
	j	.L10
.L9:
.L8:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   439                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   440                  else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   441                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   442                      need_insert_from_thread = 1;
	mov	d8,#1
.L10:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   443                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   444                  rt_current_thread->stat &= ~RT_THREAD_STAT_YIELD_MASK;
	and	d15,#247
	st.b	[a2],d15
.L6:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   445              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   446  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   447              if (to_thread != rt_current_thread)
	ld.a	a15,rt_current_thread
.L260:
	jeq.a	a12,a15,.L11
.L261:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   448              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   449                  /* if the destination thread is not the same as current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   450                  rt_current_priority = (rt_uint8_t)highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   451                  from_thread         = rt_current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   452                  rt_current_thread   = to_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   453  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   454                  RT_OBJECT_HOOK_CALL(rt_scheduler_hook, (from_thread, to_thread));
	ld.a	a2,rt_scheduler_hook
.L262:
	st.b	rt_current_priority,d0
.L263:
	st.a	rt_current_thread,a12
.L264:
	jz.a	a2,.L12
.L265:
	mov.aa	a4,a15
	mov.aa	a5,a12
.L206:
	calli	a2
.L12:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   455  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   456                  if (need_insert_from_thread)
	jeq	d8,#0,.L13
.L266:
	mov.aa	a4,a15
	call	rt_schedule_insert_thread
.L13:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   457                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   458                      rt_schedule_insert_thread(from_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   459                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   460  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   461                  rt_schedule_remove_thread(to_thread);
	mov.aa	a4,a12
.L207:
	call	rt_schedule_remove_thread
.L208:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   462                  to_thread->stat = RT_THREAD_RUNNING | (to_thread->stat & ~RT_THREAD_STAT_MASK);
	ld.bu	d15,[a12]52
.L267:
	and	d15,#248
.L268:
	or	d15,#3
	st.b	[a12]52,d15
.L269:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   463  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   464                  /* switch to new thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   465                  // RT_DEBUG_LOG(RT_DEBUG_SCHEDULER,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   466                  //         ("[%d]switch to priority#%d "
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   467                  //          "thread:%.*s(sp:0x%08x), "
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   468                  //          "from thread:%.*s(sp: 0x%08x)\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   469                  //          rt_interrupt_nest, highest_ready_priority,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   470                  //          RT_NAME_MAX, to_thread->name, to_thread->sp,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   471                  //          RT_NAME_MAX, from_thread->name, from_thread->sp));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   472  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   473  #ifdef RT_USING_OVERFLOW_CHECK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   474                  _rt_scheduler_stack_check(to_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   475  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   476  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   477                  if (rt_interrupt_nest == 0)
	ld.bu	d15,rt_interrupt_nest
.L270:
	jne	d15,#0,.L14
.L152:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   478                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   479                      extern void rt_thread_handle_sig(rt_bool_t clean_state);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   480  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   481                      rt_hw_context_switch((rt_ubase_t)&from_thread->sp,
	fcall	.cocofun_2
.L271:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   482                              (rt_ubase_t)&to_thread->sp);
	call	rt_hw_context_switch
.L272:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   483  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   484                      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   485                      rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   486  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   487  #ifdef RT_USING_SIGNALS
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   488                      /* check stat of thread for signal */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   489                      level = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   490                      if (rt_current_thread->stat & RT_THREAD_STAT_SIGNAL_PENDING)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   491                      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   492                          extern void rt_thread_handle_sig(rt_bool_t clean_state);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   493  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   494                          rt_current_thread->stat &= ~RT_THREAD_STAT_SIGNAL_PENDING;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   495  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   496                          rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   497  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   498                          /* check signal status */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   499                          rt_thread_handle_sig(RT_TRUE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   500                      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   501                      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   502                      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   503                          rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   504                      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   505  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   506                      goto __exit;
	j	.L15
.L14:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   507                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   508                  else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   509                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   510                      RT_DEBUG_LOG(RT_DEBUG_SCHEDULER, ("switch in interrupt\n"));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   511  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   512                      rt_hw_context_switch_interrupt((rt_ubase_t)&from_thread->sp,
	fcall	.cocofun_2
.L273:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   513                              (rt_ubase_t)&to_thread->sp);
	call	rt_hw_context_switch_interrupt
.L274:
	j	.L16
.L11:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   514                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   515              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   516              else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   517              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   518                  rt_schedule_remove_thread(rt_current_thread);
	mov.aa	a4,a15
	call	rt_schedule_remove_thread
.L212:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   519                  rt_current_thread->stat = RT_THREAD_RUNNING | (rt_current_thread->stat & ~RT_THREAD_STAT_MASK);
	ld.a	a15,rt_current_thread
.L275:
	ld.bu	d15,[a15]52
.L276:
	and	d15,#248
.L277:
	or	d15,#3
	st.b	[a15]52,d15
.L16:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   520              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   521          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   522      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   523  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   524      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   525      rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   526  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   527  __exit:
.L15:
.L5:
.L4:
	mov	d4,d9
.L213:
	j	rt_hw_interrupt_enable
.L143:
	
__rt_schedule_function_end:
	.size	rt_schedule,__rt_schedule_function_end-rt_schedule
.L66:
	; End of function
	
	.sdecl	'.text.scheduler..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.scheduler..cocofun_2'
	.align	2
; Function .cocofun_2
.L37:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	lea	a15,[a15]28
	mov.d	d4,a15
.L356:
	lea	a15,[a12]28
	mov.d	d5,a15
.L357:
	fret
.L111:
	; End of function
	.sdecl	'.text.scheduler.rt_schedule_insert_thread',code,cluster('rt_schedule_insert_thread')
	.sect	'.text.scheduler.rt_schedule_insert_thread'
	.align	2
	
	.global	rt_schedule_insert_thread

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   528      return;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   529  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   530  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   531  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   532  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   533   * This function checks if a scheduling is needed after IRQ context. If yes,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   534   * it will select one thread with the highest priority level, and then switch
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   535   * to it.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   536   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   537  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   538  void rt_scheduler_do_irq_switch(void *context)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   539  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   540      int cpu_id;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   541      rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   542      struct rt_cpu* pcpu;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   543      struct rt_thread *to_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   544      struct rt_thread *current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   545  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   546      level = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   547  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   548      cpu_id = rt_hw_cpu_id();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   549      pcpu   = rt_cpu_index(cpu_id);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   550      current_thread = pcpu->current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   551  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   552  #ifdef RT_USING_SIGNALS
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   553      if ((current_thread->stat & RT_THREAD_STAT_MASK) == RT_THREAD_SUSPEND)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   554      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   555          /* if current_thread signal is in pending */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   556  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   557          if ((current_thread->stat & RT_THREAD_STAT_SIGNAL_MASK) & RT_THREAD_STAT_SIGNAL_PENDING)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   558          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   559              rt_thread_resume(current_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   560          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   561      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   562  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   563  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   564      if (pcpu->irq_switch_flag == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   565      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   566          rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   567          return;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   568      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   569  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   570      if (current_thread->scheduler_lock_nest == 1 && pcpu->irq_nest == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   571      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   572          rt_ubase_t highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   573  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   574          /* clear irq switch flag */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   575          pcpu->irq_switch_flag = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   576  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   577          if (rt_thread_ready_priority_group != 0 || pcpu->priority_group != 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   578          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   579              to_thread = _get_highest_priority_thread(&highest_ready_priority);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   580              current_thread->oncpu = RT_CPU_DETACHED;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   581              if ((current_thread->stat & RT_THREAD_STAT_MASK) == RT_THREAD_RUNNING)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   582              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   583                  if (current_thread->current_priority < highest_ready_priority)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   584                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   585                      to_thread = current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   586                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   587                  else if (current_thread->current_priority == highest_ready_priority && (current_thread->stat & RT_THREAD_STAT_YIELD_MASK) == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   588                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   589                      to_thread = current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   590                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   591                  else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   592                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   593                      rt_schedule_insert_thread(current_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   594                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   595                  current_thread->stat &= ~RT_THREAD_STAT_YIELD_MASK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   596              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   597              to_thread->oncpu = cpu_id;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   598              if (to_thread != current_thread)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   599              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   600                  /* if the destination thread is not the same as current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   601  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   602                  pcpu->current_priority = (rt_uint8_t)highest_ready_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   603  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   604                  RT_OBJECT_HOOK_CALL(rt_scheduler_hook, (current_thread, to_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   605  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   606                  rt_schedule_remove_thread(to_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   607                  to_thread->stat = RT_THREAD_RUNNING | (to_thread->stat & ~RT_THREAD_STAT_MASK);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   608  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   609  #ifdef RT_USING_OVERFLOW_CHECK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   610                  _rt_scheduler_stack_check(to_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   611  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   612                  RT_DEBUG_LOG(RT_DEBUG_SCHEDULER, ("switch in interrupt\n"));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   613  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   614                  current_thread->cpus_lock_nest--;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   615                  current_thread->scheduler_lock_nest--;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   616  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   617                  rt_hw_context_switch_interrupt(context, (rt_ubase_t)&current_thread->sp,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   618                          (rt_ubase_t)&to_thread->sp, to_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   619              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   620          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   621      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   622      rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   623  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   624  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   625  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   626  /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   627   * This function will insert a thread to system ready queue. The state of
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   628   * thread will be set as READY and remove from suspend queue.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   629   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   630   * @param thread the thread to be inserted
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   631   * @note Please do not invoke this function in user application.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   632   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   633  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   634  void rt_schedule_insert_thread(struct rt_thread *thread)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   635  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   636      int cpu_id;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   637      int bind_cpu;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   638      rt_uint32_t cpu_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   639      register rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   640  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   641      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   642  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   643      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   644      level = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   645  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   646      /* it should be RUNNING thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   647      if (thread->oncpu != RT_CPU_DETACHED)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   648      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   649          thread->stat = RT_THREAD_RUNNING | (thread->stat & ~RT_THREAD_STAT_MASK);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   650          goto __exit;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   651      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   652  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   653      /* READY thread, insert to ready queue */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   654      thread->stat = RT_THREAD_READY | (thread->stat & ~RT_THREAD_STAT_MASK);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   655  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   656      cpu_id   = rt_hw_cpu_id();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   657      bind_cpu = thread->bind_cpu ;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   658  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   659      /* insert thread to ready list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   660      if (bind_cpu == RT_CPUS_NR)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   661      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   662  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   663          rt_thread_ready_table[thread->number] |= thread->high_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   664  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   665          rt_thread_ready_priority_group |= thread->number_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   666  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   667          rt_list_insert_before(&(rt_thread_priority_table[thread->current_priority]),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   668                                &(thread->tlist));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   669          cpu_mask = RT_CPU_MASK ^ (1 << cpu_id);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   670          rt_hw_ipi_send(RT_SCHEDULE_IPI, cpu_mask);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   671      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   672      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   673      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   674          struct rt_cpu *pcpu = rt_cpu_index(bind_cpu);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   675  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   676  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   677          pcpu->ready_table[thread->number] |= thread->high_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   678  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   679          pcpu->priority_group |= thread->number_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   680  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   681          rt_list_insert_before(&(rt_cpu_index(bind_cpu)->priority_table[thread->current_priority]),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   682                                &(thread->tlist));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   683  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   684          if (cpu_id != bind_cpu)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   685          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   686              cpu_mask = 1 << bind_cpu;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   687              rt_hw_ipi_send(RT_SCHEDULE_IPI, cpu_mask);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   688          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   689      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   690  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   691      RT_DEBUG_LOG(RT_DEBUG_SCHEDULER, ("insert thread[%.*s], the priority: %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   692                                        RT_NAME_MAX, thread->name, thread->current_priority));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   693  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   694  __exit:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   695      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   696      rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   697  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   698  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   699  void rt_schedule_insert_thread(struct rt_thread *thread)
; Function rt_schedule_insert_thread
.L39:
rt_schedule_insert_thread:	.type	func
	mov.aa	a12,a4
.L215:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   700  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   701      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   702  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   703      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   704  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   705      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   706      temp = rt_hw_interrupt_disable();
	call	rt_hw_interrupt_disable
.L214:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   707  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   708      /* it's current thread, it should be RUNNING thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   709      if (thread == rt_current_thread)
	ld.a	a2,rt_current_thread
.L282:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   710      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   711          thread->stat = RT_THREAD_RUNNING | (thread->stat & ~RT_THREAD_STAT_MASK);
	ld.bu	d15,[a12]52
.L283:
	and	d15,#248
	jne.a	a12,a2,.L17
.L284:
	or	d15,#3
	st.b	[a12]52,d15
.L285:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   712          goto __exit;
	j	.L18
.L17:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   713      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   714  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   715      /* READY thread, insert to ready queue */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   716      thread->stat = RT_THREAD_READY | (thread->stat & ~RT_THREAD_STAT_MASK);
	or	d15,#1
	st.b	[a12]52,d15
.L286:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   717  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   718      /* insert thread to ready list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   719      rt_list_insert_before(&(rt_thread_priority_table[thread->current_priority]),
	ld.bu	d15,[a12]53
.L287:
	fcall	.cocofun_1
.L288:
	addsc.a	a15,a2,d15,#3
.L289:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   720                            &(thread->tlist));
	lea	a2,[a12]20
.L157:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	ld.a	a4,[a15]4
.L290:
	st.a	[a4],a2
.L291:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	ld.a	a4,[a15]4
.L292:
	st.a	[a12]24,a4
.L293:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a15]4,a2
.L294:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a2],a15
.L158:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   721  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   722      RT_DEBUG_LOG(RT_DEBUG_SCHEDULER, ("insert thread[%.*s], the priority: %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   723                                        RT_NAME_MAX, thread->name, thread->current_priority));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   724  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   725      /* set priority mask */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   726  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   727      rt_thread_ready_table[thread->number] |= thread->high_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   728  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   729      rt_thread_ready_priority_group |= thread->number_mask;
	ld.w	d0,rt_thread_ready_priority_group
.L295:
	ld.w	d15,[a12]56
.L296:
	or	d0,d15
	st.w	rt_thread_ready_priority_group,d0

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   730  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   731  __exit:
.L18:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   732      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   733      rt_hw_interrupt_enable(temp);
	mov	d4,d2
.L216:
	j	rt_hw_interrupt_enable
.L153:
	
__rt_schedule_insert_thread_function_end:
	.size	rt_schedule_insert_thread,__rt_schedule_insert_thread_function_end-rt_schedule_insert_thread
.L71:
	; End of function
	
	.sdecl	'.text.scheduler.rt_schedule_remove_thread',code,cluster('rt_schedule_remove_thread')
	.sect	'.text.scheduler.rt_schedule_remove_thread'
	.align	2
	
	.global	rt_schedule_remove_thread

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   734  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   735  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   736  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   737  /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   738   * This function will remove a thread from system ready queue.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   739   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   740   * @param thread the thread to be removed
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   741   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   742   * @note Please do not invoke this function in user application.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   743   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   744  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   745  void rt_schedule_remove_thread(struct rt_thread *thread)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   746  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   747      register rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   748  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   749      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   750  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   751      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   752      level = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   753  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   754      RT_DEBUG_LOG(RT_DEBUG_SCHEDULER, ("remove thread[%.*s], the priority: %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   755                                        RT_NAME_MAX, thread->name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   756                                        thread->current_priority));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   757  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   758      /* remove thread from ready list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   759      rt_list_remove(&(thread->tlist));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   760      if (thread->bind_cpu == RT_CPUS_NR)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   761      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   762          if (rt_list_isempty(&(rt_thread_priority_table[thread->current_priority])))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   763          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   764  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   765              rt_thread_ready_table[thread->number] &= ~thread->high_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   766              if (rt_thread_ready_table[thread->number] == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   767              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   768                  rt_thread_ready_priority_group &= ~thread->number_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   769              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   770  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   771              rt_thread_ready_priority_group &= ~thread->number_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   772  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   773          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   774      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   775      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   776      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   777          struct rt_cpu *pcpu = rt_cpu_index(thread->bind_cpu);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   778  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   779          if (rt_list_isempty(&(pcpu->priority_table[thread->current_priority])))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   780          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   781  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   782              pcpu->ready_table[thread->number] &= ~thread->high_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   783              if (pcpu->ready_table[thread->number] == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   784              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   785                  pcpu->priority_group &= ~thread->number_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   786              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   787  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   788              pcpu->priority_group &= ~thread->number_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   789  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   790          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   791      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   792  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   793      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   794      rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   795  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   796  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   797  void rt_schedule_remove_thread(struct rt_thread *thread)
; Function rt_schedule_remove_thread
.L41:
rt_schedule_remove_thread:	.type	func
	mov.aa	a15,a4
.L218:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   798  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   799      register rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   800  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   801      RT_ASSERT(thread != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   802  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   803      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   804      level = rt_hw_interrupt_disable();
	call	rt_hw_interrupt_disable
.L217:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   805  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   806      RT_DEBUG_LOG(RT_DEBUG_SCHEDULER, ("remove thread[%.*s], the priority: %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   807                                        RT_NAME_MAX, thread->name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   808                                        thread->current_priority));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   809  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   810      /* remove thread from ready list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   811      rt_list_remove(&(thread->tlist));
	lea	a2,[a15]20
.L168:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
	ld.a	a4,[a2]
.L301:
	ld.a	a5,[a15]24
.L302:
	st.a	[a4]4,a5
.L303:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
	ld.a	a4,[a15]24
.L304:
	ld.a	a5,[a2]
.L305:
	st.a	[a4],a5
.L306:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
	st.a	[a15]24,a2
.L307:
	st.a	[a2],a2
.L169:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   812      if (rt_list_isempty(&(rt_thread_priority_table[thread->current_priority])))
	ld.bu	d15,[a15]53
.L308:
	fcall	.cocofun_1
.L309:
	addsc.a	a2,a2,d15,#3
.L310:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a4,[a2]
.L311:
	jne.a	a4,a2,.L19
.L312:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   813      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   814  #if RT_THREAD_PRIORITY_MAX > 32
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   815          rt_thread_ready_table[thread->number] &= ~thread->high_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   816          if (rt_thread_ready_table[thread->number] == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   817          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   818              rt_thread_ready_priority_group &= ~thread->number_mask;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   819          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   820  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   821          rt_thread_ready_priority_group &= ~thread->number_mask;
	mov	d1,#-1
	ld.w	d15,[a15]56
.L313:
	ld.w	d0,rt_thread_ready_priority_group
.L314:
	xor	d15,d1
.L315:
	and	d0,d15
	st.w	rt_thread_ready_priority_group,d0
.L19:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   822  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   823      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   824  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   825      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   826      rt_hw_interrupt_enable(level);
	mov	d4,d2
.L219:
	j	rt_hw_interrupt_enable
.L164:
	
__rt_schedule_remove_thread_function_end:
	.size	rt_schedule_remove_thread,__rt_schedule_remove_thread_function_end-rt_schedule_remove_thread
.L76:
	; End of function
	
	.sdecl	'.text.scheduler.rt_enter_critical',code,cluster('rt_enter_critical')
	.sect	'.text.scheduler.rt_enter_critical'
	.align	2
	
	.global	rt_enter_critical

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   827  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   828  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   829  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   830  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   831   * This function will lock the thread scheduler.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   832   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   833  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   834  void rt_enter_critical(void)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   835  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   836      register rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   837      struct rt_thread *current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   838  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   839      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   840      level = rt_hw_local_irq_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   841  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   842      current_thread = rt_cpu_self()->current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   843      if (!current_thread)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   844      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   845          rt_hw_local_irq_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   846          return;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   847      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   848  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   849      /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   850       * the maximal number of nest is RT_UINT16_MAX, which is big
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   851       * enough and does not check here
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   852       */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   853  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   854      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   855          register rt_uint16_t lock_nest = current_thread->cpus_lock_nest;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   856          current_thread->cpus_lock_nest++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   857          if (lock_nest == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   858          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   859              current_thread->scheduler_lock_nest ++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   860              rt_hw_spin_lock(&_cpus_lock);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   861          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   862      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   863      /* critical for local cpu */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   864      current_thread->critical_lock_nest ++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   865  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   866      /* lock scheduler for local cpu */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   867      current_thread->scheduler_lock_nest ++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   868  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   869      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   870      rt_hw_local_irq_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   871  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   872  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   873  void rt_enter_critical(void)
; Function rt_enter_critical
.L43:
rt_enter_critical:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   874  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   875      register rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   876  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   877      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   878      level = rt_hw_interrupt_disable();
	call	rt_hw_interrupt_disable
.L220:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   879  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   880      /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   881       * the maximal number of nest is RT_UINT16_MAX, which is big
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   882       * enough and does not check here
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   883       */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   884      rt_scheduler_lock_nest ++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   885  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   886      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   887      rt_hw_interrupt_enable(level);
	mov	d4,d2
	ld.h	d15,rt_scheduler_lock_nest
.L221:
	add	d15,#1
	st.h	rt_scheduler_lock_nest,d15
.L320:
	j	rt_hw_interrupt_enable
.L173:
	
__rt_enter_critical_function_end:
	.size	rt_enter_critical,__rt_enter_critical_function_end-rt_enter_critical
.L81:
	; End of function
	
	.sdecl	'.text.scheduler.rt_exit_critical',code,cluster('rt_exit_critical')
	.sect	'.text.scheduler.rt_exit_critical'
	.align	2
	
	.global	rt_exit_critical

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   888  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   889  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   890  RTM_EXPORT(rt_enter_critical);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   891  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   892  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   893   * This function will unlock the thread scheduler.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   894   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   895  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   896  void rt_exit_critical(void)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   897  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   898      register rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   899      struct rt_thread *current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   900  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   901      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   902      level = rt_hw_local_irq_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   903  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   904      current_thread = rt_cpu_self()->current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   905      if (!current_thread)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   906      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   907          rt_hw_local_irq_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   908          return;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   909      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   910  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   911      current_thread->scheduler_lock_nest --;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   912  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   913      current_thread->critical_lock_nest --;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   914  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   915      current_thread->cpus_lock_nest--;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   916      if (current_thread->cpus_lock_nest == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   917      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   918          current_thread->scheduler_lock_nest --;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   919          rt_hw_spin_unlock(&_cpus_lock);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   920      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   921  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   922      if (current_thread->scheduler_lock_nest <= 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   923      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   924          current_thread->scheduler_lock_nest = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   925          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   926          rt_hw_local_irq_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   927  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   928          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   929      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   930      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   931      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   932          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   933          rt_hw_local_irq_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   934      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   935  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   936  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   937  void rt_exit_critical(void)
; Function rt_exit_critical
.L45:
rt_exit_critical:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   938  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   939      register rt_base_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   940  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   941      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   942      level = rt_hw_interrupt_disable();
	call	rt_hw_interrupt_disable
.L222:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   943  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   944      rt_scheduler_lock_nest --;
	ld.h	d15,rt_scheduler_lock_nest
.L325:
	add	d15,#-1
	st.h	rt_scheduler_lock_nest,d15
.L326:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   945      if (rt_scheduler_lock_nest <= 0)
	ld.h	d15,rt_scheduler_lock_nest
.L327:
	jge	d15,#1,.L20
.L328:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   946      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   947          rt_scheduler_lock_nest = 0;
	mov	d15,#0
	st.h	rt_scheduler_lock_nest,d15
.L329:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   948          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   949          rt_hw_interrupt_enable(level);
	mov	d4,d2
	call	rt_hw_interrupt_enable
.L223:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   950  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   951          if (rt_current_thread)
	ld.w	d15,rt_current_thread
.L330:
	jeq	d15,#0,.L21
.L331:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   952          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   953              /* if scheduler is started, do a schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   954              rt_schedule();
	j	rt_schedule
.L21:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   955          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   956      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   957      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   958      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   959          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   960          rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   961      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   962  }
	ret
.L20:
	mov	d4,d2
.L224:
	j	rt_hw_interrupt_enable
.L175:
	
__rt_exit_critical_function_end:
	.size	rt_exit_critical,__rt_exit_critical_function_end-rt_exit_critical
.L86:
	; End of function
	
	.sdecl	'.text.scheduler.rt_critical_level',code,cluster('rt_critical_level')
	.sect	'.text.scheduler.rt_critical_level'
	.align	2
	
	.global	rt_critical_level

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   963  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   964  RTM_EXPORT(rt_exit_critical);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   965  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   966  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   967   * Get the scheduler lock level
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   968   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   969   * @return the level of the scheduler lock. 0 means unlocked.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   970   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   971  rt_uint16_t rt_critical_level(void)
; Function rt_critical_level
.L47:
rt_critical_level:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   972  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   973  #ifdef RT_USING_SMP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   974      struct rt_thread *current_thread = rt_cpu_self()->current_thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   975  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   976      return current_thread->critical_lock_nest;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   977  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   978      return rt_scheduler_lock_nest;
	ld.h	d15,rt_scheduler_lock_nest
.L336:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   979  #endif /*RT_USING_SMP*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   980  }
	extr.u	d2,d15,#0,#16
	ret
.L178:
	
__rt_critical_level_function_end:
	.size	rt_critical_level,__rt_critical_level_function_end-rt_critical_level
.L91:
	; End of function
	
	.sdecl	'.bss.scheduler.rt_thread_priority_table',data,cluster('rt_thread_priority_table')
	.sect	'.bss.scheduler.rt_thread_priority_table'
	.global	rt_thread_priority_table
	.align	4
rt_thread_priority_table:	.type	object
	.size	rt_thread_priority_table,256
	.space	256
	.sdecl	'.zbss.scheduler.rt_thread_ready_priority_group',data,cluster('rt_thread_ready_priority_group')
	.sect	'.zbss.scheduler.rt_thread_ready_priority_group'
	.global	rt_thread_ready_priority_group
	.align	2
rt_thread_ready_priority_group:	.type	object
	.size	rt_thread_ready_priority_group,4
	.space	4
	.sdecl	'.zbss.scheduler.rt_scheduler_lock_nest',data,cluster('rt_scheduler_lock_nest')
	.sect	'.zbss.scheduler.rt_scheduler_lock_nest'
	.align	2
rt_scheduler_lock_nest:	.type	object
	.size	rt_scheduler_lock_nest,2
	.space	2
	.sdecl	'.zdata.scheduler.rt_current_thread',data,cluster('rt_current_thread')
	.sect	'.zdata.scheduler.rt_current_thread'
	.global	rt_current_thread
	.align	4
rt_current_thread:	.type	object
	.size	rt_current_thread,4
	.space	4
	.sdecl	'.zbss.scheduler.rt_current_priority',data,cluster('rt_current_priority')
	.sect	'.zbss.scheduler.rt_current_priority'
	.global	rt_current_priority
rt_current_priority:	.type	object
	.size	rt_current_priority,1
	.space	1
	.sdecl	'.zbss.scheduler.rt_thread_defunct',data,cluster('rt_thread_defunct')
	.sect	'.zbss.scheduler.rt_thread_defunct'
	.global	rt_thread_defunct
	.align	4
rt_thread_defunct:	.type	object
	.size	rt_thread_defunct,8
	.space	8
	.sdecl	'.zbss.scheduler.rt_scheduler_hook',data,cluster('rt_scheduler_hook')
	.sect	'.zbss.scheduler.rt_scheduler_hook'
	.align	4
rt_scheduler_hook:	.type	object
	.size	rt_scheduler_hook,4
	.space	4
	.calls	'_get_highest_priority_thread','__rt_ffs'
	.calls	'rt_system_scheduler_start','_get_highest_priority_thread'
	.calls	'rt_system_scheduler_start','rt_schedule_remove_thread'
	.calls	'rt_system_scheduler_start','rt_hw_context_switch_to'
	.calls	'rt_schedule','rt_hw_interrupt_disable'
	.calls	'rt_schedule','_get_highest_priority_thread'
	.calls	'rt_schedule','__INDIRECT__'
	.calls	'rt_schedule','rt_schedule_insert_thread'
	.calls	'rt_schedule','rt_schedule_remove_thread'
	.calls	'rt_schedule','rt_hw_context_switch'
	.calls	'rt_schedule','rt_hw_context_switch_interrupt'
	.calls	'rt_schedule','rt_hw_interrupt_enable'
	.calls	'rt_schedule_insert_thread','rt_hw_interrupt_disable'
	.calls	'rt_schedule_insert_thread','rt_hw_interrupt_enable'
	.calls	'rt_schedule_remove_thread','rt_hw_interrupt_disable'
	.calls	'rt_schedule_remove_thread','rt_hw_interrupt_enable'
	.calls	'rt_enter_critical','rt_hw_interrupt_disable'
	.calls	'rt_enter_critical','rt_hw_interrupt_enable'
	.calls	'rt_exit_critical','rt_hw_interrupt_disable'
	.calls	'rt_exit_critical','rt_hw_interrupt_enable'
	.calls	'rt_exit_critical','rt_schedule'
	.calls	'rt_system_scheduler_init','.cocofun_1'
	.calls	'rt_schedule','.cocofun_2'
	.calls	'rt_schedule_insert_thread','.cocofun_1'
	.calls	'rt_schedule_remove_thread','.cocofun_1'
	.calls	'rt_scheduler_sethook','',0
	.calls	'_get_highest_priority_thread','',0
	.calls	'rt_system_scheduler_init','',0
	.calls	'.cocofun_1','',0
	.calls	'rt_system_scheduler_start','',8
	.calls	'rt_schedule','',8
	.calls	'.cocofun_2','',0
	.calls	'rt_schedule_insert_thread','',0
	.calls	'rt_schedule_remove_thread','',0
	.calls	'rt_enter_critical','',0
	.calls	'rt_exit_critical','',0
	.extern	__rt_ffs
	.extern	rt_hw_interrupt_disable
	.extern	rt_hw_interrupt_enable
	.extern	rt_hw_context_switch
	.extern	rt_hw_context_switch_to
	.extern	rt_hw_context_switch_interrupt
	.extern	rt_interrupt_nest
	.extern	__INDIRECT__
	.calls	'rt_critical_level','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L49:
	.word	2152
	.half	3
	.word	.L50
	.byte	4
.L48:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L51
	.byte	2
	.word	.L190-.L49
.L190:
	.byte	3
	.byte	'rt_list_node',0,2,229,2,8,8,4
	.byte	'next',0
	.word	173
	.byte	4,2,35,0,4
	.byte	'prev',0
	.word	173
	.byte	4,2,35,4,0,2
	.word	178
.L130:
	.byte	5
	.byte	'rt_list_init',0,3,1,47,16,1,1
.L133:
	.byte	6
	.byte	'l',0,1,47,40
	.word	226
.L135:
	.byte	7,0
.L156:
	.byte	5
	.byte	'rt_list_insert_before',0,3,1,73,16,1,1
.L159:
	.byte	6
	.byte	'l',0,1,73,49
	.word	226
.L161:
	.byte	6
	.byte	'n',0,1,73,63
	.word	226
.L163:
	.byte	7,0
.L167:
	.byte	5
	.byte	'rt_list_remove',0,3,1,86,16,1,1
.L170:
	.byte	6
	.byte	'n',0,1,86,42
	.word	226
.L172:
	.byte	7,0
.L149:
	.byte	8
	.byte	'int',0,4,5,9
	.word	178
	.byte	2
	.word	355
	.byte	10
	.byte	'rt_list_isempty',0,3,1,98,15
	.word	348
	.byte	1,1,6
	.byte	'l',0,1,98,48
	.word	360
	.byte	7,0,9
	.word	348
	.byte	11
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,12
	.word	404
	.byte	0
.L187:
	.byte	8
	.byte	'unsigned int',0,4,7,13
	.word	446
	.byte	2
	.word	446
	.byte	14
	.byte	'__cmpswapw',0
	.word	462
	.byte	1,1,1,1,15
	.byte	'p',0
	.word	467
	.byte	15
	.byte	'value',0
	.word	446
	.byte	15
	.byte	'compare',0
	.word	446
	.byte	0,16
	.word	231
	.byte	17
	.word	251
	.byte	7,0,16
	.word	263
	.byte	17
	.word	292
	.byte	17
	.word	302
	.byte	7,0,16
	.word	314
	.byte	17
	.word	336
	.byte	7,0,16
	.word	365
	.byte	17
	.word	392
	.byte	7,0
.L128:
	.byte	8
	.byte	'long int',0,4,5,8
	.byte	'char',0,1,6,18,8
	.word	589
	.byte	19,7,0
.L189:
	.byte	8
	.byte	'unsigned char',0,1,8,20
	.byte	'void',0,2
	.word	623
.L141:
	.byte	8
	.byte	'unsigned long int',0,4,7,3
	.byte	'rt_object',0,2,131,3,8,20,4
	.byte	'name',0
	.word	597
	.byte	8,2,35,0,4
	.byte	'type',0
	.word	606
	.byte	1,2,35,8,4
	.byte	'flag',0
	.word	606
	.byte	1,2,35,9,4
	.byte	'list',0
	.word	178
	.byte	8,2,35,12,0,18,8
	.word	178
	.byte	19,0,0,21,1,1,12
	.word	629
	.byte	0,2
	.word	737
	.byte	3
	.byte	'rt_timer',0,2,236,3,8,44,4
	.byte	'parent',0
	.word	655
	.byte	20,2,35,0,4
	.byte	'row',0
	.word	728
	.byte	8,2,35,20,4
	.byte	'timeout_func',0
	.word	746
	.byte	4,2,35,28,4
	.byte	'parameter',0
	.word	629
	.byte	4,2,35,32,4
	.byte	'init_tick',0
	.word	446
	.byte	4,2,35,36,4
	.byte	'timeout_tick',0
	.word	446
	.byte	4,2,35,40,0,21,1,1,12
	.word	.L139-.L49
	.byte	0,2
	.word	878
	.byte	3
	.byte	'rt_thread',0,2,213,4,8,128,1,4
	.byte	'name',0
	.word	597
	.byte	8,2,35,0,4
	.byte	'type',0
	.word	606
	.byte	1,2,35,8,4
	.byte	'flags',0
	.word	606
	.byte	1,2,35,9,4
	.byte	'list',0
	.word	178
	.byte	8,2,35,12,4
	.byte	'tlist',0
	.word	178
	.byte	8,2,35,20,4
	.byte	'sp',0
	.word	629
	.byte	4,2,35,28,4
	.byte	'entry',0
	.word	629
	.byte	4,2,35,32,4
	.byte	'parameter',0
	.word	629
	.byte	4,2,35,36,4
	.byte	'stack_addr',0
	.word	629
	.byte	4,2,35,40,4
	.byte	'stack_size',0
	.word	446
	.byte	4,2,35,44,4
	.byte	'error',0
	.word	577
	.byte	4,2,35,48,4
	.byte	'stat',0
	.word	606
	.byte	1,2,35,52,4
	.byte	'current_priority',0
	.word	606
	.byte	1,2,35,53,4
	.byte	'init_priority',0
	.word	606
	.byte	1,2,35,54,4
	.byte	'number_mask',0
	.word	446
	.byte	4,2,35,56,4
	.byte	'event_set',0
	.word	446
	.byte	4,2,35,60,4
	.byte	'event_info',0
	.word	606
	.byte	1,2,35,64,4
	.byte	'init_tick',0
	.word	634
	.byte	4,2,35,66,4
	.byte	'remaining_tick',0
	.word	634
	.byte	4,2,35,70,4
	.byte	'thread_timer',0
	.word	751
	.byte	44,2,35,76,4
	.byte	'cleanup',0
	.word	887
	.byte	4,2,35,120,4
	.byte	'user_data',0
	.word	634
	.byte	4,2,35,124,0
.L139:
	.byte	2
	.word	892
.L177:
	.byte	8
	.byte	'unsigned short int',0,2,7,21,1,1,12
	.word	1307
	.byte	12
	.word	1307
	.byte	0
.L180:
	.byte	2
	.word	1334
	.byte	22
	.byte	'__rt_ffs',0,3,156,4,5
	.word	348
	.byte	1,1,1,1,6
	.byte	'value',0,3,156,4,18
	.word	348
	.byte	0,23
	.byte	'rt_hw_interrupt_disable',0,4,105,11
	.word	577
	.byte	1,1,1,1,24
	.byte	'rt_hw_interrupt_enable',0,4,106,6,1,1,1,1,6
	.byte	'level',0,4,106,39
	.word	577
	.byte	0,24
	.byte	'rt_hw_context_switch',0,4,117,6,1,1,1,1,6
	.byte	'from',0,4,117,38
	.word	634
	.byte	6
	.byte	'to',0,4,117,55
	.word	634
	.byte	0,24
	.byte	'rt_hw_context_switch_to',0,4,118,6,1,1,1,1,6
	.byte	'to',0,4,118,41
	.word	634
	.byte	0,24
	.byte	'rt_hw_context_switch_interrupt',0,4,119,6,1,1,1,1,6
	.byte	'from',0,4,119,48
	.word	634
	.byte	6
	.byte	'to',0,4,119,65
	.word	634
	.byte	0
.L183:
	.byte	2
	.word	634
	.byte	25
	.byte	'__INDIRECT__',0,5,1,1,1,1,1,26
	.byte	'__size_t',0,5,1,1
	.word	446
	.byte	27,1,2
	.word	1677
	.byte	26
	.byte	'__codeptr',0,5,1,1
	.word	1679
	.byte	26
	.byte	'__intptr_t',0,5,1,1
	.word	348
	.byte	26
	.byte	'__uintptr_t',0,5,1,1
	.word	446
.L188:
	.byte	8
	.byte	'short int',0,2,5,26
	.byte	'rt_int16_t',0,2,67,41
	.word	1741
	.byte	26
	.byte	'rt_uint8_t',0,2,69,41
	.word	606
	.byte	26
	.byte	'rt_uint16_t',0,2,70,41
	.word	1312
	.byte	26
	.byte	'rt_uint32_t',0,2,71,41
	.word	446
	.byte	26
	.byte	'rt_base_t',0,2,83,41
	.word	577
	.byte	26
	.byte	'rt_ubase_t',0,2,84,41
	.word	634
	.byte	26
	.byte	'rt_err_t',0,2,86,41
	.word	577
	.byte	26
	.byte	'rt_tick_t',0,2,88,41
	.word	446
	.byte	26
	.byte	'rt_size_t',0,2,90,41
	.word	634
	.byte	26
	.byte	'rt_list_t',0,2,234,2,29
	.word	178
	.byte	2
	.word	.L225-.L49
.L225:
	.byte	3
	.byte	'rt_slist_node',0,2,239,2,8,4,4
	.byte	'next',0
	.word	1941
	.byte	4,2,35,0,0,26
	.byte	'rt_slist_t',0,2,243,2,30
	.word	1946
	.byte	26
	.byte	'uint16_t',0,6,246,1,41
	.word	1312
	.byte	26
	.byte	'uint32_t',0,6,254,1,41
	.word	446
	.byte	26
	.byte	'time_t',0,7,44,25
	.word	634
	.byte	26
	.byte	'fd_mask',0,8,39,17
	.word	577
	.byte	21,1,1,12
	.word	348
	.byte	12
	.word	629
	.byte	0,2
	.word	2068
	.byte	26
	.byte	'rt_isr_handler_t',0,4,73,16
	.word	2082
.L186:
	.byte	18,128,2
	.word	178
	.byte	19,31,0,13
	.word	606
	.byte	28
	.byte	'rt_interrupt_nest',0,5,44,28
	.word	2122
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L50:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,15,0,73,19,0,0,3,19,1,3,8,58,15,59,15,57,15,11,15,0,0
	.byte	4,13,0,3,8,73,19,11,15,56,9,0,0,5,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,6,5,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,7,11,0,0,0,8,36,0,3,8,11,15,62,15,0,0,9,38,0,73,19,0,0,10,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,11,46,1,3,8,54,15,39,12,63,12,60,12,0,0,12,5,0,73,19,0,0,13,53,0,73,19,0,0
	.byte	14,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,15,5,0,3,8,73,19,0,0,16,46,1,49,19,0,0,17,5,0,49,19,0,0
	.byte	18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,46,1,3,8,58,15,59
	.byte	15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,23,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12
	.byte	0,0,24,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,25,46,0,3,8,58,15,59,15,57,15,54,15,63,12
	.byte	60,12,0,0,26,22,0,3,8,58,15,59,15,57,15,73,19,0,0,27,21,0,54,15,0,0,28,52,0,3,8,58,15,59,15,57,15,73,19
	.byte	63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L51:
	.word	.L227-.L226
.L226:
	.half	3
	.word	.L229-.L228
.L228:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc',0
	.byte	0
	.byte	'rtservice.h',0,1,0,0
	.byte	'rtdef.h',0,1,0,0
	.byte	'rtthread.h',0,1,0,0
	.byte	'rthw.h',0,1,0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0
	.byte	'stdint.h',0,2,0,0
	.byte	'time.h',0,2,0,0
	.byte	'libc_fdset.h',0,3,0,0,0
.L229:
.L227:
	.sdecl	'.debug_info',debug,cluster('rt_system_scheduler_init')
	.sect	'.debug_info'
.L52:
	.word	323
	.half	3
	.word	.L53
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L55,.L54
	.byte	2
	.word	.L48
	.byte	3
	.byte	'rt_system_scheduler_init',0,1,182,1,6,1,1,1
	.word	.L29,.L126,.L28
	.byte	4
	.word	.L127
	.byte	5
	.byte	'offset',0,1,187,1,24
	.word	.L128,.L129
	.byte	6
	.word	.L130,.L131,.L132
	.byte	7
	.word	.L133,.L134
	.byte	8
	.word	.L135,.L131,.L132
	.byte	0,6
	.word	.L130,.L136,.L137
	.byte	7
	.word	.L133,.L134
	.byte	8
	.word	.L135,.L136,.L137
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_system_scheduler_init')
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,85,6,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_system_scheduler_init')
	.sect	'.debug_line'
.L54:
	.word	.L231-.L230
.L230:
	.half	3
	.word	.L233-.L232
.L232:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L233:
	.byte	5,30,7,0,5,2
	.word	.L29
	.byte	3,189,1,1,5,28,1,5,23,9
	.half	.L234-.L29
	.byte	3,8,1,5,53,9
	.half	.L235-.L234
	.byte	3,126,1,5,47,9
	.half	.L3-.L235
	.byte	3,2,1,5,62,9
	.half	.L236-.L3
	.byte	3,126,1,4,2,5,23,9
	.half	.L131-.L236
	.byte	3,237,126,1,5,13,9
	.half	.L237-.L131
	.byte	1,4,1,5,53,3,147,1,1,5,36,7,9
	.half	.L132-.L237
	.byte	3,25,1,5,19,9
	.half	.L136-.L132
	.byte	3,8,1,4,2,5,23,9
	.half	.L238-.L136
	.byte	3,204,126,1,5,13,9
	.half	.L239-.L238
	.byte	1,4,1,5,1,9
	.half	.L137-.L239
	.byte	3,181,1,1,7,9
	.half	.L56-.L137
	.byte	0,1,1
.L231:
	.sdecl	'.debug_ranges',debug,cluster('rt_system_scheduler_init')
	.sect	'.debug_ranges'
.L55:
	.word	-1,.L29,0,.L56-.L29,0,0
.L127:
	.word	-1,.L29,0,.L126-.L29,-1,.L31,0,.L106-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('rt_system_scheduler_start')
	.sect	'.debug_info'
.L57:
	.word	295
	.half	3
	.word	.L58
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L60,.L59
	.byte	2
	.word	.L48
	.byte	3
	.byte	'rt_system_scheduler_start',0,1,237,1,6,1,1,1
	.word	.L33,.L138,.L32
	.byte	4
	.word	.L33,.L138
	.byte	5
	.byte	'to_thread',0,1,239,1,32
	.word	.L139,.L140
	.byte	5
	.byte	'highest_ready_priority',0,1,240,1,16
	.word	.L141,.L142
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_system_scheduler_start')
	.sect	'.debug_abbrev'
.L58:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_system_scheduler_start')
	.sect	'.debug_line'
.L59:
	.word	.L241-.L240
.L240:
	.half	3
	.word	.L243-.L242
.L242:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0,0
.L243:
	.byte	5,6,7,0,5,2
	.word	.L33
	.byte	3,236,1,1,5,47,9
	.half	.L195-.L33
	.byte	3,5,1,5,15,9
	.half	.L196-.L195
	.byte	1,5,23,9
	.half	.L198-.L196
	.byte	3,5,1,5,31,9
	.half	.L244-.L198
	.byte	3,3,1,5,23,9
	.half	.L200-.L244
	.byte	3,1,1,5,21,1,5,51,9
	.half	.L245-.L200
	.byte	3,6,1,5,29,9
	.half	.L246-.L245
	.byte	1,5,1,7,9
	.half	.L61-.L246
	.byte	3,4,0,1,1
.L241:
	.sdecl	'.debug_ranges',debug,cluster('rt_system_scheduler_start')
	.sect	'.debug_ranges'
.L60:
	.word	-1,.L33,0,.L61-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('rt_schedule')
	.sect	'.debug_info'
.L62:
	.word	362
	.half	3
	.word	.L63
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L65,.L64
	.byte	2
	.word	.L48
	.byte	3
	.byte	'rt_schedule',0,1,153,3,6,1,1,1
	.word	.L35,.L143,.L34
	.byte	4
	.word	.L35,.L143
	.byte	5
	.byte	'level',0,1,155,3,15
	.word	.L128,.L144
	.byte	5
	.byte	'to_thread',0,1,156,3,23
	.word	.L139,.L145
	.byte	4
	.word	.L146,.L4
	.byte	5
	.byte	'highest_ready_priority',0,1,165,3,20
	.word	.L141,.L147
	.byte	4
	.word	.L148,.L4
	.byte	5
	.byte	'need_insert_from_thread',0,1,170,3,17
	.word	.L149,.L150
	.byte	6
	.word	.L151
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_schedule')
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,11,0
	.byte	85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_schedule')
	.sect	'.debug_line'
.L64:
	.word	.L248-.L247
.L247:
	.half	3
	.word	.L250-.L249
.L249:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0,0
.L250:
	.byte	5,6,7,0,5,2
	.word	.L35
	.byte	3,152,3,1,5,36,9
	.half	.L201-.L35
	.byte	3,7,1,5,11,9
	.half	.L202-.L201
	.byte	1,5,9,3,3,1,5,5,9
	.half	.L209-.L202
	.byte	1,5,13,7,9
	.half	.L146-.L209
	.byte	3,4,1,5,9,9
	.half	.L251-.L146
	.byte	1,5,41,7,9
	.half	.L148-.L251
	.byte	3,3,1,5,55,3,2,1,5,18,9
	.half	.L203-.L148
	.byte	3,2,1,5,23,9
	.half	.L252-.L203
	.byte	3,126,1,5,55,9
	.half	.L211-.L252
	.byte	1,5,35,9
	.half	.L205-.L211
	.byte	3,2,1,5,42,9
	.half	.L253-.L205
	.byte	1,5,13,9
	.half	.L254-.L253
	.byte	1,5,38,7,9
	.half	.L255-.L254
	.byte	3,2,1,5,17,9
	.half	.L256-.L255
	.byte	1,5,26,7,9
	.half	.L257-.L256
	.byte	3,4,1,5,145,1,7,9
	.half	.L258-.L257
	.byte	1,5,31,7,9
	.half	.L7-.L258
	.byte	3,2,1,5,50,9
	.half	.L259-.L7
	.byte	1,5,45,9
	.half	.L8-.L259
	.byte	3,4,1,5,41,9
	.half	.L10-.L8
	.byte	3,2,1,5,30,9
	.half	.L6-.L10
	.byte	3,3,1,5,13,9
	.half	.L260-.L6
	.byte	1,5,17,7,9
	.half	.L261-.L260
	.byte	3,7,1,5,37,9
	.half	.L262-.L261
	.byte	3,124,1,9
	.half	.L263-.L262
	.byte	3,2,1,5,17,9
	.half	.L264-.L263
	.byte	3,2,1,7,9
	.half	.L265-.L264
	.byte	1,9
	.half	.L12-.L265
	.byte	3,2,1,5,39,7,9
	.half	.L266-.L12
	.byte	3,123,1,5,43,9
	.half	.L13-.L266
	.byte	3,10,1,5,65,9
	.half	.L208-.L13
	.byte	3,1,1,5,72,9
	.half	.L267-.L208
	.byte	1,5,53,9
	.half	.L268-.L267
	.byte	1,5,33,1,5,21,9
	.half	.L269-.L268
	.byte	3,15,1,5,17,9
	.half	.L270-.L269
	.byte	1,5,66,7,9
	.half	.L152-.L270
	.byte	3,4,1,5,29,9
	.half	.L271-.L152
	.byte	3,1,1,5,21,9
	.half	.L272-.L271
	.byte	3,24,1,5,76,9
	.half	.L14-.L272
	.byte	3,6,1,5,29,9
	.half	.L273-.L14
	.byte	3,1,1,5,56,9
	.half	.L274-.L273
	.byte	1,5,43,9
	.half	.L11-.L274
	.byte	3,5,1,5,64,9
	.half	.L212-.L11
	.byte	3,1,1,5,81,9
	.half	.L275-.L212
	.byte	1,5,88,9
	.half	.L276-.L275
	.byte	1,5,61,9
	.half	.L277-.L276
	.byte	1,5,41,1,5,28,9
	.half	.L4-.L277
	.byte	3,6,1,5,1,9
	.half	.L66-.L4
	.byte	3,4,0,1,1
.L248:
	.sdecl	'.debug_ranges',debug,cluster('rt_schedule')
	.sect	'.debug_ranges'
.L65:
	.word	-1,.L35,0,.L66-.L35,0,0
.L151:
	.word	-1,.L35,.L152-.L35,.L14-.L35,-1,.L37,0,.L111-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('rt_schedule_insert_thread')
	.sect	'.debug_info'
.L67:
	.word	319
	.half	3
	.word	.L68
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L70,.L69
	.byte	2
	.word	.L48
	.byte	3
	.byte	'rt_schedule_insert_thread',0,1,187,5,6,1,1,1
	.word	.L39,.L153,.L38
	.byte	4
	.byte	'thread',0,1,187,5,50
	.word	.L139,.L154
	.byte	5
	.word	.L39,.L153
	.byte	6
	.byte	'temp',0,1,189,5,24
	.word	.L128,.L155
	.byte	7
	.word	.L156,.L157,.L158
	.byte	8
	.word	.L159,.L160
	.byte	8
	.word	.L161,.L162
	.byte	9
	.word	.L163,.L157,.L158
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_schedule_insert_thread')
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_schedule_insert_thread')
	.sect	'.debug_line'
.L69:
	.word	.L279-.L278
.L278:
	.half	3
	.word	.L281-.L280
.L280:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L281:
	.byte	5,6,7,0,5,2
	.word	.L39
	.byte	3,186,5,1,5,35,9
	.half	.L215-.L39
	.byte	3,7,1,5,19,9
	.half	.L214-.L215
	.byte	3,3,1,5,51,9
	.half	.L282-.L214
	.byte	3,2,1,5,58,9
	.half	.L283-.L282
	.byte	1,5,5,3,126,1,5,42,7,9
	.half	.L284-.L283
	.byte	3,2,1,5,22,1,5,9,9
	.half	.L285-.L284
	.byte	3,1,1,5,36,9
	.half	.L17-.L285
	.byte	3,4,1,5,18,1,5,60,9
	.half	.L286-.L17
	.byte	3,3,1,5,29,9
	.half	.L287-.L286
	.byte	1,5,53,9
	.half	.L288-.L287
	.byte	1,5,35,9
	.half	.L289-.L288
	.byte	3,1,1,4,2,5,6,9
	.half	.L157-.L289
	.byte	3,251,122,1,5,19,9
	.half	.L290-.L157
	.byte	1,5,16,9
	.half	.L291-.L290
	.byte	3,1,1,5,13,9
	.half	.L292-.L291
	.byte	1,9
	.half	.L293-.L292
	.byte	3,2,1,9
	.half	.L294-.L293
	.byte	3,1,1,4,1,5,5,9
	.half	.L158-.L294
	.byte	3,138,5,1,5,45,9
	.half	.L295-.L158
	.byte	1,5,36,9
	.half	.L296-.L295
	.byte	1,5,28,9
	.half	.L18-.L296
	.byte	3,4,1,5,1,9
	.half	.L71-.L18
	.byte	3,1,0,1,1
.L279:
	.sdecl	'.debug_ranges',debug,cluster('rt_schedule_insert_thread')
	.sect	'.debug_ranges'
.L70:
	.word	-1,.L39,0,.L71-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('rt_schedule_remove_thread')
	.sect	'.debug_info'
.L72:
	.word	311
	.half	3
	.word	.L73
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L75,.L74
	.byte	2
	.word	.L48
	.byte	3
	.byte	'rt_schedule_remove_thread',0,1,157,6,6,1,1,1
	.word	.L41,.L164,.L40
	.byte	4
	.byte	'thread',0,1,157,6,50
	.word	.L139,.L165
	.byte	5
	.word	.L41,.L164
	.byte	6
	.byte	'level',0,1,159,6,24
	.word	.L128,.L166
	.byte	7
	.word	.L167,.L168,.L169
	.byte	8
	.word	.L170,.L171
	.byte	9
	.word	.L172,.L168,.L169
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_schedule_remove_thread')
	.sect	'.debug_abbrev'
.L73:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_schedule_remove_thread')
	.sect	'.debug_line'
.L74:
	.word	.L298-.L297
.L297:
	.half	3
	.word	.L300-.L299
.L299:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L300:
	.byte	5,6,7,0,5,2
	.word	.L41
	.byte	3,156,6,1,5,36,9
	.half	.L218-.L41
	.byte	3,7,1,5,28,9
	.half	.L217-.L218
	.byte	3,7,1,4,2,5,6,9
	.half	.L168-.L217
	.byte	3,173,122,1,5,22,9
	.half	.L301-.L168
	.byte	1,5,19,9
	.half	.L302-.L301
	.byte	1,5,6,9
	.half	.L303-.L302
	.byte	3,1,1,5,22,9
	.half	.L304-.L303
	.byte	1,5,19,9
	.half	.L305-.L304
	.byte	1,5,23,9
	.half	.L306-.L305
	.byte	3,2,1,5,13,9
	.half	.L307-.L306
	.byte	1,4,1,5,58,9
	.half	.L169-.L307
	.byte	3,209,5,1,5,27,9
	.half	.L308-.L169
	.byte	1,5,51,9
	.half	.L309-.L308
	.byte	1,4,2,5,13,9
	.half	.L310-.L309
	.byte	3,184,122,1,4,1,5,5,9
	.half	.L311-.L310
	.byte	3,200,5,1,5,43,7,9
	.half	.L312-.L311
	.byte	3,9,1,5,50,1,5,9,9
	.half	.L313-.L312
	.byte	1,5,43,9
	.half	.L314-.L313
	.byte	1,5,40,9
	.half	.L315-.L314
	.byte	1,5,28,9
	.half	.L19-.L315
	.byte	3,5,1,5,1,9
	.half	.L76-.L19
	.byte	3,1,0,1,1
.L298:
	.sdecl	'.debug_ranges',debug,cluster('rt_schedule_remove_thread')
	.sect	'.debug_ranges'
.L75:
	.word	-1,.L41,0,.L76-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('rt_enter_critical')
	.sect	'.debug_info'
.L77:
	.word	247
	.half	3
	.word	.L78
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L80,.L79
	.byte	2
	.word	.L48
	.byte	3
	.byte	'rt_enter_critical',0,1,233,6,6,1,1,1
	.word	.L43,.L173,.L42
	.byte	4
	.word	.L43,.L173
	.byte	5
	.byte	'level',0,1,235,6,24
	.word	.L128,.L174
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_enter_critical')
	.sect	'.debug_abbrev'
.L78:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_enter_critical')
	.sect	'.debug_line'
.L79:
	.word	.L317-.L316
.L316:
	.half	3
	.word	.L319-.L318
.L318:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0,0
.L319:
	.byte	5,36,7,0,5,2
	.word	.L43
	.byte	3,237,6,1,5,28,9
	.half	.L220-.L43
	.byte	3,9,1,5,5,3,125,1,5,28,9
	.half	.L221-.L220
	.byte	1,9
	.half	.L320-.L221
	.byte	3,3,1,5,1,7,9
	.half	.L81-.L320
	.byte	3,1,0,1,1
.L317:
	.sdecl	'.debug_ranges',debug,cluster('rt_enter_critical')
	.sect	'.debug_ranges'
.L80:
	.word	-1,.L43,0,.L81-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('rt_exit_critical')
	.sect	'.debug_info'
.L82:
	.word	246
	.half	3
	.word	.L83
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L85,.L84
	.byte	2
	.word	.L48
	.byte	3
	.byte	'rt_exit_critical',0,1,169,7,6,1,1,1
	.word	.L45,.L175,.L44
	.byte	4
	.word	.L45,.L175
	.byte	5
	.byte	'level',0,1,171,7,24
	.word	.L128,.L176
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_exit_critical')
	.sect	'.debug_abbrev'
.L83:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_exit_critical')
	.sect	'.debug_line'
.L84:
	.word	.L322-.L321
.L321:
	.half	3
	.word	.L324-.L323
.L323:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0,0
.L324:
	.byte	5,36,7,0,5,2
	.word	.L45
	.byte	3,173,7,1,5,5,9
	.half	.L222-.L45
	.byte	3,2,1,5,28,9
	.half	.L325-.L222
	.byte	1,5,9,9
	.half	.L326-.L325
	.byte	3,1,1,5,5,9
	.half	.L327-.L326
	.byte	1,5,34,7,9
	.half	.L328-.L327
	.byte	3,2,1,5,32,1,9
	.half	.L329-.L328
	.byte	3,2,1,5,13,9
	.half	.L223-.L329
	.byte	3,2,1,5,9,9
	.half	.L330-.L223
	.byte	1,5,24,7,9
	.half	.L331-.L330
	.byte	3,3,1,5,1,7,9
	.half	.L21-.L331
	.byte	3,8,1,5,32,7,9
	.half	.L20-.L21
	.byte	3,126,1,5,1,9
	.half	.L86-.L20
	.byte	3,2,0,1,1
.L322:
	.sdecl	'.debug_ranges',debug,cluster('rt_exit_critical')
	.sect	'.debug_ranges'
.L85:
	.word	-1,.L45,0,.L86-.L45,0,0
	.sdecl	'.debug_info',debug,cluster('rt_critical_level')
	.sect	'.debug_info'
.L87:
	.word	231
	.half	3
	.word	.L88
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L90,.L89
	.byte	2
	.word	.L48
	.byte	3
	.byte	'rt_critical_level',0,1,203,7,13
	.word	.L177
	.byte	1,1,1
	.word	.L47,.L178,.L46
	.byte	4
	.word	.L47,.L178
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_critical_level')
	.sect	'.debug_abbrev'
.L88:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_critical_level')
	.sect	'.debug_line'
.L89:
	.word	.L333-.L332
.L332:
	.half	3
	.word	.L335-.L334
.L334:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0,0
.L335:
	.byte	5,12,7,0,5,2
	.word	.L47
	.byte	3,209,7,1,5,1,9
	.half	.L336-.L47
	.byte	3,2,1,7,9
	.half	.L91-.L336
	.byte	0,1,1
.L333:
	.sdecl	'.debug_ranges',debug,cluster('rt_critical_level')
	.sect	'.debug_ranges'
.L90:
	.word	-1,.L47,0,.L91-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('rt_scheduler_sethook')
	.sect	'.debug_info'
.L92:
	.word	246
	.half	3
	.word	.L93
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L95,.L94
	.byte	2
	.word	.L48
	.byte	3
	.byte	'rt_scheduler_sethook',0,1,68,1,1,1,1
	.word	.L25,.L179,.L24
	.byte	4
	.byte	'hook',0,1,68,29
	.word	.L180,.L181
	.byte	5
	.word	.L25,.L179
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_scheduler_sethook')
	.sect	'.debug_abbrev'
.L93:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_scheduler_sethook')
	.sect	'.debug_line'
.L94:
	.word	.L338-.L337
.L337:
	.half	3
	.word	.L340-.L339
.L339:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0,0
.L340:
	.byte	5,23,7,0,5,2
	.word	.L25
	.byte	3,197,0,1,5,1,9
	.half	.L341-.L25
	.byte	3,1,1,7,9
	.half	.L96-.L341
	.byte	0,1,1
.L338:
	.sdecl	'.debug_ranges',debug,cluster('rt_scheduler_sethook')
	.sect	'.debug_ranges'
.L95:
	.word	-1,.L25,0,.L96-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('_get_highest_priority_thread')
	.sect	'.debug_info'
.L97:
	.word	304
	.half	3
	.word	.L98
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L100,.L99
	.byte	2
	.word	.L48
	.byte	3
	.byte	'_get_highest_priority_thread',0,1,153,1,26
	.word	.L139
	.byte	1,1
	.word	.L27,.L182,.L26
	.byte	4
	.byte	'highest_prio',0,1,153,1,67
	.word	.L183,.L184
	.byte	5
	.word	.L27,.L182
	.byte	6
	.byte	'highest_ready_priority',0,1,156,1,25
	.word	.L141,.L185
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('_get_highest_priority_thread')
	.sect	'.debug_abbrev'
.L98:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('_get_highest_priority_thread')
	.sect	'.debug_line'
.L99:
	.word	.L343-.L342
.L342:
	.half	3
	.word	.L345-.L344
.L344:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0,0
.L345:
	.byte	5,26,7,0,5,2
	.word	.L27
	.byte	3,152,1,1,5,39,9
	.half	.L192-.L27
	.byte	3,11,1,5,71,9
	.half	.L191-.L192
	.byte	1,5,19,3,8,1,5,31,9
	.half	.L194-.L191
	.byte	3,124,1,5,1,9
	.half	.L346-.L194
	.byte	3,7,1,7,9
	.half	.L101-.L346
	.byte	0,1,1
.L343:
	.sdecl	'.debug_ranges',debug,cluster('_get_highest_priority_thread')
	.sect	'.debug_ranges'
.L100:
	.word	-1,.L27,0,.L101-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L102:
	.word	208
	.half	3
	.word	.L103
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L105,.L104
	.byte	2
	.word	.L48
	.byte	3
	.byte	'.cocofun_1',0,1,182,1,6,1
	.word	.L31,.L106,.L30
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L103:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L104:
	.word	.L348-.L347
.L347:
	.half	3
	.word	.L350-.L349
.L349:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0,0
.L350:
	.byte	5,23,7,0,5,2
	.word	.L31
	.byte	3,197,1,1,9
	.half	.L106-.L31
	.byte	0,1,1,5,29,0,5,2
	.word	.L31
	.byte	3,206,5,1,5,23,9
	.half	.L351-.L31
	.byte	3,247,123,1,7,9
	.half	.L106-.L351
	.byte	0,1,1,5,27,0,5,2
	.word	.L31
	.byte	3,171,6,1,5,23,9
	.half	.L351-.L31
	.byte	3,154,123,1,7,9
	.half	.L106-.L351
	.byte	0,1,1
.L348:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L105:
	.word	-1,.L31,0,.L106-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L107:
	.word	208
	.half	3
	.word	.L108
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L110,.L109
	.byte	2
	.word	.L48
	.byte	3
	.byte	'.cocofun_2',0,1,153,3,6,1
	.word	.L37,.L111,.L36
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L108:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L109:
	.word	.L353-.L352
.L352:
	.half	3
	.word	.L355-.L354
.L354:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0,0,0,0,0
.L355:
	.byte	5,66,7,0,5,2
	.word	.L37
	.byte	3,224,3,1,5,51,9
	.half	.L356-.L37
	.byte	3,1,1,9
	.half	.L111-.L356
	.byte	0,1,1,5,76,0,5,2
	.word	.L37
	.byte	3,255,3,1,5,51,9
	.half	.L356-.L37
	.byte	3,1,1,9
	.half	.L357-.L356
	.byte	3,97,1,7,9
	.half	.L111-.L357
	.byte	0,1,1
.L353:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L110:
	.word	-1,.L37,0,.L111-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_priority_table')
	.sect	'.debug_info'
.L112:
	.word	211
	.half	3
	.word	.L113
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L48
	.byte	3
	.byte	'rt_thread_priority_table',0,5,36,11
	.word	.L186
	.byte	1,5,3
	.word	rt_thread_priority_table
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_priority_table')
	.sect	'.debug_abbrev'
.L113:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_ready_priority_group')
	.sect	'.debug_info'
.L114:
	.word	217
	.half	3
	.word	.L115
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L48
	.byte	3
	.byte	'rt_thread_ready_priority_group',0,5,37,13
	.word	.L187
	.byte	1,5,3
	.word	rt_thread_ready_priority_group
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_ready_priority_group')
	.sect	'.debug_abbrev'
.L115:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('rt_scheduler_lock_nest')
	.sect	'.debug_info'
.L116:
	.word	208
	.half	3
	.word	.L117
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L48
	.byte	3
	.byte	'rt_scheduler_lock_nest',0,5,45,19
	.word	.L188
	.byte	5,3
	.word	rt_scheduler_lock_nest
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rt_scheduler_lock_nest')
	.sect	'.debug_abbrev'
.L117:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('rt_current_thread')
	.sect	'.debug_info'
.L118:
	.word	204
	.half	3
	.word	.L119
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L48
	.byte	3
	.byte	'rt_current_thread',0,5,46,19
	.word	.L139
	.byte	1,5,3
	.word	rt_current_thread
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rt_current_thread')
	.sect	'.debug_abbrev'
.L119:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('rt_current_priority')
	.sect	'.debug_info'
.L120:
	.word	206
	.half	3
	.word	.L121
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L48
	.byte	3
	.byte	'rt_current_priority',0,5,47,12
	.word	.L189
	.byte	1,5,3
	.word	rt_current_priority
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rt_current_priority')
	.sect	'.debug_abbrev'
.L121:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('rt_thread_defunct')
	.sect	'.debug_info'
.L122:
	.word	204
	.half	3
	.word	.L123
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L48
	.byte	3
	.byte	'rt_thread_defunct',0,5,50,11
	.word	.L190
	.byte	1,5,3
	.word	rt_thread_defunct
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rt_thread_defunct')
	.sect	'.debug_abbrev'
.L123:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('rt_scheduler_hook')
	.sect	'.debug_info'
.L124:
	.word	203
	.half	3
	.word	.L125
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\scheduler.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1,2
	.word	.L48
	.byte	3
	.byte	'rt_scheduler_hook',0,5,53,15
	.word	.L180
	.byte	5,3
	.word	rt_scheduler_hook
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rt_scheduler_hook')
	.sect	'.debug_abbrev'
.L125:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L106-.L31
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L111-.L37
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('_get_highest_priority_thread')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L182-.L27
	.half	2
	.byte	138,0
	.word	0,0
.L184:
	.word	-1,.L27,0,.L191-.L27
	.half	1
	.byte	100
	.word	.L192-.L27,.L193-.L27
	.half	1
	.byte	111
	.word	0,0
.L185:
	.word	-1,.L27,.L194-.L27,.L182-.L27
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_critical_level')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L47,0,.L178-.L47
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_enter_critical')
	.sect	'.debug_loc'
.L174:
	.word	-1,.L43,.L220-.L43,.L173-.L43
	.half	1
	.byte	82
	.word	.L221-.L43,.L173-.L43
	.half	1
	.byte	84
	.word	0,0
.L42:
	.word	-1,.L43,0,.L173-.L43
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_exit_critical')
	.sect	'.debug_loc'
.L176:
	.word	-1,.L45,.L222-.L45,.L223-.L45
	.half	1
	.byte	82
	.word	.L20-.L45,.L175-.L45
	.half	1
	.byte	82
	.word	.L224-.L45,.L175-.L45
	.half	1
	.byte	84
	.word	0,0
.L44:
	.word	-1,.L45,0,.L175-.L45
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_schedule')
	.sect	'.debug_loc'
.L147:
	.word	-1,.L35,.L205-.L35,.L12-.L35
	.half	5
	.byte	144,32,157,32,0
	.word	.L11-.L35,.L212-.L35
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L144:
	.word	-1,.L35,.L202-.L35,.L203-.L35
	.half	1
	.byte	82
	.word	.L37-.L35,.L111-.L35
	.half	1
	.byte	89
	.word	.L209-.L35,.L143-.L35
	.half	1
	.byte	89
	.word	.L213-.L35,.L143-.L35
	.half	1
	.byte	84
	.word	0,0
.L150:
	.word	-1,.L35,.L37-.L35,.L111-.L35
	.half	1
	.byte	88
	.word	.L210-.L35,.L4-.L35
	.half	1
	.byte	88
	.word	0,0
.L34:
	.word	-1,.L35,0,.L201-.L35
	.half	2
	.byte	138,0
	.word	.L201-.L35,.L143-.L35
	.half	2
	.byte	138,8
	.word	.L143-.L35,.L143-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L145:
	.word	-1,.L35,.L203-.L35,.L204-.L35
	.half	1
	.byte	98
	.word	.L206-.L35,.L12-.L35
	.half	1
	.byte	101
	.word	.L207-.L35,.L208-.L35
	.half	1
	.byte	100
	.word	.L37-.L35,.L111-.L35
	.half	1
	.byte	108
	.word	.L211-.L35,.L4-.L35
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_schedule_insert_thread')
	.sect	'.debug_loc'
.L160:
	.word	0,0
.L162:
	.word	0,0
.L38:
	.word	-1,.L39,0,.L153-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L155:
	.word	-1,.L39,.L31-.L39,.L106-.L39
	.half	1
	.byte	82
	.word	.L214-.L39,.L153-.L39
	.half	1
	.byte	82
	.word	.L216-.L39,.L153-.L39
	.half	1
	.byte	84
	.word	0,0
.L154:
	.word	-1,.L39,0,.L214-.L39
	.half	1
	.byte	100
	.word	.L31-.L39,.L106-.L39
	.half	1
	.byte	108
	.word	.L215-.L39,.L153-.L39
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_schedule_remove_thread')
	.sect	'.debug_loc'
.L166:
	.word	-1,.L41,.L31-.L41,.L106-.L41
	.half	1
	.byte	82
	.word	.L217-.L41,.L164-.L41
	.half	1
	.byte	82
	.word	.L219-.L41,.L164-.L41
	.half	1
	.byte	84
	.word	0,0
.L171:
	.word	0,0
.L40:
	.word	-1,.L41,0,.L164-.L41
	.half	2
	.byte	138,0
	.word	0,0
.L165:
	.word	-1,.L41,0,.L217-.L41
	.half	1
	.byte	100
	.word	.L31-.L41,.L106-.L41
	.half	1
	.byte	111
	.word	.L218-.L41,.L164-.L41
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_scheduler_sethook')
	.sect	'.debug_loc'
.L181:
	.word	-1,.L25,0,.L179-.L25
	.half	1
	.byte	100
	.word	0,0
.L24:
	.word	-1,.L25,0,.L179-.L25
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_system_scheduler_init')
	.sect	'.debug_loc'
.L134:
	.word	0,0
.L129:
	.word	0,0
.L28:
	.word	-1,.L29,0,.L126-.L29
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_system_scheduler_start')
	.sect	'.debug_loc'
.L142:
	.word	-1,.L33,0,.L138-.L33
	.half	2
	.byte	145,120
	.word	0,0
.L32:
	.word	-1,.L33,0,.L195-.L33
	.half	2
	.byte	138,0
	.word	.L195-.L33,.L138-.L33
	.half	2
	.byte	138,8
	.word	.L138-.L33,.L138-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L140:
	.word	-1,.L33,.L196-.L33,.L197-.L33
	.half	1
	.byte	98
	.word	.L198-.L33,.L199-.L33
	.half	1
	.byte	111
	.word	.L197-.L33,.L200-.L33
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L358:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('rt_scheduler_sethook')
	.sect	'.debug_frame'
	.word	24
	.word	.L358,.L25,.L179-.L25
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('_get_highest_priority_thread')
	.sect	'.debug_frame'
	.word	12
	.word	.L358,.L27,.L182-.L27
	.sdecl	'.debug_frame',debug,cluster('rt_system_scheduler_init')
	.sect	'.debug_frame'
	.word	20
	.word	.L358,.L29,.L126-.L29
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('rt_system_scheduler_start')
	.sect	'.debug_frame'
	.word	36
	.word	.L358,.L33,.L138-.L33
	.byte	4
	.word	(.L195-.L33)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L138-.L195)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('rt_schedule')
	.sect	'.debug_frame'
	.word	36
	.word	.L358,.L35,.L143-.L35
	.byte	4
	.word	(.L201-.L35)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L143-.L201)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('rt_schedule_insert_thread')
	.sect	'.debug_frame'
	.word	12
	.word	.L358,.L39,.L153-.L39
	.sdecl	'.debug_frame',debug,cluster('rt_schedule_remove_thread')
	.sect	'.debug_frame'
	.word	12
	.word	.L358,.L41,.L164-.L41
	.sdecl	'.debug_frame',debug,cluster('rt_enter_critical')
	.sect	'.debug_frame'
	.word	12
	.word	.L358,.L43,.L173-.L43
	.sdecl	'.debug_frame',debug,cluster('rt_exit_critical')
	.sect	'.debug_frame'
	.word	12
	.word	.L358,.L45,.L175-.L45
	.sdecl	'.debug_frame',debug,cluster('rt_critical_level')
	.sect	'.debug_frame'
	.word	24
	.word	.L358,.L47,.L178-.L47
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L359:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L359,.L31,.L106-.L31
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L359,.L37,.L111-.L37
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   981  RTM_EXPORT(rt_critical_level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   982  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\scheduler.c	   983  /**@}*/

	; Module end
