	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\.device.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.src ..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c'

	
$TC162
	
	.sdecl	'.text.device.rt_device_register',code,cluster('rt_device_register')
	.sect	'.text.device.rt_device_register'
	.align	2
	
	.global	rt_device_register

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	     1  /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	     3   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	     4   * SPDX-License-Identifier: Apache-2.0
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	     5   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	     6   * Change Logs:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	     7   * Date           Author       Notes
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	     8   * 2007-01-21     Bernard      the first version
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	     9   * 2010-05-04     Bernard      add rt_device_init implementation
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    10   * 2012-10-20     Bernard      add device check in register function,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    11   *                             provided by Rob <rdent@iinet.net.au>
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    12   * 2012-12-25     Bernard      return RT_EOK if the device interface not exist.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    13   * 2013-07-09     Grissiom     add ref_count support
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    14   * 2016-04-02     Bernard      fix the open_flag initialization issue.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    15   * 2021-03-19     Meco Man     remove rt_device_init_all()
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    16   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    17  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    18  #include <rtthread.h>
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    19  #if defined(RT_USING_POSIX)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    20  #include <rtdevice.h> /* for wqueue_init */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    21  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    22  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    23  #ifdef RT_USING_DEVICE
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    24  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    25  #ifdef RT_USING_DEVICE_OPS
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    26  #define device_init     (dev->ops->init)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    27  #define device_open     (dev->ops->open)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    28  #define device_close    (dev->ops->close)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    29  #define device_read     (dev->ops->read)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    30  #define device_write    (dev->ops->write)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    31  #define device_control  (dev->ops->control)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    32  #else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    33  #define device_init     (dev->init)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    34  #define device_open     (dev->open)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    35  #define device_close    (dev->close)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    36  #define device_read     (dev->read)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    37  #define device_write    (dev->write)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    38  #define device_control  (dev->control)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    39  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    40  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    41  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    42   * This function registers a device driver with specified name.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    43   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    44   * @param dev the pointer of device driver structure
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    45   * @param name the device driver's name
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    46   * @param flags the capabilities flag of device
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    47   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    48   * @return the error code, RT_EOK on initialization successfully.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    49   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    50  rt_err_t rt_device_register(rt_device_t dev,
; Function rt_device_register
.L49:
rt_device_register:	.type	func
	mov.aa	a15,a4
.L179:
	mov.aa	a12,a5
.L180:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    51                              const char *name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    52                              rt_uint16_t flags)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    53  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    54      if (dev == RT_NULL)
	mov	d15,d4
	jz.a	a15,.L2
.L181:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    55          return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    56  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    57      if (rt_device_find(name) != RT_NULL)
	mov.aa	a4,a12
.L177:
	call	rt_device_find
.L178:
	jz.a	a2,.L3

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    58          return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    59  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    60      rt_object_init(&(dev->parent), RT_Object_Class_Device, name);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    61      dev->flag = flags;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    62      dev->ref_count = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    63      dev->open_flag = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    64  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    65  #if defined(RT_USING_POSIX)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    66      dev->fops = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    67      rt_wqueue_init(&(dev->wait_queue));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    68  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    69  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    70      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    71  }
.L2:
	mov	d2,#-1
	ret
.L3:
	mov	d4,#9
	mov.aa	a4,a15
.L182:
	mov.aa	a5,a12
.L184:
	call	rt_object_init
.L183:
	st.h	[a15]22,d15
.L218:
	mov	d2,#0
	st.b	[a15]26,d2
.L219:
	st.h	[a15]24,d2
.L220:
	ret
.L134:
	
__rt_device_register_function_end:
	.size	rt_device_register,__rt_device_register_function_end-rt_device_register
.L83:
	; End of function
	
	.sdecl	'.text.device.rt_device_unregister',code,cluster('rt_device_unregister')
	.sect	'.text.device.rt_device_unregister'
	.align	2
	
	.global	rt_device_unregister

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    72  RTM_EXPORT(rt_device_register);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    73  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    74  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    75   * This function removes a previously registered device driver
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    76   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    77   * @param dev the pointer of device driver structure
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    78   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    79   * @return the error code, RT_EOK on successfully.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    80   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    81  rt_err_t rt_device_unregister(rt_device_t dev)
; Function rt_device_unregister
.L51:
rt_device_unregister:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    82  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    83      RT_ASSERT(dev != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    84      RT_ASSERT(rt_object_get_type(&dev->parent) == RT_Object_Class_Device);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    85      RT_ASSERT(rt_object_is_systemobject(&dev->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    86  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    87      rt_object_detach(&(dev->parent));
	call	rt_object_detach
.L185:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    88  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    89      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    90  }
	mov	d2,#0
	ret
.L139:
	
__rt_device_unregister_function_end:
	.size	rt_device_unregister,__rt_device_unregister_function_end-rt_device_unregister
.L88:
	; End of function
	
	.sdecl	'.text.device.rt_device_find',code,cluster('rt_device_find')
	.sect	'.text.device.rt_device_find'
	.align	2
	
	.global	rt_device_find

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    91  RTM_EXPORT(rt_device_unregister);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    92  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    93  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    94   * This function finds a device driver by specified name.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    95   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    96   * @param name the device driver's name
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    97   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    98   * @return the registered device driver on successful, or RT_NULL on failure.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	    99   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   100  rt_device_t rt_device_find(const char *name)
; Function rt_device_find
.L53:
rt_device_find:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   101  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   102      return (rt_device_t)rt_object_find(name, RT_Object_Class_Device);
	mov	d4,#9
	j	rt_object_find
.L130:
	
__rt_device_find_function_end:
	.size	rt_device_find,__rt_device_find_function_end-rt_device_find
.L78:
	; End of function
	
	.sdecl	'.text.device.rt_device_init',code,cluster('rt_device_init')
	.sect	'.text.device.rt_device_init'
	.align	2
	
	.global	rt_device_init

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   103  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   104  RTM_EXPORT(rt_device_find);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   105  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   106  #ifdef RT_USING_HEAP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   107  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   108   * This function creates a device object with user data size.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   109   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   110   * @param type, the kind type of this device object.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   111   * @param attach_size, the size of user data.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   112   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   113   * @return the allocated device object, or RT_NULL when failed.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   114   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   115  rt_device_t rt_device_create(int type, int attach_size)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   116  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   117      int size;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   118      rt_device_t device;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   119  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   120      size = RT_ALIGN(sizeof(struct rt_device), RT_ALIGN_SIZE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   121      attach_size = RT_ALIGN(attach_size, RT_ALIGN_SIZE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   122      /* use the total size */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   123      size += attach_size;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   124  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   125      device = (rt_device_t)rt_malloc(size);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   126      if (device)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   127      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   128          rt_memset(device, 0x0, sizeof(struct rt_device));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   129          device->type = (enum rt_device_class_type)type;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   130      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   131  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   132      return device;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   133  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   134  RTM_EXPORT(rt_device_create);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   135  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   136  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   137   * This function destroy the specific device object.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   138   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   139   * @param dev, the specific device object.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   140   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   141  void rt_device_destroy(rt_device_t dev)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   142  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   143      RT_ASSERT(dev != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   144      RT_ASSERT(rt_object_get_type(&dev->parent) == RT_Object_Class_Device);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   145      RT_ASSERT(rt_object_is_systemobject(&dev->parent) == RT_FALSE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   146  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   147      rt_object_detach(&(dev->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   148  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   149      /* release this device object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   150      rt_free(dev);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   151  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   152  RTM_EXPORT(rt_device_destroy);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   153  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   154  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   155  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   156   * This function will initialize the specified device
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   157   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   158   * @param dev the pointer of device driver structure
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   159   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   160   * @return the result
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   161   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   162  rt_err_t rt_device_init(rt_device_t dev)
; Function rt_device_init
.L55:
rt_device_init:	.type	func
	mov.aa	a15,a4
.L188:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   163  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   164      rt_err_t result = RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   165  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   166      RT_ASSERT(dev != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   167  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   168      /* get device_init handler */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   169      if (device_init != RT_NULL)
	ld.a	a2,[a15]36
.L239:
	mov	d8,#0
	sub.a	a10,#8
.L186:
	jz.a	a2,.L8
.L240:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   170      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   171          if (!(dev->flag & RT_DEVICE_FLAG_ACTIVATED))
	ld.hu	d15,[a15]22
.L241:
	jnz.t	d15:4,.L9
.L242:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   172          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   173              result = device_init(dev);
	calli	a2
.L187:
	mov	d8,d2
.L190:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   174              if (result != RT_EOK)
	jeq	d8,#0,.L10
.L243:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   175              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   176                  rt_kprintf("To initialize device:%s failed. The error code is %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   177                             dev->parent.name, result);
	st.a	[a10],a15
.L244:
	st.w	[a10]4,d8
.L245:
	movh.a	a4,#@his(.1.str)
	lea	a4,[a4]@los(.1.str)
	call	rt_kprintf
.L189:
	j	.L11
.L10:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   178              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   179              else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   180              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   181                  dev->flag |= RT_DEVICE_FLAG_ACTIVATED;
	ld.hu	d15,[a15]22
.L246:
	or	d15,#16
	st.h	[a15]22,d15
.L11:
.L9:
.L8:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   182              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   183          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   184      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   185  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   186      return result;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   187  }
	mov	d2,d8
	ret
.L149:
	
__rt_device_init_function_end:
	.size	rt_device_init,__rt_device_init_function_end-rt_device_init
.L103:
	; End of function
	
	.sdecl	'.text.device.rt_device_open',code,cluster('rt_device_open')
	.sect	'.text.device.rt_device_open'
	.align	2
	
	.global	rt_device_open

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   188  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   189  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   190   * This function will open a device
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   191   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   192   * @param dev the pointer of device driver structure
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   193   * @param oflag the flags for device open
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   194   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   195   * @return the result
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   196   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   197  rt_err_t rt_device_open(rt_device_t dev, rt_uint16_t oflag)
; Function rt_device_open
.L57:
rt_device_open:	.type	func
	mov.aa	a15,a4
.L193:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   198  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   199      rt_err_t result = RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   200  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   201      RT_ASSERT(dev != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   202      RT_ASSERT(rt_object_get_type(&dev->parent) == RT_Object_Class_Device);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   203  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   204      /* if device is not initialized, initialize it. */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   205      if (!(dev->flag & RT_DEVICE_FLAG_ACTIVATED))
	mov	d8,d4
	ld.hu	d0,[a15]22
.L194:
	mov	d9,#0
	sub.a	a10,#8
.L191:
	jnz.t	d0:4,.L13
.L251:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   206      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   207          if (device_init != RT_NULL)
	ld.a	a2,[a15]36
.L252:
	jz.a	a2,.L14
.L253:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   208          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   209              result = device_init(dev);
	calli	a2
.L192:
	mov	d9,d2
.L196:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   210              if (result != RT_EOK)
	jeq	d9,#0,.L15
.L254:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   211              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   212                  rt_kprintf("To initialize device:%s failed. The error code is %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   213                             dev->parent.name, result);
	st.a	[a10],a15
.L255:
	st.w	[a10]4,d9
.L256:
	movh.a	a4,#@his(.1.str)
	lea	a4,[a4]@los(.1.str)
	call	rt_kprintf
.L195:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   214  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   215                  return result;
	j	.L16
.L15:
.L14:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   216              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   217          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   218  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   219          dev->flag |= RT_DEVICE_FLAG_ACTIVATED;
	ld.hu	d15,[a15]22
.L257:
	or	d15,#16
	st.h	[a15]22,d15
.L13:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   220      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   221  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   222      /* device is a stand alone device and opened */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   223      if ((dev->flag & RT_DEVICE_FLAG_STANDALONE) &&
	ld.hu	d15,[a15]22
.L258:
	jz.t	d15:3,.L17
.L259:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   224          (dev->open_flag & RT_DEVICE_OFLAG_OPEN))
	ld.hu	d15,[a15]24
.L260:
	jz.t	d15:3,.L18
.L261:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   225      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   226          return -RT_EBUSY;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   227      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   228  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   229      /* call device_open interface */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   230      if (device_open != RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   231      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   232          result = device_open(dev, oflag);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   233      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   234      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   235      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   236          /* set open flag */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   237          dev->open_flag = (oflag & RT_DEVICE_OFLAG_MASK);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   238      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   239  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   240      /* set open flag */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   241      if (result == RT_EOK || result == -RT_ENOSYS)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   242      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   243          dev->open_flag |= RT_DEVICE_OFLAG_OPEN;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   244  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   245          dev->ref_count++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   246          /* don't let bad things happen silently. If you are bitten by this assert,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   247           * please set the ref_count to a bigger type. */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   248          RT_ASSERT(dev->ref_count != 0);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   249      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   250  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   251      return result;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   252  }
	mov	d2,#-7
	ret
.L18:
.L17:
	ld.a	a2,[a15]40
.L262:
	jz.a	a2,.L20
.L263:
	mov.aa	a4,a15
.L198:
	mov	d4,d8
	calli	a2
.L197:
	mov	d9,d2
	j	.L21
.L20:
	mov	d0,#3855
.L264:
	and	d8,d0
	st.h	[a15]24,d8
.L21:
	jeq	d9,#0,.L22
.L265:
	jne	d9,#-6,.L23
.L22:
	ld.hu	d15,[a15]24
.L266:
	or	d15,#8
	st.h	[a15]24,d15
.L267:
	ld.bu	d15,[a15]26
.L268:
	add	d15,#1
	st.b	[a15]26,d15
.L23:
.L16:
	mov	d2,d9
	ret
.L152:
	
__rt_device_open_function_end:
	.size	rt_device_open,__rt_device_open_function_end-rt_device_open
.L108:
	; End of function
	
	.sdecl	'.text.device.rt_device_close',code,cluster('rt_device_close')
	.sect	'.text.device.rt_device_close'
	.align	2
	
	.global	rt_device_close

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   253  RTM_EXPORT(rt_device_open);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   254  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   255  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   256   * This function will close a device
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   257   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   258   * @param dev the pointer of device driver structure
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   259   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   260   * @return the result
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   261   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   262  rt_err_t rt_device_close(rt_device_t dev)
; Function rt_device_close
.L59:
rt_device_close:	.type	func
	mov.aa	a15,a4
.L199:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   263  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   264      rt_err_t result = RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   265  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   266      RT_ASSERT(dev != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   267      RT_ASSERT(rt_object_get_type(&dev->parent) == RT_Object_Class_Device);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   268  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   269      if (dev->ref_count == 0)
	ld.bu	d15,[a15]26
.L273:
	mov	d2,#0
.L200:
	jne	d15,#0,.L25
.L274:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   270          return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   271  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   272      dev->ref_count--;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   273  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   274      if (dev->ref_count != 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   275          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   276  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   277      /* call device_close interface */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   278      if (device_close != RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   279      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   280          result = device_close(dev);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   281      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   282  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   283      /* set open flag */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   284      if (result == RT_EOK || result == -RT_ENOSYS)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   285          dev->open_flag = RT_DEVICE_OFLAG_CLOSE;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   286  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   287      return result;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   288  }
	mov	d2,#-1
	ret
.L25:
	add	d15,#-1
	st.b	[a15]26,d15
.L275:
	jeq	d15,#0,.L27
.L276:
	ret
.L27:
	ld.a	a2,[a15]44
.L277:
	jz.a	a2,.L29
.L278:
	calli	a2
.L29:
	jeq	d2,#0,.L30
.L279:
	jne	d2,#-6,.L31
.L30:
	st.h	[a15]24,d15
.L31:
	ret
.L156:
	
__rt_device_close_function_end:
	.size	rt_device_close,__rt_device_close_function_end-rt_device_close
.L113:
	; End of function
	
	.sdecl	'.text.device.rt_device_read',code,cluster('rt_device_read')
	.sect	'.text.device.rt_device_read'
	.align	2
	
	.global	rt_device_read

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   289  RTM_EXPORT(rt_device_close);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   290  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   291  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   292   * This function will read some data from a device.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   293   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   294   * @param dev the pointer of device driver structure
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   295   * @param pos the position of reading
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   296   * @param buffer the data buffer to save read data
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   297   * @param size the size of buffer
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   298   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   299   * @return the actually read size on successful, otherwise negative returned.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   300   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   301   * @note since 0.4.0, the unit of size/pos is a block for block device.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   302   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   303  rt_size_t rt_device_read(rt_device_t dev,
; Function rt_device_read
.L61:
rt_device_read:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   304                           rt_off_t    pos,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   305                           void       *buffer,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   306                           rt_size_t   size)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   307  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   308      RT_ASSERT(dev != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   309      RT_ASSERT(rt_object_get_type(&dev->parent) == RT_Object_Class_Device);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   310  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   311      if (dev->ref_count == 0)
	ld.bu	d15,[a4]26
.L284:
	jne	d15,#0,.L33
.L285:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   312      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   313          rt_set_errno(-RT_ERROR);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   314          return 0;
	mov	d4,#-1
	j	.L34
.L33:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   315      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   316  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   317      /* call device_read interface */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   318      if (device_read != RT_NULL)
	ld.a	a15,[a4]48
.L286:
	jz.a	a15,.L35
.L287:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   319      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   320          return device_read(dev, pos, buffer, size);
	ji	a15
.L35:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   321      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   322  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   323      /* set error code */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   324      rt_set_errno(-RT_ENOSYS);
	mov	d4,#-6

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   325  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   326      return 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   327  }
.L34:
	call	rt_set_errno
.L201:
	mov	d2,#0
	ret
.L160:
	
__rt_device_read_function_end:
	.size	rt_device_read,__rt_device_read_function_end-rt_device_read
.L118:
	; End of function
	
	.sdecl	'.text.device.rt_device_write',code,cluster('rt_device_write')
	.sect	'.text.device.rt_device_write'
	.align	2
	
	.global	rt_device_write

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   328  RTM_EXPORT(rt_device_read);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   329  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   330  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   331   * This function will write some data to a device.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   332   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   333   * @param dev the pointer of device driver structure
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   334   * @param pos the position of written
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   335   * @param buffer the data buffer to be written to device
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   336   * @param size the size of buffer
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   337   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   338   * @return the actually written size on successful, otherwise negative returned.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   339   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   340   * @note since 0.4.0, the unit of size/pos is a block for block device.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   341   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   342  rt_size_t rt_device_write(rt_device_t dev,
; Function rt_device_write
.L63:
rt_device_write:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   343                            rt_off_t    pos,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   344                            const void *buffer,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   345                            rt_size_t   size)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   346  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   347      RT_ASSERT(dev != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   348      RT_ASSERT(rt_object_get_type(&dev->parent) == RT_Object_Class_Device);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   349  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   350      if (dev->ref_count == 0)
	ld.bu	d15,[a4]26
.L292:
	jne	d15,#0,.L38
.L293:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   351      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   352          rt_set_errno(-RT_ERROR);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   353          return 0;
	mov	d4,#-1
	j	.L39
.L38:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   354      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   355  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   356      /* call device_write interface */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   357      if (device_write != RT_NULL)
	ld.a	a15,[a4]52
.L294:
	jz.a	a15,.L40
.L295:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   358      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   359          return device_write(dev, pos, buffer, size);
	ji	a15
.L40:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   360      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   361  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   362      /* set error code */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   363      rt_set_errno(-RT_ENOSYS);
	mov	d4,#-6

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   364  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   365      return 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   366  }
.L39:
	call	rt_set_errno
.L202:
	mov	d2,#0
	ret
.L166:
	
__rt_device_write_function_end:
	.size	rt_device_write,__rt_device_write_function_end-rt_device_write
.L123:
	; End of function
	
	.sdecl	'.text.device.rt_device_control',code,cluster('rt_device_control')
	.sect	'.text.device.rt_device_control'
	.align	2
	
	.global	rt_device_control

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   367  RTM_EXPORT(rt_device_write);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   368  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   369  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   370   * This function will perform a variety of control functions on devices.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   371   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   372   * @param dev the pointer of device driver structure
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   373   * @param cmd the command sent to device
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   374   * @param arg the argument of command
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   375   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   376   * @return the result
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   377   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   378  rt_err_t rt_device_control(rt_device_t dev, int cmd, void *arg)
; Function rt_device_control
.L65:
rt_device_control:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   379  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   380      RT_ASSERT(dev != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   381      RT_ASSERT(rt_object_get_type(&dev->parent) == RT_Object_Class_Device);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   382  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   383      /* call device_write interface */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   384      if (device_control != RT_NULL)
	ld.a	a15,[a4]56
.L300:
	jz.a	a15,.L43
.L301:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   385      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   386          return device_control(dev, cmd, arg);
	ji	a15
.L43:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   387      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   388  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   389      return -RT_ENOSYS;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   390  }
	mov	d2,#-6
	ret
.L172:
	
__rt_device_control_function_end:
	.size	rt_device_control,__rt_device_control_function_end-rt_device_control
.L128:
	; End of function
	
	.sdecl	'.text.device.rt_device_set_rx_indicate',code,cluster('rt_device_set_rx_indicate')
	.sect	'.text.device.rt_device_set_rx_indicate'
	.align	2
	
	.global	rt_device_set_rx_indicate

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   391  RTM_EXPORT(rt_device_control);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   392  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   393  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   394   * This function will set the reception indication callback function. This callback function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   395   * is invoked when this device receives data.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   396   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   397   * @param dev the pointer of device driver structure
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   398   * @param rx_ind the indication callback function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   399   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   400   * @return RT_EOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   401   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   402  rt_err_t
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   403  rt_device_set_rx_indicate(rt_device_t dev,
; Function rt_device_set_rx_indicate
.L67:
rt_device_set_rx_indicate:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   404                            rt_err_t (*rx_ind)(rt_device_t dev, rt_size_t size))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   405  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   406      RT_ASSERT(dev != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   407      RT_ASSERT(rt_object_get_type(&dev->parent) == RT_Object_Class_Device);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   408  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   409      dev->rx_indicate = rx_ind;
	st.a	[a4]28,a5
.L229:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   410  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   411      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   412  }
	mov	d2,#0
	ret
.L141:
	
__rt_device_set_rx_indicate_function_end:
	.size	rt_device_set_rx_indicate,__rt_device_set_rx_indicate_function_end-rt_device_set_rx_indicate
.L93:
	; End of function
	
	.sdecl	'.text.device.rt_device_set_tx_complete',code,cluster('rt_device_set_tx_complete')
	.sect	'.text.device.rt_device_set_tx_complete'
	.align	2
	
	.global	rt_device_set_tx_complete

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   413  RTM_EXPORT(rt_device_set_rx_indicate);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   414  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   415  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   416   * This function will set the indication callback function when device has
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   417   * written data to physical hardware.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   418   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   419   * @param dev the pointer of device driver structure
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   420   * @param tx_done the indication callback function
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   421   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   422   * @return RT_EOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   423   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   424  rt_err_t
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   425  rt_device_set_tx_complete(rt_device_t dev,
; Function rt_device_set_tx_complete
.L69:
rt_device_set_tx_complete:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   426                            rt_err_t (*tx_done)(rt_device_t dev, void *buffer))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   427  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   428      RT_ASSERT(dev != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   429      RT_ASSERT(rt_object_get_type(&dev->parent) == RT_Object_Class_Device);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   430  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   431      dev->tx_complete = tx_done;
	st.a	[a4]32,a5
.L234:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   432  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   433      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   434  }
	mov	d2,#0
	ret
.L145:
	
__rt_device_set_tx_complete_function_end:
	.size	rt_device_set_tx_complete,__rt_device_set_tx_complete_function_end-rt_device_set_tx_complete
.L98:
	; End of function
	
	.sdecl	'.rodata.device..1.str',data,rom
	.sect	'.rodata.device..1.str'
.1.str:	.type	object
	.size	.1.str,54
	.byte	84,111,32,105
	.byte	110,105,116,105
	.byte	97,108,105,122
	.byte	101,32,100,101
	.byte	118,105,99,101
	.byte	58,37,115,32
	.byte	102,97,105,108
	.byte	101,100,46,32
	.byte	84,104,101,32
	.byte	101,114,114,111
	.byte	114,32,99,111
	.byte	100,101,32,105
	.byte	115,32,37,100
	.byte	10
	.space	1
	.calls	'rt_device_register','rt_device_find'
	.calls	'rt_device_register','rt_object_init'
	.calls	'rt_device_unregister','rt_object_detach'
	.calls	'rt_device_find','rt_object_find'
	.calls	'rt_device_init','__INDIRECT__'
	.calls	'rt_device_init','rt_kprintf'
	.calls	'rt_device_open','__INDIRECT__'
	.calls	'rt_device_open','rt_kprintf'
	.calls	'rt_device_close','__INDIRECT__'
	.calls	'rt_device_read','rt_set_errno'
	.calls	'rt_device_read','__INDIRECT__'
	.calls	'rt_device_write','rt_set_errno'
	.calls	'rt_device_write','__INDIRECT__'
	.calls	'rt_device_control','__INDIRECT__'
	.calls	'rt_device_register','',0
	.calls	'rt_device_unregister','',0
	.calls	'rt_device_find','',0
	.calls	'rt_device_init','',8
	.calls	'rt_device_open','',8
	.calls	'rt_device_close','',0
	.calls	'rt_device_read','',0
	.calls	'rt_device_write','',0
	.calls	'rt_device_control','',0
	.calls	'rt_device_set_rx_indicate','',0
	.extern	rt_object_init
	.extern	rt_object_detach
	.extern	rt_object_find
	.extern	rt_kprintf
	.extern	rt_set_errno
	.extern	__INDIRECT__
	.calls	'rt_device_set_tx_complete','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L71:
	.word	2677
	.half	3
	.word	.L72
	.byte	4
.L70:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L73
.L174:
	.byte	2
	.byte	'int',0,4,5,3
	.word	170
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	177
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.word	219
	.byte	7
	.word	219
	.byte	8
	.byte	'__cmpswapw',0
	.word	235
	.byte	1,1,1,1,9
	.byte	'p',0
	.word	240
	.byte	9
	.byte	'value',0
	.word	219
	.byte	9
	.byte	'compare',0
	.word	219
	.byte	0,2
	.byte	'char',0,1,6,10,8
	.word	297
	.byte	11,7,0,2
	.byte	'unsigned char',0,1,8,7
	.word	.L203-.L71
.L203:
	.byte	12
	.byte	'rt_list_node',0,2,229,2,8,8,13
	.byte	'next',0
	.word	331
	.byte	4,2,35,0,13
	.byte	'prev',0
	.word	331
	.byte	4,2,35,4,0,12
	.byte	'rt_object',0,2,131,3,8,20,13
	.byte	'name',0
	.word	305
	.byte	8,2,35,0,13
	.byte	'type',0
	.word	314
	.byte	1,2,35,8,13
	.byte	'flag',0
	.word	314
	.byte	1,2,35,9,13
	.byte	'list',0
	.word	336
	.byte	8,2,35,12,0,7
	.word	384
	.byte	14
	.byte	'rt_object_class_type',0,2,161,3,6,1,15
	.byte	'RT_Object_Class_Null',0,0,15
	.byte	'RT_Object_Class_Thread',0,1,15
	.byte	'RT_Object_Class_Semaphore',0,2,15
	.byte	'RT_Object_Class_Mutex',0,3,15
	.byte	'RT_Object_Class_Event',0,4,15
	.byte	'RT_Object_Class_MailBox',0,5,15
	.byte	'RT_Object_Class_MessageQueue',0,6,15
	.byte	'RT_Object_Class_MemHeap',0,7,15
	.byte	'RT_Object_Class_MemPool',0,8,15
	.byte	'RT_Object_Class_Device',0,9,15
	.byte	'RT_Object_Class_Timer',0,10,15
	.byte	'RT_Object_Class_Module',0,11,15
	.byte	'RT_Object_Class_Unknown',0,12,15
	.byte	'RT_Object_Class_Static',0,128,1,0,3
	.word	297
.L131:
	.byte	7
	.word	849
	.byte	16
	.byte	'rt_object_init',0,1,47,6,1,1,1,1,17
	.byte	'object',0,1,47,47
	.word	457
	.byte	17
	.byte	'type',0,1,48,47
	.word	462
	.byte	17
	.byte	'name',0,1,49,47
	.word	854
	.byte	0,18
	.byte	'rt_object_t',0,2,142,3,27
	.word	457
	.byte	16
	.byte	'rt_object_detach',0,1,50,6,1,1,1,1,17
	.byte	'object',0,1,50,35
	.word	924
	.byte	0,7
	.word	384
	.byte	19
	.byte	'rt_object_find',0,1,56,13
	.word	924
	.byte	1,1,1,1,17
	.byte	'name',0,1,56,40
	.word	854
	.byte	17
	.byte	'type',0,1,56,57
	.word	314
	.byte	0,14
	.byte	'rt_device_class_type',0,2,249,6,6,1,15
	.byte	'RT_Device_Class_Char',0,0,15
	.byte	'RT_Device_Class_Block',0,1,15
	.byte	'RT_Device_Class_NetIf',0,2,15
	.byte	'RT_Device_Class_MTD',0,3,15
	.byte	'RT_Device_Class_CAN',0,4,15
	.byte	'RT_Device_Class_RTC',0,5,15
	.byte	'RT_Device_Class_Sound',0,6,15
	.byte	'RT_Device_Class_Graphic',0,7,15
	.byte	'RT_Device_Class_I2CBUS',0,8,15
	.byte	'RT_Device_Class_USBDevice',0,9,15
	.byte	'RT_Device_Class_USBHost',0,10,15
	.byte	'RT_Device_Class_SPIBUS',0,11,15
	.byte	'RT_Device_Class_SPIDevice',0,12,15
	.byte	'RT_Device_Class_SDIO',0,13,15
	.byte	'RT_Device_Class_PM',0,14,15
	.byte	'RT_Device_Class_Pipe',0,15,15
	.byte	'RT_Device_Class_Portal',0,16,15
	.byte	'RT_Device_Class_Timer',0,17,15
	.byte	'RT_Device_Class_Miscellaneous',0,18,15
	.byte	'RT_Device_Class_Sensor',0,19,15
	.byte	'RT_Device_Class_Touch',0,20,15
	.byte	'RT_Device_Class_PHY',0,21,15
	.byte	'RT_Device_Class_Unknown',0,22,0
.L137:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L133:
	.byte	2
	.byte	'long int',0,4,5,7
	.word	.L204-.L71
.L159:
	.byte	2
	.byte	'unsigned long int',0,4,7,20
	.word	1659
	.byte	1,1,5
	.word	1671
	.byte	5
	.word	1676
	.byte	0
.L143:
	.byte	7
	.word	1697
	.byte	21
	.byte	'void',0
.L163:
	.byte	7
	.word	1720
	.byte	20
	.word	1659
	.byte	1,1,5
	.word	1671
	.byte	5
	.word	1726
	.byte	0
.L147:
	.byte	7
	.word	1731
	.byte	20
	.word	1659
	.byte	1,1,5
	.word	1671
	.byte	0,7
	.word	1754
	.byte	20
	.word	1659
	.byte	1,1,5
	.word	1671
	.byte	5
	.word	1637
	.byte	0,7
	.word	1772
	.byte	20
	.word	1676
	.byte	1,1,5
	.word	1671
	.byte	5
	.word	1659
	.byte	5
	.word	1726
	.byte	5
	.word	1676
	.byte	0,7
	.word	1795
	.byte	3
	.word	1720
.L169:
	.byte	7
	.word	1828
	.byte	20
	.word	1676
	.byte	1,1,5
	.word	1671
	.byte	5
	.word	1659
	.byte	5
	.word	1833
	.byte	5
	.word	1676
	.byte	0,7
	.word	1838
	.byte	20
	.word	1659
	.byte	1,1,5
	.word	1671
	.byte	5
	.word	170
	.byte	5
	.word	1726
	.byte	0,7
	.word	1871
.L204:
	.byte	12
	.byte	'rt_device',0,2,235,7,8,64,13
	.byte	'parent',0
	.word	384
	.byte	20,2,35,0,13
	.byte	'type',0
	.word	1045
	.byte	1,2,35,20,13
	.byte	'flag',0
	.word	1637
	.byte	2,2,35,22,13
	.byte	'open_flag',0
	.word	1637
	.byte	2,2,35,24,13
	.byte	'ref_count',0
	.word	314
	.byte	1,2,35,26,13
	.byte	'device_id',0
	.word	314
	.byte	1,2,35,27,13
	.byte	'rx_indicate',0
	.word	1715
	.byte	4,2,35,28,13
	.byte	'tx_complete',0
	.word	1749
	.byte	4,2,35,32,13
	.byte	'init',0
	.word	1767
	.byte	4,2,35,36,13
	.byte	'open',0
	.word	1790
	.byte	4,2,35,40,13
	.byte	'close',0
	.word	1767
	.byte	4,2,35,44,13
	.byte	'read',0
	.word	1823
	.byte	4,2,35,48,13
	.byte	'write',0
	.word	1866
	.byte	4,2,35,52,13
	.byte	'control',0
	.word	1894
	.byte	4,2,35,56,13
	.byte	'user_data',0
	.word	1726
	.byte	4,2,35,60,0,7
	.word	1899
.L129:
	.byte	18
	.byte	'rt_device_t',0,2,204,7,27
	.word	1671
	.byte	16
	.byte	'rt_kprintf',0,1,132,4,6,1,1,1,1,17
	.byte	'fmt',0,1,132,4,29
	.word	854
	.byte	22,1,132,4,34,0,16
	.byte	'rt_set_errno',0,1,148,4,6,1,1,1,1,17
	.byte	'no',0,1,148,4,28
	.word	1659
	.byte	0,23
	.byte	'__INDIRECT__',0,3,1,1,1,1,1,18
	.byte	'__size_t',0,3,1,1
	.word	219
	.byte	24,1,7
	.word	2304
	.byte	18
	.byte	'__codeptr',0,3,1,1
	.word	2306
	.byte	18
	.byte	'__intptr_t',0,3,1,1
	.word	170
	.byte	18
	.byte	'__uintptr_t',0,3,1,1
	.word	219
	.byte	18
	.byte	'rt_uint8_t',0,2,69,41
	.word	314
	.byte	18
	.byte	'rt_uint16_t',0,2,70,41
	.word	1637
	.byte	18
	.byte	'rt_uint32_t',0,2,71,41
	.word	219
	.byte	18
	.byte	'rt_base_t',0,2,83,41
	.word	1659
	.byte	18
	.byte	'rt_ubase_t',0,2,84,41
	.word	1676
	.byte	18
	.byte	'rt_err_t',0,2,86,41
	.word	1659
	.byte	18
	.byte	'rt_tick_t',0,2,88,41
	.word	219
	.byte	18
	.byte	'rt_size_t',0,2,90,41
	.word	1676
	.byte	18
	.byte	'rt_off_t',0,2,92,41
	.word	1659
	.byte	18
	.byte	'rt_list_t',0,2,234,2,29
	.word	336
	.byte	7
	.word	.L205-.L71
.L205:
	.byte	12
	.byte	'rt_slist_node',0,2,239,2,8,4,13
	.byte	'next',0
	.word	2553
	.byte	4,2,35,0,0,18
	.byte	'rt_slist_t',0,2,243,2,30
	.word	2558
	.byte	18
	.byte	'uint16_t',0,4,246,1,41
	.word	1637
	.byte	18
	.byte	'uint32_t',0,4,254,1,41
	.word	219
	.byte	18
	.byte	'time_t',0,5,44,25
	.word	1676
	.byte	18
	.byte	'fd_mask',0,6,39,17
	.word	1659
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L72:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,46,1,3,8,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,9,5,0,3,8,73,19,0,0,10,1,1,11,15,73,19,0,0,11,33,0,47,15,0,0,12,19,1,3,8,58,15,59,15,57
	.byte	15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,4,1,3,8,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13
	.byte	0,0,16,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,17,5,0,3,8,58,15,59,15,57,15,73,19,0,0,18
	.byte	22,0,3,8,58,15,59,15,57,15,73,19,0,0,19,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,20
	.byte	21,1,73,19,54,15,39,12,0,0,21,59,0,3,8,0,0,22,24,0,58,15,59,15,57,15,0,0,23,46,0,3,8,58,15,59,15,57,15
	.byte	54,15,63,12,60,12,0,0,24,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L73:
	.word	.L207-.L206
.L206:
	.half	3
	.word	.L209-.L208
.L208:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc',0
	.byte	0
	.byte	'rtthread.h',0,1,0,0
	.byte	'rtdef.h',0,1,0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0
	.byte	'stdint.h',0,2,0,0
	.byte	'time.h',0,2,0,0
	.byte	'libc_fdset.h',0,3,0,0,0
.L209:
.L207:
	.sdecl	'.debug_info',debug,cluster('rt_device_find')
	.sect	'.debug_info'
.L74:
	.word	241
	.half	3
	.word	.L75
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L77,.L76
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_find',0,1,100,13
	.word	.L129
	.byte	1,1,1
	.word	.L53,.L130,.L52
	.byte	4
	.byte	'name',0,1,100,40
	.word	.L131,.L132
	.byte	5
	.word	.L53,.L130
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_find')
	.sect	'.debug_abbrev'
.L75:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_find')
	.sect	'.debug_line'
.L76:
	.word	.L211-.L210
.L210:
	.half	3
	.word	.L213-.L212
.L212:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L213:
	.byte	5,46,7,0,5,2
	.word	.L53
	.byte	3,229,0,1,5,1,9
	.half	.L78-.L53
	.byte	3,1,0,1,1
.L211:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_find')
	.sect	'.debug_ranges'
.L77:
	.word	-1,.L53,0,.L78-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('rt_device_register')
	.sect	'.debug_info'
.L79:
	.word	279
	.half	3
	.word	.L80
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L82,.L81
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_register',0,1,50,10
	.word	.L133
	.byte	1,1,1
	.word	.L49,.L134,.L48
	.byte	4
	.byte	'dev',0,1,50,41
	.word	.L129,.L135
	.byte	4
	.byte	'name',0,1,51,41
	.word	.L131,.L136
	.byte	4
	.byte	'flags',0,1,52,41
	.word	.L137,.L138
	.byte	5
	.word	.L49,.L134
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_register')
	.sect	'.debug_abbrev'
.L80:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_register')
	.sect	'.debug_line'
.L81:
	.word	.L215-.L214
.L214:
	.half	3
	.word	.L217-.L216
.L216:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L217:
	.byte	5,10,7,0,5,2
	.word	.L49
	.byte	3,49,1,5,5,9
	.half	.L180-.L49
	.byte	3,4,1,5,24,7,9
	.half	.L181-.L180
	.byte	3,3,1,5,5,9
	.half	.L178-.L181
	.byte	1,5,16,7,9
	.half	.L2-.L178
	.byte	3,1,1,5,1,3,13,1,5,36,7,9
	.half	.L3-.L2
	.byte	3,117,1,5,60,1,5,15,9
	.half	.L183-.L3
	.byte	3,1,1,5,22,9
	.half	.L218-.L183
	.byte	3,1,1,5,20,1,9
	.half	.L219-.L218
	.byte	3,1,1,5,1,9
	.half	.L220-.L219
	.byte	3,8,1,7,9
	.half	.L83-.L220
	.byte	0,1,1
.L215:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_register')
	.sect	'.debug_ranges'
.L82:
	.word	-1,.L49,0,.L83-.L49,0,0
	.sdecl	'.debug_info',debug,cluster('rt_device_unregister')
	.sect	'.debug_info'
.L84:
	.word	246
	.half	3
	.word	.L85
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L87,.L86
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_unregister',0,1,81,10
	.word	.L133
	.byte	1,1,1
	.word	.L51,.L139,.L50
	.byte	4
	.byte	'dev',0,1,81,43
	.word	.L129,.L140
	.byte	5
	.word	.L51,.L139
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_unregister')
	.sect	'.debug_abbrev'
.L85:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_unregister')
	.sect	'.debug_line'
.L86:
	.word	.L222-.L221
.L221:
	.half	3
	.word	.L224-.L223
.L223:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L224:
	.byte	5,27,7,0,5,2
	.word	.L51
	.byte	3,214,0,1,5,12,9
	.half	.L185-.L51
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L88-.L185
	.byte	0,1,1
.L222:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_unregister')
	.sect	'.debug_ranges'
.L87:
	.word	-1,.L51,0,.L88-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('rt_device_set_rx_indicate')
	.sect	'.debug_info'
.L89:
	.word	273
	.half	3
	.word	.L90
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L92,.L91
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_set_rx_indicate',0,1,147,3,1
	.word	.L133
	.byte	1,1,1
	.word	.L67,.L141,.L66
	.byte	4
	.byte	'dev',0,1,147,3,39
	.word	.L129,.L142
	.byte	4
	.byte	'rx_ind',0,1,148,3,38
	.word	.L143,.L144
	.byte	5
	.word	.L67,.L141
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_set_rx_indicate')
	.sect	'.debug_abbrev'
.L90:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_set_rx_indicate')
	.sect	'.debug_line'
.L91:
	.word	.L226-.L225
.L225:
	.half	3
	.word	.L228-.L227
.L227:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L228:
	.byte	5,22,7,0,5,2
	.word	.L67
	.byte	3,152,3,1,5,12,9
	.half	.L229-.L67
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L93-.L229
	.byte	0,1,1
.L226:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_set_rx_indicate')
	.sect	'.debug_ranges'
.L92:
	.word	-1,.L67,0,.L93-.L67,0,0
	.sdecl	'.debug_info',debug,cluster('rt_device_set_tx_complete')
	.sect	'.debug_info'
.L94:
	.word	274
	.half	3
	.word	.L95
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L97,.L96
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_set_tx_complete',0,1,169,3,1
	.word	.L133
	.byte	1,1,1
	.word	.L69,.L145,.L68
	.byte	4
	.byte	'dev',0,1,169,3,39
	.word	.L129,.L146
	.byte	4
	.byte	'tx_done',0,1,170,3,38
	.word	.L147,.L148
	.byte	5
	.word	.L69,.L145
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_set_tx_complete')
	.sect	'.debug_abbrev'
.L95:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_set_tx_complete')
	.sect	'.debug_line'
.L96:
	.word	.L231-.L230
.L230:
	.half	3
	.word	.L233-.L232
.L232:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L233:
	.byte	5,22,7,0,5,2
	.word	.L69
	.byte	3,174,3,1,5,12,9
	.half	.L234-.L69
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L98-.L234
	.byte	0,1,1
.L231:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_set_tx_complete')
	.sect	'.debug_ranges'
.L97:
	.word	-1,.L69,0,.L98-.L69,0,0
	.sdecl	'.debug_info',debug,cluster('rt_device_init')
	.sect	'.debug_info'
.L99:
	.word	263
	.half	3
	.word	.L100
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L102,.L101
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_init',0,1,162,1,10
	.word	.L133
	.byte	1,1,1
	.word	.L55,.L149,.L54
	.byte	4
	.byte	'dev',0,1,162,1,37
	.word	.L129,.L150
	.byte	5
	.word	.L55,.L149
	.byte	6
	.byte	'result',0,1,164,1,14
	.word	.L133,.L151
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_init')
	.sect	'.debug_abbrev'
.L100:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_init')
	.sect	'.debug_line'
.L101:
	.word	.L236-.L235
.L235:
	.half	3
	.word	.L238-.L237
.L237:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L238:
	.byte	5,10,7,0,5,2
	.word	.L55
	.byte	3,161,1,1,5,9,9
	.half	.L188-.L55
	.byte	3,7,1,5,21,9
	.half	.L239-.L188
	.byte	3,123,1,5,10,3,126,1,5,5,9
	.half	.L186-.L239
	.byte	3,7,1,5,18,7,9
	.half	.L240-.L186
	.byte	3,2,1,5,14,9
	.half	.L241-.L240
	.byte	1,5,34,7,9
	.half	.L242-.L241
	.byte	3,2,1,5,20,9
	.half	.L187-.L242
	.byte	1,5,13,9
	.half	.L190-.L187
	.byte	3,1,1,5,31,7,9
	.half	.L243-.L190
	.byte	3,3,1,5,46,9
	.half	.L244-.L243
	.byte	1,5,28,9
	.half	.L245-.L244
	.byte	3,127,1,5,53,9
	.half	.L189-.L245
	.byte	3,1,1,5,20,9
	.half	.L10-.L189
	.byte	3,4,1,5,27,9
	.half	.L246-.L10
	.byte	1,5,5,9
	.half	.L8-.L246
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L103-.L8
	.byte	0,1,1
.L236:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_init')
	.sect	'.debug_ranges'
.L102:
	.word	-1,.L55,0,.L103-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('rt_device_open')
	.sect	'.debug_info'
.L104:
	.word	282
	.half	3
	.word	.L105
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L107,.L106
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_open',0,1,197,1,10
	.word	.L133
	.byte	1,1,1
	.word	.L57,.L152,.L56
	.byte	4
	.byte	'dev',0,1,197,1,37
	.word	.L129,.L153
	.byte	4
	.byte	'oflag',0,1,197,1,54
	.word	.L137,.L154
	.byte	5
	.word	.L57,.L152
	.byte	6
	.byte	'result',0,1,199,1,14
	.word	.L133,.L155
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_open')
	.sect	'.debug_abbrev'
.L105:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_open')
	.sect	'.debug_line'
.L106:
	.word	.L248-.L247
.L247:
	.half	3
	.word	.L250-.L249
.L249:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L250:
	.byte	5,10,7,0,5,2
	.word	.L57
	.byte	3,196,1,1,5,14,9
	.half	.L193-.L57
	.byte	3,8,1,5,21,9
	.half	.L194-.L193
	.byte	3,122,1,5,10,3,126,1,9
	.half	.L191-.L194
	.byte	3,8,1,5,13,7,9
	.half	.L251-.L191
	.byte	3,2,1,5,9,9
	.half	.L252-.L251
	.byte	1,5,34,7,9
	.half	.L253-.L252
	.byte	3,2,1,5,20,9
	.half	.L192-.L253
	.byte	1,5,13,9
	.half	.L196-.L192
	.byte	3,1,1,5,31,7,9
	.half	.L254-.L196
	.byte	3,3,1,5,46,9
	.half	.L255-.L254
	.byte	1,5,28,9
	.half	.L256-.L255
	.byte	3,127,1,5,17,9
	.half	.L195-.L256
	.byte	3,3,1,5,12,9
	.half	.L14-.L195
	.byte	3,4,1,5,19,9
	.half	.L257-.L14
	.byte	1,5,13,9
	.half	.L13-.L257
	.byte	3,4,1,5,9,9
	.half	.L258-.L13
	.byte	1,5,13,7,9
	.half	.L259-.L258
	.byte	3,1,1,5,25,9
	.half	.L260-.L259
	.byte	1,5,16,7,9
	.half	.L261-.L260
	.byte	3,2,1,5,1,3,26,1,5,9,7,9
	.half	.L17-.L261
	.byte	3,106,1,5,5,9
	.half	.L262-.L17
	.byte	1,5,35,7,9
	.half	.L263-.L262
	.byte	3,2,1,5,16,9
	.half	.L197-.L263
	.byte	1,5,41,1,5,35,9
	.half	.L20-.L197
	.byte	3,5,1,5,33,9
	.half	.L264-.L20
	.byte	1,5,24,1,5,9,9
	.half	.L21-.L264
	.byte	3,4,1,5,36,7,9
	.half	.L265-.L21
	.byte	1,5,12,7,9
	.half	.L22-.L265
	.byte	3,2,1,5,24,9
	.half	.L266-.L22
	.byte	1,5,12,9
	.half	.L267-.L266
	.byte	3,2,1,5,23,9
	.half	.L268-.L267
	.byte	1,5,5,9
	.half	.L16-.L268
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L108-.L16
	.byte	0,1,1
.L248:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_open')
	.sect	'.debug_ranges'
.L107:
	.word	-1,.L57,0,.L108-.L57,0,0
	.sdecl	'.debug_info',debug,cluster('rt_device_close')
	.sect	'.debug_info'
.L109:
	.word	264
	.half	3
	.word	.L110
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L112,.L111
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_close',0,1,134,2,10
	.word	.L133
	.byte	1,1,1
	.word	.L59,.L156,.L58
	.byte	4
	.byte	'dev',0,1,134,2,38
	.word	.L129,.L157
	.byte	5
	.word	.L59,.L156
	.byte	6
	.byte	'result',0,1,136,2,14
	.word	.L133,.L158
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_close')
	.sect	'.debug_abbrev'
.L110:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_close')
	.sect	'.debug_line'
.L111:
	.word	.L270-.L269
.L269:
	.half	3
	.word	.L272-.L271
.L271:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L272:
	.byte	5,10,7,0,5,2
	.word	.L59
	.byte	3,133,2,1,5,12,9
	.half	.L199-.L59
	.byte	3,7,1,5,21,9
	.half	.L273-.L199
	.byte	3,123,1,5,5,9
	.half	.L200-.L273
	.byte	3,5,1,5,16,7,9
	.half	.L274-.L200
	.byte	3,1,1,5,1,3,18,1,5,19,7,9
	.half	.L25-.L274
	.byte	3,112,1,5,5,9
	.half	.L275-.L25
	.byte	3,2,1,5,1,7,9
	.half	.L276-.L275
	.byte	3,14,1,5,9,7,9
	.half	.L27-.L276
	.byte	3,118,1,5,5,9
	.half	.L277-.L27
	.byte	1,5,31,7,9
	.half	.L278-.L277
	.byte	3,2,1,5,9,9
	.half	.L29-.L278
	.byte	3,4,1,5,36,7,9
	.half	.L279-.L29
	.byte	1,5,24,7,9
	.half	.L30-.L279
	.byte	3,1,1,5,1,9
	.half	.L31-.L30
	.byte	3,3,1,7,9
	.half	.L113-.L31
	.byte	0,1,1
.L270:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_close')
	.sect	'.debug_ranges'
.L112:
	.word	-1,.L59,0,.L113-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('rt_device_read')
	.sect	'.debug_info'
.L114:
	.word	297
	.half	3
	.word	.L115
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L117,.L116
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_read',0,1,175,2,11
	.word	.L159
	.byte	1,1,1
	.word	.L61,.L160,.L60
	.byte	4
	.byte	'dev',0,1,175,2,38
	.word	.L129,.L161
	.byte	4
	.byte	'pos',0,1,176,2,38
	.word	.L133,.L162
	.byte	4
	.byte	'buffer',0,1,177,2,38
	.word	.L163,.L164
	.byte	4
	.byte	'size',0,1,178,2,38
	.word	.L159,.L165
	.byte	5
	.word	.L61,.L160
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_read')
	.sect	'.debug_abbrev'
.L115:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_read')
	.sect	'.debug_line'
.L116:
	.word	.L281-.L280
.L280:
	.half	3
	.word	.L283-.L282
.L282:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L283:
	.byte	5,12,7,0,5,2
	.word	.L61
	.byte	3,182,2,1,5,5,9
	.half	.L284-.L61
	.byte	1,5,22,7,9
	.half	.L285-.L284
	.byte	3,2,1,5,9,3,1,1,9
	.half	.L33-.L285
	.byte	3,4,1,5,5,9
	.half	.L286-.L33
	.byte	1,5,46,7,9
	.half	.L287-.L286
	.byte	3,2,1,5,18,7,9
	.half	.L35-.L287
	.byte	3,4,1,5,12,9
	.half	.L201-.L35
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L118-.L201
	.byte	0,1,1
.L281:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_read')
	.sect	'.debug_ranges'
.L117:
	.word	-1,.L61,0,.L118-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('rt_device_write')
	.sect	'.debug_info'
.L119:
	.word	298
	.half	3
	.word	.L120
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L122,.L121
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_write',0,1,214,2,11
	.word	.L159
	.byte	1,1,1
	.word	.L63,.L166,.L62
	.byte	4
	.byte	'dev',0,1,214,2,39
	.word	.L129,.L167
	.byte	4
	.byte	'pos',0,1,215,2,39
	.word	.L133,.L168
	.byte	4
	.byte	'buffer',0,1,216,2,39
	.word	.L169,.L170
	.byte	4
	.byte	'size',0,1,217,2,39
	.word	.L159,.L171
	.byte	5
	.word	.L63,.L166
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_write')
	.sect	'.debug_abbrev'
.L120:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_write')
	.sect	'.debug_line'
.L121:
	.word	.L289-.L288
.L288:
	.half	3
	.word	.L291-.L290
.L290:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L291:
	.byte	5,12,7,0,5,2
	.word	.L63
	.byte	3,221,2,1,5,5,9
	.half	.L292-.L63
	.byte	1,5,22,7,9
	.half	.L293-.L292
	.byte	3,2,1,5,9,3,1,1,9
	.half	.L38-.L293
	.byte	3,4,1,5,5,9
	.half	.L294-.L38
	.byte	1,5,47,7,9
	.half	.L295-.L294
	.byte	3,2,1,5,18,7,9
	.half	.L40-.L295
	.byte	3,4,1,5,12,9
	.half	.L202-.L40
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L123-.L202
	.byte	0,1,1
.L289:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_write')
	.sect	'.debug_ranges'
.L122:
	.word	-1,.L63,0,.L123-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('rt_device_control')
	.sect	'.debug_info'
.L124:
	.word	279
	.half	3
	.word	.L125
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L127,.L126
	.byte	2
	.word	.L70
	.byte	3
	.byte	'rt_device_control',0,1,250,2,10
	.word	.L133
	.byte	1,1,1
	.word	.L65,.L172,.L64
	.byte	4
	.byte	'dev',0,1,250,2,40
	.word	.L129,.L173
	.byte	4
	.byte	'cmd',0,1,250,2,49
	.word	.L174,.L175
	.byte	4
	.byte	'arg',0,1,250,2,60
	.word	.L163,.L176
	.byte	5
	.word	.L65,.L172
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_device_control')
	.sect	'.debug_abbrev'
.L125:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_device_control')
	.sect	'.debug_line'
.L126:
	.word	.L297-.L296
.L296:
	.half	3
	.word	.L299-.L298
.L298:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\device.c',0,0,0,0,0
.L299:
	.byte	5,9,7,0,5,2
	.word	.L65
	.byte	3,255,2,1,5,5,9
	.half	.L300-.L65
	.byte	1,5,41,7,9
	.half	.L301-.L300
	.byte	3,2,1,5,12,7,9
	.half	.L43-.L301
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L128-.L43
	.byte	0,1,1
.L297:
	.sdecl	'.debug_ranges',debug,cluster('rt_device_control')
	.sect	'.debug_ranges'
.L127:
	.word	-1,.L65,0,.L128-.L65,0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_close')
	.sect	'.debug_loc'
.L157:
	.word	-1,.L59,0,.L29-.L59
	.half	1
	.byte	100
	.word	.L199-.L59,.L156-.L59
	.half	1
	.byte	111
	.word	0,0
.L158:
	.word	-1,.L59,.L200-.L59,.L156-.L59
	.half	1
	.byte	82
	.word	0,0
.L58:
	.word	-1,.L59,0,.L156-.L59
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_control')
	.sect	'.debug_loc'
.L176:
	.word	-1,.L65,0,.L172-.L65
	.half	1
	.byte	101
	.word	0,0
.L175:
	.word	-1,.L65,0,.L172-.L65
	.half	1
	.byte	84
	.word	0,0
.L173:
	.word	-1,.L65,0,.L172-.L65
	.half	1
	.byte	100
	.word	0,0
.L64:
	.word	-1,.L65,0,.L172-.L65
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_find')
	.sect	'.debug_loc'
.L132:
	.word	-1,.L53,0,.L130-.L53
	.half	1
	.byte	100
	.word	0,0
.L52:
	.word	-1,.L53,0,.L130-.L53
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_init')
	.sect	'.debug_loc'
.L150:
	.word	-1,.L55,0,.L187-.L55
	.half	1
	.byte	100
	.word	.L188-.L55,.L149-.L55
	.half	1
	.byte	111
	.word	0,0
.L151:
	.word	-1,.L55,.L186-.L55,.L187-.L55
	.half	1
	.byte	88
	.word	.L187-.L55,.L189-.L55
	.half	1
	.byte	82
	.word	.L190-.L55,.L149-.L55
	.half	1
	.byte	88
	.word	.L10-.L55,.L8-.L55
	.half	1
	.byte	82
	.word	0,0
.L54:
	.word	-1,.L55,0,.L186-.L55
	.half	2
	.byte	138,0
	.word	.L186-.L55,.L149-.L55
	.half	2
	.byte	138,8
	.word	.L149-.L55,.L149-.L55
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_open')
	.sect	'.debug_loc'
.L153:
	.word	-1,.L57,0,.L192-.L57
	.half	1
	.byte	100
	.word	.L193-.L57,.L152-.L57
	.half	1
	.byte	111
	.word	.L198-.L57,.L197-.L57
	.half	1
	.byte	100
	.word	0,0
.L154:
	.word	-1,.L57,0,.L192-.L57
	.half	1
	.byte	84
	.word	.L194-.L57,.L21-.L57
	.half	1
	.byte	88
	.word	0,0
.L155:
	.word	-1,.L57,.L191-.L57,.L192-.L57
	.half	1
	.byte	89
	.word	.L192-.L57,.L195-.L57
	.half	1
	.byte	82
	.word	.L196-.L57,.L197-.L57
	.half	1
	.byte	89
	.word	.L197-.L57,.L20-.L57
	.half	1
	.byte	82
	.word	.L20-.L57,.L152-.L57
	.half	1
	.byte	89
	.word	0,0
.L56:
	.word	-1,.L57,0,.L191-.L57
	.half	2
	.byte	138,0
	.word	.L191-.L57,.L18-.L57
	.half	2
	.byte	138,8
	.word	.L18-.L57,.L18-.L57
	.half	2
	.byte	138,0
	.word	.L18-.L57,.L152-.L57
	.half	2
	.byte	138,8
	.word	.L152-.L57,.L152-.L57
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_read')
	.sect	'.debug_loc'
.L164:
	.word	-1,.L61,0,.L201-.L61
	.half	1
	.byte	101
	.word	0,0
.L161:
	.word	-1,.L61,0,.L201-.L61
	.half	1
	.byte	100
	.word	0,0
.L162:
	.word	-1,.L61,0,.L34-.L61
	.half	1
	.byte	84
	.word	0,0
.L60:
	.word	-1,.L61,0,.L160-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L165:
	.word	-1,.L61,0,.L201-.L61
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_register')
	.sect	'.debug_loc'
.L135:
	.word	-1,.L49,0,.L177-.L49
	.half	1
	.byte	100
	.word	.L179-.L49,.L134-.L49
	.half	1
	.byte	111
	.word	.L182-.L49,.L183-.L49
	.half	1
	.byte	100
	.word	0,0
.L138:
	.word	-1,.L49,0,.L178-.L49
	.half	1
	.byte	84
	.word	.L181-.L49,.L134-.L49
	.half	1
	.byte	95
	.word	0,0
.L136:
	.word	-1,.L49,0,.L177-.L49
	.half	1
	.byte	101
	.word	.L180-.L49,.L134-.L49
	.half	1
	.byte	108
	.word	.L177-.L49,.L178-.L49
	.half	1
	.byte	100
	.word	.L184-.L49,.L183-.L49
	.half	1
	.byte	101
	.word	0,0
.L48:
	.word	-1,.L49,0,.L134-.L49
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_set_rx_indicate')
	.sect	'.debug_loc'
.L142:
	.word	-1,.L67,0,.L141-.L67
	.half	1
	.byte	100
	.word	0,0
.L66:
	.word	-1,.L67,0,.L141-.L67
	.half	2
	.byte	138,0
	.word	0,0
.L144:
	.word	-1,.L67,0,.L141-.L67
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_set_tx_complete')
	.sect	'.debug_loc'
.L146:
	.word	-1,.L69,0,.L145-.L69
	.half	1
	.byte	100
	.word	0,0
.L68:
	.word	-1,.L69,0,.L145-.L69
	.half	2
	.byte	138,0
	.word	0,0
.L148:
	.word	-1,.L69,0,.L145-.L69
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_unregister')
	.sect	'.debug_loc'
.L140:
	.word	-1,.L51,0,.L185-.L51
	.half	1
	.byte	100
	.word	0,0
.L50:
	.word	-1,.L51,0,.L139-.L51
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_device_write')
	.sect	'.debug_loc'
.L170:
	.word	-1,.L63,0,.L202-.L63
	.half	1
	.byte	101
	.word	0,0
.L167:
	.word	-1,.L63,0,.L202-.L63
	.half	1
	.byte	100
	.word	0,0
.L168:
	.word	-1,.L63,0,.L39-.L63
	.half	1
	.byte	84
	.word	0,0
.L62:
	.word	-1,.L63,0,.L166-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L171:
	.word	-1,.L63,0,.L202-.L63
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L302:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('rt_device_register')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L49,.L134-.L49
	.sdecl	'.debug_frame',debug,cluster('rt_device_unregister')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L51,.L139-.L51
	.sdecl	'.debug_frame',debug,cluster('rt_device_find')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L53,.L130-.L53
	.sdecl	'.debug_frame',debug,cluster('rt_device_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L302,.L55,.L149-.L55
	.byte	4
	.word	(.L186-.L55)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L149-.L186)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('rt_device_open')
	.sect	'.debug_frame'
	.word	52
	.word	.L302,.L57,.L152-.L57
	.byte	4
	.word	(.L191-.L57)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L18-.L191)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L152-.L18)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('rt_device_close')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L59,.L156-.L59
	.sdecl	'.debug_frame',debug,cluster('rt_device_read')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L61,.L160-.L61
	.sdecl	'.debug_frame',debug,cluster('rt_device_write')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L63,.L166-.L63
	.sdecl	'.debug_frame',debug,cluster('rt_device_control')
	.sect	'.debug_frame'
	.word	12
	.word	.L302,.L65,.L172-.L65
	.sdecl	'.debug_frame',debug,cluster('rt_device_set_rx_indicate')
	.sect	'.debug_frame'
	.word	20
	.word	.L302,.L67,.L141-.L67
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('rt_device_set_tx_complete')
	.sect	'.debug_frame'
	.word	20
	.word	.L302,.L69,.L145-.L69
	.byte	8,18,8,19,8,22,8,23

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   435  RTM_EXPORT(rt_device_set_tx_complete);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   436  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\device.c	   437  #endif

	; Module end
