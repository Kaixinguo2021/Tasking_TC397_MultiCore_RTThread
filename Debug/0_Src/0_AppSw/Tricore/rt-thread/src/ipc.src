	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\.ipc.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.src ..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c'

	
$TC162
	
	.sdecl	'.text.ipc.rt_ipc_get_highest_priority',code,cluster('rt_ipc_get_highest_priority')
	.sect	'.text.ipc.rt_ipc_get_highest_priority'
	.align	2
	
	.global	rt_ipc_get_highest_priority

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	     1  /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	     3   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	     4   * SPDX-License-Identifier: Apache-2.0
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	     5   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	     6   * Change Logs:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	     7   * Date           Author       Notes
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	     8   * 2006-03-14     Bernard      the first version
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	     9   * 2006-04-25     Bernard      implement semaphore
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    10   * 2006-05-03     Bernard      add RT_IPC_DEBUG
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    11   *                             modify the type of IPC waiting time to rt_int32_t
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    12   * 2006-05-10     Bernard      fix the semaphore take bug and add IPC object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    13   * 2006-05-12     Bernard      implement mailbox and message queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    14   * 2006-05-20     Bernard      implement mutex
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    15   * 2006-05-23     Bernard      implement fast event
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    16   * 2006-05-24     Bernard      implement event
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    17   * 2006-06-03     Bernard      fix the thread timer init bug
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    18   * 2006-06-05     Bernard      fix the mutex release bug
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    19   * 2006-06-07     Bernard      fix the message queue send bug
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    20   * 2006-08-04     Bernard      add hook support
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    21   * 2009-05-21     Yi.qiu       fix the sem release bug
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    22   * 2009-07-18     Bernard      fix the event clear bug
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    23   * 2009-09-09     Bernard      remove fast event and fix ipc release bug
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    24   * 2009-10-10     Bernard      change semaphore and mutex value to unsigned value
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    25   * 2009-10-25     Bernard      change the mb/mq receive timeout to 0 if the
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    26   *                             re-calculated delta tick is a negative number.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    27   * 2009-12-16     Bernard      fix the rt_ipc_object_suspend issue when IPC flag
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    28   *                             is RT_IPC_FLAG_PRIO
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    29   * 2010-01-20     mbbill       remove rt_ipc_object_decrease function.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    30   * 2010-04-20     Bernard      move memcpy outside interrupt disable in mq
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    31   * 2010-10-26     yi.qiu       add module support in rt_mp_delete and rt_mq_delete
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    32   * 2010-11-10     Bernard      add IPC reset command implementation.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    33   * 2011-12-18     Bernard      add more parameter checking in message queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    34   * 2013-09-14     Grissiom     add an option check in rt_event_recv
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    35   * 2018-10-02     Bernard      add 64bit support for mailbox
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    36   * 2019-09-16     tyx          add send wait support for message queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    37   * 2020-07-29     Meco Man     fix thread->event_set/event_info when received an
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    38   *                             event without pending
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    39   * 2020-10-11     Meco Man     add value overflow-check code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    40   * 2021-01-03     Meco Man     add rt_mb_urgent()
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    41   * 2021-01-20     hupu         fix priority inversion bug of mutex
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    42   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    43  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    44  #include <rtthread.h>
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    45  #include <rthw.h>
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    46  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    47  #ifdef RT_USING_HOOK
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    48  extern void (*rt_object_trytake_hook)(struct rt_object *object);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    49  extern void (*rt_object_take_hook)(struct rt_object *object);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    50  extern void (*rt_object_put_hook)(struct rt_object *object);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    51  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    52  #pragma warning 560
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    53  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    54   * @addtogroup IPC
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    55   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    56  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    57  /**@{*/
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    58  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    59  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    60   * This function will initialize an IPC object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    61   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    62   * @param ipc the IPC object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    63   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    64   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    65   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    66  rt_inline rt_err_t rt_ipc_object_init(struct rt_ipc_object *ipc)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    67  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    68      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    69      rt_list_init(&(ipc->suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    70  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    71      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    72  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    73  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    74  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    75   * This function will suspend a thread to a specified list. IPC object or some
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    76   * double-queue object (mailbox etc.) contains this kind of list.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    77   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    78   * @param list the IPC suspended thread list
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    79   * @param thread the thread object to be suspended
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    80   * @param flag the IPC object flag,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    81   *        which shall be RT_IPC_FLAG_FIFO/RT_IPC_FLAG_PRIO.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    82   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    83   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    84   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    85  rt_inline rt_err_t rt_ipc_list_suspend(rt_list_t        *list,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    86                                         struct rt_thread *thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    87                                         rt_uint8_t        flag)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    88  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    89      /* suspend thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    90      rt_thread_suspend(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    91  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    92      switch (flag)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    93      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    94      case RT_IPC_FLAG_FIFO:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    95          rt_list_insert_before(list, &(thread->tlist));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    96          break;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    97  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    98      case RT_IPC_FLAG_PRIO:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    99          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   100              struct rt_list_node *n;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   101              struct rt_thread *sthread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   102  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   103              /* find a suitable position */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   105              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   106                  sthread = rt_list_entry(n, struct rt_thread, tlist);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   107  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   108                  /* find out */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   110                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   111                      /* insert this thread before the sthread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   112                      rt_list_insert_before(&(sthread->tlist), &(thread->tlist));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   113                      break;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   114                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   115              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   116  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   117              /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   118               * not found a suitable position,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   119               * append to the end of suspend_thread list
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   120               */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   122                  rt_list_insert_before(list, &(thread->tlist));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   123          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   124          break;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   125  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   126      default:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   127          break;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   128      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   129  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   130      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   131  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   132  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   133  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   134   * This function will resume the first thread in the list of a IPC object:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   135   * - remove the thread from suspend queue of IPC object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   136   * - put the thread into system ready queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   137   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   138   * @param list the thread list
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   139   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   140   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   141   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   142  rt_inline rt_err_t rt_ipc_list_resume(rt_list_t *list)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   143  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   144      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   145  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   146      /* get thread entry */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   147      thread = rt_list_entry(list->next, struct rt_thread, tlist);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   148  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   149      RT_DEBUG_LOG(RT_DEBUG_IPC, ("resume thread:%s\n", thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   150  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   151      /* resume it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   152      rt_thread_resume(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   153  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   154      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   155  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   156  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   157  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   158   * This function will resume all suspended threads in a list, including
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   159   * suspend list of IPC object and private list of mailbox etc.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   160   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   161   * @param list of the threads to resume
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   162   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   163   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   164   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   165  rt_inline rt_err_t rt_ipc_list_resume_all(rt_list_t *list)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   166  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   167      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   168      register rt_ubase_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   169  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   170      /* wakeup all suspended threads */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   172      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   173          /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   174          temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   175  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   176          /* get next suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   177          thread = rt_list_entry(list->next, struct rt_thread, tlist);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   178          /* set error code to RT_ERROR */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   179          thread->error = -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   180  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   181          /*
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   182           * resume thread
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   183           * In rt_thread_resume function, it will remove current thread from
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   184           * suspended list
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   185           */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   186          rt_thread_resume(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   187  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   188          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   189          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   190      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   191  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   192      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   193  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   194  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   195  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   196   * This function will get the highest priority from the specified
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   197   * list of threads
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   198   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   199   * @param list of the threads
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   200   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   201   * @return the highest priority
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   202   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   203  rt_uint8_t rt_ipc_get_highest_priority(rt_list_t *list)
; Function rt_ipc_get_highest_priority
.L291:
rt_ipc_get_highest_priority:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   204  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   205      struct rt_list_node *n;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   206      struct rt_thread *sthread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   207      rt_uint8_t priority = RT_THREAD_PRIORITY_MAX - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   208  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   209      for (n = list->next; n != list; n = n->next)
	mov	d2,#31
	ld.a	a15,[a4]
.L970:
	j	.L2
.L3:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   210      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   211          sthread = rt_list_entry(n, struct rt_thread, tlist);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   212  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   213          priority = priority < sthread->current_priority ?
	ld.bu	d15,[a15]42
.L1814:
	ld.a	a15,[a15]
.L1815:
	min.u	d2,d2,d15
.L2:
	jne.a	a15,a4,.L3
.L1816:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   214                      priority :
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   215                      sthread->current_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   216      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   217      return priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   218  }
	ret
.L958:
	
__rt_ipc_get_highest_priority_function_end:
	.size	rt_ipc_get_highest_priority,__rt_ipc_get_highest_priority_function_end-rt_ipc_get_highest_priority
.L523:
	; End of function
	
	.sdecl	'.text.ipc.rt_sem_init',code,cluster('rt_sem_init')
	.sect	'.text.ipc.rt_sem_init'
	.align	2
	
	.global	rt_sem_init

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   219  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   220  #ifdef RT_USING_SEMAPHORE
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   221  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   222   * This function will initialize a semaphore and put it under control of
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   223   * resource management.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   224   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   225   * @param sem the semaphore object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   226   * @param name the name of semaphore
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   227   * @param value the initial value of semaphore
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   228   * @param flag the flag of semaphore
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   229   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   230   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   231   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   232  rt_err_t rt_sem_init(rt_sem_t    sem,
; Function rt_sem_init
.L293:
rt_sem_init:	.type	func
	mov	d15,d4
	mov.aa	a15,a4
.L971:
	mov	d8,d5
.L972:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   233                       const char *name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   234                       rt_uint32_t value,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   235                       rt_uint8_t  flag)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   236  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   237      RT_ASSERT(sem != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   238      RT_ASSERT(value < 0x10000U);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   239  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   240      /* initialize object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   241      rt_object_init(&(sem->parent.parent), RT_Object_Class_Semaphore, name);
	mov	d4,#2
	call	rt_object_init
.L585:
	fcall	.cocofun_3
.L586:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   242  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   243      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   244      rt_ipc_object_init(&(sem->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   245  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   246      /* set initial value */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   247      sem->value = (rt_uint16_t)value;
	st.h	[a15]28,d15
.L1280:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   248  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   249      /* set parent */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   250      sem->parent.parent.flag = flag;
	st.b	[a15]9,d8
.L1281:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   251  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   252      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   253  }
	mov	d2,#0
	ret
.L575:
	
__rt_sem_init_function_end:
	.size	rt_sem_init,__rt_sem_init_function_end-rt_sem_init
.L378:
	; End of function
	
	.sdecl	'.text.ipc..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.ipc..cocofun_3'
	.align	2
; Function .cocofun_3
.L295:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	lea	a2,[a15]20
.L1859:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
	st.a	[a15]24,a2
.L1860:
	st.a	[a2],a2
	fret
.L543:
	; End of function
	.sdecl	'.text.ipc.rt_sem_detach',code,cluster('rt_sem_detach')
	.sect	'.text.ipc.rt_sem_detach'
	.align	2
	
	.global	rt_sem_detach

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   254  RTM_EXPORT(rt_sem_init);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   255  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   256  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   257   * This function will detach a semaphore from resource management
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   258   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   259   * @param sem the semaphore object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   260   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   261   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   262   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   263   * @see rt_sem_delete
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   264   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   265  rt_err_t rt_sem_detach(rt_sem_t sem)
; Function rt_sem_detach
.L297:
rt_sem_detach:	.type	func
	fcall	.cocofun_5
.L595:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L6
.L7:
	call	rt_cpus_lock
.L975:
	mov	d8,d2
	ld.a	a2,[a12]
.L974:
	fcall	.cocofun_2
.L977:
	call	rt_thread_resume
.L978:
	mov	d4,d8
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L6:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a12]
.L1286:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a12,.L7
.L596:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   266  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   267      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   268      RT_ASSERT(sem != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   269      RT_ASSERT(rt_object_get_type(&sem->parent.parent) == RT_Object_Class_Semaphore);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   270      RT_ASSERT(rt_object_is_systemobject(&sem->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   271  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   272      /* wakeup all suspended threads */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   273      rt_ipc_list_resume_all(&(sem->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   274  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   275      /* detach semaphore object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   276      rt_object_detach(&(sem->parent.parent));
	mov.aa	a4,a15
.L979:
	call	rt_object_detach
.L980:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   277  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   278      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   279  }
	mov	d2,#0
	ret
.L591:
	
__rt_sem_detach_function_end:
	.size	rt_sem_detach,__rt_sem_detach_function_end-rt_sem_detach
.L383:
	; End of function
	
	.sdecl	'.text.ipc..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.ipc..cocofun_5'
	.align	2
; Function .cocofun_5
.L299:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0
	mov.aa	a15,a4
.L973:
	lea	a12,[a15]20
.L1869:
	mov	d15,#-1
	fret
.L553:
	; End of function
	.sdecl	'.text.ipc..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.ipc..cocofun_2'
	.align	2
; Function .cocofun_2
.L301:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	lea	a4,[a2]-20
.L976:
	st.w	[a4]48,d15
	fret
.L538:
	; End of function
	.sdecl	'.text.ipc.rt_sem_take',code,cluster('rt_sem_take')
	.sect	'.text.ipc.rt_sem_take'
	.align	2
	
	.global	rt_sem_take

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   280  RTM_EXPORT(rt_sem_detach);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   281  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   282  #ifdef RT_USING_HEAP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   283  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   284   * This function will create a semaphore from system resource
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   285   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   286   * @param name the name of semaphore
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   287   * @param value the initial value of semaphore
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   288   * @param flag the flag of semaphore
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   289   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   290   * @return the created semaphore, RT_NULL on error happen
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   291   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   292   * @see rt_sem_init
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   293   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   294  rt_sem_t rt_sem_create(const char *name, rt_uint32_t value, rt_uint8_t flag)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   295  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   296      rt_sem_t sem;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   297  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   298      RT_DEBUG_NOT_IN_INTERRUPT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   299      RT_ASSERT(value < 0x10000U);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   300  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   301      /* allocate object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   302      sem = (rt_sem_t)rt_object_allocate(RT_Object_Class_Semaphore, name);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   303      if (sem == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   304          return sem;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   305  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   306      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   307      rt_ipc_object_init(&(sem->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   308  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   309      /* set initial value */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   310      sem->value = value;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   311  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   312      /* set parent */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   313      sem->parent.parent.flag = flag;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   314  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   315      return sem;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   316  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   317  RTM_EXPORT(rt_sem_create);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   318  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   319  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   320   * This function will delete a semaphore object and release the memory
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   321   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   322   * @param sem the semaphore object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   323   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   324   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   325   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   326   * @see rt_sem_detach
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   327   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   328  rt_err_t rt_sem_delete(rt_sem_t sem)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   329  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   330      RT_DEBUG_NOT_IN_INTERRUPT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   331  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   332      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   333      RT_ASSERT(sem != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   334      RT_ASSERT(rt_object_get_type(&sem->parent.parent) == RT_Object_Class_Semaphore);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   335      RT_ASSERT(rt_object_is_systemobject(&sem->parent.parent) == RT_FALSE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   336  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   337      /* wakeup all suspended threads */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   338      rt_ipc_list_resume_all(&(sem->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   339  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   340      /* delete semaphore object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   341      rt_object_delete(&(sem->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   342  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   343      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   344  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   345  RTM_EXPORT(rt_sem_delete);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   346  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   347  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   348  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   349   * This function will take a semaphore, if the semaphore is unavailable, the
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   350   * thread shall wait for a specified time.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   351   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   352   * @param sem the semaphore object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   353   * @param time the waiting time
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   354   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   355   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   356   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   357  rt_err_t rt_sem_take(rt_sem_t sem, rt_int32_t time)
; Function rt_sem_take
.L303:
rt_sem_take:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   358  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   359      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   360      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   361  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   362      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   363      RT_ASSERT(sem != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   364      RT_ASSERT(rt_object_get_type(&sem->parent.parent) == RT_Object_Class_Semaphore);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   365  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   366      RT_OBJECT_HOOK_CALL(rt_object_trytake_hook, (&(sem->parent.parent)));
	ld.a	a2,rt_object_trytake_hook
.L1291:
	sub.a	a10,#8
.L981:
	st.w	[a10],d4
	mov.aa	a13,a4
.L982:
	jz.a	a2,.L9
.L1292:
	calli	a2
.L9:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   367  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   368      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   369      temp = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L983:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   370  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   371      RT_DEBUG_LOG(RT_DEBUG_IPC, ("thread %s take sem:%s, which value is: %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   372                                  rt_thread_self()->name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   373                                  ((struct rt_object *)sem)->name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   374                                  sem->value));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   375  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   376      if (sem->value > 0)
	mov	d8,d2
	ld.hu	d15,[a13]28
.L985:
	jeq	d15,#0,.L10
.L1293:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   377      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   378          /* semaphore is available */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   379          sem->value --;
	add	d15,#-1
	st.h	[a13]28,d15
.L1294:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   380  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   381          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   382          rt_hw_interrupt_enable(temp);
	mov	d4,d8
	call	rt_cpus_unlock
.L984:
	j	.L11
.L10:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   383      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   384      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   385      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   386          /* no waiting, return with timeout */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   387          if (time == 0)
	ld.w	d15,[a10]
.L1295:
	jne	d15,#0,.L12
.L1296:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   388          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   389              rt_hw_interrupt_enable(temp);
	mov	d4,d8
	call	rt_cpus_unlock
.L986:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   390  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   391              return -RT_ETIMEOUT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   392          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   393          else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   394          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   395              /* current context checking */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   396              RT_DEBUG_IN_THREAD_CONTEXT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   397  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   398              /* semaphore is unavailable, push to suspend list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   399              /* get current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   400              thread = rt_thread_self();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   401  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   402              /* reset thread error number */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   403              thread->error = RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   404  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   405              RT_DEBUG_LOG(RT_DEBUG_IPC, ("sem take: suspend thread - %s\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   406                                          thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   407  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   408              /* suspend thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   409              rt_ipc_list_suspend(&(sem->parent.suspend_thread),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   410                                  thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   411                                  sem->parent.parent.flag);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   412  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   413              /* has waiting time, start thread timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   414              if (time > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   415              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   416                  RT_DEBUG_LOG(RT_DEBUG_IPC, ("set thread:%s to timer list\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   417                                              thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   418  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   419                  /* reset the timeout of thread timer and start it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   420                  rt_timer_control(&(thread->thread_timer),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   421                                   RT_TIMER_CTRL_SET_TIME,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   422                                   &time);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   423                  rt_timer_start(&(thread->thread_timer));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   424              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   425  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   426              /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   427              rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   428  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   429              /* do schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   430              rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   431  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   432              if (thread->error != RT_EOK)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   433              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   434                  return thread->error;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   435              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   436          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   437      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   438  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   439      RT_OBJECT_HOOK_CALL(rt_object_take_hook, (&(sem->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   440  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   441      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   442  }
	mov	d2,#-2
	ret
.L12:
	call	rt_thread_self
.L987:
	mov.aa	a12,a2
.L989:
	mov	d15,#0
	st.w	[a12]48,d15
.L1297:
	lea	a14,[a13]20
.L1298:
	ld.bu	d15,[a13]9
.L612:
	mov.aa	a4,a12
.L988:
	call	rt_thread_suspend
.L990:
	jeq	d15,#0,.L14
.L1299:
	jne	d15,#1,.L16
.L621:
	ld.a	a2,[a14]
.L991:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
	j	.L17
.L18:
	ld.bu	d15,[a12]62
.L1300:
	ld.bu	d0,[a2]42
.L1301:
	lea	a15,[a2]-20
.L992:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
	jge.u	d15,d0,.L19
.L626:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	ld.a	a5,[a15]24
.L627:
	lea	a4,[a12]20
.L634:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	st.a	[a5],a4
.L1302:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	ld.a	a5,[a15]24
.L1303:
	st.a	[a12]24,a5
.L1304:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a15]24,a4
.L1305:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a4],a2
.L635:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   113                      break;      (inlined)
	j	.L20

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
.L19:
	ld.a	a2,[a2]

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
.L17:
	jne.a	a2,a14,.L18

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L20:
	jne.a	a2,a14,.L21

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    94      case RT_IPC_FLAG_FIFO:      (inlined)
.L14:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	ld.a	a15,[a13]24
.L636:
	lea	a2,[a12]20
.L638:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	st.a	[a15],a2
.L1306:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	ld.a	a15,[a13]24
.L1307:
	st.a	[a12]24,a15
.L1308:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a13]24,a2
.L1309:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a2],a14

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L21:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   126      default:      (inlined)
.L16:
	ld.w	d15,[a10]
.L1310:
	jlt	d15,#1,.L22
.L1311:
	lea	a4,[a12]84
.L1312:
	mov	d4,#0
	mov.aa	a5,a10
	call	rt_timer_control
.L1313:
	lea	a4,[a12]84
	call	rt_timer_start
.L22:
	mov	d4,d8
	call	rt_cpus_unlock
.L1314:
	call	rt_schedule
.L1315:
	ld.w	d2,[a12]48
.L1316:
	jne	d2,#0,.L24
.L11:
	ld.a	a15,rt_object_take_hook
	jz.a	a15,.L25
	mov.aa	a4,a13
.L993:
	calli	a15
.L25:
	mov	d2,#0
.L24:
	ret
.L605:
	
__rt_sem_take_function_end:
	.size	rt_sem_take,__rt_sem_take_function_end-rt_sem_take
.L388:
	; End of function
	
	.sdecl	'.text.ipc.rt_sem_trytake',code,cluster('rt_sem_trytake')
	.sect	'.text.ipc.rt_sem_trytake'
	.align	2
	
	.global	rt_sem_trytake

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   443  RTM_EXPORT(rt_sem_take);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   444  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   445  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   446   * This function will try to take a semaphore and immediately return
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   447   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   448   * @param sem the semaphore object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   449   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   450   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   451   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   452  rt_err_t rt_sem_trytake(rt_sem_t sem)
; Function rt_sem_trytake
.L305:
rt_sem_trytake:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   453  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   454      return rt_sem_take(sem, 0);
	mov	d4,#0
	j	rt_sem_take
.L639:
	
__rt_sem_trytake_function_end:
	.size	rt_sem_trytake,__rt_sem_trytake_function_end-rt_sem_trytake
.L393:
	; End of function
	
	.sdecl	'.text.ipc.rt_sem_release',code,cluster('rt_sem_release')
	.sect	'.text.ipc.rt_sem_release'
	.align	2
	
	.global	rt_sem_release

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   455  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   456  RTM_EXPORT(rt_sem_trytake);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   457  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   458  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   459   * This function will release a semaphore, if there are threads suspended on
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   460   * semaphore, it will be waked up.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   461   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   462   * @param sem the semaphore object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   463   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   464   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   465   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   466  rt_err_t rt_sem_release(rt_sem_t sem)
; Function rt_sem_release
.L307:
rt_sem_release:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   467  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   468      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   469      register rt_bool_t need_schedule;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   470  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   471      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   472      RT_ASSERT(sem != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   473      RT_ASSERT(rt_object_get_type(&sem->parent.parent) == RT_Object_Class_Semaphore);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   474  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   475      RT_OBJECT_HOOK_CALL(rt_object_put_hook, (&(sem->parent.parent)));
	ld.a	a2,rt_object_put_hook
.L1325:
	mov.aa	a15,a4
.L995:
	jz.a	a2,.L28
.L1326:
	calli	a2
.L28:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   476  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   477      need_schedule = RT_FALSE;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   478  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   479      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   480      temp = rt_hw_interrupt_disable();
	mov	d8,#0
	call	rt_cpus_lock
.L998:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   481  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   482      RT_DEBUG_LOG(RT_DEBUG_IPC, ("thread %s releases sem:%s, which value is: %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   483                                  rt_thread_self()->name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   484                                  ((struct rt_object *)sem)->name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   485                                  sem->value));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   486  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   487      if (!rt_list_isempty(&sem->parent.suspend_thread))
	mov	d9,d2
	fcall	.cocofun_4
.L1327:
	jeq.a	a4,a2,.L29
.L647:
	fcall	.cocofun_6
.L996:
	call	rt_thread_resume
.L648:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   488      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   489          /* resume the suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   490          rt_ipc_list_resume(&(sem->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   491          need_schedule = RT_TRUE;
	mov	d8,#1
	j	.L30
.L29:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   492      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   493      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   494      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   495          if(sem->value < RT_SEM_VALUE_MAX)
	ld.hu	d15,[a15]28
.L1328:
	mov.u	d0,#65535
.L1329:
	jge.u	d15,d0,.L31
.L1330:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   496          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   497              sem->value ++; /* increase value */
	add	d15,#1
	st.h	[a15]28,d15
.L1331:
	j	.L32
.L31:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   498          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   499          else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   500          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   501              rt_hw_interrupt_enable(temp); /* enable interrupt */
	mov	d4,d9
	call	rt_cpus_unlock
.L999:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   502              return -RT_EFULL; /* value overflowed */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   503          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   504      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   505  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   506      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   507      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   508  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   509      /* resume a thread, re-schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   510      if (need_schedule == RT_TRUE)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   511          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   512  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   513      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   514  }
	mov	d2,#-3
	ret
.L32:
.L30:
	mov	d4,d9
	call	rt_cpus_unlock
.L1332:
	jeq	d8,#0,.L34
.L1333:
	call	rt_schedule
.L34:
	mov	d2,#0
	ret
.L641:
	
__rt_sem_release_function_end:
	.size	rt_sem_release,__rt_sem_release_function_end-rt_sem_release
.L398:
	; End of function
	
	.sdecl	'.text.ipc..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.ipc..cocofun_6'
	.align	2
; Function .cocofun_6
.L309:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:0
	ld.a	a15,[a15]20
.L997:
	lea	a4,[a15]-20
	fret
.L558:
	; End of function
	.sdecl	'.text.ipc..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.ipc..cocofun_4'
	.align	2
; Function .cocofun_4
.L311:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	lea	a2,[a15]20
.L994:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a4,[a2]
	fret
.L548:
	; End of function
	.sdecl	'.text.ipc.rt_sem_control',code,cluster('rt_sem_control')
	.sect	'.text.ipc.rt_sem_control'
	.align	2
	
	.global	rt_sem_control

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   515  RTM_EXPORT(rt_sem_release);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   516  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   517  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   518   * This function can get or set some extra attributions of a semaphore object.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   519   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   520   * @param sem the semaphore object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   521   * @param cmd the execution command
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   522   * @param arg the execution argument
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   523   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   524   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   525   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   526  rt_err_t rt_sem_control(rt_sem_t sem, int cmd, void *arg)
; Function rt_sem_control
.L313:
rt_sem_control:	.type	func
	mov.aa	a15,a4
.L1001:
	mov.aa	a12,a5
.L1003:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   527  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   528      rt_ubase_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   529  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   530      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   531      RT_ASSERT(sem != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   532      RT_ASSERT(rt_object_get_type(&sem->parent.parent) == RT_Object_Class_Semaphore);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   533  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   534      if (cmd == RT_IPC_CMD_RESET)
	jne	d4,#1,.L36
.L659:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   535      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   536          rt_ubase_t value;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   537  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   538          /* get value */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   539          value = (rt_ubase_t)arg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   540          /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   541          level = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1000:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   542  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   543          /* resume all waiting thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   544          rt_ipc_list_resume_all(&sem->parent.suspend_thread);
	mov	d8,d2
	lea	a13,[a15]20
.L660:
	mov	d15,#-1

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L37
.L38:
	call	rt_cpus_lock
.L1004:
	mov	d9,d2
	ld.a	a2,[a13]
.L1002:
	fcall	.cocofun_2
.L1005:
	call	rt_thread_resume
.L1006:
	mov	d4,d9
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L37:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a13]
.L1338:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a13,.L38
.L661:
	mov.d	d15,a12
.L1007:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   545  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   546          /* set new value */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   547          sem->value = (rt_uint16_t)value;
	st.h	[a15]28,d15
.L1339:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   548  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   549          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   550          rt_hw_interrupt_enable(level);
	mov	d4,d8
	call	rt_cpus_unlock
.L1340:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   551  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   552          rt_schedule();
	call	rt_schedule
.L1341:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   553  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   554          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   555      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   556  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   557      return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   558  }
	mov	d2,#0
	ret
.L36:
	mov	d2,#-1
	ret
.L653:
	
__rt_sem_control_function_end:
	.size	rt_sem_control,__rt_sem_control_function_end-rt_sem_control
.L403:
	; End of function
	
	.sdecl	'.text.ipc.rt_mutex_init',code,cluster('rt_mutex_init')
	.sect	'.text.ipc.rt_mutex_init'
	.align	2
	
	.global	rt_mutex_init

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   559  RTM_EXPORT(rt_sem_control);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   560  #endif /* end of RT_USING_SEMAPHORE */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   561  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   562  #ifdef RT_USING_MUTEX
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   563  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   564   * This function will initialize a mutex and put it under control of resource
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   565   * management.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   566   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   567   * @param mutex the mutex object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   568   * @param name the name of mutex
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   569   * @param flag the flag of mutex
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   570   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   571   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   572   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   573  rt_err_t rt_mutex_init(rt_mutex_t mutex, const char *name, rt_uint8_t flag)
; Function rt_mutex_init
.L315:
rt_mutex_init:	.type	func
	mov	d8,d4
	mov.aa	a15,a4
.L1008:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   574  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   575      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   576      RT_ASSERT(mutex != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   577  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   578      /* initialize object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   579      rt_object_init(&(mutex->parent.parent), RT_Object_Class_Mutex, name);
	mov	d4,#3
	call	rt_object_init
.L671:
	fcall	.cocofun_3
.L672:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   580  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   581      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   582      rt_ipc_object_init(&(mutex->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   583  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   584      mutex->value = 1;
	mov	d15,#1
.L1346:
	fcall	.cocofun_7
.L1347:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   585      mutex->owner = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   586      mutex->original_priority = 0xFF;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   587      mutex->hold  = 0;
	mov	d2,#0
	st.b	[a15]31,d2
.L1348:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   588  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   589      /* set flag */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   590      mutex->parent.parent.flag = flag;
	st.b	[a15]9,d8
.L1349:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   591  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   592      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   593  }
	ret
.L665:
	
__rt_mutex_init_function_end:
	.size	rt_mutex_init,__rt_mutex_init_function_end-rt_mutex_init
.L408:
	; End of function
	
	.sdecl	'.text.ipc..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.ipc..cocofun_7'
	.align	2
; Function .cocofun_7
.L317:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	st.h	[a15]28,d15
.L1878:
	mov.a	a2,#0
.L1879:
	st.a	[a15]32,a2
.L1880:
	mov	d15,#255
	st.b	[a15]30,d15
.L1009:
	fret
.L563:
	; End of function
	.sdecl	'.text.ipc.rt_mutex_detach',code,cluster('rt_mutex_detach')
	.sect	'.text.ipc.rt_mutex_detach'
	.align	2
	
	.global	rt_mutex_detach

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   594  RTM_EXPORT(rt_mutex_init);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   595  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   596  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   597   * This function will detach a mutex from resource management
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   598   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   599   * @param mutex the mutex object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   600   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   601   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   602   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   603   * @see rt_mutex_delete
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   604   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   605  rt_err_t rt_mutex_detach(rt_mutex_t mutex)
; Function rt_mutex_detach
.L319:
rt_mutex_detach:	.type	func
	fcall	.cocofun_5
.L676:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L42
.L43:
	call	rt_cpus_lock
.L1011:
	mov	d8,d2
	ld.a	a2,[a12]
.L1010:
	fcall	.cocofun_2
.L1012:
	call	rt_thread_resume
.L1013:
	mov	d4,d8
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L42:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a12]
.L1354:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a12,.L43
.L677:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   606  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   607      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   608      RT_ASSERT(mutex != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   609      RT_ASSERT(rt_object_get_type(&mutex->parent.parent) == RT_Object_Class_Mutex);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   610      RT_ASSERT(rt_object_is_systemobject(&mutex->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   611  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   612      /* wakeup all suspended threads */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   613      rt_ipc_list_resume_all(&(mutex->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   614  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   615      /* detach semaphore object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   616      rt_object_detach(&(mutex->parent.parent));
	mov.aa	a4,a15
.L1014:
	call	rt_object_detach
.L1015:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   617  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   618      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   619  }
	mov	d2,#0
	ret
.L674:
	
__rt_mutex_detach_function_end:
	.size	rt_mutex_detach,__rt_mutex_detach_function_end-rt_mutex_detach
.L413:
	; End of function
	
	.sdecl	'.text.ipc.rt_mutex_take',code,cluster('rt_mutex_take')
	.sect	'.text.ipc.rt_mutex_take'
	.align	2
	
	.global	rt_mutex_take

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   620  RTM_EXPORT(rt_mutex_detach);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   621  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   622  #ifdef RT_USING_HEAP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   623  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   624   * This function will create a mutex from system resource
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   625   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   626   * @param name the name of mutex
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   627   * @param flag the flag of mutex
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   628   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   629   * @return the created mutex, RT_NULL on error happen
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   630   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   631   * @see rt_mutex_init
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   632   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   633  rt_mutex_t rt_mutex_create(const char *name, rt_uint8_t flag)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   634  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   635      struct rt_mutex *mutex;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   636  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   637      RT_DEBUG_NOT_IN_INTERRUPT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   638  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   639      /* allocate object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   640      mutex = (rt_mutex_t)rt_object_allocate(RT_Object_Class_Mutex, name);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   641      if (mutex == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   642          return mutex;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   643  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   644      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   645      rt_ipc_object_init(&(mutex->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   646  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   647      mutex->value              = 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   648      mutex->owner              = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   649      mutex->original_priority  = 0xFF;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   650      mutex->hold               = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   651  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   652      /* set flag */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   653      mutex->parent.parent.flag = flag;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   654  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   655      return mutex;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   656  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   657  RTM_EXPORT(rt_mutex_create);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   658  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   659  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   660   * This function will delete a mutex object and release the memory
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   661   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   662   * @param mutex the mutex object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   663   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   664   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   665   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   666   * @see rt_mutex_detach
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   667   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   668  rt_err_t rt_mutex_delete(rt_mutex_t mutex)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   669  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   670      RT_DEBUG_NOT_IN_INTERRUPT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   671  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   672      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   673      RT_ASSERT(mutex != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   674      RT_ASSERT(rt_object_get_type(&mutex->parent.parent) == RT_Object_Class_Mutex);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   675      RT_ASSERT(rt_object_is_systemobject(&mutex->parent.parent) == RT_FALSE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   676  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   677      /* wakeup all suspended threads */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   678      rt_ipc_list_resume_all(&(mutex->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   679  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   680      /* delete mutex object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   681      rt_object_delete(&(mutex->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   682  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   683      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   684  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   685  RTM_EXPORT(rt_mutex_delete);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   686  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   687  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   688  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   689   * This function will take a mutex, if the mutex is unavailable, the
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   690   * thread shall wait for a specified time.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   691   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   692   * @param mutex the mutex object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   693   * @param time the waiting time
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   694   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   695   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   696   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   697  rt_err_t rt_mutex_take(rt_mutex_t mutex, rt_int32_t time)
; Function rt_mutex_take
.L321:
rt_mutex_take:	.type	func
	sub.a	a10,#8
.L1016:
	mov.aa	a15,a4
.L1022:
	st.w	[a10],d4
.L1359:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   698  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   699      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   700      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   701  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   702      /* this function must not be used in interrupt even if time = 0 */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   703      RT_DEBUG_IN_THREAD_CONTEXT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   704  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   705      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   706      RT_ASSERT(mutex != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   707      RT_ASSERT(rt_object_get_type(&mutex->parent.parent) == RT_Object_Class_Mutex);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   708  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   709      /* get current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   710      thread = rt_thread_self();
	call	rt_thread_self
.L1017:
	mov.aa	a12,a2
.L1027:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   711  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   712      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   713      temp = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1018:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   714  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   715      RT_OBJECT_HOOK_CALL(rt_object_trytake_hook, (&(mutex->parent.parent)));
	ld.a	a2,rt_object_trytake_hook
.L1360:
	mov	d8,d2
.L1025:
	jz.a	a2,.L45
.L1361:
	mov.aa	a4,a15
.L1019:
	calli	a2
.L45:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   716  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   717      RT_DEBUG_LOG(RT_DEBUG_IPC,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   718                   ("mutex_take: current thread %s, mutex value: %d, hold: %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   719                    thread->name, mutex->value, mutex->hold));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   720  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   721      /* reset thread error */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   722      thread->error = RT_EOK;
	mov	d15,#0
	st.w	[a12]48,d15
.L1362:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   723  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   724      if (mutex->owner == thread)
	ld.a	a4,[a15]32
.L1363:
	jeq.a	a4,a12,.L46
.L1364:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   725      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   726          if(mutex->hold < RT_MUTEX_HOLD_MAX)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   727          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   728              /* it's the same thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   729              mutex->hold ++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   730          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   731          else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   732          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   733              rt_hw_interrupt_enable(temp); /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   734              return -RT_EFULL; /* value overflowed */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   735          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   736      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   737      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   738      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   739  #ifdef RT_USING_SIGNALS
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   740  __again:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   741  #endif /* end of RT_USING_SIGNALS */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   742          /* The value of mutex is 1 in initial status. Therefore, if the
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   743           * value is great than 0, it indicates the mutex is avaible.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   744           */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   745          if (mutex->value > 0)
	ld.hu	d15,[a15]28
.L1365:
	jeq	d15,#0,.L47
.L1366:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   746          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   747              /* mutex is available */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   748              mutex->value --;
	add	d15,#-1
	st.h	[a15]28,d15
.L1367:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   749  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   750              /* set mutex owner and original priority */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   751              mutex->owner             = thread;
	st.a	[a15]32,a12
.L1368:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   752              mutex->original_priority = thread->current_priority;
	ld.bu	d15,[a12]62
.L1369:
	st.b	[a15]30,d15
.L46:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   753              if(mutex->hold < RT_MUTEX_HOLD_MAX)
	ld.bu	d0,[a15]31
.L1370:
	mov	d15,#255
.L1371:
	jge.u	d0,d15,.L48
.L1372:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   754              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   755                  mutex->hold ++;
	add	d0,#1
	st.b	[a15]31,d0
.L1373:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   756              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   757              else
	j	.L49
.L48:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   758              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   759                  rt_hw_interrupt_enable(temp); /* enable interrupt */
	mov	d4,d8
	call	rt_cpus_unlock
.L1374:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   760                  return -RT_EFULL; /* value overflowed */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   761              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   762          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   763          else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   764          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   765              /* no waiting, return with timeout */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   766              if (time == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   767              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   768                  /* set error as timeout */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   769                  thread->error = -RT_ETIMEOUT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   770  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   771                  /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   772                  rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   773  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   774                  return -RT_ETIMEOUT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   775              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   776              else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   777              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   778                  /* mutex is unavailable, push to suspend list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   779                  RT_DEBUG_LOG(RT_DEBUG_IPC, ("mutex_take: suspend thread: %s\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   780                                              thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   781  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   782                  /* change the owner thread priority of mutex */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   783                  if (thread->current_priority < mutex->owner->current_priority)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   784                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   785                      /* change the owner thread priority */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   786                      rt_thread_control(mutex->owner,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   787                                        RT_THREAD_CTRL_CHANGE_PRIORITY,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   788                                        &thread->current_priority);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   789                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   790  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   791                  /* suspend current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   792                  rt_ipc_list_suspend(&(mutex->parent.suspend_thread),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   793                                      thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   794                                      mutex->parent.parent.flag);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   795  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   796                  /* has waiting time, start thread timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   797                  if (time > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   798                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   799                      RT_DEBUG_LOG(RT_DEBUG_IPC,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   800                                   ("mutex_take: start the timer of thread:%s\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   801                                    thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   802  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   803                      /* reset the timeout of thread timer and start it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   804                      rt_timer_control(&(thread->thread_timer),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   805                                       RT_TIMER_CTRL_SET_TIME,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   806                                       &time);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   807                      rt_timer_start(&(thread->thread_timer));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   808                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   809  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   810                  /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   811                  rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   812  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   813                  /* do schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   814                  rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   815  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   816                  if (thread->error != RT_EOK)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   817                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   818  #ifdef RT_USING_SIGNALS
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   819                      /* interrupt by signal, try it again */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   820                      if (thread->error == -RT_EINTR) goto __again;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   821  #endif /* end of RT_USING_SIGNALS */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   822  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   823                      /* return error */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   824                      return thread->error;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   825                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   826                  else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   827                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   828                      /* the mutex is taken successfully. */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   829                      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   830                      temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   831                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   832              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   833          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   834      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   835  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   836      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   837      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   838  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   839      RT_OBJECT_HOOK_CALL(rt_object_take_hook, (&(mutex->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   840  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   841      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   842  }
	mov	d2,#-3
	ret
.L47:
	ld.w	d15,[a10]
.L1375:
	jne	d15,#0,.L51
.L1376:
	mov	d15,#-2
	st.w	[a12]48,d15
.L1377:
	mov	d4,d8
	call	rt_cpus_unlock
.L1378:
	mov	d2,#-2
	ret
.L51:
	ld.bu	d15,[a12]62
.L1379:
	ld.bu	d0,[a4]62
.L1380:
	jge.u	d15,d0,.L53
.L1381:
	mov	d4,#2
	lea	a5,[a12]62
	call	rt_thread_control
.L53:
	lea	a13,[a15]20
.L1382:
	ld.bu	d15,[a15]9
.L686:
	mov.aa	a4,a12
.L1020:
	call	rt_thread_suspend
.L1021:
	jeq	d15,#0,.L54
.L1383:
	jne	d15,#1,.L56
.L690:
	ld.a	a2,[a13]
.L1023:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
	j	.L57
.L58:
	ld.bu	d15,[a12]62
.L1384:
	ld.bu	d0,[a2]42
.L1385:
	lea	a4,[a2]-20
.L1024:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
	jge.u	d15,d0,.L59
.L1386:
	lea	a5,[a12]20
.L693:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	fcall	.cocofun_9
.L1387:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	st.a	[a12]24,a6
.L1388:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a4]24,a5
.L1389:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a5],a2
.L694:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   113                      break;      (inlined)
	j	.L60

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
.L59:
	ld.a	a2,[a2]

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
.L57:
	jne.a	a2,a13,.L58

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L60:
	jne.a	a2,a13,.L61

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    94      case RT_IPC_FLAG_FIFO:      (inlined)
.L54:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	ld.a	a4,[a15]24
.L697:
	lea	a2,[a12]20
.L699:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	st.a	[a4],a2
.L1390:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	ld.a	a4,[a15]24
.L1391:
	st.a	[a12]24,a4
.L1392:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a15]24,a2
.L1393:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a2],a13

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L61:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   126      default:      (inlined)
.L56:
	ld.w	d15,[a10]
.L1394:
	jlt	d15,#1,.L62
.L1395:
	lea	a4,[a12]84
.L1396:
	mov	d4,#0
	mov.aa	a5,a10
	call	rt_timer_control
.L1397:
	lea	a4,[a12]84
	call	rt_timer_start
.L62:
	mov	d4,d8
	call	rt_cpus_unlock
.L1398:
	call	rt_schedule
.L1399:
	ld.w	d2,[a12]48
.L1400:
	jne	d2,#0,.L64
.L1401:
	call	rt_cpus_lock
.L1026:
	mov	d8,d2
.L49:
	mov	d4,d8
	call	rt_cpus_unlock
.L1402:
	ld.a	a2,rt_object_take_hook
	jz.a	a2,.L65
	mov.aa	a4,a15
.L1028:
	calli	a2
.L65:
	mov	d2,#0
.L64:
	ret
.L681:
	
__rt_mutex_take_function_end:
	.size	rt_mutex_take,__rt_mutex_take_function_end-rt_mutex_take
.L418:
	; End of function
	
	.sdecl	'.text.ipc.rt_mutex_release',code,cluster('rt_mutex_release')
	.sect	'.text.ipc.rt_mutex_release'
	.align	2
	
	.global	rt_mutex_release

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   843  RTM_EXPORT(rt_mutex_take);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   844  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   845  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   846   * This function will release a mutex, if there are threads suspended on mutex,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   847   * it will be waked up.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   848   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   849   * @param mutex the mutex object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   850   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   851   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   852   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   853  rt_err_t rt_mutex_release(rt_mutex_t mutex)
; Function rt_mutex_release
.L323:
rt_mutex_release:	.type	func
	sub.a	a10,#8
.L1029:
	mov.aa	a15,a4
.L1033:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   854  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   855      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   856      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   857      rt_bool_t need_schedule;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   858      rt_uint8_t max_priority_in_queue = RT_THREAD_PRIORITY_MAX - 1;
	mov	d15,#31
	st.b	[a10],d15
.L1407:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   859  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   860      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   861      RT_ASSERT(mutex != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   862      RT_ASSERT(rt_object_get_type(&mutex->parent.parent) == RT_Object_Class_Mutex);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   863  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   864      need_schedule = RT_FALSE;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   865  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   866      /* only thread could release mutex because we need test the ownership */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   867      RT_DEBUG_IN_THREAD_CONTEXT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   868  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   869      /* get current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   870      thread = rt_thread_self();
	mov	d9,#0
	call	rt_thread_self
.L1030:
	mov.aa	a12,a2
.L1035:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   871  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   872      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   873      temp = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1031:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   874  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   875      RT_DEBUG_LOG(RT_DEBUG_IPC,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   876                   ("mutex_release:current thread %s, mutex value: %d, hold: %d\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   877                    thread->name, mutex->value, mutex->hold));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   878  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   879      RT_OBJECT_HOOK_CALL(rt_object_put_hook, (&(mutex->parent.parent)));
	ld.a	a2,rt_object_put_hook
.L1408:
	mov	d8,d2
.L1034:
	jz.a	a2,.L67
.L1409:
	mov.aa	a4,a15
.L1032:
	calli	a2
.L67:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   880  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   881      /* mutex only can be released by owner */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   882      if (thread != mutex->owner)
	ld.a	a2,[a15]32
.L1410:
	jeq.a	a12,a2,.L68
.L1411:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   883      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   884          thread->error = -RT_ERROR;
	mov	d15,#-1
	st.w	[a12]48,d15
.L1412:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   885  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   886          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   887          rt_hw_interrupt_enable(temp);
	mov	d4,d8
	call	rt_cpus_unlock
.L1413:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   888  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   889          return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   890      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   891  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   892      /* decrease hold */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   893      mutex->hold --;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   894      /* if no hold */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   895      if (mutex->hold == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   896      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   897          /* change the owner thread to original priority */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   898          if (mutex->original_priority != mutex->owner->current_priority)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   899          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   900              rt_thread_control(mutex->owner,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   901                                RT_THREAD_CTRL_CHANGE_PRIORITY,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   902                                &(mutex->original_priority));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   903          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   904  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   905          /* wakeup suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   906          if (!rt_list_isempty(&mutex->parent.suspend_thread))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   907          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   908              /* get suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   909              thread = rt_list_entry(mutex->parent.suspend_thread.next,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   910                                     struct rt_thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   911                                     tlist);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   912  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   913              RT_DEBUG_LOG(RT_DEBUG_IPC, ("mutex_release: resume thread: %s\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   914                                          thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   915  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   916              /* set new owner and priority */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   917              mutex->owner             = thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   918              mutex->original_priority = thread->current_priority;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   919  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   920              /* Priority adjustment occurs only when the following conditions
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   921               * are met simultaneously:
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   922               * 1.The type of mutex is RT_IPC_FLAG_FIFO;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   923               * 2.The priority of the thread to be resumed is not equal to the
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   924               *   highest priority in the queue;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   925               */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   926              max_priority_in_queue = rt_ipc_get_highest_priority(&mutex->parent.suspend_thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   927              if (mutex->parent.parent.flag == RT_IPC_FLAG_FIFO &&
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   928                  thread->current_priority != max_priority_in_queue)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   929              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   930                  rt_thread_control(thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   931                          RT_THREAD_CTRL_CHANGE_PRIORITY,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   932                          &(max_priority_in_queue));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   933              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   934  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   935              if(mutex->hold < RT_MUTEX_HOLD_MAX)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   936              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   937                  mutex->hold ++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   938              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   939              else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   940              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   941                  rt_hw_interrupt_enable(temp); /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   942                  return -RT_EFULL; /* value overflowed */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   943              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   944  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   945              /* resume thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   946              rt_ipc_list_resume(&(mutex->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   947  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   948              need_schedule = RT_TRUE;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   949          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   950          else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   951          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   952              if(mutex->value < RT_MUTEX_VALUE_MAX)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   953              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   954                  /* increase value */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   955                  mutex->value ++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   956              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   957              else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   958              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   959                  rt_hw_interrupt_enable(temp); /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   960                  return -RT_EFULL; /* value overflowed */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   961              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   962  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   963              /* clear owner */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   964              mutex->owner             = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   965              mutex->original_priority = 0xff;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   966          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   967      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   968  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   969      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   970      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   971  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   972      /* perform a schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   973      if (need_schedule == RT_TRUE)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   974          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   975  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   976      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   977  }
	mov	d2,#-1
	ret
.L68:
	ld.bu	d0,[a15]31
.L1414:
	add	d0,#-1
	st.b	[a15]31,d0
.L1415:
	ld.bu	d15,[a15]31
.L1416:
	jne	d15,#0,.L70
.L1417:
	ld.a	a4,[a15]32
.L1418:
	ld.bu	d0,[a15]30
.L1419:
	ld.bu	d15,[a4]62
.L1420:
	jeq	d15,d0,.L71
.L1421:
	mov	d4,#2
	lea	a5,[a15]30
	call	rt_thread_control
.L71:
	fcall	.cocofun_4
.L1422:
	jeq.a	a4,a2,.L72
.L1423:
	ld.a	a2,[a15]20
.L1424:
	lea	a4,[a15]20
.L1425:
	lea	a12,[a2]-20
.L1426:
	st.a	[a15]32,a12
.L1427:
	ld.bu	d15,[a12]62
.L1428:
	st.b	[a15]30,d15
.L1429:
	call	rt_ipc_get_highest_priority
.L1430:
	ld.bu	d15,[a15]9
.L1431:
	st.b	[a10],d2
.L1432:
	jne	d15,#0,.L73
.L1433:
	ld.bu	d15,[a12]62
.L1434:
	jeq	d15,d2,.L74
.L1435:
	mov	d4,#2
	mov.aa	a5,a10
	mov.aa	a4,a12
.L1036:
	call	rt_thread_control
.L74:
.L73:
	ld.bu	d0,[a15]31
.L1436:
	mov	d15,#255
.L1437:
	jge.u	d0,d15,.L75
.L1438:
	add	d0,#1
	st.b	[a15]31,d0
.L706:
	fcall	.cocofun_6
.L1037:
	call	rt_thread_resume
.L707:
	mov	d9,#1
	j	.L76
.L72:
	ld.hu	d0,[a15]28
.L1439:
	mov.u	d15,#65535
.L1440:
	jge.u	d0,d15,.L77
.L1441:
	add	d15,d0,#1
	fcall	.cocofun_7
.L1442:
	j	.L78
.L77:
.L75:
	mov	d4,d8
	call	rt_cpus_unlock
.L1443:
	mov	d2,#-3
	ret
.L78:
.L76:
.L70:
	mov	d4,d8
	call	rt_cpus_unlock
.L1444:
	jeq	d9,#0,.L80
.L1445:
	call	rt_schedule
.L80:
	mov	d2,#0
	ret
.L700:
	
__rt_mutex_release_function_end:
	.size	rt_mutex_release,__rt_mutex_release_function_end-rt_mutex_release
.L423:
	; End of function
	
	.sdecl	'.text.ipc.rt_mutex_control',code,cluster('rt_mutex_control')
	.sect	'.text.ipc.rt_mutex_control'
	.align	2
	
	.global	rt_mutex_control

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   978  RTM_EXPORT(rt_mutex_release);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   979  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   980  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   981   * This function can get or set some extra attributions of a mutex object.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   982   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   983   * @param mutex the mutex object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   984   * @param cmd the execution command
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   985   * @param arg the execution argument
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   986   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   987   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   988   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   989  rt_err_t rt_mutex_control(rt_mutex_t mutex, int cmd, void *arg)
; Function rt_mutex_control
.L325:
rt_mutex_control:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   990  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   991      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   992      RT_ASSERT(mutex != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   993      RT_ASSERT(rt_object_get_type(&mutex->parent.parent) == RT_Object_Class_Mutex);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   994  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   995      return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   996  }
	mov	d2,#-1
	ret
.L709:
	
__rt_mutex_control_function_end:
	.size	rt_mutex_control,__rt_mutex_control_function_end-rt_mutex_control
.L428:
	; End of function
	
	.sdecl	'.text.ipc.rt_event_init',code,cluster('rt_event_init')
	.sect	'.text.ipc.rt_event_init'
	.align	2
	
	.global	rt_event_init

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   997  RTM_EXPORT(rt_mutex_control);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   998  #endif /* end of RT_USING_MUTEX */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   999  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1000  #ifdef RT_USING_EVENT
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1001  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1002   * This function will initialize an event and put it under control of resource
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1003   * management.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1004   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1005   * @param event the event object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1006   * @param name the name of event
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1007   * @param flag the flag of event
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1008   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1009   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1010   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1011  rt_err_t rt_event_init(rt_event_t event, const char *name, rt_uint8_t flag)
; Function rt_event_init
.L327:
rt_event_init:	.type	func
	mov	d15,d4
	mov.aa	a15,a4
.L1039:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1012  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1013      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1014      RT_ASSERT(event != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1015  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1016      /* initialize object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1017      rt_object_init(&(event->parent.parent), RT_Object_Class_Event, name);
	mov	d4,#4
	call	rt_object_init
.L1038:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1018  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1019      /* set parent flag */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1020      event->parent.parent.flag = flag;
	st.b	[a15]9,d15
.L718:
	fcall	.cocofun_3
.L719:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1021  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1022      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1023      rt_ipc_object_init(&(event->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1024  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1025      /* initialize event */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1026      event->set = 0;
	mov	d2,#0
	st.w	[a15]28,d2
.L1454:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1027  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1028      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1029  }
	ret
.L713:
	
__rt_event_init_function_end:
	.size	rt_event_init,__rt_event_init_function_end-rt_event_init
.L433:
	; End of function
	
	.sdecl	'.text.ipc.rt_event_detach',code,cluster('rt_event_detach')
	.sect	'.text.ipc.rt_event_detach'
	.align	2
	
	.global	rt_event_detach

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1030  RTM_EXPORT(rt_event_init);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1031  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1032  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1033   * This function will detach an event object from resource management
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1034   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1035   * @param event the event object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1036   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1037   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1038   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1039  rt_err_t rt_event_detach(rt_event_t event)
; Function rt_event_detach
.L329:
rt_event_detach:	.type	func
	fcall	.cocofun_5
.L723:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L84
.L85:
	call	rt_cpus_lock
.L1041:
	mov	d8,d2
	ld.a	a2,[a12]
.L1040:
	fcall	.cocofun_2
.L1042:
	call	rt_thread_resume
.L1043:
	mov	d4,d8
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L84:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a12]
.L1459:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a12,.L85
.L724:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1040  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1041      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1042      RT_ASSERT(event != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1043      RT_ASSERT(rt_object_get_type(&event->parent.parent) == RT_Object_Class_Event);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1044      RT_ASSERT(rt_object_is_systemobject(&event->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1045  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1046      /* resume all suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1047      rt_ipc_list_resume_all(&(event->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1048  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1049      /* detach event object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1050      rt_object_detach(&(event->parent.parent));
	mov.aa	a4,a15
.L1044:
	call	rt_object_detach
.L1045:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1051  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1052      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1053  }
	mov	d2,#0
	ret
.L721:
	
__rt_event_detach_function_end:
	.size	rt_event_detach,__rt_event_detach_function_end-rt_event_detach
.L438:
	; End of function
	
	.sdecl	'.text.ipc.rt_event_send',code,cluster('rt_event_send')
	.sect	'.text.ipc.rt_event_send'
	.align	2
	
	.global	rt_event_send

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1054  RTM_EXPORT(rt_event_detach);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1055  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1056  #ifdef RT_USING_HEAP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1057  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1058   * This function will create an event object from system resource
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1059   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1060   * @param name the name of event
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1061   * @param flag the flag of event
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1062   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1063   * @return the created event, RT_NULL on error happen
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1064   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1065  rt_event_t rt_event_create(const char *name, rt_uint8_t flag)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1066  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1067      rt_event_t event;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1068  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1069      RT_DEBUG_NOT_IN_INTERRUPT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1070  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1071      /* allocate object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1072      event = (rt_event_t)rt_object_allocate(RT_Object_Class_Event, name);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1073      if (event == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1074          return event;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1075  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1076      /* set parent */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1077      event->parent.parent.flag = flag;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1078  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1079      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1080      rt_ipc_object_init(&(event->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1081  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1082      /* initialize event */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1083      event->set = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1084  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1085      return event;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1086  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1087  RTM_EXPORT(rt_event_create);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1088  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1089  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1090   * This function will delete an event object and release the memory
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1091   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1092   * @param event the event object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1093   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1094   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1095   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1096  rt_err_t rt_event_delete(rt_event_t event)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1097  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1098      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1099      RT_ASSERT(event != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1100      RT_ASSERT(rt_object_get_type(&event->parent.parent) == RT_Object_Class_Event);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1101      RT_ASSERT(rt_object_is_systemobject(&event->parent.parent) == RT_FALSE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1102  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1103      RT_DEBUG_NOT_IN_INTERRUPT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1104  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1105      /* resume all suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1106      rt_ipc_list_resume_all(&(event->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1107  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1108      /* delete event object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1109      rt_object_delete(&(event->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1110  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1111      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1112  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1113  RTM_EXPORT(rt_event_delete);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1114  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1115  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1116  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1117   * This function will send an event to the event object, if there are threads
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1118   * suspended on event object, it will be waked up.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1119   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1120   * @param event the event object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1121   * @param set the event set
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1122   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1123   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1124   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1125  rt_err_t rt_event_send(rt_event_t event, rt_uint32_t set)
; Function rt_event_send
.L331:
rt_event_send:	.type	func
	mov	d8,d4
	mov.aa	a15,a4
.L1047:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1126  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1127      struct rt_list_node *n;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1128      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1129      register rt_ubase_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1130      register rt_base_t status;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1131      rt_bool_t need_schedule;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1132  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1133      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1134      RT_ASSERT(event != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1135      RT_ASSERT(rt_object_get_type(&event->parent.parent) == RT_Object_Class_Event);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1136  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1137      if (set == 0)
	jne	d8,#0,.L87
.L1464:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1138          return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1139  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1140      need_schedule = RT_FALSE;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1141  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1142      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1143      level = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1144  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1145      /* set event */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1146      event->set |= set;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1147  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1148      RT_OBJECT_HOOK_CALL(rt_object_put_hook, (&(event->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1149  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1150      if (!rt_list_isempty(&event->parent.suspend_thread))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1151      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1152          /* search thread list to resume thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1153          n = event->parent.suspend_thread.next;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1154          while (n != &(event->parent.suspend_thread))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1155          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1156              /* get thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1157              thread = rt_list_entry(n, struct rt_thread, tlist);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1158  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1159              status = -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1160              if (thread->event_info & RT_EVENT_FLAG_AND)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1161              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1162                  if ((thread->event_set & event->set) == thread->event_set)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1163                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1164                      /* received an AND event */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1165                      status = RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1166                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1167              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1168              else if (thread->event_info & RT_EVENT_FLAG_OR)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1169              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1170                  if (thread->event_set & event->set)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1171                  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1172                      /* save the received event set */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1173                      thread->event_set = thread->event_set & event->set;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1174  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1175                      /* received an OR event */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1176                      status = RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1177                  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1178              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1179              else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1180              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1181                  /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1182                  rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1183  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1184                  return -RT_EINVAL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1185              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1186  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1187              /* move node to the next */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1188              n = n->next;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1189  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1190              /* condition is satisfied, resume thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1191              if (status == RT_EOK)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1192              {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1193                  /* clear event */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1194                  if (thread->event_info & RT_EVENT_FLAG_CLEAR)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1195                      event->set &= ~thread->event_set;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1196  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1197                  /* resume thread, and thread list breaks out */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1198                  rt_thread_resume(thread);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1199  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1200                  /* need do a scheduling */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1201                  need_schedule = RT_TRUE;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1202              }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1203          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1204      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1205  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1206      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1207      rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1208  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1209      /* do a schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1210      if (need_schedule == RT_TRUE)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1211          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1212  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1213      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1214  }
	mov	d2,#-1
	ret
.L87:
	mov	d9,#0
	call	rt_cpus_lock
.L1046:
	ld.w	d15,[a15]28
.L1465:
	mov	d10,d2
.L1051:
	or	d8,d15
	st.w	[a15]28,d8
.L1048:
	ld.a	a2,rt_object_put_hook
	jz.a	a2,.L89
	mov.aa	a4,a15
.L1050:
	calli	a2
.L89:
	fcall	.cocofun_4
.L1049:
	jeq.a	a4,a2,.L90
.L1466:
	ld.a	a12,[a15]20
.L1052:
	j	.L91
.L92:
	mov	d0,#-1
	ld.bu	d15,[a12]52
.L1053:
	lea	a4,[a12]-20
.L1055:
	jz.t	d15:0,.L93
.L1467:
	ld.w	d15,[a12]48
.L1468:
	ld.w	d1,[a15]28
.L1469:
	and	d1,d15
.L1470:
	jne	d15,d1,.L94
.L1471:
	j	.L95
.L93:
	jz.t	d15:1,.L96
.L1472:
	ld.w	d1,[a12]48
.L1473:
	ld.w	d15,[a15]28
.L1474:
	and	d15,d1
.L1475:
	jeq	d15,#0,.L97
.L1476:
	st.w	[a12]48,d15
.L95:
	mov	d0,#0
	j	.L98
.L96:
	mov	d4,d10
	call	rt_cpus_unlock
.L1054:
	mov	d2,#-10
	ret
.L98:
.L97:
.L94:
	ld.a	a12,[a12]
.L1477:
	jne	d0,#0,.L100
.L1478:
	ld.bu	d15,[a4]72
.L1479:
	jz.t	d15:2,.L101
.L1480:
	mov	d1,#-1
	ld.w	d0,[a4]68
.L1056:
	ld.w	d15,[a15]28
.L1481:
	xor	d0,d1
.L1482:
	and	d15,d0
	st.w	[a15]28,d15
.L101:
	call	rt_thread_resume
.L1057:
	mov	d9,#1
.L100:
.L91:
	lea	a2,[a15]20
.L1483:
	jne.a	a12,a2,.L92
.L90:
	mov	d4,d10
	call	rt_cpus_unlock
.L1484:
	jeq	d9,#0,.L102
.L1485:
	call	rt_schedule
.L102:
	mov	d2,#0
	ret
.L728:
	
__rt_event_send_function_end:
	.size	rt_event_send,__rt_event_send_function_end-rt_event_send
.L443:
	; End of function
	
	.sdecl	'.text.ipc.rt_event_recv',code,cluster('rt_event_recv')
	.sect	'.text.ipc.rt_event_recv'
	.align	2
	
	.global	rt_event_recv

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1215  RTM_EXPORT(rt_event_send);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1216  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1217  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1218   * This function will receive an event from event object, if the event is
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1219   * unavailable, the thread shall wait for a specified time.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1220   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1221   * @param event the fast event object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1222   * @param set the interested event set
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1223   * @param option the receive option, either RT_EVENT_FLAG_AND or
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1224   *        RT_EVENT_FLAG_OR should be set.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1225   * @param timeout the waiting time
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1226   * @param recved the received event, if you don't care, RT_NULL can be set.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1227   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1228   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1229   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1230  rt_err_t rt_event_recv(rt_event_t   event,
; Function rt_event_recv
.L333:
rt_event_recv:	.type	func
	mov	e8,d5,d4
	sub.a	a10,#8
.L1058:
	st.w	[a10],d6
	mov.aa	a15,a4
.L1084:
	mov.aa	a12,a5
.L1060:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1231                         rt_uint32_t  set,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1232                         rt_uint8_t   option,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1233                         rt_int32_t   timeout,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1234                         rt_uint32_t *recved)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1235  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1236      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1237      register rt_ubase_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1238      register rt_base_t status;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1239  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1240      RT_DEBUG_IN_THREAD_CONTEXT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1241  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1242      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1243      RT_ASSERT(event != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1244      RT_ASSERT(rt_object_get_type(&event->parent.parent) == RT_Object_Class_Event);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1245  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1246      if (set == 0)
	jne	d8,#0,.L104
.L1061:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1247          return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1248  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1249      /* initialize status */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1250      status = -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1251      /* get current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1252      thread = rt_thread_self();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1253      /* reset thread error */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1254      thread->error = RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1255  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1256      RT_OBJECT_HOOK_CALL(rt_object_trytake_hook, (&(event->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1257  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1258      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1259      level = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1260  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1261      /* check event set */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1262      if (option & RT_EVENT_FLAG_AND)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1263      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1264          if ((event->set & set) == set)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1265              status = RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1266      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1267      else if (option & RT_EVENT_FLAG_OR)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1268      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1269          if (event->set & set)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1270              status = RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1271      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1272      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1273      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1274          /* either RT_EVENT_FLAG_AND or RT_EVENT_FLAG_OR should be set */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1275          RT_ASSERT(0);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1276      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1277  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1278      if (status == RT_EOK)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1279      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1280          /* set received event */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1281          if (recved)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1282              *recved = (event->set & set);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1283  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1284          /* fill thread event info */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1285          thread->event_set = (event->set & set);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1286          thread->event_info = option;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1287  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1288          /* received event */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1289          if (option & RT_EVENT_FLAG_CLEAR)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1290              event->set &= ~set;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1291      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1292      else if (timeout == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1293      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1294          /* no waiting */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1295          thread->error = -RT_ETIMEOUT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1296  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1297          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1298          rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1299  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1300          return -RT_ETIMEOUT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1301      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1302      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1303      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1304          /* fill thread event info */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1305          thread->event_set  = set;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1306          thread->event_info = option;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1307  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1308          /* put thread to suspended thread list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1309          rt_ipc_list_suspend(&(event->parent.suspend_thread),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1310                              thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1311                              event->parent.parent.flag);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1312  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1313          /* if there is a waiting timeout, active thread timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1314          if (timeout > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1315          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1316              /* reset the timeout of thread timer and start it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1317              rt_timer_control(&(thread->thread_timer),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1318                               RT_TIMER_CTRL_SET_TIME,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1319                               &timeout);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1320              rt_timer_start(&(thread->thread_timer));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1321          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1322  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1323          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1324          rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1325  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1326          /* do a schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1327          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1328  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1329          if (thread->error != RT_EOK)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1330          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1331              /* return error */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1332              return thread->error;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1333          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1334  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1335          /* received an event, disable interrupt to protect */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1336          level = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1337  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1338          /* set received event */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1339          if (recved)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1340              *recved = thread->event_set;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1341      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1342  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1343      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1344      rt_hw_interrupt_enable(level);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1345  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1346      RT_OBJECT_HOOK_CALL(rt_object_take_hook, (&(event->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1347  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1348      return thread->error;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1349  }
	mov	d2,#-1
	ret
.L104:
	mov	d10,#-1
	call	rt_thread_self
.L1059:
	mov.aa	a13,a2
.L1086:
	mov	d15,#0
	st.w	[a13]48,d15
.L1490:
	ld.a	a2,rt_object_trytake_hook
.L1062:
	jz.a	a2,.L106
	mov.aa	a4,a15
.L1063:
	calli	a2
.L106:
	call	rt_cpus_lock
.L1064:
	mov	d11,d2
.L1066:
	jz.t	d9:0,.L107
.L1067:
	ld.w	d15,[a15]28
.L1068:
	and	d0,d15,d8
.L1491:
	jne	d0,d8,.L108
.L1069:
	j	.L109
.L107:
	jz.t	d9:1,.L110
.L1070:
	ld.w	d15,[a15]28
.L1071:
	and	d0,d15,d8
.L1072:
	jeq	d0,#0,.L111
.L109:
	mov	d10,#0
.L111:
.L110:
.L108:
	jne	d10,#0,.L112
.L1492:
	jz.a	a12,.L113
.L1493:
	ld.w	d15,[a15]28
.L1073:
	and	d15,d8
	st.w	[a12],d15
.L113:
	ld.w	d15,[a15]28
.L1074:
	and	d15,d8
	st.w	[a13]68,d15
.L1075:
	st.b	[a13]72,d9
.L1494:
	jz.t	d9:2,.L114
.L1076:
	mov	d0,#-1
	ld.w	d15,[a15]28
.L1495:
	xor	d8,d0
.L1496:
	and	d15,d8
	st.w	[a15]28,d15
.L1497:
	j	.L115
.L112:
	ld.w	d15,[a10]
.L1498:
	jne	d15,#0,.L116
.L1499:
	mov	d15,#-2
	st.w	[a13]48,d15
.L1500:
	mov	d4,d11
	call	rt_cpus_unlock
.L1065:
	mov	d2,#-2
	ret
.L116:
	st.w	[a13]68,d8
.L1077:
	st.b	[a13]72,d9
.L1078:
	lea	a14,[a15]20
.L1501:
	ld.bu	d15,[a15]9
.L746:
	mov.aa	a4,a13
.L1079:
	call	rt_thread_suspend
.L1502:
	fcall	.cocofun_1
.L747:
	ld.w	d15,[a10]
.L1503:
	jlt	d15,#1,.L126
.L1504:
	lea	a4,[a13]84
.L1505:
	mov	d4,#0
	mov.aa	a5,a10
	call	rt_timer_control
.L1506:
	lea	a4,[a13]84
	call	rt_timer_start
.L126:
	mov	d4,d11
	call	rt_cpus_unlock
.L1507:
	call	rt_schedule
.L1508:
	ld.w	d15,[a13]48
.L1509:
	jne	d15,#0,.L127
.L1510:
	call	rt_cpus_lock
.L1085:
	mov	d11,d2
	jz.a	a12,.L128
.L1087:
	ld.w	d15,[a13]68
.L1511:
	st.w	[a12],d15
.L128:
.L115:
.L114:
	mov	d4,d11
	call	rt_cpus_unlock
.L1512:
	ld.a	a2,rt_object_take_hook
	jz.a	a2,.L129
	mov.aa	a4,a15
.L1088:
	calli	a2
.L129:
.L127:
	ld.w	d2,[a13]48
.L1513:
	ret
.L736:
	
__rt_event_recv_function_end:
	.size	rt_event_recv,__rt_event_recv_function_end-rt_event_recv
.L448:
	; End of function
	
	.sdecl	'.text.ipc.rt_event_control',code,cluster('rt_event_control')
	.sect	'.text.ipc.rt_event_control'
	.align	2
	
	.global	rt_event_control

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1350  RTM_EXPORT(rt_event_recv);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1351  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1352  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1353   * This function can get or set some extra attributions of an event object.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1354   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1355   * @param event the event object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1356   * @param cmd the execution command
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1357   * @param arg the execution argument
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1358   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1359   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1360   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1361  rt_err_t rt_event_control(rt_event_t event, int cmd, void *arg)
; Function rt_event_control
.L335:
rt_event_control:	.type	func
	mov.aa	a15,a4
.L1090:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1362  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1363      rt_ubase_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1364  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1365      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1366      RT_ASSERT(event != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1367      RT_ASSERT(rt_object_get_type(&event->parent.parent) == RT_Object_Class_Event);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1368  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1369      if (cmd == RT_IPC_CMD_RESET)
	jne	d4,#1,.L131
.L1518:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1370      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1371          /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1372          level = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1089:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1373  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1374          /* resume all waiting thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1375          rt_ipc_list_resume_all(&event->parent.suspend_thread);
	mov	d8,d2
	lea	a12,[a15]20
.L756:
	mov	d15,#-1

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L132
.L133:
	call	rt_cpus_lock
.L1092:
	mov	d9,d2
	ld.a	a2,[a12]
.L1091:
	fcall	.cocofun_2
.L1093:
	call	rt_thread_resume
.L1094:
	mov	d4,d9
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L132:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a12]
.L1519:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a12,.L133
.L757:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1376  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1377          /* initialize event set */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1378          event->set = 0;
	mov	d15,#0
	st.w	[a15]28,d15
.L1520:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1379  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1380          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1381          rt_hw_interrupt_enable(level);
	mov	d4,d8
	call	rt_cpus_unlock
.L1521:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1382  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1383          rt_schedule();
	call	rt_schedule
.L1522:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1384  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1385          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1386      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1387  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1388      return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1389  }
	mov	d2,#0
	ret
.L131:
	mov	d2,#-1
	ret
.L751:
	
__rt_event_control_function_end:
	.size	rt_event_control,__rt_event_control_function_end-rt_event_control
.L453:
	; End of function
	
	.sdecl	'.text.ipc.rt_mb_init',code,cluster('rt_mb_init')
	.sect	'.text.ipc.rt_mb_init'
	.align	2
	
	.global	rt_mb_init

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1390  RTM_EXPORT(rt_event_control);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1391  #endif /* end of RT_USING_EVENT */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1392  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1393  #ifdef RT_USING_MAILBOX
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1394  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1395   * This function will initialize a mailbox and put it under control of resource
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1396   * management.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1397   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1398   * @param mb the mailbox object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1399   * @param name the name of mailbox
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1400   * @param msgpool the begin address of buffer to save received mail
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1401   * @param size the size of mailbox
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1402   * @param flag the flag of mailbox
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1403   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1404   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1405   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1406  rt_err_t rt_mb_init(rt_mailbox_t mb,
; Function rt_mb_init
.L337:
rt_mb_init:	.type	func
	mov	d8,d4
	mov.aa	a15,a4
.L1097:
	mov	d15,d5
	mov.aa	a12,a6
.L1096:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1407                      const char  *name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1408                      void        *msgpool,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1409                      rt_size_t    size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1410                      rt_uint8_t   flag)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1411  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1412      RT_ASSERT(mb != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1413  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1414      /* initialize object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1415      rt_object_init(&(mb->parent.parent), RT_Object_Class_MailBox, name);
	mov	d4,#5
	call	rt_object_init
.L1095:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1416  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1417      /* set parent flag */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1418      mb->parent.parent.flag = flag;
	st.b	[a15]9,d15
.L768:
	fcall	.cocofun_3
.L769:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1419  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1420      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1421      rt_ipc_object_init(&(mb->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1422  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1423      /* initialize mailbox */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1424      mb->msg_pool   = (rt_ubase_t *)msgpool;
	st.a	[a15]28,a12
.L1527:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1425      mb->size       = size;
	st.h	[a15]32,d8
.L1528:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1426      mb->entry      = 0;
	mov	d2,#0
	st.h	[a15]34,d2
.L1529:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1427      mb->in_offset  = 0;
	st.h	[a15]36,d2
.L1530:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1428      mb->out_offset = 0;
	st.h	[a15]38,d2
.L1531:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1429  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1430      /* initialize an additional list of sender suspend thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1431      rt_list_init(&(mb->suspend_sender_thread));
	lea	a2,[a15]40
.L772:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
	st.a	[a15]44,a2
.L1532:
	st.a	[a2],a2
.L773:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1432  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1433      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1434  }
	ret
.L761:
	
__rt_mb_init_function_end:
	.size	rt_mb_init,__rt_mb_init_function_end-rt_mb_init
.L458:
	; End of function
	
	.sdecl	'.text.ipc.rt_mb_detach',code,cluster('rt_mb_detach')
	.sect	'.text.ipc.rt_mb_detach'
	.align	2
	
	.global	rt_mb_detach

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1435  RTM_EXPORT(rt_mb_init);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1436  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1437  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1438   * This function will detach a mailbox from resource management
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1439   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1440   * @param mb the mailbox object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1441   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1442   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1443   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1444  rt_err_t rt_mb_detach(rt_mailbox_t mb)
; Function rt_mb_detach
.L339:
rt_mb_detach:	.type	func
	mov.aa	a12,a4
.L1098:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1445  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1446      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1447      RT_ASSERT(mb != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1448      RT_ASSERT(rt_object_get_type(&mb->parent.parent) == RT_Object_Class_MailBox);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1449      RT_ASSERT(rt_object_is_systemobject(&mb->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1450  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1451      /* resume all suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1452      rt_ipc_list_resume_all(&(mb->parent.suspend_thread));
	lea	a15,[a12]20
.L779:
	mov	d15,#-1

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L137
.L138:
	call	rt_cpus_lock
.L1100:
	mov	d8,d2
	ld.a	a2,[a15]
.L1099:
	fcall	.cocofun_2
.L1101:
	call	rt_thread_resume
.L1103:
	mov	d4,d8
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L137:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a15]
.L1537:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a15,.L138
.L780:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1453      /* also resume all mailbox private suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1454      rt_ipc_list_resume_all(&(mb->suspend_sender_thread));
	lea	a15,[a12]40
.L784:
	mov	d15,#-1

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L139
.L140:
	call	rt_cpus_lock
.L1104:
	mov	d8,d2
	ld.a	a2,[a15]
.L1102:
	fcall	.cocofun_2
.L1105:
	call	rt_thread_resume
.L1106:
	mov	d4,d8
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L139:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a15]
.L1538:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a15,.L140
.L785:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1455  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1456      /* detach mailbox object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1457      rt_object_detach(&(mb->parent.parent));
	mov.aa	a4,a12
.L1107:
	call	rt_object_detach
.L1108:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1458  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1459      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1460  }
	mov	d2,#0
	ret
.L777:
	
__rt_mb_detach_function_end:
	.size	rt_mb_detach,__rt_mb_detach_function_end-rt_mb_detach
.L463:
	; End of function
	
	.sdecl	'.text.ipc.rt_mb_send_wait',code,cluster('rt_mb_send_wait')
	.sect	'.text.ipc.rt_mb_send_wait'
	.align	2
	
	.global	rt_mb_send_wait

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1461  RTM_EXPORT(rt_mb_detach);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1462  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1463  #ifdef RT_USING_HEAP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1464  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1465   * This function will create a mailbox object from system resource
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1466   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1467   * @param name the name of mailbox
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1468   * @param size the size of mailbox
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1469   * @param flag the flag of mailbox
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1470   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1471   * @return the created mailbox, RT_NULL on error happen
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1472   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1473  rt_mailbox_t rt_mb_create(const char *name, rt_size_t size, rt_uint8_t flag)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1474  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1475      rt_mailbox_t mb;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1476  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1477      RT_DEBUG_NOT_IN_INTERRUPT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1478  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1479      /* allocate object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1480      mb = (rt_mailbox_t)rt_object_allocate(RT_Object_Class_MailBox, name);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1481      if (mb == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1482          return mb;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1483  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1484      /* set parent */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1485      mb->parent.parent.flag = flag;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1486  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1487      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1488      rt_ipc_object_init(&(mb->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1489  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1490      /* initialize mailbox */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1491      mb->size     = size;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1492      mb->msg_pool = (rt_ubase_t *)RT_KERNEL_MALLOC(mb->size * sizeof(rt_ubase_t));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1493      if (mb->msg_pool == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1494      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1495          /* delete mailbox object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1496          rt_object_delete(&(mb->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1497  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1498          return RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1499      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1500      mb->entry      = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1501      mb->in_offset  = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1502      mb->out_offset = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1503  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1504      /* initialize an additional list of sender suspend thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1505      rt_list_init(&(mb->suspend_sender_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1506  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1507      return mb;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1508  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1509  RTM_EXPORT(rt_mb_create);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1510  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1511  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1512   * This function will delete a mailbox object and release the memory
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1513   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1514   * @param mb the mailbox object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1515   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1516   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1517   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1518  rt_err_t rt_mb_delete(rt_mailbox_t mb)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1519  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1520      RT_DEBUG_NOT_IN_INTERRUPT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1521  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1522      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1523      RT_ASSERT(mb != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1524      RT_ASSERT(rt_object_get_type(&mb->parent.parent) == RT_Object_Class_MailBox);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1525      RT_ASSERT(rt_object_is_systemobject(&mb->parent.parent) == RT_FALSE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1526  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1527      /* resume all suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1528      rt_ipc_list_resume_all(&(mb->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1529  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1530      /* also resume all mailbox private suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1531      rt_ipc_list_resume_all(&(mb->suspend_sender_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1532  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1533      /* free mailbox pool */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1534      RT_KERNEL_FREE(mb->msg_pool);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1535  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1536      /* delete mailbox object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1537      rt_object_delete(&(mb->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1538  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1539      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1540  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1541  RTM_EXPORT(rt_mb_delete);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1542  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1543  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1544  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1545   * This function will send a mail to mailbox object. If the mailbox is full,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1546   * current thread will be suspended until timeout.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1547   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1548   * @param mb the mailbox object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1549   * @param value the mail
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1550   * @param timeout the waiting time
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1551   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1552   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1553   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1554  rt_err_t rt_mb_send_wait(rt_mailbox_t mb,
; Function rt_mb_send_wait
.L341:
rt_mb_send_wait:	.type	func
	sub.a	a10,#8
.L1109:
	mov.aa	a12,a4
.L1111:
	mov	d8,d4
	st.w	[a10],d5
.L1112:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1555                           rt_ubase_t   value,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1556                           rt_int32_t   timeout)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1557  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1558      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1559      register rt_ubase_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1560      rt_uint32_t tick_delta;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1561  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1562      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1563      RT_ASSERT(mb != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1564      RT_ASSERT(rt_object_get_type(&mb->parent.parent) == RT_Object_Class_MailBox);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1565  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1566      /* initialize delta tick */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1567      tick_delta = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1568      /* get current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1569      thread = rt_thread_self();
	mov	d9,#0
	call	rt_thread_self
.L1110:
	mov.aa	a13,a2
.L1115:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1570  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1571      RT_OBJECT_HOOK_CALL(rt_object_put_hook, (&(mb->parent.parent)));
	ld.a	a2,rt_object_put_hook
.L1113:
	jz.a	a2,.L142
	mov.aa	a4,a12
.L1116:
	calli	a2
.L142:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1572  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1573      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1574      temp = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1117:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1575  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1576      /* for non-blocking call */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1577      if (mb->entry == mb->size && timeout == 0)
	mov	d10,d2
	ld.hu	d15,[a12]32
.L1118:
	ld.hu	d0,[a12]34
.L1547:
	jne	d15,d0,.L143
.L1548:
	ld.w	d1,[a10]
.L1549:
	jeq	d1,#0,.L144
.L143:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1578      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1579          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1580          return -RT_EFULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1581      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1582  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1583      /* mailbox is full */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1584      while (mb->entry == mb->size)
	jne	d15,d0,.L145
.L1550:
	mov	d11,#0
.L146:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1585      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1586          /* reset error number in thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1587          thread->error = RT_EOK;
	st.w	[a13]48,d11
.L1551:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1588  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1589          /* no waiting, return timeout */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1590          if (timeout == 0)
	ld.w	d0,[a10]
.L1552:
	jeq	d0,#0,.L147
.L1553:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1591          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1592              /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1593              rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1594  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1595              return -RT_EFULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1596          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1597  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1598          RT_DEBUG_IN_THREAD_CONTEXT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1599          /* suspend current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1600          rt_ipc_list_suspend(&(mb->suspend_sender_thread),
	lea	a14,[a12]40
.L1554:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1601                              thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1602                              mb->parent.parent.flag);
	ld.bu	d15,[a12]9
.L798:
	mov.aa	a4,a13
.L1120:
	call	rt_thread_suspend
.L1121:
	jeq	d15,#0,.L148
.L1555:
	jne	d15,#1,.L150
.L802:
	ld.a	a2,[a14]
.L1122:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
	j	.L151
.L152:
	ld.bu	d0,[a13]62
.L1556:
	ld.bu	d1,[a2]42
.L1557:
	lea	a15,[a2]-20
.L1123:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
	jge.u	d0,d1,.L153
.L805:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	ld.a	a5,[a15]24
.L806:
	lea	a4,[a13]20
.L810:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	st.a	[a5],a4
.L1558:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	ld.a	a5,[a15]24
.L1559:
	st.a	[a13]24,a5
.L1560:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a15]24,a4
.L1561:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a4],a2
.L811:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   113                      break;      (inlined)
	j	.L154

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
.L153:
	ld.a	a2,[a2]

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
.L151:
	jne.a	a2,a14,.L152

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L154:
	jne.a	a2,a14,.L155

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    94      case RT_IPC_FLAG_FIFO:      (inlined)
.L148:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	ld.a	a15,[a12]44
.L812:
	lea	a2,[a13]20
.L814:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	st.a	[a15],a2
.L1562:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	ld.a	a15,[a12]44
.L1563:
	st.a	[a13]24,a15
.L1564:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a12]44,a2
.L1565:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a2],a14

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L155:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   126      default:      (inlined)
.L150:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1603  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1604          /* has waiting time, start thread timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1605          if (timeout > 0)
	ld.w	d15,[a10]
.L1566:
	jlt	d15,#1,.L156
.L1567:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1606          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1607              /* get the start tick of timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1608              tick_delta = rt_tick_get();
	call	rt_tick_get
.L1114:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1609  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1610              RT_DEBUG_LOG(RT_DEBUG_IPC, ("mb_send_wait: start timer of thread:%s\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1611                                          thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1612  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1613              /* reset the timeout of thread timer and start it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1614              rt_timer_control(&(thread->thread_timer),
	mov	d9,d2
	lea	a4,[a13]84
.L1125:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1615                               RT_TIMER_CTRL_SET_TIME,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1616                               &timeout);
	mov	d4,#0
	mov.aa	a5,a10
	call	rt_timer_control
.L1124:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1617              rt_timer_start(&(thread->thread_timer));
	lea	a4,[a13]84
	call	rt_timer_start
.L156:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1618          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1619  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1620          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1621          rt_hw_interrupt_enable(temp);
	mov	d4,d10
	call	rt_cpus_unlock
.L1568:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1622  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1623          /* re-schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1624          rt_schedule();
	call	rt_schedule
.L1569:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1625  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1626          /* resume from suspend state */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1627          if (thread->error != RT_EOK)
	ld.w	d2,[a13]48
.L1570:
	jne	d2,#0,.L158
.L1571:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1628          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1629              /* return error */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1630              return thread->error;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1631          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1632  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1633          /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1634          temp = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1119:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1635  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1636          /* if it's not waiting forever and then re-calculate timeout tick */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1637          if (timeout > 0)
	mov	d10,d2
	ld.w	d15,[a10]
.L1127:
	jlt	d15,#1,.L159
.L1572:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1638          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1639              tick_delta = rt_tick_get() - tick_delta;
	call	rt_tick_get
.L1126:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1640              timeout -= tick_delta;
	sub	d9,d2,d9
	ld.w	d15,[a10]
.L1573:
	sub	d15,d9
.L1574:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1641              if (timeout < 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1642                  timeout = 0;
	max	d15,d15,#0
	st.w	[a10],d15
.L159:
	ld.hu	d15,[a12]34
.L1575:
	ld.hu	d0,[a12]32
.L1576:
	jeq	d15,d0,.L146
.L145:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1643          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1644      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1645  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1646      /* set ptr */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1647      mb->msg_pool[mb->in_offset] = value;
	ld.a	a15,[a12]28
.L1577:
	ld.hu	d15,[a12]36
.L1578:
	addsc.a	a15,a15,d15,#2
.L1579:
	st.w	[a15],d8
.L1580:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1648      /* increase input offset */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1649      ++ mb->in_offset;
	ld.hu	d15,[a12]36
.L1581:
	add	d15,#1
	st.h	[a12]36,d15
.L1582:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1650      if (mb->in_offset >= mb->size)
	ld.hu	d15,[a12]36
.L1583:
	ld.hu	d0,[a12]32
.L1584:
	jlt.u	d15,d0,.L160
.L1585:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1651          mb->in_offset = 0;
	mov	d15,#0
	st.h	[a12]36,d15
.L160:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1652  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1653      if(mb->entry < RT_MB_ENTRY_MAX)
	ld.hu	d15,[a12]34
.L1586:
	mov.u	d0,#65535
.L1587:
	jge.u	d15,d0,.L161
.L1588:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1654      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1655          /* increase message entry */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1656          mb->entry ++;
	add	d15,#1
	st.h	[a12]34,d15
.L1589:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1657      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1658      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1659      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1660          rt_hw_interrupt_enable(temp); /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1661          return -RT_EFULL; /* value overflowed */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1662      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1663  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1664      /* resume suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1665      if (!rt_list_isempty(&mb->parent.suspend_thread))
	lea	a15,[a12]20
.L1590:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a15]
.L1591:
	jeq.a	a2,a15,.L162
.L815:
	ld.a	a15,[a12]20
	lea	a4,[a15]-20
	call	rt_thread_resume
.L816:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1666      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1667          rt_ipc_list_resume(&(mb->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1668  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1669          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1670          rt_hw_interrupt_enable(temp);
	mov	d4,d10
	call	rt_cpus_unlock
.L1592:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1671  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1672          rt_schedule();
	call	rt_schedule
.L1593:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1673  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1674          return RT_EOK;
	j	.L163
.L161:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1675      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1676  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1677      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1678      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1679  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1680      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1681  }
.L147:
.L144:
	mov	d4,d10
	call	rt_cpus_unlock
.L1594:
	mov	d2,#-3
.L158:
	ret
.L162:
	mov	d4,d10
	call	rt_cpus_unlock
.L163:
	mov	d2,#0
	ret
.L791:
	
__rt_mb_send_wait_function_end:
	.size	rt_mb_send_wait,__rt_mb_send_wait_function_end-rt_mb_send_wait
.L473:
	; End of function
	
	.sdecl	'.text.ipc.rt_mb_send',code,cluster('rt_mb_send')
	.sect	'.text.ipc.rt_mb_send'
	.align	2
	
	.global	rt_mb_send

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1682  RTM_EXPORT(rt_mb_send_wait);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1683  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1684  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1685   * This function will send a mail to mailbox object, if there are threads
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1686   * suspended on mailbox object, it will be waked up. This function will return
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1687   * immediately, if you want blocking send, use rt_mb_send_wait instead.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1688   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1689   * @param mb the mailbox object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1690   * @param value the mail
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1691   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1692   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1693   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1694  rt_err_t rt_mb_send(rt_mailbox_t mb, rt_ubase_t value)
; Function rt_mb_send
.L343:
rt_mb_send:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1695  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1696      return rt_mb_send_wait(mb, value, 0);
	mov	d5,#0
	j	rt_mb_send_wait
.L788:
	
__rt_mb_send_function_end:
	.size	rt_mb_send,__rt_mb_send_function_end-rt_mb_send
.L468:
	; End of function
	
	.sdecl	'.text.ipc.rt_mb_urgent',code,cluster('rt_mb_urgent')
	.sect	'.text.ipc.rt_mb_urgent'
	.align	2
	
	.global	rt_mb_urgent

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1697  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1698  RTM_EXPORT(rt_mb_send);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1699  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1700  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1701   * This function will send an urgent mail to mailbox object, if there are threads
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1702   * suspended on mailbox object, it will be waked up. This function will return
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1703   * immediately.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1704   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1705   * @param mb the mailbox object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1706   * @param value the mail
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1707   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1708   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1709   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1710  rt_err_t rt_mb_urgent(rt_mailbox_t mb, rt_ubase_t value)
; Function rt_mb_urgent
.L345:
rt_mb_urgent:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1711  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1712      register rt_ubase_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1713  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1714      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1715      RT_ASSERT(mb != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1716      RT_ASSERT(rt_object_get_type(&mb->parent.parent) == RT_Object_Class_MailBox);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1717  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1718      RT_OBJECT_HOOK_CALL(rt_object_put_hook, (&(mb->parent.parent)));
	ld.a	a2,rt_object_put_hook
.L1821:
	mov	d8,d4
	mov.aa	a15,a4
.L1128:
	jz.a	a2,.L167
.L1822:
	calli	a2
.L167:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1719  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1720      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1721      temp = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1130:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1722  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1723      if (mb->entry == mb->size)
	mov	d9,d2
	ld.hu	d0,[a15]32
.L1132:
	ld.hu	d15,[a15]34
.L1823:
	jne	d15,d0,.L168
.L1824:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1724      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1725          rt_hw_interrupt_enable(temp);
	mov	d4,d9
	call	rt_cpus_unlock
.L1131:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1726          return -RT_EFULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1727      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1728  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1729      /* rewind to the previous position */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1730      if (mb->out_offset > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1731      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1732          mb->out_offset --;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1733      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1734      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1735      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1736          mb->out_offset = mb->size - 1;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1737      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1738  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1739      /* set ptr */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1740      mb->msg_pool[mb->out_offset] = value;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1741  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1742      /* increase message entry */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1743      mb->entry ++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1744  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1745      /* resume suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1746      if (!rt_list_isempty(&mb->parent.suspend_thread))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1747      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1748          rt_ipc_list_resume(&(mb->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1749  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1750          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1751          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1752  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1753          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1754  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1755          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1756      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1757  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1758      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1759      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1760  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1761      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1762  }
	mov	d2,#-3
	ret
.L168:
	ld.hu	d15,[a15]38
.L1825:
	jeq	d15,#0,.L170
.L1826:
	add	d15,#-1
	st.h	[a15]38,d15
.L1827:
	j	.L171
.L170:
	add	d0,#-1
	st.h	[a15]38,d0
.L171:
	ld.a	a2,[a15]28
.L1828:
	ld.hu	d15,[a15]38
.L1829:
	addsc.a	a2,a2,d15,#2
.L1830:
	st.w	[a2],d8
.L1831:
	ld.hu	d15,[a15]34
.L1832:
	add	d15,#1
	st.h	[a15]34,d15
.L1129:
	fcall	.cocofun_4
.L1133:
	jeq.a	a4,a2,.L172
.L967:
	fcall	.cocofun_6
.L1134:
	call	rt_thread_resume
.L968:
	mov	d4,d9
	call	rt_cpus_unlock
.L1833:
	call	rt_schedule
.L1834:
	j	.L173
.L172:
	mov	d4,d9
	call	rt_cpus_unlock
.L173:
	mov	d2,#0
	ret
.L963:
	
__rt_mb_urgent_function_end:
	.size	rt_mb_urgent,__rt_mb_urgent_function_end-rt_mb_urgent
.L528:
	; End of function
	
	.sdecl	'.text.ipc.rt_mb_recv',code,cluster('rt_mb_recv')
	.sect	'.text.ipc.rt_mb_recv'
	.align	2
	
	.global	rt_mb_recv

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1763  RTM_EXPORT(rt_mb_urgent);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1764  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1765  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1766   * This function will receive a mail from mailbox object, if there is no mail
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1767   * in mailbox object, the thread shall wait for a specified time.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1768   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1769   * @param mb the mailbox object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1770   * @param value the received mail will be saved in
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1771   * @param timeout the waiting time
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1772   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1773   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1774   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1775  rt_err_t rt_mb_recv(rt_mailbox_t mb, rt_ubase_t *value, rt_int32_t timeout)
; Function rt_mb_recv
.L347:
rt_mb_recv:	.type	func
	sub.a	a10,#8
.L1135:
	mov.aa	a12,a4
.L1143:
	mov.aa	a13,a5
.L1150:
	st.w	[a10],d4
.L1599:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1776  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1777      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1778      register rt_ubase_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1779      rt_uint32_t tick_delta;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1780  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1781      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1782      RT_ASSERT(mb != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1783      RT_ASSERT(rt_object_get_type(&mb->parent.parent) == RT_Object_Class_MailBox);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1784  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1785      /* initialize delta tick */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1786      tick_delta = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1787      /* get current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1788      thread = rt_thread_self();
	mov	d8,#0
	call	rt_thread_self
.L1136:
	mov.aa	a14,a2
.L1148:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1789  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1790      RT_OBJECT_HOOK_CALL(rt_object_trytake_hook, (&(mb->parent.parent)));
	ld.a	a2,rt_object_trytake_hook
.L1137:
	jz.a	a2,.L175
	mov.aa	a4,a12
.L1138:
	calli	a2
.L175:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1791  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1792      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1793      temp = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1139:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1794  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1795      /* for non-blocking call */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1796      if (mb->entry == 0 && timeout == 0)
	mov	d9,d2
	ld.hu	d15,[a12]34
.L1146:
	jne	d15,#0,.L176
.L1600:
	ld.w	d15,[a10]
.L1601:
	jne	d15,#0,.L177
.L1602:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1797      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1798          rt_hw_interrupt_enable(temp);
	mov	d4,d9
	call	rt_cpus_unlock
.L1140:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1799  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1800          return -RT_ETIMEOUT;
	j	.L178

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1801      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1802  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1803      /* mailbox is empty */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1804      while (mb->entry == 0)
.L179:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1805      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1806          /* reset error number in thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1807          thread->error = RT_EOK;
	st.w	[a14]48,d15
.L1603:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1808  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1809          /* no waiting, return timeout */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1810          if (timeout == 0)
	ld.w	d15,[a10]
.L1604:
	jne	d15,#0,.L180
.L1605:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1811          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1812              /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1813              rt_hw_interrupt_enable(temp);
	mov	d4,d9
	call	rt_cpus_unlock
.L1606:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1814  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1815              thread->error = -RT_ETIMEOUT;
	mov	d15,#-2
	st.w	[a14]48,d15

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1816  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1817              return -RT_ETIMEOUT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1818          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1819  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1820          RT_DEBUG_IN_THREAD_CONTEXT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1821          /* suspend current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1822          rt_ipc_list_suspend(&(mb->parent.suspend_thread),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1823                              thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1824                              mb->parent.parent.flag);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1825  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1826          /* has waiting time, start thread timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1827          if (timeout > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1828          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1829              /* get the start tick of timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1830              tick_delta = rt_tick_get();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1831  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1832              RT_DEBUG_LOG(RT_DEBUG_IPC, ("mb_recv: start timer of thread:%s\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1833                                          thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1834  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1835              /* reset the timeout of thread timer and start it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1836              rt_timer_control(&(thread->thread_timer),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1837                               RT_TIMER_CTRL_SET_TIME,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1838                               &timeout);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1839              rt_timer_start(&(thread->thread_timer));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1840          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1841  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1842          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1843          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1844  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1845          /* re-schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1846          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1847  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1848          /* resume from suspend state */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1849          if (thread->error != RT_EOK)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1850          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1851              /* return error */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1852              return thread->error;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1853          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1854  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1855          /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1856          temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1857  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1858          /* if it's not waiting forever and then re-calculate timeout tick */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1859          if (timeout > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1860          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1861              tick_delta = rt_tick_get() - tick_delta;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1862              timeout -= tick_delta;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1863              if (timeout < 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1864                  timeout = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1865          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1866      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1867  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1868      /* fill ptr */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1869      *value = mb->msg_pool[mb->out_offset];
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1870  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1871      /* increase output offset */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1872      ++ mb->out_offset;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1873      if (mb->out_offset >= mb->size)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1874          mb->out_offset = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1875  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1876      /* decrease message entry */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1877      if(mb->entry > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1878      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1879          mb->entry --;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1880      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1881  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1882      /* resume suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1883      if (!rt_list_isempty(&(mb->suspend_sender_thread)))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1884      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1885          rt_ipc_list_resume(&(mb->suspend_sender_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1886  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1887          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1888          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1889  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1890          RT_OBJECT_HOOK_CALL(rt_object_take_hook, (&(mb->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1891  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1892          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1893  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1894          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1895      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1896  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1897      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1898      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1899  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1900      RT_OBJECT_HOOK_CALL(rt_object_take_hook, (&(mb->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1901  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1902      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1903  }
.L178:
	mov	d2,#-2
	ret
.L180:
	lea	a15,[a12]20
.L1607:
	ld.bu	d15,[a12]9
.L826:
	mov.aa	a4,a14
.L1141:
	call	rt_thread_suspend
.L1142:
	jeq	d15,#0,.L182
.L1608:
	jne	d15,#1,.L184
.L830:
	ld.a	a2,[a15]
.L1144:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
	j	.L185
.L186:
	ld.bu	d15,[a14]62
.L1609:
	ld.bu	d0,[a2]42
.L1610:
	lea	a4,[a2]-20
.L1145:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
	jge.u	d15,d0,.L187
.L1611:
	lea	a5,[a14]20
.L833:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	fcall	.cocofun_9
.L1612:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	st.a	[a14]24,a6
.L1613:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a4]24,a5
.L1614:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a5],a2
.L834:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   113                      break;      (inlined)
	j	.L188

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
.L187:
	ld.a	a2,[a2]

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
.L185:
	jne.a	a2,a15,.L186

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L188:
	jne.a	a2,a15,.L189

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    94      case RT_IPC_FLAG_FIFO:      (inlined)
.L182:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	ld.a	a2,[a12]24
.L838:
	lea	a4,[a14]20
.L840:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	st.a	[a2],a4
.L1615:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	ld.a	a2,[a12]24
.L1616:
	st.a	[a14]24,a2
.L1617:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a12]24,a4
.L1618:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a4],a15

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L189:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   126      default:      (inlined)
.L184:
	ld.w	d15,[a10]
.L1619:
	jlt	d15,#1,.L190
.L1620:
	call	rt_tick_get
.L1149:
	mov	d8,d2
	lea	a4,[a14]84
.L1152:
	mov	d4,#0
	mov.aa	a5,a10
	call	rt_timer_control
.L1151:
	lea	a4,[a14]84
	call	rt_timer_start
.L190:
	mov	d4,d9
	call	rt_cpus_unlock
.L1621:
	call	rt_schedule
.L1622:
	ld.w	d2,[a14]48
.L1623:
	jne	d2,#0,.L192
.L1624:
	call	rt_cpus_lock
.L1147:
	mov	d9,d2
	ld.w	d15,[a10]
.L1154:
	jlt	d15,#1,.L193
.L1625:
	call	rt_tick_get
.L1153:
	sub	d8,d2,d8
	ld.w	d15,[a10]
.L1626:
	sub	d15,d8
.L1627:
	max	d15,d15,#0
	st.w	[a10],d15
.L193:
.L177:
.L176:
	ld.hu	d15,[a12]34
.L1628:
	jeq	d15,#0,.L179
.L1629:
	ld.a	a15,[a12]28
.L1630:
	ld.hu	d15,[a12]38
.L1631:
	addsc.a	a15,a15,d15,#2
	ld.w	d15,[a15]
.L1632:
	st.w	[a13],d15
.L1633:
	ld.hu	d15,[a12]38
.L1634:
	add	d15,#1
	st.h	[a12]38,d15
.L1635:
	ld.hu	d15,[a12]38
.L1636:
	ld.hu	d0,[a12]32
.L1637:
	jlt.u	d15,d0,.L194
.L1638:
	mov	d15,#0
	st.h	[a12]38,d15
.L194:
	ld.hu	d15,[a12]34
.L1639:
	jeq	d15,#0,.L195
.L1640:
	add	d15,#-1
	st.h	[a12]34,d15
.L195:
	lea	a15,[a12]40
.L1641:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a15]
.L1642:
	jeq.a	a2,a15,.L196
.L841:
	ld.a	a15,[a12]40
	lea	a4,[a15]-20
	call	rt_thread_resume
.L842:
	mov	d4,d9
	call	rt_cpus_unlock
.L1643:
	ld.a	a15,rt_object_take_hook
	jz.a	a15,.L197
	mov.aa	a4,a12
.L1155:
	calli	a15
.L197:
	call	rt_schedule
.L1644:
	j	.L198
.L196:
	mov	d4,d9
	call	rt_cpus_unlock
.L1645:
	ld.a	a15,rt_object_take_hook
	jz.a	a15,.L199
	mov.aa	a4,a12
.L1156:
	calli	a15
.L199:
.L198:
	mov	d2,#0
.L192:
	ret
.L818:
	
__rt_mb_recv_function_end:
	.size	rt_mb_recv,__rt_mb_recv_function_end-rt_mb_recv
.L478:
	; End of function
	
	.sdecl	'.text.ipc..cocofun_9',code,cluster('.cocofun_9')
	.sect	'.text.ipc..cocofun_9'
	.align	2
; Function .cocofun_9
.L349:
.cocofun_9:	.type	func
; Function body .cocofun_9, coco_iter:2

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	ld.a	a6,[a4]24
.L1893:
	st.a	[a6],a5
.L1894:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	ld.a	a6,[a4]24
	fret
.L573:
	; End of function
	.sdecl	'.text.ipc.rt_mb_control',code,cluster('rt_mb_control')
	.sect	'.text.ipc.rt_mb_control'
	.align	2
	
	.global	rt_mb_control

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1904  RTM_EXPORT(rt_mb_recv);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1905  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1906  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1907   * This function can get or set some extra attributions of a mailbox object.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1908   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1909   * @param mb the mailbox object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1910   * @param cmd the execution command
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1911   * @param arg the execution argument
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1912   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1913   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1914   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1915  rt_err_t rt_mb_control(rt_mailbox_t mb, int cmd, void *arg)
; Function rt_mb_control
.L351:
rt_mb_control:	.type	func
	mov.aa	a12,a4
.L1158:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1916  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1917      rt_ubase_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1918  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1919      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1920      RT_ASSERT(mb != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1921      RT_ASSERT(rt_object_get_type(&mb->parent.parent) == RT_Object_Class_MailBox);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1922  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1923      if (cmd == RT_IPC_CMD_RESET)
	jne	d4,#1,.L201
.L1650:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1924      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1925          /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1926          level = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1157:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1927  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1928          /* resume all waiting thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1929          rt_ipc_list_resume_all(&(mb->parent.suspend_thread));
	mov	d8,d2
	lea	a15,[a12]20
.L849:
	mov	d15,#-1

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L202
.L203:
	call	rt_cpus_lock
.L1160:
	mov	d9,d2
	ld.a	a2,[a15]
.L1159:
	fcall	.cocofun_2
.L1161:
	call	rt_thread_resume
.L1163:
	mov	d4,d9
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L202:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a15]
.L1651:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a15,.L203
.L850:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1930          /* also resume all mailbox private suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1931          rt_ipc_list_resume_all(&(mb->suspend_sender_thread));
	lea	a15,[a12]40
.L854:
	mov	d15,#-1

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L204
.L205:
	call	rt_cpus_lock
.L1164:
	mov	d9,d2
	ld.a	a2,[a15]
.L1162:
	fcall	.cocofun_2
.L1165:
	call	rt_thread_resume
.L1166:
	mov	d4,d9
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L204:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a15]
.L1652:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a15,.L205
.L855:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1932  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1933          /* re-init mailbox */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1934          mb->entry      = 0;
	mov	d15,#0
	st.h	[a12]34,d15
.L1653:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1935          mb->in_offset  = 0;
	st.h	[a12]36,d15
.L1654:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1936          mb->out_offset = 0;
	st.h	[a12]38,d15
.L1655:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1937  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1938          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1939          rt_hw_interrupt_enable(level);
	mov	d4,d8
	call	rt_cpus_unlock
.L1656:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1940  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1941          rt_schedule();
	call	rt_schedule
.L1657:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1942  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1943          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1944      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1945  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1946      return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1947  }
	mov	d2,#0
	ret
.L201:
	mov	d2,#-1
	ret
.L844:
	
__rt_mb_control_function_end:
	.size	rt_mb_control,__rt_mb_control_function_end-rt_mb_control
.L483:
	; End of function
	
	.sdecl	'.text.ipc.rt_mq_init',code,cluster('rt_mq_init')
	.sect	'.text.ipc.rt_mq_init'
	.align	2
	
	.global	rt_mq_init

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1948  RTM_EXPORT(rt_mb_control);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1949  #endif /* end of RT_USING_MAILBOX */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1950  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1951  #ifdef RT_USING_MESSAGEQUEUE
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1952  struct rt_mq_message
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1953  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1954      struct rt_mq_message *next;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1955  };
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1956  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1957  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1958   * This function will initialize a message queue and put it under control of
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1959   * resource management.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1960   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1961   * @param mq the message object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1962   * @param name the name of message queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1963   * @param msgpool the beginning address of buffer to save messages
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1964   * @param msg_size the maximum size of message
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1965   * @param pool_size the size of buffer to save messages
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1966   * @param flag the flag of message queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1967   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1968   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1969   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1970  rt_err_t rt_mq_init(rt_mq_t     mq,
; Function rt_mq_init
.L353:
rt_mq_init:	.type	func
	mov	d15,d6
	mov.aa	a15,a4
.L1168:
	mov	e8,d5,d4
	mov.aa	a12,a6
.L1170:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1971                      const char *name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1972                      void       *msgpool,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1973                      rt_size_t   msg_size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1974                      rt_size_t   pool_size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1975                      rt_uint8_t  flag)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1976  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1977      struct rt_mq_message *head;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1978      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1979  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1980      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1981      RT_ASSERT(mq != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1982  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1983      /* initialize object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1984      rt_object_init(&(mq->parent.parent), RT_Object_Class_MessageQueue, name);
	mov	d4,#6
	call	rt_object_init
.L1167:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1985  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1986      /* set parent flag */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1987      mq->parent.parent.flag = flag;
	st.b	[a15]9,d15
.L869:
	fcall	.cocofun_3
.L870:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1988  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1989      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1990      rt_ipc_object_init(&(mq->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1991  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1992      /* set message pool */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1993      mq->msg_pool = msgpool;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1994  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1995      /* get correct message size */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1996      mq->msg_size = RT_ALIGN(msg_size, RT_ALIGN_SIZE);
	add	d8,#3
	st.a	[a15]28,a12
.L1662:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1997      mq->max_msgs = pool_size / (mq->msg_size + sizeof(struct rt_mq_message));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1998  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  1999      /* initialize message list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2000      mq->msg_queue_head = RT_NULL;
	extr.u	d15,d8,#0,#16
	mov.a	a2,#0
.L1169:
	mov.u	d0,#65532
.L1663:
	and	d15,d0
	st.h	[a15]32,d15
.L1664:
	add	d15,#4
.L1171:
	div.u	e0,d9,d15
	st.h	[a15]34,d0
.L1172:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2001      mq->msg_queue_tail = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2002  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2003      /* initialize message empty list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2004      mq->msg_queue_free = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2005      for (temp = 0; temp < mq->max_msgs; temp ++)
	mov	d0,#0
	st.a	[a15]40,a2
.L1173:
	st.a	[a15]44,a2
.L1665:
	j	.L208
.L209:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2006      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2007          head = (struct rt_mq_message *)((rt_uint8_t *)mq->msg_pool +
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2008                                          temp * (mq->msg_size + sizeof(struct rt_mq_message)));
	ld.hu	d15,[a15]32
.L1666:
	ld.a	a2,[a15]28
.L1667:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2009          head->next = (struct rt_mq_message *)mq->msg_queue_free;
	add	d15,#4
	ld.a	a4,[a15]48
.L1668:
	mul	d15,d0
.L1669:
	add	d0,#1
.L1670:
	addsc.a	a2,a2,d15,#0
.L1174:
	st.a	[a2],a4
.L208:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2010          mq->msg_queue_free = head;
	st.a	[a15]48,a2
.L1175:
	ld.hu	d15,[a15]34
.L1671:
	jlt	d0,d15,.L209
.L1672:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2011      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2012  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2013      /* the initial entry is zero */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2014      mq->entry = 0;
	mov	d2,#0
	st.h	[a15]36,d2
.L1673:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2015  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2016      /* initialize an additional list of sender suspend thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2017      rt_list_init(&(mq->suspend_sender_thread));
	lea	a2,[a15]52
.L872:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
	st.a	[a15]56,a2
.L1674:
	st.a	[a2],a2
.L873:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2018  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2019      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2020  }
	ret
.L858:
	
__rt_mq_init_function_end:
	.size	rt_mq_init,__rt_mq_init_function_end-rt_mq_init
.L488:
	; End of function
	
	.sdecl	'.text.ipc.rt_mq_detach',code,cluster('rt_mq_detach')
	.sect	'.text.ipc.rt_mq_detach'
	.align	2
	
	.global	rt_mq_detach

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2021  RTM_EXPORT(rt_mq_init);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2022  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2023  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2024   * This function will detach a message queue object from resource management
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2025   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2026   * @param mq the message queue object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2027   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2028   * @return the operation status, RT_EOK on successful
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2029   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2030  rt_err_t rt_mq_detach(rt_mq_t mq)
; Function rt_mq_detach
.L355:
rt_mq_detach:	.type	func
	mov.aa	a12,a4
.L1176:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2031  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2032      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2033      RT_ASSERT(mq != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2034      RT_ASSERT(rt_object_get_type(&mq->parent.parent) == RT_Object_Class_MessageQueue);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2035      RT_ASSERT(rt_object_is_systemobject(&mq->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2036  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2037      /* resume all suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2038      rt_ipc_list_resume_all(&mq->parent.suspend_thread);
	lea	a15,[a12]20
.L877:
	mov	d15,#-1

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L211
.L212:
	call	rt_cpus_lock
.L1178:
	mov	d8,d2
	ld.a	a2,[a15]
.L1177:
	fcall	.cocofun_2
.L1179:
	call	rt_thread_resume
.L1181:
	mov	d4,d8
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L211:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a15]
.L1679:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a15,.L212
.L878:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2039      /* also resume all message queue private suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2040      rt_ipc_list_resume_all(&(mq->suspend_sender_thread));
	lea	a15,[a12]52
.L882:
	mov	d15,#-1

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L213
.L214:
	call	rt_cpus_lock
.L1182:
	mov	d8,d2
	ld.a	a2,[a15]
.L1180:
	fcall	.cocofun_2
.L1183:
	call	rt_thread_resume
.L1184:
	mov	d4,d8
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L213:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a15]
.L1680:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a15,.L214
.L883:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2041  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2042      /* detach message queue object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2043      rt_object_detach(&(mq->parent.parent));
	mov.aa	a4,a12
.L1185:
	call	rt_object_detach
.L1186:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2044  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2045      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2046  }
	mov	d2,#0
	ret
.L875:
	
__rt_mq_detach_function_end:
	.size	rt_mq_detach,__rt_mq_detach_function_end-rt_mq_detach
.L493:
	; End of function
	
	.sdecl	'.text.ipc.rt_mq_send_wait',code,cluster('rt_mq_send_wait')
	.sect	'.text.ipc.rt_mq_send_wait'
	.align	2
	
	.global	rt_mq_send_wait

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2047  RTM_EXPORT(rt_mq_detach);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2048  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2049  #ifdef RT_USING_HEAP
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2050  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2051   * This function will create a message queue object from system resource
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2052   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2053   * @param name the name of message queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2054   * @param msg_size the size of message
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2055   * @param max_msgs the maximum number of message in queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2056   * @param flag the flag of message queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2057   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2058   * @return the created message queue, RT_NULL on error happen
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2059   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2060  rt_mq_t rt_mq_create(const char *name,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2061                       rt_size_t   msg_size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2062                       rt_size_t   max_msgs,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2063                       rt_uint8_t  flag)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2064  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2065      struct rt_messagequeue *mq;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2066      struct rt_mq_message *head;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2067      register rt_base_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2068  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2069      RT_DEBUG_NOT_IN_INTERRUPT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2070  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2071      /* allocate object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2072      mq = (rt_mq_t)rt_object_allocate(RT_Object_Class_MessageQueue, name);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2073      if (mq == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2074          return mq;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2075  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2076      /* set parent */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2077      mq->parent.parent.flag = flag;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2078  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2079      /* initialize ipc object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2080      rt_ipc_object_init(&(mq->parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2081  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2082      /* initialize message queue */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2083  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2084      /* get correct message size */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2085      mq->msg_size = RT_ALIGN(msg_size, RT_ALIGN_SIZE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2086      mq->max_msgs = max_msgs;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2087  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2088      /* allocate message pool */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2089      mq->msg_pool = RT_KERNEL_MALLOC((mq->msg_size + sizeof(struct rt_mq_message)) * mq->max_msgs);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2090      if (mq->msg_pool == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2091      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2092          rt_object_delete(&(mq->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2093  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2094          return RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2095      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2096  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2097      /* initialize message list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2098      mq->msg_queue_head = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2099      mq->msg_queue_tail = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2100  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2101      /* initialize message empty list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2102      mq->msg_queue_free = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2103      for (temp = 0; temp < mq->max_msgs; temp ++)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2104      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2105          head = (struct rt_mq_message *)((rt_uint8_t *)mq->msg_pool +
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2106                                          temp * (mq->msg_size + sizeof(struct rt_mq_message)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2107          head->next = (struct rt_mq_message *)mq->msg_queue_free;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2108          mq->msg_queue_free = head;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2109      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2110  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2111      /* the initial entry is zero */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2112      mq->entry = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2113  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2114      /* initialize an additional list of sender suspend thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2115      rt_list_init(&(mq->suspend_sender_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2116  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2117      return mq;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2118  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2119  RTM_EXPORT(rt_mq_create);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2120  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2121  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2122   * This function will delete a message queue object and release the memory
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2123   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2124   * @param mq the message queue object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2125   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2126   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2127   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2128  rt_err_t rt_mq_delete(rt_mq_t mq)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2129  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2130      RT_DEBUG_NOT_IN_INTERRUPT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2131  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2132      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2133      RT_ASSERT(mq != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2134      RT_ASSERT(rt_object_get_type(&mq->parent.parent) == RT_Object_Class_MessageQueue);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2135      RT_ASSERT(rt_object_is_systemobject(&mq->parent.parent) == RT_FALSE);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2136  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2137      /* resume all suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2138      rt_ipc_list_resume_all(&(mq->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2139      /* also resume all message queue private suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2140      rt_ipc_list_resume_all(&(mq->suspend_sender_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2141  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2142      /* free message queue pool */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2143      RT_KERNEL_FREE(mq->msg_pool);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2144  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2145      /* delete message queue object */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2146      rt_object_delete(&(mq->parent.parent));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2147  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2148      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2149  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2150  RTM_EXPORT(rt_mq_delete);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2151  #endif
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2152  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2153  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2154   * This function will send a message to message queue object. If the message queue is full,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2155   * current thread will be suspended until timeout.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2156   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2157   * @param mq the message queue object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2158   * @param buffer the message
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2159   * @param size the size of buffer
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2160   * @param timeout the waiting time
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2161   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2162   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2163   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2164  rt_err_t rt_mq_send_wait(rt_mq_t     mq,
; Function rt_mq_send_wait
.L357:
rt_mq_send_wait:	.type	func
	mov.aa	a15,a4
.L1198:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2165                           const void *buffer,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2166                           rt_size_t   size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2167                           rt_int32_t  timeout)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2168  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2169      register rt_ubase_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2170      struct rt_mq_message *msg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2171      rt_uint32_t tick_delta;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2172      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2173  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2174      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2175      RT_ASSERT(mq != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2176      RT_ASSERT(rt_object_get_type(&mq->parent.parent) == RT_Object_Class_MessageQueue);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2177      RT_ASSERT(buffer != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2178      RT_ASSERT(size != 0);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2179  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2180      /* greater than one message size */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2181      if (size > mq->msg_size)
	mov	d9,d4
	ld.hu	d15,[a15]32
.L1200:
	sub.a	a10,#8
.L1187:
	st.w	[a10],d5
	mov.aa	a12,a5
.L1196:
	jge.u	d15,d9,.L216
.L1689:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2182          return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2183  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2184      /* initialize delta tick */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2185      tick_delta = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2186      /* get current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2187      thread = rt_thread_self();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2188  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2189      RT_OBJECT_HOOK_CALL(rt_object_put_hook, (&(mq->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2190  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2191      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2192      temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2193  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2194      /* get a free list, there must be an empty item */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2195      msg = (struct rt_mq_message *)mq->msg_queue_free;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2196      /* for non-blocking call */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2197      if (msg == RT_NULL && timeout == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2198      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2199          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2200          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2201  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2202          return -RT_EFULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2203      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2204  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2205      /* message queue is full */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2206      while ((msg = (struct rt_mq_message *)mq->msg_queue_free) == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2207      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2208          /* reset error number in thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2209          thread->error = RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2210  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2211          /* no waiting, return timeout */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2212          if (timeout == 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2213          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2214              /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2215              rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2216  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2217              return -RT_EFULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2218          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2219  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2220          RT_DEBUG_IN_THREAD_CONTEXT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2221          /* suspend current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2222          rt_ipc_list_suspend(&(mq->suspend_sender_thread),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2223                              thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2224                              mq->parent.parent.flag);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2225  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2226          /* has waiting time, start thread timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2227          if (timeout > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2228          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2229              /* get the start tick of timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2230              tick_delta = rt_tick_get();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2231  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2232              RT_DEBUG_LOG(RT_DEBUG_IPC, ("mq_send_wait: start timer of thread:%s\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2233                                          thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2234  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2235              /* reset the timeout of thread timer and start it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2236              rt_timer_control(&(thread->thread_timer),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2237                               RT_TIMER_CTRL_SET_TIME,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2238                               &timeout);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2239              rt_timer_start(&(thread->thread_timer));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2240          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2241  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2242          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2243          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2244  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2245          /* re-schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2246          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2247  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2248          /* resume from suspend state */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2249          if (thread->error != RT_EOK)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2250          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2251              /* return error */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2252              return thread->error;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2253          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2254  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2255          /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2256          temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2257  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2258          /* if it's not waiting forever and then re-calculate timeout tick */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2259          if (timeout > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2260          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2261              tick_delta = rt_tick_get() - tick_delta;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2262              timeout -= tick_delta;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2263              if (timeout < 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2264                  timeout = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2265          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2266      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2267  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2268      /* move free list pointer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2269      mq->msg_queue_free = msg->next;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2270  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2271      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2272      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2273  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2274      /* the msg is the new tailer of list, the next shall be NULL */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2275      msg->next = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2276      /* copy buffer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2277      rt_memcpy(msg + 1, buffer, size);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2278  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2279      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2280      temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2281      /* link msg to message queue */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2282      if (mq->msg_queue_tail != RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2283      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2284          /* if the tail exists, */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2285          ((struct rt_mq_message *)mq->msg_queue_tail)->next = msg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2286      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2287  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2288      /* set new tail */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2289      mq->msg_queue_tail = msg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2290      /* if the head is empty, set head */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2291      if (mq->msg_queue_head == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2292          mq->msg_queue_head = msg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2293  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2294      if(mq->entry < RT_MQ_ENTRY_MAX)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2295      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2296          /* increase message entry */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2297          mq->entry ++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2298      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2299      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2300      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2301          rt_hw_interrupt_enable(temp); /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2302          return -RT_EFULL; /* value overflowed */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2303      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2304  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2305      /* resume suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2306      if (!rt_list_isempty(&mq->parent.suspend_thread))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2307      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2308          rt_ipc_list_resume(&(mq->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2309  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2310          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2311          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2312  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2313          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2314  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2315          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2316      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2317  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2318      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2319      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2320  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2321      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2322  }
	mov	d2,#-1
	ret
.L216:
	mov	d8,#0
	call	rt_thread_self
.L1188:
	mov.aa	a13,a2
.L1204:
	ld.a	a2,rt_object_put_hook
.L1189:
	jz.a	a2,.L218
	mov.aa	a4,a15
.L1190:
	calli	a2
.L218:
	call	rt_cpus_lock
.L1191:
	ld.a	a14,[a15]48
.L1192:
	mov	d10,d2
.L1202:
	jnz.a	a14,.L219
.L1690:
	ld.w	d15,[a10]
.L1691:
	jeq	d15,#0,.L220
.L219:
	mov	d11,#0
	j	.L221
.L222:
	st.w	[a13]48,d11
.L1692:
	ld.w	d0,[a10]
.L1693:
	jeq	d0,#0,.L223
.L1694:
	lea	a14,[a15]52
.L1193:
	ld.bu	d15,[a15]9
.L900:
	mov.aa	a4,a13
.L1194:
	call	rt_thread_suspend
.L1195:
	jeq	d15,#0,.L224
.L1695:
	jne	d15,#1,.L226
.L905:
	ld.a	a2,[a14]
.L1199:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
	j	.L227
.L228:
	ld.bu	d0,[a13]62
.L1696:
	ld.bu	d1,[a2]42
.L1697:
	lea	a4,[a2]-20
.L1201:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
	jge.u	d0,d1,.L229
.L1698:
	fcall	.cocofun_8
.L1699:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   113                      break;      (inlined)
	j	.L230

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
.L229:
	ld.a	a2,[a2]

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
.L227:
	jne.a	a2,a14,.L228

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L230:
	jne.a	a2,a14,.L231

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    94      case RT_IPC_FLAG_FIFO:      (inlined)
.L224:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	ld.a	a4,[a15]56
.L908:
	lea	a2,[a13]20
.L912:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	st.a	[a4],a2
.L1700:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	ld.a	a4,[a15]56
.L1701:
	st.a	[a13]24,a4
.L1702:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a15]56,a2
.L1703:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a2],a14

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L231:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   126      default:      (inlined)
.L226:
	ld.w	d15,[a10]
.L1704:
	jlt	d15,#1,.L232
.L1705:
	call	rt_tick_get
.L1205:
	mov	d8,d2
	lea	a4,[a13]84
.L1207:
	mov	d4,#0
	mov.aa	a5,a10
	call	rt_timer_control
.L1206:
	lea	a4,[a13]84
	call	rt_timer_start
.L232:
	mov	d4,d10
	call	rt_cpus_unlock
.L1706:
	call	rt_schedule
.L1707:
	ld.w	d2,[a13]48
.L1708:
	jne	d2,#0,.L234
.L1709:
	call	rt_cpus_lock
.L1203:
	mov	d10,d2
	ld.w	d15,[a10]
.L1209:
	jlt	d15,#1,.L235
.L1710:
	call	rt_tick_get
.L1208:
	sub	d8,d2,d8
	ld.w	d15,[a10]
.L1711:
	sub	d15,d8
.L1712:
	max	d15,d15,#0
	st.w	[a10],d15
.L235:
	ld.a	a14,[a15]48
.L221:
	jz.a	a14,.L222
.L1713:
	ld.a	a2,[a14]
.L1714:
	st.a	[a15]48,a2
.L1715:
	mov	d4,d10
	call	rt_cpus_unlock
.L1716:
	mov.a	a2,#0
.L1717:
	st.a	[a14],a2
.L1718:
	lea	a4,[a14]4
.L1719:
	mov.aa	a5,a12
.L1211:
	mov	d4,d9
	call	rt_memcpy
.L1212:
	call	rt_cpus_lock
.L1210:
	ld.a	a2,[a15]44
.L1720:
	mov	d10,d2
.L1213:
	jz.a	a2,.L236
.L1721:
	st.a	[a2],a14
.L236:
	st.a	[a15]44,a14
.L1722:
	ld.w	d15,[a15]40
.L1723:
	jne	d15,#0,.L237
.L1724:
	st.a	[a15]40,a14
.L237:
	ld.hu	d15,[a15]36
.L1725:
	mov.u	d0,#65535
.L1726:
	jge.u	d15,d0,.L238
.L1727:
	add	d15,#1
	st.h	[a15]36,d15
.L1197:
	fcall	.cocofun_4
.L1214:
	jeq.a	a4,a2,.L239
.L913:
	fcall	.cocofun_6
.L1215:
	call	rt_thread_resume
.L914:
	mov	d4,d10
	call	rt_cpus_unlock
.L1728:
	call	rt_schedule
.L1729:
	j	.L240
.L238:
.L223:
.L220:
	mov	d4,d10
	call	rt_cpus_unlock
.L1730:
	mov	d2,#-3
.L234:
	ret
.L239:
	mov	d4,d10
	call	rt_cpus_unlock
.L240:
	mov	d2,#0
	ret
.L891:
	
__rt_mq_send_wait_function_end:
	.size	rt_mq_send_wait,__rt_mq_send_wait_function_end-rt_mq_send_wait
.L503:
	; End of function
	
	.sdecl	'.text.ipc..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.ipc..cocofun_8'
	.align	2
; Function .cocofun_8
.L359:
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:1
	lea	a5,[a13]20
.L1885:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	fcall	.cocofun_9
.L1886:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	st.a	[a13]24,a6
.L1887:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a4]24,a5
.L1888:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a5],a2
	fret
.L568:
	; End of function
	.sdecl	'.text.ipc.rt_mq_send',code,cluster('rt_mq_send')
	.sect	'.text.ipc.rt_mq_send'
	.align	2
	
	.global	rt_mq_send

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2323  RTM_EXPORT(rt_mq_send_wait)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2324  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2325  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2326   * This function will send a message to message queue object, if there are
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2327   * threads suspended on message queue object, it will be waked up.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2328   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2329   * @param mq the message queue object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2330   * @param buffer the message
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2331   * @param size the size of buffer
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2332   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2333   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2334   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2335  rt_err_t rt_mq_send(rt_mq_t mq, const void *buffer, rt_size_t size)
; Function rt_mq_send
.L361:
rt_mq_send:	.type	func

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2336  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2337      return rt_mq_send_wait(mq, buffer, size, 0);
	mov	d5,#0
	j	rt_mq_send_wait
.L886:
	
__rt_mq_send_function_end:
	.size	rt_mq_send,__rt_mq_send_function_end-rt_mq_send
.L498:
	; End of function
	
	.sdecl	'.text.ipc.rt_mq_urgent',code,cluster('rt_mq_urgent')
	.sect	'.text.ipc.rt_mq_urgent'
	.align	2
	
	.global	rt_mq_urgent

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2338  }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2339  RTM_EXPORT(rt_mq_send);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2340  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2341  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2342   * This function will send an urgent message to message queue object, which
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2343   * means the message will be inserted to the head of message queue. If there
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2344   * are threads suspended on message queue object, it will be waked up.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2345   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2346   * @param mq the message queue object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2347   * @param buffer the message
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2348   * @param size the size of buffer
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2349   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2350   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2351   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2352  rt_err_t rt_mq_urgent(rt_mq_t mq, const void *buffer, rt_size_t size)
; Function rt_mq_urgent
.L363:
rt_mq_urgent:	.type	func
	mov.aa	a15,a4
.L1216:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2353  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2354      register rt_ubase_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2355      struct rt_mq_message *msg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2356  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2357      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2358      RT_ASSERT(mq != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2359      RT_ASSERT(rt_object_get_type(&mq->parent.parent) == RT_Object_Class_MessageQueue);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2360      RT_ASSERT(buffer != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2361      RT_ASSERT(size != 0);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2362  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2363      /* greater than one message size */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2364      if (size > mq->msg_size)
	mov	d15,d4
	ld.hu	d0,[a15]32
.L1218:
	mov.aa	a12,a5
.L1220:
	jge.u	d0,d15,.L244
.L1735:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2365          return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2366  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2367      RT_OBJECT_HOOK_CALL(rt_object_put_hook, (&(mq->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2368  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2369      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2370      temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2371  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2372      /* get a free list, there must be an empty item */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2373      msg = (struct rt_mq_message *)mq->msg_queue_free;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2374      /* message queue is full */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2375      if (msg == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2376      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2377          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2378          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2379  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2380          return -RT_EFULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2381      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2382      /* move free list pointer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2383      mq->msg_queue_free = msg->next;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2384  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2385      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2386      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2387  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2388      /* copy buffer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2389      rt_memcpy(msg + 1, buffer, size);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2390  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2391      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2392      temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2393  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2394      /* link msg to the beginning of message queue */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2395      msg->next = (struct rt_mq_message *)mq->msg_queue_head;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2396      mq->msg_queue_head = msg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2397  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2398      /* if there is no tail */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2399      if (mq->msg_queue_tail == RT_NULL)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2400          mq->msg_queue_tail = msg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2401  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2402      if(mq->entry < RT_MQ_ENTRY_MAX)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2403      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2404          /* increase message entry */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2405          mq->entry ++;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2406      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2407      else
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2408      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2409          rt_hw_interrupt_enable(temp); /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2410          return -RT_EFULL; /* value overflowed */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2411      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2412  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2413      /* resume suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2414      if (!rt_list_isempty(&mq->parent.suspend_thread))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2415      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2416          rt_ipc_list_resume(&(mq->parent.suspend_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2417  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2418          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2419          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2420  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2421          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2422  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2423          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2424      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2425  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2426      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2427      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2428  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2429      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2430  }
	mov	d2,#-1
	ret
.L244:
	ld.a	a2,rt_object_put_hook
	jz.a	a2,.L246
	calli	a2
.L246:
	call	rt_cpus_lock
.L1221:
	ld.a	a13,[a15]48
.L1223:
	mov	d8,d2
.L1224:
	jz.a	a13,.L247
.L1736:
	ld.a	a2,[a13]
.L1737:
	st.a	[a15]48,a2
.L1738:
	mov	d4,d8
	call	rt_cpus_unlock
.L1222:
	lea	a4,[a13]4
.L1739:
	mov.aa	a5,a12
.L1226:
	mov	d4,d15
	call	rt_memcpy
.L1227:
	call	rt_cpus_lock
.L1225:
	ld.a	a2,[a15]40
.L1740:
	st.a	[a13],a2
.L1741:
	st.a	[a15]40,a13
.L1742:
	mov	d8,d2
.L1228:
	ld.w	d15,[a15]44
.L1219:
	jne	d15,#0,.L248
.L1743:
	st.a	[a15]44,a13
.L248:
	ld.hu	d15,[a15]36
.L1744:
	mov.u	d0,#65535
.L1745:
	jge.u	d15,d0,.L249
.L1746:
	add	d15,#1
	st.h	[a15]36,d15
.L1217:
	fcall	.cocofun_4
.L1229:
	jeq.a	a4,a2,.L250
.L922:
	fcall	.cocofun_6
.L1230:
	call	rt_thread_resume
.L923:
	mov	d4,d8
	call	rt_cpus_unlock
.L1747:
	call	rt_schedule
.L1748:
	j	.L251
.L249:
.L247:
	mov	d4,d8
	call	rt_cpus_unlock
.L1749:
	mov	d2,#-3
	ret
.L250:
	mov	d4,d8
	call	rt_cpus_unlock
.L251:
	mov	d2,#0
	ret
.L916:
	
__rt_mq_urgent_function_end:
	.size	rt_mq_urgent,__rt_mq_urgent_function_end-rt_mq_urgent
.L508:
	; End of function
	
	.sdecl	'.text.ipc.rt_mq_recv',code,cluster('rt_mq_recv')
	.sect	'.text.ipc.rt_mq_recv'
	.align	2
	
	.global	rt_mq_recv

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2431  RTM_EXPORT(rt_mq_urgent);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2432  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2433  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2434   * This function will receive a message from message queue object, if there is
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2435   * no message in message queue object, the thread shall wait for a specified
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2436   * time.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2437   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2438   * @param mq the message queue object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2439   * @param buffer the received message will be saved in
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2440   * @param size the size of buffer
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2441   * @param timeout the waiting time
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2442   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2443   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2444   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2445  rt_err_t rt_mq_recv(rt_mq_t    mq,
; Function rt_mq_recv
.L365:
rt_mq_recv:	.type	func
	sub.a	a10,#8
.L1231:
	mov.aa	a15,a4
.L1241:
	mov.aa	a12,a5
.L1240:
	mov	d8,d4
	st.w	[a10],d5
.L1242:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2446                      void      *buffer,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2447                      rt_size_t  size,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2448                      rt_int32_t timeout)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2449  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2450      struct rt_thread *thread;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2451      register rt_ubase_t temp;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2452      struct rt_mq_message *msg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2453      rt_uint32_t tick_delta;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2454  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2455      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2456      RT_ASSERT(mq != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2457      RT_ASSERT(rt_object_get_type(&mq->parent.parent) == RT_Object_Class_MessageQueue);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2458      RT_ASSERT(buffer != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2459      RT_ASSERT(size != 0);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2460  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2461      /* initialize delta tick */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2462      tick_delta = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2463      /* get current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2464      thread = rt_thread_self();
	mov	d9,#0
	call	rt_thread_self
.L1232:
	mov.aa	a13,a2
.L1245:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2465      RT_OBJECT_HOOK_CALL(rt_object_trytake_hook, (&(mq->parent.parent)));
	ld.a	a2,rt_object_trytake_hook
.L1233:
	jz.a	a2,.L254
	mov.aa	a4,a15
.L1234:
	calli	a2
.L254:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2466  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2467      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2468      temp = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1235:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2469  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2470      /* for non-blocking call */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2471      if (mq->entry == 0 && timeout == 0)
	mov	d10,d2
	ld.hu	d15,[a15]36
.L1243:
	jne	d15,#0,.L255
.L1754:
	ld.w	d15,[a10]
.L1755:
	jne	d15,#0,.L256
.L1756:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2472      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2473          rt_hw_interrupt_enable(temp);
	mov	d4,d10
	call	rt_cpus_unlock
.L1236:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2474  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2475          return -RT_ETIMEOUT;
	j	.L257

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2476      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2477  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2478      /* message queue is empty */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2479      while (mq->entry == 0)
.L258:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2480      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2481          RT_DEBUG_IN_THREAD_CONTEXT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2482  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2483          /* reset error number in thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2484          thread->error = RT_EOK;
	st.w	[a13]48,d15
.L1757:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2485  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2486          /* no waiting, return timeout */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2487          if (timeout == 0)
	ld.w	d15,[a10]
.L1758:
	jne	d15,#0,.L259
.L1759:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2488          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2489              /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2490              rt_hw_interrupt_enable(temp);
	mov	d4,d10
	call	rt_cpus_unlock
.L1760:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2491  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2492              thread->error = -RT_ETIMEOUT;
	mov	d15,#-2
	st.w	[a13]48,d15

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2493  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2494              return -RT_ETIMEOUT;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2495          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2496  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2497          /* suspend current thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2498          rt_ipc_list_suspend(&(mq->parent.suspend_thread),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2499                              thread,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2500                              mq->parent.parent.flag);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2501  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2502          /* has waiting time, start thread timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2503          if (timeout > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2504          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2505              /* get the start tick of timer */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2506              tick_delta = rt_tick_get();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2507  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2508              RT_DEBUG_LOG(RT_DEBUG_IPC, ("set thread:%s to timer list\n",
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2509                                          thread->name));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2510  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2511              /* reset the timeout of thread timer and start it */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2512              rt_timer_control(&(thread->thread_timer),
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2513                               RT_TIMER_CTRL_SET_TIME,
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2514                               &timeout);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2515              rt_timer_start(&(thread->thread_timer));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2516          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2517  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2518          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2519          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2520  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2521          /* re-schedule */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2522          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2523  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2524          /* recv message */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2525          if (thread->error != RT_EOK)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2526          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2527              /* return error */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2528              return thread->error;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2529          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2530  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2531          /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2532          temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2533  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2534          /* if it's not waiting forever and then re-calculate timeout tick */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2535          if (timeout > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2536          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2537              tick_delta = rt_tick_get() - tick_delta;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2538              timeout -= tick_delta;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2539              if (timeout < 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2540                  timeout = 0;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2541          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2542      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2543  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2544      /* get message from queue */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2545      msg = (struct rt_mq_message *)mq->msg_queue_head;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2546  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2547      /* move message queue head */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2548      mq->msg_queue_head = msg->next;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2549      /* reach queue tail, set to NULL */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2550      if (mq->msg_queue_tail == msg)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2551          mq->msg_queue_tail = RT_NULL;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2552  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2553      /* decrease message entry */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2554      if(mq->entry > 0)
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2555      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2556          mq->entry --;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2557      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2558  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2559      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2560      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2561  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2562      /* copy message */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2563      rt_memcpy(buffer, msg + 1, size > mq->msg_size ? mq->msg_size : size);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2564  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2565      /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2566      temp = rt_hw_interrupt_disable();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2567      /* put message to free list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2568      msg->next = (struct rt_mq_message *)mq->msg_queue_free;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2569      mq->msg_queue_free = msg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2570  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2571      /* resume suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2572      if (!rt_list_isempty(&(mq->suspend_sender_thread)))
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2573      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2574          rt_ipc_list_resume(&(mq->suspend_sender_thread));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2575  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2576          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2577          rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2578  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2579          RT_OBJECT_HOOK_CALL(rt_object_take_hook, (&(mq->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2580  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2581          rt_schedule();
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2582  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2583          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2584      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2585  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2586      /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2587      rt_hw_interrupt_enable(temp);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2588  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2589      RT_OBJECT_HOOK_CALL(rt_object_take_hook, (&(mq->parent.parent)));
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2590  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2591      return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2592  }
.L257:
	mov	d2,#-2
	ret
.L259:
	lea	a14,[a15]20
.L1761:
	ld.bu	d15,[a15]9
.L934:
	mov.aa	a4,a13
.L1237:
	call	rt_thread_suspend
.L1762:
	fcall	.cocofun_1
.L935:
	ld.w	d15,[a10]
.L1763:
	jlt	d15,#1,.L269
.L1764:
	call	rt_tick_get
.L1247:
	mov	d9,d2
	lea	a4,[a13]84
.L1249:
	mov	d4,#0
	mov.aa	a5,a10
	call	rt_timer_control
.L1248:
	lea	a4,[a13]84
	call	rt_timer_start
.L269:
	mov	d4,d10
	call	rt_cpus_unlock
.L1765:
	call	rt_schedule
.L1766:
	ld.w	d2,[a13]48
.L1767:
	jne	d2,#0,.L271
.L1768:
	call	rt_cpus_lock
.L1244:
	mov	d10,d2
	ld.w	d15,[a10]
.L1251:
	jlt	d15,#1,.L272
.L1769:
	call	rt_tick_get
.L1250:
	sub	d9,d2,d9
	ld.w	d15,[a10]
.L1770:
	sub	d15,d9
.L1771:
	max	d15,d15,#0
	st.w	[a10],d15
.L272:
.L256:
.L255:
	ld.hu	d15,[a15]36
.L1772:
	jeq	d15,#0,.L258
.L1773:
	ld.a	a13,[a15]40
.L1246:
	ld.a	a2,[a13]
.L1774:
	st.a	[a15]40,a2
.L1775:
	ld.a	a2,[a15]44
.L1776:
	jne.a	a2,a13,.L273
.L1777:
	mov.a	a2,#0
.L1778:
	st.a	[a15]44,a2
.L273:
	ld.hu	d15,[a15]36
.L1779:
	jeq	d15,#0,.L274
.L1780:
	add	d15,#-1
	st.h	[a15]36,d15
.L274:
	mov	d4,d10
	call	rt_cpus_unlock
.L1781:
	ld.hu	d15,[a15]32
.L1782:
	lea	a5,[a13]4
.L1783:
	min.u	d4,d8,d15
	mov.aa	a4,a12
.L1253:
	call	rt_memcpy
.L1254:
	call	rt_cpus_lock
.L1252:
	ld.a	a2,[a15]48
.L1784:
	st.a	[a13],a2
.L1785:
	st.a	[a15]48,a13
.L1786:
	lea	a2,[a15]52
.L1787:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a4,[a2]
.L1788:
	mov	d15,d2
.L1255:
	jeq.a	a4,a2,.L275
.L940:
	ld.a	a2,[a15]52
	lea	a4,[a2]-20
	call	rt_thread_resume
.L941:
	mov	d4,d15
	call	rt_cpus_unlock
.L1789:
	ld.a	a2,rt_object_take_hook
	jz.a	a2,.L276
	mov.aa	a4,a15
.L1256:
	calli	a2
.L276:
	call	rt_schedule
.L1790:
	j	.L277
.L275:
	mov	d4,d15
	call	rt_cpus_unlock
.L1257:
	ld.a	a2,rt_object_take_hook
	jz.a	a2,.L278
	mov.aa	a4,a15
.L1258:
	calli	a2
.L278:
.L277:
	mov	d2,#0
.L271:
	ret
.L925:
	
__rt_mq_recv_function_end:
	.size	rt_mq_recv,__rt_mq_recv_function_end-rt_mq_recv
.L513:
	; End of function
	
	.sdecl	'.text.ipc..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.ipc..cocofun_1'
	.align	2
; Function .cocofun_1
.L367:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	jeq	d15,#0,.L261
.L1839:
	jne	d15,#1,.L263
.L1840:
	ld.a	a2,[a14]
.L1082:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
	j	.L264
.L265:
	ld.bu	d15,[a13]62
.L1841:
	ld.bu	d0,[a2]42
.L1842:
	lea	a4,[a2]-20
.L1083:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
	jge.u	d15,d0,.L266
.L1843:
	fcall	.cocofun_8
.L1844:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   113                      break;      (inlined)
	j	.L267

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   109                  if (thread->current_priority < sthread->current_priority)      (inlined)
.L266:
	ld.a	a2,[a2]

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   104              for (n = list->next; n != list; n = n->next)      (inlined)
.L264:
	jne.a	a2,a14,.L265

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L267:
	jne.a	a2,a14,.L268

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	    94      case RT_IPC_FLAG_FIFO:      (inlined)
.L261:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	ld.a	a4,[a15]24
.L1845:
	lea	a2,[a13]20
.L1846:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
	st.a	[a4],a2
.L1847:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
	ld.a	a4,[a15]24
.L1848:
	st.a	[a13]24,a4
.L1849:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
	st.a	[a15]24,a2
.L1850:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
	st.a	[a2],a14

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   121              if (n == list)      (inlined)
.L268:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   126      default:      (inlined)
.L263:
	fret
.L533:
	; End of function
	.sdecl	'.text.ipc.rt_mq_control',code,cluster('rt_mq_control')
	.sect	'.text.ipc.rt_mq_control'
	.align	2
	
	.global	rt_mq_control

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2593  RTM_EXPORT(rt_mq_recv);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2594  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2595  /**
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2596   * This function can get or set some extra attributions of a message queue
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2597   * object.
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2598   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2599   * @param mq the message queue object
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2600   * @param cmd the execution command
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2601   * @param arg the execution argument
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2602   *
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2603   * @return the error code
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2604   */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2605  rt_err_t rt_mq_control(rt_mq_t mq, int cmd, void *arg)
; Function rt_mq_control
.L369:
rt_mq_control:	.type	func
	mov.aa	a15,a4
.L1260:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2606  {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2607      rt_ubase_t level;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2608      struct rt_mq_message *msg;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2609  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2610      /* parameter check */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2611      RT_ASSERT(mq != RT_NULL);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2612      RT_ASSERT(rt_object_get_type(&mq->parent.parent) == RT_Object_Class_MessageQueue);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2613  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2614      if (cmd == RT_IPC_CMD_RESET)
	jne	d4,#1,.L280
.L1795:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2615      {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2616          /* disable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2617          level = rt_hw_interrupt_disable();
	call	rt_cpus_lock
.L1259:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2618  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2619          /* resume all waiting thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2620          rt_ipc_list_resume_all(&mq->parent.suspend_thread);
	mov	d8,d2
	lea	a12,[a15]20
.L949:
	mov	d15,#-1

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L281
.L282:
	call	rt_cpus_lock
.L1262:
	mov	d9,d2
	ld.a	a2,[a12]
.L1261:
	fcall	.cocofun_2
.L1263:
	call	rt_thread_resume
.L1265:
	mov	d4,d9
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L281:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a12]
.L1796:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a12,.L282
.L950:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2621          /* also resume all message queue private suspended thread */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2622          rt_ipc_list_resume_all(&(mq->suspend_sender_thread));
	lea	a12,[a15]52
.L954:
	mov	d15,#-1

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	j	.L283
.L284:
	call	rt_cpus_lock
.L1266:
	mov	d9,d2
	ld.a	a2,[a12]
.L1264:
	fcall	.cocofun_2
.L1267:
	call	rt_thread_resume
.L1268:
	mov	d4,d9
	call	rt_cpus_unlock

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
.L283:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     1  /*
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     2   * Copyright (c) 2006-2021, RT-Thread Development Team
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     4   * SPDX-License-Identifier: Apache-2.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     6   * Change Logs:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     7   * Date           Author       Notes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     8   * 2006-03-16     Bernard      the first version
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	     9   * 2006-09-07     Bernard      move the kservice APIs to rtthread.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    10   * 2007-06-27     Bernard      fix the rt_list_remove bug
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    11   * 2012-03-22     Bernard      rename kservice.h to rtservice.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    12   * 2017-11-15     JasonJia     Modify rt_slist_foreach to rt_slist_for_each_entry.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    13   *                             Make code cleanup.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    14   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    15  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    16  #ifndef __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    17  #define __RT_SERVICE_H__
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    18  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    19  #ifdef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    20  extern "C" {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    21  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    22  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    23  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    24   * @addtogroup KernelService
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    25   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    27  /**@{*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    28  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    29  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    30   * rt_container_of - return the member address of ptr, if the type of ptr is the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    31   * struct type.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    32   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    33  #define rt_container_of(ptr, type, member) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    34      ((type *)((char *)(ptr) - (unsigned long)(&((type *)0)->member)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    37  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    38   * @brief initialize a list object
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    39   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    40  #define RT_LIST_OBJECT_INIT(object) { &(object), &(object) }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    42  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    43   * @brief initialize a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    45   * @param l list to be initialized
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    46   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    47  rt_inline void rt_list_init(rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    48  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    49      l->next = l->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    50  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    52  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    53   * @brief insert a node after a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    55   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    56   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    58  rt_inline void rt_list_insert_after(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    60      l->next->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    61      n->next = l->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    63      l->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    64      n->prev = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    65  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    67  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    68   * @brief insert a node before a list
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    70   * @param n new node to be inserted
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    71   * @param l list to insert it
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    73  rt_inline void rt_list_insert_before(rt_list_t *l, rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    75      l->prev->next = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    76      n->prev = l->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    78      l->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    79      n->next = l;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    80  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    82  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    83   * @brief remove node from list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    84   * @param n the node to remove from the list.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    86  rt_inline void rt_list_remove(rt_list_t *n)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    88      n->next->prev = n->prev;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    89      n->prev->next = n->next;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    91      n->next = n->prev = n;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    92  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    94  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    95   * @brief tests whether a list is empty
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    96   * @param l the list to test.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    98  rt_inline int rt_list_isempty(const rt_list_t *l)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\0_AppSw\Tricore\rt-thread\include\rtservice.h	   100      return l->next == l;
	ld.a	a2,[a12]
.L1797:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	   171      while (!rt_list_isempty(list))      (inlined)
	jne.a	a2,a12,.L284
.L955:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2623  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2624          /* release all message in the queue */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2625          while (mq->msg_queue_head != RT_NULL)
	mov.a	a2,#0
.L1798:
	j	.L285
.L286:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2626          {
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2627              /* get message from queue */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2628              msg = (struct rt_mq_message *)mq->msg_queue_head;
	ld.a	a4,[a15]40
.L1269:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2629  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2630              /* move message queue head */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2631              mq->msg_queue_head = msg->next;
	ld.a	a5,[a4]
.L1799:
	st.a	[a15]40,a5
.L1800:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2632              /* reach queue tail, set to NULL */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2633              if (mq->msg_queue_tail == msg)
	ld.a	a5,[a15]44
.L1801:
	jne.a	a5,a4,.L287
.L1802:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2634                  mq->msg_queue_tail = RT_NULL;
	st.a	[a15]44,a2
.L287:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2635  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2636              /* put message to free list */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2637              msg->next = (struct rt_mq_message *)mq->msg_queue_free;
	ld.a	a5,[a15]48
.L1803:
	st.a	[a4],a5
.L1804:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2638              mq->msg_queue_free = msg;
	st.a	[a15]48,a4
.L285:
	ld.w	d15,[a15]40
.L1805:
	jne	d15,#0,.L286
.L1806:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2639          }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2640  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2641          /* clean entry */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2642          mq->entry = 0;
	mov	d15,#0
	st.h	[a15]36,d15
.L1807:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2643  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2644          /* enable interrupt */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2645          rt_hw_interrupt_enable(level);
	mov	d4,d8
	call	rt_cpus_unlock
.L1808:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2646  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2647          rt_schedule();
	call	rt_schedule
.L1809:

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2648  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2649          return RT_EOK;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2650      }
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2651  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2652      return -RT_ERROR;
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2653  }
	mov	d2,#0
	ret
.L280:
	mov	d2,#-1
	ret
.L943:
	
__rt_mq_control_function_end:
	.size	rt_mq_control,__rt_mq_control_function_end-rt_mq_control
.L518:
	; End of function
	
	.calls	'rt_sem_init','rt_object_init'
	.calls	'rt_sem_detach','rt_cpus_lock'
	.calls	'rt_sem_detach','rt_thread_resume'
	.calls	'rt_sem_detach','rt_cpus_unlock'
	.calls	'rt_sem_detach','rt_object_detach'
	.calls	'rt_sem_take','__INDIRECT__'
	.calls	'rt_sem_take','rt_cpus_lock'
	.calls	'rt_sem_take','rt_cpus_unlock'
	.calls	'rt_sem_take','rt_thread_self'
	.calls	'rt_sem_take','rt_thread_suspend'
	.calls	'rt_sem_take','rt_timer_control'
	.calls	'rt_sem_take','rt_timer_start'
	.calls	'rt_sem_take','rt_schedule'
	.calls	'rt_sem_trytake','rt_sem_take'
	.calls	'rt_sem_release','__INDIRECT__'
	.calls	'rt_sem_release','rt_cpus_lock'
	.calls	'rt_sem_release','rt_thread_resume'
	.calls	'rt_sem_release','rt_cpus_unlock'
	.calls	'rt_sem_release','rt_schedule'
	.calls	'rt_sem_control','rt_cpus_lock'
	.calls	'rt_sem_control','rt_thread_resume'
	.calls	'rt_sem_control','rt_cpus_unlock'
	.calls	'rt_sem_control','rt_schedule'
	.calls	'rt_mutex_init','rt_object_init'
	.calls	'rt_mutex_detach','rt_cpus_lock'
	.calls	'rt_mutex_detach','rt_thread_resume'
	.calls	'rt_mutex_detach','rt_cpus_unlock'
	.calls	'rt_mutex_detach','rt_object_detach'
	.calls	'rt_mutex_take','rt_thread_self'
	.calls	'rt_mutex_take','rt_cpus_lock'
	.calls	'rt_mutex_take','__INDIRECT__'
	.calls	'rt_mutex_take','rt_cpus_unlock'
	.calls	'rt_mutex_take','rt_thread_control'
	.calls	'rt_mutex_take','rt_thread_suspend'
	.calls	'rt_mutex_take','rt_timer_control'
	.calls	'rt_mutex_take','rt_timer_start'
	.calls	'rt_mutex_take','rt_schedule'
	.calls	'rt_mutex_release','rt_thread_self'
	.calls	'rt_mutex_release','rt_cpus_lock'
	.calls	'rt_mutex_release','__INDIRECT__'
	.calls	'rt_mutex_release','rt_cpus_unlock'
	.calls	'rt_mutex_release','rt_thread_control'
	.calls	'rt_mutex_release','rt_ipc_get_highest_priority'
	.calls	'rt_mutex_release','rt_thread_resume'
	.calls	'rt_mutex_release','rt_schedule'
	.calls	'rt_event_init','rt_object_init'
	.calls	'rt_event_detach','rt_cpus_lock'
	.calls	'rt_event_detach','rt_thread_resume'
	.calls	'rt_event_detach','rt_cpus_unlock'
	.calls	'rt_event_detach','rt_object_detach'
	.calls	'rt_event_send','rt_cpus_lock'
	.calls	'rt_event_send','__INDIRECT__'
	.calls	'rt_event_send','rt_cpus_unlock'
	.calls	'rt_event_send','rt_thread_resume'
	.calls	'rt_event_send','rt_schedule'
	.calls	'rt_event_recv','rt_thread_self'
	.calls	'rt_event_recv','__INDIRECT__'
	.calls	'rt_event_recv','rt_cpus_lock'
	.calls	'rt_event_recv','rt_cpus_unlock'
	.calls	'rt_event_recv','rt_thread_suspend'
	.calls	'rt_event_recv','rt_timer_control'
	.calls	'rt_event_recv','rt_timer_start'
	.calls	'rt_event_recv','rt_schedule'
	.calls	'rt_event_control','rt_cpus_lock'
	.calls	'rt_event_control','rt_thread_resume'
	.calls	'rt_event_control','rt_cpus_unlock'
	.calls	'rt_event_control','rt_schedule'
	.calls	'rt_mb_init','rt_object_init'
	.calls	'rt_mb_detach','rt_cpus_lock'
	.calls	'rt_mb_detach','rt_thread_resume'
	.calls	'rt_mb_detach','rt_cpus_unlock'
	.calls	'rt_mb_detach','rt_object_detach'
	.calls	'rt_mb_send_wait','rt_thread_self'
	.calls	'rt_mb_send_wait','__INDIRECT__'
	.calls	'rt_mb_send_wait','rt_cpus_lock'
	.calls	'rt_mb_send_wait','rt_thread_suspend'
	.calls	'rt_mb_send_wait','rt_tick_get'
	.calls	'rt_mb_send_wait','rt_timer_control'
	.calls	'rt_mb_send_wait','rt_timer_start'
	.calls	'rt_mb_send_wait','rt_cpus_unlock'
	.calls	'rt_mb_send_wait','rt_schedule'
	.calls	'rt_mb_send_wait','rt_thread_resume'
	.calls	'rt_mb_send','rt_mb_send_wait'
	.calls	'rt_mb_urgent','__INDIRECT__'
	.calls	'rt_mb_urgent','rt_cpus_lock'
	.calls	'rt_mb_urgent','rt_cpus_unlock'
	.calls	'rt_mb_urgent','rt_thread_resume'
	.calls	'rt_mb_urgent','rt_schedule'
	.calls	'rt_mb_recv','rt_thread_self'
	.calls	'rt_mb_recv','__INDIRECT__'
	.calls	'rt_mb_recv','rt_cpus_lock'
	.calls	'rt_mb_recv','rt_cpus_unlock'
	.calls	'rt_mb_recv','rt_thread_suspend'
	.calls	'rt_mb_recv','rt_tick_get'
	.calls	'rt_mb_recv','rt_timer_control'
	.calls	'rt_mb_recv','rt_timer_start'
	.calls	'rt_mb_recv','rt_schedule'
	.calls	'rt_mb_recv','rt_thread_resume'
	.calls	'rt_mb_control','rt_cpus_lock'
	.calls	'rt_mb_control','rt_thread_resume'
	.calls	'rt_mb_control','rt_cpus_unlock'
	.calls	'rt_mb_control','rt_schedule'
	.calls	'rt_mq_init','rt_object_init'
	.calls	'rt_mq_detach','rt_cpus_lock'
	.calls	'rt_mq_detach','rt_thread_resume'
	.calls	'rt_mq_detach','rt_cpus_unlock'
	.calls	'rt_mq_detach','rt_object_detach'
	.calls	'rt_mq_send_wait','rt_thread_self'
	.calls	'rt_mq_send_wait','__INDIRECT__'
	.calls	'rt_mq_send_wait','rt_cpus_lock'
	.calls	'rt_mq_send_wait','rt_thread_suspend'
	.calls	'rt_mq_send_wait','rt_tick_get'
	.calls	'rt_mq_send_wait','rt_timer_control'
	.calls	'rt_mq_send_wait','rt_timer_start'
	.calls	'rt_mq_send_wait','rt_cpus_unlock'
	.calls	'rt_mq_send_wait','rt_schedule'
	.calls	'rt_mq_send_wait','rt_memcpy'
	.calls	'rt_mq_send_wait','rt_thread_resume'
	.calls	'rt_mq_send','rt_mq_send_wait'
	.calls	'rt_mq_urgent','__INDIRECT__'
	.calls	'rt_mq_urgent','rt_cpus_lock'
	.calls	'rt_mq_urgent','rt_cpus_unlock'
	.calls	'rt_mq_urgent','rt_memcpy'
	.calls	'rt_mq_urgent','rt_thread_resume'
	.calls	'rt_mq_urgent','rt_schedule'
	.calls	'rt_mq_recv','rt_thread_self'
	.calls	'rt_mq_recv','__INDIRECT__'
	.calls	'rt_mq_recv','rt_cpus_lock'
	.calls	'rt_mq_recv','rt_cpus_unlock'
	.calls	'rt_mq_recv','rt_thread_suspend'
	.calls	'rt_mq_recv','rt_tick_get'
	.calls	'rt_mq_recv','rt_timer_control'
	.calls	'rt_mq_recv','rt_timer_start'
	.calls	'rt_mq_recv','rt_schedule'
	.calls	'rt_mq_recv','rt_memcpy'
	.calls	'rt_mq_recv','rt_thread_resume'
	.calls	'rt_mq_control','rt_cpus_lock'
	.calls	'rt_mq_control','rt_thread_resume'
	.calls	'rt_mq_control','rt_cpus_unlock'
	.calls	'rt_mq_control','rt_schedule'
	.calls	'rt_sem_init','.cocofun_3'
	.calls	'rt_sem_detach','.cocofun_5'
	.calls	'rt_sem_detach','.cocofun_2'
	.calls	'rt_sem_release','.cocofun_4'
	.calls	'rt_sem_release','.cocofun_6'
	.calls	'rt_sem_control','.cocofun_2'
	.calls	'rt_mutex_init','.cocofun_3'
	.calls	'rt_mutex_init','.cocofun_7'
	.calls	'rt_mutex_detach','.cocofun_5'
	.calls	'rt_mutex_detach','.cocofun_2'
	.calls	'rt_mutex_take','.cocofun_9'
	.calls	'rt_mutex_release','.cocofun_4'
	.calls	'rt_mutex_release','.cocofun_6'
	.calls	'rt_mutex_release','.cocofun_7'
	.calls	'rt_event_init','.cocofun_3'
	.calls	'rt_event_detach','.cocofun_5'
	.calls	'rt_event_detach','.cocofun_2'
	.calls	'rt_event_send','.cocofun_4'
	.calls	'rt_event_recv','.cocofun_1'
	.calls	'rt_event_control','.cocofun_2'
	.calls	'rt_mb_init','.cocofun_3'
	.calls	'rt_mb_detach','.cocofun_2'
	.calls	'rt_mb_urgent','.cocofun_4'
	.calls	'rt_mb_urgent','.cocofun_6'
	.calls	'rt_mb_recv','.cocofun_9'
	.calls	'rt_mb_control','.cocofun_2'
	.calls	'rt_mq_init','.cocofun_3'
	.calls	'rt_mq_detach','.cocofun_2'
	.calls	'rt_mq_send_wait','.cocofun_8'
	.calls	'rt_mq_send_wait','.cocofun_4'
	.calls	'rt_mq_send_wait','.cocofun_6'
	.calls	'.cocofun_8','.cocofun_9'
	.calls	'rt_mq_urgent','.cocofun_4'
	.calls	'rt_mq_urgent','.cocofun_6'
	.calls	'rt_mq_recv','.cocofun_1'
	.calls	'.cocofun_1','.cocofun_8'
	.calls	'rt_mq_control','.cocofun_2'
	.calls	'rt_ipc_get_highest_priority','',0
	.calls	'rt_sem_init','',0
	.calls	'.cocofun_3','',0
	.calls	'rt_sem_detach','',0
	.calls	'.cocofun_5','',0
	.calls	'.cocofun_2','',0
	.calls	'rt_sem_take','',8
	.calls	'rt_sem_trytake','',0
	.calls	'rt_sem_release','',0
	.calls	'.cocofun_6','',0
	.calls	'.cocofun_4','',0
	.calls	'rt_sem_control','',0
	.calls	'rt_mutex_init','',0
	.calls	'.cocofun_7','',0
	.calls	'rt_mutex_detach','',0
	.calls	'rt_mutex_take','',8
	.calls	'rt_mutex_release','',8
	.calls	'rt_mutex_control','',0
	.calls	'rt_event_init','',0
	.calls	'rt_event_detach','',0
	.calls	'rt_event_send','',0
	.calls	'rt_event_recv','',8
	.calls	'rt_event_control','',0
	.calls	'rt_mb_init','',0
	.calls	'rt_mb_detach','',0
	.calls	'rt_mb_send_wait','',8
	.calls	'rt_mb_send','',0
	.calls	'rt_mb_urgent','',0
	.calls	'rt_mb_recv','',8
	.calls	'.cocofun_9','',0
	.calls	'rt_mb_control','',0
	.calls	'rt_mq_init','',0
	.calls	'rt_mq_detach','',0
	.calls	'rt_mq_send_wait','',8
	.calls	'.cocofun_8','',0
	.calls	'rt_mq_send','',0
	.calls	'rt_mq_urgent','',0
	.calls	'rt_mq_recv','',8
	.calls	'.cocofun_1','',0
	.extern	rt_object_init
	.extern	rt_object_detach
	.extern	rt_tick_get
	.extern	rt_timer_start
	.extern	rt_timer_control
	.extern	rt_thread_self
	.extern	rt_thread_control
	.extern	rt_thread_suspend
	.extern	rt_thread_resume
	.extern	rt_schedule
	.extern	rt_cpus_lock
	.extern	rt_cpus_unlock
	.extern	rt_memcpy
	.extern	rt_object_trytake_hook
	.extern	rt_object_take_hook
	.extern	rt_object_put_hook
	.extern	__INDIRECT__
	.calls	'rt_mq_control','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L371:
	.word	4363
	.half	3
	.word	.L372
	.byte	4
.L370:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L373
.L622:
	.byte	2
	.word	.L1270-.L371
.L1270:
	.byte	3
	.byte	'rt_list_node',0,2,229,2,8,8,4
	.byte	'next',0
	.word	167
	.byte	4,2,35,0,4
	.byte	'prev',0
	.word	167
	.byte	4,2,35,4,0
.L959:
	.byte	2
	.word	172
.L771:
	.byte	5
	.byte	'rt_list_init',0,3,1,47,16,1,1
.L774:
	.byte	6
	.byte	'l',0,1,47,40
	.word	220
.L776:
	.byte	7,0
.L625:
	.byte	5
	.byte	'rt_list_insert_before',0,3,1,73,16,1,1
.L628:
	.byte	6
	.byte	'l',0,1,73,49
	.word	220
.L630:
	.byte	6
	.byte	'n',0,1,73,63
	.word	220
.L632:
	.byte	7,0
.L607:
	.byte	8
	.byte	'int',0,4,5,9
	.word	172
	.byte	2
	.word	315
	.byte	10
	.byte	'rt_list_isempty',0,3,1,98,15
	.word	308
	.byte	1,1,6
	.byte	'l',0,1,98,48
	.word	320
	.byte	7,0
.L574:
	.byte	8
	.byte	'long int',0,4,5,8
	.byte	'char',0,1,6,11,8
	.word	376
	.byte	12,7,0
.L582:
	.byte	8
	.byte	'unsigned char',0,1,8,3
	.byte	'rt_object',0,2,131,3,8,20,4
	.byte	'name',0
	.word	384
	.byte	8,2,35,0,4
	.byte	'type',0
	.word	393
	.byte	1,2,35,8,4
	.byte	'flag',0
	.word	393
	.byte	1,2,35,9,4
	.byte	'list',0
	.word	172
	.byte	8,2,35,12,0,3
	.byte	'rt_ipc_object',0,2,185,5,8,28,4
	.byte	'parent',0
	.word	410
	.byte	20,2,35,0,4
	.byte	'suspend_thread',0
	.word	172
	.byte	8,2,35,20,0,2
	.word	483
.L584:
	.byte	10
	.byte	'rt_ipc_object_init',0,3,3,66,20
	.word	364
	.byte	1,1
.L587:
	.byte	6
	.byte	'ipc',0,3,66,61
	.word	544
.L589:
	.byte	13,7,0,0,14
	.byte	'void',0
.L656:
	.byte	2
	.word	595
.L580:
	.byte	8
	.byte	'unsigned int',0,4,7,8
	.byte	'unsigned short int',0,2,7
.L603:
	.byte	8
	.byte	'unsigned long int',0,4,7,11,8
	.word	172
	.byte	12,0,0,15,1,1,16
	.word	601
	.byte	0,2
	.word	674
	.byte	3
	.byte	'rt_timer',0,2,236,3,8,44,4
	.byte	'parent',0
	.word	410
	.byte	20,2,35,0,4
	.byte	'row',0
	.word	665
	.byte	8,2,35,20,4
	.byte	'timeout_func',0
	.word	683
	.byte	4,2,35,28,4
	.byte	'parameter',0
	.word	601
	.byte	4,2,35,32,4
	.byte	'init_tick',0
	.word	606
	.byte	4,2,35,36,4
	.byte	'timeout_tick',0
	.word	606
	.byte	4,2,35,40,0,15,1,1,16
	.word	.L601-.L371
	.byte	0,2
	.word	815
	.byte	3
	.byte	'rt_thread',0,2,213,4,8,136,1,4
	.byte	'name',0
	.word	384
	.byte	8,2,35,0,4
	.byte	'type',0
	.word	393
	.byte	1,2,35,8,4
	.byte	'flags',0
	.word	393
	.byte	1,2,35,9,4
	.byte	'list',0
	.word	172
	.byte	8,2,35,12,4
	.byte	'tlist',0
	.word	172
	.byte	8,2,35,20,4
	.byte	'sp',0
	.word	601
	.byte	4,2,35,28,4
	.byte	'entry',0
	.word	601
	.byte	4,2,35,32,4
	.byte	'parameter',0
	.word	601
	.byte	4,2,35,36,4
	.byte	'stack_addr',0
	.word	601
	.byte	4,2,35,40,4
	.byte	'stack_size',0
	.word	606
	.byte	4,2,35,44,4
	.byte	'error',0
	.word	364
	.byte	4,2,35,48,4
	.byte	'stat',0
	.word	393
	.byte	1,2,35,52,4
	.byte	'bind_cpu',0
	.word	393
	.byte	1,2,35,53,4
	.byte	'oncpu',0
	.word	393
	.byte	1,2,35,54,4
	.byte	'scheduler_lock_nest',0
	.word	622
	.byte	2,2,35,56,4
	.byte	'cpus_lock_nest',0
	.word	622
	.byte	2,2,35,58,4
	.byte	'critical_lock_nest',0
	.word	622
	.byte	2,2,35,60,4
	.byte	'current_priority',0
	.word	393
	.byte	1,2,35,62,4
	.byte	'init_priority',0
	.word	393
	.byte	1,2,35,63,4
	.byte	'number_mask',0
	.word	606
	.byte	4,2,35,64,4
	.byte	'event_set',0
	.word	606
	.byte	4,2,35,68,4
	.byte	'event_info',0
	.word	393
	.byte	1,2,35,72,4
	.byte	'init_tick',0
	.word	644
	.byte	4,2,35,74,4
	.byte	'remaining_tick',0
	.word	644
	.byte	4,2,35,78,4
	.byte	'thread_timer',0
	.word	688
	.byte	44,2,35,84,4
	.byte	'cleanup',0
	.word	824
	.byte	4,3,35,128,1,4
	.byte	'user_data',0
	.word	644
	.byte	4,3,35,132,1,0
.L601:
	.byte	2
	.word	829
.L611:
	.byte	10
	.byte	'rt_ipc_list_suspend',0,3,3,85,20
	.word	364
	.byte	1,1
.L613:
	.byte	6
	.byte	'list',0,3,85,58
	.word	220
.L615:
	.byte	6
	.byte	'thread',0,3,86,58
	.word	1360
.L617:
	.byte	6
	.byte	'flag',0,3,87,58
	.word	393
.L619:
	.byte	13
.L620:
	.byte	7,7,7,0,0
.L646:
	.byte	10
	.byte	'rt_ipc_list_resume',0,3,3,142,1,20
	.word	364
	.byte	1,1
.L649:
	.byte	6
	.byte	'list',0,3,142,1,50
	.word	220
.L651:
	.byte	7,0
.L594:
	.byte	10
	.byte	'rt_ipc_list_resume_all',0,3,3,165,1,20
	.word	364
	.byte	1,1
.L597:
	.byte	6
	.byte	'list',0,3,165,1,54
	.word	220
.L599:
	.byte	13,7,0,0,9
	.word	308
	.byte	17
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,16
	.word	1543
	.byte	0,18
	.word	606
	.byte	2
	.word	606
	.byte	19
	.byte	'__cmpswapw',0
	.word	1585
	.byte	1,1,1,1,20
	.byte	'p',0
	.word	1590
	.byte	20
	.byte	'value',0
	.word	606
	.byte	20
	.byte	'compare',0
	.word	606
	.byte	0,21
	.word	225
	.byte	22
	.word	245
	.byte	7,0,21
	.word	257
	.byte	22
	.word	286
	.byte	22
	.word	296
	.byte	7,0,21
	.word	325
	.byte	22
	.word	352
	.byte	7,0,2
	.word	410
	.byte	23
	.byte	'rt_object_class_type',0,2,161,3,6,1,24
	.byte	'RT_Object_Class_Null',0,0,24
	.byte	'RT_Object_Class_Thread',0,1,24
	.byte	'RT_Object_Class_Semaphore',0,2,24
	.byte	'RT_Object_Class_Mutex',0,3,24
	.byte	'RT_Object_Class_Event',0,4,24
	.byte	'RT_Object_Class_MailBox',0,5,24
	.byte	'RT_Object_Class_MessageQueue',0,6,24
	.byte	'RT_Object_Class_MemHeap',0,7,24
	.byte	'RT_Object_Class_MemPool',0,8,24
	.byte	'RT_Object_Class_Device',0,9,24
	.byte	'RT_Object_Class_Timer',0,10,24
	.byte	'RT_Object_Class_Module',0,11,24
	.byte	'RT_Object_Class_Unknown',0,12,24
	.byte	'RT_Object_Class_Static',0,128,1,0,9
	.word	376
.L578:
	.byte	2
	.word	2080
	.byte	25
	.byte	'rt_object_init',0,4,47,6,1,1,1,1,6
	.byte	'object',0,4,47,47
	.word	1688
	.byte	6
	.byte	'type',0,4,48,47
	.word	1693
	.byte	6
	.byte	'name',0,4,49,47
	.word	2085
	.byte	0,26
	.byte	'rt_object_t',0,2,142,3,27
	.word	1688
	.byte	25
	.byte	'rt_object_detach',0,4,50,6,1,1,1,1,6
	.byte	'object',0,4,50,35
	.word	2155
	.byte	0,2
	.word	410
	.byte	27
	.byte	'rt_tick_get',0,4,77,11
	.word	606
	.byte	1,1,1,1,2
	.word	688
	.byte	26
	.byte	'rt_timer_t',0,2,248,3,26
	.word	2246
	.byte	28
	.byte	'rt_timer_start',0,4,99,10
	.word	364
	.byte	1,1,1,1,6
	.byte	'timer',0,4,99,36
	.word	2251
	.byte	0,2
	.word	688
	.byte	28
	.byte	'rt_timer_control',0,4,101,10
	.word	364
	.byte	1,1,1,1,6
	.byte	'timer',0,4,101,38
	.word	2251
	.byte	6
	.byte	'cmd',0,4,101,49
	.word	308
	.byte	6
	.byte	'arg',0,4,101,60
	.word	601
	.byte	0,26
	.byte	'rt_thread_t',0,2,160,5,27
	.word	1360
	.byte	27
	.byte	'rt_thread_self',0,4,137,1,13
	.word	2386
	.byte	1,1,1,1,2
	.word	829
	.byte	28
	.byte	'rt_thread_control',0,4,146,1,10
	.word	364
	.byte	1,1,1,1,6
	.byte	'thread',0,4,146,1,40
	.word	2386
	.byte	6
	.byte	'cmd',0,4,146,1,52
	.word	308
	.byte	6
	.byte	'arg',0,4,146,1,63
	.word	601
	.byte	0,28
	.byte	'rt_thread_suspend',0,4,147,1,10
	.word	364
	.byte	1,1,1,1,6
	.byte	'thread',0,4,147,1,40
	.word	2386
	.byte	0,28
	.byte	'rt_thread_resume',0,4,148,1,10
	.word	364
	.byte	1,1,1,1,6
	.byte	'thread',0,4,148,1,39
	.word	2386
	.byte	0,29
	.byte	'rt_schedule',0,4,180,1,6,1,1,1,1,3
	.byte	'rt_semaphore',0,2,196,5,8,32,4
	.byte	'parent',0
	.word	483
	.byte	28,2,35,0,4
	.byte	'value',0
	.word	622
	.byte	2,2,35,28,4
	.byte	'reserved',0
	.word	622
	.byte	2,2,35,30,0,2
	.word	2630
	.byte	2
	.word	2630
.L576:
	.byte	26
	.byte	'rt_sem_t',0,2,203,5,30
	.word	2704
	.byte	3
	.byte	'rt_mutex',0,2,210,5,8,36,4
	.byte	'parent',0
	.word	483
	.byte	28,2,35,0,4
	.byte	'value',0
	.word	622
	.byte	2,2,35,28,4
	.byte	'original_priority',0
	.word	393
	.byte	1,2,35,30,4
	.byte	'hold',0
	.word	393
	.byte	1,2,35,31,4
	.byte	'owner',0
	.word	1360
	.byte	4,2,35,32,0,2
	.word	2727
	.byte	2
	.word	2727
.L666:
	.byte	26
	.byte	'rt_mutex_t',0,2,221,5,26
	.word	2835
	.byte	3
	.byte	'rt_event',0,2,235,5,8,32,4
	.byte	'parent',0
	.word	483
	.byte	28,2,35,0,4
	.byte	'set',0
	.word	606
	.byte	4,2,35,28,0,2
	.word	2860
	.byte	2
	.word	2860
.L714:
	.byte	26
	.byte	'rt_event_t',0,2,241,5,26
	.word	2910
.L741:
	.byte	2
	.word	606
.L820:
	.byte	2
	.word	644
	.byte	3
	.byte	'rt_mailbox',0,2,248,5,8,48,4
	.byte	'parent',0
	.word	483
	.byte	28,2,35,0,4
	.byte	'msg_pool',0
	.word	2940
	.byte	4,2,35,28,4
	.byte	'size',0
	.word	622
	.byte	2,2,35,32,4
	.byte	'entry',0
	.word	622
	.byte	2,2,35,34,4
	.byte	'in_offset',0
	.word	622
	.byte	2,2,35,36,4
	.byte	'out_offset',0
	.word	622
	.byte	2,2,35,38,4
	.byte	'suspend_sender_thread',0
	.word	172
	.byte	8,2,35,40,0,2
	.word	2945
	.byte	2
	.word	2945
.L762:
	.byte	26
	.byte	'rt_mailbox_t',0,2,134,6,28
	.word	3101
	.byte	3
	.byte	'rt_messagequeue',0,2,141,6,8,60,4
	.byte	'parent',0
	.word	483
	.byte	28,2,35,0,4
	.byte	'msg_pool',0
	.word	601
	.byte	4,2,35,28,4
	.byte	'msg_size',0
	.word	622
	.byte	2,2,35,32,4
	.byte	'max_msgs',0
	.word	622
	.byte	2,2,35,34,4
	.byte	'entry',0
	.word	622
	.byte	2,2,35,36,4
	.byte	'msg_queue_head',0
	.word	601
	.byte	4,2,35,40,4
	.byte	'msg_queue_tail',0
	.word	601
	.byte	4,2,35,44,4
	.byte	'msg_queue_free',0
	.word	601
	.byte	4,2,35,48,4
	.byte	'suspend_sender_thread',0
	.word	172
	.byte	8,2,35,52,0,2
	.word	3128
	.byte	2
	.word	3128
.L859:
	.byte	26
	.byte	'rt_mq_t',0,2,158,6,33
	.word	3344
	.byte	3
	.byte	'rt_mq_message',0,3,160,15,8,4,4
	.byte	'next',0
	.word	.L866-.L371
	.byte	4,2,35,0,0
.L866:
	.byte	2
	.word	3366
	.byte	9
	.word	595
.L888:
	.byte	2
	.word	3406
	.byte	27
	.byte	'rt_cpus_lock',0,4,224,3,11
	.word	364
	.byte	1,1,1,1,25
	.byte	'rt_cpus_unlock',0,4,225,3,6,1,1,1,1,6
	.byte	'level',0,4,225,3,31
	.word	364
	.byte	0,28
	.byte	'rt_memcpy',0,4,159,4,7
	.word	601
	.byte	1,1,1,1,6
	.byte	'dest',0,4,159,4,23
	.word	601
	.byte	6
	.byte	'src',0,4,159,4,41
	.word	3411
	.byte	6
	.byte	'n',0,4,159,4,57
	.word	644
	.byte	0,21
	.word	549
	.byte	22
	.word	579
	.byte	13,30
	.word	225
	.byte	22
	.word	245
	.byte	31
	.word	255
	.byte	0,7,0,0,21
	.word	1365
	.byte	22
	.word	1396
	.byte	22
	.word	1409
	.byte	22
	.word	1424
	.byte	13,13,30
	.word	257
	.byte	22
	.word	286
	.byte	22
	.word	296
	.byte	31
	.word	306
	.byte	0,30
	.word	257
	.byte	22
	.word	286
	.byte	22
	.word	296
	.byte	31
	.word	306
	.byte	0,0,7,7,0,0,21
	.word	1443
	.byte	22
	.word	1474
	.byte	7,0,21
	.word	1490
	.byte	22
	.word	1525
	.byte	13,30
	.word	325
	.byte	22
	.word	352
	.byte	31
	.word	362
	.byte	0,7,0,0,32
	.byte	'__INDIRECT__',0,3,1,1,1,1,1,26
	.byte	'__size_t',0,3,1,1
	.word	606
	.byte	33,1,2
	.word	3722
	.byte	26
	.byte	'__codeptr',0,3,1,1
	.word	3724
	.byte	26
	.byte	'__intptr_t',0,3,1,1
	.word	308
	.byte	26
	.byte	'__uintptr_t',0,3,1,1
	.word	606
	.byte	26
	.byte	'rt_int32_t',0,2,68,41
	.word	308
	.byte	26
	.byte	'rt_uint8_t',0,2,69,41
	.word	393
	.byte	26
	.byte	'rt_uint16_t',0,2,70,41
	.word	622
	.byte	26
	.byte	'rt_uint32_t',0,2,71,41
	.word	606
	.byte	26
	.byte	'rt_base_t',0,2,83,41
	.word	364
	.byte	26
	.byte	'rt_ubase_t',0,2,84,41
	.word	644
	.byte	26
	.byte	'rt_err_t',0,2,86,41
	.word	364
	.byte	26
	.byte	'rt_tick_t',0,2,88,41
	.word	606
	.byte	26
	.byte	'rt_size_t',0,2,90,41
	.word	644
	.byte	26
	.byte	'rt_list_t',0,2,234,2,29
	.word	172
	.byte	2
	.word	.L1271-.L371
.L1271:
	.byte	3
	.byte	'rt_slist_node',0,2,239,2,8,4,4
	.byte	'next',0
	.word	3973
	.byte	4,2,35,0,0,26
	.byte	'rt_slist_t',0,2,243,2,30
	.word	3978
	.byte	26
	.byte	'uint16_t',0,5,246,1,41
	.word	622
	.byte	26
	.byte	'uint32_t',0,5,254,1,41
	.word	606
	.byte	26
	.byte	'time_t',0,6,44,25
	.word	644
	.byte	26
	.byte	'fd_mask',0,7,39,17
	.word	364
	.byte	15,1,1,16
	.word	308
	.byte	16
	.word	601
	.byte	0,2
	.word	4100
	.byte	26
	.byte	'rt_isr_handler_t',0,8,73,16
	.word	4114
	.byte	3
	.byte	'__arch_tickets',0,8,140,1,12,4,4
	.byte	'owner',0
	.word	622
	.byte	2,2,35,0,4
	.byte	'next',0
	.word	622
	.byte	2,2,35,2,0,34,8,138,1,9,4,4
	.byte	'slock',0
	.word	644
	.byte	4,2,35,0,4
	.byte	'tickets',0
	.word	4144
	.byte	4,2,35,0,0,26
	.byte	'rt_hw_spinlock_t',0,8,144,1,3
	.word	4195
	.byte	15,1,1,16
	.word	1688
	.byte	0,2
	.word	4260
	.byte	35
	.byte	'rt_object_trytake_hook',0,3,48,15
	.word	4269
	.byte	1,1,35
	.byte	'rt_object_take_hook',0,3,49,15
	.word	4269
	.byte	1,1,35
	.byte	'rt_object_put_hook',0,3,50,15
	.word	4269
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L372:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,15,0,73,19,0,0,3,19,1,3,8,58,15,59,15,57,15,11,15,0,0
	.byte	4,13,0,3,8,73,19,11,15,56,9,0,0,5,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,6,5,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,7,11,0,0,0,8,36,0,3,8,11,15,62,15,0,0,9,38,0,73,19,0,0,10,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,11,1,1,11,15,73,19,0,0,12,33,0,47,15,0,0,13,11,1,0,0,14,59,0,3,8,0,0,15,21
	.byte	1,54,15,39,12,0,0,16,5,0,73,19,0,0,17,46,1,3,8,54,15,39,12,63,12,60,12,0,0,18,53,0,73,19,0,0,19,46,1,3
	.byte	8,73,19,54,15,39,12,63,12,60,12,0,0,20,5,0,3,8,73,19,0,0,21,46,1,49,19,0,0,22,5,0,49,19,0,0,23,4,1,3,8
	.byte	58,15,59,15,57,15,11,15,0,0,24,40,0,3,8,28,13,0,0,25,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12
	.byte	0,0,26,22,0,3,8,58,15,59,15,57,15,73,19,0,0,27,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12
	.byte	0,0,28,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,29,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,60,12,0,0,30,29,1,49,19,0,0,31,11,0,49,19,0,0,32,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60
	.byte	12,0,0,33,21,0,54,15,0,0,34,23,1,58,15,59,15,57,15,11,15,0,0,35,52,0,3,8,58,15,59,15,57,15,73,19,63,12
	.byte	60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L373:
	.word	.L1273-.L1272
.L1272:
	.half	3
	.word	.L1275-.L1274
.L1274:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc',0
	.byte	0
	.byte	'rtservice.h',0,1,0,0
	.byte	'rtdef.h',0,1,0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtthread.h',0,1,0,0
	.byte	'stdint.h',0,2,0,0
	.byte	'time.h',0,2,0,0
	.byte	'libc_fdset.h',0,3,0,0
	.byte	'rthw.h',0,1,0,0,0
.L1275:
.L1273:
	.sdecl	'.debug_info',debug,cluster('rt_sem_init')
	.sect	'.debug_info'
.L374:
	.word	324
	.half	3
	.word	.L375
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L377,.L376
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_sem_init',0,1,232,1,10
	.word	.L574
	.byte	1,1,1
	.word	.L293,.L575,.L292
	.byte	4
	.byte	'sem',0,1,232,1,34
	.word	.L576,.L577
	.byte	4
	.byte	'name',0,1,233,1,34
	.word	.L578,.L579
	.byte	4
	.byte	'value',0,1,234,1,34
	.word	.L580,.L581
	.byte	4
	.byte	'flag',0,1,235,1,34
	.word	.L582,.L583
	.byte	5
	.word	.L293,.L575
	.byte	6
	.word	.L584,.L585,.L586
	.byte	7
	.word	.L587,.L588
	.byte	8
	.word	.L589,.L590
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_sem_init')
	.sect	'.debug_abbrev'
.L375:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_sem_init')
	.sect	'.debug_line'
.L376:
	.word	.L1277-.L1276
.L1276:
	.half	3
	.word	.L1279-.L1278
.L1278:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1279:
	.byte	5,10,7,0,5,2
	.word	.L293
	.byte	3,231,1,1,5,43,9
	.half	.L972-.L293
	.byte	3,9,1,5,70,1,5,23,9
	.half	.L585-.L972
	.byte	3,212,126,1,5,16,9
	.half	.L586-.L585
	.byte	3,178,1,1,5,29,9
	.half	.L1280-.L586
	.byte	3,3,1,5,12,9
	.half	.L1281-.L1280
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L378-.L1281
	.byte	0,1,1
.L1277:
	.sdecl	'.debug_ranges',debug,cluster('rt_sem_init')
	.sect	'.debug_ranges'
.L377:
	.word	-1,.L293,0,.L378-.L293,0,0
.L590:
	.word	-1,.L293,.L585-.L293,.L586-.L293,-1,.L295,0,.L543-.L295,0,0
	.sdecl	'.debug_info',debug,cluster('rt_sem_detach')
	.sect	'.debug_info'
.L379:
	.word	306
	.half	3
	.word	.L380
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L382,.L381
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_sem_detach',0,1,137,2,10
	.word	.L574
	.byte	1,1,1
	.word	.L297,.L591,.L296
	.byte	4
	.byte	'sem',0,1,137,2,33
	.word	.L576,.L592
	.byte	5
	.word	.L593
	.byte	6
	.word	.L594,.L595,.L596
	.byte	7
	.word	.L597,.L598
	.byte	8
	.word	.L599,.L600
	.byte	9
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L602
	.byte	9
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L604
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_sem_detach')
	.sect	'.debug_abbrev'
.L380:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,85,6,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0
	.byte	0,0
	.sdecl	'.debug_line',debug,cluster('rt_sem_detach')
	.sect	'.debug_line'
.L381:
	.word	.L1283-.L1282
.L1282:
	.half	3
	.word	.L1285-.L1284
.L1284:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1285:
	.byte	5,10,7,0,5,2
	.word	.L297
	.byte	3,136,2,1,5,34,9
	.half	.L595-.L297
	.byte	3,162,127,1,5,39,9
	.half	.L7-.L595
	.byte	3,3,1,5,14,9
	.half	.L975-.L7
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L977-.L975
	.byte	3,9,1,5,32,9
	.half	.L978-.L977
	.byte	3,3,1,4,2,5,13,9
	.half	.L6-.L978
	.byte	3,167,127,1,4,1,9
	.half	.L1286-.L6
	.byte	3,199,0,1,5,35,7,9
	.half	.L596-.L1286
	.byte	3,233,0,1,5,12,9
	.half	.L980-.L596
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L383-.L980
	.byte	0,1,1
.L1283:
	.sdecl	'.debug_ranges',debug,cluster('rt_sem_detach')
	.sect	'.debug_ranges'
.L382:
	.word	-1,.L297,0,.L383-.L297,0,0
.L593:
	.word	-1,.L297,0,.L591-.L297,-1,.L299,0,.L553-.L299,0,0
.L600:
	.word	-1,.L297,.L595-.L297,.L596-.L297,-1,.L301,0,.L538-.L301,0,0
	.sdecl	'.debug_info',debug,cluster('rt_sem_take')
	.sect	'.debug_info'
.L384:
	.word	542
	.half	3
	.word	.L385
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L387,.L386
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_sem_take',0,1,229,2,10
	.word	.L574
	.byte	1,1,1
	.word	.L303,.L605,.L302
	.byte	4
	.byte	'sem',0,1,229,2,31
	.word	.L576,.L606
	.byte	4
	.byte	'time',0,1,229,2,47
	.word	.L607,.L608
	.byte	5
	.word	.L303,.L605
	.byte	6
	.byte	'temp',0,1,231,2,24
	.word	.L574,.L609
	.byte	6
	.byte	'thread',0,1,232,2,23
	.word	.L601,.L610
	.byte	7
	.word	.L611,.L612,.L16
	.byte	8
	.word	.L613,.L614
	.byte	8
	.word	.L615,.L616
	.byte	8
	.word	.L617,.L618
	.byte	9
	.word	.L619,.L612,.L16
	.byte	9
	.word	.L620,.L621,.L16
	.byte	6
	.byte	'n',0,1,100,34
	.word	.L622,.L623
	.byte	6
	.byte	'sthread',0,1,101,31
	.word	.L601,.L624
	.byte	7
	.word	.L625,.L626,.L627
	.byte	8
	.word	.L628,.L629
	.byte	8
	.word	.L630,.L631
	.byte	10
	.word	.L632,.L633
	.byte	0,7
	.word	.L625,.L634,.L635
	.byte	8
	.word	.L628,.L629
	.byte	8
	.word	.L630,.L631
	.byte	0,7
	.word	.L625,.L14,.L636
	.byte	8
	.word	.L628,.L629
	.byte	8
	.word	.L630,.L631
	.byte	10
	.word	.L632,.L637
	.byte	0,7
	.word	.L625,.L638,.L16
	.byte	8
	.word	.L628,.L629
	.byte	8
	.word	.L630,.L631
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_sem_take')
	.sect	'.debug_abbrev'
.L385:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,10,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_sem_take')
	.sect	'.debug_line'
.L386:
	.word	.L1288-.L1287
.L1287:
	.half	3
	.word	.L1290-.L1289
.L1289:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1290:
	.byte	5,5,7,0,5,2
	.word	.L303
	.byte	3,237,2,1,5,10,9
	.half	.L1291-.L303
	.byte	3,119,1,5,5,9
	.half	.L982-.L1291
	.byte	3,9,1,7,9
	.half	.L1292-.L982
	.byte	1,5,35,9
	.half	.L9-.L1292
	.byte	3,3,1,5,10,9
	.half	.L983-.L9
	.byte	1,5,12,3,7,1,5,5,9
	.half	.L985-.L983
	.byte	1,5,20,7,9
	.half	.L1293-.L985
	.byte	3,3,1,5,32,9
	.half	.L1294-.L1293
	.byte	3,3,1,5,22,9
	.half	.L984-.L1294
	.byte	3,125,1,5,13,9
	.half	.L10-.L984
	.byte	3,8,1,5,9,9
	.half	.L1295-.L10
	.byte	1,5,36,7,9
	.half	.L1296-.L1295
	.byte	3,2,1,5,20,9
	.half	.L986-.L1296
	.byte	3,2,1,5,1,3,51,1,5,36,7,9
	.half	.L12-.L986
	.byte	3,86,1,5,20,9
	.half	.L987-.L12
	.byte	1,5,29,9
	.half	.L989-.L987
	.byte	3,3,1,5,27,1,5,46,9
	.half	.L1297-.L989
	.byte	3,6,1,5,51,9
	.half	.L1298-.L1297
	.byte	3,2,1,5,33,9
	.half	.L612-.L1298
	.byte	3,127,1,5,10,9
	.half	.L990-.L612
	.byte	3,196,125,1,7,9
	.half	.L1299-.L990
	.byte	3,4,1,5,26,7,9
	.half	.L621-.L1299
	.byte	3,6,1,5,43,9
	.half	.L991-.L621
	.byte	1,5,27,9
	.half	.L18-.L991
	.byte	3,5,1,5,55,9
	.half	.L1300-.L18
	.byte	1,5,27,9
	.half	.L1301-.L1300
	.byte	3,125,1,5,17,9
	.half	.L992-.L1301
	.byte	3,3,1,4,2,5,6,7,9
	.half	.L626-.L992
	.byte	3,94,1,4,1,5,70,9
	.half	.L627-.L626
	.byte	3,37,1,4,2,5,19,9
	.half	.L634-.L627
	.byte	3,91,1,5,16,9
	.half	.L1302-.L634
	.byte	3,1,1,5,13,9
	.half	.L1303-.L1302
	.byte	1,9
	.half	.L1304-.L1303
	.byte	3,2,1,9
	.half	.L1305-.L1304
	.byte	3,1,1,4,1,5,21,9
	.half	.L635-.L1305
	.byte	3,34,1,5,50,9
	.half	.L19-.L635
	.byte	3,119,1,5,43,9
	.half	.L17-.L19
	.byte	1,5,13,7,9
	.half	.L20-.L17
	.byte	3,17,1,4,2,5,6,7,9
	.half	.L14-.L20
	.byte	3,82,1,4,1,5,53,9
	.half	.L636-.L14
	.byte	3,47,1,4,2,5,19,9
	.half	.L638-.L636
	.byte	3,81,1,5,16,9
	.half	.L1306-.L638
	.byte	3,1,1,5,13,9
	.half	.L1307-.L1306
	.byte	1,9
	.half	.L1308-.L1307
	.byte	3,2,1,9
	.half	.L1309-.L1308
	.byte	3,1,1,4,1,5,17,9
	.half	.L16-.L1309
	.byte	3,207,2,1,5,13,9
	.half	.L1310-.L16
	.byte	1,5,42,7,9
	.half	.L1311-.L1310
	.byte	3,6,1,5,34,9
	.half	.L1312-.L1311
	.byte	3,1,1,5,35,3,1,1,5,40,9
	.half	.L1313-.L1312
	.byte	3,1,1,5,36,9
	.half	.L22-.L1313
	.byte	3,4,1,5,24,9
	.half	.L1314-.L22
	.byte	3,3,1,5,23,9
	.half	.L1315-.L1314
	.byte	3,2,1,5,13,9
	.half	.L1316-.L1315
	.byte	1,5,5,7,9
	.half	.L11-.L1316
	.byte	3,7,1,5,12,9
	.half	.L25-.L11
	.byte	3,2,1,5,1,9
	.half	.L24-.L25
	.byte	3,1,1,7,9
	.half	.L388-.L24
	.byte	0,1,1
.L1288:
	.sdecl	'.debug_ranges',debug,cluster('rt_sem_take')
	.sect	'.debug_ranges'
.L387:
	.word	-1,.L303,0,.L388-.L303,0,0
.L633:
	.word	-1,.L303,.L626-.L303,.L627-.L303,.L634-.L303,.L635-.L303,0,0
.L637:
	.word	-1,.L303,.L14-.L303,.L636-.L303,.L638-.L303,.L16-.L303,0,0
	.sdecl	'.debug_info',debug,cluster('rt_sem_trytake')
	.sect	'.debug_info'
.L389:
	.word	239
	.half	3
	.word	.L390
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L392,.L391
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_sem_trytake',0,1,196,3,10
	.word	.L574
	.byte	1,1,1
	.word	.L305,.L639,.L304
	.byte	4
	.byte	'sem',0,1,196,3,34
	.word	.L576,.L640
	.byte	5
	.word	.L305,.L639
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_sem_trytake')
	.sect	'.debug_abbrev'
.L390:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_sem_trytake')
	.sect	'.debug_line'
.L391:
	.word	.L1318-.L1317
.L1317:
	.half	3
	.word	.L1320-.L1319
.L1319:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1320:
	.byte	5,29,7,0,5,2
	.word	.L305
	.byte	3,197,3,1,5,1,9
	.half	.L393-.L305
	.byte	3,1,0,1,1
.L1318:
	.sdecl	'.debug_ranges',debug,cluster('rt_sem_trytake')
	.sect	'.debug_ranges'
.L392:
	.word	-1,.L305,0,.L393-.L305,0,0
	.sdecl	'.debug_info',debug,cluster('rt_sem_release')
	.sect	'.debug_info'
.L394:
	.word	313
	.half	3
	.word	.L395
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L397,.L396
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_sem_release',0,1,210,3,10
	.word	.L574
	.byte	1,1,1
	.word	.L307,.L641,.L306
	.byte	4
	.byte	'sem',0,1,210,3,34
	.word	.L576,.L642
	.byte	5
	.word	.L643
	.byte	6
	.byte	'temp',0,1,212,3,24
	.word	.L574,.L644
	.byte	6
	.byte	'need_schedule',0,1,213,3,24
	.word	.L607,.L645
	.byte	7
	.word	.L646,.L647,.L648
	.byte	8
	.word	.L649,.L650
	.byte	9
	.word	.L651,.L652
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_sem_release')
	.sect	'.debug_abbrev'
.L395:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85,6,0
	.byte	0,0
	.sdecl	'.debug_line',debug,cluster('rt_sem_release')
	.sect	'.debug_line'
.L396:
	.word	.L1322-.L1321
.L1321:
	.half	3
	.word	.L1324-.L1323
.L1323:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1324:
	.byte	5,5,7,0,5,2
	.word	.L307
	.byte	3,218,3,1,5,10,9
	.half	.L1325-.L307
	.byte	3,119,1,5,5,9
	.half	.L995-.L1325
	.byte	3,9,1,7,9
	.half	.L1326-.L995
	.byte	1,5,19,9
	.half	.L28-.L1326
	.byte	3,2,1,5,35,3,3,1,5,10,9
	.half	.L998-.L28
	.byte	1,5,38,3,7,1,5,10,9
	.half	.L1327-.L998
	.byte	1,5,14,7,9
	.half	.L647-.L1327
	.byte	3,172,125,1,5,23,9
	.half	.L648-.L647
	.byte	3,216,2,1,5,58,3,127,1,5,15,9
	.half	.L29-.L648
	.byte	3,5,1,5,25,9
	.half	.L1328-.L29
	.byte	1,5,9,9
	.half	.L1329-.L1328
	.byte	1,5,24,7,9
	.half	.L1330-.L1329
	.byte	3,2,1,5,26,9
	.half	.L1331-.L1330
	.byte	1,5,36,9
	.half	.L31-.L1331
	.byte	3,4,1,5,20,9
	.half	.L999-.L31
	.byte	3,1,1,5,1,3,12,1,5,28,7,9
	.half	.L30-.L999
	.byte	3,121,1,5,5,9
	.half	.L1332-.L30
	.byte	3,3,1,5,20,7,9
	.half	.L1333-.L1332
	.byte	3,1,1,5,12,9
	.half	.L34-.L1333
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L398-.L34
	.byte	0,1,1
.L1322:
	.sdecl	'.debug_ranges',debug,cluster('rt_sem_release')
	.sect	'.debug_ranges'
.L397:
	.word	-1,.L307,0,.L398-.L307,0,0
.L643:
	.word	-1,.L307,0,.L641-.L307,-1,.L311,0,.L548-.L311,0,0
.L652:
	.word	-1,.L307,.L647-.L307,.L648-.L307,-1,.L309,0,.L558-.L309,0,0
	.sdecl	'.debug_info',debug,cluster('rt_sem_control')
	.sect	'.debug_info'
.L399:
	.word	378
	.half	3
	.word	.L400
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L402,.L401
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_sem_control',0,1,142,4,10
	.word	.L574
	.byte	1,1,1
	.word	.L313,.L653,.L312
	.byte	4
	.byte	'sem',0,1,142,4,34
	.word	.L576,.L654
	.byte	4
	.byte	'cmd',0,1,142,4,43
	.word	.L607,.L655
	.byte	4
	.byte	'arg',0,1,142,4,54
	.word	.L656,.L657
	.byte	5
	.word	.L313,.L653
	.byte	6
	.byte	'level',0,1,144,4,16
	.word	.L603,.L658
	.byte	5
	.word	.L659,.L36
	.byte	7
	.word	.L594,.L660,.L661
	.byte	8
	.word	.L597,.L662
	.byte	9
	.word	.L599,.L660,.L661
	.byte	6
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L663
	.byte	6
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L664
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_sem_control')
	.sect	'.debug_abbrev'
.L400:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_sem_control')
	.sect	'.debug_line'
.L401:
	.word	.L1335-.L1334
.L1334:
	.half	3
	.word	.L1337-.L1336
.L1336:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1337:
	.byte	5,10,7,0,5,2
	.word	.L313
	.byte	3,141,4,1,5,5,9
	.half	.L1003-.L313
	.byte	3,8,1,5,40,7,9
	.half	.L659-.L1003
	.byte	3,7,1,5,15,9
	.half	.L1000-.L659
	.byte	1,5,44,3,3,1,5,25,9
	.half	.L660-.L1000
	.byte	3,147,125,1,5,34,3,120,1,5,39,9
	.half	.L38-.L660
	.byte	3,3,1,5,14,9
	.half	.L1004-.L38
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1005-.L1004
	.byte	3,9,1,5,32,9
	.half	.L1006-.L1005
	.byte	3,3,1,4,2,5,13,9
	.half	.L37-.L1006
	.byte	3,167,127,1,4,1,9
	.half	.L1338-.L37
	.byte	3,199,0,1,5,29,7,9
	.half	.L661-.L1338
	.byte	3,240,2,1,5,20,9
	.half	.L1007-.L661
	.byte	3,8,1,5,32,9
	.half	.L1339-.L1007
	.byte	3,3,1,5,20,9
	.half	.L1340-.L1339
	.byte	3,2,1,5,16,9
	.half	.L1341-.L1340
	.byte	3,2,1,5,1,3,4,1,5,12,7,9
	.half	.L36-.L1341
	.byte	3,127,1,5,1,3,1,1,7,9
	.half	.L403-.L36
	.byte	0,1,1
.L1335:
	.sdecl	'.debug_ranges',debug,cluster('rt_sem_control')
	.sect	'.debug_ranges'
.L402:
	.word	-1,.L313,0,.L403-.L313,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mutex_init')
	.sect	'.debug_info'
.L404:
	.word	309
	.half	3
	.word	.L405
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L407,.L406
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mutex_init',0,1,189,4,10
	.word	.L574
	.byte	1,1,1
	.word	.L315,.L665,.L314
	.byte	4
	.byte	'mutex',0,1,189,4,35
	.word	.L666,.L667
	.byte	4
	.byte	'name',0,1,189,4,54
	.word	.L578,.L668
	.byte	4
	.byte	'flag',0,1,189,4,71
	.word	.L582,.L669
	.byte	5
	.word	.L670
	.byte	6
	.word	.L584,.L671,.L672
	.byte	7
	.word	.L587,.L673
	.byte	8
	.word	.L589,.L671,.L672
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mutex_init')
	.sect	'.debug_abbrev'
.L405:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mutex_init')
	.sect	'.debug_line'
.L406:
	.word	.L1343-.L1342
.L1342:
	.half	3
	.word	.L1345-.L1344
.L1344:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1345:
	.byte	5,10,7,0,5,2
	.word	.L315
	.byte	3,188,4,1,5,45,9
	.half	.L1008-.L315
	.byte	3,6,1,5,68,1,5,23,9
	.half	.L671-.L1008
	.byte	3,130,124,1,5,20,9
	.half	.L672-.L671
	.byte	3,131,4,1,5,18,9
	.half	.L1346-.L672
	.byte	1,5,20,9
	.half	.L1347-.L1346
	.byte	3,3,1,5,18,1,5,31,9
	.half	.L1348-.L1347
	.byte	3,3,1,5,1,9
	.half	.L1349-.L1348
	.byte	3,3,1,7,9
	.half	.L408-.L1349
	.byte	0,1,1
.L1343:
	.sdecl	'.debug_ranges',debug,cluster('rt_mutex_init')
	.sect	'.debug_ranges'
.L407:
	.word	-1,.L315,0,.L408-.L315,0,0
.L670:
	.word	-1,.L315,0,.L665-.L315,-1,.L317,0,.L563-.L317,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mutex_detach')
	.sect	'.debug_info'
.L409:
	.word	318
	.half	3
	.word	.L410
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L412,.L411
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mutex_detach',0,1,221,4,10
	.word	.L574
	.byte	1,1,1
	.word	.L319,.L674,.L318
	.byte	4
	.byte	'mutex',0,1,221,4,37
	.word	.L666,.L675
	.byte	5
	.word	.L319,.L674
	.byte	6
	.word	.L594,.L676,.L677
	.byte	7
	.word	.L597,.L678
	.byte	8
	.word	.L599,.L676,.L677
	.byte	9
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L679
	.byte	9
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L680
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mutex_detach')
	.sect	'.debug_abbrev'
.L410:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73
	.byte	16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mutex_detach')
	.sect	'.debug_line'
.L411:
	.word	.L1351-.L1350
.L1350:
	.half	3
	.word	.L1353-.L1352
.L1352:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1353:
	.byte	5,10,7,0,5,2
	.word	.L319
	.byte	3,220,4,1,5,34,9
	.half	.L676-.L319
	.byte	3,206,124,1,5,39,9
	.half	.L43-.L676
	.byte	3,3,1,5,14,9
	.half	.L1011-.L43
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1012-.L1011
	.byte	3,9,1,5,32,9
	.half	.L1013-.L1012
	.byte	3,3,1,4,2,5,13,9
	.half	.L42-.L1013
	.byte	3,167,127,1,4,1,9
	.half	.L1354-.L42
	.byte	3,199,0,1,5,37,7,9
	.half	.L677-.L1354
	.byte	3,189,3,1,5,12,9
	.half	.L1015-.L677
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L413-.L1015
	.byte	0,1,1
.L1351:
	.sdecl	'.debug_ranges',debug,cluster('rt_mutex_detach')
	.sect	'.debug_ranges'
.L412:
	.word	-1,.L319,0,.L413-.L319,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mutex_take')
	.sect	'.debug_info'
.L414:
	.word	518
	.half	3
	.word	.L415
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L417,.L416
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mutex_take',0,1,185,5,10
	.word	.L574
	.byte	1,1,1
	.word	.L321,.L681,.L320
	.byte	4
	.byte	'mutex',0,1,185,5,35
	.word	.L666,.L682
	.byte	4
	.byte	'time',0,1,185,5,53
	.word	.L607,.L683
	.byte	5
	.word	.L321,.L681
	.byte	6
	.byte	'temp',0,1,187,5,24
	.word	.L574,.L684
	.byte	6
	.byte	'thread',0,1,188,5,23
	.word	.L601,.L685
	.byte	7
	.word	.L611,.L686,.L56
	.byte	8
	.word	.L613,.L687
	.byte	8
	.word	.L615,.L688
	.byte	8
	.word	.L617,.L689
	.byte	9
	.word	.L619,.L686,.L56
	.byte	9
	.word	.L620,.L690,.L56
	.byte	6
	.byte	'n',0,1,100,34
	.word	.L622,.L691
	.byte	6
	.byte	'sthread',0,1,101,31
	.word	.L601,.L692
	.byte	7
	.word	.L625,.L693,.L694
	.byte	8
	.word	.L628,.L695
	.byte	8
	.word	.L630,.L696
	.byte	10
	.word	.L632,.L693,.L694
	.byte	0,7
	.word	.L625,.L54,.L697
	.byte	8
	.word	.L628,.L695
	.byte	8
	.word	.L630,.L696
	.byte	11
	.word	.L632,.L698
	.byte	0,7
	.word	.L625,.L699,.L56
	.byte	8
	.word	.L628,.L695
	.byte	8
	.word	.L630,.L696
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mutex_take')
	.sect	'.debug_abbrev'
.L415:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mutex_take')
	.sect	'.debug_line'
.L416:
	.word	.L1356-.L1355
.L1355:
	.half	3
	.word	.L1358-.L1357
.L1357:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1358:
	.byte	5,10,7,0,5,2
	.word	.L321
	.byte	3,184,5,1,5,28,9
	.half	.L1359-.L321
	.byte	3,13,1,5,12,9
	.half	.L1017-.L1359
	.byte	1,5,35,9
	.half	.L1027-.L1017
	.byte	3,3,1,5,5,9
	.half	.L1018-.L1027
	.byte	3,2,1,5,10,9
	.half	.L1360-.L1018
	.byte	3,126,1,5,5,9
	.half	.L1025-.L1360
	.byte	3,2,1,7,9
	.half	.L1361-.L1025
	.byte	1,5,21,9
	.half	.L45-.L1361
	.byte	3,7,1,5,19,1,5,14,9
	.half	.L1362-.L45
	.byte	3,2,1,5,5,9
	.half	.L1363-.L1362
	.byte	1,5,18,7,9
	.half	.L1364-.L1363
	.byte	3,21,1,5,9,9
	.half	.L1365-.L1364
	.byte	1,5,26,7,9
	.half	.L1366-.L1365
	.byte	3,3,1,5,38,9
	.half	.L1367-.L1366
	.byte	3,3,1,5,46,9
	.half	.L1368-.L1367
	.byte	3,1,1,5,38,9
	.half	.L1369-.L1368
	.byte	1,5,21,9
	.half	.L46-.L1369
	.byte	3,1,1,5,30,9
	.half	.L1370-.L46
	.byte	1,5,13,9
	.half	.L1371-.L1370
	.byte	1,5,29,7,9
	.half	.L1372-.L1371
	.byte	3,2,1,5,13,9
	.half	.L1373-.L1372
	.byte	3,2,1,5,40,9
	.half	.L48-.L1373
	.byte	3,2,1,5,24,9
	.half	.L1374-.L48
	.byte	3,1,1,5,1,3,210,0,1,5,17,7,9
	.half	.L47-.L1374
	.byte	3,180,127,1,5,13,9
	.half	.L1375-.L47
	.byte	1,5,33,7,9
	.half	.L1376-.L1375
	.byte	3,3,1,5,31,1,5,40,9
	.half	.L1377-.L1376
	.byte	3,3,1,5,24,9
	.half	.L1378-.L1377
	.byte	3,2,1,5,1,3,196,0,1,5,27,7,9
	.half	.L51-.L1378
	.byte	3,69,1,5,60,9
	.half	.L1379-.L51
	.byte	1,5,17,9
	.half	.L1380-.L1379
	.byte	1,5,39,7,9
	.half	.L1381-.L1380
	.byte	3,4,1,5,46,3,1,1,5,52,9
	.half	.L53-.L1381
	.byte	3,4,1,5,57,9
	.half	.L1382-.L53
	.byte	3,2,1,5,37,9
	.half	.L686-.L1382
	.byte	3,127,1,5,10,9
	.half	.L1021-.L686
	.byte	3,197,122,1,7,9
	.half	.L1383-.L1021
	.byte	3,4,1,5,26,7,9
	.half	.L690-.L1383
	.byte	3,6,1,5,43,9
	.half	.L1023-.L690
	.byte	1,5,27,9
	.half	.L58-.L1023
	.byte	3,5,1,5,55,9
	.half	.L1384-.L58
	.byte	1,5,27,9
	.half	.L1385-.L1384
	.byte	3,125,1,5,17,9
	.half	.L1024-.L1385
	.byte	3,3,1,5,70,7,9
	.half	.L1386-.L1024
	.byte	3,3,1,4,2,5,6,9
	.half	.L693-.L1386
	.byte	3,91,1,5,13,9
	.half	.L1387-.L693
	.byte	3,1,1,9
	.half	.L1388-.L1387
	.byte	3,2,1,9
	.half	.L1389-.L1388
	.byte	3,1,1,4,1,5,21,9
	.half	.L694-.L1389
	.byte	3,34,1,5,50,9
	.half	.L59-.L694
	.byte	3,119,1,5,43,9
	.half	.L57-.L59
	.byte	1,5,13,7,9
	.half	.L60-.L57
	.byte	3,17,1,4,2,5,6,7,9
	.half	.L54-.L60
	.byte	3,82,1,4,1,5,53,9
	.half	.L697-.L54
	.byte	3,47,1,4,2,5,19,9
	.half	.L699-.L697
	.byte	3,81,1,5,16,9
	.half	.L1390-.L699
	.byte	3,1,1,5,13,9
	.half	.L1391-.L1390
	.byte	1,9
	.half	.L1392-.L1391
	.byte	3,2,1,9
	.half	.L1393-.L1392
	.byte	3,1,1,4,1,5,21,9
	.half	.L56-.L1393
	.byte	3,206,5,1,5,17,9
	.half	.L1394-.L56
	.byte	1,5,46,7,9
	.half	.L1395-.L1394
	.byte	3,7,1,5,38,9
	.half	.L1396-.L1395
	.byte	3,1,1,5,39,3,1,1,5,44,9
	.half	.L1397-.L1396
	.byte	3,1,1,5,40,9
	.half	.L62-.L1397
	.byte	3,4,1,5,28,9
	.half	.L1398-.L62
	.byte	3,3,1,5,27,9
	.half	.L1399-.L1398
	.byte	3,2,1,5,17,9
	.half	.L1400-.L1399
	.byte	1,5,51,7,9
	.half	.L1401-.L1400
	.byte	3,14,1,5,26,9
	.half	.L1026-.L1401
	.byte	1,5,28,9
	.half	.L49-.L1026
	.byte	3,7,1,5,5,9
	.half	.L1402-.L49
	.byte	3,2,1,5,12,9
	.half	.L65-.L1402
	.byte	3,2,1,5,1,9
	.half	.L64-.L65
	.byte	3,1,1,7,9
	.half	.L418-.L64
	.byte	0,1,1
.L1356:
	.sdecl	'.debug_ranges',debug,cluster('rt_mutex_take')
	.sect	'.debug_ranges'
.L417:
	.word	-1,.L321,0,.L418-.L321,0,0
.L698:
	.word	-1,.L321,.L54-.L321,.L697-.L321,.L699-.L321,.L56-.L321,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mutex_release')
	.sect	'.debug_info'
.L419:
	.word	380
	.half	3
	.word	.L420
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L422,.L421
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mutex_release',0,1,213,6,10
	.word	.L574
	.byte	1,1,1
	.word	.L323,.L700,.L322
	.byte	4
	.byte	'mutex',0,1,213,6,38
	.word	.L666,.L701
	.byte	5
	.word	.L323,.L700
	.byte	6
	.byte	'temp',0,1,215,6,24
	.word	.L574,.L702
	.byte	6
	.byte	'thread',0,1,216,6,23
	.word	.L601,.L703
	.byte	6
	.byte	'need_schedule',0,1,217,6,15
	.word	.L607,.L704
	.byte	6
	.byte	'max_priority_in_queue',0,1,218,6,16
	.word	.L582,.L705
	.byte	7
	.word	.L646,.L706,.L707
	.byte	8
	.word	.L649,.L708
	.byte	9
	.word	.L651,.L706,.L707
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mutex_release')
	.sect	'.debug_abbrev'
.L420:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mutex_release')
	.sect	'.debug_line'
.L421:
	.word	.L1404-.L1403
.L1403:
	.half	3
	.word	.L1406-.L1405
.L1405:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1406:
	.byte	5,10,7,0,5,2
	.word	.L323
	.byte	3,212,6,1,5,63,9
	.half	.L1033-.L323
	.byte	3,5,1,5,38,1,5,19,9
	.half	.L1407-.L1033
	.byte	3,6,1,5,28,3,6,1,5,12,9
	.half	.L1030-.L1407
	.byte	1,5,35,9
	.half	.L1035-.L1030
	.byte	3,3,1,5,5,9
	.half	.L1031-.L1035
	.byte	3,6,1,5,10,9
	.half	.L1408-.L1031
	.byte	3,122,1,5,5,9
	.half	.L1034-.L1408
	.byte	3,6,1,7,9
	.half	.L1409-.L1034
	.byte	1,5,24,9
	.half	.L67-.L1409
	.byte	3,3,1,5,5,9
	.half	.L1410-.L67
	.byte	1,5,25,7,9
	.half	.L1411-.L1410
	.byte	3,2,1,5,23,1,5,32,9
	.half	.L1412-.L1411
	.byte	3,3,1,5,16,9
	.half	.L1413-.L1412
	.byte	3,2,1,5,1,3,216,0,1,5,10,7,9
	.half	.L68-.L1413
	.byte	3,172,127,1,5,17,9
	.half	.L1414-.L68
	.byte	1,5,14,9
	.half	.L1415-.L1414
	.byte	3,2,1,5,5,9
	.half	.L1416-.L1415
	.byte	1,5,46,7,9
	.half	.L1417-.L1416
	.byte	3,3,1,5,18,9
	.half	.L1418-.L1417
	.byte	1,5,53,9
	.half	.L1419-.L1418
	.byte	1,5,9,9
	.half	.L1420-.L1419
	.byte	1,5,31,7,9
	.half	.L1421-.L1420
	.byte	3,3,1,5,38,3,1,1,5,44,9
	.half	.L71-.L1421
	.byte	3,4,1,5,14,9
	.half	.L1422-.L71
	.byte	1,5,22,7,9
	.half	.L1423-.L1422
	.byte	3,3,1,5,79,9
	.half	.L1424-.L1423
	.byte	3,17,1,5,22,9
	.half	.L1425-.L1424
	.byte	3,111,1,5,38,9
	.half	.L1426-.L1425
	.byte	3,8,1,5,46,9
	.half	.L1427-.L1426
	.byte	3,1,1,5,38,9
	.half	.L1428-.L1427
	.byte	1,5,79,9
	.half	.L1429-.L1428
	.byte	3,8,1,5,37,9
	.half	.L1430-.L1429
	.byte	3,1,1,5,35,9
	.half	.L1431-.L1430
	.byte	3,127,1,5,17,9
	.half	.L1432-.L1431
	.byte	3,1,1,5,23,7,9
	.half	.L1433-.L1432
	.byte	3,1,1,5,42,9
	.half	.L1434-.L1433
	.byte	1,5,25,7,9
	.half	.L1435-.L1434
	.byte	3,3,1,5,27,3,1,1,5,21,9
	.half	.L73-.L1435
	.byte	3,3,1,5,30,9
	.half	.L1436-.L73
	.byte	1,5,13,9
	.half	.L1437-.L1436
	.byte	1,5,29,7,9
	.half	.L1438-.L1437
	.byte	3,2,1,5,14,9
	.half	.L706-.L1438
	.byte	3,234,121,1,5,27,9
	.half	.L707-.L706
	.byte	3,161,6,1,5,64,3,126,1,5,21,9
	.half	.L72-.L707
	.byte	3,6,1,5,31,9
	.half	.L1439-.L72
	.byte	1,5,13,9
	.half	.L1440-.L1439
	.byte	1,5,30,7,9
	.half	.L1441-.L1440
	.byte	3,3,1,5,32,9
	.half	.L1442-.L1441
	.byte	1,5,40,9
	.half	.L75-.L1442
	.byte	3,4,1,5,24,9
	.half	.L1443-.L75
	.byte	3,1,1,5,1,3,17,1,5,28,7,9
	.half	.L70-.L1443
	.byte	3,121,1,5,5,9
	.half	.L1444-.L70
	.byte	3,3,1,5,20,7,9
	.half	.L1445-.L1444
	.byte	3,1,1,5,12,9
	.half	.L80-.L1445
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L423-.L80
	.byte	0,1,1
.L1404:
	.sdecl	'.debug_ranges',debug,cluster('rt_mutex_release')
	.sect	'.debug_ranges'
.L422:
	.word	-1,.L323,0,.L423-.L323,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mutex_control')
	.sect	'.debug_info'
.L424:
	.word	277
	.half	3
	.word	.L425
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L427,.L426
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mutex_control',0,1,221,7,10
	.word	.L574
	.byte	1,1,1
	.word	.L325,.L709,.L324
	.byte	4
	.byte	'mutex',0,1,221,7,38
	.word	.L666,.L710
	.byte	4
	.byte	'cmd',0,1,221,7,49
	.word	.L607,.L711
	.byte	4
	.byte	'arg',0,1,221,7,60
	.word	.L656,.L712
	.byte	5
	.word	.L325,.L709
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mutex_control')
	.sect	'.debug_abbrev'
.L425:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mutex_control')
	.sect	'.debug_line'
.L426:
	.word	.L1447-.L1446
.L1446:
	.half	3
	.word	.L1449-.L1448
.L1448:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1449:
	.byte	5,12,7,0,5,2
	.word	.L325
	.byte	3,226,7,1,5,1,3,1,1,7,9
	.half	.L428-.L325
	.byte	0,1,1
.L1447:
	.sdecl	'.debug_ranges',debug,cluster('rt_mutex_control')
	.sect	'.debug_ranges'
.L427:
	.word	-1,.L325,0,.L428-.L325,0,0
	.sdecl	'.debug_info',debug,cluster('rt_event_init')
	.sect	'.debug_info'
.L429:
	.word	313
	.half	3
	.word	.L430
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L432,.L431
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_event_init',0,1,243,7,10
	.word	.L574
	.byte	1,1,1
	.word	.L327,.L713,.L326
	.byte	4
	.byte	'event',0,1,243,7,35
	.word	.L714,.L715
	.byte	4
	.byte	'name',0,1,243,7,54
	.word	.L578,.L716
	.byte	4
	.byte	'flag',0,1,243,7,71
	.word	.L582,.L717
	.byte	5
	.word	.L327,.L713
	.byte	6
	.word	.L584,.L718,.L719
	.byte	7
	.word	.L587,.L720
	.byte	8
	.word	.L589,.L718,.L719
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_event_init')
	.sect	'.debug_abbrev'
.L430:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_event_init')
	.sect	'.debug_line'
.L431:
	.word	.L1451-.L1450
.L1450:
	.half	3
	.word	.L1453-.L1452
.L1452:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1453:
	.byte	5,10,7,0,5,2
	.word	.L327
	.byte	3,242,7,1,5,45,9
	.half	.L1039-.L327
	.byte	3,6,1,5,68,1,5,31,9
	.half	.L1038-.L1039
	.byte	3,3,1,5,23,9
	.half	.L718-.L1038
	.byte	3,201,120,1,5,18,9
	.half	.L719-.L718
	.byte	3,189,7,1,5,16,1,5,1,9
	.half	.L1454-.L719
	.byte	3,3,1,7,9
	.half	.L433-.L1454
	.byte	0,1,1
.L1451:
	.sdecl	'.debug_ranges',debug,cluster('rt_event_init')
	.sect	'.debug_ranges'
.L432:
	.word	-1,.L327,0,.L433-.L327,0,0
	.sdecl	'.debug_info',debug,cluster('rt_event_detach')
	.sect	'.debug_info'
.L434:
	.word	318
	.half	3
	.word	.L435
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L437,.L436
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_event_detach',0,1,143,8,10
	.word	.L574
	.byte	1,1,1
	.word	.L329,.L721,.L328
	.byte	4
	.byte	'event',0,1,143,8,37
	.word	.L714,.L722
	.byte	5
	.word	.L329,.L721
	.byte	6
	.word	.L594,.L723,.L724
	.byte	7
	.word	.L597,.L725
	.byte	8
	.word	.L599,.L723,.L724
	.byte	9
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L726
	.byte	9
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L727
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_event_detach')
	.sect	'.debug_abbrev'
.L435:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73
	.byte	16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_event_detach')
	.sect	'.debug_line'
.L436:
	.word	.L1456-.L1455
.L1455:
	.half	3
	.word	.L1458-.L1457
.L1457:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1458:
	.byte	5,10,7,0,5,2
	.word	.L329
	.byte	3,142,8,1,5,34,9
	.half	.L723-.L329
	.byte	3,156,121,1,5,39,9
	.half	.L85-.L723
	.byte	3,3,1,5,14,9
	.half	.L1041-.L85
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1042-.L1041
	.byte	3,9,1,5,32,9
	.half	.L1043-.L1042
	.byte	3,3,1,4,2,5,13,9
	.half	.L84-.L1043
	.byte	3,167,127,1,4,1,9
	.half	.L1459-.L84
	.byte	3,199,0,1,5,37,7,9
	.half	.L724-.L1459
	.byte	3,239,6,1,5,12,9
	.half	.L1045-.L724
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L438-.L1045
	.byte	0,1,1
.L1456:
	.sdecl	'.debug_ranges',debug,cluster('rt_event_detach')
	.sect	'.debug_ranges'
.L437:
	.word	-1,.L329,0,.L438-.L329,0,0
	.sdecl	'.debug_info',debug,cluster('rt_event_send')
	.sect	'.debug_info'
.L439:
	.word	359
	.half	3
	.word	.L440
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L442,.L441
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_event_send',0,1,229,8,10
	.word	.L574
	.byte	1,1,1
	.word	.L331,.L728,.L330
	.byte	4
	.byte	'event',0,1,229,8,35
	.word	.L714,.L729
	.byte	4
	.byte	'set',0,1,229,8,54
	.word	.L580,.L730
	.byte	5
	.word	.L331,.L728
	.byte	6
	.byte	'n',0,1,231,8,26
	.word	.L622,.L731
	.byte	6
	.byte	'thread',0,1,232,8,23
	.word	.L601,.L732
	.byte	6
	.byte	'level',0,1,233,8,25
	.word	.L603,.L733
	.byte	6
	.byte	'status',0,1,234,8,24
	.word	.L574,.L734
	.byte	6
	.byte	'need_schedule',0,1,235,8,15
	.word	.L607,.L735
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_event_send')
	.sect	'.debug_abbrev'
.L440:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_event_send')
	.sect	'.debug_line'
.L441:
	.word	.L1461-.L1460
.L1460:
	.half	3
	.word	.L1463-.L1462
.L1462:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1463:
	.byte	5,10,7,0,5,2
	.word	.L331
	.byte	3,228,8,1,5,5,9
	.half	.L1047-.L331
	.byte	3,12,1,5,16,7,9
	.half	.L1464-.L1047
	.byte	3,1,1,5,1,3,204,0,1,5,19,7,9
	.half	.L87-.L1464
	.byte	3,182,127,1,5,36,3,3,1,5,10,9
	.half	.L1046-.L87
	.byte	3,3,1,5,11,9
	.half	.L1465-.L1046
	.byte	3,125,1,5,16,9
	.half	.L1051-.L1465
	.byte	3,3,1,5,5,9
	.half	.L1048-.L1051
	.byte	3,2,1,5,40,9
	.half	.L89-.L1048
	.byte	3,2,1,5,10,9
	.half	.L1049-.L89
	.byte	1,5,41,7,9
	.half	.L1466-.L1049
	.byte	3,3,1,5,52,9
	.half	.L1052-.L1466
	.byte	3,1,1,5,20,9
	.half	.L92-.L1052
	.byte	3,5,1,5,23,3,1,1,5,22,9
	.half	.L1053-.L92
	.byte	3,125,1,5,13,9
	.half	.L1055-.L1053
	.byte	3,3,1,5,28,7,9
	.half	.L1467-.L1055
	.byte	3,2,1,5,47,9
	.half	.L1468-.L1467
	.byte	1,5,40,9
	.half	.L1469-.L1468
	.byte	1,5,17,9
	.half	.L1470-.L1469
	.byte	1,7,9
	.half	.L1471-.L1470
	.byte	1,5,18,9
	.half	.L93-.L1471
	.byte	3,6,1,5,27,7,9
	.half	.L1472-.L93
	.byte	3,2,1,5,46,9
	.half	.L1473-.L1472
	.byte	1,5,39,9
	.half	.L1474-.L1473
	.byte	1,5,17,9
	.half	.L1475-.L1474
	.byte	1,5,39,7,9
	.half	.L1476-.L1475
	.byte	3,3,1,5,28,9
	.half	.L95-.L1476
	.byte	3,3,1,5,17,3,122,1,5,40,9
	.half	.L96-.L95
	.byte	3,12,1,5,24,9
	.half	.L1054-.L96
	.byte	3,2,1,5,1,3,30,1,5,18,7,9
	.half	.L94-.L1054
	.byte	3,102,1,5,13,9
	.half	.L1477-.L94
	.byte	3,3,1,5,27,7,9
	.half	.L1478-.L1477
	.byte	3,3,1,5,17,9
	.half	.L1479-.L1478
	.byte	1,5,35,7,9
	.half	.L1480-.L1479
	.byte	3,1,1,5,42,1,5,26,9
	.half	.L1056-.L1480
	.byte	1,5,35,9
	.half	.L1481-.L1056
	.byte	1,5,32,9
	.half	.L1482-.L1481
	.byte	1,5,34,9
	.half	.L101-.L1482
	.byte	3,3,1,5,31,9
	.half	.L1057-.L101
	.byte	3,3,1,5,36,9
	.half	.L91-.L1057
	.byte	3,81,1,5,52,9
	.half	.L1483-.L91
	.byte	1,5,28,7,9
	.half	.L90-.L1483
	.byte	3,53,1,5,5,9
	.half	.L1484-.L90
	.byte	3,3,1,5,20,7,9
	.half	.L1485-.L1484
	.byte	3,1,1,5,12,9
	.half	.L102-.L1485
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L443-.L102
	.byte	0,1,1
.L1461:
	.sdecl	'.debug_ranges',debug,cluster('rt_event_send')
	.sect	'.debug_ranges'
.L442:
	.word	-1,.L331,0,.L443-.L331,0,0
	.sdecl	'.debug_info',debug,cluster('rt_event_recv')
	.sect	'.debug_info'
.L444:
	.word	432
	.half	3
	.word	.L445
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L447,.L446
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_event_recv',0,1,206,9,10
	.word	.L574
	.byte	1,1,1
	.word	.L333,.L736,.L332
	.byte	4
	.byte	'event',0,1,206,9,37
	.word	.L714,.L737
	.byte	4
	.byte	'set',0,1,207,9,37
	.word	.L580,.L738
	.byte	4
	.byte	'option',0,1,208,9,37
	.word	.L582,.L739
	.byte	4
	.byte	'timeout',0,1,209,9,37
	.word	.L607,.L740
	.byte	4
	.byte	'recved',0,1,210,9,37
	.word	.L741,.L742
	.byte	5
	.word	.L333,.L736
	.byte	6
	.byte	'thread',0,1,212,9,23
	.word	.L601,.L743
	.byte	6
	.byte	'level',0,1,213,9,25
	.word	.L603,.L744
	.byte	6
	.byte	'status',0,1,214,9,24
	.word	.L574,.L745
	.byte	7
	.word	.L611,.L746,.L747
	.byte	8
	.word	.L613,.L748
	.byte	8
	.word	.L615,.L749
	.byte	8
	.word	.L617,.L750
	.byte	9
	.word	.L619,.L746,.L747
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_event_recv')
	.sect	'.debug_abbrev'
.L445:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_event_recv')
	.sect	'.debug_line'
.L446:
	.word	.L1487-.L1486
.L1486:
	.half	3
	.word	.L1489-.L1488
.L1488:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1489:
	.byte	5,10,7,0,5,2
	.word	.L333
	.byte	3,205,9,1,5,5,9
	.half	.L1060-.L333
	.byte	3,16,1,5,16,7,9
	.half	.L1061-.L1060
	.byte	3,1,1,5,1,3,230,0,1,5,12,7,9
	.half	.L104-.L1061
	.byte	3,157,127,1,5,28,3,2,1,5,12,9
	.half	.L1059-.L104
	.byte	1,5,21,9
	.half	.L1086-.L1059
	.byte	3,2,1,5,19,1,5,5,9
	.half	.L1490-.L1086
	.byte	3,2,1,5,36,9
	.half	.L106-.L1490
	.byte	3,3,1,5,11,9
	.half	.L1064-.L106
	.byte	1,5,5,9
	.half	.L1066-.L1064
	.byte	3,3,1,5,19,7,9
	.half	.L1067-.L1066
	.byte	3,2,1,5,25,9
	.half	.L1068-.L1067
	.byte	1,5,9,9
	.half	.L1491-.L1068
	.byte	1,7,9
	.half	.L1069-.L1491
	.byte	1,5,10,9
	.half	.L107-.L1069
	.byte	3,3,1,5,18,7,9
	.half	.L1070-.L107
	.byte	3,2,1,5,24,9
	.half	.L1071-.L1070
	.byte	1,5,9,9
	.half	.L1072-.L1071
	.byte	1,5,20,7,9
	.half	.L109-.L1072
	.byte	3,1,1,5,5,9
	.half	.L108-.L109
	.byte	3,8,1,5,9,7,9
	.half	.L1492-.L108
	.byte	3,3,1,5,29,7,9
	.half	.L1493-.L1492
	.byte	3,1,1,5,35,9
	.half	.L1073-.L1493
	.byte	1,5,21,1,5,35,9
	.half	.L113-.L1073
	.byte	3,3,1,5,41,9
	.half	.L1074-.L113
	.byte	1,5,27,1,5,28,9
	.half	.L1075-.L1074
	.byte	3,1,1,5,9,9
	.half	.L1494-.L1075
	.byte	3,3,1,5,27,7,9
	.half	.L1076-.L1494
	.byte	3,1,1,5,18,1,5,27,9
	.half	.L1495-.L1076
	.byte	1,5,24,9
	.half	.L1496-.L1495
	.byte	1,5,9,9
	.half	.L1497-.L1496
	.byte	3,127,1,5,14,9
	.half	.L112-.L1497
	.byte	3,3,1,5,10,9
	.half	.L1498-.L112
	.byte	1,5,25,7,9
	.half	.L1499-.L1498
	.byte	3,3,1,5,23,1,5,32,9
	.half	.L1500-.L1499
	.byte	3,3,1,5,16,9
	.half	.L1065-.L1500
	.byte	3,2,1,5,1,3,49,1,5,28,7,9
	.half	.L116-.L1065
	.byte	3,84,1,9
	.half	.L1077-.L116
	.byte	3,1,1,5,44,9
	.half	.L1078-.L1077
	.byte	3,3,1,5,49,9
	.half	.L1501-.L1078
	.byte	3,2,1,5,29,9
	.half	.L746-.L1501
	.byte	3,127,1,5,10,9
	.half	.L1502-.L746
	.byte	3,192,118,1,5,13,9
	.half	.L747-.L1502
	.byte	3,196,9,1,5,9,9
	.half	.L1503-.L747
	.byte	1,5,38,7,9
	.half	.L1504-.L1503
	.byte	3,3,1,5,30,9
	.half	.L1505-.L1504
	.byte	3,1,1,5,31,3,1,1,5,36,9
	.half	.L1506-.L1505
	.byte	3,1,1,5,32,9
	.half	.L126-.L1506
	.byte	3,4,1,5,20,9
	.half	.L1507-.L126
	.byte	3,3,1,5,19,9
	.half	.L1508-.L1507
	.byte	3,2,1,5,9,9
	.half	.L1509-.L1508
	.byte	1,5,40,7,9
	.half	.L1510-.L1509
	.byte	3,7,1,5,15,9
	.half	.L1085-.L1510
	.byte	1,5,9,3,3,1,5,29,7,9
	.half	.L1087-.L1085
	.byte	3,1,1,5,21,9
	.half	.L1511-.L1087
	.byte	1,5,28,9
	.half	.L114-.L1511
	.byte	3,4,1,5,5,9
	.half	.L1512-.L114
	.byte	3,2,1,5,18,9
	.half	.L127-.L1512
	.byte	3,2,1,5,1,9
	.half	.L1513-.L127
	.byte	3,1,1,7,9
	.half	.L448-.L1513
	.byte	0,1,1
.L1487:
	.sdecl	'.debug_ranges',debug,cluster('rt_event_recv')
	.sect	'.debug_ranges'
.L447:
	.word	-1,.L333,0,.L448-.L333,0,0
	.sdecl	'.debug_info',debug,cluster('rt_event_control')
	.sect	'.debug_info'
.L449:
	.word	372
	.half	3
	.word	.L450
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L452,.L451
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_event_control',0,1,209,10,10
	.word	.L574
	.byte	1,1,1
	.word	.L335,.L751,.L334
	.byte	4
	.byte	'event',0,1,209,10,38
	.word	.L714,.L752
	.byte	4
	.byte	'cmd',0,1,209,10,49
	.word	.L607,.L753
	.byte	4
	.byte	'arg',0,1,209,10,60
	.word	.L656,.L754
	.byte	5
	.word	.L335,.L751
	.byte	6
	.byte	'level',0,1,211,10,16
	.word	.L603,.L755
	.byte	7
	.word	.L594,.L756,.L757
	.byte	8
	.word	.L597,.L758
	.byte	9
	.word	.L599,.L756,.L757
	.byte	6
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L759
	.byte	6
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L760
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_event_control')
	.sect	'.debug_abbrev'
.L450:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_event_control')
	.sect	'.debug_line'
.L451:
	.word	.L1515-.L1514
.L1514:
	.half	3
	.word	.L1517-.L1516
.L1516:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1517:
	.byte	5,10,7,0,5,2
	.word	.L335
	.byte	3,208,10,1,5,5,9
	.half	.L1090-.L335
	.byte	3,8,1,5,40,7,9
	.half	.L1518-.L1090
	.byte	3,3,1,5,15,9
	.half	.L1089-.L1518
	.byte	1,5,46,3,3,1,5,25,9
	.half	.L756-.L1089
	.byte	3,212,118,1,5,34,3,120,1,5,39,9
	.half	.L133-.L756
	.byte	3,3,1,5,14,9
	.half	.L1092-.L133
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1093-.L1092
	.byte	3,9,1,5,32,9
	.half	.L1094-.L1093
	.byte	3,3,1,4,2,5,13,9
	.half	.L132-.L1094
	.byte	3,167,127,1,4,1,9
	.half	.L1519-.L132
	.byte	3,199,0,1,5,22,7,9
	.half	.L757-.L1519
	.byte	3,183,9,1,5,20,1,5,32,9
	.half	.L1520-.L757
	.byte	3,3,1,5,20,9
	.half	.L1521-.L1520
	.byte	3,2,1,5,16,9
	.half	.L1522-.L1521
	.byte	3,2,1,5,1,3,4,1,5,12,7,9
	.half	.L131-.L1522
	.byte	3,127,1,5,1,3,1,1,7,9
	.half	.L453-.L131
	.byte	0,1,1
.L1515:
	.sdecl	'.debug_ranges',debug,cluster('rt_event_control')
	.sect	'.debug_ranges'
.L452:
	.word	-1,.L335,0,.L453-.L335,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mb_init')
	.sect	'.debug_info'
.L454:
	.word	382
	.half	3
	.word	.L455
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L457,.L456
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mb_init',0,1,254,10,10
	.word	.L574
	.byte	1,1,1
	.word	.L337,.L761,.L336
	.byte	4
	.byte	'mb',0,1,254,10,34
	.word	.L762,.L763
	.byte	4
	.byte	'name',0,1,255,10,34
	.word	.L578,.L764
	.byte	4
	.byte	'msgpool',0,1,128,11,34
	.word	.L656,.L765
	.byte	4
	.byte	'size',0,1,129,11,34
	.word	.L603,.L766
	.byte	4
	.byte	'flag',0,1,130,11,34
	.word	.L582,.L767
	.byte	5
	.word	.L337,.L761
	.byte	6
	.word	.L584,.L768,.L769
	.byte	7
	.word	.L587,.L770
	.byte	8
	.word	.L589,.L768,.L769
	.byte	0,6
	.word	.L771,.L772,.L773
	.byte	7
	.word	.L774,.L775
	.byte	8
	.word	.L776,.L772,.L773
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mb_init')
	.sect	'.debug_abbrev'
.L455:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mb_init')
	.sect	'.debug_line'
.L456:
	.word	.L1524-.L1523
.L1523:
	.half	3
	.word	.L1526-.L1525
.L1525:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1526:
	.byte	5,10,7,0,5,2
	.word	.L337
	.byte	3,253,10,1,5,42,9
	.half	.L1096-.L337
	.byte	3,9,1,5,67,1,5,28,9
	.half	.L1095-.L1096
	.byte	3,3,1,5,23,9
	.half	.L768-.L1095
	.byte	3,187,117,1,5,20,9
	.half	.L769-.L768
	.byte	3,203,10,1,9
	.half	.L1527-.L769
	.byte	3,1,1,5,22,9
	.half	.L1528-.L1527
	.byte	3,1,1,5,20,1,9
	.half	.L1529-.L1528
	.byte	3,1,1,9
	.half	.L1530-.L1529
	.byte	3,1,1,5,22,9
	.half	.L1531-.L1530
	.byte	3,3,1,4,2,5,23,9
	.half	.L772-.L1531
	.byte	3,154,117,1,5,13,9
	.half	.L1532-.L772
	.byte	1,4,1,5,1,9
	.half	.L773-.L1532
	.byte	3,233,10,1,7,9
	.half	.L458-.L773
	.byte	0,1,1
.L1524:
	.sdecl	'.debug_ranges',debug,cluster('rt_mb_init')
	.sect	'.debug_ranges'
.L457:
	.word	-1,.L337,0,.L458-.L337,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mb_detach')
	.sect	'.debug_info'
.L459:
	.word	387
	.half	3
	.word	.L460
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L462,.L461
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mb_detach',0,1,164,11,10
	.word	.L574
	.byte	1,1,1
	.word	.L339,.L777,.L338
	.byte	4
	.byte	'mb',0,1,164,11,36
	.word	.L762,.L778
	.byte	5
	.word	.L339,.L777
	.byte	6
	.word	.L594,.L779,.L780
	.byte	7
	.word	.L597,.L781
	.byte	8
	.word	.L599,.L779,.L780
	.byte	9
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L782
	.byte	9
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L783
	.byte	0,0,6
	.word	.L594,.L784,.L785
	.byte	7
	.word	.L597,.L781
	.byte	8
	.word	.L599,.L784,.L785
	.byte	9
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L786
	.byte	9
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L787
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mb_detach')
	.sect	'.debug_abbrev'
.L460:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73
	.byte	16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mb_detach')
	.sect	'.debug_line'
.L461:
	.word	.L1534-.L1533
.L1533:
	.half	3
	.word	.L1536-.L1535
.L1535:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1536:
	.byte	5,10,7,0,5,2
	.word	.L339
	.byte	3,163,11,1,5,40,9
	.half	.L1098-.L339
	.byte	3,8,1,5,25,9
	.half	.L779-.L1098
	.byte	3,135,118,1,5,34,3,120,1,5,39,9
	.half	.L138-.L779
	.byte	3,3,1,5,14,9
	.half	.L1100-.L138
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1101-.L1100
	.byte	3,9,1,5,32,9
	.half	.L1103-.L1101
	.byte	3,3,1,4,2,5,13,9
	.half	.L137-.L1103
	.byte	3,167,127,1,4,1,9
	.half	.L1537-.L137
	.byte	3,199,0,1,5,32,7,9
	.half	.L780-.L1537
	.byte	3,131,10,1,5,25,9
	.half	.L784-.L780
	.byte	3,133,118,1,5,34,3,120,1,5,39,9
	.half	.L140-.L784
	.byte	3,3,1,5,14,9
	.half	.L1104-.L140
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1105-.L1104
	.byte	3,9,1,5,32,9
	.half	.L1106-.L1105
	.byte	3,3,1,4,2,5,13,9
	.half	.L139-.L1106
	.byte	3,167,127,1,4,1,9
	.half	.L1538-.L139
	.byte	3,199,0,1,5,34,7,9
	.half	.L785-.L1538
	.byte	3,134,10,1,5,12,9
	.half	.L1108-.L785
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L463-.L1108
	.byte	0,1,1
.L1534:
	.sdecl	'.debug_ranges',debug,cluster('rt_mb_detach')
	.sect	'.debug_ranges'
.L462:
	.word	-1,.L339,0,.L463-.L339,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mb_send')
	.sect	'.debug_info'
.L464:
	.word	253
	.half	3
	.word	.L465
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L467,.L466
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mb_send',0,1,158,13,10
	.word	.L574
	.byte	1,1,1
	.word	.L343,.L788,.L342
	.byte	4
	.byte	'mb',0,1,158,13,34
	.word	.L762,.L789
	.byte	4
	.byte	'value',0,1,158,13,49
	.word	.L603,.L790
	.byte	5
	.word	.L343,.L788
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mb_send')
	.sect	'.debug_abbrev'
.L465:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mb_send')
	.sect	'.debug_line'
.L466:
	.word	.L1540-.L1539
.L1539:
	.half	3
	.word	.L1542-.L1541
.L1541:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1542:
	.byte	5,39,7,0,5,2
	.word	.L343
	.byte	3,159,13,1,5,1,9
	.half	.L468-.L343
	.byte	3,1,0,1,1
.L1540:
	.sdecl	'.debug_ranges',debug,cluster('rt_mb_send')
	.sect	'.debug_ranges'
.L467:
	.word	-1,.L343,0,.L468-.L343,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mb_send_wait')
	.sect	'.debug_info'
.L469:
	.word	627
	.half	3
	.word	.L470
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L472,.L471
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mb_send_wait',0,1,146,12,10
	.word	.L574
	.byte	1,1,1
	.word	.L341,.L791,.L340
	.byte	4
	.byte	'mb',0,1,146,12,39
	.word	.L762,.L792
	.byte	4
	.byte	'value',0,1,147,12,39
	.word	.L603,.L793
	.byte	4
	.byte	'timeout',0,1,148,12,39
	.word	.L607,.L794
	.byte	5
	.word	.L341,.L791
	.byte	6
	.byte	'thread',0,1,150,12,23
	.word	.L601,.L795
	.byte	6
	.byte	'temp',0,1,151,12,25
	.word	.L603,.L796
	.byte	6
	.byte	'tick_delta',0,1,152,12,17
	.word	.L580,.L797
	.byte	7
	.word	.L611,.L798,.L150
	.byte	8
	.word	.L613,.L799
	.byte	8
	.word	.L615,.L800
	.byte	8
	.word	.L617,.L801
	.byte	9
	.word	.L619,.L798,.L150
	.byte	9
	.word	.L620,.L802,.L150
	.byte	6
	.byte	'n',0,1,100,34
	.word	.L622,.L803
	.byte	6
	.byte	'sthread',0,1,101,31
	.word	.L601,.L804
	.byte	7
	.word	.L625,.L805,.L806
	.byte	8
	.word	.L628,.L807
	.byte	8
	.word	.L630,.L808
	.byte	10
	.word	.L632,.L809
	.byte	0,7
	.word	.L625,.L810,.L811
	.byte	8
	.word	.L628,.L807
	.byte	8
	.word	.L630,.L808
	.byte	0,7
	.word	.L625,.L148,.L812
	.byte	8
	.word	.L628,.L807
	.byte	8
	.word	.L630,.L808
	.byte	10
	.word	.L632,.L813
	.byte	0,7
	.word	.L625,.L814,.L150
	.byte	8
	.word	.L628,.L807
	.byte	8
	.word	.L630,.L808
	.byte	0,0,0,0,7
	.word	.L646,.L815,.L816
	.byte	8
	.word	.L649,.L817
	.byte	11
	.word	.L651,.L815,.L816
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mb_send_wait')
	.sect	'.debug_abbrev'
.L470:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,10,11,0,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mb_send_wait')
	.sect	'.debug_line'
.L471:
	.word	.L1544-.L1543
.L1543:
	.half	3
	.word	.L1546-.L1545
.L1545:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1546:
	.byte	5,10,7,0,5,2
	.word	.L341
	.byte	3,145,12,1,5,16,9
	.half	.L1112-.L341
	.byte	3,13,1,5,28,3,2,1,5,12,9
	.half	.L1110-.L1112
	.byte	1,5,5,9
	.half	.L1115-.L1110
	.byte	3,2,1,5,35,9
	.half	.L142-.L1115
	.byte	3,3,1,5,10,9
	.half	.L1117-.L142
	.byte	1,5,24,3,3,1,5,11,9
	.half	.L1118-.L1117
	.byte	1,5,9,9
	.half	.L1547-.L1118
	.byte	1,5,34,7,9
	.half	.L1548-.L1547
	.byte	1,5,42,9
	.half	.L1549-.L1548
	.byte	1,5,33,7,9
	.half	.L143-.L1549
	.byte	3,7,1,7,9
	.half	.L1550-.L143
	.byte	1,5,23,9
	.half	.L146-.L1550
	.byte	3,3,1,5,13,9
	.half	.L1551-.L146
	.byte	3,3,1,5,9,9
	.half	.L1552-.L1551
	.byte	1,5,33,7,9
	.half	.L1553-.L1552
	.byte	3,10,1,5,46,9
	.half	.L1554-.L1553
	.byte	3,2,1,5,29,9
	.half	.L798-.L1554
	.byte	3,127,1,5,10,9
	.half	.L1121-.L798
	.byte	3,157,116,1,7,9
	.half	.L1555-.L1121
	.byte	3,4,1,5,26,7,9
	.half	.L802-.L1555
	.byte	3,6,1,5,43,9
	.half	.L1122-.L802
	.byte	1,5,27,9
	.half	.L152-.L1122
	.byte	3,5,1,5,55,9
	.half	.L1556-.L152
	.byte	1,5,27,9
	.half	.L1557-.L1556
	.byte	3,125,1,5,17,9
	.half	.L1123-.L1557
	.byte	3,3,1,4,2,5,6,7,9
	.half	.L805-.L1123
	.byte	3,94,1,4,1,5,70,9
	.half	.L806-.L805
	.byte	3,37,1,4,2,5,19,9
	.half	.L810-.L806
	.byte	3,91,1,5,16,9
	.half	.L1558-.L810
	.byte	3,1,1,5,13,9
	.half	.L1559-.L1558
	.byte	1,9
	.half	.L1560-.L1559
	.byte	3,2,1,9
	.half	.L1561-.L1560
	.byte	3,1,1,4,1,5,21,9
	.half	.L811-.L1561
	.byte	3,34,1,5,50,9
	.half	.L153-.L811
	.byte	3,119,1,5,43,9
	.half	.L151-.L153
	.byte	1,5,13,7,9
	.half	.L154-.L151
	.byte	3,17,1,4,2,5,6,7,9
	.half	.L148-.L154
	.byte	3,82,1,4,1,5,53,9
	.half	.L812-.L148
	.byte	3,47,1,4,2,5,19,9
	.half	.L814-.L812
	.byte	3,81,1,5,16,9
	.half	.L1562-.L814
	.byte	3,1,1,5,13,9
	.half	.L1563-.L1562
	.byte	1,9
	.half	.L1564-.L1563
	.byte	3,2,1,9
	.half	.L1565-.L1564
	.byte	3,1,1,4,1,9
	.half	.L150-.L1565
	.byte	3,246,11,1,5,9,9
	.half	.L1566-.L150
	.byte	1,5,37,7,9
	.half	.L1567-.L1566
	.byte	3,3,1,5,24,9
	.half	.L1114-.L1567
	.byte	1,5,38,3,6,1,5,30,9
	.half	.L1125-.L1114
	.byte	3,1,1,5,31,3,1,1,5,36,9
	.half	.L1124-.L1125
	.byte	3,1,1,5,32,9
	.half	.L156-.L1124
	.byte	3,4,1,5,20,9
	.half	.L1568-.L156
	.byte	3,3,1,5,19,9
	.half	.L1569-.L1568
	.byte	3,3,1,5,9,9
	.half	.L1570-.L1569
	.byte	1,5,39,7,9
	.half	.L1571-.L1570
	.byte	3,7,1,5,14,9
	.half	.L1119-.L1571
	.byte	1,5,13,3,3,1,5,9,9
	.half	.L1127-.L1119
	.byte	1,5,37,7,9
	.half	.L1572-.L1127
	.byte	3,2,1,5,40,9
	.half	.L1126-.L1572
	.byte	1,5,13,3,1,1,5,21,9
	.half	.L1573-.L1126
	.byte	1,5,25,9
	.half	.L1574-.L1573
	.byte	3,1,1,3,1,1,5,14,9
	.half	.L159-.L1574
	.byte	3,70,1,5,27,9
	.half	.L1575-.L159
	.byte	1,5,33,9
	.half	.L1576-.L1575
	.byte	1,5,7,7,9
	.half	.L145-.L1576
	.byte	3,63,1,5,20,9
	.half	.L1577-.L145
	.byte	1,5,17,9
	.half	.L1578-.L1577
	.byte	1,5,33,9
	.half	.L1579-.L1578
	.byte	1,5,10,9
	.half	.L1580-.L1579
	.byte	3,2,1,5,5,9
	.half	.L1581-.L1580
	.byte	1,5,11,9
	.half	.L1582-.L1581
	.byte	3,1,1,5,28,9
	.half	.L1583-.L1582
	.byte	1,5,5,9
	.half	.L1584-.L1583
	.byte	1,5,25,7,9
	.half	.L1585-.L1584
	.byte	3,1,1,5,23,1,5,10,9
	.half	.L160-.L1585
	.byte	3,2,1,5,20,9
	.half	.L1586-.L160
	.byte	1,5,5,9
	.half	.L1587-.L1586
	.byte	1,5,19,7,9
	.half	.L1588-.L1587
	.byte	3,3,1,5,37,9
	.half	.L1589-.L1588
	.byte	3,9,1,4,2,5,13,9
	.half	.L1590-.L1589
	.byte	3,227,115,1,4,1,5,10,9
	.half	.L1591-.L1590
	.byte	3,157,12,1,5,14,7,9
	.half	.L815-.L1591
	.byte	3,146,116,1,5,32,9
	.half	.L816-.L815
	.byte	3,243,11,1,5,20,9
	.half	.L1592-.L816
	.byte	3,2,1,5,9,9
	.half	.L1593-.L1592
	.byte	3,2,1,5,32,9
	.half	.L144-.L1593
	.byte	3,114,1,5,16,9
	.half	.L1594-.L144
	.byte	3,1,1,5,1,9
	.half	.L158-.L1594
	.byte	3,20,1,5,28,7,9
	.half	.L162-.L158
	.byte	3,125,1,5,12,9
	.half	.L163-.L162
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L473-.L163
	.byte	0,1,1
.L1544:
	.sdecl	'.debug_ranges',debug,cluster('rt_mb_send_wait')
	.sect	'.debug_ranges'
.L472:
	.word	-1,.L341,0,.L473-.L341,0,0
.L809:
	.word	-1,.L341,.L805-.L341,.L806-.L341,.L810-.L341,.L811-.L341,0,0
.L813:
	.word	-1,.L341,.L148-.L341,.L812-.L341,.L814-.L341,.L150-.L341,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mb_recv')
	.sect	'.debug_info'
.L474:
	.word	590
	.half	3
	.word	.L475
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L477,.L476
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mb_recv',0,1,239,13,10
	.word	.L574
	.byte	1,1,1
	.word	.L347,.L818,.L346
	.byte	4
	.byte	'mb',0,1,239,13,34
	.word	.L762,.L819
	.byte	4
	.byte	'value',0,1,239,13,50
	.word	.L820,.L821
	.byte	4
	.byte	'timeout',0,1,239,13,68
	.word	.L607,.L822
	.byte	5
	.word	.L347,.L818
	.byte	6
	.byte	'thread',0,1,241,13,23
	.word	.L601,.L823
	.byte	6
	.byte	'temp',0,1,242,13,25
	.word	.L603,.L824
	.byte	6
	.byte	'tick_delta',0,1,243,13,17
	.word	.L580,.L825
	.byte	7
	.word	.L611,.L826,.L184
	.byte	8
	.word	.L613,.L827
	.byte	8
	.word	.L615,.L828
	.byte	8
	.word	.L617,.L829
	.byte	9
	.word	.L619,.L826,.L184
	.byte	9
	.word	.L620,.L830,.L184
	.byte	6
	.byte	'n',0,1,100,34
	.word	.L622,.L831
	.byte	6
	.byte	'sthread',0,1,101,31
	.word	.L601,.L832
	.byte	7
	.word	.L625,.L833,.L834
	.byte	8
	.word	.L628,.L835
	.byte	8
	.word	.L630,.L836
	.byte	10
	.word	.L632,.L837
	.byte	0,7
	.word	.L625,.L182,.L838
	.byte	8
	.word	.L628,.L835
	.byte	8
	.word	.L630,.L836
	.byte	10
	.word	.L632,.L839
	.byte	0,7
	.word	.L625,.L840,.L184
	.byte	8
	.word	.L628,.L835
	.byte	8
	.word	.L630,.L836
	.byte	0,0,0,0,7
	.word	.L646,.L841,.L842
	.byte	8
	.word	.L649,.L843
	.byte	11
	.word	.L651,.L841,.L842
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mb_recv')
	.sect	'.debug_abbrev'
.L475:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,10,11,0,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mb_recv')
	.sect	'.debug_line'
.L476:
	.word	.L1596-.L1595
.L1595:
	.half	3
	.word	.L1598-.L1597
.L1597:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1598:
	.byte	5,10,7,0,5,2
	.word	.L347
	.byte	3,238,13,1,5,16,9
	.half	.L1599-.L347
	.byte	3,11,1,5,28,3,2,1,5,12,9
	.half	.L1136-.L1599
	.byte	1,5,5,9
	.half	.L1148-.L1136
	.byte	3,2,1,5,35,9
	.half	.L175-.L1148
	.byte	3,3,1,5,10,9
	.half	.L1139-.L175
	.byte	1,5,11,3,3,1,5,9,9
	.half	.L1146-.L1139
	.byte	1,5,27,7,9
	.half	.L1600-.L1146
	.byte	1,5,35,9
	.half	.L1601-.L1600
	.byte	1,5,32,7,9
	.half	.L1602-.L1601
	.byte	3,2,1,5,9,9
	.half	.L1140-.L1602
	.byte	3,2,1,5,23,9
	.half	.L179-.L1140
	.byte	3,7,1,5,13,9
	.half	.L1603-.L179
	.byte	3,3,1,5,9,9
	.half	.L1604-.L1603
	.byte	1,5,36,7,9
	.half	.L1605-.L1604
	.byte	3,3,1,5,29,9
	.half	.L1606-.L1605
	.byte	3,2,1,5,27,1,5,20,9
	.half	.L178-.L1606
	.byte	3,2,1,5,1,3,214,0,1,5,41,7,9
	.half	.L180-.L178
	.byte	3,175,127,1,5,46,9
	.half	.L1607-.L180
	.byte	3,2,1,5,29,9
	.half	.L826-.L1607
	.byte	3,127,1,5,10,9
	.half	.L1142-.L826
	.byte	3,191,114,1,7,9
	.half	.L1608-.L1142
	.byte	3,4,1,5,26,7,9
	.half	.L830-.L1608
	.byte	3,6,1,5,43,9
	.half	.L1144-.L830
	.byte	1,5,27,9
	.half	.L186-.L1144
	.byte	3,5,1,5,55,9
	.half	.L1609-.L186
	.byte	1,5,27,9
	.half	.L1610-.L1609
	.byte	3,125,1,5,17,9
	.half	.L1145-.L1610
	.byte	3,3,1,5,70,7,9
	.half	.L1611-.L1145
	.byte	3,3,1,4,2,5,6,9
	.half	.L833-.L1611
	.byte	3,91,1,5,13,9
	.half	.L1612-.L833
	.byte	3,1,1,9
	.half	.L1613-.L1612
	.byte	3,2,1,9
	.half	.L1614-.L1613
	.byte	3,1,1,4,1,5,21,9
	.half	.L834-.L1614
	.byte	3,34,1,5,50,9
	.half	.L187-.L834
	.byte	3,119,1,5,43,9
	.half	.L185-.L187
	.byte	1,5,13,7,9
	.half	.L188-.L185
	.byte	3,17,1,4,2,5,6,7,9
	.half	.L182-.L188
	.byte	3,82,1,4,1,5,53,9
	.half	.L838-.L182
	.byte	3,47,1,4,2,5,19,9
	.half	.L840-.L838
	.byte	3,81,1,5,16,9
	.half	.L1615-.L840
	.byte	3,1,1,5,13,9
	.half	.L1616-.L1615
	.byte	1,9
	.half	.L1617-.L1616
	.byte	3,2,1,9
	.half	.L1618-.L1617
	.byte	3,1,1,4,1,9
	.half	.L184-.L1618
	.byte	3,212,13,1,5,9,9
	.half	.L1619-.L184
	.byte	1,5,37,7,9
	.half	.L1620-.L1619
	.byte	3,3,1,5,24,9
	.half	.L1149-.L1620
	.byte	1,5,38,3,6,1,5,30,9
	.half	.L1152-.L1149
	.byte	3,1,1,5,31,3,1,1,5,36,9
	.half	.L1151-.L1152
	.byte	3,1,1,5,32,9
	.half	.L190-.L1151
	.byte	3,4,1,5,20,9
	.half	.L1621-.L190
	.byte	3,3,1,5,19,9
	.half	.L1622-.L1621
	.byte	3,3,1,5,9,9
	.half	.L1623-.L1622
	.byte	1,5,39,7,9
	.half	.L1624-.L1623
	.byte	3,7,1,5,14,9
	.half	.L1147-.L1624
	.byte	1,5,13,3,3,1,5,9,9
	.half	.L1154-.L1147
	.byte	1,5,37,7,9
	.half	.L1625-.L1154
	.byte	3,2,1,5,40,9
	.half	.L1153-.L1625
	.byte	1,5,13,3,1,1,5,21,9
	.half	.L1626-.L1153
	.byte	1,5,25,9
	.half	.L1627-.L1626
	.byte	3,1,1,3,1,1,5,14,9
	.half	.L176-.L1627
	.byte	3,68,1,5,26,9
	.half	.L1628-.L176
	.byte	1,5,16,7,9
	.half	.L1629-.L1628
	.byte	3,193,0,1,5,29,9
	.half	.L1630-.L1629
	.byte	1,5,26,9
	.half	.L1631-.L1630
	.byte	1,5,12,9
	.half	.L1632-.L1631
	.byte	1,5,10,9
	.half	.L1633-.L1632
	.byte	3,3,1,5,5,9
	.half	.L1634-.L1633
	.byte	1,5,11,9
	.half	.L1635-.L1634
	.byte	3,1,1,5,29,9
	.half	.L1636-.L1635
	.byte	1,5,5,9
	.half	.L1637-.L1636
	.byte	1,5,26,7,9
	.half	.L1638-.L1637
	.byte	3,1,1,5,24,1,5,10,9
	.half	.L194-.L1638
	.byte	3,3,1,5,5,9
	.half	.L1639-.L194
	.byte	1,5,19,7,9
	.half	.L1640-.L1639
	.byte	3,2,1,5,30,9
	.half	.L195-.L1640
	.byte	3,4,1,4,2,5,13,9
	.half	.L1641-.L195
	.byte	3,137,114,1,4,1,5,10,9
	.half	.L1642-.L1641
	.byte	3,247,13,1,5,14,7,9
	.half	.L841-.L1642
	.byte	3,184,114,1,5,32,9
	.half	.L842-.L841
	.byte	3,205,13,1,5,9,9
	.half	.L1643-.L842
	.byte	3,2,1,5,20,9
	.half	.L197-.L1643
	.byte	3,2,1,5,9,9
	.half	.L1644-.L197
	.byte	3,2,1,5,28,9
	.half	.L196-.L1644
	.byte	3,4,1,5,5,9
	.half	.L1645-.L196
	.byte	3,2,1,5,12,9
	.half	.L198-.L1645
	.byte	3,2,1,5,1,9
	.half	.L192-.L198
	.byte	3,1,1,7,9
	.half	.L478-.L192
	.byte	0,1,1
.L1596:
	.sdecl	'.debug_ranges',debug,cluster('rt_mb_recv')
	.sect	'.debug_ranges'
.L477:
	.word	-1,.L347,0,.L478-.L347,0,0
.L837:
	.word	-1,.L347,.L833-.L347,.L834-.L347,-1,.L349,0,.L573-.L349,0,0
.L839:
	.word	-1,.L347,.L182-.L347,.L838-.L347,.L840-.L347,.L184-.L347,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mb_control')
	.sect	'.debug_info'
.L479:
	.word	441
	.half	3
	.word	.L480
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L482,.L481
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mb_control',0,1,251,14,10
	.word	.L574
	.byte	1,1,1
	.word	.L351,.L844,.L350
	.byte	4
	.byte	'mb',0,1,251,14,37
	.word	.L762,.L845
	.byte	4
	.byte	'cmd',0,1,251,14,45
	.word	.L607,.L846
	.byte	4
	.byte	'arg',0,1,251,14,56
	.word	.L656,.L847
	.byte	5
	.word	.L351,.L844
	.byte	6
	.byte	'level',0,1,253,14,16
	.word	.L603,.L848
	.byte	7
	.word	.L594,.L849,.L850
	.byte	8
	.word	.L597,.L851
	.byte	9
	.word	.L599,.L849,.L850
	.byte	6
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L852
	.byte	6
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L853
	.byte	0,0,7
	.word	.L594,.L854,.L855
	.byte	8
	.word	.L597,.L851
	.byte	9
	.word	.L599,.L854,.L855
	.byte	6
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L856
	.byte	6
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L857
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mb_control')
	.sect	'.debug_abbrev'
.L480:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mb_control')
	.sect	'.debug_line'
.L481:
	.word	.L1647-.L1646
.L1646:
	.half	3
	.word	.L1649-.L1648
.L1648:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1649:
	.byte	5,10,7,0,5,2
	.word	.L351
	.byte	3,250,14,1,5,5,9
	.half	.L1158-.L351
	.byte	3,8,1,5,40,7,9
	.half	.L1650-.L1158
	.byte	3,3,1,5,15,9
	.half	.L1157-.L1650
	.byte	1,5,44,3,3,1,5,25,9
	.half	.L849-.L1157
	.byte	3,170,114,1,5,34,3,120,1,5,39,9
	.half	.L203-.L849
	.byte	3,3,1,5,14,9
	.half	.L1160-.L203
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1161-.L1160
	.byte	3,9,1,5,32,9
	.half	.L1163-.L1161
	.byte	3,3,1,4,2,5,13,9
	.half	.L202-.L1163
	.byte	3,167,127,1,4,1,9
	.half	.L1651-.L202
	.byte	3,199,0,1,5,36,7,9
	.half	.L850-.L1651
	.byte	3,224,13,1,5,25,9
	.half	.L854-.L850
	.byte	3,168,114,1,5,34,3,120,1,5,39,9
	.half	.L205-.L854
	.byte	3,3,1,5,14,9
	.half	.L1164-.L205
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1165-.L1164
	.byte	3,9,1,5,32,9
	.half	.L1166-.L1165
	.byte	3,3,1,4,2,5,13,9
	.half	.L204-.L1166
	.byte	3,167,127,1,4,1,9
	.half	.L1652-.L204
	.byte	3,199,0,1,5,26,7,9
	.half	.L855-.L1652
	.byte	3,227,13,1,5,24,1,9
	.half	.L1653-.L855
	.byte	3,1,1,9
	.half	.L1654-.L1653
	.byte	3,1,1,5,32,9
	.half	.L1655-.L1654
	.byte	3,3,1,5,20,9
	.half	.L1656-.L1655
	.byte	3,2,1,5,16,9
	.half	.L1657-.L1656
	.byte	3,2,1,5,1,3,4,1,5,12,7,9
	.half	.L201-.L1657
	.byte	3,127,1,5,1,3,1,1,7,9
	.half	.L483-.L201
	.byte	0,1,1
.L1647:
	.sdecl	'.debug_ranges',debug,cluster('rt_mb_control')
	.sect	'.debug_ranges'
.L482:
	.word	-1,.L351,0,.L483-.L351,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mq_init')
	.sect	'.debug_info'
.L484:
	.word	445
	.half	3
	.word	.L485
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L487,.L486
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mq_init',0,1,178,15,10
	.word	.L574
	.byte	1,1,1
	.word	.L353,.L858,.L352
	.byte	4
	.byte	'mq',0,1,178,15,33
	.word	.L859,.L860
	.byte	4
	.byte	'name',0,1,179,15,33
	.word	.L578,.L861
	.byte	4
	.byte	'msgpool',0,1,180,15,33
	.word	.L656,.L862
	.byte	4
	.byte	'msg_size',0,1,181,15,33
	.word	.L603,.L863
	.byte	4
	.byte	'pool_size',0,1,182,15,33
	.word	.L603,.L864
	.byte	4
	.byte	'flag',0,1,183,15,33
	.word	.L582,.L865
	.byte	5
	.word	.L353,.L858
	.byte	6
	.byte	'head',0,1,185,15,27
	.word	.L866,.L867
	.byte	6
	.byte	'temp',0,1,186,15,24
	.word	.L574,.L868
	.byte	7
	.word	.L584,.L869,.L870
	.byte	8
	.word	.L587,.L871
	.byte	9
	.word	.L589,.L869,.L870
	.byte	0,7
	.word	.L771,.L872,.L873
	.byte	8
	.word	.L774,.L874
	.byte	9
	.word	.L776,.L872,.L873
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mq_init')
	.sect	'.debug_abbrev'
.L485:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mq_init')
	.sect	'.debug_line'
.L486:
	.word	.L1659-.L1658
.L1658:
	.half	3
	.word	.L1661-.L1660
.L1660:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1661:
	.byte	5,10,7,0,5,2
	.word	.L353
	.byte	3,177,15,1,5,42,9
	.half	.L1170-.L353
	.byte	3,14,1,5,72,1,5,28,9
	.half	.L1167-.L1170
	.byte	3,3,1,5,23,9
	.half	.L869-.L1167
	.byte	3,130,113,1,5,20,9
	.half	.L870-.L869
	.byte	3,135,15,1,5,18,3,125,1,5,20,9
	.half	.L1662-.L870
	.byte	3,3,1,5,26,3,4,1,5,20,9
	.half	.L1169-.L1662
	.byte	3,124,1,5,18,9
	.half	.L1663-.L1169
	.byte	1,5,46,9
	.half	.L1664-.L1663
	.byte	3,1,1,5,30,9
	.half	.L1171-.L1664
	.byte	1,5,18,1,5,15,9
	.half	.L1172-.L1171
	.byte	3,8,1,5,24,3,123,1,9
	.half	.L1173-.L1172
	.byte	3,1,1,5,39,9
	.half	.L1665-.L1173
	.byte	3,4,1,5,51,9
	.half	.L209-.L1665
	.byte	3,3,1,5,57,9
	.half	.L1666-.L209
	.byte	3,127,1,5,62,9
	.half	.L1667-.L1666
	.byte	3,1,1,5,48,3,1,1,5,46,9
	.half	.L1668-.L1667
	.byte	3,127,1,9
	.half	.L1669-.L1668
	.byte	3,125,1,5,68,9
	.half	.L1670-.L1669
	.byte	3,2,1,5,20,9
	.half	.L1174-.L1670
	.byte	3,2,1,5,28,9
	.half	.L208-.L1174
	.byte	3,1,1,5,29,9
	.half	.L1175-.L208
	.byte	3,123,1,5,39,9
	.half	.L1671-.L1175
	.byte	1,5,17,7,9
	.half	.L1672-.L1671
	.byte	3,9,1,5,15,1,5,22,9
	.half	.L1673-.L1672
	.byte	3,3,1,4,2,5,23,9
	.half	.L872-.L1673
	.byte	3,208,112,1,5,13,9
	.half	.L1674-.L872
	.byte	1,4,1,5,1,9
	.half	.L873-.L1674
	.byte	3,179,15,1,7,9
	.half	.L488-.L873
	.byte	0,1,1
.L1659:
	.sdecl	'.debug_ranges',debug,cluster('rt_mq_init')
	.sect	'.debug_ranges'
.L487:
	.word	-1,.L353,0,.L488-.L353,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mq_detach')
	.sect	'.debug_info'
.L489:
	.word	387
	.half	3
	.word	.L490
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L492,.L491
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mq_detach',0,1,238,15,10
	.word	.L574
	.byte	1,1,1
	.word	.L355,.L875,.L354
	.byte	4
	.byte	'mq',0,1,238,15,31
	.word	.L859,.L876
	.byte	5
	.word	.L355,.L875
	.byte	6
	.word	.L594,.L877,.L878
	.byte	7
	.word	.L597,.L879
	.byte	8
	.word	.L599,.L877,.L878
	.byte	9
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L880
	.byte	9
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L881
	.byte	0,0,6
	.word	.L594,.L882,.L883
	.byte	7
	.word	.L597,.L879
	.byte	8
	.word	.L599,.L882,.L883
	.byte	9
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L884
	.byte	9
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L885
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mq_detach')
	.sect	'.debug_abbrev'
.L490:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73
	.byte	16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mq_detach')
	.sect	'.debug_line'
.L491:
	.word	.L1676-.L1675
.L1675:
	.half	3
	.word	.L1678-.L1677
.L1677:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1678:
	.byte	5,10,7,0,5,2
	.word	.L355
	.byte	3,237,15,1,5,39,9
	.half	.L1176-.L355
	.byte	3,8,1,5,25,9
	.half	.L877-.L1176
	.byte	3,189,113,1,5,34,3,120,1,5,39,9
	.half	.L212-.L877
	.byte	3,3,1,5,14,9
	.half	.L1178-.L212
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1179-.L1178
	.byte	3,9,1,5,32,9
	.half	.L1181-.L1179
	.byte	3,3,1,4,2,5,13,9
	.half	.L211-.L1181
	.byte	3,167,127,1,4,1,9
	.half	.L1679-.L211
	.byte	3,199,0,1,5,32,7,9
	.half	.L878-.L1679
	.byte	3,205,14,1,5,25,9
	.half	.L882-.L878
	.byte	3,187,113,1,5,34,3,120,1,5,39,9
	.half	.L214-.L882
	.byte	3,3,1,5,14,9
	.half	.L1182-.L214
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1183-.L1182
	.byte	3,9,1,5,32,9
	.half	.L1184-.L1183
	.byte	3,3,1,4,2,5,13,9
	.half	.L213-.L1184
	.byte	3,167,127,1,4,1,9
	.half	.L1680-.L213
	.byte	3,199,0,1,5,34,7,9
	.half	.L883-.L1680
	.byte	3,208,14,1,5,12,9
	.half	.L1186-.L883
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L493-.L1186
	.byte	0,1,1
.L1676:
	.sdecl	'.debug_ranges',debug,cluster('rt_mq_detach')
	.sect	'.debug_ranges'
.L492:
	.word	-1,.L355,0,.L493-.L355,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mq_send')
	.sect	'.debug_info'
.L494:
	.word	272
	.half	3
	.word	.L495
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L497,.L496
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mq_send',0,1,159,18,10
	.word	.L574
	.byte	1,1,1
	.word	.L361,.L886,.L360
	.byte	4
	.byte	'mq',0,1,159,18,29
	.word	.L859,.L887
	.byte	4
	.byte	'buffer',0,1,159,18,45
	.word	.L888,.L889
	.byte	4
	.byte	'size',0,1,159,18,63
	.word	.L603,.L890
	.byte	5
	.word	.L361,.L886
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mq_send')
	.sect	'.debug_abbrev'
.L495:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mq_send')
	.sect	'.debug_line'
.L496:
	.word	.L1682-.L1681
.L1681:
	.half	3
	.word	.L1684-.L1683
.L1683:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1684:
	.byte	5,46,7,0,5,2
	.word	.L361
	.byte	3,160,18,1,5,1,9
	.half	.L498-.L361
	.byte	3,1,0,1,1
.L1682:
	.sdecl	'.debug_ranges',debug,cluster('rt_mq_send')
	.sect	'.debug_ranges'
.L497:
	.word	-1,.L361,0,.L498-.L361,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mq_send_wait')
	.sect	'.debug_info'
.L499:
	.word	586
	.half	3
	.word	.L500
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L502,.L501
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mq_send_wait',0,1,244,16,10
	.word	.L574
	.byte	1,1,1
	.word	.L357,.L891,.L356
	.byte	4
	.byte	'mq',0,1,244,16,38
	.word	.L859,.L892
	.byte	4
	.byte	'buffer',0,1,245,16,38
	.word	.L888,.L893
	.byte	4
	.byte	'size',0,1,246,16,38
	.word	.L603,.L894
	.byte	4
	.byte	'timeout',0,1,247,16,38
	.word	.L607,.L895
	.byte	5
	.word	.L357,.L891
	.byte	6
	.byte	'temp',0,1,249,16,25
	.word	.L603,.L896
	.byte	6
	.byte	'msg',0,1,250,16,27
	.word	.L866,.L897
	.byte	6
	.byte	'tick_delta',0,1,251,16,17
	.word	.L580,.L898
	.byte	6
	.byte	'thread',0,1,252,16,23
	.word	.L601,.L899
	.byte	7
	.word	.L611,.L900,.L226
	.byte	8
	.word	.L613,.L901
	.byte	8
	.word	.L615,.L902
	.byte	8
	.word	.L617,.L903
	.byte	9
	.word	.L619,.L900,.L226
	.byte	10
	.word	.L620,.L904
	.byte	6
	.byte	'n',0,1,100,34
	.word	.L622,.L906
	.byte	6
	.byte	'sthread',0,1,101,31
	.word	.L601,.L907
	.byte	7
	.word	.L625,.L224,.L908
	.byte	8
	.word	.L628,.L909
	.byte	8
	.word	.L630,.L910
	.byte	11
	.word	.L632,.L911
	.byte	0,7
	.word	.L625,.L912,.L226
	.byte	8
	.word	.L628,.L909
	.byte	8
	.word	.L630,.L910
	.byte	0,0,0,0,7
	.word	.L646,.L913,.L914
	.byte	8
	.word	.L649,.L915
	.byte	12
	.word	.L651,.L913,.L914
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mq_send_wait')
	.sect	'.debug_abbrev'
.L500:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,85,6,0,0,11,11,0,49,16,85,6,0,0,12,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mq_send_wait')
	.sect	'.debug_line'
.L501:
	.word	.L1686-.L1685
.L1685:
	.half	3
	.word	.L1688-.L1687
.L1687:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1688:
	.byte	5,10,7,0,5,2
	.word	.L357
	.byte	3,243,16,1,5,18,9
	.half	.L1198-.L357
	.byte	3,17,1,5,10,9
	.half	.L1200-.L1198
	.byte	3,111,1,5,5,9
	.half	.L1196-.L1200
	.byte	3,17,1,5,16,7,9
	.half	.L1689-.L1196
	.byte	3,1,1,5,1,3,140,1,1,5,16,7,9
	.half	.L216-.L1689
	.byte	3,247,126,1,5,28,3,2,1,5,12,9
	.half	.L1188-.L216
	.byte	1,5,5,9
	.half	.L1204-.L1188
	.byte	3,2,1,5,35,9
	.half	.L218-.L1204
	.byte	3,3,1,5,37,9
	.half	.L1191-.L218
	.byte	3,3,1,5,10,9
	.half	.L1192-.L1191
	.byte	3,125,1,5,9,9
	.half	.L1202-.L1192
	.byte	3,5,1,5,27,7,9
	.half	.L1690-.L1202
	.byte	1,5,35,9
	.half	.L1691-.L1690
	.byte	1,5,73,7,9
	.half	.L219-.L1691
	.byte	3,9,1,5,23,9
	.half	.L222-.L219
	.byte	3,3,1,5,13,9
	.half	.L1692-.L222
	.byte	3,3,1,5,9,9
	.half	.L1693-.L1692
	.byte	1,5,33,7,9
	.half	.L1694-.L1693
	.byte	3,10,1,5,46,9
	.half	.L1193-.L1694
	.byte	3,2,1,5,29,9
	.half	.L900-.L1193
	.byte	3,127,1,5,10,9
	.half	.L1195-.L900
	.byte	3,175,111,1,7,9
	.half	.L1695-.L1195
	.byte	3,4,1,5,26,7,9
	.half	.L905-.L1695
	.byte	3,6,1,5,43,9
	.half	.L1199-.L905
	.byte	1,5,27,9
	.half	.L228-.L1199
	.byte	3,5,1,5,55,9
	.half	.L1696-.L228
	.byte	1,5,27,9
	.half	.L1697-.L1696
	.byte	3,125,1,5,17,9
	.half	.L1201-.L1697
	.byte	3,3,1,5,70,7,9
	.half	.L1698-.L1201
	.byte	3,3,1,5,21,9
	.half	.L1699-.L1698
	.byte	3,1,1,5,50,9
	.half	.L229-.L1699
	.byte	3,119,1,5,43,9
	.half	.L227-.L229
	.byte	1,5,13,7,9
	.half	.L230-.L227
	.byte	3,17,1,4,2,5,6,7,9
	.half	.L224-.L230
	.byte	3,82,1,4,1,5,53,9
	.half	.L908-.L224
	.byte	3,47,1,4,2,5,19,9
	.half	.L912-.L908
	.byte	3,81,1,5,16,9
	.half	.L1700-.L912
	.byte	3,1,1,5,13,9
	.half	.L1701-.L1700
	.byte	1,9
	.half	.L1702-.L1701
	.byte	3,2,1,9
	.half	.L1703-.L1702
	.byte	3,1,1,4,1,9
	.half	.L226-.L1703
	.byte	3,228,16,1,5,9,9
	.half	.L1704-.L226
	.byte	1,5,37,7,9
	.half	.L1705-.L1704
	.byte	3,3,1,5,24,9
	.half	.L1205-.L1705
	.byte	1,5,38,3,6,1,5,30,9
	.half	.L1207-.L1205
	.byte	3,1,1,5,31,3,1,1,5,36,9
	.half	.L1206-.L1207
	.byte	3,1,1,5,32,9
	.half	.L232-.L1206
	.byte	3,4,1,5,20,9
	.half	.L1706-.L232
	.byte	3,3,1,5,19,9
	.half	.L1707-.L1706
	.byte	3,3,1,5,9,9
	.half	.L1708-.L1707
	.byte	1,5,39,7,9
	.half	.L1709-.L1708
	.byte	3,7,1,5,14,9
	.half	.L1203-.L1709
	.byte	1,5,13,3,3,1,5,9,9
	.half	.L1209-.L1203
	.byte	1,5,37,7,9
	.half	.L1710-.L1209
	.byte	3,2,1,5,40,9
	.half	.L1208-.L1710
	.byte	1,5,13,3,1,1,5,21,9
	.half	.L1711-.L1208
	.byte	1,5,25,9
	.half	.L1712-.L1711
	.byte	3,1,1,3,1,1,5,45,9
	.half	.L235-.L1712
	.byte	3,70,1,5,73,9
	.half	.L221-.L235
	.byte	1,5,29,7,9
	.half	.L1713-.L221
	.byte	3,63,1,5,24,9
	.half	.L1714-.L1713
	.byte	1,5,28,9
	.half	.L1715-.L1714
	.byte	3,3,1,5,17,9
	.half	.L1716-.L1715
	.byte	3,3,1,5,15,9
	.half	.L1717-.L1716
	.byte	1,5,19,9
	.half	.L1718-.L1717
	.byte	3,2,1,5,32,9
	.half	.L1719-.L1718
	.byte	1,5,35,9
	.half	.L1212-.L1719
	.byte	3,3,1,5,11,9
	.half	.L1210-.L1212
	.byte	3,2,1,5,10,9
	.half	.L1720-.L1210
	.byte	3,126,1,5,5,9
	.half	.L1213-.L1720
	.byte	3,2,1,5,60,7,9
	.half	.L1721-.L1213
	.byte	3,3,1,5,24,9
	.half	.L236-.L1721
	.byte	3,4,1,5,11,9
	.half	.L1722-.L236
	.byte	3,2,1,5,5,9
	.half	.L1723-.L1722
	.byte	1,5,28,7,9
	.half	.L1724-.L1723
	.byte	3,1,1,5,10,9
	.half	.L237-.L1724
	.byte	3,2,1,5,20,9
	.half	.L1725-.L237
	.byte	1,5,5,9
	.half	.L1726-.L1725
	.byte	1,5,19,7,9
	.half	.L1727-.L1726
	.byte	3,3,1,5,37,9
	.half	.L1197-.L1727
	.byte	3,9,1,5,10,9
	.half	.L1214-.L1197
	.byte	1,5,14,7,9
	.half	.L913-.L1214
	.byte	3,145,111,1,5,32,9
	.half	.L914-.L913
	.byte	3,244,16,1,5,20,9
	.half	.L1728-.L914
	.byte	3,2,1,5,9,9
	.half	.L1729-.L1728
	.byte	3,2,1,5,32,9
	.half	.L220-.L1729
	.byte	3,114,1,5,16,9
	.half	.L1730-.L220
	.byte	3,1,1,5,1,9
	.half	.L234-.L1730
	.byte	3,20,1,5,28,7,9
	.half	.L239-.L234
	.byte	3,125,1,5,12,9
	.half	.L240-.L239
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L503-.L240
	.byte	0,1,1
.L1686:
	.sdecl	'.debug_ranges',debug,cluster('rt_mq_send_wait')
	.sect	'.debug_ranges'
.L502:
	.word	-1,.L357,0,.L503-.L357,0,0
.L904:
	.word	-1,.L357,.L905-.L357,.L226-.L357,-1,.L359,0,.L568-.L359,0,0
.L911:
	.word	-1,.L357,.L224-.L357,.L908-.L357,.L912-.L357,.L226-.L357,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mq_urgent')
	.sect	'.debug_info'
.L504:
	.word	346
	.half	3
	.word	.L505
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L507,.L506
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mq_urgent',0,1,176,18,10
	.word	.L574
	.byte	1,1,1
	.word	.L363,.L916,.L362
	.byte	4
	.byte	'mq',0,1,176,18,31
	.word	.L859,.L917
	.byte	4
	.byte	'buffer',0,1,176,18,47
	.word	.L888,.L918
	.byte	4
	.byte	'size',0,1,176,18,65
	.word	.L603,.L919
	.byte	5
	.word	.L363,.L916
	.byte	6
	.byte	'temp',0,1,178,18,25
	.word	.L603,.L920
	.byte	6
	.byte	'msg',0,1,179,18,27
	.word	.L866,.L921
	.byte	7
	.word	.L646,.L922,.L923
	.byte	8
	.word	.L649,.L924
	.byte	9
	.word	.L651,.L922,.L923
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mq_urgent')
	.sect	'.debug_abbrev'
.L505:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mq_urgent')
	.sect	'.debug_line'
.L506:
	.word	.L1732-.L1731
.L1731:
	.half	3
	.word	.L1734-.L1733
.L1733:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1734:
	.byte	5,10,7,0,5,2
	.word	.L363
	.byte	3,175,18,1,5,18,9
	.half	.L1216-.L363
	.byte	3,12,1,5,10,9
	.half	.L1218-.L1216
	.byte	3,116,1,5,5,9
	.half	.L1220-.L1218
	.byte	3,12,1,5,16,7,9
	.half	.L1735-.L1220
	.byte	3,1,1,5,1,3,193,0,1,5,5,7,9
	.half	.L244-.L1735
	.byte	3,65,1,5,35,9
	.half	.L246-.L244
	.byte	3,3,1,5,37,9
	.half	.L1221-.L246
	.byte	3,3,1,5,10,9
	.half	.L1223-.L1221
	.byte	3,125,1,5,5,9
	.half	.L1224-.L1223
	.byte	3,5,1,5,29,7,9
	.half	.L1736-.L1224
	.byte	3,8,1,5,24,9
	.half	.L1737-.L1736
	.byte	1,5,28,9
	.half	.L1738-.L1737
	.byte	3,3,1,5,19,9
	.half	.L1222-.L1738
	.byte	3,3,1,5,32,9
	.half	.L1739-.L1222
	.byte	1,5,35,9
	.half	.L1227-.L1739
	.byte	3,3,1,5,43,9
	.half	.L1225-.L1227
	.byte	3,3,1,5,15,9
	.half	.L1740-.L1225
	.byte	1,5,24,9
	.half	.L1741-.L1740
	.byte	3,1,1,5,10,9
	.half	.L1742-.L1741
	.byte	3,124,1,5,11,9
	.half	.L1228-.L1742
	.byte	3,7,1,5,5,9
	.half	.L1219-.L1228
	.byte	1,5,28,7,9
	.half	.L1743-.L1219
	.byte	3,1,1,5,10,9
	.half	.L248-.L1743
	.byte	3,2,1,5,20,9
	.half	.L1744-.L248
	.byte	1,5,5,9
	.half	.L1745-.L1744
	.byte	1,5,19,7,9
	.half	.L1746-.L1745
	.byte	3,3,1,5,37,9
	.half	.L1217-.L1746
	.byte	3,9,1,5,10,9
	.half	.L1229-.L1217
	.byte	1,5,14,7,9
	.half	.L922-.L1229
	.byte	3,165,110,1,5,32,9
	.half	.L923-.L922
	.byte	3,224,17,1,5,20,9
	.half	.L1747-.L923
	.byte	3,2,1,5,9,9
	.half	.L1748-.L1747
	.byte	3,2,1,5,32,9
	.half	.L247-.L1748
	.byte	3,114,1,5,16,9
	.half	.L1749-.L247
	.byte	3,1,1,5,1,3,20,1,5,28,7,9
	.half	.L250-.L1749
	.byte	3,125,1,5,12,9
	.half	.L251-.L250
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L508-.L251
	.byte	0,1,1
.L1732:
	.sdecl	'.debug_ranges',debug,cluster('rt_mq_urgent')
	.sect	'.debug_ranges'
.L507:
	.word	-1,.L363,0,.L508-.L363,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mq_recv')
	.sect	'.debug_info'
.L509:
	.word	459
	.half	3
	.word	.L510
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L512,.L511
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mq_recv',0,1,141,19,10
	.word	.L574
	.byte	1,1,1
	.word	.L365,.L925,.L364
	.byte	4
	.byte	'mq',0,1,141,19,32
	.word	.L859,.L926
	.byte	4
	.byte	'buffer',0,1,142,19,32
	.word	.L656,.L927
	.byte	4
	.byte	'size',0,1,143,19,32
	.word	.L603,.L928
	.byte	4
	.byte	'timeout',0,1,144,19,32
	.word	.L607,.L929
	.byte	5
	.word	.L365,.L925
	.byte	6
	.byte	'thread',0,1,146,19,23
	.word	.L601,.L930
	.byte	6
	.byte	'temp',0,1,147,19,25
	.word	.L603,.L931
	.byte	6
	.byte	'msg',0,1,148,19,27
	.word	.L866,.L932
	.byte	6
	.byte	'tick_delta',0,1,149,19,17
	.word	.L580,.L933
	.byte	7
	.word	.L611,.L934,.L935
	.byte	8
	.word	.L613,.L936
	.byte	8
	.word	.L615,.L937
	.byte	8
	.word	.L617,.L938
	.byte	9
	.word	.L619,.L939
	.byte	0,7
	.word	.L646,.L940,.L941
	.byte	8
	.word	.L649,.L942
	.byte	10
	.word	.L651,.L940,.L941
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mq_recv')
	.sect	'.debug_abbrev'
.L510:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85
	.byte	6,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mq_recv')
	.sect	'.debug_line'
.L511:
	.word	.L1751-.L1750
.L1750:
	.half	3
	.word	.L1753-.L1752
.L1752:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1753:
	.byte	5,10,7,0,5,2
	.word	.L365
	.byte	3,140,19,1,5,16,9
	.half	.L1242-.L365
	.byte	3,17,1,5,28,3,2,1,5,12,9
	.half	.L1232-.L1242
	.byte	1,5,5,9
	.half	.L1245-.L1232
	.byte	3,1,1,5,35,9
	.half	.L254-.L1245
	.byte	3,3,1,5,10,9
	.half	.L1235-.L254
	.byte	1,5,11,3,3,1,5,9,9
	.half	.L1243-.L1235
	.byte	1,5,27,7,9
	.half	.L1754-.L1243
	.byte	1,5,35,9
	.half	.L1755-.L1754
	.byte	1,5,32,7,9
	.half	.L1756-.L1755
	.byte	3,2,1,5,9,9
	.half	.L1236-.L1756
	.byte	3,2,1,5,23,9
	.half	.L258-.L1236
	.byte	3,9,1,5,13,9
	.half	.L1757-.L258
	.byte	3,3,1,5,9,9
	.half	.L1758-.L1757
	.byte	1,5,36,7,9
	.half	.L1759-.L1758
	.byte	3,3,1,5,29,9
	.half	.L1760-.L1759
	.byte	3,2,1,5,27,1,5,20,9
	.half	.L257-.L1760
	.byte	3,2,1,5,1,3,226,0,1,5,41,7,9
	.half	.L259-.L257
	.byte	3,162,127,1,5,46,9
	.half	.L1761-.L259
	.byte	3,2,1,5,29,9
	.half	.L934-.L1761
	.byte	3,127,1,5,10,9
	.half	.L1762-.L934
	.byte	3,155,109,1,5,13,9
	.half	.L935-.L1762
	.byte	3,233,18,1,5,9,9
	.half	.L1763-.L935
	.byte	1,5,37,7,9
	.half	.L1764-.L1763
	.byte	3,3,1,5,24,9
	.half	.L1247-.L1764
	.byte	1,5,38,3,6,1,5,30,9
	.half	.L1249-.L1247
	.byte	3,1,1,5,31,3,1,1,5,36,9
	.half	.L1248-.L1249
	.byte	3,1,1,5,32,9
	.half	.L269-.L1248
	.byte	3,4,1,5,20,9
	.half	.L1765-.L269
	.byte	3,3,1,5,19,9
	.half	.L1766-.L1765
	.byte	3,3,1,5,9,9
	.half	.L1767-.L1766
	.byte	1,5,39,7,9
	.half	.L1768-.L1767
	.byte	3,7,1,5,14,9
	.half	.L1244-.L1768
	.byte	1,5,13,3,3,1,5,9,9
	.half	.L1251-.L1244
	.byte	1,5,37,7,9
	.half	.L1769-.L1251
	.byte	3,2,1,5,40,9
	.half	.L1250-.L1769
	.byte	1,5,13,3,1,1,5,21,9
	.half	.L1770-.L1250
	.byte	1,5,25,9
	.half	.L1771-.L1770
	.byte	3,1,1,3,1,1,5,14,9
	.half	.L255-.L1771
	.byte	3,67,1,5,26,9
	.half	.L1772-.L255
	.byte	1,5,37,7,9
	.half	.L1773-.L1772
	.byte	3,194,0,1,5,29,9
	.half	.L1246-.L1773
	.byte	3,3,1,5,24,9
	.half	.L1774-.L1246
	.byte	1,5,11,9
	.half	.L1775-.L1774
	.byte	3,2,1,5,5,9
	.half	.L1776-.L1775
	.byte	1,5,30,7,9
	.half	.L1777-.L1776
	.byte	3,1,1,5,28,9
	.half	.L1778-.L1777
	.byte	1,5,10,9
	.half	.L273-.L1778
	.byte	3,3,1,5,5,9
	.half	.L1779-.L273
	.byte	1,5,19,7,9
	.half	.L1780-.L1779
	.byte	3,2,1,5,28,9
	.half	.L274-.L1780
	.byte	3,4,1,5,41,9
	.half	.L1781-.L274
	.byte	3,3,1,5,27,9
	.half	.L1782-.L1781
	.byte	1,5,37,9
	.half	.L1783-.L1782
	.byte	1,5,35,9
	.half	.L1254-.L1783
	.byte	3,3,1,5,43,9
	.half	.L1252-.L1254
	.byte	3,2,1,5,15,9
	.half	.L1784-.L1252
	.byte	1,5,24,9
	.half	.L1785-.L1784
	.byte	3,1,1,5,30,9
	.half	.L1786-.L1785
	.byte	3,3,1,4,2,5,13,9
	.half	.L1787-.L1786
	.byte	3,216,108,1,4,1,5,10,9
	.half	.L1788-.L1787
	.byte	3,162,19,1,9
	.half	.L1255-.L1788
	.byte	3,6,1,5,14,7,9
	.half	.L940-.L1255
	.byte	3,135,109,1,5,32,9
	.half	.L941-.L940
	.byte	3,254,18,1,5,9,9
	.half	.L1789-.L941
	.byte	3,2,1,5,20,9
	.half	.L276-.L1789
	.byte	3,2,1,5,9,9
	.half	.L1790-.L276
	.byte	3,2,1,5,28,9
	.half	.L275-.L1790
	.byte	3,4,1,5,5,9
	.half	.L1257-.L275
	.byte	3,2,1,5,12,9
	.half	.L277-.L1257
	.byte	3,2,1,5,1,9
	.half	.L271-.L277
	.byte	3,1,1,7,9
	.half	.L513-.L271
	.byte	0,1,1
.L1751:
	.sdecl	'.debug_ranges',debug,cluster('rt_mq_recv')
	.sect	'.debug_ranges'
.L512:
	.word	-1,.L365,0,.L513-.L365,0,0
.L939:
	.word	-1,.L365,.L934-.L365,.L935-.L365,-1,.L367,0,.L533-.L367,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mq_control')
	.sect	'.debug_info'
.L514:
	.word	458
	.half	3
	.word	.L515
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L517,.L516
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mq_control',0,1,173,20,10
	.word	.L574
	.byte	1,1,1
	.word	.L369,.L943,.L368
	.byte	4
	.byte	'mq',0,1,173,20,32
	.word	.L859,.L944
	.byte	4
	.byte	'cmd',0,1,173,20,40
	.word	.L607,.L945
	.byte	4
	.byte	'arg',0,1,173,20,51
	.word	.L656,.L946
	.byte	5
	.word	.L369,.L943
	.byte	6
	.byte	'level',0,1,175,20,16
	.word	.L603,.L947
	.byte	6
	.byte	'msg',0,1,176,20,27
	.word	.L866,.L948
	.byte	7
	.word	.L594,.L949,.L950
	.byte	8
	.word	.L597,.L951
	.byte	9
	.word	.L599,.L949,.L950
	.byte	6
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L952
	.byte	6
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L953
	.byte	0,0,7
	.word	.L594,.L954,.L955
	.byte	8
	.word	.L597,.L951
	.byte	9
	.word	.L599,.L954,.L955
	.byte	6
	.byte	'thread',0,1,167,1,23
	.word	.L601,.L956
	.byte	6
	.byte	'temp',0,1,168,1,25
	.word	.L603,.L957
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mq_control')
	.sect	'.debug_abbrev'
.L515:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mq_control')
	.sect	'.debug_line'
.L516:
	.word	.L1792-.L1791
.L1791:
	.half	3
	.word	.L1794-.L1793
.L1793:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1794:
	.byte	5,10,7,0,5,2
	.word	.L369
	.byte	3,172,20,1,5,5,9
	.half	.L1260-.L369
	.byte	3,9,1,5,40,7,9
	.half	.L1795-.L1260
	.byte	3,3,1,5,15,9
	.half	.L1259-.L1795
	.byte	1,5,43,3,3,1,5,25,9
	.half	.L949-.L1259
	.byte	3,247,108,1,5,34,3,120,1,5,39,9
	.half	.L282-.L949
	.byte	3,3,1,5,14,9
	.half	.L1262-.L282
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1263-.L1262
	.byte	3,9,1,5,32,9
	.half	.L1265-.L1263
	.byte	3,3,1,4,2,5,13,9
	.half	.L281-.L1265
	.byte	3,167,127,1,4,1,9
	.half	.L1796-.L281
	.byte	3,199,0,1,5,36,7,9
	.half	.L950-.L1796
	.byte	3,147,19,1,5,25,9
	.half	.L954-.L950
	.byte	3,245,108,1,5,34,3,120,1,5,39,9
	.half	.L284-.L954
	.byte	3,3,1,5,14,9
	.half	.L1266-.L284
	.byte	1,5,18,3,3,1,5,26,9
	.half	.L1267-.L1266
	.byte	3,9,1,5,32,9
	.half	.L1268-.L1267
	.byte	3,3,1,4,2,5,13,9
	.half	.L283-.L1268
	.byte	3,167,127,1,4,1,9
	.half	.L1797-.L283
	.byte	3,199,0,1,5,38,7,9
	.half	.L955-.L1797
	.byte	3,150,19,1,5,45,9
	.half	.L1798-.L955
	.byte	1,9
	.half	.L286-.L1798
	.byte	3,3,1,5,37,9
	.half	.L1269-.L286
	.byte	3,3,1,5,32,9
	.half	.L1799-.L1269
	.byte	1,5,19,9
	.half	.L1800-.L1799
	.byte	3,2,1,5,13,9
	.half	.L1801-.L1800
	.byte	1,5,36,7,9
	.half	.L1802-.L1801
	.byte	3,1,1,5,51,9
	.half	.L287-.L1802
	.byte	3,3,1,5,23,9
	.half	.L1803-.L287
	.byte	1,5,32,9
	.half	.L1804-.L1803
	.byte	3,1,1,5,18,9
	.half	.L285-.L1804
	.byte	3,115,1,5,45,9
	.half	.L1805-.L285
	.byte	1,5,21,7,9
	.half	.L1806-.L1805
	.byte	3,17,1,5,19,1,5,32,9
	.half	.L1807-.L1806
	.byte	3,3,1,5,20,9
	.half	.L1808-.L1807
	.byte	3,2,1,5,16,9
	.half	.L1809-.L1808
	.byte	3,2,1,5,1,3,4,1,5,12,7,9
	.half	.L280-.L1809
	.byte	3,127,1,5,1,3,1,1,7,9
	.half	.L518-.L280
	.byte	0,1,1
.L1792:
	.sdecl	'.debug_ranges',debug,cluster('rt_mq_control')
	.sect	'.debug_ranges'
.L517:
	.word	-1,.L369,0,.L518-.L369,0,0
	.sdecl	'.debug_info',debug,cluster('rt_ipc_get_highest_priority')
	.sect	'.debug_info'
.L519:
	.word	291
	.half	3
	.word	.L520
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L522,.L521
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_ipc_get_highest_priority',0,1,203,1,12
	.word	.L582
	.byte	1,1,1
	.word	.L291,.L958,.L290
	.byte	4
	.byte	'list',0,1,203,1,51
	.word	.L959,.L960
	.byte	5
	.word	.L291,.L958
	.byte	6
	.byte	'n',0,1,205,1,26
	.word	.L622,.L961
	.byte	6
	.byte	'priority',0,1,207,1,16
	.word	.L582,.L962
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_ipc_get_highest_priority')
	.sect	'.debug_abbrev'
.L520:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_ipc_get_highest_priority')
	.sect	'.debug_line'
.L521:
	.word	.L1811-.L1810
.L1810:
	.half	3
	.word	.L1813-.L1812
.L1812:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1813:
	.byte	5,25,7,0,5,2
	.word	.L291
	.byte	3,206,1,1,5,18,3,2,1,5,35,9
	.half	.L970-.L291
	.byte	1,5,38,9
	.half	.L3-.L970
	.byte	3,4,1,5,42,9
	.half	.L1814-.L3
	.byte	3,124,1,5,29,9
	.half	.L1815-.L1814
	.byte	3,4,1,5,35,9
	.half	.L2-.L1815
	.byte	3,124,1,5,1,7,9
	.half	.L1816-.L2
	.byte	3,9,1,7,9
	.half	.L523-.L1816
	.byte	0,1,1
.L1811:
	.sdecl	'.debug_ranges',debug,cluster('rt_ipc_get_highest_priority')
	.sect	'.debug_ranges'
.L522:
	.word	-1,.L291,0,.L523-.L291,0,0
	.sdecl	'.debug_info',debug,cluster('rt_mb_urgent')
	.sect	'.debug_info'
.L524:
	.word	310
	.half	3
	.word	.L525
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L527,.L526
	.byte	2
	.word	.L370
	.byte	3
	.byte	'rt_mb_urgent',0,1,174,13,10
	.word	.L574
	.byte	1,1,1
	.word	.L345,.L963,.L344
	.byte	4
	.byte	'mb',0,1,174,13,36
	.word	.L762,.L964
	.byte	4
	.byte	'value',0,1,174,13,51
	.word	.L603,.L965
	.byte	5
	.word	.L345,.L963
	.byte	6
	.byte	'temp',0,1,176,13,25
	.word	.L603,.L966
	.byte	7
	.word	.L646,.L967,.L968
	.byte	8
	.word	.L649,.L969
	.byte	9
	.word	.L651,.L967,.L968
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('rt_mb_urgent')
	.sect	'.debug_abbrev'
.L525:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('rt_mb_urgent')
	.sect	'.debug_line'
.L526:
	.word	.L1818-.L1817
.L1817:
	.half	3
	.word	.L1820-.L1819
.L1819:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1820:
	.byte	5,5,7,0,5,2
	.word	.L345
	.byte	3,181,13,1,5,10,9
	.half	.L1821-.L345
	.byte	3,120,1,5,5,9
	.half	.L1128-.L1821
	.byte	3,8,1,7,9
	.half	.L1822-.L1128
	.byte	1,5,35,9
	.half	.L167-.L1822
	.byte	3,3,1,5,10,9
	.half	.L1130-.L167
	.byte	1,5,24,3,2,1,5,11,9
	.half	.L1132-.L1130
	.byte	1,5,5,9
	.half	.L1823-.L1132
	.byte	1,5,32,7,9
	.half	.L1824-.L1823
	.byte	3,2,1,5,16,9
	.half	.L1131-.L1824
	.byte	3,1,1,5,1,3,36,1,5,11,7,9
	.half	.L168-.L1131
	.byte	3,96,1,5,5,9
	.half	.L1825-.L168
	.byte	1,5,24,7,9
	.half	.L1826-.L1825
	.byte	3,2,1,5,26,9
	.half	.L1827-.L1826
	.byte	1,5,35,9
	.half	.L170-.L1827
	.byte	3,4,1,5,24,1,5,7,9
	.half	.L171-.L170
	.byte	3,4,1,5,20,9
	.half	.L1828-.L171
	.byte	1,5,17,9
	.half	.L1829-.L1828
	.byte	1,5,34,9
	.half	.L1830-.L1829
	.byte	1,5,7,9
	.half	.L1831-.L1830
	.byte	3,3,1,5,15,9
	.half	.L1832-.L1831
	.byte	1,5,37,9
	.half	.L1129-.L1832
	.byte	3,3,1,5,10,9
	.half	.L1133-.L1129
	.byte	1,5,14,7,9
	.half	.L967-.L1133
	.byte	3,193,115,1,5,32,9
	.half	.L968-.L967
	.byte	3,196,12,1,5,20,9
	.half	.L1833-.L968
	.byte	3,2,1,5,9,9
	.half	.L1834-.L1833
	.byte	3,2,1,5,28,9
	.half	.L172-.L1834
	.byte	3,4,1,5,12,9
	.half	.L173-.L172
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L528-.L173
	.byte	0,1,1
.L1818:
	.sdecl	'.debug_ranges',debug,cluster('rt_mb_urgent')
	.sect	'.debug_ranges'
.L527:
	.word	-1,.L345,0,.L528-.L345,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L529:
	.word	202
	.half	3
	.word	.L530
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L532,.L531
	.byte	2
	.word	.L370
	.byte	3
	.byte	'.cocofun_1',0,1,141,19,10,1
	.word	.L367,.L533,.L366
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L530:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L531:
	.word	.L1836-.L1835
.L1835:
	.half	3
	.word	.L1838-.L1837
.L1837:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1838:
	.byte	5,10,7,0,5,2
	.word	.L367
	.byte	3,221,0,1,7,9
	.half	.L1839-.L367
	.byte	3,4,1,5,26,7,9
	.half	.L1840-.L1839
	.byte	3,6,1,5,43,9
	.half	.L1082-.L1840
	.byte	1,5,27,9
	.half	.L265-.L1082
	.byte	3,5,1,5,55,9
	.half	.L1841-.L265
	.byte	1,5,27,9
	.half	.L1842-.L1841
	.byte	3,125,1,5,17,9
	.half	.L1083-.L1842
	.byte	3,3,1,5,70,7,9
	.half	.L1843-.L1083
	.byte	3,3,1,5,21,9
	.half	.L1844-.L1843
	.byte	3,1,1,5,50,9
	.half	.L266-.L1844
	.byte	3,119,1,5,43,9
	.half	.L264-.L266
	.byte	1,5,13,7,9
	.half	.L267-.L264
	.byte	3,17,1,4,2,5,6,7,9
	.half	.L261-.L267
	.byte	3,82,1,4,1,5,53,9
	.half	.L1845-.L261
	.byte	3,47,1,4,2,5,19,9
	.half	.L1846-.L1845
	.byte	3,81,1,5,16,9
	.half	.L1847-.L1846
	.byte	3,1,1,5,13,9
	.half	.L1848-.L1847
	.byte	1,9
	.half	.L1849-.L1848
	.byte	3,2,1,9
	.half	.L1850-.L1849
	.byte	3,1,1,4,1,5,5,9
	.half	.L263-.L1850
	.byte	3,47,1,7,9
	.half	.L533-.L263
	.byte	0,1,1,5,10,0,5,2
	.word	.L367
	.byte	3,221,0,1,7,9
	.half	.L1839-.L367
	.byte	3,4,1,5,26,7,9
	.half	.L1840-.L1839
	.byte	3,6,1,5,43,9
	.half	.L1082-.L1840
	.byte	1,5,27,9
	.half	.L265-.L1082
	.byte	3,5,1,5,55,9
	.half	.L1841-.L265
	.byte	1,5,27,9
	.half	.L1842-.L1841
	.byte	3,125,1,5,17,9
	.half	.L1083-.L1842
	.byte	3,3,1,5,70,7,9
	.half	.L1843-.L1083
	.byte	3,3,1,5,21,9
	.half	.L1844-.L1843
	.byte	3,1,1,5,50,9
	.half	.L266-.L1844
	.byte	3,119,1,5,43,9
	.half	.L264-.L266
	.byte	1,5,13,7,9
	.half	.L267-.L264
	.byte	3,17,1,4,2,5,6,7,9
	.half	.L261-.L267
	.byte	3,82,1,4,1,5,53,9
	.half	.L1845-.L261
	.byte	3,47,1,4,2,5,19,9
	.half	.L1846-.L1845
	.byte	3,81,1,5,16,9
	.half	.L1847-.L1846
	.byte	3,1,1,5,13,9
	.half	.L1848-.L1847
	.byte	1,9
	.half	.L1849-.L1848
	.byte	3,2,1,9
	.half	.L1850-.L1849
	.byte	3,1,1,4,1,5,5,9
	.half	.L263-.L1850
	.byte	3,47,1,7,9
	.half	.L533-.L263
	.byte	0,1,1
.L1836:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L532:
	.word	-1,.L367,0,.L533-.L367,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L534:
	.word	202
	.half	3
	.word	.L535
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L537,.L536
	.byte	2
	.word	.L370
	.byte	3
	.byte	'.cocofun_2',0,1,137,2,10,1
	.word	.L301,.L538,.L300
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L535:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L536:
	.word	.L1852-.L1851
.L1851:
	.half	3
	.word	.L1854-.L1853
.L1853:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1854:
	.byte	5,18,7,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1,5,18,0,5,2
	.word	.L301
	.byte	3,176,1,1,5,23,9
	.half	.L976-.L301
	.byte	3,2,1,9
	.half	.L538-.L976
	.byte	0,1,1
.L1852:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L537:
	.word	-1,.L301,0,.L538-.L301,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L539:
	.word	202
	.half	3
	.word	.L540
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L542,.L541
	.byte	2
	.word	.L370
	.byte	3
	.byte	'.cocofun_3',0,1,232,1,10,1
	.word	.L295,.L543,.L294
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L540:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L541:
	.word	.L1856-.L1855
.L1855:
	.half	3
	.word	.L1858-.L1857
.L1857:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1858:
	.byte	5,23,7,0,5,2
	.word	.L295
	.byte	3,196,0,1,4,2,9
	.half	.L1859-.L295
	.byte	3,108,1,5,13,9
	.half	.L1860-.L1859
	.byte	1,9
	.half	.L543-.L1860
	.byte	0,1,1,5,23,0,5,2
	.word	.L295
	.byte	3,196,0,1,4,2,9
	.half	.L1859-.L295
	.byte	3,108,1,5,13,9
	.half	.L1860-.L1859
	.byte	1,9
	.half	.L543-.L1860
	.byte	0,1,1,5,23,0,5,2
	.word	.L295
	.byte	3,196,0,1,4,2,9
	.half	.L1859-.L295
	.byte	3,108,1,5,13,9
	.half	.L1860-.L1859
	.byte	1,9
	.half	.L543-.L1860
	.byte	0,1,1,5,23,0,5,2
	.word	.L295
	.byte	3,196,0,1,4,2,9
	.half	.L1859-.L295
	.byte	3,108,1,5,13,9
	.half	.L1860-.L1859
	.byte	1,9
	.half	.L543-.L1860
	.byte	0,1,1,5,23,0,5,2
	.word	.L295
	.byte	3,196,0,1,4,2,9
	.half	.L1859-.L295
	.byte	3,108,1,5,13,9
	.half	.L1860-.L1859
	.byte	1,9
	.half	.L543-.L1860
	.byte	0,1,1
.L1856:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L542:
	.word	-1,.L295,0,.L543-.L295,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L544:
	.word	202
	.half	3
	.word	.L545
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L547,.L546
	.byte	2
	.word	.L370
	.byte	3
	.byte	'.cocofun_4',0,1,210,3,10,1
	.word	.L311,.L548,.L310
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L545:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L546:
	.word	.L1862-.L1861
.L1861:
	.half	3
	.word	.L1864-.L1863
.L1863:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1864:
	.byte	5,38,7,0,5,2
	.word	.L311
	.byte	3,230,3,1,4,2,5,13,9
	.half	.L994-.L311
	.byte	3,253,124,1,9
	.half	.L548-.L994
	.byte	0,1,1,5,44,0,5,2
	.word	.L311
	.byte	3,137,7,1,4,2,5,13,9
	.half	.L994-.L311
	.byte	3,218,121,1,9
	.half	.L548-.L994
	.byte	0,1,1,5,40,0,5,2
	.word	.L311
	.byte	3,253,8,1,4,2,5,13,9
	.half	.L994-.L311
	.byte	3,230,119,1,9
	.half	.L548-.L994
	.byte	0,1,1,5,37,0,5,2
	.word	.L311
	.byte	3,209,13,1,4,2,5,13,9
	.half	.L994-.L311
	.byte	3,146,115,1,9
	.half	.L548-.L994
	.byte	0,1,1,5,37,0,5,2
	.word	.L311
	.byte	3,129,18,1,4,2,5,13,9
	.half	.L994-.L311
	.byte	3,226,110,1,9
	.half	.L548-.L994
	.byte	0,1,1,5,37,0,5,2
	.word	.L311
	.byte	3,237,18,1,4,2,5,13,9
	.half	.L994-.L311
	.byte	3,246,109,1,9
	.half	.L548-.L994
	.byte	0,1,1
.L1862:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L547:
	.word	-1,.L311,0,.L548-.L311,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L549:
	.word	202
	.half	3
	.word	.L550
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L552,.L551
	.byte	2
	.word	.L370
	.byte	3
	.byte	'.cocofun_5',0,1,137,2,10,1
	.word	.L299,.L553,.L298
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L550:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L551:
	.word	.L1866-.L1865
.L1865:
	.half	3
	.word	.L1868-.L1867
.L1867:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1868:
	.byte	5,10,7,0,5,2
	.word	.L299
	.byte	3,136,2,1,5,41,9
	.half	.L973-.L299
	.byte	3,8,1,5,25,9
	.half	.L1869-.L973
	.byte	3,162,127,1,9
	.half	.L553-.L1869
	.byte	0,1,1,5,10,0,5,2
	.word	.L299
	.byte	3,220,4,1,5,43,9
	.half	.L973-.L299
	.byte	3,8,1,5,25,9
	.half	.L1869-.L973
	.byte	3,206,124,1,9
	.half	.L553-.L1869
	.byte	0,1,1,5,10,0,5,2
	.word	.L299
	.byte	3,142,8,1,5,43,9
	.half	.L973-.L299
	.byte	3,8,1,5,25,9
	.half	.L1869-.L973
	.byte	3,156,121,1,9
	.half	.L553-.L1869
	.byte	0,1,1
.L1866:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L552:
	.word	-1,.L299,0,.L553-.L299,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L554:
	.word	202
	.half	3
	.word	.L555
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L557,.L556
	.byte	2
	.word	.L370
	.byte	3
	.byte	'.cocofun_6',0,1,210,3,10,1
	.word	.L309,.L558,.L308
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L555:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L556:
	.word	.L1871-.L1870
.L1870:
	.half	3
	.word	.L1873-.L1872
.L1872:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1873:
	.byte	5,14,7,0,5,2
	.word	.L309
	.byte	3,146,1,1,9
	.half	.L558-.L309
	.byte	0,1,1,5,14,0,5,2
	.word	.L309
	.byte	3,146,1,1,9
	.half	.L558-.L309
	.byte	0,1,1,5,14,0,5,2
	.word	.L309
	.byte	3,146,1,1,9
	.half	.L558-.L309
	.byte	0,1,1,5,14,0,5,2
	.word	.L309
	.byte	3,146,1,1,9
	.half	.L558-.L309
	.byte	0,1,1,5,14,0,5,2
	.word	.L309
	.byte	3,146,1,1,9
	.half	.L558-.L309
	.byte	0,1,1
.L1871:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L557:
	.word	-1,.L309,0,.L558-.L309,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L559:
	.word	202
	.half	3
	.word	.L560
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L562,.L561
	.byte	2
	.word	.L370
	.byte	3
	.byte	'.cocofun_7',0,1,189,4,10,1
	.word	.L317,.L563,.L316
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L560:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L561:
	.word	.L1875-.L1874
.L1874:
	.half	3
	.word	.L1877-.L1876
.L1876:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0,0
.L1877:
	.byte	5,18,7,0,5,2
	.word	.L317
	.byte	3,199,4,1,5,20,9
	.half	.L1878-.L317
	.byte	3,1,1,5,18,9
	.half	.L1879-.L1878
	.byte	1,5,32,9
	.half	.L1880-.L1879
	.byte	3,1,1,5,30,1,9
	.half	.L563-.L1880
	.byte	0,1,1,5,30,0,5,2
	.word	.L317
	.byte	3,186,7,1,5,40,9
	.half	.L1878-.L317
	.byte	3,9,1,5,38,9
	.half	.L1879-.L1878
	.byte	1,5,40,9
	.half	.L1880-.L1879
	.byte	3,1,1,5,38,1,5,30,9
	.half	.L1009-.L1880
	.byte	3,133,125,1,7,9
	.half	.L563-.L1009
	.byte	0,1,1
.L1875:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L562:
	.word	-1,.L317,0,.L563-.L317,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L564:
	.word	202
	.half	3
	.word	.L565
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L567,.L566
	.byte	2
	.word	.L370
	.byte	3
	.byte	'.cocofun_8',0,1,244,16,10,1
	.word	.L359,.L568,.L358
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L565:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L566:
	.word	.L1882-.L1881
.L1881:
	.half	3
	.word	.L1884-.L1883
.L1883:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1884:
	.byte	5,70,7,0,5,2
	.word	.L359
	.byte	3,239,0,1,4,2,5,6,9
	.half	.L1885-.L359
	.byte	3,91,1,5,13,9
	.half	.L1886-.L1885
	.byte	3,1,1,9
	.half	.L1887-.L1886
	.byte	3,2,1,9
	.half	.L1888-.L1887
	.byte	3,1,1,9
	.half	.L568-.L1888
	.byte	0,1,1,5,70,0,5,2
	.word	.L359
	.byte	3,239,0,1,4,2,5,6,9
	.half	.L1885-.L359
	.byte	3,91,1,5,13,9
	.half	.L1886-.L1885
	.byte	3,1,1,9
	.half	.L1887-.L1886
	.byte	3,2,1,9
	.half	.L1888-.L1887
	.byte	3,1,1,9
	.half	.L568-.L1888
	.byte	0,1,1,5,70,0,5,2
	.word	.L359
	.byte	3,239,0,1,4,2,5,6,9
	.half	.L1885-.L359
	.byte	3,91,1,5,13,9
	.half	.L1886-.L1885
	.byte	3,1,1,9
	.half	.L1887-.L1886
	.byte	3,2,1,9
	.half	.L1888-.L1887
	.byte	3,1,1,9
	.half	.L568-.L1888
	.byte	0,1,1
.L1882:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L567:
	.word	-1,.L359,0,.L568-.L359,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_9')
	.sect	'.debug_info'
.L569:
	.word	202
	.half	3
	.word	.L570
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L572,.L571
	.byte	2
	.word	.L370
	.byte	3
	.byte	'.cocofun_9',0,1,239,13,10,1
	.word	.L349,.L573,.L348
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_9')
	.sect	'.debug_abbrev'
.L570:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_9')
	.sect	'.debug_line'
.L571:
	.word	.L1890-.L1889
.L1889:
	.half	3
	.word	.L1892-.L1891
.L1891:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src\\ipc.c',0,0,0,0
	.byte	'rtservice.h',0,1,0,0,0
.L1892:
	.byte	4,2,5,6,7,0,5,2
	.word	.L349
	.byte	3,202,0,1,5,19,9
	.half	.L1893-.L349
	.byte	1,5,16,9
	.half	.L1894-.L1893
	.byte	3,1,1,9
	.half	.L573-.L1894
	.byte	0,1,1,4,2,5,6,0,5,2
	.word	.L349
	.byte	3,202,0,1,5,19,9
	.half	.L1893-.L349
	.byte	1,5,16,9
	.half	.L1894-.L1893
	.byte	3,1,1,9
	.half	.L573-.L1894
	.byte	0,1,1,4,2,5,6,0,5,2
	.word	.L349
	.byte	3,202,0,1,5,19,9
	.half	.L1893-.L349
	.byte	1,5,16,9
	.half	.L1894-.L1893
	.byte	3,1,1,9
	.half	.L573-.L1894
	.byte	0,1,1,4,2,5,6,0,5,2
	.word	.L349
	.byte	3,202,0,1,5,19,9
	.half	.L1893-.L349
	.byte	1,5,16,9
	.half	.L1894-.L1893
	.byte	3,1,1,9
	.half	.L573-.L1894
	.byte	0,1,1,4,2,5,6,0,5,2
	.word	.L349
	.byte	3,202,0,1,5,19,9
	.half	.L1893-.L349
	.byte	1,5,16,9
	.half	.L1894-.L1893
	.byte	3,1,1,9
	.half	.L573-.L1894
	.byte	0,1,1
.L1890:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_9')
	.sect	'.debug_ranges'
.L572:
	.word	-1,.L349,0,.L573-.L349,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L366:
	.word	-1,.L367,0,.L533-.L367
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L300:
	.word	-1,.L301,0,.L538-.L301
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L294:
	.word	-1,.L295,0,.L543-.L295
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L310:
	.word	-1,.L311,0,.L548-.L311
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L298:
	.word	-1,.L299,0,.L553-.L299
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L308:
	.word	-1,.L309,0,.L558-.L309
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L316:
	.word	-1,.L317,0,.L563-.L317
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L358:
	.word	-1,.L359,0,.L568-.L359
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_9')
	.sect	'.debug_loc'
.L348:
	.word	-1,.L349,0,.L573-.L349
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_event_control')
	.sect	'.debug_loc'
.L754:
	.word	-1,.L335,0,.L1089-.L335
	.half	1
	.byte	101
	.word	.L131-.L335,.L751-.L335
	.half	1
	.byte	101
	.word	0,0
.L753:
	.word	-1,.L335,0,.L1089-.L335
	.half	1
	.byte	84
	.word	.L131-.L335,.L751-.L335
	.half	1
	.byte	84
	.word	0,0
.L752:
	.word	-1,.L335,0,.L1089-.L335
	.half	1
	.byte	100
	.word	.L1090-.L335,.L1091-.L335
	.half	1
	.byte	111
	.word	.L301-.L335,.L538-.L335
	.half	1
	.byte	111
	.word	.L1093-.L335,.L751-.L335
	.half	1
	.byte	111
	.word	.L131-.L335,.L751-.L335
	.half	1
	.byte	100
	.word	0,0
.L755:
	.word	-1,.L335,.L1089-.L335,.L133-.L335
	.half	1
	.byte	82
	.word	.L756-.L335,.L1091-.L335
	.half	1
	.byte	88
	.word	.L301-.L335,.L538-.L335
	.half	1
	.byte	88
	.word	.L1093-.L335,.L131-.L335
	.half	1
	.byte	88
	.word	0,0
.L758:
	.word	0,0
.L334:
	.word	-1,.L335,0,.L751-.L335
	.half	2
	.byte	138,0
	.word	0,0
.L760:
	.word	-1,.L335,.L1092-.L335,.L1091-.L335
	.half	1
	.byte	82
	.word	.L301-.L335,.L538-.L335
	.half	1
	.byte	89
	.word	.L301-.L335,.L538-.L335
	.half	1
	.byte	82
	.word	.L1093-.L335,.L132-.L335
	.half	1
	.byte	89
	.word	.L1093-.L335,.L1094-.L335
	.half	1
	.byte	82
	.word	0,0
.L759:
	.word	-1,.L335,.L976-.L335,.L538-.L335
	.half	1
	.byte	100
	.word	.L1093-.L335,.L1094-.L335
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_event_detach')
	.sect	'.debug_loc'
.L722:
	.word	-1,.L329,.L299-.L329,.L553-.L329
	.half	1
	.byte	100
	.word	.L973-.L329,.L553-.L329
	.half	1
	.byte	111
	.word	.L723-.L329,.L1040-.L329
	.half	1
	.byte	111
	.word	.L723-.L329,.L85-.L329
	.half	1
	.byte	100
	.word	.L301-.L329,.L538-.L329
	.half	1
	.byte	111
	.word	.L1042-.L329,.L721-.L329
	.half	1
	.byte	111
	.word	.L1044-.L329,.L1045-.L329
	.half	1
	.byte	100
	.word	0,0
.L725:
	.word	0,0
.L328:
	.word	-1,.L329,0,.L721-.L329
	.half	2
	.byte	138,0
	.word	0,0
.L727:
	.word	-1,.L329,.L1041-.L329,.L1040-.L329
	.half	1
	.byte	82
	.word	.L301-.L329,.L538-.L329
	.half	1
	.byte	88
	.word	.L301-.L329,.L538-.L329
	.half	1
	.byte	82
	.word	.L1042-.L329,.L84-.L329
	.half	1
	.byte	88
	.word	.L1042-.L329,.L1043-.L329
	.half	1
	.byte	82
	.word	0,0
.L726:
	.word	-1,.L329,.L976-.L329,.L538-.L329
	.half	1
	.byte	100
	.word	.L1042-.L329,.L1043-.L329
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_event_init')
	.sect	'.debug_loc'
.L715:
	.word	-1,.L327,0,.L1038-.L327
	.half	1
	.byte	100
	.word	.L295-.L327,.L543-.L327
	.half	1
	.byte	111
	.word	.L1039-.L327,.L713-.L327
	.half	1
	.byte	111
	.word	0,0
.L717:
	.word	-1,.L327,0,.L1038-.L327
	.half	1
	.byte	84
	.word	.L295-.L327,.L543-.L327
	.half	1
	.byte	95
	.word	.L1039-.L327,.L713-.L327
	.half	1
	.byte	95
	.word	0,0
.L720:
	.word	0,0
.L716:
	.word	-1,.L327,0,.L1038-.L327
	.half	1
	.byte	101
	.word	0,0
.L326:
	.word	-1,.L327,0,.L713-.L327
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_event_recv')
	.sect	'.debug_loc'
.L737:
	.word	-1,.L333,0,.L1059-.L333
	.half	1
	.byte	100
	.word	.L1063-.L333,.L106-.L333
	.half	1
	.byte	100
	.word	.L349-.L333,.L573-.L333
	.half	1
	.byte	111
	.word	.L359-.L333,.L568-.L333
	.half	1
	.byte	111
	.word	.L367-.L333,.L533-.L333
	.half	1
	.byte	111
	.word	.L1084-.L333,.L736-.L333
	.half	1
	.byte	111
	.word	.L1088-.L333,.L127-.L333
	.half	1
	.byte	100
	.word	0,0
.L750:
	.word	0,0
.L744:
	.word	-1,.L333,.L1064-.L333,.L1065-.L333
	.half	1
	.byte	82
	.word	.L116-.L333,.L747-.L333
	.half	1
	.byte	82
	.word	.L349-.L333,.L573-.L333
	.half	1
	.byte	91
	.word	.L359-.L333,.L568-.L333
	.half	1
	.byte	91
	.word	.L367-.L333,.L533-.L333
	.half	1
	.byte	91
	.word	.L1066-.L333,.L1085-.L333
	.half	1
	.byte	91
	.word	.L1085-.L333,.L114-.L333
	.half	1
	.byte	82
	.word	.L1087-.L333,.L736-.L333
	.half	1
	.byte	91
	.word	0,0
.L748:
	.word	0,0
.L1080:
	.word	-1,.L333,.L349-.L333,.L573-.L333
	.half	1
	.byte	98
	.word	.L359-.L333,.L568-.L333
	.half	1
	.byte	98
	.word	.L1082-.L333,.L261-.L333
	.half	1
	.byte	98
	.word	0,0
.L739:
	.word	-1,.L333,0,.L1059-.L333
	.half	1
	.byte	85
	.word	.L1066-.L333,.L1067-.L333
	.half	1
	.byte	89
	.word	.L107-.L333,.L1070-.L333
	.half	1
	.byte	89
	.word	.L1075-.L333,.L1076-.L333
	.half	1
	.byte	89
	.word	.L1077-.L333,.L1078-.L333
	.half	1
	.byte	89
	.word	0,0
.L742:
	.word	-1,.L333,0,.L1059-.L333
	.half	1
	.byte	101
	.word	.L349-.L333,.L573-.L333
	.half	1
	.byte	108
	.word	.L359-.L333,.L568-.L333
	.half	1
	.byte	108
	.word	.L367-.L333,.L533-.L333
	.half	1
	.byte	108
	.word	.L1060-.L333,.L736-.L333
	.half	1
	.byte	108
	.word	0,0
.L332:
	.word	-1,.L333,0,.L1058-.L333
	.half	2
	.byte	138,0
	.word	.L1058-.L333,.L104-.L333
	.half	2
	.byte	138,8
	.word	.L104-.L333,.L104-.L333
	.half	2
	.byte	138,0
	.word	.L104-.L333,.L116-.L333
	.half	2
	.byte	138,8
	.word	.L116-.L333,.L116-.L333
	.half	2
	.byte	138,0
	.word	.L116-.L333,.L736-.L333
	.half	2
	.byte	138,8
	.word	.L736-.L333,.L736-.L333
	.half	2
	.byte	138,0
	.word	0,0
.L738:
	.word	-1,.L333,0,.L1059-.L333
	.half	1
	.byte	84
	.word	.L1060-.L333,.L1061-.L333
	.half	1
	.byte	88
	.word	.L1068-.L333,.L1069-.L333
	.half	1
	.byte	88
	.word	.L1071-.L333,.L1072-.L333
	.half	1
	.byte	88
	.word	.L1073-.L333,.L113-.L333
	.half	1
	.byte	88
	.word	.L1074-.L333,.L1075-.L333
	.half	1
	.byte	88
	.word	.L116-.L333,.L1077-.L333
	.half	1
	.byte	88
	.word	0,0
.L745:
	.word	-1,.L333,.L349-.L333,.L573-.L333
	.half	1
	.byte	90
	.word	.L359-.L333,.L568-.L333
	.half	1
	.byte	90
	.word	.L367-.L333,.L533-.L333
	.half	1
	.byte	90
	.word	.L1059-.L333,.L736-.L333
	.half	1
	.byte	90
	.word	0,0
.L1081:
	.word	-1,.L333,.L349-.L333,.L573-.L333
	.half	1
	.byte	100
	.word	.L359-.L333,.L568-.L333
	.half	1
	.byte	100
	.word	.L1083-.L333,.L264-.L333
	.half	1
	.byte	100
	.word	0,0
.L749:
	.word	0,0
.L743:
	.word	-1,.L333,.L1059-.L333,.L1062-.L333
	.half	1
	.byte	98
	.word	.L1079-.L333,.L747-.L333
	.half	1
	.byte	100
	.word	.L349-.L333,.L573-.L333
	.half	1
	.byte	109
	.word	.L359-.L333,.L568-.L333
	.half	1
	.byte	109
	.word	.L367-.L333,.L533-.L333
	.half	1
	.byte	109
	.word	.L1086-.L333,.L736-.L333
	.half	1
	.byte	109
	.word	0,0
.L740:
	.word	-1,.L333,0,.L1059-.L333
	.half	1
	.byte	86
	.word	.L349-.L333,.L573-.L333
	.half	2
	.byte	145,120
	.word	.L359-.L333,.L568-.L333
	.half	2
	.byte	145,120
	.word	.L367-.L333,.L533-.L333
	.half	2
	.byte	145,120
	.word	0,.L736-.L333
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_event_send')
	.sect	'.debug_loc'
.L729:
	.word	-1,.L331,0,.L1046-.L331
	.half	1
	.byte	100
	.word	.L1050-.L331,.L1049-.L331
	.half	1
	.byte	100
	.word	.L311-.L331,.L548-.L331
	.half	1
	.byte	111
	.word	.L1047-.L331,.L728-.L331
	.half	1
	.byte	111
	.word	0,0
.L733:
	.word	-1,.L331,.L1046-.L331,.L1049-.L331
	.half	1
	.byte	82
	.word	.L311-.L331,.L548-.L331
	.half	1
	.byte	90
	.word	.L1051-.L331,.L728-.L331
	.half	1
	.byte	90
	.word	0,0
.L731:
	.word	-1,.L331,.L1052-.L331,.L90-.L331
	.half	1
	.byte	108
	.word	0,0
.L735:
	.word	-1,.L331,.L311-.L331,.L548-.L331
	.half	1
	.byte	89
	.word	.L1046-.L331,.L728-.L331
	.half	1
	.byte	89
	.word	0,0
.L330:
	.word	-1,.L331,0,.L728-.L331
	.half	2
	.byte	138,0
	.word	0,0
.L730:
	.word	-1,.L331,0,.L1046-.L331
	.half	1
	.byte	84
	.word	.L1047-.L331,.L1048-.L331
	.half	1
	.byte	88
	.word	0,0
.L734:
	.word	-1,.L331,.L1053-.L331,.L1054-.L331
	.half	5
	.byte	144,32,157,32,0
	.word	.L94-.L331,.L1056-.L331
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L732:
	.word	-1,.L331,.L1055-.L331,.L1054-.L331
	.half	1
	.byte	100
	.word	.L94-.L331,.L1057-.L331
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_ipc_get_highest_priority')
	.sect	'.debug_loc'
.L960:
	.word	-1,.L291,0,.L958-.L291
	.half	1
	.byte	100
	.word	0,0
.L961:
	.word	-1,.L291,.L970-.L291,.L958-.L291
	.half	1
	.byte	111
	.word	0,0
.L962:
	.word	-1,.L291,.L970-.L291,.L958-.L291
	.half	1
	.byte	82
	.word	0,0
.L290:
	.word	-1,.L291,0,.L958-.L291
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mb_control')
	.sect	'.debug_loc'
.L847:
	.word	-1,.L351,0,.L1157-.L351
	.half	1
	.byte	101
	.word	.L201-.L351,.L844-.L351
	.half	1
	.byte	101
	.word	0,0
.L846:
	.word	-1,.L351,0,.L1157-.L351
	.half	1
	.byte	84
	.word	.L201-.L351,.L844-.L351
	.half	1
	.byte	84
	.word	0,0
.L848:
	.word	-1,.L351,.L1157-.L351,.L203-.L351
	.half	1
	.byte	82
	.word	.L849-.L351,.L1159-.L351
	.half	1
	.byte	88
	.word	.L301-.L351,.L538-.L351
	.half	1
	.byte	88
	.word	.L1161-.L351,.L1162-.L351
	.half	1
	.byte	88
	.word	.L1165-.L351,.L201-.L351
	.half	1
	.byte	88
	.word	0,0
.L851:
	.word	0,0
.L845:
	.word	-1,.L351,0,.L1157-.L351
	.half	1
	.byte	100
	.word	.L1158-.L351,.L1159-.L351
	.half	1
	.byte	108
	.word	.L301-.L351,.L538-.L351
	.half	1
	.byte	108
	.word	.L1161-.L351,.L1162-.L351
	.half	1
	.byte	108
	.word	.L1165-.L351,.L844-.L351
	.half	1
	.byte	108
	.word	.L201-.L351,.L844-.L351
	.half	1
	.byte	100
	.word	0,0
.L350:
	.word	-1,.L351,0,.L844-.L351
	.half	2
	.byte	138,0
	.word	0,0
.L853:
	.word	-1,.L351,.L1160-.L351,.L1159-.L351
	.half	1
	.byte	82
	.word	.L301-.L351,.L538-.L351
	.half	1
	.byte	89
	.word	.L301-.L351,.L538-.L351
	.half	1
	.byte	82
	.word	.L1161-.L351,.L202-.L351
	.half	1
	.byte	89
	.word	.L1161-.L351,.L1163-.L351
	.half	1
	.byte	82
	.word	0,0
.L857:
	.word	-1,.L351,.L1164-.L351,.L1162-.L351
	.half	1
	.byte	82
	.word	.L301-.L351,.L538-.L351
	.half	1
	.byte	82
	.word	.L301-.L351,.L538-.L351
	.half	1
	.byte	89
	.word	.L1165-.L351,.L1166-.L351
	.half	1
	.byte	82
	.word	.L1165-.L351,.L204-.L351
	.half	1
	.byte	89
	.word	0,0
.L852:
	.word	-1,.L351,.L976-.L351,.L538-.L351
	.half	1
	.byte	100
	.word	.L1161-.L351,.L1163-.L351
	.half	1
	.byte	100
	.word	0,0
.L856:
	.word	-1,.L351,.L976-.L351,.L538-.L351
	.half	1
	.byte	100
	.word	.L1165-.L351,.L1166-.L351
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mb_detach')
	.sect	'.debug_loc'
.L781:
	.word	0,0
.L778:
	.word	-1,.L339,0,.L138-.L339
	.half	1
	.byte	100
	.word	.L1098-.L339,.L1099-.L339
	.half	1
	.byte	108
	.word	.L301-.L339,.L538-.L339
	.half	1
	.byte	108
	.word	.L1101-.L339,.L1102-.L339
	.half	1
	.byte	108
	.word	.L1105-.L339,.L777-.L339
	.half	1
	.byte	108
	.word	.L1107-.L339,.L1108-.L339
	.half	1
	.byte	100
	.word	0,0
.L338:
	.word	-1,.L339,0,.L777-.L339
	.half	2
	.byte	138,0
	.word	0,0
.L783:
	.word	-1,.L339,.L1100-.L339,.L1099-.L339
	.half	1
	.byte	82
	.word	.L301-.L339,.L538-.L339
	.half	1
	.byte	82
	.word	.L301-.L339,.L538-.L339
	.half	1
	.byte	88
	.word	.L1101-.L339,.L1103-.L339
	.half	1
	.byte	82
	.word	.L1101-.L339,.L137-.L339
	.half	1
	.byte	88
	.word	0,0
.L787:
	.word	-1,.L339,.L1104-.L339,.L1102-.L339
	.half	1
	.byte	82
	.word	.L301-.L339,.L538-.L339
	.half	1
	.byte	88
	.word	.L301-.L339,.L538-.L339
	.half	1
	.byte	82
	.word	.L1105-.L339,.L139-.L339
	.half	1
	.byte	88
	.word	.L1105-.L339,.L1106-.L339
	.half	1
	.byte	82
	.word	0,0
.L782:
	.word	-1,.L339,.L976-.L339,.L538-.L339
	.half	1
	.byte	100
	.word	.L1101-.L339,.L1103-.L339
	.half	1
	.byte	100
	.word	0,0
.L786:
	.word	-1,.L339,.L976-.L339,.L538-.L339
	.half	1
	.byte	100
	.word	.L1105-.L339,.L1106-.L339
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mb_init')
	.sect	'.debug_loc'
.L767:
	.word	-1,.L337,0,.L1095-.L337
	.half	1
	.byte	85
	.word	.L295-.L337,.L543-.L337
	.half	1
	.byte	95
	.word	.L1096-.L337,.L761-.L337
	.half	1
	.byte	95
	.word	0,0
.L770:
	.word	0,0
.L775:
	.word	0,0
.L763:
	.word	-1,.L337,0,.L1095-.L337
	.half	1
	.byte	100
	.word	.L295-.L337,.L543-.L337
	.half	1
	.byte	111
	.word	.L1097-.L337,.L761-.L337
	.half	1
	.byte	111
	.word	0,0
.L765:
	.word	-1,.L337,0,.L1095-.L337
	.half	1
	.byte	102
	.word	.L295-.L337,.L543-.L337
	.half	1
	.byte	108
	.word	.L1096-.L337,.L761-.L337
	.half	1
	.byte	108
	.word	0,0
.L764:
	.word	-1,.L337,0,.L1095-.L337
	.half	1
	.byte	101
	.word	0,0
.L336:
	.word	-1,.L337,0,.L761-.L337
	.half	2
	.byte	138,0
	.word	0,0
.L766:
	.word	-1,.L337,0,.L1095-.L337
	.half	1
	.byte	84
	.word	.L295-.L337,.L543-.L337
	.half	1
	.byte	88
	.word	.L1097-.L337,.L761-.L337
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mb_recv')
	.sect	'.debug_loc'
.L829:
	.word	0,0
.L835:
	.word	0,0
.L827:
	.word	0,0
.L843:
	.word	0,0
.L819:
	.word	-1,.L347,0,.L1136-.L347
	.half	1
	.byte	100
	.word	.L1138-.L347,.L175-.L347
	.half	1
	.byte	100
	.word	.L349-.L347,.L573-.L347
	.half	1
	.byte	108
	.word	.L1143-.L347,.L818-.L347
	.half	1
	.byte	108
	.word	.L1155-.L347,.L197-.L347
	.half	1
	.byte	100
	.word	.L1156-.L347,.L198-.L347
	.half	1
	.byte	100
	.word	0,0
.L836:
	.word	0,0
.L831:
	.word	-1,.L347,.L349-.L347,.L573-.L347
	.half	1
	.byte	98
	.word	.L1144-.L347,.L182-.L347
	.half	1
	.byte	98
	.word	0,0
.L346:
	.word	-1,.L347,0,.L1135-.L347
	.half	2
	.byte	138,0
	.word	.L1135-.L347,.L180-.L347
	.half	2
	.byte	138,8
	.word	.L180-.L347,.L180-.L347
	.half	2
	.byte	138,0
	.word	.L180-.L347,.L818-.L347
	.half	2
	.byte	138,8
	.word	.L818-.L347,.L818-.L347
	.half	2
	.byte	138,0
	.word	0,0
.L832:
	.word	-1,.L347,.L349-.L347,.L573-.L347
	.half	1
	.byte	100
	.word	.L1145-.L347,.L185-.L347
	.half	1
	.byte	100
	.word	0,0
.L824:
	.word	-1,.L347,.L1139-.L347,.L1140-.L347
	.half	1
	.byte	82
	.word	.L349-.L347,.L573-.L347
	.half	1
	.byte	89
	.word	.L1146-.L347,.L1147-.L347
	.half	1
	.byte	89
	.word	.L1147-.L347,.L1153-.L347
	.half	1
	.byte	82
	.word	.L1154-.L347,.L818-.L347
	.half	1
	.byte	89
	.word	0,0
.L828:
	.word	0,0
.L823:
	.word	-1,.L347,.L1136-.L347,.L1137-.L347
	.half	1
	.byte	98
	.word	.L1141-.L347,.L1142-.L347
	.half	1
	.byte	100
	.word	.L349-.L347,.L573-.L347
	.half	1
	.byte	110
	.word	.L1148-.L347,.L818-.L347
	.half	1
	.byte	110
	.word	0,0
.L825:
	.word	-1,.L347,.L349-.L347,.L573-.L347
	.half	1
	.byte	88
	.word	.L1136-.L347,.L1149-.L347
	.half	1
	.byte	88
	.word	.L1149-.L347,.L1151-.L347
	.half	1
	.byte	82
	.word	.L1152-.L347,.L818-.L347
	.half	1
	.byte	88
	.word	0,0
.L822:
	.word	-1,.L347,0,.L1136-.L347
	.half	1
	.byte	84
	.word	.L349-.L347,.L573-.L347
	.half	2
	.byte	145,120
	.word	0,.L818-.L347
	.half	2
	.byte	145,120
	.word	0,0
.L821:
	.word	-1,.L347,0,.L1136-.L347
	.half	1
	.byte	101
	.word	.L349-.L347,.L573-.L347
	.half	1
	.byte	109
	.word	.L1150-.L347,.L818-.L347
	.half	1
	.byte	109
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mb_send')
	.sect	'.debug_loc'
.L789:
	.word	-1,.L343,0,.L788-.L343
	.half	1
	.byte	100
	.word	0,0
.L342:
	.word	-1,.L343,0,.L788-.L343
	.half	2
	.byte	138,0
	.word	0,0
.L790:
	.word	-1,.L343,0,.L788-.L343
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mb_send_wait')
	.sect	'.debug_loc'
.L801:
	.word	0,0
.L807:
	.word	0,0
.L799:
	.word	0,0
.L817:
	.word	0,0
.L792:
	.word	-1,.L341,0,.L1110-.L341
	.half	1
	.byte	100
	.word	.L1111-.L341,.L791-.L341
	.half	1
	.byte	108
	.word	.L1116-.L341,.L142-.L341
	.half	1
	.byte	100
	.word	0,0
.L808:
	.word	0,0
.L803:
	.word	-1,.L341,.L1122-.L341,.L148-.L341
	.half	1
	.byte	98
	.word	0,0
.L340:
	.word	-1,.L341,0,.L1109-.L341
	.half	2
	.byte	138,0
	.word	.L1109-.L341,.L162-.L341
	.half	2
	.byte	138,8
	.word	.L162-.L341,.L162-.L341
	.half	2
	.byte	138,0
	.word	.L162-.L341,.L791-.L341
	.half	2
	.byte	138,8
	.word	.L791-.L341,.L791-.L341
	.half	2
	.byte	138,0
	.word	0,0
.L804:
	.word	-1,.L341,.L1123-.L341,.L151-.L341
	.half	1
	.byte	111
	.word	0,0
.L796:
	.word	-1,.L341,.L1117-.L341,.L146-.L341
	.half	1
	.byte	82
	.word	.L1118-.L341,.L1119-.L341
	.half	1
	.byte	90
	.word	.L1119-.L341,.L1126-.L341
	.half	1
	.byte	82
	.word	.L1127-.L341,.L791-.L341
	.half	1
	.byte	90
	.word	0,0
.L800:
	.word	0,0
.L795:
	.word	-1,.L341,.L1110-.L341,.L1113-.L341
	.half	1
	.byte	98
	.word	.L1115-.L341,.L791-.L341
	.half	1
	.byte	109
	.word	.L1120-.L341,.L1121-.L341
	.half	1
	.byte	100
	.word	0,0
.L797:
	.word	-1,.L341,.L1110-.L341,.L1114-.L341
	.half	1
	.byte	89
	.word	.L1114-.L341,.L1124-.L341
	.half	1
	.byte	82
	.word	.L1125-.L341,.L791-.L341
	.half	1
	.byte	89
	.word	0,0
.L794:
	.word	-1,.L341,0,.L1110-.L341
	.half	1
	.byte	85
	.word	0,.L791-.L341
	.half	2
	.byte	145,120
	.word	0,0
.L793:
	.word	-1,.L341,0,.L1110-.L341
	.half	1
	.byte	84
	.word	.L1112-.L341,.L791-.L341
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mb_urgent')
	.sect	'.debug_loc'
.L969:
	.word	0,0
.L964:
	.word	-1,.L345,0,.L167-.L345
	.half	1
	.byte	100
	.word	.L1128-.L345,.L1129-.L345
	.half	1
	.byte	111
	.word	.L311-.L345,.L548-.L345
	.half	1
	.byte	111
	.word	.L1133-.L345,.L1134-.L345
	.half	1
	.byte	111
	.word	.L309-.L345,.L997-.L345
	.half	1
	.byte	111
	.word	.L172-.L345,.L173-.L345
	.half	1
	.byte	111
	.word	0,0
.L344:
	.word	-1,.L345,0,.L963-.L345
	.half	2
	.byte	138,0
	.word	0,0
.L966:
	.word	-1,.L345,.L1130-.L345,.L1131-.L345
	.half	1
	.byte	82
	.word	.L1132-.L345,.L1129-.L345
	.half	1
	.byte	89
	.word	.L168-.L345,.L1129-.L345
	.half	1
	.byte	82
	.word	.L311-.L345,.L548-.L345
	.half	1
	.byte	89
	.word	.L311-.L345,.L548-.L345
	.half	1
	.byte	82
	.word	.L309-.L345,.L558-.L345
	.half	1
	.byte	89
	.word	.L309-.L345,.L558-.L345
	.half	1
	.byte	82
	.word	.L1133-.L345,.L963-.L345
	.half	1
	.byte	89
	.word	.L1133-.L345,.L968-.L345
	.half	1
	.byte	82
	.word	.L172-.L345,.L173-.L345
	.half	1
	.byte	82
	.word	0,0
.L965:
	.word	-1,.L345,0,.L167-.L345
	.half	1
	.byte	84
	.word	.L1128-.L345,.L1129-.L345
	.half	1
	.byte	88
	.word	.L311-.L345,.L548-.L345
	.half	1
	.byte	88
	.word	.L309-.L345,.L558-.L345
	.half	1
	.byte	88
	.word	.L1133-.L345,.L963-.L345
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mq_control')
	.sect	'.debug_loc'
.L946:
	.word	-1,.L369,0,.L1259-.L369
	.half	1
	.byte	101
	.word	.L280-.L369,.L943-.L369
	.half	1
	.byte	101
	.word	0,0
.L945:
	.word	-1,.L369,0,.L1259-.L369
	.half	1
	.byte	84
	.word	.L280-.L369,.L943-.L369
	.half	1
	.byte	84
	.word	0,0
.L947:
	.word	-1,.L369,.L1259-.L369,.L282-.L369
	.half	1
	.byte	82
	.word	.L949-.L369,.L1261-.L369
	.half	1
	.byte	88
	.word	.L301-.L369,.L538-.L369
	.half	1
	.byte	88
	.word	.L1263-.L369,.L1264-.L369
	.half	1
	.byte	88
	.word	.L1267-.L369,.L280-.L369
	.half	1
	.byte	88
	.word	0,0
.L951:
	.word	0,0
.L944:
	.word	-1,.L369,0,.L1259-.L369
	.half	1
	.byte	100
	.word	.L1260-.L369,.L1261-.L369
	.half	1
	.byte	111
	.word	.L301-.L369,.L538-.L369
	.half	1
	.byte	111
	.word	.L1263-.L369,.L1264-.L369
	.half	1
	.byte	111
	.word	.L1267-.L369,.L943-.L369
	.half	1
	.byte	111
	.word	.L280-.L369,.L943-.L369
	.half	1
	.byte	100
	.word	0,0
.L948:
	.word	-1,.L369,.L1269-.L369,.L285-.L369
	.half	1
	.byte	100
	.word	0,0
.L368:
	.word	-1,.L369,0,.L943-.L369
	.half	2
	.byte	138,0
	.word	0,0
.L953:
	.word	-1,.L369,.L1262-.L369,.L1261-.L369
	.half	1
	.byte	82
	.word	.L301-.L369,.L538-.L369
	.half	1
	.byte	82
	.word	.L301-.L369,.L538-.L369
	.half	1
	.byte	89
	.word	.L1263-.L369,.L1265-.L369
	.half	1
	.byte	82
	.word	.L1263-.L369,.L281-.L369
	.half	1
	.byte	89
	.word	0,0
.L957:
	.word	-1,.L369,.L1266-.L369,.L1264-.L369
	.half	1
	.byte	82
	.word	.L301-.L369,.L538-.L369
	.half	1
	.byte	82
	.word	.L301-.L369,.L538-.L369
	.half	1
	.byte	89
	.word	.L1267-.L369,.L1268-.L369
	.half	1
	.byte	82
	.word	.L1267-.L369,.L283-.L369
	.half	1
	.byte	89
	.word	0,0
.L952:
	.word	-1,.L369,.L976-.L369,.L538-.L369
	.half	1
	.byte	100
	.word	.L1263-.L369,.L1265-.L369
	.half	1
	.byte	100
	.word	0,0
.L956:
	.word	-1,.L369,.L976-.L369,.L538-.L369
	.half	1
	.byte	100
	.word	.L1267-.L369,.L1268-.L369
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mq_detach')
	.sect	'.debug_loc'
.L879:
	.word	0,0
.L876:
	.word	-1,.L355,0,.L212-.L355
	.half	1
	.byte	100
	.word	.L1176-.L355,.L1177-.L355
	.half	1
	.byte	108
	.word	.L301-.L355,.L538-.L355
	.half	1
	.byte	108
	.word	.L1179-.L355,.L1180-.L355
	.half	1
	.byte	108
	.word	.L1183-.L355,.L875-.L355
	.half	1
	.byte	108
	.word	.L1185-.L355,.L1186-.L355
	.half	1
	.byte	100
	.word	0,0
.L354:
	.word	-1,.L355,0,.L875-.L355
	.half	2
	.byte	138,0
	.word	0,0
.L881:
	.word	-1,.L355,.L1178-.L355,.L1177-.L355
	.half	1
	.byte	82
	.word	.L301-.L355,.L538-.L355
	.half	1
	.byte	82
	.word	.L301-.L355,.L538-.L355
	.half	1
	.byte	88
	.word	.L1179-.L355,.L1181-.L355
	.half	1
	.byte	82
	.word	.L1179-.L355,.L211-.L355
	.half	1
	.byte	88
	.word	0,0
.L885:
	.word	-1,.L355,.L1182-.L355,.L1180-.L355
	.half	1
	.byte	82
	.word	.L301-.L355,.L538-.L355
	.half	1
	.byte	88
	.word	.L301-.L355,.L538-.L355
	.half	1
	.byte	82
	.word	.L1183-.L355,.L213-.L355
	.half	1
	.byte	88
	.word	.L1183-.L355,.L1184-.L355
	.half	1
	.byte	82
	.word	0,0
.L880:
	.word	-1,.L355,.L976-.L355,.L538-.L355
	.half	1
	.byte	100
	.word	.L1179-.L355,.L1181-.L355
	.half	1
	.byte	100
	.word	0,0
.L884:
	.word	-1,.L355,.L976-.L355,.L538-.L355
	.half	1
	.byte	100
	.word	.L1183-.L355,.L1184-.L355
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mq_init')
	.sect	'.debug_loc'
.L865:
	.word	-1,.L353,0,.L1167-.L353
	.half	1
	.byte	86
	.word	.L295-.L353,.L543-.L353
	.half	1
	.byte	95
	.word	.L1168-.L353,.L1169-.L353
	.half	1
	.byte	95
	.word	0,0
.L867:
	.word	-1,.L353,.L1174-.L353,.L1175-.L353
	.half	1
	.byte	98
	.word	0,0
.L871:
	.word	0,0
.L874:
	.word	0,0
.L860:
	.word	-1,.L353,0,.L1167-.L353
	.half	1
	.byte	100
	.word	.L295-.L353,.L543-.L353
	.half	1
	.byte	111
	.word	.L1168-.L353,.L858-.L353
	.half	1
	.byte	111
	.word	0,0
.L863:
	.word	-1,.L353,0,.L1167-.L353
	.half	1
	.byte	84
	.word	0,0
.L862:
	.word	-1,.L353,0,.L1167-.L353
	.half	1
	.byte	102
	.word	.L295-.L353,.L543-.L353
	.half	1
	.byte	108
	.word	.L1170-.L353,.L858-.L353
	.half	1
	.byte	108
	.word	0,0
.L861:
	.word	-1,.L353,0,.L1167-.L353
	.half	1
	.byte	101
	.word	0,0
.L864:
	.word	-1,.L353,0,.L1167-.L353
	.half	1
	.byte	85
	.word	.L1171-.L353,.L1172-.L353
	.half	1
	.byte	89
	.word	0,0
.L352:
	.word	-1,.L353,0,.L858-.L353
	.half	2
	.byte	138,0
	.word	0,0
.L868:
	.word	-1,.L353,.L1173-.L353,.L858-.L353
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mq_recv')
	.sect	'.debug_loc'
.L927:
	.word	-1,.L365,0,.L1232-.L365
	.half	1
	.byte	101
	.word	.L349-.L365,.L573-.L365
	.half	1
	.byte	108
	.word	.L359-.L365,.L568-.L365
	.half	1
	.byte	108
	.word	.L367-.L365,.L533-.L365
	.half	1
	.byte	108
	.word	.L1240-.L365,.L925-.L365
	.half	1
	.byte	108
	.word	.L1253-.L365,.L1254-.L365
	.half	1
	.byte	100
	.word	0,0
.L938:
	.word	0,0
.L936:
	.word	0,0
.L942:
	.word	0,0
.L926:
	.word	-1,.L365,0,.L1232-.L365
	.half	1
	.byte	100
	.word	.L1234-.L365,.L254-.L365
	.half	1
	.byte	100
	.word	.L349-.L365,.L573-.L365
	.half	1
	.byte	111
	.word	.L359-.L365,.L568-.L365
	.half	1
	.byte	111
	.word	.L367-.L365,.L533-.L365
	.half	1
	.byte	111
	.word	.L1241-.L365,.L925-.L365
	.half	1
	.byte	111
	.word	.L1256-.L365,.L276-.L365
	.half	1
	.byte	100
	.word	.L1258-.L365,.L277-.L365
	.half	1
	.byte	100
	.word	0,0
.L932:
	.word	-1,.L365,.L1246-.L365,.L271-.L365
	.half	1
	.byte	109
	.word	0,0
.L1238:
	.word	-1,.L365,.L349-.L365,.L573-.L365
	.half	1
	.byte	98
	.word	.L359-.L365,.L568-.L365
	.half	1
	.byte	98
	.word	.L1082-.L365,.L261-.L365
	.half	1
	.byte	98
	.word	0,0
.L364:
	.word	-1,.L365,0,.L1231-.L365
	.half	2
	.byte	138,0
	.word	.L1231-.L365,.L259-.L365
	.half	2
	.byte	138,8
	.word	.L259-.L365,.L259-.L365
	.half	2
	.byte	138,0
	.word	.L259-.L365,.L925-.L365
	.half	2
	.byte	138,8
	.word	.L925-.L365,.L925-.L365
	.half	2
	.byte	138,0
	.word	0,0
.L928:
	.word	-1,.L365,0,.L1232-.L365
	.half	1
	.byte	84
	.word	.L349-.L365,.L573-.L365
	.half	1
	.byte	88
	.word	.L359-.L365,.L568-.L365
	.half	1
	.byte	88
	.word	.L367-.L365,.L533-.L365
	.half	1
	.byte	88
	.word	.L1242-.L365,.L925-.L365
	.half	1
	.byte	88
	.word	0,0
.L1239:
	.word	-1,.L365,.L349-.L365,.L573-.L365
	.half	1
	.byte	100
	.word	.L359-.L365,.L568-.L365
	.half	1
	.byte	100
	.word	.L1083-.L365,.L264-.L365
	.half	1
	.byte	100
	.word	0,0
.L931:
	.word	-1,.L365,.L1235-.L365,.L1236-.L365
	.half	1
	.byte	82
	.word	.L349-.L365,.L573-.L365
	.half	1
	.byte	90
	.word	.L359-.L365,.L568-.L365
	.half	1
	.byte	90
	.word	.L367-.L365,.L533-.L365
	.half	1
	.byte	90
	.word	.L1243-.L365,.L1244-.L365
	.half	1
	.byte	90
	.word	.L1244-.L365,.L1250-.L365
	.half	1
	.byte	82
	.word	.L1251-.L365,.L1252-.L365
	.half	1
	.byte	90
	.word	.L1252-.L365,.L941-.L365
	.half	1
	.byte	82
	.word	.L1255-.L365,.L271-.L365
	.half	1
	.byte	95
	.word	.L275-.L365,.L1257-.L365
	.half	1
	.byte	82
	.word	0,0
.L937:
	.word	0,0
.L930:
	.word	-1,.L365,.L1232-.L365,.L1233-.L365
	.half	1
	.byte	98
	.word	.L1237-.L365,.L935-.L365
	.half	1
	.byte	100
	.word	.L349-.L365,.L573-.L365
	.half	1
	.byte	109
	.word	.L359-.L365,.L568-.L365
	.half	1
	.byte	109
	.word	.L367-.L365,.L533-.L365
	.half	1
	.byte	109
	.word	.L1245-.L365,.L1246-.L365
	.half	1
	.byte	109
	.word	0,0
.L933:
	.word	-1,.L365,.L349-.L365,.L573-.L365
	.half	1
	.byte	89
	.word	.L359-.L365,.L568-.L365
	.half	1
	.byte	89
	.word	.L367-.L365,.L533-.L365
	.half	1
	.byte	89
	.word	.L1232-.L365,.L1247-.L365
	.half	1
	.byte	89
	.word	.L1247-.L365,.L1248-.L365
	.half	1
	.byte	82
	.word	.L1249-.L365,.L925-.L365
	.half	1
	.byte	89
	.word	0,0
.L929:
	.word	-1,.L365,0,.L1232-.L365
	.half	1
	.byte	85
	.word	.L349-.L365,.L573-.L365
	.half	2
	.byte	145,120
	.word	.L359-.L365,.L568-.L365
	.half	2
	.byte	145,120
	.word	.L367-.L365,.L533-.L365
	.half	2
	.byte	145,120
	.word	0,.L925-.L365
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mq_send')
	.sect	'.debug_loc'
.L889:
	.word	-1,.L361,0,.L886-.L361
	.half	1
	.byte	101
	.word	0,0
.L887:
	.word	-1,.L361,0,.L886-.L361
	.half	1
	.byte	100
	.word	0,0
.L360:
	.word	-1,.L361,0,.L886-.L361
	.half	2
	.byte	138,0
	.word	0,0
.L890:
	.word	-1,.L361,0,.L886-.L361
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mq_send_wait')
	.sect	'.debug_loc'
.L893:
	.word	-1,.L357,0,.L1188-.L357
	.half	1
	.byte	101
	.word	.L349-.L357,.L573-.L357
	.half	1
	.byte	108
	.word	.L359-.L357,.L568-.L357
	.half	1
	.byte	108
	.word	.L1196-.L357,.L1197-.L357
	.half	1
	.byte	108
	.word	.L1211-.L357,.L1212-.L357
	.half	1
	.byte	101
	.word	.L311-.L357,.L548-.L357
	.half	1
	.byte	108
	.word	.L309-.L357,.L558-.L357
	.half	1
	.byte	108
	.word	.L1214-.L357,.L891-.L357
	.half	1
	.byte	108
	.word	0,0
.L903:
	.word	0,0
.L909:
	.word	0,0
.L901:
	.word	0,0
.L915:
	.word	0,0
.L892:
	.word	-1,.L357,0,.L1188-.L357
	.half	1
	.byte	100
	.word	.L1190-.L357,.L218-.L357
	.half	1
	.byte	100
	.word	.L349-.L357,.L573-.L357
	.half	1
	.byte	111
	.word	.L359-.L357,.L568-.L357
	.half	1
	.byte	111
	.word	.L1198-.L357,.L1197-.L357
	.half	1
	.byte	111
	.word	.L311-.L357,.L548-.L357
	.half	1
	.byte	111
	.word	.L1214-.L357,.L1215-.L357
	.half	1
	.byte	111
	.word	.L309-.L357,.L997-.L357
	.half	1
	.byte	111
	.word	.L220-.L357,.L240-.L357
	.half	1
	.byte	111
	.word	0,0
.L897:
	.word	-1,.L357,.L1192-.L357,.L1193-.L357
	.half	1
	.byte	110
	.word	.L221-.L357,.L1197-.L357
	.half	1
	.byte	110
	.word	.L311-.L357,.L548-.L357
	.half	1
	.byte	110
	.word	.L309-.L357,.L558-.L357
	.half	1
	.byte	110
	.word	.L1214-.L357,.L234-.L357
	.half	1
	.byte	110
	.word	.L239-.L357,.L891-.L357
	.half	1
	.byte	110
	.word	0,0
.L910:
	.word	0,0
.L906:
	.word	-1,.L357,.L349-.L357,.L573-.L357
	.half	1
	.byte	98
	.word	.L359-.L357,.L568-.L357
	.half	1
	.byte	98
	.word	.L1199-.L357,.L224-.L357
	.half	1
	.byte	98
	.word	0,0
.L356:
	.word	-1,.L357,0,.L1187-.L357
	.half	2
	.byte	138,0
	.word	.L1187-.L357,.L216-.L357
	.half	2
	.byte	138,8
	.word	.L216-.L357,.L216-.L357
	.half	2
	.byte	138,0
	.word	.L216-.L357,.L239-.L357
	.half	2
	.byte	138,8
	.word	.L239-.L357,.L239-.L357
	.half	2
	.byte	138,0
	.word	.L239-.L357,.L891-.L357
	.half	2
	.byte	138,8
	.word	.L891-.L357,.L891-.L357
	.half	2
	.byte	138,0
	.word	0,0
.L894:
	.word	-1,.L357,0,.L1188-.L357
	.half	1
	.byte	84
	.word	.L349-.L357,.L573-.L357
	.half	1
	.byte	89
	.word	.L359-.L357,.L568-.L357
	.half	1
	.byte	89
	.word	.L1200-.L357,.L1197-.L357
	.half	1
	.byte	89
	.word	.L311-.L357,.L548-.L357
	.half	1
	.byte	89
	.word	.L309-.L357,.L558-.L357
	.half	1
	.byte	89
	.word	.L1214-.L357,.L891-.L357
	.half	1
	.byte	89
	.word	0,0
.L907:
	.word	-1,.L357,.L349-.L357,.L573-.L357
	.half	1
	.byte	100
	.word	.L359-.L357,.L568-.L357
	.half	1
	.byte	100
	.word	.L1201-.L357,.L227-.L357
	.half	1
	.byte	100
	.word	0,0
.L896:
	.word	-1,.L357,.L1191-.L357,.L222-.L357
	.half	1
	.byte	82
	.word	.L349-.L357,.L573-.L357
	.half	1
	.byte	90
	.word	.L359-.L357,.L568-.L357
	.half	1
	.byte	90
	.word	.L1202-.L357,.L1203-.L357
	.half	1
	.byte	90
	.word	.L1203-.L357,.L1208-.L357
	.half	1
	.byte	82
	.word	.L1209-.L357,.L1210-.L357
	.half	1
	.byte	90
	.word	.L1210-.L357,.L1197-.L357
	.half	1
	.byte	82
	.word	.L1213-.L357,.L1197-.L357
	.half	1
	.byte	90
	.word	.L311-.L357,.L548-.L357
	.half	1
	.byte	90
	.word	.L311-.L357,.L548-.L357
	.half	1
	.byte	82
	.word	.L309-.L357,.L558-.L357
	.half	1
	.byte	90
	.word	.L309-.L357,.L558-.L357
	.half	1
	.byte	82
	.word	.L1214-.L357,.L891-.L357
	.half	1
	.byte	90
	.word	.L1214-.L357,.L914-.L357
	.half	1
	.byte	82
	.word	.L239-.L357,.L240-.L357
	.half	1
	.byte	82
	.word	0,0
.L902:
	.word	0,0
.L899:
	.word	-1,.L357,.L1188-.L357,.L1189-.L357
	.half	1
	.byte	98
	.word	.L1194-.L357,.L1195-.L357
	.half	1
	.byte	100
	.word	.L349-.L357,.L573-.L357
	.half	1
	.byte	109
	.word	.L359-.L357,.L568-.L357
	.half	1
	.byte	109
	.word	.L1204-.L357,.L1197-.L357
	.half	1
	.byte	109
	.word	.L311-.L357,.L548-.L357
	.half	1
	.byte	109
	.word	.L309-.L357,.L558-.L357
	.half	1
	.byte	109
	.word	.L1214-.L357,.L891-.L357
	.half	1
	.byte	109
	.word	0,0
.L898:
	.word	-1,.L357,.L349-.L357,.L573-.L357
	.half	1
	.byte	88
	.word	.L359-.L357,.L568-.L357
	.half	1
	.byte	88
	.word	.L1188-.L357,.L1205-.L357
	.half	1
	.byte	88
	.word	.L1205-.L357,.L1206-.L357
	.half	1
	.byte	82
	.word	.L1207-.L357,.L1197-.L357
	.half	1
	.byte	88
	.word	.L311-.L357,.L548-.L357
	.half	1
	.byte	88
	.word	.L309-.L357,.L558-.L357
	.half	1
	.byte	88
	.word	.L1214-.L357,.L891-.L357
	.half	1
	.byte	88
	.word	0,0
.L895:
	.word	-1,.L357,0,.L1188-.L357
	.half	1
	.byte	85
	.word	.L349-.L357,.L573-.L357
	.half	2
	.byte	145,120
	.word	.L359-.L357,.L568-.L357
	.half	2
	.byte	145,120
	.word	0,.L1197-.L357
	.half	2
	.byte	145,120
	.word	.L311-.L357,.L548-.L357
	.half	2
	.byte	145,120
	.word	.L309-.L357,.L558-.L357
	.half	2
	.byte	145,120
	.word	.L1214-.L357,.L891-.L357
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mq_urgent')
	.sect	'.debug_loc'
.L918:
	.word	-1,.L363,0,.L246-.L363
	.half	1
	.byte	101
	.word	.L1220-.L363,.L1217-.L363
	.half	1
	.byte	108
	.word	.L1226-.L363,.L1227-.L363
	.half	1
	.byte	101
	.word	.L311-.L363,.L548-.L363
	.half	1
	.byte	108
	.word	.L309-.L363,.L558-.L363
	.half	1
	.byte	108
	.word	.L1229-.L363,.L916-.L363
	.half	1
	.byte	108
	.word	0,0
.L924:
	.word	0,0
.L917:
	.word	-1,.L363,0,.L246-.L363
	.half	1
	.byte	100
	.word	.L1216-.L363,.L1217-.L363
	.half	1
	.byte	111
	.word	.L311-.L363,.L548-.L363
	.half	1
	.byte	111
	.word	.L1229-.L363,.L1230-.L363
	.half	1
	.byte	111
	.word	.L309-.L363,.L997-.L363
	.half	1
	.byte	111
	.word	.L247-.L363,.L251-.L363
	.half	1
	.byte	111
	.word	0,0
.L921:
	.word	-1,.L363,.L1223-.L363,.L1217-.L363
	.half	1
	.byte	109
	.word	.L311-.L363,.L548-.L363
	.half	1
	.byte	109
	.word	.L309-.L363,.L558-.L363
	.half	1
	.byte	109
	.word	.L1229-.L363,.L916-.L363
	.half	1
	.byte	109
	.word	0,0
.L362:
	.word	-1,.L363,0,.L916-.L363
	.half	2
	.byte	138,0
	.word	0,0
.L919:
	.word	-1,.L363,0,.L246-.L363
	.half	1
	.byte	84
	.word	.L1218-.L363,.L1219-.L363
	.half	1
	.byte	95
	.word	0,0
.L920:
	.word	-1,.L363,.L1221-.L363,.L1222-.L363
	.half	1
	.byte	82
	.word	.L1224-.L363,.L1225-.L363
	.half	1
	.byte	88
	.word	.L1225-.L363,.L1217-.L363
	.half	1
	.byte	82
	.word	.L1228-.L363,.L1217-.L363
	.half	1
	.byte	88
	.word	.L311-.L363,.L548-.L363
	.half	1
	.byte	88
	.word	.L311-.L363,.L548-.L363
	.half	1
	.byte	82
	.word	.L309-.L363,.L558-.L363
	.half	1
	.byte	88
	.word	.L309-.L363,.L558-.L363
	.half	1
	.byte	82
	.word	.L1229-.L363,.L916-.L363
	.half	1
	.byte	88
	.word	.L1229-.L363,.L923-.L363
	.half	1
	.byte	82
	.word	.L250-.L363,.L251-.L363
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mutex_control')
	.sect	'.debug_loc'
.L712:
	.word	-1,.L325,0,.L709-.L325
	.half	1
	.byte	101
	.word	0,0
.L711:
	.word	-1,.L325,0,.L709-.L325
	.half	1
	.byte	84
	.word	0,0
.L710:
	.word	-1,.L325,0,.L709-.L325
	.half	1
	.byte	100
	.word	0,0
.L324:
	.word	-1,.L325,0,.L709-.L325
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mutex_detach')
	.sect	'.debug_loc'
.L678:
	.word	0,0
.L675:
	.word	-1,.L319,.L299-.L319,.L553-.L319
	.half	1
	.byte	100
	.word	.L973-.L319,.L553-.L319
	.half	1
	.byte	111
	.word	.L676-.L319,.L1010-.L319
	.half	1
	.byte	111
	.word	.L676-.L319,.L43-.L319
	.half	1
	.byte	100
	.word	.L301-.L319,.L538-.L319
	.half	1
	.byte	111
	.word	.L1012-.L319,.L674-.L319
	.half	1
	.byte	111
	.word	.L1014-.L319,.L1015-.L319
	.half	1
	.byte	100
	.word	0,0
.L318:
	.word	-1,.L319,0,.L674-.L319
	.half	2
	.byte	138,0
	.word	0,0
.L680:
	.word	-1,.L319,.L1011-.L319,.L1010-.L319
	.half	1
	.byte	82
	.word	.L301-.L319,.L538-.L319
	.half	1
	.byte	88
	.word	.L301-.L319,.L538-.L319
	.half	1
	.byte	82
	.word	.L1012-.L319,.L42-.L319
	.half	1
	.byte	88
	.word	.L1012-.L319,.L1013-.L319
	.half	1
	.byte	82
	.word	0,0
.L679:
	.word	-1,.L319,.L976-.L319,.L538-.L319
	.half	1
	.byte	100
	.word	.L1012-.L319,.L1013-.L319
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mutex_init')
	.sect	'.debug_loc'
.L669:
	.word	-1,.L315,0,.L671-.L315
	.half	1
	.byte	84
	.word	.L1008-.L315,.L671-.L315
	.half	1
	.byte	88
	.word	.L295-.L315,.L543-.L315
	.half	1
	.byte	88
	.word	.L317-.L315,.L1009-.L315
	.half	1
	.byte	88
	.word	.L672-.L315,.L665-.L315
	.half	1
	.byte	88
	.word	0,0
.L673:
	.word	0,0
.L667:
	.word	-1,.L315,0,.L671-.L315
	.half	1
	.byte	100
	.word	.L1008-.L315,.L671-.L315
	.half	1
	.byte	111
	.word	.L295-.L315,.L543-.L315
	.half	1
	.byte	111
	.word	.L317-.L315,.L1009-.L315
	.half	1
	.byte	111
	.word	.L672-.L315,.L665-.L315
	.half	1
	.byte	111
	.word	0,0
.L668:
	.word	-1,.L315,0,.L671-.L315
	.half	1
	.byte	101
	.word	0,0
.L314:
	.word	-1,.L315,0,.L665-.L315
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mutex_release')
	.sect	'.debug_loc'
.L708:
	.word	0,0
.L705:
	.word	-1,.L323,.L311-.L323,.L548-.L323
	.half	2
	.byte	145,120
	.word	0,.L706-.L323
	.half	2
	.byte	145,120
	.word	.L309-.L323,.L558-.L323
	.half	2
	.byte	145,120
	.word	.L317-.L323,.L563-.L323
	.half	2
	.byte	145,120
	.word	.L1037-.L323,.L700-.L323
	.half	2
	.byte	145,120
	.word	0,0
.L701:
	.word	-1,.L323,0,.L1030-.L323
	.half	1
	.byte	100
	.word	.L1032-.L323,.L67-.L323
	.half	1
	.byte	100
	.word	.L311-.L323,.L548-.L323
	.half	1
	.byte	111
	.word	.L1033-.L323,.L706-.L323
	.half	1
	.byte	111
	.word	.L309-.L323,.L997-.L323
	.half	1
	.byte	111
	.word	.L317-.L323,.L563-.L323
	.half	1
	.byte	111
	.word	.L72-.L323,.L70-.L323
	.half	1
	.byte	111
	.word	0,0
.L704:
	.word	-1,.L323,.L311-.L323,.L548-.L323
	.half	1
	.byte	89
	.word	.L1030-.L323,.L706-.L323
	.half	1
	.byte	89
	.word	.L309-.L323,.L558-.L323
	.half	1
	.byte	89
	.word	.L317-.L323,.L563-.L323
	.half	1
	.byte	89
	.word	.L1037-.L323,.L700-.L323
	.half	1
	.byte	89
	.word	0,0
.L322:
	.word	-1,.L323,0,.L1029-.L323
	.half	2
	.byte	138,0
	.word	.L1029-.L323,.L68-.L323
	.half	2
	.byte	138,8
	.word	.L68-.L323,.L68-.L323
	.half	2
	.byte	138,0
	.word	.L68-.L323,.L78-.L323
	.half	2
	.byte	138,8
	.word	.L78-.L323,.L78-.L323
	.half	2
	.byte	138,0
	.word	.L78-.L323,.L700-.L323
	.half	2
	.byte	138,8
	.word	.L700-.L323,.L700-.L323
	.half	2
	.byte	138,0
	.word	0,0
.L702:
	.word	-1,.L323,.L1031-.L323,.L67-.L323
	.half	1
	.byte	82
	.word	.L311-.L323,.L548-.L323
	.half	1
	.byte	88
	.word	.L1034-.L323,.L706-.L323
	.half	1
	.byte	88
	.word	.L309-.L323,.L558-.L323
	.half	1
	.byte	88
	.word	.L317-.L323,.L563-.L323
	.half	1
	.byte	88
	.word	.L1037-.L323,.L700-.L323
	.half	1
	.byte	88
	.word	0,0
.L703:
	.word	-1,.L323,.L1030-.L323,.L1031-.L323
	.half	1
	.byte	98
	.word	.L311-.L323,.L548-.L323
	.half	1
	.byte	108
	.word	.L1035-.L323,.L706-.L323
	.half	1
	.byte	108
	.word	.L1036-.L323,.L73-.L323
	.half	1
	.byte	100
	.word	.L309-.L323,.L558-.L323
	.half	1
	.byte	108
	.word	.L317-.L323,.L563-.L323
	.half	1
	.byte	108
	.word	.L1037-.L323,.L75-.L323
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_mutex_take')
	.sect	'.debug_loc'
.L689:
	.word	0,0
.L695:
	.word	0,0
.L687:
	.word	0,0
.L682:
	.word	-1,.L321,0,.L1017-.L321
	.half	1
	.byte	100
	.word	.L1019-.L321,.L45-.L321
	.half	1
	.byte	100
	.word	.L349-.L321,.L573-.L321
	.half	1
	.byte	111
	.word	.L1022-.L321,.L681-.L321
	.half	1
	.byte	111
	.word	.L1028-.L321,.L65-.L321
	.half	1
	.byte	100
	.word	0,0
.L696:
	.word	0,0
.L691:
	.word	-1,.L321,.L349-.L321,.L573-.L321
	.half	1
	.byte	98
	.word	.L1023-.L321,.L54-.L321
	.half	1
	.byte	98
	.word	0,0
.L320:
	.word	-1,.L321,0,.L1016-.L321
	.half	2
	.byte	138,0
	.word	.L1016-.L321,.L47-.L321
	.half	2
	.byte	138,8
	.word	.L47-.L321,.L47-.L321
	.half	2
	.byte	138,0
	.word	.L47-.L321,.L51-.L321
	.half	2
	.byte	138,8
	.word	.L51-.L321,.L51-.L321
	.half	2
	.byte	138,0
	.word	.L51-.L321,.L681-.L321
	.half	2
	.byte	138,8
	.word	.L681-.L321,.L681-.L321
	.half	2
	.byte	138,0
	.word	0,0
.L692:
	.word	-1,.L321,.L349-.L321,.L573-.L321
	.half	1
	.byte	100
	.word	.L1024-.L321,.L57-.L321
	.half	1
	.byte	100
	.word	0,0
.L684:
	.word	-1,.L321,.L1018-.L321,.L45-.L321
	.half	1
	.byte	82
	.word	.L349-.L321,.L573-.L321
	.half	1
	.byte	88
	.word	.L1025-.L321,.L1026-.L321
	.half	1
	.byte	88
	.word	.L1026-.L321,.L49-.L321
	.half	1
	.byte	82
	.word	.L49-.L321,.L681-.L321
	.half	1
	.byte	88
	.word	0,0
.L688:
	.word	0,0
.L685:
	.word	-1,.L321,.L1017-.L321,.L1018-.L321
	.half	1
	.byte	98
	.word	.L1020-.L321,.L1021-.L321
	.half	1
	.byte	100
	.word	.L349-.L321,.L573-.L321
	.half	1
	.byte	108
	.word	.L1027-.L321,.L681-.L321
	.half	1
	.byte	108
	.word	0,0
.L683:
	.word	-1,.L321,0,.L1017-.L321
	.half	1
	.byte	84
	.word	.L349-.L321,.L573-.L321
	.half	2
	.byte	145,120
	.word	0,.L681-.L321
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_sem_control')
	.sect	'.debug_loc'
.L657:
	.word	-1,.L313,0,.L1000-.L313
	.half	1
	.byte	101
	.word	.L1003-.L313,.L1002-.L313
	.half	1
	.byte	108
	.word	.L301-.L313,.L538-.L313
	.half	1
	.byte	108
	.word	.L1005-.L313,.L653-.L313
	.half	1
	.byte	108
	.word	.L1007-.L313,.L36-.L313
	.half	1
	.byte	95
	.word	.L36-.L313,.L653-.L313
	.half	1
	.byte	101
	.word	0,0
.L655:
	.word	-1,.L313,0,.L1000-.L313
	.half	1
	.byte	84
	.word	.L36-.L313,.L653-.L313
	.half	1
	.byte	84
	.word	0,0
.L658:
	.word	-1,.L313,.L1000-.L313,.L38-.L313
	.half	1
	.byte	82
	.word	.L660-.L313,.L1002-.L313
	.half	1
	.byte	88
	.word	.L301-.L313,.L538-.L313
	.half	1
	.byte	88
	.word	.L1005-.L313,.L36-.L313
	.half	1
	.byte	88
	.word	0,0
.L662:
	.word	0,0
.L312:
	.word	-1,.L313,0,.L653-.L313
	.half	2
	.byte	138,0
	.word	0,0
.L654:
	.word	-1,.L313,0,.L1000-.L313
	.half	1
	.byte	100
	.word	.L1001-.L313,.L1002-.L313
	.half	1
	.byte	111
	.word	.L301-.L313,.L538-.L313
	.half	1
	.byte	111
	.word	.L1005-.L313,.L653-.L313
	.half	1
	.byte	111
	.word	.L36-.L313,.L653-.L313
	.half	1
	.byte	100
	.word	0,0
.L664:
	.word	-1,.L313,.L1004-.L313,.L1002-.L313
	.half	1
	.byte	82
	.word	.L301-.L313,.L538-.L313
	.half	1
	.byte	89
	.word	.L301-.L313,.L538-.L313
	.half	1
	.byte	82
	.word	.L1005-.L313,.L37-.L313
	.half	1
	.byte	89
	.word	.L1005-.L313,.L1006-.L313
	.half	1
	.byte	82
	.word	0,0
.L663:
	.word	-1,.L313,.L976-.L313,.L538-.L313
	.half	1
	.byte	100
	.word	.L1005-.L313,.L1006-.L313
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_sem_detach')
	.sect	'.debug_loc'
.L598:
	.word	0,0
.L296:
	.word	-1,.L297,0,.L591-.L297
	.half	2
	.byte	138,0
	.word	0,0
.L592:
	.word	-1,.L297,.L299-.L297,.L553-.L297
	.half	1
	.byte	100
	.word	.L973-.L297,.L553-.L297
	.half	1
	.byte	111
	.word	.L7-.L297,.L974-.L297
	.half	1
	.byte	111
	.word	.L301-.L297,.L538-.L297
	.half	1
	.byte	111
	.word	.L977-.L297,.L591-.L297
	.half	1
	.byte	111
	.word	.L979-.L297,.L980-.L297
	.half	1
	.byte	100
	.word	0,0
.L604:
	.word	-1,.L297,.L975-.L297,.L974-.L297
	.half	1
	.byte	82
	.word	.L301-.L297,.L538-.L297
	.half	1
	.byte	88
	.word	.L301-.L297,.L538-.L297
	.half	1
	.byte	82
	.word	.L977-.L297,.L6-.L297
	.half	1
	.byte	88
	.word	.L977-.L297,.L978-.L297
	.half	1
	.byte	82
	.word	0,0
.L602:
	.word	-1,.L297,.L976-.L297,.L538-.L297
	.half	1
	.byte	100
	.word	.L977-.L297,.L978-.L297
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_sem_init')
	.sect	'.debug_loc'
.L583:
	.word	-1,.L293,0,.L585-.L293
	.half	1
	.byte	85
	.word	.L972-.L293,.L585-.L293
	.half	1
	.byte	88
	.word	.L295-.L293,.L543-.L293
	.half	1
	.byte	88
	.word	.L586-.L293,.L575-.L293
	.half	1
	.byte	88
	.word	0,0
.L588:
	.word	0,0
.L579:
	.word	-1,.L293,0,.L585-.L293
	.half	1
	.byte	101
	.word	0,0
.L292:
	.word	-1,.L293,0,.L575-.L293
	.half	2
	.byte	138,0
	.word	0,0
.L577:
	.word	-1,.L293,0,.L585-.L293
	.half	1
	.byte	100
	.word	.L971-.L293,.L585-.L293
	.half	1
	.byte	111
	.word	.L295-.L293,.L543-.L293
	.half	1
	.byte	111
	.word	.L586-.L293,.L575-.L293
	.half	1
	.byte	111
	.word	0,0
.L581:
	.word	-1,.L293,0,.L585-.L293
	.half	1
	.byte	84
	.word	.L971-.L293,.L585-.L293
	.half	1
	.byte	95
	.word	.L295-.L293,.L543-.L293
	.half	1
	.byte	95
	.word	.L586-.L293,.L575-.L293
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_sem_release')
	.sect	'.debug_loc'
.L650:
	.word	0,0
.L645:
	.word	-1,.L307,.L994-.L307,.L548-.L307
	.half	1
	.byte	88
	.word	.L309-.L307,.L558-.L307
	.half	1
	.byte	88
	.word	.L998-.L307,.L641-.L307
	.half	1
	.byte	88
	.word	0,0
.L306:
	.word	-1,.L307,0,.L641-.L307
	.half	2
	.byte	138,0
	.word	0,0
.L642:
	.word	-1,.L307,0,.L28-.L307
	.half	1
	.byte	100
	.word	.L994-.L307,.L548-.L307
	.half	1
	.byte	111
	.word	.L995-.L307,.L996-.L307
	.half	1
	.byte	111
	.word	.L309-.L307,.L997-.L307
	.half	1
	.byte	111
	.word	.L29-.L307,.L30-.L307
	.half	1
	.byte	111
	.word	0,0
.L644:
	.word	-1,.L307,.L994-.L307,.L548-.L307
	.half	1
	.byte	89
	.word	.L994-.L307,.L548-.L307
	.half	1
	.byte	82
	.word	.L309-.L307,.L558-.L307
	.half	1
	.byte	89
	.word	.L309-.L307,.L558-.L307
	.half	1
	.byte	82
	.word	.L998-.L307,.L641-.L307
	.half	1
	.byte	89
	.word	.L998-.L307,.L648-.L307
	.half	1
	.byte	82
	.word	.L29-.L307,.L999-.L307
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_sem_take')
	.sect	'.debug_loc'
.L618:
	.word	0,0
.L629:
	.word	0,0
.L614:
	.word	0,0
.L631:
	.word	0,0
.L623:
	.word	-1,.L303,.L991-.L303,.L14-.L303
	.half	1
	.byte	98
	.word	0,0
.L302:
	.word	-1,.L303,0,.L981-.L303
	.half	2
	.byte	138,0
	.word	.L981-.L303,.L12-.L303
	.half	2
	.byte	138,8
	.word	.L12-.L303,.L12-.L303
	.half	2
	.byte	138,0
	.word	.L12-.L303,.L605-.L303
	.half	2
	.byte	138,8
	.word	.L605-.L303,.L605-.L303
	.half	2
	.byte	138,0
	.word	0,0
.L606:
	.word	-1,.L303,0,.L9-.L303
	.half	1
	.byte	100
	.word	.L982-.L303,.L605-.L303
	.half	1
	.byte	109
	.word	.L993-.L303,.L25-.L303
	.half	1
	.byte	100
	.word	0,0
.L624:
	.word	-1,.L303,.L992-.L303,.L17-.L303
	.half	1
	.byte	111
	.word	0,0
.L609:
	.word	-1,.L303,.L983-.L303,.L984-.L303
	.half	1
	.byte	82
	.word	.L985-.L303,.L605-.L303
	.half	1
	.byte	88
	.word	.L10-.L303,.L986-.L303
	.half	1
	.byte	82
	.word	.L12-.L303,.L987-.L303
	.half	1
	.byte	82
	.word	0,0
.L616:
	.word	0,0
.L610:
	.word	-1,.L303,.L987-.L303,.L988-.L303
	.half	1
	.byte	98
	.word	.L989-.L303,.L11-.L303
	.half	1
	.byte	108
	.word	.L988-.L303,.L990-.L303
	.half	1
	.byte	100
	.word	0,0
.L608:
	.word	-1,.L303,0,.L605-.L303
	.half	2
	.byte	145,120
	.word	0,.L9-.L303
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('rt_sem_trytake')
	.sect	'.debug_loc'
.L304:
	.word	-1,.L305,0,.L639-.L305
	.half	2
	.byte	138,0
	.word	0,0
.L640:
	.word	-1,.L305,0,.L639-.L305
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1895:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('rt_ipc_get_highest_priority')
	.sect	'.debug_frame'
	.word	24
	.word	.L1895,.L291,.L958-.L291
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('rt_sem_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L293,.L575-.L293
	.sdecl	'.debug_frame',debug,cluster('rt_sem_detach')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L297,.L591-.L297
	.sdecl	'.debug_frame',debug,cluster('rt_sem_take')
	.sect	'.debug_frame'
	.word	52
	.word	.L1895,.L303,.L605-.L303
	.byte	4
	.word	(.L981-.L303)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L12-.L981)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L605-.L12)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('rt_sem_trytake')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L305,.L639-.L305
	.sdecl	'.debug_frame',debug,cluster('rt_sem_release')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L307,.L641-.L307
	.sdecl	'.debug_frame',debug,cluster('rt_sem_control')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L313,.L653-.L313
	.sdecl	'.debug_frame',debug,cluster('rt_mutex_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L315,.L665-.L315
	.sdecl	'.debug_frame',debug,cluster('rt_mutex_detach')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L319,.L674-.L319
	.sdecl	'.debug_frame',debug,cluster('rt_mutex_take')
	.sect	'.debug_frame'
	.word	68
	.word	.L1895,.L321,.L681-.L321
	.byte	4
	.word	(.L1016-.L321)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L47-.L1016)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L51-.L47)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L681-.L51)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('rt_mutex_release')
	.sect	'.debug_frame'
	.word	68
	.word	.L1895,.L323,.L700-.L323
	.byte	4
	.word	(.L1029-.L323)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L68-.L1029)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L78-.L68)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L700-.L78)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('rt_mutex_control')
	.sect	'.debug_frame'
	.word	24
	.word	.L1895,.L325,.L709-.L325
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('rt_event_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L327,.L713-.L327
	.sdecl	'.debug_frame',debug,cluster('rt_event_detach')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L329,.L721-.L329
	.sdecl	'.debug_frame',debug,cluster('rt_event_send')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L331,.L728-.L331
	.sdecl	'.debug_frame',debug,cluster('rt_event_recv')
	.sect	'.debug_frame'
	.word	68
	.word	.L1895,.L333,.L736-.L333
	.byte	4
	.word	(.L1058-.L333)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L104-.L1058)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L116-.L104)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L736-.L116)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('rt_event_control')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L335,.L751-.L335
	.sdecl	'.debug_frame',debug,cluster('rt_mb_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L337,.L761-.L337
	.sdecl	'.debug_frame',debug,cluster('rt_mb_detach')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L339,.L777-.L339
	.sdecl	'.debug_frame',debug,cluster('rt_mb_send_wait')
	.sect	'.debug_frame'
	.word	52
	.word	.L1895,.L341,.L791-.L341
	.byte	4
	.word	(.L1109-.L341)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L162-.L1109)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L791-.L162)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('rt_mb_send')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L343,.L788-.L343
	.sdecl	'.debug_frame',debug,cluster('rt_mb_urgent')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L345,.L963-.L345
	.sdecl	'.debug_frame',debug,cluster('rt_mb_recv')
	.sect	'.debug_frame'
	.word	52
	.word	.L1895,.L347,.L818-.L347
	.byte	4
	.word	(.L1135-.L347)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L180-.L1135)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L818-.L180)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('rt_mb_control')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L351,.L844-.L351
	.sdecl	'.debug_frame',debug,cluster('rt_mq_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L353,.L858-.L353
	.sdecl	'.debug_frame',debug,cluster('rt_mq_detach')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L355,.L875-.L355
	.sdecl	'.debug_frame',debug,cluster('rt_mq_send_wait')
	.sect	'.debug_frame'
	.word	68
	.word	.L1895,.L357,.L891-.L357
	.byte	4
	.word	(.L1187-.L357)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L216-.L1187)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L239-.L216)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L891-.L239)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('rt_mq_send')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L361,.L886-.L361
	.sdecl	'.debug_frame',debug,cluster('rt_mq_urgent')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L363,.L916-.L363
	.sdecl	'.debug_frame',debug,cluster('rt_mq_recv')
	.sect	'.debug_frame'
	.word	52
	.word	.L1895,.L365,.L925-.L365
	.byte	4
	.word	(.L1231-.L365)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L259-.L1231)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L925-.L259)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('rt_mq_control')
	.sect	'.debug_frame'
	.word	12
	.word	.L1895,.L369,.L943-.L369
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1896:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L1896,.L295,.L543-.L295
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L1896,.L299,.L553-.L299
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L1896,.L301,.L538-.L301
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L1896,.L309,.L558-.L309
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L1896,.L311,.L548-.L311
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L1896,.L317,.L563-.L317
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_9')
	.sect	'.debug_frame'
	.word	24
	.word	.L1896,.L349,.L573-.L349
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L1896,.L359,.L568-.L359
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L1896,.L367,.L533-.L367
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2654  RTM_EXPORT(rt_mq_control);
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2655  #pragma warning default
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2656  #endif /* end of RT_USING_MESSAGEQUEUE */
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2657  
; ..\0_Src\0_AppSw\Tricore\rt-thread\src\ipc.c	  2658  /**@}*/

	; Module end
