	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\.netif.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Rtl8211f -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.src ..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c'

	
$TC162
	.sdecl	'.zrodata.netif..14.cnt',data,rom
	.sect	'.zrodata.netif..14.cnt'
	.align	2
.14.cnt:	.type	object
	.size	.14.cnt,4
	.word	-268316672
	.sdecl	'.zrodata.netif..15.cnt',data,rom
	.sect	'.zrodata.netif..15.cnt'
	.align	2
.15.cnt:	.type	object
	.size	.15.cnt,4
	.word	-268308472
	.sdecl	'.zrodata.netif..16.cnt',data,rom
	.sect	'.zrodata.netif..16.cnt'
	.align	2
.16.cnt:	.type	object
	.size	.16.cnt,4
	.word	-268316160
	.sdecl	'.zrodata.netif..17.cnt',data,rom
	.sect	'.zrodata.netif..17.cnt'
	.align	2
.17.cnt:	.type	object
	.size	.17.cnt,4
	.word	-268316156
	.sdecl	'.zrodata.netif..18.cnt',data,rom
	.sect	'.zrodata.netif..18.cnt'
	.align	2
.18.cnt:	.type	object
	.size	.18.cnt,4
	.word	-268316422
	
	.sdecl	'.text.netif.low_level_init',code,cluster('low_level_init')
	.sect	'.text.netif.low_level_init'
	.align	2
	

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	     1  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	     2   * \file netif.c
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	     3   * \brief Source file of lwIP low level and netif functions
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	     4   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	     5   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	     6   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	     7   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	     8   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    10   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    11   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    13   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    16  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    17  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    19  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    20   * Permission is hereby granted, free of charge, to any person or
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    21   * organization obtaining a copy of the software and accompanying
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    24   * derivative works of the Software, and to permit third-parties to whom the
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    25   * Software is furnished to do so, all subject to the following:
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    26  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    32   * language processor.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    33  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    41  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    42   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    43   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    44  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    45  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    46   * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    47   * All rights reserved.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    48   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    49   * Redistribution and use in source and binary forms, with or without modification,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    50   * are permitted provided that the following conditions are met:
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    51   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    52   * 1. Redistributions of source code must retain the above copyright notice,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    53   *    this list of conditions and the following disclaimer.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    54   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    55   *    this list of conditions and the following disclaimer in the documentation
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    56   *    and/or other materials provided with the distribution.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    57   * 3. The name of the author may not be used to endorse or promote products
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    58   *    derived from this software without specific prior written permission.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    59   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    60   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    61   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    62   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    63   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    64   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    65   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    66   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    67   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    68   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    69   * OF SUCH DAMAGE.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    70   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    71   * This file is part of the lwIP TCP/IP stack.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    72   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    73   * Author: Adam Dunkels <adam@sics.se>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    74   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    75   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    76  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    77  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    78   * This file is a skeleton for developing Ethernet network interface
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    79   * drivers for lwIP. Add code to the low_level functions and do a
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    80   * search-and-replace for the word "ethernetif" to replace it with
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    81   * something that better describes your network interface.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    82   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    83  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    84  #include "lwip/opt.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    85  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    86  #include "lwip/def.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    87  #include "lwip/mem.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    88  #include "lwip/pbuf.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    89  #include <lwip/stats.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    90  #include <lwip/snmp.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    91  #include "netif/etharp.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    92  #include "netif/ppp/pppoe.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    93  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    94  #include "IfxGeth_Eth.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    95  #include "Ifx_Lwip.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    96  #include "Ifx_Netif.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    97  #include "IfxGeth_Phy_Rtl8211f.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    98  #include "Configuration.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	    99  #include <string.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   100  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   101  /* Define those to better describe your network interface. */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   102  #define IFNAME0 'e'
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   103  #define IFNAME1 'n'
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   104  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   105  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   106   * Helper struct to hold private data used to operate your ethernet interface.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   107   * Keeping the ethernet address of the MAC in this struct is not necessary
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   108   * as it is already kept in the struct netif.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   109   * But this is only an example, anyway...
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   110   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   111  struct ethernetif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   112  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   113      eth_addr_t *ethaddr;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   114      /* Add whatever per-interface state that is needed here. */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   115  };
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   116  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   117  /* pin configuration RTL8211F */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   118  const IfxGeth_Eth_RgmiiPins rtl8211f_pins = {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   119                                     .txClk = &ETH_TXCLK_PIN,     /* TXCLK */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   120                                     .txd0 = &ETH_TXD0_PIN,       /* TXD0 */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   121                                     .txd1 = &ETH_TXD1_PIN,       /* TXD1 */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   122                                     .txd2 = &ETH_TXD2_PIN,       /* TXD2 */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   123                                     .txd3 = &ETH_TXD3_PIN,       /* TXD3 */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   124  		                           .txCtl = &ETH_TXCTL_PIN,     /* TXCTL */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   125  		                           .rxClk = &ETH_RXCLK_PIN,     /* RXCLK */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   126                                     .rxd0 = &ETH_RXD0_PIN,       /* RXD0 */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   127  								   .rxd1 = &ETH_RXD1_PIN,       /* RXD1 */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   128  								   .rxd2 = &ETH_RXD2_PIN,       /* RXD2 */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   129  								   .rxd3 = &ETH_RXD3_PIN,       /* RXD3 */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   130  								   .rxCtl = &ETH_RXCTL_PIN,     /* RXCTL */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   131                                     .mdc = &ETH_MDC_PIN,         /* MDC */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   132                                     .mdio = &ETH_MDIO_PIN,       /* MDIO */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   133  		                           .grefClk = &ETH_GREFCLK_PIN  /* GREFCLK */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   134  };
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   135  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   136  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   137   * In this function, the hardware should be initialized.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   138   * Called from ethernetif_init().
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   139   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   140   * @param netif the already initialized lwip network interface structure
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   141   *        for this ethernetif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   142   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   143  static void low_level_init(netif_t *netif)
; Function low_level_init
.L44:
low_level_init:	.type	func
	lea	a10,[a10]-288
.L189:
	mov.aa	a12,a4
.L190:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   144  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   145  	IfxGeth_Eth *ethernetif = netif->state;
	ld.a	a13,[a12]28
.L191:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   146      int     i;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   147  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   148      /* set MAC hardware address length */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   149      netif->hwaddr_len = ETHARP_HWADDR_LEN;
	mov	d15,#6
	st.b	[a12]40,d15
.L283:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   150  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   151      /* set MAC hardware address */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   152      for (i = 0; i < ETHARP_HWADDR_LEN; i++)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   153      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   154          netif->hwaddr[i] = g_Lwip.eth_addr.addr[i];
	movh.a	a2,#@his(g_Lwip+48)
.L284:
	lea	a2,[a2]@los(g_Lwip+48)
.L285:
	lea	a15,[a12]34
.L286:
	mov.a	a4,#5
.L2:
	ld.bu	d15,[a2+]
.L287:
	st.b	[a15+],d15
	loop	a4,.L2
.L288:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   155      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   156  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   157      /* maximum transfer unit */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   158      netif->mtu = 1500;
	mov	d15,#1500
	st.h	[a12]32,d15
.L289:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   159  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   160      /* device capabilities */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   161      /* don't set NETIF_FLAG_ETHARP if this device is not an ethernet one */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   162      /* we don't set the LINK_UP flag because we don't say when it is linked */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   163      netif->flags = NETIF_FLAG_BROADCAST | NETIF_FLAG_ETHARP;
	mov	d15,#10
	st.b	[a12]41,d15
.L106:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   164  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   165      /* Do whatever else is needed to initialize interface. */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   166      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   167      	IfxGeth_Eth_Config GethConfig;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   168  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   169      	IfxGeth_Eth_initModuleConfig(&GethConfig, &MODULE_GETH);
	ld.w	d15,.14.cnt
	mov.a	a14,d15
.L290:
	mov.aa	a4,a10
.L291:
	mov.aa	a5,a14
	call	IfxGeth_Eth_initModuleConfig
.L292:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   170     		// this is our RTL8211F
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   171     		GethConfig.phyInterfaceMode = IfxGeth_PhyInterfaceMode_rgmii;
	mov	d15,#1
	st.b	[a10]4,d15
.L293:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   172          GethConfig.pins.rgmiiPins = &rtl8211f_pins;
	movh.a	a15,#@his(rtl8211f_pins)
	lea	a15,[a15]@los(rtl8211f_pins)
.L294:
	st.a	[a10]12,a15
.L295:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   173         	GethConfig.mac.lineSpeed = IfxGeth_LineSpeed_100Mbps;
	st.b	[a10]21,d15
.L296:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   174      	// MAC core configuration
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   175      	GethConfig.mac.loopbackMode = IfxGeth_LoopbackMode_disable;
	mov	d0,#0
	st.b	[a10]22,d0
.L297:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   176      	GethConfig.mac.macAddress[0] = netif->hwaddr[0];
	ld.bu	d1,[a12]34
.L298:
	st.b	[a10]23,d1
.L299:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   177      	GethConfig.mac.macAddress[1] = netif->hwaddr[1];
	ld.bu	d1,[a12]35
.L300:
	st.b	[a10]24,d1
.L301:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   178      	GethConfig.mac.macAddress[2] = netif->hwaddr[2];
	ld.bu	d1,[a12]36
.L302:
	st.b	[a10]25,d1
.L303:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   179      	GethConfig.mac.macAddress[3] = netif->hwaddr[3];
	ld.bu	d1,[a12]37
.L304:
	st.b	[a10]26,d1
.L305:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   180      	GethConfig.mac.macAddress[4] = netif->hwaddr[4];
	ld.bu	d1,[a12]38
.L306:
	st.b	[a10]27,d1
.L307:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   181      	GethConfig.mac.macAddress[5] = netif->hwaddr[5];
	ld.bu	d1,[a12]39
.L308:
	st.b	[a10]28,d1
.L309:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   182  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   183      	// MTL configuration
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   184      	GethConfig.mtl.numOfTxQueues = 1;
	st.w	[a10]32,d15
.L310:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   185      	GethConfig.mtl.numOfRxQueues = 1;
	st.w	[a10]38,d15
.L311:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   186      	GethConfig.mtl.txQueue[0].txQueueSize = IfxGeth_QueueSize_2560Bytes;
	mov	d1,#9
	st.b	[a10]45,d1
.L312:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   187      	GethConfig.mtl.txQueue[0].storeAndForward = TRUE;
	st.b	[a10]44,d15
.L313:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   188      	GethConfig.mtl.rxQueue[0].rxQueueSize = IfxGeth_QueueSize_2560Bytes;
	st.b	[a10]61,d1
.L314:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   189      	GethConfig.mtl.rxQueue[0].rxDmaChannelMap = IfxGeth_RxDmaChannel_0;
	st.b	[a10]65,d0
.L315:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   190      	GethConfig.mtl.rxQueue[0].storeAndForward = TRUE;
	st.b	[a10]60,d15
.L316:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   191  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   192      	GethConfig.dma.numOfTxChannels = 1;
	st.w	[a10]100,d15
.L317:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   193      	GethConfig.dma.numOfRxChannels = 1;
	st.w	[a10]104,d15
.L318:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   194      	GethConfig.dma.txChannel[0].channelId = IfxGeth_TxDmaChannel_0;
	st.b	[a10]112,d0
.L319:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   195      	GethConfig.dma.txChannel[0].txDescrList = (IfxGeth_TxDescrList*)&IfxGeth_Eth_txDescrList[0];
	movh.a	a15,#@his(IfxGeth_Eth_txDescrList)
	lea	a15,[a15]@los(IfxGeth_Eth_txDescrList)
.L320:
	st.a	[a10]116,a15
.L321:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   196      	GethConfig.dma.txChannel[0].txBuffer1StartAddress = (uint32 *)&channel0TxBuffer1[0][0]; // user buffer
	movh.a	a15,#@his(channel0TxBuffer1)
	lea	a15,[a15]@los(channel0TxBuffer1)
.L322:
	st.a	[a10]120,a15
.L323:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   197      	GethConfig.dma.txChannel[0].txBuffer1Size = IFXGETH_MAX_TX_BUFFER_SIZE; // used to calculate the next descriptor  buffer offset
	mov	d15,#2576
	st.h	[a10]124,d15
.L324:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   198  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   199      	GethConfig.dma.rxChannel[0].channelId = IfxGeth_RxDmaChannel_0;
	st.b	[a10]176,d0
.L325:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   200      	GethConfig.dma.rxChannel[0].rxDescrList = (IfxGeth_RxDescrList *)&IfxGeth_Eth_rxDescrList[0];
	movh.a	a15,#@his(IfxGeth_Eth_rxDescrList)
	lea	a15,[a15]@los(IfxGeth_Eth_rxDescrList)
.L326:
	st.a	[a10]180,a15
.L327:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   201      	GethConfig.dma.rxChannel[0].rxBuffer1StartAddress = (uint32 *)&channel0RxBuffer1[0][0]; // user buffer
	movh.a	a15,#@his(channel0RxBuffer1)
	lea	a15,[a15]@los(channel0RxBuffer1)
.L328:
	st.a	[a10]184,a15
.L329:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   202      	GethConfig.dma.rxChannel[0].rxBuffer1Size = IFXGETH_MAX_RX_BUFFER_SIZE; // user defined variable
	st.h	[a10]188,d15
.L110:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   203  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   204      	IfxSrc_Tos gethIsrProvider;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   205  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   206          if (CPU_WHICH_SERVICE_ETHERNET) gethIsrProvider = (IfxSrc_Tos)(CPU_WHICH_SERVICE_ETHERNET+1);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   207          else  gethIsrProvider = (IfxSrc_Tos)CPU_WHICH_SERVICE_ETHERNET;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   208  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   209      	GethConfig.dma.txInterrupt[0].channelId = IfxGeth_DmaChannel_0;
	st.b	[a10]240,d0
.L330:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   210      	GethConfig.dma.txInterrupt[0].priority = ISR_PRIORITY_GETH_TX;	// priority
	mov	d15,#100
	st.h	[a10]242,d15
.L331:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   211      	GethConfig.dma.txInterrupt[0].provider = gethIsrProvider;
	st.b	[a10]244,d0
.L332:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   212      	GethConfig.dma.rxInterrupt[0].channelId = IfxGeth_DmaChannel_0;
	st.b	[a10]264,d0
.L333:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   213      	GethConfig.dma.rxInterrupt[0].priority = ISR_PRIORITY_GETH_RX;	// priority
	mov	d15,#101
	st.h	[a10]266,d15
.L334:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   214      	GethConfig.dma.rxInterrupt[0].provider = gethIsrProvider;
	st.b	[a10]268,d0
.L335:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   215  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   216  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   217      	/* first we reset our phy manually, to make sure that the phy is ready when we init our module */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   218          {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   219          	IfxGeth_enableModule(&MODULE_GETH);
	mov.aa	a4,a14
	call	IfxGeth_enableModule
.L112:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   220          	IfxPort_setPinModeOutput(ETH_MDC_PIN.pin.port, ETH_MDC_PIN.pin.pinIndex, IfxPort_OutputMode_pushPull, ETH_MDC_PIN.select);
	movh.a	a15,#@his(IfxGeth_MDC_P12_0_OUT)
	lea	a15,[a15]@los(IfxGeth_MDC_P12_0_OUT)
.L336:
	ld.bu	d15,[a15]12
.L337:
	ld.a	a4,[a15]4
.L338:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89  /** \brief specifies LVDS-M or LVDS-H mode as declare in Register MODULE_PORT.LPCRx.LVDSM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_LvdsMode_high   = 0, /**< \brief LVDS-H Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_LvdsMode_medium = 1  /**< \brief LVDS-M Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95  } IfxPort_LvdsMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143          IfxPort_OutputMode_openDrain = 0x18U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144          IfxPort_OutputMode_none      = 0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160      IfxPort_PadDriver_ttlSpeed4            = 11, /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161      IfxPort_PadDriver_ttl3v3Speed1         = 12, /**< \brief 3.3v Pad supply speed1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162      IfxPort_PadDriver_ttl3v3Speed2         = 13, /**< \brief 3.3v Pad supply speed2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163      IfxPort_PadDriver_ttl3v3Speed3         = 14, /**< \brief 3.3v Pad supply speed3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadDriver_ttl3v3Speed4         = 15  /**< \brief 3.3v Pad supply speed4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171      IfxPort_PadSupply_3v = 0,  /**< \brief select,3.3v */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      IfxPort_PadSupply_5v = 1   /**< \brief select,5V */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  /** \brief enable analog/digital mode for port pin, as Defined in MODULE_PORTx.PDISC
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179      IfxPort_PinFunctionMode_digital = 0,  /**< \brief Pad Pn.x is enabled and can be selected for digital function */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      IfxPort_PinFunctionMode_analog  = 1   /**< \brief Pad Pn.x is enabled and can be selected for analog function */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181  } IfxPort_PinFunctionMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197  /** \brief Enable/DIsable LVDS direction TX or RX
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201      IfxPort_LvdsDirection_rx = 0,  /**< \brief LVDS direction RX */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202      IfxPort_LvdsDirection_tx = 1   /**< \brief LVDS direction TX */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203  } IfxPort_LvdsDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205  /** \brief Enable/DIsable LVDS Path.declared in MODULE_PORTx.LPCRx.TX_EN and MODULE_PORTx.LPCRx.RX_EN
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209      IfxPort_LvdsPath_enable  = 0, /**< \brief LVDS enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210      IfxPort_LvdsPath_disable = 1  /**< \brief LVDS disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211  } IfxPort_LvdsPath;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213  /** \brief Specifies whether LVDS pull down resistor must be enabled/disabled as declared in Register MODULE_PORT.LPCRx.PWDPD
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217      IfxPort_LvdsPullDown_disable = 0,  /**< \brief Disable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218      IfxPort_LvdsPullDown_enable  = 1   /**< \brief Enable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219  } IfxPort_LvdsPullDown;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221  /** \brief Specifies LVDS-Termination mode as declare in Register MODULE_PORT.LPCRx.TERM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225      IfxPort_LvdsTerminationMode_external = 0,  /**< \brief Termination Mode External */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226      IfxPort_LvdsTerminationMode_internal = 1   /**< \brief Termination Mode Internal */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227  } IfxPort_LvdsTerminationMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235  /** \brief To Configure LVDS mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239      IfxPort_LvdsMode     lvdsMode;                   /**< \brief specifies LVDS-M or LVDS-H mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240      IfxPort_ControlledBy enablePortControlled;       /**< \brief specifies whether LVDS is controlled by PORT or HSCT */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241      IfxPort_PadSupply    padSupply;                  /**< \brief specify supply voltage */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242  } IfxPort_LvdsConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286  /** \brief set analog/digital mode for pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param port Pointer to Port register space
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \param pinIndex specifies the pin index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   * \param mode set analog/digital mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395   * /code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   *     {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief set lvds mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port pointer to Port Register space
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex specifies pin index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param pinMode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param lvds config LVDS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448  IFX_EXTERN void IfxPort_setPinModeLVDS(Ifx_P *port, uint8 pinIndex, IfxPort_Mode pinMode, IfxPort_LvdsConfig *lvds);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465  /** \brief Enable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470  IFX_EXTERN void IfxPort_setPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  /** \brief Disable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474   * \param pinIndex Specifies the pin for which the mode has to be cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477  IFX_EXTERN void IfxPort_resetPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526  /** \brief Returns the module address of the selected Port module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527   * \param port Pointer to PORT module registers
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528   * \return PORT module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   563   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   564   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   565   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   566   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   567   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   568   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   569  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   571  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   572   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   573   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   574   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   575   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   578   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   579   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   580   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   581   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   582   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   583   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   585  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   590  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   593  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   594   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   595   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   596   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   599   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   600   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   601   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   602  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   604  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   605   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   606   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   607   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   609   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   610   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   611   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   613  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   615  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   616   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   617   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   618   * \param mode Selects the controller for the port pin(Tricore,EVADC,GETH,SCR etc)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   619   * 0-> normal function
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   620   * 1-> Alternate functionality(SCR pin,EVADC PDD,GETH RGMII/MII etc)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   621   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   622   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   623  IFX_EXTERN void IfxPort_modifyPinControllerSelection(Ifx_P *port, uint8 pinIndex, boolean mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   625  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   626  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   627  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   628  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   629  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   630  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   631      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   632  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   634  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   635  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   636  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   637      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   638  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   640  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   641  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   642  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   643      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   647  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   649      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   651      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   652      port->PDISC.U |= (mode << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   653      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   654  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   657  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   658  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   659      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   663  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   665      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   669  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   671      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   675  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   677      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15,#128
	ld.bu	d4,[a15]8
.L339:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89  /** \brief specifies LVDS-M or LVDS-H mode as declare in Register MODULE_PORT.LPCRx.LVDSM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_LvdsMode_high   = 0, /**< \brief LVDS-H Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_LvdsMode_medium = 1  /**< \brief LVDS-M Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95  } IfxPort_LvdsMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143          IfxPort_OutputMode_openDrain = 0x18U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144          IfxPort_OutputMode_none      = 0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160      IfxPort_PadDriver_ttlSpeed4            = 11, /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161      IfxPort_PadDriver_ttl3v3Speed1         = 12, /**< \brief 3.3v Pad supply speed1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162      IfxPort_PadDriver_ttl3v3Speed2         = 13, /**< \brief 3.3v Pad supply speed2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163      IfxPort_PadDriver_ttl3v3Speed3         = 14, /**< \brief 3.3v Pad supply speed3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadDriver_ttl3v3Speed4         = 15  /**< \brief 3.3v Pad supply speed4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171      IfxPort_PadSupply_3v = 0,  /**< \brief select,3.3v */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      IfxPort_PadSupply_5v = 1   /**< \brief select,5V */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  /** \brief enable analog/digital mode for port pin, as Defined in MODULE_PORTx.PDISC
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179      IfxPort_PinFunctionMode_digital = 0,  /**< \brief Pad Pn.x is enabled and can be selected for digital function */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      IfxPort_PinFunctionMode_analog  = 1   /**< \brief Pad Pn.x is enabled and can be selected for analog function */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181  } IfxPort_PinFunctionMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197  /** \brief Enable/DIsable LVDS direction TX or RX
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201      IfxPort_LvdsDirection_rx = 0,  /**< \brief LVDS direction RX */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202      IfxPort_LvdsDirection_tx = 1   /**< \brief LVDS direction TX */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203  } IfxPort_LvdsDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205  /** \brief Enable/DIsable LVDS Path.declared in MODULE_PORTx.LPCRx.TX_EN and MODULE_PORTx.LPCRx.RX_EN
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209      IfxPort_LvdsPath_enable  = 0, /**< \brief LVDS enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210      IfxPort_LvdsPath_disable = 1  /**< \brief LVDS disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211  } IfxPort_LvdsPath;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213  /** \brief Specifies whether LVDS pull down resistor must be enabled/disabled as declared in Register MODULE_PORT.LPCRx.PWDPD
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217      IfxPort_LvdsPullDown_disable = 0,  /**< \brief Disable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218      IfxPort_LvdsPullDown_enable  = 1   /**< \brief Enable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219  } IfxPort_LvdsPullDown;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221  /** \brief Specifies LVDS-Termination mode as declare in Register MODULE_PORT.LPCRx.TERM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225      IfxPort_LvdsTerminationMode_external = 0,  /**< \brief Termination Mode External */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226      IfxPort_LvdsTerminationMode_internal = 1   /**< \brief Termination Mode Internal */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227  } IfxPort_LvdsTerminationMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235  /** \brief To Configure LVDS mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239      IfxPort_LvdsMode     lvdsMode;                   /**< \brief specifies LVDS-M or LVDS-H mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240      IfxPort_ControlledBy enablePortControlled;       /**< \brief specifies whether LVDS is controlled by PORT or HSCT */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241      IfxPort_PadSupply    padSupply;                  /**< \brief specify supply voltage */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242  } IfxPort_LvdsConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286  /** \brief set analog/digital mode for pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param port Pointer to Port register space
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \param pinIndex specifies the pin index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   * \param mode set analog/digital mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395   * /code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   *     {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief set lvds mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port pointer to Port Register space
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex specifies pin index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param pinMode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param lvds config LVDS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448  IFX_EXTERN void IfxPort_setPinModeLVDS(Ifx_P *port, uint8 pinIndex, IfxPort_Mode pinMode, IfxPort_LvdsConfig *lvds);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465  /** \brief Enable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470  IFX_EXTERN void IfxPort_setPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  /** \brief Disable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474   * \param pinIndex Specifies the pin for which the mode has to be cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477  IFX_EXTERN void IfxPort_resetPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526  /** \brief Returns the module address of the selected Port module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527   * \param port Pointer to PORT module registers
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528   * \return PORT module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   563   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   564   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   565   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   566   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   567   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   568   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   569  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   571  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   572   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   573   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   574   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   575   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   578   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   579   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   580   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   581   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   582   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   583   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   585  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   590  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   593  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   594   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   595   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   596   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   599   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   600   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   601   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   602  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   604  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   605   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   606   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   607   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   609   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   610   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   611   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   613  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   615  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   616   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   617   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   618   * \param mode Selects the controller for the port pin(Tricore,EVADC,GETH,SCR etc)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   619   * 0-> normal function
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   620   * 1-> Alternate functionality(SCR pin,EVADC PDD,GETH RGMII/MII etc)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   621   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   622   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   623  IFX_EXTERN void IfxPort_modifyPinControllerSelection(Ifx_P *port, uint8 pinIndex, boolean mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   625  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   626  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   627  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   628  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   629  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   630  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   631      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   632  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   634  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   635  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   636  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   637      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   638  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   640  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   641  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   642  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   643      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   647  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   649      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   651      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   652      port->PDISC.U |= (mode << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   653      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   654  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   657  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   658  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   659      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   663  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   665      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   669  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   671      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   675  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   677      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	call	IfxPort_setPinMode
.L113:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   221              GETH_GPCTL.B.ALTI0  = ETH_MDIO_PIN.inSelect;
	ld.w	d15,.15.cnt
.L340:
	movh.a	a2,#@his(IfxGeth_MDIO_P12_1_INOUT+12)
.L341:
	mov.a	a15,d15
.L342:
	ld.bu	d0,[a2]@los(IfxGeth_MDIO_P12_1_INOUT+12)
.L343:
	ld.bu	d15,[a15]
.L344:
	insert	d15,d15,d0,#0,#2
	st.b	[a15],d15
.L345:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   222  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   223              while (GETH_MAC_MDIO_ADDRESS.B.GB) {};
	ld.w	d15,.16.cnt
.L346:
	mov.a	a15,d15
.L3:
	ld.bu	d15,[a15]
.L347:
	jnz.t	d15:0,.L3
.L348:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   224              // first we wait that we are able to communicate with the Phy
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   225              do
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   226              {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   227              	GETH_MAC_MDIO_ADDRESS.U = (0 << 21) | (0 << 16) | (0 << 8) | (3 << 2) | (1 << 0);
	mov	d15,#13
	ld.w	d0,.16.cnt
.L349:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   228                  while (GETH_MAC_MDIO_ADDRESS.B.GB) {};
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   229              } while (GETH_MAC_MDIO_DATA.U & 0x8000);                                                      // wait for reset to finish
	ld.w	d1,.17.cnt
.L350:
	mov.a	a2,d0
	mov.a	a4,d1
	mov.u	d0,#32768
.L4:
	st.w	[a2],d15
.L5:
	ld.bu	d1,[a15]
.L351:
	jnz.t	d1:0,.L5
.L352:
	ld.w	d1,[a4]
.L353:
	jnz.t	d1:15,.L4
.L354:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   230              // reset PHY
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   231              // put data
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   232          	GETH_MAC_MDIO_DATA.U = 0x8000;
	st.w	[a4],d0
.L355:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   233              GETH_MAC_MDIO_ADDRESS.U = (0 << 21) | (0 << 16) | (0 << 8) |  (1 << 2) | (1 << 0);
	mov	d0,#5
.L356:
	st.w	[a2],d0

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   234              while (GETH_MAC_MDIO_ADDRESS.B.GB) {};
.L6:
	ld.bu	d0,[a15]
.L357:
	jnz.t	d0:0,.L6

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   235  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   236              do
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   237              {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   238              	GETH_MAC_MDIO_ADDRESS.U = (0 << 21) | (0 << 16) | (0 << 8) | (3 << 2) | (1 << 0);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   239                  while (GETH_MAC_MDIO_ADDRESS.B.GB) {};
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   240              } while (GETH_MAC_MDIO_DATA.U & 0x8000);                                                      // wait for reset to finish
.L7:
	st.w	[a2],d15
.L8:
	ld.bu	d0,[a15]
.L358:
	jnz.t	d0:0,.L8
.L359:
	ld.w	d0,[a4]
.L360:
	jnz.t	d0:15,.L7
.L361:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   241          }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   242  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   243          // initialize the module
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   244      	IfxGeth_Eth_initModule(ethernetif, &GethConfig);
	mov.aa	a5,a10
	mov.aa	a4,a13
.L192:
	call	IfxGeth_Eth_initModule
.L193:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   245  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   246     		IfxGeth_Eth_Phy_Rtl8211f_init();
	call	IfxGeth_Eth_Phy_Rtl8211f_init
.L362:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   247  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   248      	// and enable transmitter/receiver
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   249      	IfxGeth_Eth_startTransmitters(ethernetif, 1);
	mov	d4,#1
	mov.aa	a4,a13
.L194:
	call	IfxGeth_Eth_startTransmitters
.L195:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   250      	IfxGeth_Eth_startReceivers(ethernetif, 1);
	mov	d4,#1
	mov.aa	a4,a13
.L196:
	call	IfxGeth_Eth_startReceivers
.L197:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   251  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   252      	// The ETH is ready for use now!
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   253          /* we set the LINK_UP flag if we have a valid link */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   254      	if (GETH_MAC_PHYIF_CONTROL_STATUS.B.LNKSTS == 1)
	ld.w	d15,.18.cnt
	mov.a	a2,d15
	ld.bu	d15,[a2]
.L363:
	jz.t	d15:3,.L9
.L364:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   255      	{
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   256      		// we have a valid link
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   257      		netif->flags |= NETIF_FLAG_LINK_UP;
	ld.bu	d15,[a12]41
.L365:
	or	d15,#4
	st.b	[a12]41,d15
.L366:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   258      		// we set the correct duplexMode
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   259      		if (GETH_MAC_PHYIF_CONTROL_STATUS.B.LNKMOD == 1)
	ld.bu	d15,[a2]
.L367:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   260      			IfxGeth_mac_setDuplexMode(ethernetif->gethSFR, IfxGeth_DuplexMode_fullDuplex);
	ld.a	a15,[a13]
.L368:
	jz.t	d15:0,.L10
.L124:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     2   * \file IfxGeth.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     3   * \brief GETH  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     4   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    25   * Standard layer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    27   * \defgroup IfxLld_Geth_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    28   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    29   * \defgroup IfxLld_Geth_Std_MAC_Functions MAC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    30   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    31   * \defgroup IfxLld_Geth_Std_Module_Functions Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    32   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    33   * \defgroup IfxLld_Geth_Std_MTL_Functions MTL Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    34   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    35   * \defgroup IfxLld_Geth_Std_DMA_Functions DMA Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    36   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    37   * \defgroup IfxLld_Geth_Std_DataStructures DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    38   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    39   * \defgroup IfxLld_Geth_Std_Unions Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    40   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    41   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    43  #ifndef IFXGET_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    44  #define IFXGET_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    50  #include "_Impl/IfxGeth_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    51  #include "IfxGeth_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    52  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    53  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    54  #include "IfxGeth_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    57  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    60  /** \brief Max number of TX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    62  #ifndef IFXGETH_MAX_TX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    63  #define IFXGETH_MAX_TX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    64  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    66  /** \brief Max number of RX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    67   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    68  #ifndef IFXGETH_MAX_RX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    69  #define IFXGETH_MAX_RX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    70  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    72  /** \brief Waits until GMII is busy
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    73   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    74  #define IFXGETH_PHY_WAIT_GMII_READY() while (GETH_MAC_MDIO_ADDRESS.B.GB) {}
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    77  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    80  /** \addtogroup IfxLld_Geth_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    81   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    82  /** \brief Programmable burst length of DMA channels\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    83   * Definition in DMA_CHi_TX_CONTROL.B.PBL and DMA_CHi_RX_CONTROL.B.PBL
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    84   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    87      IfxGeth_DmaBurstLength_0  = 0,   /**< \brief maximum burst length 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    88      IfxGeth_DmaBurstLength_1  = 1,   /**< \brief maximum burst length 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    89      IfxGeth_DmaBurstLength_2  = 2,   /**< \brief maximum burst length 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    90      IfxGeth_DmaBurstLength_4  = 4,   /**< \brief maximum burst length 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    91      IfxGeth_DmaBurstLength_8  = 8,   /**< \brief maximum burst length 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    92      IfxGeth_DmaBurstLength_16 = 16,  /**< \brief maximum burst length 16 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    93      IfxGeth_DmaBurstLength_32 = 32   /**< \brief maximum burst length 32 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    94  } IfxGeth_DmaBurstLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    95  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    96  /** \brief DMA channel Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    98  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   100      IfxGeth_DmaChannel_0,     /**< \brief Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   101      IfxGeth_DmaChannel_1,     /**< \brief Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   102      IfxGeth_DmaChannel_2,     /**< \brief Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   103      IfxGeth_DmaChannel_3      /**< \brief Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   104  } IfxGeth_DmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   106  /** \brief DMA interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   110      IfxGeth_DmaInterruptFlag_transmitInterrupt         = 0,  /**< \brief Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   111      IfxGeth_DmaInterruptFlag_transmitStopped           = 1,  /**< \brief Transmit Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   112      IfxGeth_DmaInterruptFlag_transmitBufferUnavailable = 2,  /**< \brief Trasmit Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   113      IfxGeth_DmaInterruptFlag_receiveInterrupt          = 6,  /**< \brief Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   114      IfxGeth_DmaInterruptFlag_receiveBufferUnavailable  = 7,  /**< \brief Receive Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   115      IfxGeth_DmaInterruptFlag_receiveStopped            = 8,  /**< \brief Receive Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   116      IfxGeth_DmaInterruptFlag_receiveWatchdogTimeout    = 9,  /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   117      IfxGeth_DmaInterruptFlag_earlyTransmitInterrupt    = 10, /**< \brief Early Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   118      IfxGeth_DmaInterruptFlag_earlyReceiveInterrupt     = 11, /**< \brief Early Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   119      IfxGeth_DmaInterruptFlag_fatalBusError             = 12, /**< \brief Fatal Bus Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   120      IfxGeth_DmaInterruptFlag_contextDescriptorError    = 13, /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   121      IfxGeth_DmaInterruptFlag_abnormalInterruptSummary  = 14, /**< \brief Abnormal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   122      IfxGeth_DmaInterruptFlag_normalInterruptSummary    = 15  /**< \brief Normal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   123  } IfxGeth_DmaInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   125  /** \brief Ethernet line speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   127  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   128  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   129      IfxGeth_LineSpeed_10Mbps,    /**< \brief 10 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   130      IfxGeth_LineSpeed_100Mbps,   /**< \brief 100 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   131      IfxGeth_LineSpeed_1000Mbps,  /**< \brief 1000 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   132      IfxGeth_LineSpeed_2500Mbps   /**< \brief 2500 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   133  } IfxGeth_LineSpeed;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   135  /** \brief MTL interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   137  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   138  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   139      IfxGeth_MtlInterruptFlag_txQueueUnderflow   = 0,  /**< \brief Transmit Queue Underflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   140      IfxGeth_MtlInterruptFlag_averageBitsPerSlot = 1,  /**< \brief Average Bits Per Slot */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   141      IfxGeth_MtlInterruptFlag_rxQueueOverflow    = 16  /**< \brief Receive Queue Overflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   142  } IfxGeth_MtlInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   144  /** \brief MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   146  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   147  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   148      IfxGeth_MtlQueue_0,     /**< \brief Mtl Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   149      IfxGeth_MtlQueue_1,     /**< \brief Mtl Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   150      IfxGeth_MtlQueue_2,     /**< \brief Mtl Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   151      IfxGeth_MtlQueue_3      /**< \brief Mtl Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   152  } IfxGeth_MtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   154  /** \brief External Phy Interface RMII Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   158      IfxGeth_PhyInterfaceMode_mii   = 0,  /**< \brief MII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   159      IfxGeth_PhyInterfaceMode_rgmii = 1,  /**< \brief RGMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   160      IfxGeth_PhyInterfaceMode_rmii  = 4   /**< \brief RMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   161  } IfxGeth_PhyInterfaceMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   163  /** \brief Preamble Length for Transmit packets\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   164   * Definition in MAC_CONFIGURATION.B.PRELEN
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   166  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   167  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   168      IfxGeth_PreambleLength_7Bytes,  /**< \brief 7 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   169      IfxGeth_PreambleLength_5Bytes,  /**< \brief 5 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   170      IfxGeth_PreambleLength_3Bytes   /**< \brief 3 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   171  } IfxGeth_PreambleLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   173  /** \brief Tx/RX Queue size in blocks of 256 bytes\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   174   * Definition in MTL_TXQi_OPERATION_MODE.B.TQS and MTL_RXQi_OPERATION_MODE.B.RQS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   178      IfxGeth_QueueSize_256Bytes,     /**< \brief 256Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   179      IfxGeth_QueueSize_512Bytes,     /**< \brief 512Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   180      IfxGeth_QueueSize_768Bytes,     /**< \brief 768Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   181      IfxGeth_QueueSize_1024Bytes,    /**< \brief 1024Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   182      IfxGeth_QueueSize_1280Bytes,    /**< \brief 1280Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   183      IfxGeth_QueueSize_1536Bytes,    /**< \brief 1536Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   184      IfxGeth_QueueSize_1792Bytes,    /**< \brief 1792Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   185      IfxGeth_QueueSize_2048Bytes,    /**< \brief 2048Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   186      IfxGeth_QueueSize_2304Bytes,    /**< \brief 2304Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   187      IfxGeth_QueueSize_2560Bytes,    /**< \brief 2560Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   188      IfxGeth_QueueSize_2816Bytes,    /**< \brief 2816Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   189      IfxGeth_QueueSize_3072Bytes,    /**< \brief 3072Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   190      IfxGeth_QueueSize_3328Bytes,    /**< \brief 3328Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   191      IfxGeth_QueueSize_3584Bytes,    /**< \brief 3584Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   192      IfxGeth_QueueSize_3840Bytes,    /**< \brief 3840Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   193      IfxGeth_QueueSize_4096Bytes,    /**< \brief 4096Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   194      IfxGeth_QueueSize_4352Bytes,    /**< \brief 4352Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   195      IfxGeth_QueueSize_4608Bytes,    /**< \brief 4608Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   196      IfxGeth_QueueSize_4864Bytes,    /**< \brief 4864Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   197      IfxGeth_QueueSize_5120Bytes,    /**< \brief 5120Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   198      IfxGeth_QueueSize_5376Bytes,    /**< \brief 5376Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   199      IfxGeth_QueueSize_5632Bytes,    /**< \brief 5632Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   200      IfxGeth_QueueSize_5888Bytes,    /**< \brief 5888Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   201      IfxGeth_QueueSize_6144Bytes,    /**< \brief 6144Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   202      IfxGeth_QueueSize_6400Bytes,    /**< \brief 6400Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   203      IfxGeth_QueueSize_6656Bytes,    /**< \brief 6656Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   204      IfxGeth_QueueSize_6912Bytes,    /**< \brief 6912Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   205      IfxGeth_QueueSize_7168Bytes,    /**< \brief 7168Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   206      IfxGeth_QueueSize_7424Bytes,    /**< \brief 7424Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   207      IfxGeth_QueueSize_7680Bytes,    /**< \brief 7680Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   208      IfxGeth_QueueSize_7936Bytes,    /**< \brief 7936Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   209      IfxGeth_QueueSize_8192Bytes     /**< \brief 8192Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   210  } IfxGeth_QueueSize;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   212  /** \brief Receive Arbitration Algorithm for Rx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   213   * Definition in MTL_OPERATION_MODE.B.RAA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   217      IfxGeth_RxArbitrationAlgorithm_sp  = 0, /**< \brief Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   218      IfxGeth_RxArbitrationAlgorithm_wsp = 1  /**< \brief Weighted Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   219  } IfxGeth_RxArbitrationAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   221  /** \brief Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   225      IfxGeth_RxDmaChannel_0,     /**< \brief Rx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   226      IfxGeth_RxDmaChannel_1,     /**< \brief Rx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   227      IfxGeth_RxDmaChannel_2,     /**< \brief Rx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   228      IfxGeth_RxDmaChannel_3      /**< \brief Rx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   229  } IfxGeth_RxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   230  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   231  /** \brief Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   235      IfxGeth_RxMtlQueue_0,     /**< \brief Rx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   236      IfxGeth_RxMtlQueue_1,     /**< \brief Rx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   237      IfxGeth_RxMtlQueue_2,     /**< \brief Rx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   238      IfxGeth_RxMtlQueue_3      /**< \brief Rx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   239  } IfxGeth_RxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   241  /** \brief Geth service request index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   242   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   243  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   244  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   245      IfxGeth_ServiceRequest_0,     /**< \brief Service Request SR0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   246      IfxGeth_ServiceRequest_1,     /**< \brief Service Request SR1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   247      IfxGeth_ServiceRequest_2,     /**< \brief Service Request SR2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   248      IfxGeth_ServiceRequest_3,     /**< \brief Service Request SR3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   249      IfxGeth_ServiceRequest_4,     /**< \brief Service Request SR4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   250      IfxGeth_ServiceRequest_5,     /**< \brief Service Request SR5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   251      IfxGeth_ServiceRequest_6,     /**< \brief Service Request SR6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   252      IfxGeth_ServiceRequest_7,     /**< \brief Service Request SR7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   253      IfxGeth_ServiceRequest_8,     /**< \brief Service Request SR8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   254      IfxGeth_ServiceRequest_9      /**< \brief Service Request SR9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   255  } IfxGeth_ServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   257  /** \brief Tx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   261      IfxGeth_TxDmaChannel_0,     /**< \brief Tx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   262      IfxGeth_TxDmaChannel_1,     /**< \brief Tx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   263      IfxGeth_TxDmaChannel_2,     /**< \brief Tx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   264      IfxGeth_TxDmaChannel_3      /**< \brief Tx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   265  } IfxGeth_TxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   267  /** \brief Tx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   268   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   269  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   270  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   271      IfxGeth_TxMtlQueue_0,     /**< \brief Tx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   272      IfxGeth_TxMtlQueue_1,     /**< \brief Tx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   273      IfxGeth_TxMtlQueue_2,     /**< \brief Tx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   274      IfxGeth_TxMtlQueue_3      /**< \brief Tx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   275  } IfxGeth_TxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   277  /** \brief Tx Scheduling Algorithm for Tx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   278   * Definition in MTL_OPERATION_MODE.B.SCHALG
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   280  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   281  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   282      IfxGeth_TxSchedulingAlgorithm_wrr = 0,  /**< \brief WRR Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   283      IfxGeth_TxSchedulingAlgorithm_sp  = 3   /**< \brief Strict Priority Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   284  } IfxGeth_TxSchedulingAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   288  /** \brief Duplex Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   289   * Definintion in MAC_CONFIGURATION.B.DM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   291  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   292  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   293      IfxGeth_DuplexMode_halfDuplex,  /**< \brief Half Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   294      IfxGeth_DuplexMode_fullDuplex   /**< \brief Full Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   295  } IfxGeth_DuplexMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   297  /** \brief Loopback Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   298   * Definition in MAC_CONFIGURATION.B.LM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   302      IfxGeth_LoopbackMode_disable,  /**< \brief Disable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   303      IfxGeth_LoopbackMode_enable    /**< \brief Enable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   304  } IfxGeth_LoopbackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   306  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   307  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   308  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   310  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   311   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   312  /** \brief Bit Fields of RDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   314  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   316      uint32 RTSL : 32;     /**< \brief Receive Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   317  } IfxGeth_RxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   319  /** \brief Bit Fields of RDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   321  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   323      uint32 RTSH : 32;     /**< \brief Receive Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   324  } IfxGeth_RxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   326  /** \brief Bit Fields of RDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   328  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   330      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   331  } IfxGeth_RxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   333  /** \brief Bit Fields of RDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   334   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   335  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   337      uint32 reserved_0 : 29;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   338      uint32 DE : 1;              /**< \brief Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   339      uint32 CTXT : 1;            /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   340      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   341  } IfxGeth_RxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   343  /** \brief Bit Fields of RDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   344   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   345  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   346  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   347      uint32 BUF1AP : 32;     /**< \brief Header or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   348  } IfxGeth_RxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   349  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   350  /** \brief Bit Fields of RDES0 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   352  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   354      uint32 OVT : 16;     /**< \brief Outer VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   355      uint32 IVT : 16;     /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   356  } IfxGeth_RxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   358  /** \brief Bit Fields of RDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   359   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   360  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   361  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   362      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   363  } IfxGeth_RxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   365  /** \brief Bit Fields of RDES1 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   367  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   369      uint32 PT : 3;       /**< \brief Payload Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   370      uint32 IPHE : 1;     /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   371      uint32 IP4 : 1;      /**< \brief IPV4 Header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   372      uint32 IP6 : 1;      /**< \brief IPv6 header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   373      uint32 IPCB : 1;     /**< \brief IP Checksum Bypassed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   374      uint32 IPCE : 1;     /**< \brief IP Payload Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   375      uint32 PMT : 4;      /**< \brief PTP Message Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   376      uint32 PFT : 1;      /**< \brief PTP Packet Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   377      uint32 PV : 1;       /**< \brief PTP Version */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   378      uint32 TSA : 1;      /**< \brief Timestamp Available */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   379      uint32 TD : 1;       /**< \brief Timestamp Dropped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   380      uint32 OPC : 16;     /**< \brief OAM Sub-Type Code, or MAC Control Packet opcode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   381  } IfxGeth_RxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   383  /** \brief Bit Fields of RDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   384   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   385  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   386  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   387      uint32 BUF2AP : 32;     /**< \brief Buffer 2 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   388  } IfxGeth_RxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   390  /** \brief Bit Fields of RDES2 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   392  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   394      uint32 HL : 10;             /**< \brief L3/L4 Header Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   395      uint32 ARPNR : 1;           /**< \brief ARP Reply Not Generated */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   396      uint32 reserved_11 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   397      uint32 ITS : 1;             /**< \brief Inner VLAN Tag Filter Status (ITS) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   398      uint32 OTS : 1;             /**< \brief VLAN Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   399      uint32 SAF : 1;             /**< \brief SA Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   400      uint32 DAF : 1;             /**< \brief Destination Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   401      uint32 HF : 1;              /**< \brief Hash Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   402      uint32 MADRM : 8;           /**< \brief MAC Address Match or Hash Value */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   403      uint32 L3FM : 1;            /**< \brief Layer 3 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   404      uint32 L4FM : 1;            /**< \brief Layer 4 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   405      uint32 L3L4FM : 3;          /**< \brief Layer 3 and Layer 4 Filter Number Matched */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   406  } IfxGeth_RxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   408  /** \brief Bit Fields of RDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   409   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   410  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   412      uint32 reserved_0 : 24;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   413      uint32 BUF1V : 1;           /**< \brief Buffer 1 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   414      uint32 BUF2V : 1;           /**< \brief Buffer 2 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   415      uint32 reserved_27 : 4;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   416      uint32 IOC : 1;             /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   417      uint32 OWN : 1;             /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   418  } IfxGeth_RxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   420  /** \brief Bit Fields of RDES3 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   422  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   424      uint32 PL : 15;      /**< \brief Packet Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   425      uint32 ES : 1;       /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   426      uint32 LT : 3;       /**< \brief Length/Type Field */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   427      uint32 DE : 1;       /**< \brief Dribble Bit Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   428      uint32 RE : 1;       /**< \brief Receive Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   429      uint32 OE : 1;       /**< \brief Overflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   430      uint32 RWT : 1;      /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   431      uint32 GP : 1;       /**< \brief Giant Packet */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   432      uint32 CE : 1;       /**< \brief CRC Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   433      uint32 RS0V : 1;     /**< \brief Receive Status RDES0 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   434      uint32 RS1V : 1;     /**< \brief Receive Status RDES1 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   435      uint32 RS2V : 1;     /**< \brief Receive Status RDES2 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   436      uint32 LD : 1;       /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   437      uint32 FD : 1;       /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   438      uint32 CTXT : 1;     /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   439      uint32 OWN : 1;      /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   440  } IfxGeth_RxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   442  /** \brief Bit Fields of TDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   443   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   444  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   445  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   446      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   447  } IfxGeth_TxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   448  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   449  /** \brief Bit Fields of TDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   450   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   451  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   452  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   453      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   454  } IfxGeth_TxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   456  /** \brief Bit Fields of TDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   458  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   460      uint32 MSS : 14;            /**< \brief Maximum Segment Size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   461      uint32 reserved_14 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   462      uint32 IVT : 16;            /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   463  } IfxGeth_TxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   465  /** \brief Bit Fields of TDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   466   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   467  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   468  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   469      uint32 VT : 16;             /**< \brief VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   470      uint32 VLTV : 1;            /**< \brief VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   471      uint32 IVLTV : 1;           /**< \brief Inner VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   472      uint32 IVTIR : 2;           /**< \brief Inner VLAN Tag Insert or Replace */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   473      uint32 reserved_20 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   474      uint32 CDE : 1;             /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   475      uint32 reserved_24 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   476      uint32 TCMSSV : 1;          /**< \brief One-Step Timestamp Correction Input or MSS Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   477      uint32 OSTC : 1;            /**< \brief One-Step Timestamp Correction Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   478      uint32 reserved_28 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   479      uint32 CTXT : 1;            /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   480      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   481  } IfxGeth_TxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   483  /** \brief Bit Fields of TDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   484   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   485  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   486  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   487      uint32 BUF1AP : 32;     /**< \brief Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   488  } IfxGeth_TxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   490  /** \brief Bit Fields of TDES0 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   491   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   492  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   493  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   494      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   495  } IfxGeth_TxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   496  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   497  /** \brief Bit Fields of TDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   499  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   500  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   501      uint32 BUF2AP : 32;     /**< \brief Buffer 2 or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   502  } IfxGeth_TxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   503  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   504  /** \brief Bit Fields of TDES1 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   505   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   506  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   507  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   508      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   509  } IfxGeth_TxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   511  /** \brief Bit Fields of TDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   512   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   513  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   514  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   515      uint32 B1L : 14;          /**< \brief Header Length or Buffer 1 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   516      uint32 VTIR : 2;          /**< \brief VLAN Tag Insertion or Replacement */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   517      uint32 B2L : 14;          /**< \brief Buffer 2 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   518      uint32 TTSE_TMWD : 1;     /**< \brief Transmit Timestamp Enable or External TSO Memory Write Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   519      uint32 IOC : 1;           /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   520  } IfxGeth_TxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   522  /** \brief Bit Fields of TDES2 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   524  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   526      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   527  } IfxGeth_TxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   529  /** \brief Bit Fields of TDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   530   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   531  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   532  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   533      uint32 FL_TPL : 15;         /**< \brief Packet Length or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   534      uint32 TPL : 1;             /**< \brief Reserved or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   535      uint32 CIC_TPL : 2;         /**< \brief Checksum Insertion Control or TCP Payload LengthThese bits control the checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   536      uint32 TSE : 1;             /**< \brief TCP Segmentation Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   537      uint32 SLOTNUM_THL : 4;     /**< \brief SLOTNUM: Slot Number Control Bits in AV Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   538      uint32 SAIC : 3;            /**< \brief SA Insertion Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   539      uint32 CPC : 2;             /**< \brief CRC Pad Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   540      uint32 LD : 1;              /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   541      uint32 FD : 1;              /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   542      uint32 CTXT : 1;            /**< \brief Context TypeThis bit should be set to 1'b0 for normal descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   543      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   544  } IfxGeth_TxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   546  /** \brief Bit Fields of TDES3 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   548  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   550      uint32 IHE : 1;              /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   551      uint32 DB : 1;               /**< \brief Deferred Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   552      uint32 UF : 1;               /**< \brief Underflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   553      uint32 ED : 1;               /**< \brief Excessive Deferral */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   554      uint32 CC : 4;               /**< \brief Collision Count */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   555      uint32 EC : 1;               /**< \brief Excessive Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   556      uint32 LC : 1;               /**< \brief Late Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   557      uint32 NC : 1;               /**< \brief No Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   558      uint32 LOC : 1;              /**< \brief Loss of Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   559      uint32 PCE : 1;              /**< \brief Payload Checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   560      uint32 FF : 1;               /**< \brief Packet Flushed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   561      uint32 JT : 1;               /**< \brief Jabber Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   562      uint32 ES : 1;               /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   563      uint32 reserved_16 : 1;      /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   564      uint32 TTSS : 1;             /**< \brief Tx Timestamp Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   565      uint32 reserved_18 : 10;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   566      uint32 LD : 1;               /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   567      uint32 FD : 1;               /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   568      uint32 CTXT : 1;             /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   569      uint32 OWN : 1;              /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   570  } IfxGeth_TxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   572  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   574  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   575   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   576  /** \brief RDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   577   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   578  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   580      IfxGeth_RxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   581      IfxGeth_RxDescr0_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   582      IfxGeth_RxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   583      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   584  } IfxGeth_RxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   586  /** \brief RDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   588  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   589  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   590      IfxGeth_RxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   591      IfxGeth_RxDescr1_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   592      IfxGeth_RxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   593      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   594  } IfxGeth_RxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   596  /** \brief RDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   597   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   598  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   599  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   600      IfxGeth_RxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   601      IfxGeth_RxDescr2_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   602      IfxGeth_RxContextDescr2_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   603      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   604  } IfxGeth_RxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   605  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   606  /** \brief RDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   607   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   608  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   610      IfxGeth_RxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   611      IfxGeth_RxDescr3_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   612      IfxGeth_RxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   613      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   614  } IfxGeth_RxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   616  /** \brief TDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   617   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   618  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   619  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   620      IfxGeth_TxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   621      IfxGeth_TxDescr0_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   622      IfxGeth_TxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   623      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   624  } IfxGeth_TxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   626  /** \brief TDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   628  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   630      IfxGeth_TxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   631      IfxGeth_TxDescr1_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   632      IfxGeth_TxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   633      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   634  } IfxGeth_TxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   636  /** \brief TDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   637   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   638  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   640      IfxGeth_TxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   641      IfxGeth_TxDescr2_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   642      IfxGeth_TxContextDescr2_Bits C;       /**< \brief COntext Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   643      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   644  } IfxGeth_TxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   646  /** \brief TDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   647   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   648  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   649  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   650      IfxGeth_TxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   651      IfxGeth_TxDescr3_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   652      IfxGeth_TxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   653      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   654  } IfxGeth_TxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   656  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   657  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   658  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   659   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   660  /** \brief Rx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   661   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   662  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   663  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   664      IfxGeth_RxDescr0 RDES0;       /**< \brief Rx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   665      IfxGeth_RxDescr1 RDES1;       /**< \brief Rx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   666      IfxGeth_RxDescr2 RDES2;       /**< \brief Rx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   667      IfxGeth_RxDescr3 RDES3;       /**< \brief Rx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   668  } IfxGeth_RxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   670  /** \brief Tx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   671   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   672  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   673  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   674      IfxGeth_TxDescr0 TDES0;       /**< \brief Tx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   675      IfxGeth_TxDescr1 TDES1;       /**< \brief Tx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   676      IfxGeth_TxDescr2 TDES2;       /**< \brief Tx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   677      IfxGeth_TxDescr3 TDES3;       /**< \brief Tx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   678  } IfxGeth_TxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   680  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   681  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   682  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   683   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   684  /** \brief Rx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   685   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   686  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   687  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   688      volatile IfxGeth_RxDescr descr[IFXGETH_MAX_RX_DESCRIPTORS];       /**< \brief list of RX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   689  } IfxGeth_RxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   691  /** \brief Tx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   692   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   693  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   694  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   695      volatile IfxGeth_TxDescr descr[IFXGETH_MAX_TX_DESCRIPTORS];       /**< \brief list of TX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   696  } IfxGeth_TxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   697  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   698  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   700  /** \addtogroup IfxLld_Geth_Std_MAC_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   701   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   703  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   704  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   705  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   706  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   707  /** \brief Disables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   708   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   709   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   710   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   711  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   713  /** \brief Disables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   714   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   715   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   716   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   717  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   719  /** \brief Enables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   720   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   721   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   722   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   723  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   725  /** \brief Enables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   726   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   727   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   728   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   729  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   731  /** \brief Enables / Disables Passing of All Multicast packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   732   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   733   * \param enabled Pass All Multicast enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   734   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   735   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   736  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   737  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   738  /** \brief Enables / Disables CRC Checking for Received Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   739   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   740   * \param enabled CRC Checking for Received Packets enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   741   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   742   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   743  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   745  /** \brief Enables/Disables the Automatic Pad or CRC Stripping for frames less than 1536 bytes and \n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   746   *     CRC stripping for Type packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   747   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   748   * \param acsEnabled Automatic Pad or CRC Stripping enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   749   * \param cstEnabled CRC Stripping for Type packets enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   750   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   751   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   752  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   754  /** \brief Sets the Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   755   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   756   * \param mode Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   757   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   758   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   759  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   761  /** \brief Sets the Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   762   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   763   * \param length Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   764   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   765   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   766  IFX_INLINE void IfxGeth_mac_setPreambleLength(Ifx_GETH *gethSFR, IfxGeth_PreambleLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   768  /** \brief Enables / Disables Promiscuous Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   769   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   770   * \param enabled Promiscuous Mode enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   771   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   772   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   773  IFX_INLINE void IfxGeth_mac_setPromiscuousMode(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   775  /** \brief Set the priorities for Rx queues for mapping tagged packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   776   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   777   * \param channel Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   778   * \param priorities Rx queue priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   779   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   780   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   781  IFX_INLINE void IfxGeth_mac_setVlanPriorityQueueRouting(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint8 priorities);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   782  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   783  /** \brief Enable / Disable Queue Insertion
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   784   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   785   * \param enable config parameter TRUE: enabled/ FALSE: disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   786   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   787   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   788  IFX_INLINE void IfxGeth_mac_setQueueVlanInsertion(Ifx_GETH *gethSFR, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   789  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   790  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   791  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   792  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   793  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   794  /** \brief Sets the Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   795   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   796   * \param speed Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   797   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   798   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   799  IFX_EXTERN void IfxGeth_mac_setLineSpeed(Ifx_GETH *gethSFR, IfxGeth_LineSpeed speed);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   801  /** \brief Sets the MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   802   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   803   * \param macAddress MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   804   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   805   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   806  IFX_EXTERN void IfxGeth_mac_setMacAddress(Ifx_GETH *gethSFR, uint8 *macAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   807  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   808  /** \brief Writes to Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   809   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   810   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   811   * \param vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   812   * \return TRUE if write was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   813   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   814  IFX_EXTERN boolean IfxGeth_mac_writeQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   816  /** \brief Reads from Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   817   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   818   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   819   * \param const vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   820   * \return TRUE if read was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   821   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   822  IFX_EXTERN boolean IfxGeth_mac_readQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 *const vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   823  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   824  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   825  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   826  /** \addtogroup IfxLld_Geth_Std_Module_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   827   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   829  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   830  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   831  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   833  /** \brief Returns the status of whether clock for GETH module is enabled or diabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   834   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   835   * \return Status:\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   836   * TRUE : if module is enabled\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   837   * FALSE : if module is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   838   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   839  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   841  /** \brief Sets the External Phy Interface mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   842   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   843   * \param mode PHY Interface Mode (MII/RGMII/RMII)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   844   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   845   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   846  IFX_INLINE void IfxGeth_setPhyInterfaceMode(Ifx_GETH *gethSFR, IfxGeth_PhyInterfaceMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   847  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   848  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   849  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   850  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   851  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   852  /** \brief Disables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   853   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   854   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   855   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   856  IFX_EXTERN void IfxGeth_disableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   858  /** \brief Enables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   859   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   860   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   861   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   862  IFX_EXTERN void IfxGeth_enableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   863  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   864  /** \brief Returns the Src Pointer of the selected GETH service request node
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   865   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   866   * \param serviceRequest Service Request number
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   867   * \return pointer to Src register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   868   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   869  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGeth_getSrcPointer(Ifx_GETH *gethSFR, IfxGeth_ServiceRequest serviceRequest);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   870  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   871  /** \brief resets Ethernet kernel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   872   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   873   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   874   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   875  IFX_EXTERN void IfxGeth_resetModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   876  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   877  /** \brief API to get the resource index of the GETH specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   878   * \param geth Pointer to Geth register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   879   * \return geth resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   881  IFX_EXTERN IfxGeth_Index IfxGeth_getIndex(Ifx_GETH *geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   883  /** \brief Get the address of the specified GETH resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   884   * \param geth Module index of the GETH
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   885   * \return GETH module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   887  IFX_EXTERN Ifx_GETH *IfxGeth_getAddress(IfxGeth_Index geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   889  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   890  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   891  /** \addtogroup IfxLld_Geth_Std_MTL_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   892   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   894  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   895  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   896  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   897  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   898  /** \brief Enables the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   899   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   900   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   901   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   902   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   903  IFX_INLINE void IfxGeth_mtl_enableRxQueue(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   904  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   905  /** \brief sets the Rx Arbitration algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   906   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   907   * \param arbitrationAlgorithm Rx Arbitration Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   908   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   909   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   910  IFX_INLINE void IfxGeth_mtl_setRxArbitrationAlgorithm(Ifx_GETH *gethSFR, IfxGeth_RxArbitrationAlgorithm arbitrationAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   911  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   912  /** \brief Sets the selected DMA Channel mapping for the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   913   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   914   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   915   * \param dmaChannel DMA channel for selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   916   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   917   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   918  IFX_INLINE void IfxGeth_mtl_setRxQueueDmaChannelMapping(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_RxDmaChannel dmaChannel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   920  /** \brief Sets the selected Rx Queue for DA based DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   921   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   922   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   923   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   924   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   925   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   926  IFX_INLINE void IfxGeth_mtl_setRxQueueForDaBasedDmaChannel(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   928  /** \brief sets the Tx Scheduling algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   929   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   930   * \param schedulingAlgorithm Tx Scheduling Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   931   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   932   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   933  IFX_INLINE void IfxGeth_mtl_setTxSchedulingAlgorithm(Ifx_GETH *gethSFR, IfxGeth_TxSchedulingAlgorithm schedulingAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   934  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   935  /** \brief Enable and set queue ID to route packets failing unicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   936   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   937   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   938   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   939   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   940  IFX_INLINE void IfxGeth_mtl_enableUnicastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   941  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   942  /** \brief Disable queuing of packets failing unicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   943   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   944   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   945   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   946  IFX_INLINE void IfxGeth_mtl_disableUnicastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   947  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   948  /** \brief Enable and set queue ID to route packets failing multicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   949   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   950   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   951   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   952   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   953  IFX_INLINE void IfxGeth_mtl_enableMulticastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   954  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   955  /** \brief Disable queuing of packets failing multicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   956   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   957   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   958   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   959  IFX_INLINE void IfxGeth_mtl_disableMulticastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   961  /** \brief Enable and set queue ID to route packets failing VLAN tag filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   962   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   963   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   964   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   965   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   966  IFX_INLINE void IfxGeth_mtl_enableVlanFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   967  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   968  /** \brief Disable queuing of packets failing VLAN tag filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   969   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   970   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   971   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   972  IFX_INLINE void IfxGeth_mtl_disableVlanFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   974  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   975  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   976  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   977  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   978  /** \brief Clears all the Mtl interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   979   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   980   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   981   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   982   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   983  IFX_EXTERN void IfxGeth_mtl_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   984  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   985  /** \brief Clears the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   986   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   987   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   988   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   989   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   990   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   991  IFX_EXTERN void IfxGeth_mtl_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   992  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   993  /** \brief Disables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   994   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   995   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   996   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   997   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   998   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   999  IFX_EXTERN void IfxGeth_mtl_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1001  /** \brief Enables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1002   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1003   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1004   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1005   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1007  IFX_EXTERN void IfxGeth_mtl_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1009  /** \brief Enables the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1010   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1011   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1012   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1013   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1014  IFX_EXTERN void IfxGeth_mtl_enableTxQueue(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1016  /** \brief Returns the status of selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1017   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1018   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1019   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1020   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1021   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1022   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1023  IFX_EXTERN boolean IfxGeth_mtl_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1024  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1025  /** \brief Sets the Receive Forward Error Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1026   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1027   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1028   * \param enabled Enable/Disable Receive Forward Error Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1029   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1031  IFX_EXTERN void IfxGeth_mtl_setRxForwardErrorPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1033  /** \brief Sets the Receive Forward Undersized Good Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1034   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1035   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1036   * \param enabled Enable/Disable Receive Forward Undersized Good Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1037   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1038   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1039  IFX_EXTERN void IfxGeth_mtl_setRxForwardUndersizedGoodPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1040  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1041  /** \brief Sets the size of the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1042   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1043   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1044   * \param queueSize Rx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1045   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1046   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1047  IFX_EXTERN void IfxGeth_mtl_setRxQueueSize(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1048  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1049  /** \brief Sets the Receive Store And Forward for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1050   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1051   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1052   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1053   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1054   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1055  IFX_EXTERN void IfxGeth_mtl_setRxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1056  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1057  /** \brief Sets the size of the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1058   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1059   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1060   * \param queueSize Tx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1061   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1062   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1063  IFX_EXTERN void IfxGeth_mtl_setTxQueueSize(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1065  /** \brief Sets the Transmit Store And Forward for teh selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1066   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1067   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1068   * \param enabled Enable/Disable Transmit Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1069   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1070   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1071  IFX_EXTERN void IfxGeth_mtl_setTxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1072  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1073  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1074  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1075  /** \addtogroup IfxLld_Geth_Std_DMA_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1076   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1077  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1078  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1079  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1080  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1081  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1082  /** \brief Applies a software reset of MAC and DMA controller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1083   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1084   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1085   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1086  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1087  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1088  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1089   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1090   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1091   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1092   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1093  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1094  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1095  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1096   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1097   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1098   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1099   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1101  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1102  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1103  /** \brief Disables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1104   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1105   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1106   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1107   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1108   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1109  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1110  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1111  /** \brief Enables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1112   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1113   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1114   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1115   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1116   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1117  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1118  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1119  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1120   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1121   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1122   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1123   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1124   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1125   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1126  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1127  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1128  /** \brief Wiats until software reset of MAC and DMA controller is done or until timout.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1129   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1130   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1131  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1132  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1133  /** \brief Enables/Disables Address aligned beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1134   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1135   * \param enabled Enable/Disable Address Aligned Beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1136   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1137   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1138  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1139  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1140  /** \brief Enables/Disables Fixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1141   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1142   * \param enabled Enable/Disable Fixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1144   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1145  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1146  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1147  /** \brief Enables/Disables Mixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1148   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1149   * \param enabled Enable/Disable Mixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1151   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1152  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1154  /** \brief sets the size of the rx buffers in descriptors for selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1155   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1156   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1157   * \param size Rx Buffers size (applies for both buffers)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1159   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1160  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1161  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1162  /** \brief sets the base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1163   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1164   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1165   * \param address base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1166   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1167   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1168  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1169  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1170  /** \brief sets the Length of the Rx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1171   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1172   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1173   * \param length Length of the ring (no of total Rx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1174   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1176  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1177  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1178  /** \brief sets the address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1179   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1180   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1181   * \param address address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1182   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1183   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1184  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1185  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1186  /** \brief sets the programmable burst length of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1187   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1188   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1189   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1190   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1191   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1192  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1193  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1194  /** \brief sets the base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1195   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1196   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1197   * \param address base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1198   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1199   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1200  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1201  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1202  /** \brief sets the Length of the Tx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1203   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1204   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1205   * \param length Length of the ring (no of total Tx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1206   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1207   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1208  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1209  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1210  /** \brief sets the address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1211   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1212   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1213   * \param address address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1214   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1215   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1216  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1217  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1218  /** \brief sets the programmable burst length of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1219   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1220   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1221   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1222   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1223   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1224  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1225  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1226  /** \brief starts the receiver of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1227   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1228   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1229   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1230   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1231  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1232  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1233  /** \brief starts the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1234   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1235   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1236   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1237   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1238  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1239  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1240  /** \brief Stops the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1241   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1242   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1244   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1245  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1246  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1247  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1248  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1249  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1251  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1252  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1253  /** \brief Enables/Disables the MAC operation in the loopback mode at GMII or MII
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1254   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1255   * \param mode Loopback Mode Enable / Disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1257   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1258  IFX_INLINE void IfxGeth_mac_setLoopbackMode(Ifx_GETH *gethSFR, IfxGeth_LoopbackMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1259  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1260  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1261  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1262  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1263  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1264  /** \brief Reads a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1265   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1266   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1267   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1268   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1269   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1270  IFX_EXTERN void IfxGeth_phy_Clause22_readMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1271  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1272  /** \brief Writes to a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1273   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1274   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1275   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1277   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1278  IFX_EXTERN void IfxGeth_Phy_Clause22_writeMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1279  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1280  /** \brief Reads a MDIO register of Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1281   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1282   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1283   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1284   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1285   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1286   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1287  IFX_EXTERN void IfxGeth_phy_Clause45_readMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1288  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1289  /** \brief Writes to a MDIO register for Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1290   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1291   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1292   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1293   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1294   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1295   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1296  IFX_EXTERN void IfxGeth_Phy_Clause45_writeMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1297  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1298  /** \brief Sets the maximum size of the packet
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1299   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1300   * \param maxPacketSize Minimum size of the frame beyond which giant packet status is set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1301   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1302   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1303  IFX_EXTERN void IfxGeth_mac_setMaxPacketSize(Ifx_GETH *gethSFR, uint16 maxPacketSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1304  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1305  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1306  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1307  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1308  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1309  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1310  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1311      gethSFR->DMA_MODE.B.SWR = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1312  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1313  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1314  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1315  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1316  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1317      gethSFR->DMA_CH[channelId].STATUS.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1318  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1319  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1320  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1321  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1323      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1324      gethSFR->DMA_CH[channelId].STATUS.U = value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1325  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1326  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1327  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1328  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1330      uint32 value = ~(1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1331      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U &= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1332  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1333  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1334  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1335  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1337      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1338      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U |= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1339  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1340  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1341  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1342  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1343  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1344      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1345      return gethSFR->DMA_CH[channelId].STATUS.U & (Ifx_UReg_32Bit)value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1346  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1347  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1348  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1349  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1350  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1351      return gethSFR->DMA_MODE.B.SWR == 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1352  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1353  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1354  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1355  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1356  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1357      gethSFR->DMA_SYSBUS_MODE.B.AAL = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1358  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1359  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1360  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1361  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1362  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1363      gethSFR->DMA_SYSBUS_MODE.B.FB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1364  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1365  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1366  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1367  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1369      gethSFR->DMA_SYSBUS_MODE.B.MB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1370  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1371  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1372  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1373  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1374  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1375      /* [RBSZ_13_Y:RBSZ_X_0] represents the size of the Rx buffer*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1376      gethSFR->DMA_CH[channel].RX_CONTROL.B.RBSZ_13_Y = (uint32)((size >> 2) & IFX_GETH_DMA_CH_RX_CONTROL_RBSZ_13_Y_MSK);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1377  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1378  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1379  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1380  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1381  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1382      gethSFR->DMA_CH[channel].RXDESC_LIST_ADDRESS.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1383  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1384  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1385  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1386  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1387  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1388      gethSFR->DMA_CH[channel].RXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1389  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1390  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1391  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1392  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1394      gethSFR->DMA_CH[channel].RXDESC_TAIL_POINTER.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1395  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1396  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1397  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1398  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1399  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1400      gethSFR->DMA_CH[channel].RX_CONTROL.B.RXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1401  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1402  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1403  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1404  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1405  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1406      gethSFR->DMA_CH[channel].TXDESC_LIST_ADDRESS.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1407  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1409  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1410  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1412      gethSFR->DMA_CH[channel].TXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1413  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1414  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1415  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1416  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1417  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1418      gethSFR->DMA_CH[channel].TXDESC_TAIL_POINTER.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1419  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1420  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1421  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1422  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1424      gethSFR->DMA_CH[channel].TX_CONTROL.B.TXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1425  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1426  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1427  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1428  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1429  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1430      gethSFR->DMA_CH[channel].RX_CONTROL.B.SR = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1431  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1432  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1433  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1434  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1435  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1436      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1437  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1438  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1439  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1440  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1441  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1442      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1443  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1444  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1445  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1446  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1447  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1448      return (gethSFR->CLC.B.DISS == 0) ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1449  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1450  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1451  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1452  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1453  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1454      gethSFR->MAC_CONFIGURATION.B.RE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1455  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1456  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1457  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1458  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1460      gethSFR->MAC_CONFIGURATION.B.TE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1461  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1462  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1463  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1464  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1465  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1466      gethSFR->MAC_CONFIGURATION.B.RE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1467  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1468  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1469  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1470  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1471  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1472      gethSFR->MAC_CONFIGURATION.B.TE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1473  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1474  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1475  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1476  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1477  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1478      gethSFR->MAC_PACKET_FILTER.B.PM = ((enabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1479  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1480  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1481  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1482  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1483  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1484      gethSFR->MAC_EXT_CONFIGURATION.B.DCRCC = ((enabled == 1) ? 0 : 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1485  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1487  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1488  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1489  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1490      gethSFR->MAC_CONFIGURATION.B.ACS = ((acsEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1491      gethSFR->MAC_CONFIGURATION.B.CST = ((cstEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1492  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1494  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1495  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1496  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1497      gethSFR->MAC_CONFIGURATION.B.DM = mode;
	ld.bu	d15,[a15]1
.L369:
	or	d15,#32
	j	.L11
.L9:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   261      		else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   262      			IfxGeth_mac_setDuplexMode(ethernetif->gethSFR, IfxGeth_DuplexMode_halfDuplex);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   263      		// we set the correct speed
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   264      		if (GETH_MAC_PHYIF_CONTROL_STATUS.B.LNKSPEED == 0)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   265      			// 10MBit speed
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   266      			IfxGeth_mac_setLineSpeed(ethernetif->gethSFR, IfxGeth_LineSpeed_10Mbps);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   267      		else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   268          		if (GETH_MAC_PHYIF_CONTROL_STATUS.B.LNKSPEED == 1)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   269          			// 100MBit speed
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   270          			IfxGeth_mac_setLineSpeed(ethernetif->gethSFR, IfxGeth_LineSpeed_100Mbps);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   271          		else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   272          			// 1000MBit speed
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   273          			IfxGeth_mac_setLineSpeed(ethernetif->gethSFR, IfxGeth_LineSpeed_1000Mbps);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   274      	}
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   275      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   276  }
	ret
.L10:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     2   * \file IfxGeth.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     3   * \brief GETH  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     4   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    25   * Standard layer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    27   * \defgroup IfxLld_Geth_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    28   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    29   * \defgroup IfxLld_Geth_Std_MAC_Functions MAC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    30   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    31   * \defgroup IfxLld_Geth_Std_Module_Functions Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    32   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    33   * \defgroup IfxLld_Geth_Std_MTL_Functions MTL Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    34   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    35   * \defgroup IfxLld_Geth_Std_DMA_Functions DMA Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    36   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    37   * \defgroup IfxLld_Geth_Std_DataStructures DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    38   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    39   * \defgroup IfxLld_Geth_Std_Unions Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    40   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    41   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    43  #ifndef IFXGET_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    44  #define IFXGET_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    50  #include "_Impl/IfxGeth_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    51  #include "IfxGeth_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    52  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    53  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    54  #include "IfxGeth_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    57  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    60  /** \brief Max number of TX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    62  #ifndef IFXGETH_MAX_TX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    63  #define IFXGETH_MAX_TX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    64  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    66  /** \brief Max number of RX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    67   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    68  #ifndef IFXGETH_MAX_RX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    69  #define IFXGETH_MAX_RX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    70  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    72  /** \brief Waits until GMII is busy
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    73   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    74  #define IFXGETH_PHY_WAIT_GMII_READY() while (GETH_MAC_MDIO_ADDRESS.B.GB) {}
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    77  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    80  /** \addtogroup IfxLld_Geth_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    81   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    82  /** \brief Programmable burst length of DMA channels\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    83   * Definition in DMA_CHi_TX_CONTROL.B.PBL and DMA_CHi_RX_CONTROL.B.PBL
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    84   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    87      IfxGeth_DmaBurstLength_0  = 0,   /**< \brief maximum burst length 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    88      IfxGeth_DmaBurstLength_1  = 1,   /**< \brief maximum burst length 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    89      IfxGeth_DmaBurstLength_2  = 2,   /**< \brief maximum burst length 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    90      IfxGeth_DmaBurstLength_4  = 4,   /**< \brief maximum burst length 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    91      IfxGeth_DmaBurstLength_8  = 8,   /**< \brief maximum burst length 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    92      IfxGeth_DmaBurstLength_16 = 16,  /**< \brief maximum burst length 16 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    93      IfxGeth_DmaBurstLength_32 = 32   /**< \brief maximum burst length 32 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    94  } IfxGeth_DmaBurstLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    95  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    96  /** \brief DMA channel Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    98  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   100      IfxGeth_DmaChannel_0,     /**< \brief Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   101      IfxGeth_DmaChannel_1,     /**< \brief Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   102      IfxGeth_DmaChannel_2,     /**< \brief Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   103      IfxGeth_DmaChannel_3      /**< \brief Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   104  } IfxGeth_DmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   106  /** \brief DMA interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   110      IfxGeth_DmaInterruptFlag_transmitInterrupt         = 0,  /**< \brief Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   111      IfxGeth_DmaInterruptFlag_transmitStopped           = 1,  /**< \brief Transmit Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   112      IfxGeth_DmaInterruptFlag_transmitBufferUnavailable = 2,  /**< \brief Trasmit Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   113      IfxGeth_DmaInterruptFlag_receiveInterrupt          = 6,  /**< \brief Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   114      IfxGeth_DmaInterruptFlag_receiveBufferUnavailable  = 7,  /**< \brief Receive Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   115      IfxGeth_DmaInterruptFlag_receiveStopped            = 8,  /**< \brief Receive Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   116      IfxGeth_DmaInterruptFlag_receiveWatchdogTimeout    = 9,  /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   117      IfxGeth_DmaInterruptFlag_earlyTransmitInterrupt    = 10, /**< \brief Early Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   118      IfxGeth_DmaInterruptFlag_earlyReceiveInterrupt     = 11, /**< \brief Early Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   119      IfxGeth_DmaInterruptFlag_fatalBusError             = 12, /**< \brief Fatal Bus Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   120      IfxGeth_DmaInterruptFlag_contextDescriptorError    = 13, /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   121      IfxGeth_DmaInterruptFlag_abnormalInterruptSummary  = 14, /**< \brief Abnormal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   122      IfxGeth_DmaInterruptFlag_normalInterruptSummary    = 15  /**< \brief Normal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   123  } IfxGeth_DmaInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   125  /** \brief Ethernet line speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   127  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   128  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   129      IfxGeth_LineSpeed_10Mbps,    /**< \brief 10 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   130      IfxGeth_LineSpeed_100Mbps,   /**< \brief 100 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   131      IfxGeth_LineSpeed_1000Mbps,  /**< \brief 1000 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   132      IfxGeth_LineSpeed_2500Mbps   /**< \brief 2500 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   133  } IfxGeth_LineSpeed;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   135  /** \brief MTL interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   137  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   138  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   139      IfxGeth_MtlInterruptFlag_txQueueUnderflow   = 0,  /**< \brief Transmit Queue Underflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   140      IfxGeth_MtlInterruptFlag_averageBitsPerSlot = 1,  /**< \brief Average Bits Per Slot */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   141      IfxGeth_MtlInterruptFlag_rxQueueOverflow    = 16  /**< \brief Receive Queue Overflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   142  } IfxGeth_MtlInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   144  /** \brief MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   146  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   147  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   148      IfxGeth_MtlQueue_0,     /**< \brief Mtl Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   149      IfxGeth_MtlQueue_1,     /**< \brief Mtl Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   150      IfxGeth_MtlQueue_2,     /**< \brief Mtl Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   151      IfxGeth_MtlQueue_3      /**< \brief Mtl Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   152  } IfxGeth_MtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   154  /** \brief External Phy Interface RMII Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   158      IfxGeth_PhyInterfaceMode_mii   = 0,  /**< \brief MII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   159      IfxGeth_PhyInterfaceMode_rgmii = 1,  /**< \brief RGMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   160      IfxGeth_PhyInterfaceMode_rmii  = 4   /**< \brief RMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   161  } IfxGeth_PhyInterfaceMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   163  /** \brief Preamble Length for Transmit packets\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   164   * Definition in MAC_CONFIGURATION.B.PRELEN
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   166  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   167  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   168      IfxGeth_PreambleLength_7Bytes,  /**< \brief 7 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   169      IfxGeth_PreambleLength_5Bytes,  /**< \brief 5 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   170      IfxGeth_PreambleLength_3Bytes   /**< \brief 3 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   171  } IfxGeth_PreambleLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   173  /** \brief Tx/RX Queue size in blocks of 256 bytes\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   174   * Definition in MTL_TXQi_OPERATION_MODE.B.TQS and MTL_RXQi_OPERATION_MODE.B.RQS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   178      IfxGeth_QueueSize_256Bytes,     /**< \brief 256Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   179      IfxGeth_QueueSize_512Bytes,     /**< \brief 512Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   180      IfxGeth_QueueSize_768Bytes,     /**< \brief 768Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   181      IfxGeth_QueueSize_1024Bytes,    /**< \brief 1024Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   182      IfxGeth_QueueSize_1280Bytes,    /**< \brief 1280Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   183      IfxGeth_QueueSize_1536Bytes,    /**< \brief 1536Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   184      IfxGeth_QueueSize_1792Bytes,    /**< \brief 1792Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   185      IfxGeth_QueueSize_2048Bytes,    /**< \brief 2048Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   186      IfxGeth_QueueSize_2304Bytes,    /**< \brief 2304Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   187      IfxGeth_QueueSize_2560Bytes,    /**< \brief 2560Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   188      IfxGeth_QueueSize_2816Bytes,    /**< \brief 2816Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   189      IfxGeth_QueueSize_3072Bytes,    /**< \brief 3072Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   190      IfxGeth_QueueSize_3328Bytes,    /**< \brief 3328Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   191      IfxGeth_QueueSize_3584Bytes,    /**< \brief 3584Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   192      IfxGeth_QueueSize_3840Bytes,    /**< \brief 3840Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   193      IfxGeth_QueueSize_4096Bytes,    /**< \brief 4096Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   194      IfxGeth_QueueSize_4352Bytes,    /**< \brief 4352Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   195      IfxGeth_QueueSize_4608Bytes,    /**< \brief 4608Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   196      IfxGeth_QueueSize_4864Bytes,    /**< \brief 4864Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   197      IfxGeth_QueueSize_5120Bytes,    /**< \brief 5120Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   198      IfxGeth_QueueSize_5376Bytes,    /**< \brief 5376Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   199      IfxGeth_QueueSize_5632Bytes,    /**< \brief 5632Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   200      IfxGeth_QueueSize_5888Bytes,    /**< \brief 5888Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   201      IfxGeth_QueueSize_6144Bytes,    /**< \brief 6144Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   202      IfxGeth_QueueSize_6400Bytes,    /**< \brief 6400Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   203      IfxGeth_QueueSize_6656Bytes,    /**< \brief 6656Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   204      IfxGeth_QueueSize_6912Bytes,    /**< \brief 6912Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   205      IfxGeth_QueueSize_7168Bytes,    /**< \brief 7168Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   206      IfxGeth_QueueSize_7424Bytes,    /**< \brief 7424Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   207      IfxGeth_QueueSize_7680Bytes,    /**< \brief 7680Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   208      IfxGeth_QueueSize_7936Bytes,    /**< \brief 7936Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   209      IfxGeth_QueueSize_8192Bytes     /**< \brief 8192Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   210  } IfxGeth_QueueSize;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   212  /** \brief Receive Arbitration Algorithm for Rx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   213   * Definition in MTL_OPERATION_MODE.B.RAA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   217      IfxGeth_RxArbitrationAlgorithm_sp  = 0, /**< \brief Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   218      IfxGeth_RxArbitrationAlgorithm_wsp = 1  /**< \brief Weighted Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   219  } IfxGeth_RxArbitrationAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   221  /** \brief Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   225      IfxGeth_RxDmaChannel_0,     /**< \brief Rx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   226      IfxGeth_RxDmaChannel_1,     /**< \brief Rx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   227      IfxGeth_RxDmaChannel_2,     /**< \brief Rx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   228      IfxGeth_RxDmaChannel_3      /**< \brief Rx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   229  } IfxGeth_RxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   230  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   231  /** \brief Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   235      IfxGeth_RxMtlQueue_0,     /**< \brief Rx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   236      IfxGeth_RxMtlQueue_1,     /**< \brief Rx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   237      IfxGeth_RxMtlQueue_2,     /**< \brief Rx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   238      IfxGeth_RxMtlQueue_3      /**< \brief Rx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   239  } IfxGeth_RxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   241  /** \brief Geth service request index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   242   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   243  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   244  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   245      IfxGeth_ServiceRequest_0,     /**< \brief Service Request SR0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   246      IfxGeth_ServiceRequest_1,     /**< \brief Service Request SR1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   247      IfxGeth_ServiceRequest_2,     /**< \brief Service Request SR2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   248      IfxGeth_ServiceRequest_3,     /**< \brief Service Request SR3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   249      IfxGeth_ServiceRequest_4,     /**< \brief Service Request SR4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   250      IfxGeth_ServiceRequest_5,     /**< \brief Service Request SR5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   251      IfxGeth_ServiceRequest_6,     /**< \brief Service Request SR6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   252      IfxGeth_ServiceRequest_7,     /**< \brief Service Request SR7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   253      IfxGeth_ServiceRequest_8,     /**< \brief Service Request SR8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   254      IfxGeth_ServiceRequest_9      /**< \brief Service Request SR9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   255  } IfxGeth_ServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   257  /** \brief Tx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   261      IfxGeth_TxDmaChannel_0,     /**< \brief Tx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   262      IfxGeth_TxDmaChannel_1,     /**< \brief Tx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   263      IfxGeth_TxDmaChannel_2,     /**< \brief Tx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   264      IfxGeth_TxDmaChannel_3      /**< \brief Tx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   265  } IfxGeth_TxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   267  /** \brief Tx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   268   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   269  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   270  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   271      IfxGeth_TxMtlQueue_0,     /**< \brief Tx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   272      IfxGeth_TxMtlQueue_1,     /**< \brief Tx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   273      IfxGeth_TxMtlQueue_2,     /**< \brief Tx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   274      IfxGeth_TxMtlQueue_3      /**< \brief Tx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   275  } IfxGeth_TxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   277  /** \brief Tx Scheduling Algorithm for Tx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   278   * Definition in MTL_OPERATION_MODE.B.SCHALG
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   280  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   281  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   282      IfxGeth_TxSchedulingAlgorithm_wrr = 0,  /**< \brief WRR Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   283      IfxGeth_TxSchedulingAlgorithm_sp  = 3   /**< \brief Strict Priority Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   284  } IfxGeth_TxSchedulingAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   288  /** \brief Duplex Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   289   * Definintion in MAC_CONFIGURATION.B.DM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   291  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   292  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   293      IfxGeth_DuplexMode_halfDuplex,  /**< \brief Half Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   294      IfxGeth_DuplexMode_fullDuplex   /**< \brief Full Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   295  } IfxGeth_DuplexMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   297  /** \brief Loopback Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   298   * Definition in MAC_CONFIGURATION.B.LM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   302      IfxGeth_LoopbackMode_disable,  /**< \brief Disable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   303      IfxGeth_LoopbackMode_enable    /**< \brief Enable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   304  } IfxGeth_LoopbackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   306  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   307  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   308  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   310  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   311   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   312  /** \brief Bit Fields of RDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   314  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   316      uint32 RTSL : 32;     /**< \brief Receive Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   317  } IfxGeth_RxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   319  /** \brief Bit Fields of RDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   321  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   323      uint32 RTSH : 32;     /**< \brief Receive Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   324  } IfxGeth_RxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   326  /** \brief Bit Fields of RDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   328  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   330      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   331  } IfxGeth_RxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   333  /** \brief Bit Fields of RDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   334   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   335  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   337      uint32 reserved_0 : 29;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   338      uint32 DE : 1;              /**< \brief Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   339      uint32 CTXT : 1;            /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   340      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   341  } IfxGeth_RxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   343  /** \brief Bit Fields of RDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   344   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   345  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   346  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   347      uint32 BUF1AP : 32;     /**< \brief Header or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   348  } IfxGeth_RxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   349  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   350  /** \brief Bit Fields of RDES0 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   352  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   354      uint32 OVT : 16;     /**< \brief Outer VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   355      uint32 IVT : 16;     /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   356  } IfxGeth_RxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   358  /** \brief Bit Fields of RDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   359   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   360  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   361  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   362      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   363  } IfxGeth_RxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   365  /** \brief Bit Fields of RDES1 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   367  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   369      uint32 PT : 3;       /**< \brief Payload Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   370      uint32 IPHE : 1;     /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   371      uint32 IP4 : 1;      /**< \brief IPV4 Header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   372      uint32 IP6 : 1;      /**< \brief IPv6 header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   373      uint32 IPCB : 1;     /**< \brief IP Checksum Bypassed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   374      uint32 IPCE : 1;     /**< \brief IP Payload Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   375      uint32 PMT : 4;      /**< \brief PTP Message Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   376      uint32 PFT : 1;      /**< \brief PTP Packet Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   377      uint32 PV : 1;       /**< \brief PTP Version */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   378      uint32 TSA : 1;      /**< \brief Timestamp Available */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   379      uint32 TD : 1;       /**< \brief Timestamp Dropped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   380      uint32 OPC : 16;     /**< \brief OAM Sub-Type Code, or MAC Control Packet opcode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   381  } IfxGeth_RxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   383  /** \brief Bit Fields of RDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   384   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   385  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   386  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   387      uint32 BUF2AP : 32;     /**< \brief Buffer 2 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   388  } IfxGeth_RxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   390  /** \brief Bit Fields of RDES2 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   392  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   394      uint32 HL : 10;             /**< \brief L3/L4 Header Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   395      uint32 ARPNR : 1;           /**< \brief ARP Reply Not Generated */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   396      uint32 reserved_11 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   397      uint32 ITS : 1;             /**< \brief Inner VLAN Tag Filter Status (ITS) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   398      uint32 OTS : 1;             /**< \brief VLAN Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   399      uint32 SAF : 1;             /**< \brief SA Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   400      uint32 DAF : 1;             /**< \brief Destination Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   401      uint32 HF : 1;              /**< \brief Hash Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   402      uint32 MADRM : 8;           /**< \brief MAC Address Match or Hash Value */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   403      uint32 L3FM : 1;            /**< \brief Layer 3 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   404      uint32 L4FM : 1;            /**< \brief Layer 4 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   405      uint32 L3L4FM : 3;          /**< \brief Layer 3 and Layer 4 Filter Number Matched */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   406  } IfxGeth_RxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   408  /** \brief Bit Fields of RDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   409   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   410  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   412      uint32 reserved_0 : 24;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   413      uint32 BUF1V : 1;           /**< \brief Buffer 1 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   414      uint32 BUF2V : 1;           /**< \brief Buffer 2 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   415      uint32 reserved_27 : 4;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   416      uint32 IOC : 1;             /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   417      uint32 OWN : 1;             /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   418  } IfxGeth_RxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   420  /** \brief Bit Fields of RDES3 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   422  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   424      uint32 PL : 15;      /**< \brief Packet Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   425      uint32 ES : 1;       /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   426      uint32 LT : 3;       /**< \brief Length/Type Field */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   427      uint32 DE : 1;       /**< \brief Dribble Bit Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   428      uint32 RE : 1;       /**< \brief Receive Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   429      uint32 OE : 1;       /**< \brief Overflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   430      uint32 RWT : 1;      /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   431      uint32 GP : 1;       /**< \brief Giant Packet */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   432      uint32 CE : 1;       /**< \brief CRC Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   433      uint32 RS0V : 1;     /**< \brief Receive Status RDES0 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   434      uint32 RS1V : 1;     /**< \brief Receive Status RDES1 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   435      uint32 RS2V : 1;     /**< \brief Receive Status RDES2 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   436      uint32 LD : 1;       /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   437      uint32 FD : 1;       /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   438      uint32 CTXT : 1;     /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   439      uint32 OWN : 1;      /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   440  } IfxGeth_RxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   442  /** \brief Bit Fields of TDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   443   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   444  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   445  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   446      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   447  } IfxGeth_TxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   448  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   449  /** \brief Bit Fields of TDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   450   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   451  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   452  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   453      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   454  } IfxGeth_TxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   456  /** \brief Bit Fields of TDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   458  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   460      uint32 MSS : 14;            /**< \brief Maximum Segment Size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   461      uint32 reserved_14 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   462      uint32 IVT : 16;            /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   463  } IfxGeth_TxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   465  /** \brief Bit Fields of TDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   466   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   467  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   468  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   469      uint32 VT : 16;             /**< \brief VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   470      uint32 VLTV : 1;            /**< \brief VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   471      uint32 IVLTV : 1;           /**< \brief Inner VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   472      uint32 IVTIR : 2;           /**< \brief Inner VLAN Tag Insert or Replace */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   473      uint32 reserved_20 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   474      uint32 CDE : 1;             /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   475      uint32 reserved_24 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   476      uint32 TCMSSV : 1;          /**< \brief One-Step Timestamp Correction Input or MSS Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   477      uint32 OSTC : 1;            /**< \brief One-Step Timestamp Correction Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   478      uint32 reserved_28 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   479      uint32 CTXT : 1;            /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   480      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   481  } IfxGeth_TxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   483  /** \brief Bit Fields of TDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   484   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   485  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   486  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   487      uint32 BUF1AP : 32;     /**< \brief Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   488  } IfxGeth_TxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   490  /** \brief Bit Fields of TDES0 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   491   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   492  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   493  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   494      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   495  } IfxGeth_TxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   496  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   497  /** \brief Bit Fields of TDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   499  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   500  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   501      uint32 BUF2AP : 32;     /**< \brief Buffer 2 or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   502  } IfxGeth_TxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   503  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   504  /** \brief Bit Fields of TDES1 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   505   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   506  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   507  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   508      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   509  } IfxGeth_TxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   511  /** \brief Bit Fields of TDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   512   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   513  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   514  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   515      uint32 B1L : 14;          /**< \brief Header Length or Buffer 1 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   516      uint32 VTIR : 2;          /**< \brief VLAN Tag Insertion or Replacement */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   517      uint32 B2L : 14;          /**< \brief Buffer 2 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   518      uint32 TTSE_TMWD : 1;     /**< \brief Transmit Timestamp Enable or External TSO Memory Write Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   519      uint32 IOC : 1;           /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   520  } IfxGeth_TxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   522  /** \brief Bit Fields of TDES2 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   524  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   526      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   527  } IfxGeth_TxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   529  /** \brief Bit Fields of TDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   530   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   531  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   532  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   533      uint32 FL_TPL : 15;         /**< \brief Packet Length or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   534      uint32 TPL : 1;             /**< \brief Reserved or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   535      uint32 CIC_TPL : 2;         /**< \brief Checksum Insertion Control or TCP Payload LengthThese bits control the checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   536      uint32 TSE : 1;             /**< \brief TCP Segmentation Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   537      uint32 SLOTNUM_THL : 4;     /**< \brief SLOTNUM: Slot Number Control Bits in AV Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   538      uint32 SAIC : 3;            /**< \brief SA Insertion Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   539      uint32 CPC : 2;             /**< \brief CRC Pad Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   540      uint32 LD : 1;              /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   541      uint32 FD : 1;              /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   542      uint32 CTXT : 1;            /**< \brief Context TypeThis bit should be set to 1'b0 for normal descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   543      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   544  } IfxGeth_TxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   546  /** \brief Bit Fields of TDES3 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   548  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   550      uint32 IHE : 1;              /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   551      uint32 DB : 1;               /**< \brief Deferred Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   552      uint32 UF : 1;               /**< \brief Underflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   553      uint32 ED : 1;               /**< \brief Excessive Deferral */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   554      uint32 CC : 4;               /**< \brief Collision Count */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   555      uint32 EC : 1;               /**< \brief Excessive Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   556      uint32 LC : 1;               /**< \brief Late Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   557      uint32 NC : 1;               /**< \brief No Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   558      uint32 LOC : 1;              /**< \brief Loss of Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   559      uint32 PCE : 1;              /**< \brief Payload Checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   560      uint32 FF : 1;               /**< \brief Packet Flushed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   561      uint32 JT : 1;               /**< \brief Jabber Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   562      uint32 ES : 1;               /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   563      uint32 reserved_16 : 1;      /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   564      uint32 TTSS : 1;             /**< \brief Tx Timestamp Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   565      uint32 reserved_18 : 10;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   566      uint32 LD : 1;               /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   567      uint32 FD : 1;               /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   568      uint32 CTXT : 1;             /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   569      uint32 OWN : 1;              /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   570  } IfxGeth_TxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   572  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   574  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   575   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   576  /** \brief RDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   577   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   578  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   580      IfxGeth_RxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   581      IfxGeth_RxDescr0_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   582      IfxGeth_RxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   583      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   584  } IfxGeth_RxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   586  /** \brief RDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   588  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   589  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   590      IfxGeth_RxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   591      IfxGeth_RxDescr1_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   592      IfxGeth_RxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   593      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   594  } IfxGeth_RxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   596  /** \brief RDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   597   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   598  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   599  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   600      IfxGeth_RxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   601      IfxGeth_RxDescr2_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   602      IfxGeth_RxContextDescr2_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   603      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   604  } IfxGeth_RxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   605  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   606  /** \brief RDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   607   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   608  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   610      IfxGeth_RxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   611      IfxGeth_RxDescr3_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   612      IfxGeth_RxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   613      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   614  } IfxGeth_RxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   616  /** \brief TDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   617   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   618  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   619  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   620      IfxGeth_TxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   621      IfxGeth_TxDescr0_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   622      IfxGeth_TxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   623      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   624  } IfxGeth_TxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   626  /** \brief TDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   628  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   630      IfxGeth_TxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   631      IfxGeth_TxDescr1_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   632      IfxGeth_TxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   633      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   634  } IfxGeth_TxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   636  /** \brief TDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   637   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   638  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   640      IfxGeth_TxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   641      IfxGeth_TxDescr2_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   642      IfxGeth_TxContextDescr2_Bits C;       /**< \brief COntext Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   643      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   644  } IfxGeth_TxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   646  /** \brief TDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   647   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   648  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   649  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   650      IfxGeth_TxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   651      IfxGeth_TxDescr3_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   652      IfxGeth_TxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   653      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   654  } IfxGeth_TxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   656  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   657  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   658  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   659   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   660  /** \brief Rx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   661   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   662  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   663  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   664      IfxGeth_RxDescr0 RDES0;       /**< \brief Rx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   665      IfxGeth_RxDescr1 RDES1;       /**< \brief Rx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   666      IfxGeth_RxDescr2 RDES2;       /**< \brief Rx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   667      IfxGeth_RxDescr3 RDES3;       /**< \brief Rx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   668  } IfxGeth_RxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   670  /** \brief Tx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   671   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   672  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   673  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   674      IfxGeth_TxDescr0 TDES0;       /**< \brief Tx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   675      IfxGeth_TxDescr1 TDES1;       /**< \brief Tx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   676      IfxGeth_TxDescr2 TDES2;       /**< \brief Tx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   677      IfxGeth_TxDescr3 TDES3;       /**< \brief Tx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   678  } IfxGeth_TxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   680  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   681  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   682  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   683   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   684  /** \brief Rx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   685   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   686  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   687  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   688      volatile IfxGeth_RxDescr descr[IFXGETH_MAX_RX_DESCRIPTORS];       /**< \brief list of RX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   689  } IfxGeth_RxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   691  /** \brief Tx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   692   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   693  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   694  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   695      volatile IfxGeth_TxDescr descr[IFXGETH_MAX_TX_DESCRIPTORS];       /**< \brief list of TX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   696  } IfxGeth_TxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   697  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   698  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   700  /** \addtogroup IfxLld_Geth_Std_MAC_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   701   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   703  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   704  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   705  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   706  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   707  /** \brief Disables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   708   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   709   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   710   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   711  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   713  /** \brief Disables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   714   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   715   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   716   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   717  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   719  /** \brief Enables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   720   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   721   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   722   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   723  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   725  /** \brief Enables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   726   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   727   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   728   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   729  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   731  /** \brief Enables / Disables Passing of All Multicast packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   732   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   733   * \param enabled Pass All Multicast enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   734   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   735   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   736  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   737  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   738  /** \brief Enables / Disables CRC Checking for Received Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   739   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   740   * \param enabled CRC Checking for Received Packets enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   741   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   742   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   743  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   745  /** \brief Enables/Disables the Automatic Pad or CRC Stripping for frames less than 1536 bytes and \n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   746   *     CRC stripping for Type packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   747   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   748   * \param acsEnabled Automatic Pad or CRC Stripping enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   749   * \param cstEnabled CRC Stripping for Type packets enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   750   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   751   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   752  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   754  /** \brief Sets the Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   755   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   756   * \param mode Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   757   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   758   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   759  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   761  /** \brief Sets the Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   762   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   763   * \param length Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   764   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   765   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   766  IFX_INLINE void IfxGeth_mac_setPreambleLength(Ifx_GETH *gethSFR, IfxGeth_PreambleLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   768  /** \brief Enables / Disables Promiscuous Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   769   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   770   * \param enabled Promiscuous Mode enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   771   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   772   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   773  IFX_INLINE void IfxGeth_mac_setPromiscuousMode(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   775  /** \brief Set the priorities for Rx queues for mapping tagged packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   776   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   777   * \param channel Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   778   * \param priorities Rx queue priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   779   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   780   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   781  IFX_INLINE void IfxGeth_mac_setVlanPriorityQueueRouting(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint8 priorities);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   782  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   783  /** \brief Enable / Disable Queue Insertion
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   784   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   785   * \param enable config parameter TRUE: enabled/ FALSE: disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   786   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   787   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   788  IFX_INLINE void IfxGeth_mac_setQueueVlanInsertion(Ifx_GETH *gethSFR, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   789  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   790  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   791  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   792  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   793  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   794  /** \brief Sets the Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   795   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   796   * \param speed Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   797   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   798   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   799  IFX_EXTERN void IfxGeth_mac_setLineSpeed(Ifx_GETH *gethSFR, IfxGeth_LineSpeed speed);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   801  /** \brief Sets the MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   802   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   803   * \param macAddress MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   804   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   805   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   806  IFX_EXTERN void IfxGeth_mac_setMacAddress(Ifx_GETH *gethSFR, uint8 *macAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   807  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   808  /** \brief Writes to Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   809   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   810   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   811   * \param vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   812   * \return TRUE if write was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   813   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   814  IFX_EXTERN boolean IfxGeth_mac_writeQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   816  /** \brief Reads from Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   817   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   818   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   819   * \param const vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   820   * \return TRUE if read was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   821   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   822  IFX_EXTERN boolean IfxGeth_mac_readQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 *const vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   823  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   824  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   825  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   826  /** \addtogroup IfxLld_Geth_Std_Module_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   827   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   829  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   830  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   831  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   833  /** \brief Returns the status of whether clock for GETH module is enabled or diabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   834   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   835   * \return Status:\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   836   * TRUE : if module is enabled\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   837   * FALSE : if module is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   838   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   839  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   841  /** \brief Sets the External Phy Interface mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   842   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   843   * \param mode PHY Interface Mode (MII/RGMII/RMII)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   844   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   845   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   846  IFX_INLINE void IfxGeth_setPhyInterfaceMode(Ifx_GETH *gethSFR, IfxGeth_PhyInterfaceMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   847  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   848  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   849  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   850  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   851  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   852  /** \brief Disables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   853   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   854   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   855   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   856  IFX_EXTERN void IfxGeth_disableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   858  /** \brief Enables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   859   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   860   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   861   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   862  IFX_EXTERN void IfxGeth_enableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   863  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   864  /** \brief Returns the Src Pointer of the selected GETH service request node
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   865   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   866   * \param serviceRequest Service Request number
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   867   * \return pointer to Src register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   868   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   869  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGeth_getSrcPointer(Ifx_GETH *gethSFR, IfxGeth_ServiceRequest serviceRequest);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   870  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   871  /** \brief resets Ethernet kernel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   872   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   873   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   874   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   875  IFX_EXTERN void IfxGeth_resetModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   876  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   877  /** \brief API to get the resource index of the GETH specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   878   * \param geth Pointer to Geth register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   879   * \return geth resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   881  IFX_EXTERN IfxGeth_Index IfxGeth_getIndex(Ifx_GETH *geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   883  /** \brief Get the address of the specified GETH resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   884   * \param geth Module index of the GETH
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   885   * \return GETH module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   887  IFX_EXTERN Ifx_GETH *IfxGeth_getAddress(IfxGeth_Index geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   889  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   890  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   891  /** \addtogroup IfxLld_Geth_Std_MTL_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   892   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   894  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   895  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   896  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   897  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   898  /** \brief Enables the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   899   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   900   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   901   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   902   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   903  IFX_INLINE void IfxGeth_mtl_enableRxQueue(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   904  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   905  /** \brief sets the Rx Arbitration algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   906   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   907   * \param arbitrationAlgorithm Rx Arbitration Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   908   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   909   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   910  IFX_INLINE void IfxGeth_mtl_setRxArbitrationAlgorithm(Ifx_GETH *gethSFR, IfxGeth_RxArbitrationAlgorithm arbitrationAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   911  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   912  /** \brief Sets the selected DMA Channel mapping for the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   913   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   914   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   915   * \param dmaChannel DMA channel for selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   916   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   917   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   918  IFX_INLINE void IfxGeth_mtl_setRxQueueDmaChannelMapping(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_RxDmaChannel dmaChannel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   920  /** \brief Sets the selected Rx Queue for DA based DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   921   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   922   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   923   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   924   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   925   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   926  IFX_INLINE void IfxGeth_mtl_setRxQueueForDaBasedDmaChannel(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   928  /** \brief sets the Tx Scheduling algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   929   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   930   * \param schedulingAlgorithm Tx Scheduling Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   931   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   932   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   933  IFX_INLINE void IfxGeth_mtl_setTxSchedulingAlgorithm(Ifx_GETH *gethSFR, IfxGeth_TxSchedulingAlgorithm schedulingAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   934  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   935  /** \brief Enable and set queue ID to route packets failing unicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   936   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   937   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   938   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   939   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   940  IFX_INLINE void IfxGeth_mtl_enableUnicastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   941  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   942  /** \brief Disable queuing of packets failing unicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   943   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   944   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   945   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   946  IFX_INLINE void IfxGeth_mtl_disableUnicastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   947  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   948  /** \brief Enable and set queue ID to route packets failing multicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   949   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   950   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   951   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   952   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   953  IFX_INLINE void IfxGeth_mtl_enableMulticastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   954  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   955  /** \brief Disable queuing of packets failing multicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   956   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   957   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   958   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   959  IFX_INLINE void IfxGeth_mtl_disableMulticastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   961  /** \brief Enable and set queue ID to route packets failing VLAN tag filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   962   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   963   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   964   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   965   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   966  IFX_INLINE void IfxGeth_mtl_enableVlanFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   967  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   968  /** \brief Disable queuing of packets failing VLAN tag filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   969   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   970   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   971   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   972  IFX_INLINE void IfxGeth_mtl_disableVlanFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   974  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   975  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   976  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   977  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   978  /** \brief Clears all the Mtl interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   979   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   980   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   981   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   982   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   983  IFX_EXTERN void IfxGeth_mtl_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   984  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   985  /** \brief Clears the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   986   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   987   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   988   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   989   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   990   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   991  IFX_EXTERN void IfxGeth_mtl_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   992  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   993  /** \brief Disables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   994   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   995   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   996   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   997   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   998   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   999  IFX_EXTERN void IfxGeth_mtl_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1001  /** \brief Enables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1002   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1003   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1004   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1005   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1007  IFX_EXTERN void IfxGeth_mtl_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1009  /** \brief Enables the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1010   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1011   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1012   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1013   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1014  IFX_EXTERN void IfxGeth_mtl_enableTxQueue(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1016  /** \brief Returns the status of selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1017   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1018   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1019   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1020   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1021   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1022   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1023  IFX_EXTERN boolean IfxGeth_mtl_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1024  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1025  /** \brief Sets the Receive Forward Error Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1026   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1027   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1028   * \param enabled Enable/Disable Receive Forward Error Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1029   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1031  IFX_EXTERN void IfxGeth_mtl_setRxForwardErrorPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1033  /** \brief Sets the Receive Forward Undersized Good Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1034   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1035   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1036   * \param enabled Enable/Disable Receive Forward Undersized Good Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1037   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1038   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1039  IFX_EXTERN void IfxGeth_mtl_setRxForwardUndersizedGoodPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1040  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1041  /** \brief Sets the size of the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1042   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1043   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1044   * \param queueSize Rx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1045   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1046   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1047  IFX_EXTERN void IfxGeth_mtl_setRxQueueSize(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1048  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1049  /** \brief Sets the Receive Store And Forward for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1050   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1051   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1052   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1053   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1054   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1055  IFX_EXTERN void IfxGeth_mtl_setRxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1056  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1057  /** \brief Sets the size of the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1058   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1059   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1060   * \param queueSize Tx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1061   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1062   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1063  IFX_EXTERN void IfxGeth_mtl_setTxQueueSize(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1065  /** \brief Sets the Transmit Store And Forward for teh selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1066   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1067   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1068   * \param enabled Enable/Disable Transmit Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1069   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1070   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1071  IFX_EXTERN void IfxGeth_mtl_setTxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1072  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1073  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1074  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1075  /** \addtogroup IfxLld_Geth_Std_DMA_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1076   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1077  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1078  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1079  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1080  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1081  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1082  /** \brief Applies a software reset of MAC and DMA controller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1083   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1084   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1085   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1086  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1087  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1088  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1089   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1090   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1091   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1092   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1093  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1094  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1095  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1096   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1097   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1098   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1099   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1101  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1102  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1103  /** \brief Disables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1104   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1105   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1106   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1107   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1108   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1109  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1110  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1111  /** \brief Enables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1112   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1113   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1114   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1115   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1116   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1117  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1118  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1119  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1120   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1121   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1122   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1123   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1124   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1125   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1126  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1127  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1128  /** \brief Wiats until software reset of MAC and DMA controller is done or until timout.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1129   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1130   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1131  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1132  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1133  /** \brief Enables/Disables Address aligned beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1134   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1135   * \param enabled Enable/Disable Address Aligned Beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1136   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1137   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1138  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1139  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1140  /** \brief Enables/Disables Fixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1141   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1142   * \param enabled Enable/Disable Fixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1144   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1145  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1146  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1147  /** \brief Enables/Disables Mixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1148   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1149   * \param enabled Enable/Disable Mixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1151   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1152  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1154  /** \brief sets the size of the rx buffers in descriptors for selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1155   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1156   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1157   * \param size Rx Buffers size (applies for both buffers)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1159   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1160  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1161  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1162  /** \brief sets the base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1163   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1164   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1165   * \param address base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1166   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1167   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1168  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1169  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1170  /** \brief sets the Length of the Rx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1171   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1172   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1173   * \param length Length of the ring (no of total Rx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1174   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1176  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1177  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1178  /** \brief sets the address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1179   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1180   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1181   * \param address address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1182   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1183   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1184  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1185  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1186  /** \brief sets the programmable burst length of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1187   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1188   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1189   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1190   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1191   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1192  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1193  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1194  /** \brief sets the base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1195   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1196   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1197   * \param address base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1198   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1199   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1200  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1201  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1202  /** \brief sets the Length of the Tx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1203   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1204   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1205   * \param length Length of the ring (no of total Tx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1206   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1207   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1208  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1209  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1210  /** \brief sets the address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1211   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1212   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1213   * \param address address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1214   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1215   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1216  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1217  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1218  /** \brief sets the programmable burst length of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1219   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1220   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1221   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1222   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1223   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1224  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1225  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1226  /** \brief starts the receiver of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1227   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1228   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1229   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1230   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1231  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1232  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1233  /** \brief starts the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1234   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1235   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1236   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1237   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1238  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1239  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1240  /** \brief Stops the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1241   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1242   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1244   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1245  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1246  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1247  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1248  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1249  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1251  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1252  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1253  /** \brief Enables/Disables the MAC operation in the loopback mode at GMII or MII
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1254   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1255   * \param mode Loopback Mode Enable / Disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1257   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1258  IFX_INLINE void IfxGeth_mac_setLoopbackMode(Ifx_GETH *gethSFR, IfxGeth_LoopbackMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1259  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1260  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1261  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1262  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1263  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1264  /** \brief Reads a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1265   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1266   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1267   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1268   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1269   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1270  IFX_EXTERN void IfxGeth_phy_Clause22_readMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1271  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1272  /** \brief Writes to a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1273   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1274   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1275   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1277   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1278  IFX_EXTERN void IfxGeth_Phy_Clause22_writeMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1279  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1280  /** \brief Reads a MDIO register of Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1281   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1282   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1283   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1284   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1285   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1286   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1287  IFX_EXTERN void IfxGeth_phy_Clause45_readMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1288  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1289  /** \brief Writes to a MDIO register for Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1290   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1291   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1292   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1293   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1294   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1295   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1296  IFX_EXTERN void IfxGeth_Phy_Clause45_writeMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1297  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1298  /** \brief Sets the maximum size of the packet
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1299   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1300   * \param maxPacketSize Minimum size of the frame beyond which giant packet status is set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1301   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1302   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1303  IFX_EXTERN void IfxGeth_mac_setMaxPacketSize(Ifx_GETH *gethSFR, uint16 maxPacketSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1304  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1305  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1306  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1307  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1308  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1309  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1310  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1311      gethSFR->DMA_MODE.B.SWR = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1312  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1313  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1314  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1315  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1316  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1317      gethSFR->DMA_CH[channelId].STATUS.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1318  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1319  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1320  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1321  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1323      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1324      gethSFR->DMA_CH[channelId].STATUS.U = value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1325  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1326  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1327  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1328  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1330      uint32 value = ~(1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1331      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U &= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1332  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1333  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1334  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1335  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1337      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1338      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U |= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1339  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1340  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1341  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1342  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1343  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1344      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1345      return gethSFR->DMA_CH[channelId].STATUS.U & (Ifx_UReg_32Bit)value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1346  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1347  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1348  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1349  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1350  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1351      return gethSFR->DMA_MODE.B.SWR == 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1352  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1353  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1354  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1355  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1356  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1357      gethSFR->DMA_SYSBUS_MODE.B.AAL = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1358  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1359  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1360  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1361  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1362  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1363      gethSFR->DMA_SYSBUS_MODE.B.FB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1364  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1365  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1366  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1367  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1369      gethSFR->DMA_SYSBUS_MODE.B.MB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1370  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1371  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1372  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1373  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1374  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1375      /* [RBSZ_13_Y:RBSZ_X_0] represents the size of the Rx buffer*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1376      gethSFR->DMA_CH[channel].RX_CONTROL.B.RBSZ_13_Y = (uint32)((size >> 2) & IFX_GETH_DMA_CH_RX_CONTROL_RBSZ_13_Y_MSK);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1377  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1378  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1379  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1380  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1381  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1382      gethSFR->DMA_CH[channel].RXDESC_LIST_ADDRESS.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1383  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1384  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1385  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1386  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1387  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1388      gethSFR->DMA_CH[channel].RXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1389  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1390  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1391  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1392  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1394      gethSFR->DMA_CH[channel].RXDESC_TAIL_POINTER.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1395  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1396  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1397  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1398  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1399  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1400      gethSFR->DMA_CH[channel].RX_CONTROL.B.RXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1401  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1402  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1403  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1404  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1405  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1406      gethSFR->DMA_CH[channel].TXDESC_LIST_ADDRESS.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1407  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1409  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1410  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1412      gethSFR->DMA_CH[channel].TXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1413  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1414  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1415  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1416  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1417  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1418      gethSFR->DMA_CH[channel].TXDESC_TAIL_POINTER.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1419  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1420  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1421  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1422  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1424      gethSFR->DMA_CH[channel].TX_CONTROL.B.TXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1425  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1426  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1427  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1428  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1429  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1430      gethSFR->DMA_CH[channel].RX_CONTROL.B.SR = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1431  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1432  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1433  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1434  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1435  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1436      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1437  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1438  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1439  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1440  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1441  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1442      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1443  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1444  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1445  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1446  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1447  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1448      return (gethSFR->CLC.B.DISS == 0) ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1449  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1450  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1451  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1452  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1453  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1454      gethSFR->MAC_CONFIGURATION.B.RE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1455  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1456  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1457  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1458  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1460      gethSFR->MAC_CONFIGURATION.B.TE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1461  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1462  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1463  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1464  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1465  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1466      gethSFR->MAC_CONFIGURATION.B.RE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1467  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1468  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1469  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1470  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1471  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1472      gethSFR->MAC_CONFIGURATION.B.TE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1473  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1474  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1475  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1476  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1477  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1478      gethSFR->MAC_PACKET_FILTER.B.PM = ((enabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1479  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1480  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1481  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1482  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1483  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1484      gethSFR->MAC_EXT_CONFIGURATION.B.DCRCC = ((enabled == 1) ? 0 : 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1485  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1487  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1488  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1489  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1490      gethSFR->MAC_CONFIGURATION.B.ACS = ((acsEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1491      gethSFR->MAC_CONFIGURATION.B.CST = ((cstEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1492  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1494  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1495  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1496  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1497      gethSFR->MAC_CONFIGURATION.B.DM = mode;
	ld.bu	d15,[a15]1
.L370:
	insert	d15,d15,#0,#5,#1
.L11:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     2   * \file IfxGeth.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     3   * \brief GETH  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     4   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    25   * Standard layer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    27   * \defgroup IfxLld_Geth_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    28   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    29   * \defgroup IfxLld_Geth_Std_MAC_Functions MAC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    30   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    31   * \defgroup IfxLld_Geth_Std_Module_Functions Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    32   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    33   * \defgroup IfxLld_Geth_Std_MTL_Functions MTL Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    34   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    35   * \defgroup IfxLld_Geth_Std_DMA_Functions DMA Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    36   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    37   * \defgroup IfxLld_Geth_Std_DataStructures DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    38   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    39   * \defgroup IfxLld_Geth_Std_Unions Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    40   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    41   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    43  #ifndef IFXGET_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    44  #define IFXGET_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    50  #include "_Impl/IfxGeth_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    51  #include "IfxGeth_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    52  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    53  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    54  #include "IfxGeth_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    57  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    60  /** \brief Max number of TX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    62  #ifndef IFXGETH_MAX_TX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    63  #define IFXGETH_MAX_TX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    64  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    66  /** \brief Max number of RX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    67   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    68  #ifndef IFXGETH_MAX_RX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    69  #define IFXGETH_MAX_RX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    70  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    72  /** \brief Waits until GMII is busy
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    73   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    74  #define IFXGETH_PHY_WAIT_GMII_READY() while (GETH_MAC_MDIO_ADDRESS.B.GB) {}
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    77  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    80  /** \addtogroup IfxLld_Geth_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    81   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    82  /** \brief Programmable burst length of DMA channels\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    83   * Definition in DMA_CHi_TX_CONTROL.B.PBL and DMA_CHi_RX_CONTROL.B.PBL
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    84   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    87      IfxGeth_DmaBurstLength_0  = 0,   /**< \brief maximum burst length 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    88      IfxGeth_DmaBurstLength_1  = 1,   /**< \brief maximum burst length 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    89      IfxGeth_DmaBurstLength_2  = 2,   /**< \brief maximum burst length 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    90      IfxGeth_DmaBurstLength_4  = 4,   /**< \brief maximum burst length 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    91      IfxGeth_DmaBurstLength_8  = 8,   /**< \brief maximum burst length 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    92      IfxGeth_DmaBurstLength_16 = 16,  /**< \brief maximum burst length 16 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    93      IfxGeth_DmaBurstLength_32 = 32   /**< \brief maximum burst length 32 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    94  } IfxGeth_DmaBurstLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    95  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    96  /** \brief DMA channel Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    98  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   100      IfxGeth_DmaChannel_0,     /**< \brief Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   101      IfxGeth_DmaChannel_1,     /**< \brief Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   102      IfxGeth_DmaChannel_2,     /**< \brief Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   103      IfxGeth_DmaChannel_3      /**< \brief Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   104  } IfxGeth_DmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   106  /** \brief DMA interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   110      IfxGeth_DmaInterruptFlag_transmitInterrupt         = 0,  /**< \brief Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   111      IfxGeth_DmaInterruptFlag_transmitStopped           = 1,  /**< \brief Transmit Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   112      IfxGeth_DmaInterruptFlag_transmitBufferUnavailable = 2,  /**< \brief Trasmit Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   113      IfxGeth_DmaInterruptFlag_receiveInterrupt          = 6,  /**< \brief Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   114      IfxGeth_DmaInterruptFlag_receiveBufferUnavailable  = 7,  /**< \brief Receive Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   115      IfxGeth_DmaInterruptFlag_receiveStopped            = 8,  /**< \brief Receive Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   116      IfxGeth_DmaInterruptFlag_receiveWatchdogTimeout    = 9,  /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   117      IfxGeth_DmaInterruptFlag_earlyTransmitInterrupt    = 10, /**< \brief Early Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   118      IfxGeth_DmaInterruptFlag_earlyReceiveInterrupt     = 11, /**< \brief Early Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   119      IfxGeth_DmaInterruptFlag_fatalBusError             = 12, /**< \brief Fatal Bus Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   120      IfxGeth_DmaInterruptFlag_contextDescriptorError    = 13, /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   121      IfxGeth_DmaInterruptFlag_abnormalInterruptSummary  = 14, /**< \brief Abnormal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   122      IfxGeth_DmaInterruptFlag_normalInterruptSummary    = 15  /**< \brief Normal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   123  } IfxGeth_DmaInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   125  /** \brief Ethernet line speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   127  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   128  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   129      IfxGeth_LineSpeed_10Mbps,    /**< \brief 10 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   130      IfxGeth_LineSpeed_100Mbps,   /**< \brief 100 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   131      IfxGeth_LineSpeed_1000Mbps,  /**< \brief 1000 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   132      IfxGeth_LineSpeed_2500Mbps   /**< \brief 2500 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   133  } IfxGeth_LineSpeed;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   135  /** \brief MTL interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   137  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   138  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   139      IfxGeth_MtlInterruptFlag_txQueueUnderflow   = 0,  /**< \brief Transmit Queue Underflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   140      IfxGeth_MtlInterruptFlag_averageBitsPerSlot = 1,  /**< \brief Average Bits Per Slot */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   141      IfxGeth_MtlInterruptFlag_rxQueueOverflow    = 16  /**< \brief Receive Queue Overflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   142  } IfxGeth_MtlInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   144  /** \brief MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   146  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   147  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   148      IfxGeth_MtlQueue_0,     /**< \brief Mtl Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   149      IfxGeth_MtlQueue_1,     /**< \brief Mtl Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   150      IfxGeth_MtlQueue_2,     /**< \brief Mtl Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   151      IfxGeth_MtlQueue_3      /**< \brief Mtl Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   152  } IfxGeth_MtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   154  /** \brief External Phy Interface RMII Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   158      IfxGeth_PhyInterfaceMode_mii   = 0,  /**< \brief MII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   159      IfxGeth_PhyInterfaceMode_rgmii = 1,  /**< \brief RGMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   160      IfxGeth_PhyInterfaceMode_rmii  = 4   /**< \brief RMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   161  } IfxGeth_PhyInterfaceMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   163  /** \brief Preamble Length for Transmit packets\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   164   * Definition in MAC_CONFIGURATION.B.PRELEN
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   166  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   167  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   168      IfxGeth_PreambleLength_7Bytes,  /**< \brief 7 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   169      IfxGeth_PreambleLength_5Bytes,  /**< \brief 5 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   170      IfxGeth_PreambleLength_3Bytes   /**< \brief 3 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   171  } IfxGeth_PreambleLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   173  /** \brief Tx/RX Queue size in blocks of 256 bytes\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   174   * Definition in MTL_TXQi_OPERATION_MODE.B.TQS and MTL_RXQi_OPERATION_MODE.B.RQS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   178      IfxGeth_QueueSize_256Bytes,     /**< \brief 256Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   179      IfxGeth_QueueSize_512Bytes,     /**< \brief 512Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   180      IfxGeth_QueueSize_768Bytes,     /**< \brief 768Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   181      IfxGeth_QueueSize_1024Bytes,    /**< \brief 1024Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   182      IfxGeth_QueueSize_1280Bytes,    /**< \brief 1280Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   183      IfxGeth_QueueSize_1536Bytes,    /**< \brief 1536Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   184      IfxGeth_QueueSize_1792Bytes,    /**< \brief 1792Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   185      IfxGeth_QueueSize_2048Bytes,    /**< \brief 2048Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   186      IfxGeth_QueueSize_2304Bytes,    /**< \brief 2304Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   187      IfxGeth_QueueSize_2560Bytes,    /**< \brief 2560Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   188      IfxGeth_QueueSize_2816Bytes,    /**< \brief 2816Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   189      IfxGeth_QueueSize_3072Bytes,    /**< \brief 3072Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   190      IfxGeth_QueueSize_3328Bytes,    /**< \brief 3328Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   191      IfxGeth_QueueSize_3584Bytes,    /**< \brief 3584Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   192      IfxGeth_QueueSize_3840Bytes,    /**< \brief 3840Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   193      IfxGeth_QueueSize_4096Bytes,    /**< \brief 4096Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   194      IfxGeth_QueueSize_4352Bytes,    /**< \brief 4352Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   195      IfxGeth_QueueSize_4608Bytes,    /**< \brief 4608Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   196      IfxGeth_QueueSize_4864Bytes,    /**< \brief 4864Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   197      IfxGeth_QueueSize_5120Bytes,    /**< \brief 5120Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   198      IfxGeth_QueueSize_5376Bytes,    /**< \brief 5376Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   199      IfxGeth_QueueSize_5632Bytes,    /**< \brief 5632Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   200      IfxGeth_QueueSize_5888Bytes,    /**< \brief 5888Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   201      IfxGeth_QueueSize_6144Bytes,    /**< \brief 6144Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   202      IfxGeth_QueueSize_6400Bytes,    /**< \brief 6400Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   203      IfxGeth_QueueSize_6656Bytes,    /**< \brief 6656Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   204      IfxGeth_QueueSize_6912Bytes,    /**< \brief 6912Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   205      IfxGeth_QueueSize_7168Bytes,    /**< \brief 7168Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   206      IfxGeth_QueueSize_7424Bytes,    /**< \brief 7424Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   207      IfxGeth_QueueSize_7680Bytes,    /**< \brief 7680Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   208      IfxGeth_QueueSize_7936Bytes,    /**< \brief 7936Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   209      IfxGeth_QueueSize_8192Bytes     /**< \brief 8192Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   210  } IfxGeth_QueueSize;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   212  /** \brief Receive Arbitration Algorithm for Rx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   213   * Definition in MTL_OPERATION_MODE.B.RAA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   217      IfxGeth_RxArbitrationAlgorithm_sp  = 0, /**< \brief Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   218      IfxGeth_RxArbitrationAlgorithm_wsp = 1  /**< \brief Weighted Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   219  } IfxGeth_RxArbitrationAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   221  /** \brief Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   225      IfxGeth_RxDmaChannel_0,     /**< \brief Rx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   226      IfxGeth_RxDmaChannel_1,     /**< \brief Rx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   227      IfxGeth_RxDmaChannel_2,     /**< \brief Rx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   228      IfxGeth_RxDmaChannel_3      /**< \brief Rx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   229  } IfxGeth_RxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   230  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   231  /** \brief Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   235      IfxGeth_RxMtlQueue_0,     /**< \brief Rx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   236      IfxGeth_RxMtlQueue_1,     /**< \brief Rx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   237      IfxGeth_RxMtlQueue_2,     /**< \brief Rx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   238      IfxGeth_RxMtlQueue_3      /**< \brief Rx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   239  } IfxGeth_RxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   241  /** \brief Geth service request index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   242   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   243  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   244  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   245      IfxGeth_ServiceRequest_0,     /**< \brief Service Request SR0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   246      IfxGeth_ServiceRequest_1,     /**< \brief Service Request SR1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   247      IfxGeth_ServiceRequest_2,     /**< \brief Service Request SR2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   248      IfxGeth_ServiceRequest_3,     /**< \brief Service Request SR3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   249      IfxGeth_ServiceRequest_4,     /**< \brief Service Request SR4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   250      IfxGeth_ServiceRequest_5,     /**< \brief Service Request SR5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   251      IfxGeth_ServiceRequest_6,     /**< \brief Service Request SR6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   252      IfxGeth_ServiceRequest_7,     /**< \brief Service Request SR7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   253      IfxGeth_ServiceRequest_8,     /**< \brief Service Request SR8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   254      IfxGeth_ServiceRequest_9      /**< \brief Service Request SR9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   255  } IfxGeth_ServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   257  /** \brief Tx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   261      IfxGeth_TxDmaChannel_0,     /**< \brief Tx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   262      IfxGeth_TxDmaChannel_1,     /**< \brief Tx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   263      IfxGeth_TxDmaChannel_2,     /**< \brief Tx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   264      IfxGeth_TxDmaChannel_3      /**< \brief Tx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   265  } IfxGeth_TxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   267  /** \brief Tx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   268   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   269  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   270  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   271      IfxGeth_TxMtlQueue_0,     /**< \brief Tx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   272      IfxGeth_TxMtlQueue_1,     /**< \brief Tx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   273      IfxGeth_TxMtlQueue_2,     /**< \brief Tx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   274      IfxGeth_TxMtlQueue_3      /**< \brief Tx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   275  } IfxGeth_TxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   277  /** \brief Tx Scheduling Algorithm for Tx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   278   * Definition in MTL_OPERATION_MODE.B.SCHALG
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   280  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   281  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   282      IfxGeth_TxSchedulingAlgorithm_wrr = 0,  /**< \brief WRR Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   283      IfxGeth_TxSchedulingAlgorithm_sp  = 3   /**< \brief Strict Priority Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   284  } IfxGeth_TxSchedulingAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   288  /** \brief Duplex Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   289   * Definintion in MAC_CONFIGURATION.B.DM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   291  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   292  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   293      IfxGeth_DuplexMode_halfDuplex,  /**< \brief Half Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   294      IfxGeth_DuplexMode_fullDuplex   /**< \brief Full Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   295  } IfxGeth_DuplexMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   297  /** \brief Loopback Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   298   * Definition in MAC_CONFIGURATION.B.LM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   302      IfxGeth_LoopbackMode_disable,  /**< \brief Disable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   303      IfxGeth_LoopbackMode_enable    /**< \brief Enable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   304  } IfxGeth_LoopbackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   306  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   307  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   308  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   310  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   311   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   312  /** \brief Bit Fields of RDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   314  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   316      uint32 RTSL : 32;     /**< \brief Receive Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   317  } IfxGeth_RxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   319  /** \brief Bit Fields of RDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   321  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   323      uint32 RTSH : 32;     /**< \brief Receive Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   324  } IfxGeth_RxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   326  /** \brief Bit Fields of RDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   328  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   330      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   331  } IfxGeth_RxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   333  /** \brief Bit Fields of RDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   334   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   335  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   337      uint32 reserved_0 : 29;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   338      uint32 DE : 1;              /**< \brief Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   339      uint32 CTXT : 1;            /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   340      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   341  } IfxGeth_RxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   343  /** \brief Bit Fields of RDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   344   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   345  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   346  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   347      uint32 BUF1AP : 32;     /**< \brief Header or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   348  } IfxGeth_RxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   349  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   350  /** \brief Bit Fields of RDES0 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   352  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   354      uint32 OVT : 16;     /**< \brief Outer VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   355      uint32 IVT : 16;     /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   356  } IfxGeth_RxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   358  /** \brief Bit Fields of RDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   359   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   360  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   361  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   362      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   363  } IfxGeth_RxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   365  /** \brief Bit Fields of RDES1 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   367  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   369      uint32 PT : 3;       /**< \brief Payload Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   370      uint32 IPHE : 1;     /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   371      uint32 IP4 : 1;      /**< \brief IPV4 Header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   372      uint32 IP6 : 1;      /**< \brief IPv6 header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   373      uint32 IPCB : 1;     /**< \brief IP Checksum Bypassed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   374      uint32 IPCE : 1;     /**< \brief IP Payload Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   375      uint32 PMT : 4;      /**< \brief PTP Message Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   376      uint32 PFT : 1;      /**< \brief PTP Packet Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   377      uint32 PV : 1;       /**< \brief PTP Version */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   378      uint32 TSA : 1;      /**< \brief Timestamp Available */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   379      uint32 TD : 1;       /**< \brief Timestamp Dropped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   380      uint32 OPC : 16;     /**< \brief OAM Sub-Type Code, or MAC Control Packet opcode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   381  } IfxGeth_RxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   383  /** \brief Bit Fields of RDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   384   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   385  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   386  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   387      uint32 BUF2AP : 32;     /**< \brief Buffer 2 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   388  } IfxGeth_RxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   390  /** \brief Bit Fields of RDES2 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   392  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   394      uint32 HL : 10;             /**< \brief L3/L4 Header Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   395      uint32 ARPNR : 1;           /**< \brief ARP Reply Not Generated */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   396      uint32 reserved_11 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   397      uint32 ITS : 1;             /**< \brief Inner VLAN Tag Filter Status (ITS) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   398      uint32 OTS : 1;             /**< \brief VLAN Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   399      uint32 SAF : 1;             /**< \brief SA Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   400      uint32 DAF : 1;             /**< \brief Destination Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   401      uint32 HF : 1;              /**< \brief Hash Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   402      uint32 MADRM : 8;           /**< \brief MAC Address Match or Hash Value */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   403      uint32 L3FM : 1;            /**< \brief Layer 3 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   404      uint32 L4FM : 1;            /**< \brief Layer 4 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   405      uint32 L3L4FM : 3;          /**< \brief Layer 3 and Layer 4 Filter Number Matched */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   406  } IfxGeth_RxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   408  /** \brief Bit Fields of RDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   409   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   410  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   412      uint32 reserved_0 : 24;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   413      uint32 BUF1V : 1;           /**< \brief Buffer 1 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   414      uint32 BUF2V : 1;           /**< \brief Buffer 2 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   415      uint32 reserved_27 : 4;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   416      uint32 IOC : 1;             /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   417      uint32 OWN : 1;             /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   418  } IfxGeth_RxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   420  /** \brief Bit Fields of RDES3 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   422  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   424      uint32 PL : 15;      /**< \brief Packet Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   425      uint32 ES : 1;       /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   426      uint32 LT : 3;       /**< \brief Length/Type Field */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   427      uint32 DE : 1;       /**< \brief Dribble Bit Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   428      uint32 RE : 1;       /**< \brief Receive Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   429      uint32 OE : 1;       /**< \brief Overflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   430      uint32 RWT : 1;      /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   431      uint32 GP : 1;       /**< \brief Giant Packet */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   432      uint32 CE : 1;       /**< \brief CRC Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   433      uint32 RS0V : 1;     /**< \brief Receive Status RDES0 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   434      uint32 RS1V : 1;     /**< \brief Receive Status RDES1 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   435      uint32 RS2V : 1;     /**< \brief Receive Status RDES2 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   436      uint32 LD : 1;       /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   437      uint32 FD : 1;       /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   438      uint32 CTXT : 1;     /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   439      uint32 OWN : 1;      /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   440  } IfxGeth_RxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   442  /** \brief Bit Fields of TDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   443   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   444  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   445  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   446      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   447  } IfxGeth_TxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   448  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   449  /** \brief Bit Fields of TDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   450   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   451  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   452  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   453      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   454  } IfxGeth_TxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   456  /** \brief Bit Fields of TDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   458  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   460      uint32 MSS : 14;            /**< \brief Maximum Segment Size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   461      uint32 reserved_14 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   462      uint32 IVT : 16;            /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   463  } IfxGeth_TxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   465  /** \brief Bit Fields of TDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   466   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   467  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   468  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   469      uint32 VT : 16;             /**< \brief VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   470      uint32 VLTV : 1;            /**< \brief VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   471      uint32 IVLTV : 1;           /**< \brief Inner VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   472      uint32 IVTIR : 2;           /**< \brief Inner VLAN Tag Insert or Replace */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   473      uint32 reserved_20 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   474      uint32 CDE : 1;             /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   475      uint32 reserved_24 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   476      uint32 TCMSSV : 1;          /**< \brief One-Step Timestamp Correction Input or MSS Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   477      uint32 OSTC : 1;            /**< \brief One-Step Timestamp Correction Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   478      uint32 reserved_28 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   479      uint32 CTXT : 1;            /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   480      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   481  } IfxGeth_TxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   483  /** \brief Bit Fields of TDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   484   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   485  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   486  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   487      uint32 BUF1AP : 32;     /**< \brief Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   488  } IfxGeth_TxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   490  /** \brief Bit Fields of TDES0 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   491   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   492  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   493  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   494      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   495  } IfxGeth_TxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   496  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   497  /** \brief Bit Fields of TDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   499  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   500  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   501      uint32 BUF2AP : 32;     /**< \brief Buffer 2 or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   502  } IfxGeth_TxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   503  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   504  /** \brief Bit Fields of TDES1 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   505   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   506  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   507  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   508      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   509  } IfxGeth_TxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   511  /** \brief Bit Fields of TDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   512   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   513  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   514  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   515      uint32 B1L : 14;          /**< \brief Header Length or Buffer 1 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   516      uint32 VTIR : 2;          /**< \brief VLAN Tag Insertion or Replacement */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   517      uint32 B2L : 14;          /**< \brief Buffer 2 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   518      uint32 TTSE_TMWD : 1;     /**< \brief Transmit Timestamp Enable or External TSO Memory Write Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   519      uint32 IOC : 1;           /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   520  } IfxGeth_TxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   522  /** \brief Bit Fields of TDES2 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   524  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   526      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   527  } IfxGeth_TxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   529  /** \brief Bit Fields of TDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   530   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   531  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   532  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   533      uint32 FL_TPL : 15;         /**< \brief Packet Length or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   534      uint32 TPL : 1;             /**< \brief Reserved or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   535      uint32 CIC_TPL : 2;         /**< \brief Checksum Insertion Control or TCP Payload LengthThese bits control the checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   536      uint32 TSE : 1;             /**< \brief TCP Segmentation Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   537      uint32 SLOTNUM_THL : 4;     /**< \brief SLOTNUM: Slot Number Control Bits in AV Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   538      uint32 SAIC : 3;            /**< \brief SA Insertion Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   539      uint32 CPC : 2;             /**< \brief CRC Pad Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   540      uint32 LD : 1;              /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   541      uint32 FD : 1;              /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   542      uint32 CTXT : 1;            /**< \brief Context TypeThis bit should be set to 1'b0 for normal descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   543      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   544  } IfxGeth_TxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   546  /** \brief Bit Fields of TDES3 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   548  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   550      uint32 IHE : 1;              /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   551      uint32 DB : 1;               /**< \brief Deferred Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   552      uint32 UF : 1;               /**< \brief Underflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   553      uint32 ED : 1;               /**< \brief Excessive Deferral */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   554      uint32 CC : 4;               /**< \brief Collision Count */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   555      uint32 EC : 1;               /**< \brief Excessive Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   556      uint32 LC : 1;               /**< \brief Late Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   557      uint32 NC : 1;               /**< \brief No Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   558      uint32 LOC : 1;              /**< \brief Loss of Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   559      uint32 PCE : 1;              /**< \brief Payload Checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   560      uint32 FF : 1;               /**< \brief Packet Flushed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   561      uint32 JT : 1;               /**< \brief Jabber Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   562      uint32 ES : 1;               /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   563      uint32 reserved_16 : 1;      /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   564      uint32 TTSS : 1;             /**< \brief Tx Timestamp Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   565      uint32 reserved_18 : 10;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   566      uint32 LD : 1;               /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   567      uint32 FD : 1;               /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   568      uint32 CTXT : 1;             /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   569      uint32 OWN : 1;              /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   570  } IfxGeth_TxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   572  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   574  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   575   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   576  /** \brief RDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   577   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   578  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   580      IfxGeth_RxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   581      IfxGeth_RxDescr0_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   582      IfxGeth_RxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   583      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   584  } IfxGeth_RxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   586  /** \brief RDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   588  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   589  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   590      IfxGeth_RxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   591      IfxGeth_RxDescr1_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   592      IfxGeth_RxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   593      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   594  } IfxGeth_RxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   596  /** \brief RDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   597   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   598  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   599  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   600      IfxGeth_RxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   601      IfxGeth_RxDescr2_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   602      IfxGeth_RxContextDescr2_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   603      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   604  } IfxGeth_RxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   605  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   606  /** \brief RDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   607   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   608  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   610      IfxGeth_RxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   611      IfxGeth_RxDescr3_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   612      IfxGeth_RxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   613      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   614  } IfxGeth_RxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   616  /** \brief TDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   617   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   618  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   619  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   620      IfxGeth_TxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   621      IfxGeth_TxDescr0_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   622      IfxGeth_TxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   623      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   624  } IfxGeth_TxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   626  /** \brief TDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   628  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   630      IfxGeth_TxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   631      IfxGeth_TxDescr1_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   632      IfxGeth_TxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   633      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   634  } IfxGeth_TxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   636  /** \brief TDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   637   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   638  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   640      IfxGeth_TxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   641      IfxGeth_TxDescr2_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   642      IfxGeth_TxContextDescr2_Bits C;       /**< \brief COntext Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   643      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   644  } IfxGeth_TxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   646  /** \brief TDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   647   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   648  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   649  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   650      IfxGeth_TxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   651      IfxGeth_TxDescr3_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   652      IfxGeth_TxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   653      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   654  } IfxGeth_TxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   656  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   657  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   658  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   659   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   660  /** \brief Rx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   661   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   662  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   663  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   664      IfxGeth_RxDescr0 RDES0;       /**< \brief Rx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   665      IfxGeth_RxDescr1 RDES1;       /**< \brief Rx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   666      IfxGeth_RxDescr2 RDES2;       /**< \brief Rx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   667      IfxGeth_RxDescr3 RDES3;       /**< \brief Rx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   668  } IfxGeth_RxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   670  /** \brief Tx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   671   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   672  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   673  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   674      IfxGeth_TxDescr0 TDES0;       /**< \brief Tx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   675      IfxGeth_TxDescr1 TDES1;       /**< \brief Tx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   676      IfxGeth_TxDescr2 TDES2;       /**< \brief Tx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   677      IfxGeth_TxDescr3 TDES3;       /**< \brief Tx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   678  } IfxGeth_TxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   680  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   681  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   682  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   683   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   684  /** \brief Rx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   685   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   686  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   687  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   688      volatile IfxGeth_RxDescr descr[IFXGETH_MAX_RX_DESCRIPTORS];       /**< \brief list of RX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   689  } IfxGeth_RxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   691  /** \brief Tx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   692   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   693  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   694  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   695      volatile IfxGeth_TxDescr descr[IFXGETH_MAX_TX_DESCRIPTORS];       /**< \brief list of TX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   696  } IfxGeth_TxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   697  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   698  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   700  /** \addtogroup IfxLld_Geth_Std_MAC_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   701   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   703  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   704  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   705  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   706  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   707  /** \brief Disables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   708   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   709   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   710   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   711  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   713  /** \brief Disables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   714   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   715   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   716   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   717  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   719  /** \brief Enables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   720   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   721   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   722   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   723  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   725  /** \brief Enables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   726   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   727   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   728   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   729  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   731  /** \brief Enables / Disables Passing of All Multicast packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   732   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   733   * \param enabled Pass All Multicast enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   734   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   735   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   736  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   737  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   738  /** \brief Enables / Disables CRC Checking for Received Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   739   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   740   * \param enabled CRC Checking for Received Packets enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   741   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   742   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   743  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   745  /** \brief Enables/Disables the Automatic Pad or CRC Stripping for frames less than 1536 bytes and \n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   746   *     CRC stripping for Type packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   747   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   748   * \param acsEnabled Automatic Pad or CRC Stripping enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   749   * \param cstEnabled CRC Stripping for Type packets enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   750   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   751   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   752  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   754  /** \brief Sets the Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   755   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   756   * \param mode Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   757   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   758   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   759  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   761  /** \brief Sets the Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   762   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   763   * \param length Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   764   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   765   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   766  IFX_INLINE void IfxGeth_mac_setPreambleLength(Ifx_GETH *gethSFR, IfxGeth_PreambleLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   768  /** \brief Enables / Disables Promiscuous Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   769   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   770   * \param enabled Promiscuous Mode enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   771   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   772   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   773  IFX_INLINE void IfxGeth_mac_setPromiscuousMode(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   775  /** \brief Set the priorities for Rx queues for mapping tagged packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   776   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   777   * \param channel Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   778   * \param priorities Rx queue priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   779   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   780   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   781  IFX_INLINE void IfxGeth_mac_setVlanPriorityQueueRouting(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint8 priorities);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   782  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   783  /** \brief Enable / Disable Queue Insertion
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   784   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   785   * \param enable config parameter TRUE: enabled/ FALSE: disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   786   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   787   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   788  IFX_INLINE void IfxGeth_mac_setQueueVlanInsertion(Ifx_GETH *gethSFR, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   789  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   790  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   791  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   792  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   793  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   794  /** \brief Sets the Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   795   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   796   * \param speed Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   797   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   798   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   799  IFX_EXTERN void IfxGeth_mac_setLineSpeed(Ifx_GETH *gethSFR, IfxGeth_LineSpeed speed);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   801  /** \brief Sets the MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   802   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   803   * \param macAddress MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   804   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   805   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   806  IFX_EXTERN void IfxGeth_mac_setMacAddress(Ifx_GETH *gethSFR, uint8 *macAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   807  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   808  /** \brief Writes to Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   809   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   810   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   811   * \param vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   812   * \return TRUE if write was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   813   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   814  IFX_EXTERN boolean IfxGeth_mac_writeQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   816  /** \brief Reads from Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   817   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   818   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   819   * \param const vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   820   * \return TRUE if read was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   821   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   822  IFX_EXTERN boolean IfxGeth_mac_readQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 *const vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   823  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   824  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   825  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   826  /** \addtogroup IfxLld_Geth_Std_Module_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   827   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   829  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   830  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   831  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   833  /** \brief Returns the status of whether clock for GETH module is enabled or diabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   834   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   835   * \return Status:\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   836   * TRUE : if module is enabled\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   837   * FALSE : if module is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   838   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   839  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   841  /** \brief Sets the External Phy Interface mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   842   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   843   * \param mode PHY Interface Mode (MII/RGMII/RMII)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   844   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   845   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   846  IFX_INLINE void IfxGeth_setPhyInterfaceMode(Ifx_GETH *gethSFR, IfxGeth_PhyInterfaceMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   847  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   848  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   849  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   850  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   851  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   852  /** \brief Disables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   853   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   854   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   855   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   856  IFX_EXTERN void IfxGeth_disableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   858  /** \brief Enables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   859   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   860   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   861   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   862  IFX_EXTERN void IfxGeth_enableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   863  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   864  /** \brief Returns the Src Pointer of the selected GETH service request node
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   865   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   866   * \param serviceRequest Service Request number
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   867   * \return pointer to Src register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   868   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   869  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGeth_getSrcPointer(Ifx_GETH *gethSFR, IfxGeth_ServiceRequest serviceRequest);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   870  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   871  /** \brief resets Ethernet kernel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   872   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   873   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   874   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   875  IFX_EXTERN void IfxGeth_resetModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   876  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   877  /** \brief API to get the resource index of the GETH specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   878   * \param geth Pointer to Geth register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   879   * \return geth resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   881  IFX_EXTERN IfxGeth_Index IfxGeth_getIndex(Ifx_GETH *geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   883  /** \brief Get the address of the specified GETH resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   884   * \param geth Module index of the GETH
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   885   * \return GETH module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   887  IFX_EXTERN Ifx_GETH *IfxGeth_getAddress(IfxGeth_Index geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   889  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   890  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   891  /** \addtogroup IfxLld_Geth_Std_MTL_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   892   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   894  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   895  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   896  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   897  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   898  /** \brief Enables the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   899   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   900   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   901   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   902   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   903  IFX_INLINE void IfxGeth_mtl_enableRxQueue(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   904  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   905  /** \brief sets the Rx Arbitration algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   906   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   907   * \param arbitrationAlgorithm Rx Arbitration Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   908   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   909   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   910  IFX_INLINE void IfxGeth_mtl_setRxArbitrationAlgorithm(Ifx_GETH *gethSFR, IfxGeth_RxArbitrationAlgorithm arbitrationAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   911  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   912  /** \brief Sets the selected DMA Channel mapping for the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   913   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   914   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   915   * \param dmaChannel DMA channel for selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   916   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   917   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   918  IFX_INLINE void IfxGeth_mtl_setRxQueueDmaChannelMapping(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_RxDmaChannel dmaChannel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   920  /** \brief Sets the selected Rx Queue for DA based DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   921   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   922   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   923   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   924   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   925   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   926  IFX_INLINE void IfxGeth_mtl_setRxQueueForDaBasedDmaChannel(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   928  /** \brief sets the Tx Scheduling algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   929   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   930   * \param schedulingAlgorithm Tx Scheduling Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   931   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   932   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   933  IFX_INLINE void IfxGeth_mtl_setTxSchedulingAlgorithm(Ifx_GETH *gethSFR, IfxGeth_TxSchedulingAlgorithm schedulingAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   934  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   935  /** \brief Enable and set queue ID to route packets failing unicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   936   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   937   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   938   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   939   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   940  IFX_INLINE void IfxGeth_mtl_enableUnicastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   941  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   942  /** \brief Disable queuing of packets failing unicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   943   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   944   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   945   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   946  IFX_INLINE void IfxGeth_mtl_disableUnicastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   947  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   948  /** \brief Enable and set queue ID to route packets failing multicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   949   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   950   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   951   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   952   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   953  IFX_INLINE void IfxGeth_mtl_enableMulticastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   954  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   955  /** \brief Disable queuing of packets failing multicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   956   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   957   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   958   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   959  IFX_INLINE void IfxGeth_mtl_disableMulticastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   961  /** \brief Enable and set queue ID to route packets failing VLAN tag filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   962   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   963   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   964   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   965   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   966  IFX_INLINE void IfxGeth_mtl_enableVlanFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   967  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   968  /** \brief Disable queuing of packets failing VLAN tag filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   969   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   970   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   971   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   972  IFX_INLINE void IfxGeth_mtl_disableVlanFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   974  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   975  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   976  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   977  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   978  /** \brief Clears all the Mtl interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   979   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   980   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   981   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   982   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   983  IFX_EXTERN void IfxGeth_mtl_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   984  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   985  /** \brief Clears the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   986   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   987   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   988   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   989   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   990   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   991  IFX_EXTERN void IfxGeth_mtl_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   992  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   993  /** \brief Disables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   994   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   995   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   996   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   997   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   998   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   999  IFX_EXTERN void IfxGeth_mtl_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1001  /** \brief Enables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1002   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1003   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1004   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1005   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1007  IFX_EXTERN void IfxGeth_mtl_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1009  /** \brief Enables the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1010   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1011   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1012   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1013   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1014  IFX_EXTERN void IfxGeth_mtl_enableTxQueue(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1016  /** \brief Returns the status of selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1017   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1018   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1019   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1020   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1021   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1022   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1023  IFX_EXTERN boolean IfxGeth_mtl_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1024  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1025  /** \brief Sets the Receive Forward Error Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1026   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1027   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1028   * \param enabled Enable/Disable Receive Forward Error Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1029   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1031  IFX_EXTERN void IfxGeth_mtl_setRxForwardErrorPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1033  /** \brief Sets the Receive Forward Undersized Good Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1034   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1035   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1036   * \param enabled Enable/Disable Receive Forward Undersized Good Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1037   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1038   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1039  IFX_EXTERN void IfxGeth_mtl_setRxForwardUndersizedGoodPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1040  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1041  /** \brief Sets the size of the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1042   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1043   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1044   * \param queueSize Rx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1045   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1046   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1047  IFX_EXTERN void IfxGeth_mtl_setRxQueueSize(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1048  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1049  /** \brief Sets the Receive Store And Forward for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1050   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1051   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1052   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1053   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1054   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1055  IFX_EXTERN void IfxGeth_mtl_setRxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1056  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1057  /** \brief Sets the size of the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1058   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1059   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1060   * \param queueSize Tx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1061   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1062   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1063  IFX_EXTERN void IfxGeth_mtl_setTxQueueSize(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1065  /** \brief Sets the Transmit Store And Forward for teh selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1066   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1067   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1068   * \param enabled Enable/Disable Transmit Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1069   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1070   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1071  IFX_EXTERN void IfxGeth_mtl_setTxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1072  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1073  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1074  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1075  /** \addtogroup IfxLld_Geth_Std_DMA_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1076   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1077  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1078  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1079  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1080  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1081  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1082  /** \brief Applies a software reset of MAC and DMA controller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1083   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1084   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1085   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1086  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1087  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1088  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1089   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1090   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1091   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1092   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1093  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1094  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1095  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1096   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1097   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1098   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1099   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1101  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1102  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1103  /** \brief Disables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1104   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1105   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1106   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1107   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1108   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1109  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1110  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1111  /** \brief Enables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1112   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1113   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1114   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1115   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1116   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1117  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1118  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1119  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1120   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1121   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1122   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1123   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1124   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1125   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1126  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1127  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1128  /** \brief Wiats until software reset of MAC and DMA controller is done or until timout.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1129   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1130   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1131  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1132  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1133  /** \brief Enables/Disables Address aligned beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1134   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1135   * \param enabled Enable/Disable Address Aligned Beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1136   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1137   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1138  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1139  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1140  /** \brief Enables/Disables Fixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1141   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1142   * \param enabled Enable/Disable Fixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1144   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1145  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1146  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1147  /** \brief Enables/Disables Mixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1148   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1149   * \param enabled Enable/Disable Mixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1151   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1152  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1154  /** \brief sets the size of the rx buffers in descriptors for selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1155   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1156   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1157   * \param size Rx Buffers size (applies for both buffers)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1159   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1160  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1161  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1162  /** \brief sets the base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1163   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1164   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1165   * \param address base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1166   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1167   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1168  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1169  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1170  /** \brief sets the Length of the Rx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1171   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1172   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1173   * \param length Length of the ring (no of total Rx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1174   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1176  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1177  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1178  /** \brief sets the address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1179   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1180   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1181   * \param address address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1182   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1183   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1184  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1185  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1186  /** \brief sets the programmable burst length of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1187   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1188   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1189   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1190   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1191   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1192  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1193  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1194  /** \brief sets the base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1195   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1196   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1197   * \param address base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1198   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1199   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1200  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1201  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1202  /** \brief sets the Length of the Tx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1203   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1204   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1205   * \param length Length of the ring (no of total Tx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1206   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1207   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1208  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1209  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1210  /** \brief sets the address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1211   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1212   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1213   * \param address address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1214   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1215   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1216  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1217  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1218  /** \brief sets the programmable burst length of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1219   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1220   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1221   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1222   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1223   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1224  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1225  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1226  /** \brief starts the receiver of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1227   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1228   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1229   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1230   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1231  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1232  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1233  /** \brief starts the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1234   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1235   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1236   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1237   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1238  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1239  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1240  /** \brief Stops the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1241   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1242   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1244   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1245  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1246  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1247  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1248  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1249  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1251  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1252  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1253  /** \brief Enables/Disables the MAC operation in the loopback mode at GMII or MII
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1254   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1255   * \param mode Loopback Mode Enable / Disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1257   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1258  IFX_INLINE void IfxGeth_mac_setLoopbackMode(Ifx_GETH *gethSFR, IfxGeth_LoopbackMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1259  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1260  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1261  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1262  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1263  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1264  /** \brief Reads a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1265   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1266   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1267   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1268   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1269   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1270  IFX_EXTERN void IfxGeth_phy_Clause22_readMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1271  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1272  /** \brief Writes to a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1273   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1274   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1275   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1277   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1278  IFX_EXTERN void IfxGeth_Phy_Clause22_writeMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1279  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1280  /** \brief Reads a MDIO register of Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1281   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1282   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1283   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1284   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1285   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1286   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1287  IFX_EXTERN void IfxGeth_phy_Clause45_readMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1288  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1289  /** \brief Writes to a MDIO register for Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1290   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1291   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1292   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1293   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1294   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1295   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1296  IFX_EXTERN void IfxGeth_Phy_Clause45_writeMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1297  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1298  /** \brief Sets the maximum size of the packet
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1299   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1300   * \param maxPacketSize Minimum size of the frame beyond which giant packet status is set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1301   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1302   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1303  IFX_EXTERN void IfxGeth_mac_setMaxPacketSize(Ifx_GETH *gethSFR, uint16 maxPacketSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1304  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1305  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1306  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1307  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1308  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1309  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1310  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1311      gethSFR->DMA_MODE.B.SWR = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1312  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1313  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1314  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1315  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1316  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1317      gethSFR->DMA_CH[channelId].STATUS.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1318  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1319  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1320  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1321  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1323      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1324      gethSFR->DMA_CH[channelId].STATUS.U = value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1325  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1326  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1327  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1328  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1330      uint32 value = ~(1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1331      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U &= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1332  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1333  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1334  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1335  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1337      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1338      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U |= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1339  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1340  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1341  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1342  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1343  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1344      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1345      return gethSFR->DMA_CH[channelId].STATUS.U & (Ifx_UReg_32Bit)value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1346  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1347  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1348  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1349  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1350  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1351      return gethSFR->DMA_MODE.B.SWR == 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1352  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1353  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1354  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1355  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1356  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1357      gethSFR->DMA_SYSBUS_MODE.B.AAL = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1358  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1359  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1360  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1361  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1362  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1363      gethSFR->DMA_SYSBUS_MODE.B.FB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1364  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1365  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1366  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1367  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1369      gethSFR->DMA_SYSBUS_MODE.B.MB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1370  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1371  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1372  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1373  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1374  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1375      /* [RBSZ_13_Y:RBSZ_X_0] represents the size of the Rx buffer*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1376      gethSFR->DMA_CH[channel].RX_CONTROL.B.RBSZ_13_Y = (uint32)((size >> 2) & IFX_GETH_DMA_CH_RX_CONTROL_RBSZ_13_Y_MSK);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1377  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1378  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1379  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1380  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1381  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1382      gethSFR->DMA_CH[channel].RXDESC_LIST_ADDRESS.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1383  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1384  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1385  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1386  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1387  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1388      gethSFR->DMA_CH[channel].RXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1389  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1390  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1391  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1392  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1394      gethSFR->DMA_CH[channel].RXDESC_TAIL_POINTER.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1395  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1396  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1397  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1398  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1399  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1400      gethSFR->DMA_CH[channel].RX_CONTROL.B.RXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1401  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1402  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1403  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1404  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1405  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1406      gethSFR->DMA_CH[channel].TXDESC_LIST_ADDRESS.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1407  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1409  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1410  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1412      gethSFR->DMA_CH[channel].TXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1413  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1414  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1415  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1416  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1417  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1418      gethSFR->DMA_CH[channel].TXDESC_TAIL_POINTER.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1419  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1420  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1421  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1422  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1424      gethSFR->DMA_CH[channel].TX_CONTROL.B.TXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1425  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1426  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1427  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1428  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1429  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1430      gethSFR->DMA_CH[channel].RX_CONTROL.B.SR = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1431  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1432  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1433  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1434  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1435  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1436      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1437  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1438  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1439  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1440  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1441  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1442      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1443  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1444  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1445  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1446  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1447  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1448      return (gethSFR->CLC.B.DISS == 0) ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1449  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1450  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1451  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1452  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1453  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1454      gethSFR->MAC_CONFIGURATION.B.RE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1455  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1456  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1457  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1458  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1460      gethSFR->MAC_CONFIGURATION.B.TE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1461  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1462  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1463  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1464  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1465  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1466      gethSFR->MAC_CONFIGURATION.B.RE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1467  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1468  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1469  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1470  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1471  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1472      gethSFR->MAC_CONFIGURATION.B.TE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1473  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1474  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1475  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1476  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1477  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1478      gethSFR->MAC_PACKET_FILTER.B.PM = ((enabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1479  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1480  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1481  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1482  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1483  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1484      gethSFR->MAC_EXT_CONFIGURATION.B.DCRCC = ((enabled == 1) ? 0 : 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1485  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1487  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1488  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1489  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1490      gethSFR->MAC_CONFIGURATION.B.ACS = ((acsEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1491      gethSFR->MAC_CONFIGURATION.B.CST = ((cstEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1492  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1494  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1495  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1496  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1497      gethSFR->MAC_CONFIGURATION.B.DM = mode;
	st.b	[a15]1,d15
.L130:
	ld.bu	d15,[a2]
.L371:
	ld.a	a4,[a13]
.L372:
	extr.u	d15,d15,#1,#2
.L373:
	jne	d15,#0,.L12
.L374:
	mov	d4,#0
	j	.L13
.L12:
	ld.bu	d15,[a2]
	extr.u	d15,d15,#1,#2
.L375:
	jne	d15,#1,.L14
.L376:
	mov	d4,#1
	j	.L15
.L14:
	mov	d4,#2
.L13:
.L15:
	j	IfxGeth_mac_setLineSpeed
.L99:
	
__low_level_init_function_end:
	.size	low_level_init,__low_level_init_function_end-low_level_init
.L73:
	; End of function
	
	.sdecl	'.text.netif.low_level_output',code,cluster('low_level_output')
	.sect	'.text.netif.low_level_output'
	.align	2
	

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   277  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   278  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   279   * This function should do the actual transmission of the packet. The packet is
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   280   * contained in the pbuf that is passed to the function. This pbuf
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   281   * might be chained.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   282   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   283   * @param netif the lwip network interface structure for this ethernetif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   284   * @param p the MAC packet to send (e.g. IP packet including MAC addresses and type)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   285   * @return ERR_OK if the packet could be sent
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   286   *         an err_t value if the packet couldn't be sent
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   287   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   288   * @note Returning ERR_MEM here if a DMA queue of your MAC is full can lead to
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   289   *       strange results. You might consider waiting for space in the DMA queue
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   290   *       to become availale since the stack doesn't retry to send a packet
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   291   *       dropped because of memory failure (except for the TCP timers).
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   292   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   293  static err_t low_level_output(netif_t *netif, pbuf_t *p)
; Function low_level_output
.L46:
low_level_output:	.type	func
	sub.a	a10,#16
.L198:
	mov.aa	a12,a5
.L200:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   294  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   295  	IfxGeth_Eth      *ethernetif = netif->state;
	ld.a	a13,[a4]28
.L201:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   296      struct pbuf *q;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   297  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   298      u16_t        length = p->tot_len;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   299      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE, ("low_level_output (p=%#x)\n", p));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   300  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   301  #if ETH_PAD_SIZE
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   302      pbuf_header(p, -ETH_PAD_SIZE); /* drop the padding word */
	mov	d4,#-2
	mov.aa	a4,a12
.L199:
	call	pbuf_header
.L202:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   303  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   304  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   305      if ((p->type_internal == PBUF_REF) || (p->type_internal == PBUF_ROM))
	ld.bu	d15,[a12]12
.L381:
	mov	d0,#65
.L382:
	jeq	d15,d0,.L16
.L383:
	jne	d15,#1,.L17
.L16:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   306      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   307          // if PBUF_REF or PBUF_ROM, no copy into ethernet RAM buffer is needed.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   308          // see pbuf_alloc_special()
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   309      	IfxGeth_Eth_sendTransmitBuffer(ethernetif, p->tot_len, IfxGeth_TxDmaChannel_0);
	ld.hu	d4,[a12]8
.L384:
	j	.L18
.L17:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1118      } while (tx == NULL_PTR);      (inlined)
.L19:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     2   * \file IfxGeth_Eth.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     3   * \brief GETH ETH details
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     4   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    42   * \defgroup IfxLld_Geth_Eth_Usage How to use the Geth Eth Interface driver?
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    43   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    45   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    46   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    47   * \section IfxLld_Geth_Eth_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    48   * \subsection IfxLld_Geth_Eth_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    50   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    51   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    52   * #include <Geth/Eth/IfxGeth_Eth.h>
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    53   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    55   * \subsection IfxLld_Geth_Eth_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    56   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    57   * Declare the Geth handle and the Data buffers as global variables in your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    58   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    59   * Note: MAC addds 4 bytes FCS at the end of each packet which will be reflected in RX Buffer.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    60   * If the frame size is equal to buffer size then Rx buffer declaration should be as below
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    61   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    62   * uint8 channel0RxBuffer1[IFXGETH_MAX_RX_BUFFER_SIZE+4];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    63   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    64   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    66   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    67   * // used globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    68   * IfxGeth_Eth geth;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    70   * #define IFXGETH_MAX_TX_DESCRIPTORS 4
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    71   * #define IFXGETH_MAX_RX_DESCRIPTORS 4
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    73   * #define IFXGETH_MAX_TX_BUFFER_SIZE 256 // bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    74   * #define IFXGETH_MAX_RX_BUFFER_SIZE 256 // bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    75   * #define IFXGETH_HEADER_LENGTH 14 // words
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    76   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    77   * uint8 channel0TxBuffer1[IFXGETH_MAX_TX_BUFFER_SIZE];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    78   * uint8 channel0RxBuffer1[IFXGETH_MAX_RX_BUFFER_SIZE];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    79   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    80   * const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    81   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    82   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    83   * \subsection IfxLld_Geth_Eth_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    85   * The module initialisation can be done in the same function. Here an example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    87   * // create module config
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    88   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    89   * // Geth instance index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    90   * IfxGeth_Index gethInst;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    92   * // Initialise configuration of module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    93   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    94   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    95   * // Get the Geth instance from Module address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    96   * gethInst = IfxGeth_getIndex(geth[geth_inst].gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    98   * config.phyInterfaceMode = IfxGeth_PhyInterfaceMode_rmii;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    99   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   100   * // MAC core configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   101   * config.macConfig.lineSpeed = IfxGeth_LineSpeed_100Mbps;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   102   * config.macConfig.loopbackMode = IfxGeth_LoopbackMode_disable;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   103   * config.macConfig.macAddress[0] = myMacAddress[0];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   104   * config.macConfig.macAddress[1] = myMacAddress[1];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   105   * config.macConfig.macAddress[2] = myMacAddress[2];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   106   * config.macConfig.macAddress[3] = myMacAddress[3];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   107   * config.macConfig.macAddress[4] = myMacAddress[4];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   108   * config.macConfig.macAddress[5] = myMacAddress[5];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   109   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   110   * // MTL configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   111   * config.mtlConfig.numOfTxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   112   * config.mtlConfig.numOfRxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   113   * config.mtlConfig.txQueueConfig[0].txQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   114   * config.mtlConfig.rxQueueConfig[0].rxQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   115   * config.mtlConfig.rxQueueConfig[0].rxDmaChannelMap        =    IfxEth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   117   * config.dmaConfig.numOfTxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   118   * config.dmaConfig.numOfRxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   119   * config.dmaConfig.txChannel[0].channelId = IfxGeth_TxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   120   * config.dmaConfig.txChannel[0].txDescrList = &IfxGeth_txDescrList[gethInst][0]; //Initialise tx desc list for the Geth instance
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   121   * config.dmaConfig.txChannel[0].txBuffer1StartAddress = &channel0TxBuffer1[0]; // user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   122   * config.dmaConfig.txChannel[0].txBuffer1Size = IFXGETH_MAX_TX_BUFFER_SIZE; // used to calculate the next descriptor  buffer offset
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   123   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   124   * config.dmaConfig.rxChannel[0].channelId = IfxGeth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   125   * config.dmaConfig.rxChannel[0].rxDescrList = &IfxGeth_rxDescrList[gethInst][0]; //Initialise rx desc list for the Geth instance
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   126   * config.dmaConfig.rxChannel[0].rxBuffer1StartAddress = &channel0RxBuffer1[0]; // user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   127   * config.dmaConfig.rxChannel[0].rxBuffer1Size = IFXGETH_MAX_RX_BUFFER_SIZE; // user defined variable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   128   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   129   * config.dmaConfig.txInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   130   * config.dmaConfig.txInterrupt[0].priority = 10;	// priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   131   * config.dmaConfig.txInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   132   * config.dmaConfig.rxInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   133   * config.dmaConfig.rxInterrupt[0].priority = 11;	// priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   134   * config.dmaConfig.rxInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   135   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   136   * // initialise themodule
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   137   * IfxGeth_Eth_initModule(&geth, &config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   139   * // and enable transmitter/receiver
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   140   * IfxGeth_Eth_startTransmitters(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   141   * IfxGeth_Eth_startReceivers(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   142   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   143   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   145   * Note: Application should explicitly configure the system DMA, if system DMA is selected as the service provider for the interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   146   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   147   * The ETH is ready for use now!
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   150   * \section IfxLld_Geth_Eth_DataTransfers Data Transfers
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   151   * \subsection  IfxLld_Geth_Eth_DataTransfers_Transmit Transmission
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   152   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   153   * uint32 payloadLength = 8; // 8 bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   154   * uint32 packetLength = IFXGETH_HEADER_LENGTH + payloadLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   156   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   157   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   158   * // write the header
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   159   * IfxGeth_Eth_writeHeader(&geth, pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   160   * // write the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   161   * uint32 i;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   162   * for(i = IFXGETH_HEADER_LENGTH; i < packetLength; ++i) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   163   *     pTxBuf[i] = i - 13;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   164   * }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   166   * // clear the TX interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   167   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0,IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   168   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   169   * IfxGeth_Eth_sendTransmitBuffer(&geth, packetLength, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   170   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   171   * // wait until buffer has been transmitted
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   172   * while( IfxGeth_dma_isInterruptFlagSet(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) == FALSE );
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   173   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   174   * // clear the TX interrupt status for the next interrupt to come
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   175   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   176   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   177   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   178   * \subsection  IfxLld_Geth_Eth_DataTransfers_Receive Receive
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   179   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   180   * // wait until data is been received
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   181   * while(IfxGeth_Eth_isRxDataAvailable(&geth, IfxGeth_RxDmaChannel_0)!= TRUE);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   182   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   183   * // wake up the receiver and get the recieve buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   184   * uint8 *pRxBuf = (uint8*)IfxGeth_Eth_getReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   186   * // update the descreptor pointer for next packet
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   187   * // Free the receive buffer, enabling it for the further reception
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   188   * IfxGeth_Eth_freeReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   189   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   190   * // data is available in pRxBuf
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   191   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   192   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   193   * \subsection  IfxLld_Geth_Eth_DataTransfers_GiantFrame Giant Frame Transmission
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   194   * Giant frames are supported by ethernet driver.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   195   * By default any frames greater than 1518 bytes are considered as giant frames in the code.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   196   * Giant frames of length 16376 bytes can be transmitted.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   197   * Giant frames of length 16380 bytes can be received by the MAC.(Including the 4 bytes of FCS added by transmitter MAC).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   198   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   199   * The minimum allowed packet size above which the frame is indicated as giant frame is configured as below
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   200   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   201   * In the module initialisation section, make changes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   202   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   203   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   204   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   205   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   206   * config.macConfig.maxPacketSize = 2000;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   207   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   208   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   210   * The above code ensures that any frame of frame size greater than 2000 bytes are set as giant frame in Rx descriptor status.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   211   * Note: This frame size includes the 4 bytes FCS added by the transmitter MAC. Make sure that an Rx buffer has enough space to recieve the giant frame.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   212   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   213   * There are 3 categories under which giant frames can be categoried:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   214   * 1. Frame size = 1518 -  If frame size greater than 1518 is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   215   * 2. Frame size = 2000 -  If frame size greater than 2000 is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   216   * 3. Frame size = 9018 -  If frame size greater than 9018 is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   217   * 4. Any other value Frame size < 16380  - If packet size greater than configured bytes is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   218   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   219   * \subsection  IfxLld_Geth_Eth_Miilite MII lite mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   220   *  MII lite mode is supported .
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   221   *  Application should set the below pins to NULL_PTR to enable the MII lite mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   222   *  IfxGeth_Crs_In     *crs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   223   *  IfxGeth_Col_In     *col
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   224   *  IfxGeth_Rxer_In    *rxEr
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   225   *  IfxGeth_Txer_Out   *txEr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   226   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   227   * \defgroup IfxLld_Geth_Eth ETH
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   228   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   229   * \defgroup IfxLld_Geth_Eth_DataStructures DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   230   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   231   * \defgroup IfxLld_Geth_Eth_MAC_Functions MAC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   232   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   233   * \defgroup IfxLld_Geth_Eth_Module_Functions Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   234   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   235   * \defgroup IfxLld_Geth_Eth_MTL_Functions MTL Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   236   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   237   * \defgroup IfxLld_Geth_Eth_DMA_Functions DMA Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   238   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   239   * \defgroup IfxLld_Geth_Eth_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   240   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   242  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   243  #ifndef IFXGETH_ET_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   244  #define IFXGETH_ET_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   246  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   247  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   248  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   250  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   251  #include "Geth/Std/IfxGeth.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   252  #include "_PinMap/IfxGeth_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   253  #include "IfxPort_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   254  #include "IfxPort_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   257  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   260  /** \addtogroup IfxLld_Geth_Eth_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   261   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   262  /** \brief Interrupt configuration structure for DMA Channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   264  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   266      IfxGeth_DmaChannel channelId;       /**< \brief DMA channel ID (irrespective of TX and Rx for interrupt configuration) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   267      Ifx_Priority       priority;        /**< \brief Interrupt service priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   268      IfxSrc_Tos         provider;        /**< \brief Interrupt service provider */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   269  } IfxGeth_Eth_DmaInterruptConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   271  /** \brief Port pins for MII mode configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   272   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   273  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   274  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   275      IfxGeth_Crs_In     *crs;         /**< \brief pointer to CRS input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   276      IfxGeth_Col_In     *col;         /**< \brief pointer to COL input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   277      IfxGeth_Txclk_In   *txClk;       /**< \brief Pointer to TXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   278      IfxGeth_Rxclk_In   *rxClk;       /**< \brief Pointer to RXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   279      IfxGeth_Rxdv_In    *rxDv;        /**< \brief Pointer to RXDV input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   280      IfxGeth_Rxer_In    *rxEr;        /**< \brief Pointer to RXER input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   281      IfxGeth_Rxd_In     *rxd0;        /**< \brief Pointer to RXD0 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   282      IfxGeth_Rxd_In     *rxd1;        /**< \brief Pointer to RXD1 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   283      IfxGeth_Rxd_In     *rxd2;        /**< \brief Pointer to RXD2 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   284      IfxGeth_Rxd_In     *rxd3;        /**< \brief Pointer to RXD3 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   285      IfxGeth_Txen_Out   *txEn;        /**< \brief Pointer to TXEN output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   286      IfxGeth_Txer_Out   *txEr;        /**< \brief Pointer to TXER output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   287      IfxGeth_Txd_Out    *txd0;        /**< \brief Pointer to TXD0 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   288      IfxGeth_Txd_Out    *txd1;        /**< \brief Pointer to TXD1 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   289      IfxGeth_Txd_Out    *txd2;        /**< \brief Pointer to TXD2 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   290      IfxGeth_Txd_Out    *txd3;        /**< \brief Pointer to TXD3 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   291      IfxGeth_Mdc_Out    *mdc;         /**< \brief Pointer to MDC output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   292      IfxGeth_Mdio_InOut *mdio;        /**< \brief Pointer to MDIO pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   293  } IfxGeth_Eth_MiiPins;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   295  /** \brief Interrupt configuration structure for MTL block
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   296   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   297  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   298  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   299      IfxGeth_ServiceRequest serviceRequest;       /**< \brief Service Request node for MTL interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   300      Ifx_Priority           priority;             /**< \brief Interrupt service priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   301      IfxSrc_Tos             provider;             /**< \brief Interrupt service provider */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   302  } IfxGeth_Eth_MtlInterruptConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   304  /** \brief Port pins for RGMII mode configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   305   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   306  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   307  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   308      IfxGeth_Txclk_Out  *txClk;         /**< \brief Pointer to TXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   309      IfxGeth_Txd_Out    *txd0;          /**< \brief Pointer to TXD0 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   310      IfxGeth_Txd_Out    *txd1;          /**< \brief Pointer to TXD1 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   311      IfxGeth_Txd_Out    *txd2;          /**< \brief Pointer to TXD2 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   312      IfxGeth_Txd_Out    *txd3;          /**< \brief Pointer to TXD3 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   313      IfxGeth_Txctl_Out  *txCtl;         /**< \brief Pointer to TXCTL output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   314      IfxGeth_Rxclk_In   *rxClk;         /**< \brief Pointer to RXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   315      IfxGeth_Rxd_In     *rxd0;          /**< \brief Pointer to RXD0 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   316      IfxGeth_Rxd_In     *rxd1;          /**< \brief Pointer to RXD1 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   317      IfxGeth_Rxd_In     *rxd2;          /**< \brief Pointer to RXD2 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   318      IfxGeth_Rxd_In     *rxd3;          /**< \brief Pointer to RXD3 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   319      IfxGeth_Rxctl_In   *rxCtl;         /**< \brief Pointer to RXCTL input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   320      IfxGeth_Mdc_Out    *mdc;           /**< \brief Pointer to MDC output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   321      IfxGeth_Mdio_InOut *mdio;          /**< \brief Pointer to MDIO pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   322      IfxGeth_Grefclk_In *grefClk;       /**< \brief Pointer to GREFCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   323  } IfxGeth_Eth_RgmiiPins;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   325  /** \brief Port pins for RMII mode configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   326   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   327  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   328  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   329      IfxGeth_Crsdv_In   *crsDiv;       /**< \brief pointer to CRSDIV input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   330      IfxGeth_Refclk_In  *refClk;       /**< \brief Pointer to REFCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   331      IfxGeth_Rxd_In     *rxd0;         /**< \brief Pointer to RXD0 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   332      IfxGeth_Rxd_In     *rxd1;         /**< \brief Pointer to RXD1 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   333      IfxGeth_Mdio_InOut *mdio;         /**< \brief Pointer to MDIO pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   334      IfxGeth_Txd_Out    *txd0;         /**< \brief Pointer to TXD0 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   335      IfxGeth_Mdc_Out    *mdc;          /**< \brief Pointer to MDC output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   336      IfxGeth_Txd_Out    *txd1;         /**< \brief Pointer to TXD1 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   337      IfxGeth_Txen_Out   *txEn;         /**< \brief Pointer to TXEN output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   338  } IfxGeth_Eth_RmiiPins;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   340  /** \brief Configuration sturcture for DMA rx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   342  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   343  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   344      IfxGeth_RxDmaChannel   channelId;                   /**< \brief Rx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   345      IfxGeth_DmaBurstLength maxBurstLength;              /**< \brief Maximum burst length of the channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   346      IfxGeth_RxDescrList   *rxDescrList;                 /**< \brief pointer to RX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   347      uint32                *rxBuffer1StartAddress;       /**< \brief Start address of Rx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   348      uint16                 rxBuffer1Size;               /**< \brief Size of Rx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   349  } IfxGeth_Eth_RxChannelConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   351  /** \brief Rx Queue Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   352   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   353  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   354  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   355      boolean              storeAndForward;                       /**< \brief Receive Store and Forward Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   356      IfxGeth_QueueSize    rxQueueSize;                           /**< \brief Rx Queue size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   357      boolean              forwardErrorPacket;                    /**< \brief Error Packet Forwarding Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   358      boolean              forwardUndersizedGoodPacket;           /**< \brief Undersized Good Packet Forwarding Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   359      boolean              daBasedDmaChannelEnabled;              /**< \brief DA-based DMA Channel Selection Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   360      IfxGeth_RxDmaChannel rxDmaChannelMap;                       /**< \brief Mapped DMA Channel of Rx Queue */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   361      boolean              rxQueueOverflowInterruptEnabled;       /**< \brief Enable/Disable Rx Queue Overflow Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   362  } IfxGeth_Eth_RxQueueConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   363  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   364  /** \brief Configuration sturcture for DMA tx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   366  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   368      IfxGeth_TxDmaChannel   channelId;                   /**< \brief Tx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   369      IfxGeth_DmaBurstLength maxBurstLength;              /**< \brief Maximum burst length of the channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   370      IfxGeth_TxDescrList   *txDescrList;                 /**< \brief pointer to TX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   371      uint32                *txBuffer1StartAddress;       /**< \brief Start address of Tx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   372      uint16                 txBuffer1Size;               /**< \brief Size of Tx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   373  } IfxGeth_Eth_TxChannelConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   375  /** \brief Tx Queue Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   377  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   378  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   379      boolean           storeAndForward;                        /**< \brief Transmit Store and Forward Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   380      IfxGeth_QueueSize txQueueSize;                            /**< \brief Tx Queue size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   381      boolean           txQueueUnderflowInterruptEnabled;       /**< \brief Enable/Disable Tx Queue Underflow Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   382  } IfxGeth_Eth_TxQueueConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   384  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   386  /** \addtogroup IfxLld_Geth_Eth_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   387   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   388  /** \brief Configuration Structure for the DMA initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   390  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   391  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   392      uint32                         numOfTxChannels;                             /**< \brief Number of Tx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   393      uint32                         numOfRxChannels;                             /**< \brief Number of Rx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   394      boolean                        addressAlignedBeatsEnabled;                  /**< \brief Enable/Disable Address Aligned Beats */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   395      boolean                        fixedBurstEnabled;                           /**< \brief Enable/Disable Fixed Burst length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   396      boolean                        mixedBurstEnabled;                           /**< \brief Enable/Disable Mixed Burst length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   397      IfxGeth_Eth_TxChannelConfig    txChannel[IFXGETH_NUM_TX_CHANNELS];          /**< \brief Tx Channels configurations of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   398      IfxGeth_Eth_RxChannelConfig    rxChannel[IFXGETH_NUM_RX_CHANNELS];          /**< \brief Rx Channels configurations of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   399      IfxGeth_Eth_DmaInterruptConfig txInterrupt[IFXGETH_NUM_DMA_CHANNELS];       /**< \brief Transmit Interrupt configuration structure for DMA Channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   400      IfxGeth_Eth_DmaInterruptConfig rxInterrupt[IFXGETH_NUM_DMA_CHANNELS];       /**< \brief Receive Interrupt configuration structure for DMA Channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   401  } IfxGeth_Eth_DmaConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   403  /** \brief Configuration Structure for the MAC initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   405  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   406  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   407      IfxGeth_DuplexMode   duplexMode;          /**< \brief Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   408      IfxGeth_LineSpeed    lineSpeed;           /**< \brief Ethernet Line Speed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   409      IfxGeth_LoopbackMode loopbackMode;        /**< \brief Loopback mode enable/disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   410      uint8                macAddress[6];       /**< \brief MAC address for the ethernet, should be unique in the network */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   411      uint16               maxPacketSize;       /**< \brief Maximum size of the ethernet packet */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   412  } IfxGeth_Eth_MacConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   414  /** \brief Configuration Structure for the MTL initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   416  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   417  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   418      uint32                         numOfTxQueues;                        /**< \brief Number of Tx Queues, will also be used to enable the selected number of queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   419      IfxGeth_TxSchedulingAlgorithm  txSchedulingAlgorithm;                /**< \brief Tx Scheduling Algorithm for Tx queues when no of queues are more than 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   420      uint32                         numOfRxQueues;                        /**< \brief Number of Rx Queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   421      IfxGeth_RxArbitrationAlgorithm rxArbitrationAlgorithm;               /**< \brief Rx Arbitration Algorithm for Rx queues when no of queues are more than 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   422      IfxGeth_Eth_TxQueueConfig      txQueue[IFXGETH_NUM_TX_QUEUES];       /**< \brief Tx queue configurations of selected queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   423      IfxGeth_Eth_RxQueueConfig      rxQueue[IFXGETH_NUM_RX_QUEUES];       /**< \brief Rx queue configurations of selected queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   424      IfxGeth_Eth_MtlInterruptConfig interrupt;                            /**< \brief Interrupt configuration structure for MTL block */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   425  } IfxGeth_Eth_MtlConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   427  /** \brief Configuration structure for pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   428   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   429  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   430  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   431      IFX_CONST IfxGeth_Eth_RmiiPins  *rmiiPins;        /**< \brief Structure for RMII pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   432      IFX_CONST IfxGeth_Eth_RgmiiPins *rgmiiPins;       /**< \brief Structure for RGMII pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   433      IFX_CONST IfxGeth_Eth_MiiPins   *miiPins;         /**< \brief Structure for MII pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   434  } IfxGeth_Eth_PinConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   435  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   436  /** \brief Handle sturcture for DMA rx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   437   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   438  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   439  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   440      IfxGeth_RxDmaChannel      channelId;         /**< \brief Rx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   441      IfxGeth_RxDescrList      *rxDescrList;       /**< \brief pointer to RX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   442      volatile IfxGeth_RxDescr *rxDescrPtr;        /**< \brief Pointer to Rx Descriptor (current descriptor) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   443      uint32                    rxCount;           /**< \brief Number of frames received */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   444  } IfxGeth_Eth_RxChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   445  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   446  /** \brief handle sturcture for DMA tx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   448  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   449  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   450      IfxGeth_TxDmaChannel      channelId;         /**< \brief Tx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   451      IfxGeth_TxDescrList      *txDescrList;       /**< \brief pointer to TX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   452      volatile IfxGeth_TxDescr *txDescrPtr;        /**< \brief Pointer to Tx Descriptor (current descriptor) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   453      uint32                    txCount;           /**< \brief Number of frames transmitted */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   454      uint16                    txBuf1Size;        /**< \brief configured tx buffer 1 size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   455  } IfxGeth_Eth_TxChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   456  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   457  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   458  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   459  /** \addtogroup IfxLld_Geth_Eth_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   460   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   461  /** \brief GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   463  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   464  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   465      Ifx_GETH             *gethSFR;                                  /**< \brief Pointer to GETH register base address */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   466      uint32                numOfTxChannels;                          /**< \brief Number of Tx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   467      uint32                numOfRxChannels;                          /**< \brief Number of Rx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   468      IfxGeth_Eth_TxChannel txChannel[IFXGETH_NUM_TX_CHANNELS];       /**< \brief Tx Channels handle of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   469      IfxGeth_Eth_RxChannel rxChannel[IFXGETH_NUM_RX_CHANNELS];       /**< \brief Rx Channels handle of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   470  } IfxGeth_Eth;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   472  /** \brief Configuration Structure for the Module initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   473   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   474  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   475  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   476      Ifx_GETH                *gethSFR;                /**< \brief Pointer to GETH register base address */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   477      IfxGeth_PhyInterfaceMode phyInterfaceMode;       /**< \brief External Phy Interface RMII Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   478      IfxGeth_Eth_PinConfig    pins;                   /**< \brief COnfiguration structure for Pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   479      IfxGeth_Eth_MacConfig    mac;                    /**< \brief Configuration Structure for the the MAC initialisation */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   480      IfxGeth_Eth_MtlConfig    mtl;                    /**< \brief Configuration Structure for the MTL initialisation */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   481      IfxGeth_Eth_DmaConfig    dma;                    /**< \brief Configuration Structure for the DMA initialisation */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   482  } IfxGeth_Eth_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   484  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   486  /** \brief Configuration Structure for TX Frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   488  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   489  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   490      IfxGeth_TxDmaChannel channelId;          /**< \brief Tx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   491      uint32               packetLength;       /**< \brief the length of the packet to be transmitted in bytes */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   492  } IfxGeth_Eth_FrameConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   494  /** \addtogroup IfxLld_Geth_Eth_MAC_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   495   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   496  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   497  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   498  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   499  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   501  /** \brief Configures the MAC core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   502   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   503   * \param macConfig Configuration Structure for the MAC initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   504   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   506   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   507   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   508   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   509   * IfxGeth_Eth_MacConfig macConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   510   * macConfig.duplexMode = IfxGeth_DuplexMode_fullDuplex;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   511   * macConfig.lineSpeed = IfxGeth_LineSpeed_100Mbps;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   512   * macConfig.loopbackMode = IfxGeth_LoopbackMode_disable;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   513   * macConfig.macAddress =  {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   515   * IfxGeth_Eth_configureMacCore(&geth, &macConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   516   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   517   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   518   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   519  IFX_EXTERN void IfxGeth_Eth_configureMacCore(IfxGeth_Eth *geth, IfxGeth_Eth_MacConfig *macConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   521  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   522  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   523  /** \addtogroup IfxLld_Geth_Eth_Module_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   524   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   526  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   527  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   530  /** \brief Waits for one TX buffer becomes available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   531   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   532   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   533   * retval non NULL_PTR TX buffer is available at the address pointed by the returned value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   534   * retval NULL_PTR TX buffer is busy.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   535   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   536   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   537   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   538   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   539   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   540   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   541   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   543  IFX_INLINE void *IfxGeth_Eth_waitTransmitBuffer(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   545  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   546  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   547  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   549  /** \brief Gets receive buffer\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   550   * note: IfxEth_freeReceiveBuffer() shall be called after the data from the RX buffer has been processed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   551   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   552   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   553   * \return retval NULL_PTR no received frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   554   * retval !NULL_PTR a frame has been received
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   556   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   557   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   558   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   559   * uint8 *pRxBuf = (uint8*)IfxGeth_Eth_getReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   560   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   562   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   563  IFX_EXTERN void *IfxGeth_Eth_getReceiveBuffer(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   565  /** \brief Get the transmit buffer pointer of current descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   566   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   567   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   568   * \return retval NULL_PTR no free transmit buffer is available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   569   * retval !NULL_PTR a free transmit buffer is available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   570   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   571  IFX_EXTERN void *IfxGeth_Eth_getTransmitBuffer(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   572  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   573  /** \brief Initialises the Geth Module with given configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   574   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   575   * \param config Configuration Structure for the Module initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   579   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   580   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   581   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   582   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   583   * IfxGeth_Eth_initModule(&geth, &config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   584   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   585   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   587  IFX_EXTERN void IfxGeth_Eth_initModule(IfxGeth_Eth *geth, IfxGeth_Eth_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   589  /** \brief Initialises the config structure with default values
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   590   * \param config Configuration Structure for the Module initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   591   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   593   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   594   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   595   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   596   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   597   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   599   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   600  IFX_EXTERN void IfxGeth_Eth_initModuleConfig(IfxGeth_Eth_Config *config, Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   602  /** \brief Set up MII mode input pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   603   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   604   * \param miiPins Mii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   605   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   606   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   607  IFX_EXTERN void IfxGeth_Eth_setupMiiInputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_MiiPins *miiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   609  /** \brief setup MII mode output pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   610   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   611   * \param miiPins Mii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   612   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   613   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   614  IFX_EXTERN void IfxGeth_Eth_setupMiiOutputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_MiiPins *miiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   616  /** \brief Set up RGMII mode input pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   617   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   618   * \param rgmiiPins RGMII Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   619   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   620   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   621  IFX_EXTERN void IfxGeth_Eth_setupRgmiiInputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RgmiiPins *rgmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   622  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   623  /** \brief Set up RGMII mode output pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   624   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   625   * \param rgmiiPins RGMII Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   626   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   628  IFX_EXTERN void IfxGeth_Eth_setupRgmiiOutputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RgmiiPins *rgmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   630  /** \brief setup RMII mode input pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   631   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   632   * \param rmiiPins Rmii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   633   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   634   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   635  IFX_EXTERN void IfxGeth_Eth_setupRmiiInputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RmiiPins *rmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   637  /** \brief setup RMII mode output pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   638   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   639   * \param rmiiPins Rmii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   640   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   641   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   642  IFX_EXTERN void IfxGeth_Eth_setupRmiiOutputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RmiiPins *rmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   644  /** \brief writes the header format into buffrer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   645   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   646   * \param txBuffer pointer to tx buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   647   * \param destinationAddress pointer to destination address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   648   * \param sourceAddress pointer to source address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   649   * \param payloadLength size of the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   650   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   651   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   652   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   653   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   654   * //const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   655   * //#define IFXGETH_MAX_TX_BUFFER_SIZE 256   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   656   * //uint8 txBuffer1[IFXGETH_MAX_TX_BUFFER_SIZE];  // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   657   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   658   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   659   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   660   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   661   * IfxGeth_Eth_writeHeader(&geth, &pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   662   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   663   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   664   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   665  IFX_EXTERN void IfxGeth_Eth_writeHeader(IfxGeth_Eth *geth, uint8 *txBuffer, uint8 *destinationAddress, uint8 *sourceAddress, uint32 payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   666  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   667  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   669  /** \addtogroup IfxLld_Geth_Eth_MTL_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   670   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   671  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   672  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   673  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   674  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   675  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   676  /** \brief Configures the MTL
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   677   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   678   * \param mtlConfig Configuration Structure for the MTL initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   679   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   680   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   681   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   682   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   684   * IfxGeth_Eth_MtlConfig mtlConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   685   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   686   * mtlConfig.numOfTxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   687   * mtlConfig.txSchedulingAlgorithm        =    IfxGeth_TxSchedulingAlgorithm_wrr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   688   * mtlConfig.numOfRxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   689   * mtlConfig.rxArbitrationAlgorithm       =    IfxGeth_RxArbitrationAlgorithm_sp;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   690   * mtlConfig.txQueueConfig[0].storeAndForward              =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   691   * mtlConfig.txQueueConfig[0].txQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   692   * mtlConfig.txQueueConfig[0].txQueueUnderflowInterruptEnabled = FLASE;	// enable if required
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   693   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   694   * mtlConfig.rxQueueConfig[0].storeAndForward              =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   695   * mtlConfig.rxQueueConfig[0].rxQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   696   * mtlConfig.rxQueueConfig[0].forwardErrorPacket           =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   697   * mtlConfig.rxQueueConfig[0].forwardUndersizeedGoodPacket    =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   698   * mtlConfig.rxQueueConfig[0].daBasedDmaChannelEnabled     =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   699   * mtlConfig.rxQueueConfig[0].rxDmaChannelMap              =    IfxEth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   700   * mtlConfig.rxQueueConfig[0].rxQueueOverflowInterruptEnabled = FALSE;	// enable if required
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   701   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   702   * mtlConfig.interrupt.serviceRequest = IfxGeth_ServiceRequest_1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   703   * mtlConfig.interrupt.priority = 0;	// choose priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   704   * mtlConfig.interrupt.provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   705   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   706   * IfxGeth_Eth_configureMTL(&geth, &mtlConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   707   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   709   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   710  IFX_EXTERN void IfxGeth_Eth_configureMTL(IfxGeth_Eth *geth, IfxGeth_Eth_MtlConfig *mtlConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   712  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   714  /** \addtogroup IfxLld_Geth_Eth_DMA_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   715   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   716  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   717  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   718  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   719  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   720  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   721  /** \brief Returns the pointer to current RX descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   722   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   723   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   724   * \return pointer to base RX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   725   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   726   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   727   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   728   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   729   * IfxGeth_RxDescr *descr = IfxGeth_Eth_getActualRxDescriptor(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   730   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   731   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   733  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getActualRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   735  /** \brief Returns the pointer to current TX descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   736   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   737   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   738   * \return pointer to base TX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   739   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   740   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   741   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   742   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   743   * IfxGeth_TxDescr *descr = IfxGeth_Eth_getActualTxDescriptor(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   744   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   745   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   746   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   747  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getActualTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   749  /** \brief Checks whether one or more RX data is available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   750   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   751   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   752   * \return TRUE : if one or more RX data available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   753   * FALSE: if Rx data not available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   754   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   755   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   756   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   757   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   758   * boolean status = IfxGeth_Eth_isRxDataAvailable(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   759   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   760   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   761   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   762  IFX_INLINE boolean IfxGeth_Eth_isRxDataAvailable(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   763  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   764  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   765  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   766  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   768  /** \brief Configures the DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   769   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   770   * \param dmaConfig Configuration Structure for the DMA initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   771   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   772   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   773   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   774   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   775   * IfxGeth_Eth_DmaConfig dmaConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   776   * dmaConfig.numOfTxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   777   * dmaConfig.numOfRxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   778   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   779   * dmaConfig.txChannel[0].channelId = IfxGeth_TxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   780   * dmaConfig.txChannel[0].txDescrList = &IfxGeth_txDescrList[0];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   781   * dmaConfig.txChannel[0].txBuffer1StartAddress = &txBuffer[0][0]; //  user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   782   * dmaConfig.txChannel[0].txBuffer1Size = TX_BUFFER1_SIZE; // user defined variable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   783   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   784   * dmaConfig.rxChannel[0].channelId = IfxGeth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   785   * dmaConfig.rxChannel[0].rxDescrList = &IfxGeth_rxDescrList[0];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   786   * dmaConfig.rxChannel[0].rxBuffer1StartAddress = &rxBuffer[0][0]; // user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   787   * dmaConfig.rxChannel[0].rxBuffer1Size = RX_BUFFER1_SIZE; // user defined variable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   788   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   789   * dmaConfig.txInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   790   * dmaConfig.txInterrupt[0].priority = 0;	// choose priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   791   * dmaConfig.txInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   792   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   793   * dmaConfig.rxInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   794   * dmaConfig.rxInterrupt[0].priority = 0;	// choose priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   795   * dmaConfig.rxInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   796   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   797   * IfxGeth_Eth_configureDMA(&geth, &dmaConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   798   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   799   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   800   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   801  IFX_EXTERN void IfxGeth_Eth_configureDMA(IfxGeth_Eth *geth, IfxGeth_Eth_DmaConfig *dmaConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   802  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   803  /** \brief Initialises the Rx descriptors of a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   804   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   805   * \param config Rx channel configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   806   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   807   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   808  IFX_EXTERN void IfxGeth_Eth_initReceiveDescriptors(IfxGeth_Eth *geth, IfxGeth_Eth_RxChannelConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   809  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   810  /** \brief Initialises the Tx descriptors of a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   811   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   812   * \param config Tx channel configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   813   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   814   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   815  IFX_EXTERN void IfxGeth_Eth_initTransmitDescriptors(IfxGeth_Eth *geth, IfxGeth_Eth_TxChannelConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   816  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   817  /** \brief Transmits a frame from a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   818   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   819   * \param config Tx Frame configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   820   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   821   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   822   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   823   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   824   * //const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   825   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   826   * uint32 payloadLength = 8; // 8 bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   827   * uint32 packetLength = IFXGETH_HEADER_LENGTH + payloadLength; // IFXGETH_HEADER_LENGTH defined by user
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   828   * IfxGeth_FrameConfig frameConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   829   * frameConfig.channelId = IfxGeth_TxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   830   * frameConfig.packetLength = packetLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   831   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   832   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   833   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   834   * // write the header
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   835   * IfxGeth_Eth_writeHeader(&geth, pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   836   * // write the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   837   * uint32 i;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   838   * for(i = IFXGETH_HEADER_LENGTH; i < packetLength; ++i) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   839   *     pTxBuf[i] = i - 13;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   840   * }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   841   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   842   * // clear the TX interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   843   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   844   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   845   * IfxGeth_Eth_sendFrame(&geth, &frameConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   846   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   847   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   848   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   849  IFX_EXTERN void IfxGeth_Eth_sendFrame(IfxGeth_Eth *geth, IfxGeth_Eth_FrameConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   851  /** \brief Transmits a frame from a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   852   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   853   * \param packetLength Length of the packet to be transmitted in bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   854   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   855   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   856   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   857   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   858   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   859   * //const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   860   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   861   * uint32 payloadLength = 8; // 8 bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   862   * uint32 packetLength = IFXGETH_HEADER_LENGTH + payloadLength; // IFXGETH_HEADER_LENGTH defined by user
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   863   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   864   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   865   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   866   * // write the header
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   867   * IfxGeth_Eth_writeHeader(&geth, pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   868   * // write the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   869   * uint32 i;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   870   * for(i = IFXGETH_HEADER_LENGTH; i < packetLength; ++i) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   871   *     pTxBuf[i] = i - 13;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   872   * }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   873   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   874   * // clear the TX interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   875   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   876   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   877   * IfxGeth_Eth_sendTransmitBuffer(&geth, packetLength, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   878   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   879   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   881  IFX_EXTERN void IfxGeth_Eth_sendTransmitBuffer(IfxGeth_Eth *geth, uint32 packetLength, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   883  /** \brief Updates the current Rx descriptor pointer in the handle to next Rx descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   884   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   885   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   886   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   887   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   888   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   889   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   890   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   891   * IfxGeth_Eth_shuffleRxDescriptor(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   892   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   893   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   894   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   895  IFX_EXTERN void IfxGeth_Eth_shuffleRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   896  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   897  /** \brief Updates the current Tx descriptor pointer in the handle to next Tx descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   898   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   899   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   900   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   901   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   902   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   903   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   904   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   905   * IfxGeth_Eth_shuffleTxDescriptor(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   906   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   907   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   908   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   909  IFX_EXTERN void IfxGeth_Eth_shuffleTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   910  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   911  /** \brief Start the Receiver functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   912   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   913   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   914   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   915   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   916   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   917   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   918   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   919   * IfxGeth_Eth_startReceiver(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   920   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   921   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   922   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   923  IFX_EXTERN void IfxGeth_Eth_startReceiver(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   924  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   925  /** \brief Start the Receiver functions of MAC and all selected number of DMA channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   926   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   927   * \param numOfChannels number of channels to be started for transmission (starting from channel 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   928   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   929   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   930   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   931   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   932   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   933   * IfxGeth_Eth_startReceivers(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   934   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   935   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   936   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   937  IFX_EXTERN void IfxGeth_Eth_startReceivers(IfxGeth_Eth *geth, uint32 numOfChannels);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   938  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   939  /** \brief Start the transmitter functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   940   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   941   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   942   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   943   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   944   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   945   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   946   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   947   * IfxGeth_Eth_startTransmitter(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   948   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   949   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   950   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   951  IFX_EXTERN void IfxGeth_Eth_startTransmitter(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   952  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   953  /** \brief Start the transmitter functions of MAC and all selected number of DMA channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   954   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   955   * \param numOfChannels number of channels to be started for transmission (starting from channel 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   956   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   957   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   958   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   959   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   960   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   961   * IfxGeth_Eth_startTransmitter(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   962   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   963   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   964   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   965  IFX_EXTERN void IfxGeth_Eth_startTransmitters(IfxGeth_Eth *geth, uint32 numOfChannels);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   966  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   967  /** \brief Stops the transmitter functions of MAC and all selected number of DMA channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   968   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   969   * \param numOfChannels number of channels to be started for transmission (starting from channel 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   970   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   971   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   972   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   973   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   974   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   975   * IfxGeth_Eth_stopTransmitter(&geth, 4);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   976   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   977   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   978   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   979  IFX_EXTERN void IfxGeth_Eth_stopTransmitters(IfxGeth_Eth *geth, uint32 numOfChannels);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   980  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   981  /** \brief Wakes up the Receiver functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   982   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   983   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   984   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   985   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   986   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   987   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   988   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   989   * IfxGeth_Eth_wakeupReceiver(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   990   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   991   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   992   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   993  IFX_EXTERN void IfxGeth_Eth_wakeupReceiver(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   994  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   995  /** \brief Wakes up the transmitter functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   996   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   997   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   998   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   999   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1000   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1001   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1002   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1003   * IfxGeth_Eth_wakeupTransmitter(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1004   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1005   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1007  IFX_EXTERN void IfxGeth_Eth_wakeupTransmitter(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1009  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1010  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1011  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1012  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1013  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1014  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1015  /** \brief Returns the pointer to base RX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1016   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1017   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1018   * \return pointer to base RX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1019   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1020   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1021   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1022   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1023   * IfxGeth_RxDescr *descr = IfxGeth_Eth_getBaseRxDescriptor(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1024   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1025   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1026   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1027  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getBaseRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1029  /** \brief Returns the pointer to base TX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1030   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1031   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1032   * \return pointer to base TX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1033   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1034   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1035   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1036   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1037   * IfxGeth_TxDescr *descr = IfxGeth_Eth_getBaseTxDescriptor(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1038   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1039   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1040   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1041  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getBaseTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1042  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1043  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1045  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1046  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1047  /** \brief Free the receive buffer, enabling it for the further reception
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1048   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1049   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1050   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1051   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1052   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1053   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1054   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1055   * IfxGeth_Eth_freeReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1056   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1057   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1058   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1059  IFX_EXTERN void IfxGeth_Eth_freeReceiveBuffer(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1060  /** \addtogroup IfxLld_Geth_Eth_Variables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1061   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1062  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1063  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1064  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1065  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1066  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1067  /** \brief Actual rx descriptor lists of all availabe rx channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1068   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1069  IFX_EXTERN IfxGeth_RxDescrList IfxGeth_Eth_rxDescrList[IFXGETH_NUM_MODULES][IFXGETH_NUM_RX_CHANNELS];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1070  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1071  /** \brief Actual tx descriptor lists of all availabe tx channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1072   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1073  IFX_EXTERN IfxGeth_TxDescrList IfxGeth_Eth_txDescrList[IFXGETH_NUM_MODULES][IFXGETH_NUM_TX_CHANNELS];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1074  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1075  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1076  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1077  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1078  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1079  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1080  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1081  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getActualRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1082  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1083      return geth->rxChannel[channelId].rxDescrPtr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1084  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1085  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1086  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1087  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getActualTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1088  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1089      return geth->txChannel[channelId].txDescrPtr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1090  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1091  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1092  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1093  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getBaseRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1094  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1095      return geth->rxChannel[channelId].rxDescrList->descr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1096  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1097  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1098  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1099  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getBaseTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1100  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1101      return geth->txChannel[channelId].txDescrList->descr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1102  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1103  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1104  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1105  IFX_INLINE boolean IfxGeth_Eth_isRxDataAvailable(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1106  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1107      return IfxGeth_Eth_getActualRxDescriptor(geth, channelId)->RDES3.R.OWN == 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1108  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1109  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1110  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1111  IFX_INLINE void *IfxGeth_Eth_waitTransmitBuffer(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1112  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1113      void *tx;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1114  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1115      do
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1116      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1117          tx = IfxGeth_Eth_getTransmitBuffer(geth, channelId);
	mov	d4,#0
	mov.aa	a4,a13
.L203:
	call	IfxGeth_Eth_getTransmitBuffer
.L204:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1118      } while (tx == NULL_PTR);      (inlined)
	jz.a	a2,.L19
.L385:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1118      } while (tx == NULL_PTR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1119  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1120      return tx;
	mov.aa	a14,a2
.L143:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   310      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   311      else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   312      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   313          //initiate transfer();
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   314          u8_t *tbuf = IfxGeth_Eth_waitTransmitBuffer(ethernetif, IfxGeth_TxDmaChannel_0);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   315          u16_t l    = 0;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   316  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   317          for (q = p; q != NULL; q = q->next)
	mov	d8,#0
	mov.aa	a15,a12
.L20:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   318          {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   319              /* Send the data from the pbuf to the interface, one pbuf at a
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   320               * time. The size of the data in each pbuf is kept in the ->len
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   321               * variable. */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   322              memcpy((u8_t *)&tbuf[l], q->payload, q->len);
	addsc.a	a4,a14,d8,#0
.L386:
	ld.a	a5,[a15]4
.L387:
	ld.hu	d4,[a15]10
	call	memcpy
.L388:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   323              l = l + q->len;
	ld.hu	d15,[a15]10
.L389:
	add	d8,d15
.L205:
	extr.u	d8,d8,#0,#16
.L206:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   324              LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE, ("low_level_output: data=%#x, %d\n", q->payload, q->len));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   325              LWIP_ASSERT("low_level_output: length overflow the buffer\n", (l < 2048));
	mov	d15,#2048
	jlt.u	d8,d15,.L21
	movh.a	a2,#@his(.4.str)
	lea	a2,[a2]@los(.4.str)
	st.a	[a10],a2
	mov	d15,#325
	st.w	[a10]4,d15
	movh.a	a2,#@his(.5.str)
	lea	a2,[a2]@los(.5.str)
	st.a	[a10]8,a2
	movh.a	a4,#@his(.3.str)
	lea	a4,[a4]@los(.3.str)
	call	Ifx_Lwip_printf
.L21:
	ld.a	a15,[a15]
.L390:
	jnz.a	a15,.L20
.L151:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     2   * \file IfxGeth_Eth.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     3   * \brief GETH ETH details
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     4   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    42   * \defgroup IfxLld_Geth_Eth_Usage How to use the Geth Eth Interface driver?
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    43   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    45   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    46   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    47   * \section IfxLld_Geth_Eth_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    48   * \subsection IfxLld_Geth_Eth_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    50   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    51   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    52   * #include <Geth/Eth/IfxGeth_Eth.h>
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    53   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    55   * \subsection IfxLld_Geth_Eth_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    56   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    57   * Declare the Geth handle and the Data buffers as global variables in your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    58   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    59   * Note: MAC addds 4 bytes FCS at the end of each packet which will be reflected in RX Buffer.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    60   * If the frame size is equal to buffer size then Rx buffer declaration should be as below
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    61   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    62   * uint8 channel0RxBuffer1[IFXGETH_MAX_RX_BUFFER_SIZE+4];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    63   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    64   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    66   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    67   * // used globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    68   * IfxGeth_Eth geth;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    70   * #define IFXGETH_MAX_TX_DESCRIPTORS 4
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    71   * #define IFXGETH_MAX_RX_DESCRIPTORS 4
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    73   * #define IFXGETH_MAX_TX_BUFFER_SIZE 256 // bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    74   * #define IFXGETH_MAX_RX_BUFFER_SIZE 256 // bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    75   * #define IFXGETH_HEADER_LENGTH 14 // words
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    76   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    77   * uint8 channel0TxBuffer1[IFXGETH_MAX_TX_BUFFER_SIZE];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    78   * uint8 channel0RxBuffer1[IFXGETH_MAX_RX_BUFFER_SIZE];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    79   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    80   * const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    81   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    82   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    83   * \subsection IfxLld_Geth_Eth_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    85   * The module initialisation can be done in the same function. Here an example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    87   * // create module config
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    88   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    89   * // Geth instance index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    90   * IfxGeth_Index gethInst;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    92   * // Initialise configuration of module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    93   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    94   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    95   * // Get the Geth instance from Module address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    96   * gethInst = IfxGeth_getIndex(geth[geth_inst].gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    98   * config.phyInterfaceMode = IfxGeth_PhyInterfaceMode_rmii;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    99   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   100   * // MAC core configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   101   * config.macConfig.lineSpeed = IfxGeth_LineSpeed_100Mbps;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   102   * config.macConfig.loopbackMode = IfxGeth_LoopbackMode_disable;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   103   * config.macConfig.macAddress[0] = myMacAddress[0];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   104   * config.macConfig.macAddress[1] = myMacAddress[1];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   105   * config.macConfig.macAddress[2] = myMacAddress[2];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   106   * config.macConfig.macAddress[3] = myMacAddress[3];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   107   * config.macConfig.macAddress[4] = myMacAddress[4];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   108   * config.macConfig.macAddress[5] = myMacAddress[5];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   109   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   110   * // MTL configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   111   * config.mtlConfig.numOfTxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   112   * config.mtlConfig.numOfRxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   113   * config.mtlConfig.txQueueConfig[0].txQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   114   * config.mtlConfig.rxQueueConfig[0].rxQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   115   * config.mtlConfig.rxQueueConfig[0].rxDmaChannelMap        =    IfxEth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   117   * config.dmaConfig.numOfTxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   118   * config.dmaConfig.numOfRxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   119   * config.dmaConfig.txChannel[0].channelId = IfxGeth_TxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   120   * config.dmaConfig.txChannel[0].txDescrList = &IfxGeth_txDescrList[gethInst][0]; //Initialise tx desc list for the Geth instance
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   121   * config.dmaConfig.txChannel[0].txBuffer1StartAddress = &channel0TxBuffer1[0]; // user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   122   * config.dmaConfig.txChannel[0].txBuffer1Size = IFXGETH_MAX_TX_BUFFER_SIZE; // used to calculate the next descriptor  buffer offset
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   123   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   124   * config.dmaConfig.rxChannel[0].channelId = IfxGeth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   125   * config.dmaConfig.rxChannel[0].rxDescrList = &IfxGeth_rxDescrList[gethInst][0]; //Initialise rx desc list for the Geth instance
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   126   * config.dmaConfig.rxChannel[0].rxBuffer1StartAddress = &channel0RxBuffer1[0]; // user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   127   * config.dmaConfig.rxChannel[0].rxBuffer1Size = IFXGETH_MAX_RX_BUFFER_SIZE; // user defined variable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   128   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   129   * config.dmaConfig.txInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   130   * config.dmaConfig.txInterrupt[0].priority = 10;	// priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   131   * config.dmaConfig.txInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   132   * config.dmaConfig.rxInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   133   * config.dmaConfig.rxInterrupt[0].priority = 11;	// priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   134   * config.dmaConfig.rxInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   135   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   136   * // initialise themodule
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   137   * IfxGeth_Eth_initModule(&geth, &config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   139   * // and enable transmitter/receiver
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   140   * IfxGeth_Eth_startTransmitters(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   141   * IfxGeth_Eth_startReceivers(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   142   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   143   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   145   * Note: Application should explicitly configure the system DMA, if system DMA is selected as the service provider for the interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   146   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   147   * The ETH is ready for use now!
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   150   * \section IfxLld_Geth_Eth_DataTransfers Data Transfers
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   151   * \subsection  IfxLld_Geth_Eth_DataTransfers_Transmit Transmission
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   152   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   153   * uint32 payloadLength = 8; // 8 bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   154   * uint32 packetLength = IFXGETH_HEADER_LENGTH + payloadLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   156   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   157   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   158   * // write the header
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   159   * IfxGeth_Eth_writeHeader(&geth, pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   160   * // write the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   161   * uint32 i;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   162   * for(i = IFXGETH_HEADER_LENGTH; i < packetLength; ++i) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   163   *     pTxBuf[i] = i - 13;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   164   * }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   166   * // clear the TX interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   167   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0,IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   168   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   169   * IfxGeth_Eth_sendTransmitBuffer(&geth, packetLength, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   170   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   171   * // wait until buffer has been transmitted
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   172   * while( IfxGeth_dma_isInterruptFlagSet(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) == FALSE );
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   173   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   174   * // clear the TX interrupt status for the next interrupt to come
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   175   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   176   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   177   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   178   * \subsection  IfxLld_Geth_Eth_DataTransfers_Receive Receive
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   179   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   180   * // wait until data is been received
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   181   * while(IfxGeth_Eth_isRxDataAvailable(&geth, IfxGeth_RxDmaChannel_0)!= TRUE);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   182   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   183   * // wake up the receiver and get the recieve buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   184   * uint8 *pRxBuf = (uint8*)IfxGeth_Eth_getReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   186   * // update the descreptor pointer for next packet
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   187   * // Free the receive buffer, enabling it for the further reception
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   188   * IfxGeth_Eth_freeReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   189   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   190   * // data is available in pRxBuf
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   191   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   192   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   193   * \subsection  IfxLld_Geth_Eth_DataTransfers_GiantFrame Giant Frame Transmission
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   194   * Giant frames are supported by ethernet driver.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   195   * By default any frames greater than 1518 bytes are considered as giant frames in the code.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   196   * Giant frames of length 16376 bytes can be transmitted.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   197   * Giant frames of length 16380 bytes can be received by the MAC.(Including the 4 bytes of FCS added by transmitter MAC).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   198   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   199   * The minimum allowed packet size above which the frame is indicated as giant frame is configured as below
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   200   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   201   * In the module initialisation section, make changes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   202   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   203   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   204   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   205   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   206   * config.macConfig.maxPacketSize = 2000;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   207   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   208   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   210   * The above code ensures that any frame of frame size greater than 2000 bytes are set as giant frame in Rx descriptor status.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   211   * Note: This frame size includes the 4 bytes FCS added by the transmitter MAC. Make sure that an Rx buffer has enough space to recieve the giant frame.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   212   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   213   * There are 3 categories under which giant frames can be categoried:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   214   * 1. Frame size = 1518 -  If frame size greater than 1518 is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   215   * 2. Frame size = 2000 -  If frame size greater than 2000 is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   216   * 3. Frame size = 9018 -  If frame size greater than 9018 is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   217   * 4. Any other value Frame size < 16380  - If packet size greater than configured bytes is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   218   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   219   * \subsection  IfxLld_Geth_Eth_Miilite MII lite mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   220   *  MII lite mode is supported .
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   221   *  Application should set the below pins to NULL_PTR to enable the MII lite mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   222   *  IfxGeth_Crs_In     *crs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   223   *  IfxGeth_Col_In     *col
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   224   *  IfxGeth_Rxer_In    *rxEr
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   225   *  IfxGeth_Txer_Out   *txEr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   226   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   227   * \defgroup IfxLld_Geth_Eth ETH
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   228   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   229   * \defgroup IfxLld_Geth_Eth_DataStructures DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   230   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   231   * \defgroup IfxLld_Geth_Eth_MAC_Functions MAC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   232   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   233   * \defgroup IfxLld_Geth_Eth_Module_Functions Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   234   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   235   * \defgroup IfxLld_Geth_Eth_MTL_Functions MTL Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   236   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   237   * \defgroup IfxLld_Geth_Eth_DMA_Functions DMA Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   238   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   239   * \defgroup IfxLld_Geth_Eth_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   240   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   242  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   243  #ifndef IFXGETH_ET_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   244  #define IFXGETH_ET_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   246  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   247  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   248  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   250  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   251  #include "Geth/Std/IfxGeth.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   252  #include "_PinMap/IfxGeth_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   253  #include "IfxPort_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   254  #include "IfxPort_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   257  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   260  /** \addtogroup IfxLld_Geth_Eth_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   261   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   262  /** \brief Interrupt configuration structure for DMA Channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   264  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   266      IfxGeth_DmaChannel channelId;       /**< \brief DMA channel ID (irrespective of TX and Rx for interrupt configuration) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   267      Ifx_Priority       priority;        /**< \brief Interrupt service priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   268      IfxSrc_Tos         provider;        /**< \brief Interrupt service provider */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   269  } IfxGeth_Eth_DmaInterruptConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   271  /** \brief Port pins for MII mode configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   272   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   273  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   274  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   275      IfxGeth_Crs_In     *crs;         /**< \brief pointer to CRS input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   276      IfxGeth_Col_In     *col;         /**< \brief pointer to COL input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   277      IfxGeth_Txclk_In   *txClk;       /**< \brief Pointer to TXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   278      IfxGeth_Rxclk_In   *rxClk;       /**< \brief Pointer to RXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   279      IfxGeth_Rxdv_In    *rxDv;        /**< \brief Pointer to RXDV input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   280      IfxGeth_Rxer_In    *rxEr;        /**< \brief Pointer to RXER input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   281      IfxGeth_Rxd_In     *rxd0;        /**< \brief Pointer to RXD0 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   282      IfxGeth_Rxd_In     *rxd1;        /**< \brief Pointer to RXD1 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   283      IfxGeth_Rxd_In     *rxd2;        /**< \brief Pointer to RXD2 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   284      IfxGeth_Rxd_In     *rxd3;        /**< \brief Pointer to RXD3 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   285      IfxGeth_Txen_Out   *txEn;        /**< \brief Pointer to TXEN output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   286      IfxGeth_Txer_Out   *txEr;        /**< \brief Pointer to TXER output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   287      IfxGeth_Txd_Out    *txd0;        /**< \brief Pointer to TXD0 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   288      IfxGeth_Txd_Out    *txd1;        /**< \brief Pointer to TXD1 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   289      IfxGeth_Txd_Out    *txd2;        /**< \brief Pointer to TXD2 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   290      IfxGeth_Txd_Out    *txd3;        /**< \brief Pointer to TXD3 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   291      IfxGeth_Mdc_Out    *mdc;         /**< \brief Pointer to MDC output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   292      IfxGeth_Mdio_InOut *mdio;        /**< \brief Pointer to MDIO pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   293  } IfxGeth_Eth_MiiPins;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   295  /** \brief Interrupt configuration structure for MTL block
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   296   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   297  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   298  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   299      IfxGeth_ServiceRequest serviceRequest;       /**< \brief Service Request node for MTL interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   300      Ifx_Priority           priority;             /**< \brief Interrupt service priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   301      IfxSrc_Tos             provider;             /**< \brief Interrupt service provider */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   302  } IfxGeth_Eth_MtlInterruptConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   304  /** \brief Port pins for RGMII mode configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   305   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   306  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   307  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   308      IfxGeth_Txclk_Out  *txClk;         /**< \brief Pointer to TXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   309      IfxGeth_Txd_Out    *txd0;          /**< \brief Pointer to TXD0 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   310      IfxGeth_Txd_Out    *txd1;          /**< \brief Pointer to TXD1 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   311      IfxGeth_Txd_Out    *txd2;          /**< \brief Pointer to TXD2 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   312      IfxGeth_Txd_Out    *txd3;          /**< \brief Pointer to TXD3 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   313      IfxGeth_Txctl_Out  *txCtl;         /**< \brief Pointer to TXCTL output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   314      IfxGeth_Rxclk_In   *rxClk;         /**< \brief Pointer to RXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   315      IfxGeth_Rxd_In     *rxd0;          /**< \brief Pointer to RXD0 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   316      IfxGeth_Rxd_In     *rxd1;          /**< \brief Pointer to RXD1 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   317      IfxGeth_Rxd_In     *rxd2;          /**< \brief Pointer to RXD2 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   318      IfxGeth_Rxd_In     *rxd3;          /**< \brief Pointer to RXD3 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   319      IfxGeth_Rxctl_In   *rxCtl;         /**< \brief Pointer to RXCTL input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   320      IfxGeth_Mdc_Out    *mdc;           /**< \brief Pointer to MDC output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   321      IfxGeth_Mdio_InOut *mdio;          /**< \brief Pointer to MDIO pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   322      IfxGeth_Grefclk_In *grefClk;       /**< \brief Pointer to GREFCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   323  } IfxGeth_Eth_RgmiiPins;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   325  /** \brief Port pins for RMII mode configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   326   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   327  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   328  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   329      IfxGeth_Crsdv_In   *crsDiv;       /**< \brief pointer to CRSDIV input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   330      IfxGeth_Refclk_In  *refClk;       /**< \brief Pointer to REFCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   331      IfxGeth_Rxd_In     *rxd0;         /**< \brief Pointer to RXD0 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   332      IfxGeth_Rxd_In     *rxd1;         /**< \brief Pointer to RXD1 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   333      IfxGeth_Mdio_InOut *mdio;         /**< \brief Pointer to MDIO pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   334      IfxGeth_Txd_Out    *txd0;         /**< \brief Pointer to TXD0 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   335      IfxGeth_Mdc_Out    *mdc;          /**< \brief Pointer to MDC output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   336      IfxGeth_Txd_Out    *txd1;         /**< \brief Pointer to TXD1 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   337      IfxGeth_Txen_Out   *txEn;         /**< \brief Pointer to TXEN output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   338  } IfxGeth_Eth_RmiiPins;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   340  /** \brief Configuration sturcture for DMA rx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   342  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   343  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   344      IfxGeth_RxDmaChannel   channelId;                   /**< \brief Rx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   345      IfxGeth_DmaBurstLength maxBurstLength;              /**< \brief Maximum burst length of the channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   346      IfxGeth_RxDescrList   *rxDescrList;                 /**< \brief pointer to RX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   347      uint32                *rxBuffer1StartAddress;       /**< \brief Start address of Rx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   348      uint16                 rxBuffer1Size;               /**< \brief Size of Rx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   349  } IfxGeth_Eth_RxChannelConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   351  /** \brief Rx Queue Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   352   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   353  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   354  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   355      boolean              storeAndForward;                       /**< \brief Receive Store and Forward Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   356      IfxGeth_QueueSize    rxQueueSize;                           /**< \brief Rx Queue size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   357      boolean              forwardErrorPacket;                    /**< \brief Error Packet Forwarding Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   358      boolean              forwardUndersizedGoodPacket;           /**< \brief Undersized Good Packet Forwarding Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   359      boolean              daBasedDmaChannelEnabled;              /**< \brief DA-based DMA Channel Selection Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   360      IfxGeth_RxDmaChannel rxDmaChannelMap;                       /**< \brief Mapped DMA Channel of Rx Queue */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   361      boolean              rxQueueOverflowInterruptEnabled;       /**< \brief Enable/Disable Rx Queue Overflow Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   362  } IfxGeth_Eth_RxQueueConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   363  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   364  /** \brief Configuration sturcture for DMA tx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   366  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   368      IfxGeth_TxDmaChannel   channelId;                   /**< \brief Tx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   369      IfxGeth_DmaBurstLength maxBurstLength;              /**< \brief Maximum burst length of the channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   370      IfxGeth_TxDescrList   *txDescrList;                 /**< \brief pointer to TX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   371      uint32                *txBuffer1StartAddress;       /**< \brief Start address of Tx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   372      uint16                 txBuffer1Size;               /**< \brief Size of Tx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   373  } IfxGeth_Eth_TxChannelConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   375  /** \brief Tx Queue Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   377  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   378  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   379      boolean           storeAndForward;                        /**< \brief Transmit Store and Forward Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   380      IfxGeth_QueueSize txQueueSize;                            /**< \brief Tx Queue size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   381      boolean           txQueueUnderflowInterruptEnabled;       /**< \brief Enable/Disable Tx Queue Underflow Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   382  } IfxGeth_Eth_TxQueueConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   384  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   386  /** \addtogroup IfxLld_Geth_Eth_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   387   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   388  /** \brief Configuration Structure for the DMA initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   390  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   391  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   392      uint32                         numOfTxChannels;                             /**< \brief Number of Tx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   393      uint32                         numOfRxChannels;                             /**< \brief Number of Rx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   394      boolean                        addressAlignedBeatsEnabled;                  /**< \brief Enable/Disable Address Aligned Beats */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   395      boolean                        fixedBurstEnabled;                           /**< \brief Enable/Disable Fixed Burst length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   396      boolean                        mixedBurstEnabled;                           /**< \brief Enable/Disable Mixed Burst length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   397      IfxGeth_Eth_TxChannelConfig    txChannel[IFXGETH_NUM_TX_CHANNELS];          /**< \brief Tx Channels configurations of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   398      IfxGeth_Eth_RxChannelConfig    rxChannel[IFXGETH_NUM_RX_CHANNELS];          /**< \brief Rx Channels configurations of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   399      IfxGeth_Eth_DmaInterruptConfig txInterrupt[IFXGETH_NUM_DMA_CHANNELS];       /**< \brief Transmit Interrupt configuration structure for DMA Channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   400      IfxGeth_Eth_DmaInterruptConfig rxInterrupt[IFXGETH_NUM_DMA_CHANNELS];       /**< \brief Receive Interrupt configuration structure for DMA Channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   401  } IfxGeth_Eth_DmaConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   403  /** \brief Configuration Structure for the MAC initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   405  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   406  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   407      IfxGeth_DuplexMode   duplexMode;          /**< \brief Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   408      IfxGeth_LineSpeed    lineSpeed;           /**< \brief Ethernet Line Speed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   409      IfxGeth_LoopbackMode loopbackMode;        /**< \brief Loopback mode enable/disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   410      uint8                macAddress[6];       /**< \brief MAC address for the ethernet, should be unique in the network */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   411      uint16               maxPacketSize;       /**< \brief Maximum size of the ethernet packet */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   412  } IfxGeth_Eth_MacConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   414  /** \brief Configuration Structure for the MTL initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   416  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   417  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   418      uint32                         numOfTxQueues;                        /**< \brief Number of Tx Queues, will also be used to enable the selected number of queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   419      IfxGeth_TxSchedulingAlgorithm  txSchedulingAlgorithm;                /**< \brief Tx Scheduling Algorithm for Tx queues when no of queues are more than 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   420      uint32                         numOfRxQueues;                        /**< \brief Number of Rx Queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   421      IfxGeth_RxArbitrationAlgorithm rxArbitrationAlgorithm;               /**< \brief Rx Arbitration Algorithm for Rx queues when no of queues are more than 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   422      IfxGeth_Eth_TxQueueConfig      txQueue[IFXGETH_NUM_TX_QUEUES];       /**< \brief Tx queue configurations of selected queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   423      IfxGeth_Eth_RxQueueConfig      rxQueue[IFXGETH_NUM_RX_QUEUES];       /**< \brief Rx queue configurations of selected queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   424      IfxGeth_Eth_MtlInterruptConfig interrupt;                            /**< \brief Interrupt configuration structure for MTL block */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   425  } IfxGeth_Eth_MtlConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   427  /** \brief Configuration structure for pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   428   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   429  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   430  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   431      IFX_CONST IfxGeth_Eth_RmiiPins  *rmiiPins;        /**< \brief Structure for RMII pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   432      IFX_CONST IfxGeth_Eth_RgmiiPins *rgmiiPins;       /**< \brief Structure for RGMII pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   433      IFX_CONST IfxGeth_Eth_MiiPins   *miiPins;         /**< \brief Structure for MII pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   434  } IfxGeth_Eth_PinConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   435  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   436  /** \brief Handle sturcture for DMA rx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   437   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   438  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   439  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   440      IfxGeth_RxDmaChannel      channelId;         /**< \brief Rx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   441      IfxGeth_RxDescrList      *rxDescrList;       /**< \brief pointer to RX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   442      volatile IfxGeth_RxDescr *rxDescrPtr;        /**< \brief Pointer to Rx Descriptor (current descriptor) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   443      uint32                    rxCount;           /**< \brief Number of frames received */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   444  } IfxGeth_Eth_RxChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   445  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   446  /** \brief handle sturcture for DMA tx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   448  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   449  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   450      IfxGeth_TxDmaChannel      channelId;         /**< \brief Tx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   451      IfxGeth_TxDescrList      *txDescrList;       /**< \brief pointer to TX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   452      volatile IfxGeth_TxDescr *txDescrPtr;        /**< \brief Pointer to Tx Descriptor (current descriptor) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   453      uint32                    txCount;           /**< \brief Number of frames transmitted */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   454      uint16                    txBuf1Size;        /**< \brief configured tx buffer 1 size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   455  } IfxGeth_Eth_TxChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   456  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   457  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   458  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   459  /** \addtogroup IfxLld_Geth_Eth_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   460   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   461  /** \brief GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   463  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   464  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   465      Ifx_GETH             *gethSFR;                                  /**< \brief Pointer to GETH register base address */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   466      uint32                numOfTxChannels;                          /**< \brief Number of Tx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   467      uint32                numOfRxChannels;                          /**< \brief Number of Rx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   468      IfxGeth_Eth_TxChannel txChannel[IFXGETH_NUM_TX_CHANNELS];       /**< \brief Tx Channels handle of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   469      IfxGeth_Eth_RxChannel rxChannel[IFXGETH_NUM_RX_CHANNELS];       /**< \brief Rx Channels handle of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   470  } IfxGeth_Eth;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   472  /** \brief Configuration Structure for the Module initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   473   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   474  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   475  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   476      Ifx_GETH                *gethSFR;                /**< \brief Pointer to GETH register base address */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   477      IfxGeth_PhyInterfaceMode phyInterfaceMode;       /**< \brief External Phy Interface RMII Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   478      IfxGeth_Eth_PinConfig    pins;                   /**< \brief COnfiguration structure for Pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   479      IfxGeth_Eth_MacConfig    mac;                    /**< \brief Configuration Structure for the the MAC initialisation */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   480      IfxGeth_Eth_MtlConfig    mtl;                    /**< \brief Configuration Structure for the MTL initialisation */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   481      IfxGeth_Eth_DmaConfig    dma;                    /**< \brief Configuration Structure for the DMA initialisation */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   482  } IfxGeth_Eth_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   484  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   486  /** \brief Configuration Structure for TX Frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   488  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   489  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   490      IfxGeth_TxDmaChannel channelId;          /**< \brief Tx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   491      uint32               packetLength;       /**< \brief the length of the packet to be transmitted in bytes */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   492  } IfxGeth_Eth_FrameConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   494  /** \addtogroup IfxLld_Geth_Eth_MAC_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   495   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   496  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   497  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   498  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   499  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   501  /** \brief Configures the MAC core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   502   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   503   * \param macConfig Configuration Structure for the MAC initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   504   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   506   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   507   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   508   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   509   * IfxGeth_Eth_MacConfig macConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   510   * macConfig.duplexMode = IfxGeth_DuplexMode_fullDuplex;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   511   * macConfig.lineSpeed = IfxGeth_LineSpeed_100Mbps;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   512   * macConfig.loopbackMode = IfxGeth_LoopbackMode_disable;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   513   * macConfig.macAddress =  {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   515   * IfxGeth_Eth_configureMacCore(&geth, &macConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   516   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   517   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   518   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   519  IFX_EXTERN void IfxGeth_Eth_configureMacCore(IfxGeth_Eth *geth, IfxGeth_Eth_MacConfig *macConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   521  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   522  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   523  /** \addtogroup IfxLld_Geth_Eth_Module_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   524   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   526  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   527  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   530  /** \brief Waits for one TX buffer becomes available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   531   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   532   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   533   * retval non NULL_PTR TX buffer is available at the address pointed by the returned value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   534   * retval NULL_PTR TX buffer is busy.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   535   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   536   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   537   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   538   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   539   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   540   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   541   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   543  IFX_INLINE void *IfxGeth_Eth_waitTransmitBuffer(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   545  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   546  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   547  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   549  /** \brief Gets receive buffer\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   550   * note: IfxEth_freeReceiveBuffer() shall be called after the data from the RX buffer has been processed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   551   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   552   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   553   * \return retval NULL_PTR no received frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   554   * retval !NULL_PTR a frame has been received
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   556   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   557   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   558   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   559   * uint8 *pRxBuf = (uint8*)IfxGeth_Eth_getReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   560   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   562   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   563  IFX_EXTERN void *IfxGeth_Eth_getReceiveBuffer(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   565  /** \brief Get the transmit buffer pointer of current descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   566   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   567   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   568   * \return retval NULL_PTR no free transmit buffer is available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   569   * retval !NULL_PTR a free transmit buffer is available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   570   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   571  IFX_EXTERN void *IfxGeth_Eth_getTransmitBuffer(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   572  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   573  /** \brief Initialises the Geth Module with given configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   574   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   575   * \param config Configuration Structure for the Module initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   579   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   580   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   581   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   582   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   583   * IfxGeth_Eth_initModule(&geth, &config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   584   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   585   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   587  IFX_EXTERN void IfxGeth_Eth_initModule(IfxGeth_Eth *geth, IfxGeth_Eth_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   589  /** \brief Initialises the config structure with default values
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   590   * \param config Configuration Structure for the Module initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   591   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   593   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   594   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   595   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   596   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   597   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   599   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   600  IFX_EXTERN void IfxGeth_Eth_initModuleConfig(IfxGeth_Eth_Config *config, Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   602  /** \brief Set up MII mode input pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   603   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   604   * \param miiPins Mii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   605   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   606   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   607  IFX_EXTERN void IfxGeth_Eth_setupMiiInputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_MiiPins *miiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   609  /** \brief setup MII mode output pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   610   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   611   * \param miiPins Mii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   612   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   613   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   614  IFX_EXTERN void IfxGeth_Eth_setupMiiOutputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_MiiPins *miiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   616  /** \brief Set up RGMII mode input pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   617   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   618   * \param rgmiiPins RGMII Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   619   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   620   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   621  IFX_EXTERN void IfxGeth_Eth_setupRgmiiInputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RgmiiPins *rgmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   622  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   623  /** \brief Set up RGMII mode output pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   624   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   625   * \param rgmiiPins RGMII Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   626   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   628  IFX_EXTERN void IfxGeth_Eth_setupRgmiiOutputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RgmiiPins *rgmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   630  /** \brief setup RMII mode input pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   631   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   632   * \param rmiiPins Rmii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   633   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   634   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   635  IFX_EXTERN void IfxGeth_Eth_setupRmiiInputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RmiiPins *rmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   637  /** \brief setup RMII mode output pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   638   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   639   * \param rmiiPins Rmii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   640   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   641   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   642  IFX_EXTERN void IfxGeth_Eth_setupRmiiOutputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RmiiPins *rmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   644  /** \brief writes the header format into buffrer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   645   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   646   * \param txBuffer pointer to tx buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   647   * \param destinationAddress pointer to destination address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   648   * \param sourceAddress pointer to source address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   649   * \param payloadLength size of the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   650   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   651   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   652   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   653   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   654   * //const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   655   * //#define IFXGETH_MAX_TX_BUFFER_SIZE 256   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   656   * //uint8 txBuffer1[IFXGETH_MAX_TX_BUFFER_SIZE];  // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   657   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   658   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   659   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   660   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   661   * IfxGeth_Eth_writeHeader(&geth, &pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   662   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   663   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   664   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   665  IFX_EXTERN void IfxGeth_Eth_writeHeader(IfxGeth_Eth *geth, uint8 *txBuffer, uint8 *destinationAddress, uint8 *sourceAddress, uint32 payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   666  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   667  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   669  /** \addtogroup IfxLld_Geth_Eth_MTL_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   670   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   671  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   672  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   673  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   674  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   675  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   676  /** \brief Configures the MTL
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   677   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   678   * \param mtlConfig Configuration Structure for the MTL initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   679   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   680   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   681   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   682   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   684   * IfxGeth_Eth_MtlConfig mtlConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   685   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   686   * mtlConfig.numOfTxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   687   * mtlConfig.txSchedulingAlgorithm        =    IfxGeth_TxSchedulingAlgorithm_wrr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   688   * mtlConfig.numOfRxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   689   * mtlConfig.rxArbitrationAlgorithm       =    IfxGeth_RxArbitrationAlgorithm_sp;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   690   * mtlConfig.txQueueConfig[0].storeAndForward              =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   691   * mtlConfig.txQueueConfig[0].txQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   692   * mtlConfig.txQueueConfig[0].txQueueUnderflowInterruptEnabled = FLASE;	// enable if required
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   693   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   694   * mtlConfig.rxQueueConfig[0].storeAndForward              =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   695   * mtlConfig.rxQueueConfig[0].rxQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   696   * mtlConfig.rxQueueConfig[0].forwardErrorPacket           =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   697   * mtlConfig.rxQueueConfig[0].forwardUndersizeedGoodPacket    =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   698   * mtlConfig.rxQueueConfig[0].daBasedDmaChannelEnabled     =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   699   * mtlConfig.rxQueueConfig[0].rxDmaChannelMap              =    IfxEth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   700   * mtlConfig.rxQueueConfig[0].rxQueueOverflowInterruptEnabled = FALSE;	// enable if required
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   701   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   702   * mtlConfig.interrupt.serviceRequest = IfxGeth_ServiceRequest_1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   703   * mtlConfig.interrupt.priority = 0;	// choose priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   704   * mtlConfig.interrupt.provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   705   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   706   * IfxGeth_Eth_configureMTL(&geth, &mtlConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   707   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   709   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   710  IFX_EXTERN void IfxGeth_Eth_configureMTL(IfxGeth_Eth *geth, IfxGeth_Eth_MtlConfig *mtlConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   712  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   714  /** \addtogroup IfxLld_Geth_Eth_DMA_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   715   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   716  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   717  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   718  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   719  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   720  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   721  /** \brief Returns the pointer to current RX descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   722   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   723   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   724   * \return pointer to base RX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   725   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   726   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   727   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   728   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   729   * IfxGeth_RxDescr *descr = IfxGeth_Eth_getActualRxDescriptor(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   730   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   731   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   733  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getActualRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   735  /** \brief Returns the pointer to current TX descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   736   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   737   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   738   * \return pointer to base TX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   739   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   740   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   741   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   742   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   743   * IfxGeth_TxDescr *descr = IfxGeth_Eth_getActualTxDescriptor(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   744   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   745   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   746   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   747  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getActualTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   749  /** \brief Checks whether one or more RX data is available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   750   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   751   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   752   * \return TRUE : if one or more RX data available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   753   * FALSE: if Rx data not available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   754   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   755   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   756   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   757   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   758   * boolean status = IfxGeth_Eth_isRxDataAvailable(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   759   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   760   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   761   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   762  IFX_INLINE boolean IfxGeth_Eth_isRxDataAvailable(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   763  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   764  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   765  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   766  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   768  /** \brief Configures the DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   769   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   770   * \param dmaConfig Configuration Structure for the DMA initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   771   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   772   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   773   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   774   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   775   * IfxGeth_Eth_DmaConfig dmaConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   776   * dmaConfig.numOfTxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   777   * dmaConfig.numOfRxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   778   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   779   * dmaConfig.txChannel[0].channelId = IfxGeth_TxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   780   * dmaConfig.txChannel[0].txDescrList = &IfxGeth_txDescrList[0];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   781   * dmaConfig.txChannel[0].txBuffer1StartAddress = &txBuffer[0][0]; //  user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   782   * dmaConfig.txChannel[0].txBuffer1Size = TX_BUFFER1_SIZE; // user defined variable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   783   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   784   * dmaConfig.rxChannel[0].channelId = IfxGeth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   785   * dmaConfig.rxChannel[0].rxDescrList = &IfxGeth_rxDescrList[0];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   786   * dmaConfig.rxChannel[0].rxBuffer1StartAddress = &rxBuffer[0][0]; // user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   787   * dmaConfig.rxChannel[0].rxBuffer1Size = RX_BUFFER1_SIZE; // user defined variable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   788   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   789   * dmaConfig.txInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   790   * dmaConfig.txInterrupt[0].priority = 0;	// choose priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   791   * dmaConfig.txInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   792   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   793   * dmaConfig.rxInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   794   * dmaConfig.rxInterrupt[0].priority = 0;	// choose priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   795   * dmaConfig.rxInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   796   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   797   * IfxGeth_Eth_configureDMA(&geth, &dmaConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   798   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   799   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   800   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   801  IFX_EXTERN void IfxGeth_Eth_configureDMA(IfxGeth_Eth *geth, IfxGeth_Eth_DmaConfig *dmaConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   802  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   803  /** \brief Initialises the Rx descriptors of a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   804   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   805   * \param config Rx channel configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   806   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   807   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   808  IFX_EXTERN void IfxGeth_Eth_initReceiveDescriptors(IfxGeth_Eth *geth, IfxGeth_Eth_RxChannelConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   809  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   810  /** \brief Initialises the Tx descriptors of a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   811   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   812   * \param config Tx channel configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   813   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   814   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   815  IFX_EXTERN void IfxGeth_Eth_initTransmitDescriptors(IfxGeth_Eth *geth, IfxGeth_Eth_TxChannelConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   816  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   817  /** \brief Transmits a frame from a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   818   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   819   * \param config Tx Frame configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   820   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   821   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   822   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   823   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   824   * //const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   825   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   826   * uint32 payloadLength = 8; // 8 bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   827   * uint32 packetLength = IFXGETH_HEADER_LENGTH + payloadLength; // IFXGETH_HEADER_LENGTH defined by user
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   828   * IfxGeth_FrameConfig frameConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   829   * frameConfig.channelId = IfxGeth_TxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   830   * frameConfig.packetLength = packetLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   831   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   832   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   833   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   834   * // write the header
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   835   * IfxGeth_Eth_writeHeader(&geth, pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   836   * // write the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   837   * uint32 i;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   838   * for(i = IFXGETH_HEADER_LENGTH; i < packetLength; ++i) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   839   *     pTxBuf[i] = i - 13;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   840   * }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   841   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   842   * // clear the TX interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   843   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   844   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   845   * IfxGeth_Eth_sendFrame(&geth, &frameConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   846   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   847   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   848   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   849  IFX_EXTERN void IfxGeth_Eth_sendFrame(IfxGeth_Eth *geth, IfxGeth_Eth_FrameConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   851  /** \brief Transmits a frame from a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   852   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   853   * \param packetLength Length of the packet to be transmitted in bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   854   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   855   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   856   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   857   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   858   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   859   * //const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   860   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   861   * uint32 payloadLength = 8; // 8 bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   862   * uint32 packetLength = IFXGETH_HEADER_LENGTH + payloadLength; // IFXGETH_HEADER_LENGTH defined by user
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   863   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   864   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   865   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   866   * // write the header
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   867   * IfxGeth_Eth_writeHeader(&geth, pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   868   * // write the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   869   * uint32 i;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   870   * for(i = IFXGETH_HEADER_LENGTH; i < packetLength; ++i) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   871   *     pTxBuf[i] = i - 13;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   872   * }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   873   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   874   * // clear the TX interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   875   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   876   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   877   * IfxGeth_Eth_sendTransmitBuffer(&geth, packetLength, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   878   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   879   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   881  IFX_EXTERN void IfxGeth_Eth_sendTransmitBuffer(IfxGeth_Eth *geth, uint32 packetLength, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   883  /** \brief Updates the current Rx descriptor pointer in the handle to next Rx descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   884   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   885   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   886   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   887   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   888   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   889   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   890   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   891   * IfxGeth_Eth_shuffleRxDescriptor(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   892   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   893   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   894   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   895  IFX_EXTERN void IfxGeth_Eth_shuffleRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   896  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   897  /** \brief Updates the current Tx descriptor pointer in the handle to next Tx descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   898   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   899   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   900   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   901   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   902   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   903   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   904   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   905   * IfxGeth_Eth_shuffleTxDescriptor(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   906   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   907   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   908   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   909  IFX_EXTERN void IfxGeth_Eth_shuffleTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   910  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   911  /** \brief Start the Receiver functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   912   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   913   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   914   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   915   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   916   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   917   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   918   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   919   * IfxGeth_Eth_startReceiver(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   920   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   921   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   922   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   923  IFX_EXTERN void IfxGeth_Eth_startReceiver(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   924  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   925  /** \brief Start the Receiver functions of MAC and all selected number of DMA channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   926   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   927   * \param numOfChannels number of channels to be started for transmission (starting from channel 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   928   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   929   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   930   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   931   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   932   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   933   * IfxGeth_Eth_startReceivers(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   934   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   935   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   936   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   937  IFX_EXTERN void IfxGeth_Eth_startReceivers(IfxGeth_Eth *geth, uint32 numOfChannels);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   938  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   939  /** \brief Start the transmitter functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   940   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   941   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   942   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   943   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   944   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   945   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   946   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   947   * IfxGeth_Eth_startTransmitter(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   948   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   949   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   950   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   951  IFX_EXTERN void IfxGeth_Eth_startTransmitter(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   952  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   953  /** \brief Start the transmitter functions of MAC and all selected number of DMA channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   954   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   955   * \param numOfChannels number of channels to be started for transmission (starting from channel 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   956   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   957   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   958   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   959   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   960   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   961   * IfxGeth_Eth_startTransmitter(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   962   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   963   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   964   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   965  IFX_EXTERN void IfxGeth_Eth_startTransmitters(IfxGeth_Eth *geth, uint32 numOfChannels);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   966  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   967  /** \brief Stops the transmitter functions of MAC and all selected number of DMA channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   968   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   969   * \param numOfChannels number of channels to be started for transmission (starting from channel 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   970   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   971   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   972   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   973   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   974   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   975   * IfxGeth_Eth_stopTransmitter(&geth, 4);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   976   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   977   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   978   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   979  IFX_EXTERN void IfxGeth_Eth_stopTransmitters(IfxGeth_Eth *geth, uint32 numOfChannels);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   980  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   981  /** \brief Wakes up the Receiver functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   982   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   983   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   984   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   985   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   986   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   987   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   988   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   989   * IfxGeth_Eth_wakeupReceiver(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   990   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   991   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   992   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   993  IFX_EXTERN void IfxGeth_Eth_wakeupReceiver(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   994  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   995  /** \brief Wakes up the transmitter functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   996   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   997   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   998   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   999   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1000   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1001   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1002   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1003   * IfxGeth_Eth_wakeupTransmitter(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1004   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1005   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1007  IFX_EXTERN void IfxGeth_Eth_wakeupTransmitter(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1009  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1010  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1011  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1012  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1013  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1014  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1015  /** \brief Returns the pointer to base RX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1016   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1017   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1018   * \return pointer to base RX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1019   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1020   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1021   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1022   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1023   * IfxGeth_RxDescr *descr = IfxGeth_Eth_getBaseRxDescriptor(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1024   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1025   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1026   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1027  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getBaseRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1029  /** \brief Returns the pointer to base TX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1030   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1031   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1032   * \return pointer to base TX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1033   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1034   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1035   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1036   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1037   * IfxGeth_TxDescr *descr = IfxGeth_Eth_getBaseTxDescriptor(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1038   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1039   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1040   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1041  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getBaseTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1042  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1043  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1045  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1046  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1047  /** \brief Free the receive buffer, enabling it for the further reception
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1048   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1049   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1050   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1051   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1052   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1053   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1054   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1055   * IfxGeth_Eth_freeReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1056   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1057   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1058   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1059  IFX_EXTERN void IfxGeth_Eth_freeReceiveBuffer(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1060  /** \addtogroup IfxLld_Geth_Eth_Variables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1061   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1062  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1063  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1064  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1065  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1066  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1067  /** \brief Actual rx descriptor lists of all availabe rx channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1068   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1069  IFX_EXTERN IfxGeth_RxDescrList IfxGeth_Eth_rxDescrList[IFXGETH_NUM_MODULES][IFXGETH_NUM_RX_CHANNELS];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1070  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1071  /** \brief Actual tx descriptor lists of all availabe tx channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1072   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1073  IFX_EXTERN IfxGeth_TxDescrList IfxGeth_Eth_txDescrList[IFXGETH_NUM_MODULES][IFXGETH_NUM_TX_CHANNELS];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1074  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1075  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1076  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1077  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1078  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1079  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1080  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1081  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getActualRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1082  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1083      return geth->rxChannel[channelId].rxDescrPtr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1084  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1085  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1086  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1087  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getActualTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1088  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1089      return geth->txChannel[channelId].txDescrPtr;
	ld.a	a15,[a13]20
.L155:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   326          }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   327          /* we correct the buffer 1 size (maybe overwritten in earlier packet */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   328          IfxGeth_TxDescr *pactTxDescriptor;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   329          pactTxDescriptor = (IfxGeth_TxDescr *)IfxGeth_Eth_getActualTxDescriptor(ethernetif, IfxGeth_TxDmaChannel_0);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   330          /* set the buffer length to the max. available */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   331          pactTxDescriptor->TDES2.R.B1L = IFXGETH_MAX_TX_BUFFER_SIZE;
	mov	d0,#2576
.L391:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   332  		IfxGeth_Eth_sendTransmitBuffer(ethernetif, l, IfxGeth_TxDmaChannel_0);
	mov	d4,d8
.L207:
	ld.hu	d15,[a15]8
.L392:
	insert	d15,d15,d0,#0,#14
	st.h	[a15]8,d15
.L18:
	mov	d5,#0
	mov.aa	a4,a13
.L208:
	call	IfxGeth_Eth_sendTransmitBuffer
.L137:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   333      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   334  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   335      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE, ("low_level_output: signal length: %d\n", length));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   336  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   337  #if ETH_PAD_SIZE
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   338      pbuf_header(p, ETH_PAD_SIZE); /* reclaim the padding word */
	mov	d4,#2
	mov.aa	a4,a12
.L209:
	call	pbuf_header
.L210:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   339  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   340  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   341      LINK_STATS_INC(link.xmit);
	movh.a	a15,#@his(lwip_stats)
	ld.hu	d15,[a15]@los(lwip_stats)
.L393:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   342  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   343      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE, ("low_level_output: return OK\n"));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   344  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   345      return ERR_OK;
	mov	d2,#0
.L394:
	add	d15,#1
	st.h	[a15]@los(lwip_stats),d15
.L395:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   346  }
	ret
.L131:
	
__low_level_output_function_end:
	.size	low_level_output,__low_level_output_function_end-low_level_output
.L78:
	; End of function
	
	.sdecl	'.text.netif.GetRxFrameSize',code,cluster('GetRxFrameSize')
	.sect	'.text.netif.GetRxFrameSize'
	.align	2
	

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   347  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   348  static uint16 GetRxFrameSize(IfxGeth_RxDescr *descr)
; Function GetRxFrameSize
.L48:
GetRxFrameSize:	.type	func

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   349  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   350    uint16 len;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   351  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   352    uint32 rdes3 = descr->RDES3.U;
	ld.w	d15,[a4]12
.L211:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   353    uint32 rdes1 = descr->RDES1.U;
	ld.w	d0,[a4]4
.L213:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   354  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   355    if (((rdes3 & (1UL << 15)) != 0U) ||
	jnz.t	d15:15,.L23
.L400:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   356  	  ((rdes1 & (1UL << 7)) != 0U) ||
	jnz.t	d0:7,.L24
.L401:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   357  	  ((rdes3 & (1UL << 28)) == 0U))
	jnz.t	d15:28,.L25
.L24:
.L23:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   358    {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   359  	/* Error, this block is invalid */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   360  	len = 0xFFFFU;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   361    }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   362    else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   363    {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   364      /* Subtract CRC */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   365  	len = (rdes3 & 0x7FFF) - 4U;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   366    }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   367  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   368    return len;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   369  }
	mov.u	d2,#65535
	ret
.L25:
	insert	d15,d15,#0,#15,#17
.L212:
	add	d15,#-4
.L402:
	extr.u	d2,d15,#0,#16
	ret
.L161:
	
__GetRxFrameSize_function_end:
	.size	GetRxFrameSize,__GetRxFrameSize_function_end-GetRxFrameSize
.L83:
	; End of function
	
	.sdecl	'.text.netif.low_level_input',code,cluster('low_level_input')
	.sect	'.text.netif.low_level_input'
	.align	2
	

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   370  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   371  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   372   * Should allocate a pbuf and transfer the bytes of the incoming
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   373   * packet from the interface into the pbuf.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   374   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   375   * @param netif the lwip network interface structure for this ethernetif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   376   * @return a pbuf filled with the received packet (including MAC header)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   377   *         NULL on memory error
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   378   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   379  static pbuf_t *low_level_input(netif_t *netif)
; Function low_level_input
.L50:
low_level_input:	.type	func
	sub.a	a10,#8
.L214:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   380  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   381  	IfxGeth_Eth *ethernetif = netif->state;
	ld.a	a15,[a4]28
.L216:
	st.a	[a10],a15
.L218:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   382      pbuf_t *p, *q;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   383      u16_t   len;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   384  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   385      len = 0;
	mov	d2,#0
.L175:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     2   * \file IfxGeth_Eth.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     3   * \brief GETH ETH details
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     4   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    42   * \defgroup IfxLld_Geth_Eth_Usage How to use the Geth Eth Interface driver?
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    43   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    45   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    46   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    47   * \section IfxLld_Geth_Eth_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    48   * \subsection IfxLld_Geth_Eth_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    50   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    51   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    52   * #include <Geth/Eth/IfxGeth_Eth.h>
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    53   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    54   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    55   * \subsection IfxLld_Geth_Eth_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    56   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    57   * Declare the Geth handle and the Data buffers as global variables in your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    58   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    59   * Note: MAC addds 4 bytes FCS at the end of each packet which will be reflected in RX Buffer.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    60   * If the frame size is equal to buffer size then Rx buffer declaration should be as below
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    61   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    62   * uint8 channel0RxBuffer1[IFXGETH_MAX_RX_BUFFER_SIZE+4];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    63   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    64   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    66   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    67   * // used globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    68   * IfxGeth_Eth geth;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    70   * #define IFXGETH_MAX_TX_DESCRIPTORS 4
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    71   * #define IFXGETH_MAX_RX_DESCRIPTORS 4
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    73   * #define IFXGETH_MAX_TX_BUFFER_SIZE 256 // bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    74   * #define IFXGETH_MAX_RX_BUFFER_SIZE 256 // bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    75   * #define IFXGETH_HEADER_LENGTH 14 // words
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    76   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    77   * uint8 channel0TxBuffer1[IFXGETH_MAX_TX_BUFFER_SIZE];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    78   * uint8 channel0RxBuffer1[IFXGETH_MAX_RX_BUFFER_SIZE];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    79   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    80   * const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    81   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    82   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    83   * \subsection IfxLld_Geth_Eth_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    85   * The module initialisation can be done in the same function. Here an example:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    87   * // create module config
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    88   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    89   * // Geth instance index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    90   * IfxGeth_Index gethInst;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    92   * // Initialise configuration of module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    93   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    94   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    95   * // Get the Geth instance from Module address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    96   * gethInst = IfxGeth_getIndex(geth[geth_inst].gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    98   * config.phyInterfaceMode = IfxGeth_PhyInterfaceMode_rmii;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	    99   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   100   * // MAC core configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   101   * config.macConfig.lineSpeed = IfxGeth_LineSpeed_100Mbps;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   102   * config.macConfig.loopbackMode = IfxGeth_LoopbackMode_disable;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   103   * config.macConfig.macAddress[0] = myMacAddress[0];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   104   * config.macConfig.macAddress[1] = myMacAddress[1];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   105   * config.macConfig.macAddress[2] = myMacAddress[2];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   106   * config.macConfig.macAddress[3] = myMacAddress[3];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   107   * config.macConfig.macAddress[4] = myMacAddress[4];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   108   * config.macConfig.macAddress[5] = myMacAddress[5];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   109   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   110   * // MTL configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   111   * config.mtlConfig.numOfTxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   112   * config.mtlConfig.numOfRxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   113   * config.mtlConfig.txQueueConfig[0].txQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   114   * config.mtlConfig.rxQueueConfig[0].rxQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   115   * config.mtlConfig.rxQueueConfig[0].rxDmaChannelMap        =    IfxEth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   117   * config.dmaConfig.numOfTxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   118   * config.dmaConfig.numOfRxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   119   * config.dmaConfig.txChannel[0].channelId = IfxGeth_TxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   120   * config.dmaConfig.txChannel[0].txDescrList = &IfxGeth_txDescrList[gethInst][0]; //Initialise tx desc list for the Geth instance
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   121   * config.dmaConfig.txChannel[0].txBuffer1StartAddress = &channel0TxBuffer1[0]; // user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   122   * config.dmaConfig.txChannel[0].txBuffer1Size = IFXGETH_MAX_TX_BUFFER_SIZE; // used to calculate the next descriptor  buffer offset
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   123   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   124   * config.dmaConfig.rxChannel[0].channelId = IfxGeth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   125   * config.dmaConfig.rxChannel[0].rxDescrList = &IfxGeth_rxDescrList[gethInst][0]; //Initialise rx desc list for the Geth instance
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   126   * config.dmaConfig.rxChannel[0].rxBuffer1StartAddress = &channel0RxBuffer1[0]; // user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   127   * config.dmaConfig.rxChannel[0].rxBuffer1Size = IFXGETH_MAX_RX_BUFFER_SIZE; // user defined variable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   128   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   129   * config.dmaConfig.txInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   130   * config.dmaConfig.txInterrupt[0].priority = 10;	// priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   131   * config.dmaConfig.txInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   132   * config.dmaConfig.rxInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   133   * config.dmaConfig.rxInterrupt[0].priority = 11;	// priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   134   * config.dmaConfig.rxInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   135   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   136   * // initialise themodule
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   137   * IfxGeth_Eth_initModule(&geth, &config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   139   * // and enable transmitter/receiver
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   140   * IfxGeth_Eth_startTransmitters(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   141   * IfxGeth_Eth_startReceivers(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   142   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   143   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   145   * Note: Application should explicitly configure the system DMA, if system DMA is selected as the service provider for the interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   146   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   147   * The ETH is ready for use now!
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   150   * \section IfxLld_Geth_Eth_DataTransfers Data Transfers
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   151   * \subsection  IfxLld_Geth_Eth_DataTransfers_Transmit Transmission
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   152   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   153   * uint32 payloadLength = 8; // 8 bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   154   * uint32 packetLength = IFXGETH_HEADER_LENGTH + payloadLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   156   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   157   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   158   * // write the header
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   159   * IfxGeth_Eth_writeHeader(&geth, pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   160   * // write the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   161   * uint32 i;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   162   * for(i = IFXGETH_HEADER_LENGTH; i < packetLength; ++i) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   163   *     pTxBuf[i] = i - 13;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   164   * }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   166   * // clear the TX interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   167   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0,IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   168   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   169   * IfxGeth_Eth_sendTransmitBuffer(&geth, packetLength, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   170   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   171   * // wait until buffer has been transmitted
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   172   * while( IfxGeth_dma_isInterruptFlagSet(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) == FALSE );
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   173   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   174   * // clear the TX interrupt status for the next interrupt to come
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   175   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   176   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   177   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   178   * \subsection  IfxLld_Geth_Eth_DataTransfers_Receive Receive
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   179   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   180   * // wait until data is been received
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   181   * while(IfxGeth_Eth_isRxDataAvailable(&geth, IfxGeth_RxDmaChannel_0)!= TRUE);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   182   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   183   * // wake up the receiver and get the recieve buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   184   * uint8 *pRxBuf = (uint8*)IfxGeth_Eth_getReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   186   * // update the descreptor pointer for next packet
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   187   * // Free the receive buffer, enabling it for the further reception
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   188   * IfxGeth_Eth_freeReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   189   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   190   * // data is available in pRxBuf
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   191   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   192   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   193   * \subsection  IfxLld_Geth_Eth_DataTransfers_GiantFrame Giant Frame Transmission
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   194   * Giant frames are supported by ethernet driver.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   195   * By default any frames greater than 1518 bytes are considered as giant frames in the code.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   196   * Giant frames of length 16376 bytes can be transmitted.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   197   * Giant frames of length 16380 bytes can be received by the MAC.(Including the 4 bytes of FCS added by transmitter MAC).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   198   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   199   * The minimum allowed packet size above which the frame is indicated as giant frame is configured as below
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   200   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   201   * In the module initialisation section, make changes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   202   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   203   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   204   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   205   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   206   * config.macConfig.maxPacketSize = 2000;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   207   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   208   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   210   * The above code ensures that any frame of frame size greater than 2000 bytes are set as giant frame in Rx descriptor status.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   211   * Note: This frame size includes the 4 bytes FCS added by the transmitter MAC. Make sure that an Rx buffer has enough space to recieve the giant frame.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   212   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   213   * There are 3 categories under which giant frames can be categoried:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   214   * 1. Frame size = 1518 -  If frame size greater than 1518 is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   215   * 2. Frame size = 2000 -  If frame size greater than 2000 is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   216   * 3. Frame size = 9018 -  If frame size greater than 9018 is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   217   * 4. Any other value Frame size < 16380  - If packet size greater than configured bytes is marked as giant frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   218   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   219   * \subsection  IfxLld_Geth_Eth_Miilite MII lite mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   220   *  MII lite mode is supported .
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   221   *  Application should set the below pins to NULL_PTR to enable the MII lite mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   222   *  IfxGeth_Crs_In     *crs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   223   *  IfxGeth_Col_In     *col
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   224   *  IfxGeth_Rxer_In    *rxEr
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   225   *  IfxGeth_Txer_Out   *txEr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   226   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   227   * \defgroup IfxLld_Geth_Eth ETH
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   228   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   229   * \defgroup IfxLld_Geth_Eth_DataStructures DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   230   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   231   * \defgroup IfxLld_Geth_Eth_MAC_Functions MAC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   232   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   233   * \defgroup IfxLld_Geth_Eth_Module_Functions Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   234   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   235   * \defgroup IfxLld_Geth_Eth_MTL_Functions MTL Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   236   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   237   * \defgroup IfxLld_Geth_Eth_DMA_Functions DMA Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   238   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   239   * \defgroup IfxLld_Geth_Eth_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   240   * \ingroup IfxLld_Geth_Eth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   242  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   243  #ifndef IFXGETH_ET_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   244  #define IFXGETH_ET_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   246  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   247  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   248  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   250  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   251  #include "Geth/Std/IfxGeth.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   252  #include "_PinMap/IfxGeth_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   253  #include "IfxPort_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   254  #include "IfxPort_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   257  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   260  /** \addtogroup IfxLld_Geth_Eth_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   261   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   262  /** \brief Interrupt configuration structure for DMA Channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   264  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   265  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   266      IfxGeth_DmaChannel channelId;       /**< \brief DMA channel ID (irrespective of TX and Rx for interrupt configuration) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   267      Ifx_Priority       priority;        /**< \brief Interrupt service priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   268      IfxSrc_Tos         provider;        /**< \brief Interrupt service provider */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   269  } IfxGeth_Eth_DmaInterruptConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   271  /** \brief Port pins for MII mode configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   272   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   273  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   274  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   275      IfxGeth_Crs_In     *crs;         /**< \brief pointer to CRS input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   276      IfxGeth_Col_In     *col;         /**< \brief pointer to COL input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   277      IfxGeth_Txclk_In   *txClk;       /**< \brief Pointer to TXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   278      IfxGeth_Rxclk_In   *rxClk;       /**< \brief Pointer to RXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   279      IfxGeth_Rxdv_In    *rxDv;        /**< \brief Pointer to RXDV input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   280      IfxGeth_Rxer_In    *rxEr;        /**< \brief Pointer to RXER input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   281      IfxGeth_Rxd_In     *rxd0;        /**< \brief Pointer to RXD0 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   282      IfxGeth_Rxd_In     *rxd1;        /**< \brief Pointer to RXD1 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   283      IfxGeth_Rxd_In     *rxd2;        /**< \brief Pointer to RXD2 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   284      IfxGeth_Rxd_In     *rxd3;        /**< \brief Pointer to RXD3 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   285      IfxGeth_Txen_Out   *txEn;        /**< \brief Pointer to TXEN output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   286      IfxGeth_Txer_Out   *txEr;        /**< \brief Pointer to TXER output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   287      IfxGeth_Txd_Out    *txd0;        /**< \brief Pointer to TXD0 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   288      IfxGeth_Txd_Out    *txd1;        /**< \brief Pointer to TXD1 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   289      IfxGeth_Txd_Out    *txd2;        /**< \brief Pointer to TXD2 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   290      IfxGeth_Txd_Out    *txd3;        /**< \brief Pointer to TXD3 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   291      IfxGeth_Mdc_Out    *mdc;         /**< \brief Pointer to MDC output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   292      IfxGeth_Mdio_InOut *mdio;        /**< \brief Pointer to MDIO pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   293  } IfxGeth_Eth_MiiPins;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   295  /** \brief Interrupt configuration structure for MTL block
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   296   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   297  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   298  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   299      IfxGeth_ServiceRequest serviceRequest;       /**< \brief Service Request node for MTL interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   300      Ifx_Priority           priority;             /**< \brief Interrupt service priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   301      IfxSrc_Tos             provider;             /**< \brief Interrupt service provider */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   302  } IfxGeth_Eth_MtlInterruptConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   304  /** \brief Port pins for RGMII mode configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   305   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   306  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   307  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   308      IfxGeth_Txclk_Out  *txClk;         /**< \brief Pointer to TXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   309      IfxGeth_Txd_Out    *txd0;          /**< \brief Pointer to TXD0 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   310      IfxGeth_Txd_Out    *txd1;          /**< \brief Pointer to TXD1 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   311      IfxGeth_Txd_Out    *txd2;          /**< \brief Pointer to TXD2 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   312      IfxGeth_Txd_Out    *txd3;          /**< \brief Pointer to TXD3 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   313      IfxGeth_Txctl_Out  *txCtl;         /**< \brief Pointer to TXCTL output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   314      IfxGeth_Rxclk_In   *rxClk;         /**< \brief Pointer to RXCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   315      IfxGeth_Rxd_In     *rxd0;          /**< \brief Pointer to RXD0 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   316      IfxGeth_Rxd_In     *rxd1;          /**< \brief Pointer to RXD1 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   317      IfxGeth_Rxd_In     *rxd2;          /**< \brief Pointer to RXD2 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   318      IfxGeth_Rxd_In     *rxd3;          /**< \brief Pointer to RXD3 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   319      IfxGeth_Rxctl_In   *rxCtl;         /**< \brief Pointer to RXCTL input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   320      IfxGeth_Mdc_Out    *mdc;           /**< \brief Pointer to MDC output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   321      IfxGeth_Mdio_InOut *mdio;          /**< \brief Pointer to MDIO pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   322      IfxGeth_Grefclk_In *grefClk;       /**< \brief Pointer to GREFCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   323  } IfxGeth_Eth_RgmiiPins;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   325  /** \brief Port pins for RMII mode configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   326   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   327  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   328  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   329      IfxGeth_Crsdv_In   *crsDiv;       /**< \brief pointer to CRSDIV input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   330      IfxGeth_Refclk_In  *refClk;       /**< \brief Pointer to REFCLK input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   331      IfxGeth_Rxd_In     *rxd0;         /**< \brief Pointer to RXD0 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   332      IfxGeth_Rxd_In     *rxd1;         /**< \brief Pointer to RXD1 input pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   333      IfxGeth_Mdio_InOut *mdio;         /**< \brief Pointer to MDIO pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   334      IfxGeth_Txd_Out    *txd0;         /**< \brief Pointer to TXD0 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   335      IfxGeth_Mdc_Out    *mdc;          /**< \brief Pointer to MDC output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   336      IfxGeth_Txd_Out    *txd1;         /**< \brief Pointer to TXD1 output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   337      IfxGeth_Txen_Out   *txEn;         /**< \brief Pointer to TXEN output pin config */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   338  } IfxGeth_Eth_RmiiPins;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   340  /** \brief Configuration sturcture for DMA rx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   342  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   343  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   344      IfxGeth_RxDmaChannel   channelId;                   /**< \brief Rx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   345      IfxGeth_DmaBurstLength maxBurstLength;              /**< \brief Maximum burst length of the channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   346      IfxGeth_RxDescrList   *rxDescrList;                 /**< \brief pointer to RX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   347      uint32                *rxBuffer1StartAddress;       /**< \brief Start address of Rx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   348      uint16                 rxBuffer1Size;               /**< \brief Size of Rx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   349  } IfxGeth_Eth_RxChannelConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   351  /** \brief Rx Queue Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   352   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   353  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   354  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   355      boolean              storeAndForward;                       /**< \brief Receive Store and Forward Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   356      IfxGeth_QueueSize    rxQueueSize;                           /**< \brief Rx Queue size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   357      boolean              forwardErrorPacket;                    /**< \brief Error Packet Forwarding Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   358      boolean              forwardUndersizedGoodPacket;           /**< \brief Undersized Good Packet Forwarding Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   359      boolean              daBasedDmaChannelEnabled;              /**< \brief DA-based DMA Channel Selection Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   360      IfxGeth_RxDmaChannel rxDmaChannelMap;                       /**< \brief Mapped DMA Channel of Rx Queue */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   361      boolean              rxQueueOverflowInterruptEnabled;       /**< \brief Enable/Disable Rx Queue Overflow Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   362  } IfxGeth_Eth_RxQueueConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   363  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   364  /** \brief Configuration sturcture for DMA tx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   366  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   367  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   368      IfxGeth_TxDmaChannel   channelId;                   /**< \brief Tx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   369      IfxGeth_DmaBurstLength maxBurstLength;              /**< \brief Maximum burst length of the channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   370      IfxGeth_TxDescrList   *txDescrList;                 /**< \brief pointer to TX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   371      uint32                *txBuffer1StartAddress;       /**< \brief Start address of Tx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   372      uint16                 txBuffer1Size;               /**< \brief Size of Tx Buffer 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   373  } IfxGeth_Eth_TxChannelConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   375  /** \brief Tx Queue Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   377  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   378  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   379      boolean           storeAndForward;                        /**< \brief Transmit Store and Forward Enable/Disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   380      IfxGeth_QueueSize txQueueSize;                            /**< \brief Tx Queue size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   381      boolean           txQueueUnderflowInterruptEnabled;       /**< \brief Enable/Disable Tx Queue Underflow Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   382  } IfxGeth_Eth_TxQueueConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   384  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   386  /** \addtogroup IfxLld_Geth_Eth_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   387   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   388  /** \brief Configuration Structure for the DMA initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   390  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   391  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   392      uint32                         numOfTxChannels;                             /**< \brief Number of Tx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   393      uint32                         numOfRxChannels;                             /**< \brief Number of Rx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   394      boolean                        addressAlignedBeatsEnabled;                  /**< \brief Enable/Disable Address Aligned Beats */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   395      boolean                        fixedBurstEnabled;                           /**< \brief Enable/Disable Fixed Burst length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   396      boolean                        mixedBurstEnabled;                           /**< \brief Enable/Disable Mixed Burst length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   397      IfxGeth_Eth_TxChannelConfig    txChannel[IFXGETH_NUM_TX_CHANNELS];          /**< \brief Tx Channels configurations of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   398      IfxGeth_Eth_RxChannelConfig    rxChannel[IFXGETH_NUM_RX_CHANNELS];          /**< \brief Rx Channels configurations of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   399      IfxGeth_Eth_DmaInterruptConfig txInterrupt[IFXGETH_NUM_DMA_CHANNELS];       /**< \brief Transmit Interrupt configuration structure for DMA Channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   400      IfxGeth_Eth_DmaInterruptConfig rxInterrupt[IFXGETH_NUM_DMA_CHANNELS];       /**< \brief Receive Interrupt configuration structure for DMA Channel */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   401  } IfxGeth_Eth_DmaConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   403  /** \brief Configuration Structure for the MAC initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   405  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   406  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   407      IfxGeth_DuplexMode   duplexMode;          /**< \brief Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   408      IfxGeth_LineSpeed    lineSpeed;           /**< \brief Ethernet Line Speed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   409      IfxGeth_LoopbackMode loopbackMode;        /**< \brief Loopback mode enable/disable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   410      uint8                macAddress[6];       /**< \brief MAC address for the ethernet, should be unique in the network */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   411      uint16               maxPacketSize;       /**< \brief Maximum size of the ethernet packet */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   412  } IfxGeth_Eth_MacConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   414  /** \brief Configuration Structure for the MTL initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   416  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   417  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   418      uint32                         numOfTxQueues;                        /**< \brief Number of Tx Queues, will also be used to enable the selected number of queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   419      IfxGeth_TxSchedulingAlgorithm  txSchedulingAlgorithm;                /**< \brief Tx Scheduling Algorithm for Tx queues when no of queues are more than 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   420      uint32                         numOfRxQueues;                        /**< \brief Number of Rx Queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   421      IfxGeth_RxArbitrationAlgorithm rxArbitrationAlgorithm;               /**< \brief Rx Arbitration Algorithm for Rx queues when no of queues are more than 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   422      IfxGeth_Eth_TxQueueConfig      txQueue[IFXGETH_NUM_TX_QUEUES];       /**< \brief Tx queue configurations of selected queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   423      IfxGeth_Eth_RxQueueConfig      rxQueue[IFXGETH_NUM_RX_QUEUES];       /**< \brief Rx queue configurations of selected queues */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   424      IfxGeth_Eth_MtlInterruptConfig interrupt;                            /**< \brief Interrupt configuration structure for MTL block */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   425  } IfxGeth_Eth_MtlConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   427  /** \brief Configuration structure for pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   428   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   429  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   430  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   431      IFX_CONST IfxGeth_Eth_RmiiPins  *rmiiPins;        /**< \brief Structure for RMII pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   432      IFX_CONST IfxGeth_Eth_RgmiiPins *rgmiiPins;       /**< \brief Structure for RGMII pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   433      IFX_CONST IfxGeth_Eth_MiiPins   *miiPins;         /**< \brief Structure for MII pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   434  } IfxGeth_Eth_PinConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   435  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   436  /** \brief Handle sturcture for DMA rx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   437   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   438  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   439  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   440      IfxGeth_RxDmaChannel      channelId;         /**< \brief Rx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   441      IfxGeth_RxDescrList      *rxDescrList;       /**< \brief pointer to RX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   442      volatile IfxGeth_RxDescr *rxDescrPtr;        /**< \brief Pointer to Rx Descriptor (current descriptor) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   443      uint32                    rxCount;           /**< \brief Number of frames received */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   444  } IfxGeth_Eth_RxChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   445  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   446  /** \brief handle sturcture for DMA tx channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   448  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   449  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   450      IfxGeth_TxDmaChannel      channelId;         /**< \brief Tx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   451      IfxGeth_TxDescrList      *txDescrList;       /**< \brief pointer to TX descriptors RAM */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   452      volatile IfxGeth_TxDescr *txDescrPtr;        /**< \brief Pointer to Tx Descriptor (current descriptor) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   453      uint32                    txCount;           /**< \brief Number of frames transmitted */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   454      uint16                    txBuf1Size;        /**< \brief configured tx buffer 1 size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   455  } IfxGeth_Eth_TxChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   456  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   457  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   458  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   459  /** \addtogroup IfxLld_Geth_Eth_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   460   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   461  /** \brief GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   463  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   464  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   465      Ifx_GETH             *gethSFR;                                  /**< \brief Pointer to GETH register base address */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   466      uint32                numOfTxChannels;                          /**< \brief Number of Tx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   467      uint32                numOfRxChannels;                          /**< \brief Number of Rx Dma channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   468      IfxGeth_Eth_TxChannel txChannel[IFXGETH_NUM_TX_CHANNELS];       /**< \brief Tx Channels handle of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   469      IfxGeth_Eth_RxChannel rxChannel[IFXGETH_NUM_RX_CHANNELS];       /**< \brief Rx Channels handle of selected Channels */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   470  } IfxGeth_Eth;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   472  /** \brief Configuration Structure for the Module initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   473   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   474  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   475  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   476      Ifx_GETH                *gethSFR;                /**< \brief Pointer to GETH register base address */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   477      IfxGeth_PhyInterfaceMode phyInterfaceMode;       /**< \brief External Phy Interface RMII Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   478      IfxGeth_Eth_PinConfig    pins;                   /**< \brief COnfiguration structure for Pins */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   479      IfxGeth_Eth_MacConfig    mac;                    /**< \brief Configuration Structure for the the MAC initialisation */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   480      IfxGeth_Eth_MtlConfig    mtl;                    /**< \brief Configuration Structure for the MTL initialisation */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   481      IfxGeth_Eth_DmaConfig    dma;                    /**< \brief Configuration Structure for the DMA initialisation */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   482  } IfxGeth_Eth_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   484  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   486  /** \brief Configuration Structure for TX Frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   488  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   489  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   490      IfxGeth_TxDmaChannel channelId;          /**< \brief Tx DMA channel Index */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   491      uint32               packetLength;       /**< \brief the length of the packet to be transmitted in bytes */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   492  } IfxGeth_Eth_FrameConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   494  /** \addtogroup IfxLld_Geth_Eth_MAC_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   495   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   496  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   497  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   498  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   499  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   501  /** \brief Configures the MAC core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   502   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   503   * \param macConfig Configuration Structure for the MAC initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   504   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   506   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   507   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   508   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   509   * IfxGeth_Eth_MacConfig macConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   510   * macConfig.duplexMode = IfxGeth_DuplexMode_fullDuplex;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   511   * macConfig.lineSpeed = IfxGeth_LineSpeed_100Mbps;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   512   * macConfig.loopbackMode = IfxGeth_LoopbackMode_disable;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   513   * macConfig.macAddress =  {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   515   * IfxGeth_Eth_configureMacCore(&geth, &macConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   516   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   517   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   518   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   519  IFX_EXTERN void IfxGeth_Eth_configureMacCore(IfxGeth_Eth *geth, IfxGeth_Eth_MacConfig *macConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   521  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   522  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   523  /** \addtogroup IfxLld_Geth_Eth_Module_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   524   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   526  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   527  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   530  /** \brief Waits for one TX buffer becomes available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   531   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   532   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   533   * retval non NULL_PTR TX buffer is available at the address pointed by the returned value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   534   * retval NULL_PTR TX buffer is busy.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   535   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   536   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   537   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   538   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   539   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   540   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   541   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   543  IFX_INLINE void *IfxGeth_Eth_waitTransmitBuffer(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   545  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   546  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   547  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   549  /** \brief Gets receive buffer\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   550   * note: IfxEth_freeReceiveBuffer() shall be called after the data from the RX buffer has been processed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   551   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   552   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   553   * \return retval NULL_PTR no received frame
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   554   * retval !NULL_PTR a frame has been received
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   556   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   557   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   558   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   559   * uint8 *pRxBuf = (uint8*)IfxGeth_Eth_getReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   560   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   562   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   563  IFX_EXTERN void *IfxGeth_Eth_getReceiveBuffer(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   565  /** \brief Get the transmit buffer pointer of current descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   566   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   567   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   568   * \return retval NULL_PTR no free transmit buffer is available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   569   * retval !NULL_PTR a free transmit buffer is available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   570   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   571  IFX_EXTERN void *IfxGeth_Eth_getTransmitBuffer(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   572  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   573  /** \brief Initialises the Geth Module with given configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   574   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   575   * \param config Configuration Structure for the Module initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   579   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   580   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   581   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   582   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   583   * IfxGeth_Eth_initModule(&geth, &config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   584   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   585   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   586   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   587  IFX_EXTERN void IfxGeth_Eth_initModule(IfxGeth_Eth *geth, IfxGeth_Eth_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   589  /** \brief Initialises the config structure with default values
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   590   * \param config Configuration Structure for the Module initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   591   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   592   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   593   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   594   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   595   * IfxGeth_Eth_Config config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   596   * IfxGeth_Eth_initModuleConfig(&config, &MODULE_GETH);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   597   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   599   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   600  IFX_EXTERN void IfxGeth_Eth_initModuleConfig(IfxGeth_Eth_Config *config, Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   602  /** \brief Set up MII mode input pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   603   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   604   * \param miiPins Mii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   605   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   606   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   607  IFX_EXTERN void IfxGeth_Eth_setupMiiInputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_MiiPins *miiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   609  /** \brief setup MII mode output pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   610   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   611   * \param miiPins Mii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   612   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   613   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   614  IFX_EXTERN void IfxGeth_Eth_setupMiiOutputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_MiiPins *miiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   616  /** \brief Set up RGMII mode input pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   617   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   618   * \param rgmiiPins RGMII Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   619   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   620   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   621  IFX_EXTERN void IfxGeth_Eth_setupRgmiiInputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RgmiiPins *rgmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   622  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   623  /** \brief Set up RGMII mode output pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   624   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   625   * \param rgmiiPins RGMII Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   626   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   628  IFX_EXTERN void IfxGeth_Eth_setupRgmiiOutputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RgmiiPins *rgmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   629  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   630  /** \brief setup RMII mode input pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   631   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   632   * \param rmiiPins Rmii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   633   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   634   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   635  IFX_EXTERN void IfxGeth_Eth_setupRmiiInputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RmiiPins *rmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   637  /** \brief setup RMII mode output pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   638   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   639   * \param rmiiPins Rmii Pins
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   640   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   641   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   642  IFX_EXTERN void IfxGeth_Eth_setupRmiiOutputPins(IfxGeth_Eth *geth, const IfxGeth_Eth_RmiiPins *rmiiPins);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   644  /** \brief writes the header format into buffrer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   645   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   646   * \param txBuffer pointer to tx buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   647   * \param destinationAddress pointer to destination address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   648   * \param sourceAddress pointer to source address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   649   * \param payloadLength size of the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   650   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   651   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   652   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   653   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   654   * //const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   655   * //#define IFXGETH_MAX_TX_BUFFER_SIZE 256   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   656   * //uint8 txBuffer1[IFXGETH_MAX_TX_BUFFER_SIZE];  // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   657   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   658   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   659   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   660   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   661   * IfxGeth_Eth_writeHeader(&geth, &pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   662   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   663   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   664   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   665  IFX_EXTERN void IfxGeth_Eth_writeHeader(IfxGeth_Eth *geth, uint8 *txBuffer, uint8 *destinationAddress, uint8 *sourceAddress, uint32 payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   666  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   667  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   669  /** \addtogroup IfxLld_Geth_Eth_MTL_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   670   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   671  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   672  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   673  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   674  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   675  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   676  /** \brief Configures the MTL
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   677   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   678   * \param mtlConfig Configuration Structure for the MTL initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   679   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   680   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   681   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   682   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   684   * IfxGeth_Eth_MtlConfig mtlConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   685   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   686   * mtlConfig.numOfTxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   687   * mtlConfig.txSchedulingAlgorithm        =    IfxGeth_TxSchedulingAlgorithm_wrr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   688   * mtlConfig.numOfRxQueues                =    1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   689   * mtlConfig.rxArbitrationAlgorithm       =    IfxGeth_RxArbitrationAlgorithm_sp;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   690   * mtlConfig.txQueueConfig[0].storeAndForward              =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   691   * mtlConfig.txQueueConfig[0].txQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   692   * mtlConfig.txQueueConfig[0].txQueueUnderflowInterruptEnabled = FLASE;	// enable if required
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   693   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   694   * mtlConfig.rxQueueConfig[0].storeAndForward              =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   695   * mtlConfig.rxQueueConfig[0].rxQueueSize                  =    IfxGeth_QueueSize_256Bytes;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   696   * mtlConfig.rxQueueConfig[0].forwardErrorPacket           =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   697   * mtlConfig.rxQueueConfig[0].forwardUndersizeedGoodPacket    =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   698   * mtlConfig.rxQueueConfig[0].daBasedDmaChannelEnabled     =    FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   699   * mtlConfig.rxQueueConfig[0].rxDmaChannelMap              =    IfxEth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   700   * mtlConfig.rxQueueConfig[0].rxQueueOverflowInterruptEnabled = FALSE;	// enable if required
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   701   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   702   * mtlConfig.interrupt.serviceRequest = IfxGeth_ServiceRequest_1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   703   * mtlConfig.interrupt.priority = 0;	// choose priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   704   * mtlConfig.interrupt.provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   705   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   706   * IfxGeth_Eth_configureMTL(&geth, &mtlConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   707   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   709   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   710  IFX_EXTERN void IfxGeth_Eth_configureMTL(IfxGeth_Eth *geth, IfxGeth_Eth_MtlConfig *mtlConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   712  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   714  /** \addtogroup IfxLld_Geth_Eth_DMA_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   715   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   716  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   717  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   718  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   719  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   720  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   721  /** \brief Returns the pointer to current RX descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   722   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   723   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   724   * \return pointer to base RX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   725   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   726   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   727   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   728   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   729   * IfxGeth_RxDescr *descr = IfxGeth_Eth_getActualRxDescriptor(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   730   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   731   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   733  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getActualRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   735  /** \brief Returns the pointer to current TX descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   736   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   737   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   738   * \return pointer to base TX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   739   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   740   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   741   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   742   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   743   * IfxGeth_TxDescr *descr = IfxGeth_Eth_getActualTxDescriptor(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   744   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   745   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   746   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   747  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getActualTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   749  /** \brief Checks whether one or more RX data is available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   750   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   751   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   752   * \return TRUE : if one or more RX data available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   753   * FALSE: if Rx data not available
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   754   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   755   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   756   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   757   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   758   * boolean status = IfxGeth_Eth_isRxDataAvailable(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   759   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   760   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   761   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   762  IFX_INLINE boolean IfxGeth_Eth_isRxDataAvailable(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   763  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   764  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   765  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   766  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   768  /** \brief Configures the DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   769   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   770   * \param dmaConfig Configuration Structure for the DMA initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   771   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   772   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   773   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   774   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   775   * IfxGeth_Eth_DmaConfig dmaConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   776   * dmaConfig.numOfTxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   777   * dmaConfig.numOfRxChannels = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   778   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   779   * dmaConfig.txChannel[0].channelId = IfxGeth_TxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   780   * dmaConfig.txChannel[0].txDescrList = &IfxGeth_txDescrList[0];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   781   * dmaConfig.txChannel[0].txBuffer1StartAddress = &txBuffer[0][0]; //  user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   782   * dmaConfig.txChannel[0].txBuffer1Size = TX_BUFFER1_SIZE; // user defined variable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   783   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   784   * dmaConfig.rxChannel[0].channelId = IfxGeth_RxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   785   * dmaConfig.rxChannel[0].rxDescrList = &IfxGeth_rxDescrList[0];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   786   * dmaConfig.rxChannel[0].rxBuffer1StartAddress = &rxBuffer[0][0]; // user buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   787   * dmaConfig.rxChannel[0].rxBuffer1Size = RX_BUFFER1_SIZE; // user defined variable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   788   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   789   * dmaConfig.txInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   790   * dmaConfig.txInterrupt[0].priority = 0;	// choose priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   791   * dmaConfig.txInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   792   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   793   * dmaConfig.rxInterrupt[0].channelId = IfxGeth_DmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   794   * dmaConfig.rxInterrupt[0].priority = 0;	// choose priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   795   * dmaConfig.rxInterrupt[0].provider = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   796   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   797   * IfxGeth_Eth_configureDMA(&geth, &dmaConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   798   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   799   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   800   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   801  IFX_EXTERN void IfxGeth_Eth_configureDMA(IfxGeth_Eth *geth, IfxGeth_Eth_DmaConfig *dmaConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   802  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   803  /** \brief Initialises the Rx descriptors of a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   804   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   805   * \param config Rx channel configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   806   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   807   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   808  IFX_EXTERN void IfxGeth_Eth_initReceiveDescriptors(IfxGeth_Eth *geth, IfxGeth_Eth_RxChannelConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   809  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   810  /** \brief Initialises the Tx descriptors of a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   811   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   812   * \param config Tx channel configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   813   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   814   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   815  IFX_EXTERN void IfxGeth_Eth_initTransmitDescriptors(IfxGeth_Eth *geth, IfxGeth_Eth_TxChannelConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   816  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   817  /** \brief Transmits a frame from a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   818   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   819   * \param config Tx Frame configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   820   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   821   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   822   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   823   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   824   * //const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   825   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   826   * uint32 payloadLength = 8; // 8 bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   827   * uint32 packetLength = IFXGETH_HEADER_LENGTH + payloadLength; // IFXGETH_HEADER_LENGTH defined by user
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   828   * IfxGeth_FrameConfig frameConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   829   * frameConfig.channelId = IfxGeth_TxDmaChannel_0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   830   * frameConfig.packetLength = packetLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   831   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   832   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   833   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   834   * // write the header
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   835   * IfxGeth_Eth_writeHeader(&geth, pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   836   * // write the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   837   * uint32 i;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   838   * for(i = IFXGETH_HEADER_LENGTH; i < packetLength; ++i) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   839   *     pTxBuf[i] = i - 13;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   840   * }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   841   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   842   * // clear the TX interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   843   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   844   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   845   * IfxGeth_Eth_sendFrame(&geth, &frameConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   846   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   847   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   848   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   849  IFX_EXTERN void IfxGeth_Eth_sendFrame(IfxGeth_Eth *geth, IfxGeth_Eth_FrameConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   851  /** \brief Transmits a frame from a single channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   852   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   853   * \param packetLength Length of the packet to be transmitted in bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   854   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   855   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   856   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   857   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   858   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   859   * //const uint8 myMacAddress[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};   // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   860   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   861   * uint32 payloadLength = 8; // 8 bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   862   * uint32 packetLength = IFXGETH_HEADER_LENGTH + payloadLength; // IFXGETH_HEADER_LENGTH defined by user
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   863   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   864   * // get free buffer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   865   * uint8 *pTxBuf = (uint8*) IfxGeth_Eth_waitTransmitBuffer(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   866   * // write the header
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   867   * IfxGeth_Eth_writeHeader(&geth, pTxBuf, (uint8 *)myMacAddress, (uint8 *)myMacAddress, payloadLength);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   868   * // write the payload
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   869   * uint32 i;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   870   * for(i = IFXGETH_HEADER_LENGTH; i < packetLength; ++i) {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   871   *     pTxBuf[i] = i - 13;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   872   * }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   873   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   874   * // clear the TX interrupt status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   875   * IfxGeth_dma_clearInterruptFlag(geth->gethSFR, IfxGeth_DmaChannel_0, IfxGeth_DmaInterruptFlag_transmitInterrupt) ;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   876   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   877   * IfxGeth_Eth_sendTransmitBuffer(&geth, packetLength, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   878   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   879   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   881  IFX_EXTERN void IfxGeth_Eth_sendTransmitBuffer(IfxGeth_Eth *geth, uint32 packetLength, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   883  /** \brief Updates the current Rx descriptor pointer in the handle to next Rx descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   884   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   885   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   886   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   887   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   888   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   889   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   890   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   891   * IfxGeth_Eth_shuffleRxDescriptor(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   892   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   893   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   894   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   895  IFX_EXTERN void IfxGeth_Eth_shuffleRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   896  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   897  /** \brief Updates the current Tx descriptor pointer in the handle to next Tx descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   898   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   899   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   900   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   901   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   902   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   903   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   904   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   905   * IfxGeth_Eth_shuffleTxDescriptor(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   906   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   907   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   908   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   909  IFX_EXTERN void IfxGeth_Eth_shuffleTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   910  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   911  /** \brief Start the Receiver functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   912   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   913   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   914   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   915   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   916   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   917   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   918   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   919   * IfxGeth_Eth_startReceiver(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   920   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   921   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   922   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   923  IFX_EXTERN void IfxGeth_Eth_startReceiver(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   924  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   925  /** \brief Start the Receiver functions of MAC and all selected number of DMA channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   926   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   927   * \param numOfChannels number of channels to be started for transmission (starting from channel 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   928   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   929   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   930   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   931   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   932   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   933   * IfxGeth_Eth_startReceivers(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   934   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   935   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   936   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   937  IFX_EXTERN void IfxGeth_Eth_startReceivers(IfxGeth_Eth *geth, uint32 numOfChannels);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   938  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   939  /** \brief Start the transmitter functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   940   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   941   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   942   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   943   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   944   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   945   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   946   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   947   * IfxGeth_Eth_startTransmitter(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   948   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   949   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   950   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   951  IFX_EXTERN void IfxGeth_Eth_startTransmitter(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   952  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   953  /** \brief Start the transmitter functions of MAC and all selected number of DMA channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   954   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   955   * \param numOfChannels number of channels to be started for transmission (starting from channel 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   956   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   957   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   958   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   959   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   960   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   961   * IfxGeth_Eth_startTransmitter(&geth, 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   962   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   963   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   964   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   965  IFX_EXTERN void IfxGeth_Eth_startTransmitters(IfxGeth_Eth *geth, uint32 numOfChannels);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   966  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   967  /** \brief Stops the transmitter functions of MAC and all selected number of DMA channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   968   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   969   * \param numOfChannels number of channels to be started for transmission (starting from channel 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   970   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   971   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   972   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   973   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   974   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   975   * IfxGeth_Eth_stopTransmitter(&geth, 4);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   976   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   977   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   978   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   979  IFX_EXTERN void IfxGeth_Eth_stopTransmitters(IfxGeth_Eth *geth, uint32 numOfChannels);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   980  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   981  /** \brief Wakes up the Receiver functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   982   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   983   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   984   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   985   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   986   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   987   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   988   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   989   * IfxGeth_Eth_wakeupReceiver(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   990   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   991   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   992   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   993  IFX_EXTERN void IfxGeth_Eth_wakeupReceiver(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   994  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   995  /** \brief Wakes up the transmitter functions of MAC and selected channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   996   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   997   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   998   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	   999   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1000   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1001   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1002   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1003   * IfxGeth_Eth_wakeupTransmitter(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1004   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1005   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1007  IFX_EXTERN void IfxGeth_Eth_wakeupTransmitter(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1009  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1010  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1011  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1012  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1013  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1014  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1015  /** \brief Returns the pointer to base RX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1016   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1017   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1018   * \return pointer to base RX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1019   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1020   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1021   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1022   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1023   * IfxGeth_RxDescr *descr = IfxGeth_Eth_getBaseRxDescriptor(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1024   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1025   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1026   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1027  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getBaseRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1029  /** \brief Returns the pointer to base TX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1030   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1031   * \param channelId Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1032   * \return pointer to base TX descriptor in the list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1033   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1034   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1035   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1036   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1037   * IfxGeth_TxDescr *descr = IfxGeth_Eth_getBaseTxDescriptor(&geth, IfxGeth_TxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1038   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1039   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1040   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1041  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getBaseTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1042  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1043  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1044  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1045  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1046  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1047  /** \brief Free the receive buffer, enabling it for the further reception
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1048   * \param geth GETH driver Handle
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1049   * \param channelId Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1050   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1051   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1052   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1053   * // IfxGeth_Eth geth; // assumed to be defined globally
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1054   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1055   * IfxGeth_Eth_freeReceiveBuffer(&geth, IfxGeth_RxDmaChannel_0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1056   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1057   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1058   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1059  IFX_EXTERN void IfxGeth_Eth_freeReceiveBuffer(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1060  /** \addtogroup IfxLld_Geth_Eth_Variables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1061   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1062  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1063  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1064  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1065  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1066  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1067  /** \brief Actual rx descriptor lists of all availabe rx channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1068   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1069  IFX_EXTERN IfxGeth_RxDescrList IfxGeth_Eth_rxDescrList[IFXGETH_NUM_MODULES][IFXGETH_NUM_RX_CHANNELS];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1070  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1071  /** \brief Actual tx descriptor lists of all availabe tx channels
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1072   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1073  IFX_EXTERN IfxGeth_TxDescrList IfxGeth_Eth_txDescrList[IFXGETH_NUM_MODULES][IFXGETH_NUM_TX_CHANNELS];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1074  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1075  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1076  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1077  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1078  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1079  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1080  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1081  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getActualRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1082  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1083      return geth->rxChannel[channelId].rxDescrPtr;
	ld.a	a4,[a15]100
.L215:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1084  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1085  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1086  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1087  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getActualTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1088  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1089      return geth->txChannel[channelId].txDescrPtr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1090  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1091  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1092  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1093  IFX_INLINE volatile IfxGeth_RxDescr *IfxGeth_Eth_getBaseRxDescriptor(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1094  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1095      return geth->rxChannel[channelId].rxDescrList->descr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1096  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1097  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1098  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1099  IFX_INLINE volatile IfxGeth_TxDescr *IfxGeth_Eth_getBaseTxDescriptor(IfxGeth_Eth *geth, IfxGeth_TxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1100  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1101      return geth->txChannel[channelId].txDescrList->descr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1102  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1103  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1104  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1105  IFX_INLINE boolean IfxGeth_Eth_isRxDataAvailable(IfxGeth_Eth *geth, IfxGeth_RxDmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1106  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Eth\IfxGeth_Eth.h	  1107      return IfxGeth_Eth_getActualRxDescriptor(geth, channelId)->RDES3.R.OWN == 0;
	ld.bu	d15,[a4]15
.L176:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   386      if (IfxGeth_Eth_isRxDataAvailable(ethernetif, IfxGeth_RxDmaChannel_0) != FALSE)
	jnz.t	d15:7,.L28
.L407:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   387      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   388          len = GetRxFrameSize((IfxGeth_RxDescr *)IfxGeth_Eth_getActualRxDescriptor(ethernetif, IfxGeth_RxDmaChannel_0));
	call	GetRxFrameSize
.L28:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   389      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   390  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   391      if (len == 0)
	jne	d2,#0,.L29
.L408:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   392      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   393          return (pbuf_t *)0;
	mov.a	a2,#0
.L409:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   394      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   395  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   396  #if ETH_PAD_SIZE
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   397      len += ETH_PAD_SIZE; /* allow room for Ethernet padding */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   398  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   399  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   400      /* We allocate a pbuf chain of pbufs from the pool. */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   401      p = pbuf_alloc(PBUF_RAW, len, PBUF_POOL);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   402  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   403      if (p != NULL)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   404      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   405  #if ETH_PAD_SIZE
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   406          pbuf_header(p, -ETH_PAD_SIZE); /* drop the padding word */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   407  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   408  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   409          u8_t *src = IfxGeth_Eth_getReceiveBuffer(ethernetif, IfxGeth_RxDmaChannel_0);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   410  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   411          /* We iterate over the pbuf chain until we have read the entire
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   412           * packet into the pbuf. */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   413          for (q = p; q != NULL; q = q->next)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   414          {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   415              /* Read enough bytes to fill this pbuf in the chain. The
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   416               * available data in the pbuf is given by the q->len
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   417               * variable.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   418               * This does not necessarily have to be a memcpy, you can also preallocate
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   419               * pbufs for a DMA-enabled MAC and after receiving truncate it to the
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   420               * actually received size. In this case, ensure the tot_len member of the
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   421               * pbuf is the sum of the chained pbuf len members.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   422               */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   423              //read data into(q->payload, q->len);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   424              memcpy(q->payload, src, q->len);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   425              src = &src[q->len];
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   426  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   427              LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE, ("low_level_input: payload=0x%x, len=%d\n", q->payload, q->len));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   428          }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   429  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   430          //acknowledge that packet has been read();
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   431          IfxGeth_Eth_freeReceiveBuffer(ethernetif, IfxGeth_RxDmaChannel_0);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   432  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   433  #if ETH_PAD_SIZE
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   434          pbuf_header(p, ETH_PAD_SIZE); /* reclaim the padding word */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   435  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   436  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   437          LINK_STATS_INC(link.recv);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   438      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   439      else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   440      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   441          //TODO: drop packet();
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   442          LINK_STATS_INC(link.memerr);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   443          LINK_STATS_INC(link.drop);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   444      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   445  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   446      return p;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   447  }
	ret
.L29:
	add	d2,#2
.L219:
	extr.u	d5,d2,#0,#16
.L220:
	mov	d4,#0
.L410:
	mov	d6,#386
	call	pbuf_alloc
.L221:
	mov.aa	a12,a2
.L183:
	movh.a	a15,#@his(lwip_stats)
.L217:
	lea	a15,[a15]@los(lwip_stats)
.L184:
	jz.a	a12,.L31
.L411:
	mov	d4,#-2
	mov.aa	a4,a12
.L222:
	call	pbuf_header
.L185:
	mov	d4,#0
	ld.a	a4,[a10]
.L223:
	call	IfxGeth_Eth_getReceiveBuffer
.L224:
	mov.aa	a13,a2
.L225:
	mov.aa	a14,a12
.L32:
	ld.a	a4,[a14]4
.L412:
	ld.hu	d4,[a14]10
	mov.aa	a5,a13
.L226:
	call	memcpy
.L227:
	ld.hu	d15,[a14]10
.L413:
	ld.a	a14,[a14]
.L414:
	addsc.a	a13,a13,d15,#0
.L415:
	jnz.a	a14,.L32
.L416:
	mov	d4,#0
	ld.a	a4,[a10]
.L228:
	call	IfxGeth_Eth_freeReceiveBuffer
.L229:
	mov	d4,#2
	mov.aa	a4,a12
.L230:
	call	pbuf_header
.L231:
	ld.hu	d15,[a15]2
	add	d15,#1
	st.h	[+a15]2,d15
.L186:
	j	.L33
.L31:
	ld.hu	d15,[a15]12
	add	d15,#1
	st.h	[a15]12,d15
.L417:
	ld.hu	d15,[a15]6
	add	d15,#1
	st.h	[+a15]6,d15
.L33:
	mov.aa	a2,a12
.L232:
	ret
.L168:
	
__low_level_input_function_end:
	.size	low_level_input,__low_level_input_function_end-low_level_input
.L88:
	; End of function
	
	.sdecl	'.text.netif.ifx_netif_input',code,cluster('ifx_netif_input')
	.sect	'.text.netif.ifx_netif_input'
	.align	2
	
	.global	ifx_netif_input

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   448  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   449  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   450  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   451   * This function should be called when a packet is ready to be read
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   452   * from the interface. It uses the function low_level_input() that
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   453   * should handle the actual reception of bytes from the network
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   454   * interface. Then the type of the received packet is determined and
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   455   * the appropriate input function is called.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   456   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   457   * @param netif the lwip network interface structure for this ethernetif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   458   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   459  err_t ifx_netif_input(netif_t *netif)
; Function ifx_netif_input
.L52:
ifx_netif_input:	.type	func
	mov.aa	a15,a4
.L234:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   460  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   461      //Ifx_GETH *ethernetif = netif->state;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   462      eth_hdr_t *ethhdr;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   463      pbuf_t    *p;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   464  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   465      /* move received packet into a new pbuf */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   466      p = low_level_input(netif);
	call	low_level_input
.L233:
	mov.aa	a12,a2
.L236:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   467  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   468      /* no packet could be read, silently ignore this */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   469      if (p == NULL)
	jz.a	a12,.L35
.L275:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   470      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   471          //LWIP_DEBUGF(NETIF_DEBUG, ("ifx_netif_input: p == NULL!\n"));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   472          return ERR_OK;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   473      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   474  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   475      /* points to packet payload, which starts with an Ethernet header */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   476      ethhdr = p->payload;
	ld.a	a2,[a12]4
.L235:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   477  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   478      switch (htons(ethhdr->type))
	ld.hu	d4,[a2]14
	call	lwip_htons
.L276:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   479      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   480      /* IP or ARP packet? */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   481      case ETHTYPE_IP:
	mov	d15,#2048
	jeq	d15,d2,.L36
.L277:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   482      case ETHTYPE_ARP:
	mov	d15,#2054
	jne	d15,d2,.L38
.L36:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   483  #if PPPOE_SUPPORT
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   484      /* PPPoE packet? */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   485      case ETHTYPE_PPPOEDISC:
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   486      case ETHTYPE_PPPOE:
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   487  #endif /* PPPOE_SUPPORT */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   488  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   489          /* full packet send to tcpip_thread to process */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   490          if (netif->input(p, netif) != ERR_OK)
	ld.a	a2,[a15]16
.L278:
	mov.aa	a4,a12
.L237:
	mov.aa	a5,a15
.L239:
	calli	a2
.L238:
	jeq	d2,#0,.L39

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   491          {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   492              LWIP_DEBUGF(NETIF_DEBUG, ("ifx_netif_input: IP input error\n"));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   493              pbuf_free(p);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   494              p = NULL;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   495          }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   496  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   497          break;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   498  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   499      default:
.L38:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   500          LWIP_DEBUGF(NETIF_DEBUG, ("ifx_netif_input: type unknown\n"));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   501          pbuf_free(p);
	mov.aa	a4,a12
.L240:
	call	pbuf_free
.L39:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   502          p = NULL;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   503          break;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   504      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   505  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   506      return ERR_OK;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   507  }
.L35:
	mov	d2,#0
	ret
.L95:
	
__ifx_netif_input_function_end:
	.size	ifx_netif_input,__ifx_netif_input_function_end-ifx_netif_input
.L68:
	; End of function
	
	.sdecl	'.text.netif.ifx_netif_init',code,cluster('ifx_netif_init')
	.sect	'.text.netif.ifx_netif_init'
	.align	2
	
	.global	ifx_netif_init

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   508  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   509  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   510  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   511   * Should be called at the beginning of the program to set up the
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   512   * network interface. It calls the function low_level_init() to do the
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   513   * actual setup of the hardware.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   514   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   515   * This function should be passed as a parameter to netif_add().
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   516   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   517   * @param netif the lwip network interface structure for this ethernetif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   518   * @return ERR_OK if the loopif is initialized
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   519   *         ERR_MEM if private data couldn't be allocated
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   520   *         any other err_t on error
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   521   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   522  err_t ifx_netif_init(netif_t *netif)
; Function ifx_netif_init
.L54:
ifx_netif_init:	.type	func
	sub.a	a10,#16
.L241:
	mov.aa	a12,a4
.L243:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   523  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   524  	IfxGeth_Eth *ethernetif;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   525  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   526      LWIP_ASSERT("netif != NULL", (netif != NULL));
	jnz.a	a12,.L41
.L262:
	movh.a	a2,#@his(.11.str)
	lea	a2,[a2]@los(.11.str)
	st.a	[a10],a2
	mov	d15,#526
	st.w	[a10]4,d15
	movh.a	a15,#@his(.5.str)
	lea	a15,[a15]@los(.5.str)
	st.a	[a10]8,a15
	movh.a	a4,#@his(.3.str)
.L242:
	lea	a4,[a4]@los(.3.str)
	call	Ifx_Lwip_printf
.L41:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	     2   * \file Ifx_Lwip.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	     3   * \brief Header file of lwIP port to TriCore
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	     4   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	     5   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	     6   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	     7   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	     9   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    15   * terms of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    16  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    17  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    19  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    20   * Permission is hereby granted, free of charge, to any person or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    21   * organization obtaining a copy of the software and accompanying
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    22   * documentation covered by this license (the "Software") to use, reproduce,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    23   * display, distribute, execute, and transmit the Software, and to prepare
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    24   * derivative works of the Software, and to permit third-parties to whom the
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    25   * Software is furnished to do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    26  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    33  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    43   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    44  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    45  #ifndef IFX_LWIP_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    46  #define IFX_LWIP_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    47  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    48  //________________________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    49  // INCLUDES
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    51  #include "lwip/opt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    52  #include "lwip/def.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    53  #include "lwip/mem.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    54  #include "lwip/pbuf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    55  #include "lwip/sys.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    56  #include "lwip/stats.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    57  #include "lwip/snmp.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    58  #include "lwip/ip.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    59  #include "lwip/udp.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    60  #include "lwip/tcp.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    61  #include "lwip/priv/tcp_priv.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    62  #include "lwip/dhcp.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    63  #include "lwip/init.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    64  #include "netif/etharp.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    65  #include "netif/ppp/pppoe.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    66  #include "IfxGeth_Eth.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    68  //________________________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    69  // HELPER MACROS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    71  #define MAC_ADDR(ptr, a, b, c, d, e, f) \ 
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    72      (ptr)->addr[0] = a;                 \ 
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    73      (ptr)->addr[1] = b;                 \ 
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    74      (ptr)->addr[2] = c;                 \ 
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    75      (ptr)->addr[3] = d;                 \ 
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    76      (ptr)->addr[4] = e;                 \ 
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    77      (ptr)->addr[5] = f;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    79  //________________________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    80  // TYPEDEFS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    81  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    82  /* NOTE: these typedefs are shortcuts to the native LWIP struct types */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    83  typedef struct netif    netif_t;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    84  typedef struct pbuf     pbuf_t;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    85  typedef struct dhcp     dhcp_t;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    86  typedef struct eth_addr eth_addr_t;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    87  typedef struct eth_hdr  eth_hdr_t;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    88  typedef struct ip_addr  ipaddr_t;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    89  typedef struct udp_pcb  udp_pcb_t;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    90  typedef struct tcp_pcb  tcp_pcb_t;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    92  //________________________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    93  // DATA STRUCTURES
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    95  /** \brief Runtime structure of the AURIX LWIP stack */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    96  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    97  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    98      netif_t    netif;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	    99  #if LWIP_DHCP
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   100      dhcp_t     dhcp;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   101  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   102      eth_addr_t eth_addr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   103      struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   104      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   105          uint16 arp;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   106  #if LWIP_DHCP
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   107          uint16 dhcp_coarse;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   108          uint16 dhcp_fine;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   109  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   110          uint16 tcp_fast;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   111          uint16 tcp_slow;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   112          uint16 link;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   113      }               timer;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   114  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   115      volatile uint16 timerFlags;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   116  } Ifx_Lwip;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   118  /** \brief Configuration structure for the AURIX LWIP stack */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   119  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   120  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   121      ip_addr_t  ipAddr;      /**< \brief IP address, e.g. : {192,168,220,123} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   122      ip_addr_t  netMask;     /**< \brief Network mask, e.g. : {255,255,255,0} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   123      ip_addr_t  gateway;     /**< \brief Gateway address, e.g. : {192,168,220,1} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   124      eth_addr_t ethAddr;     /**< \brief Ethernet (MAC) address, e.g. : {0x10, 0x20, 0x30, 0x40, 0x50, 0x60} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   125  } Ifx_Lwip_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   127  #define IFXGETH_HEADER_LENGTH 14 // words
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   128  #define IFXGETH_MAX_TX_BUFFER_SIZE (2560+IFXGETH_HEADER_LENGTH+2) // bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   129  #define IFXGETH_MAX_RX_BUFFER_SIZE (2560+IFXGETH_HEADER_LENGTH+2) // bytes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   131  //________________________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   132  // GLOBAL VARIABLES
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   133  IFX_EXTERN volatile uint32 g_TickCount_1ms;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   134  IFX_EXTERN Ifx_Lwip g_Lwip;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   135  IFX_EXTERN IfxGeth_Eth g_IfxGeth;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   136  IFX_EXTERN uint8 channel0TxBuffer1[IFXGETH_MAX_TX_DESCRIPTORS][IFXGETH_MAX_TX_BUFFER_SIZE];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   137  IFX_EXTERN uint8 channel0RxBuffer1[IFXGETH_MAX_RX_DESCRIPTORS][IFXGETH_MAX_RX_BUFFER_SIZE];
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   139  //________________________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   140  // FUNCTION PROTOTYPES
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   141  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   142  /** \addtogroup lib_lwIP
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   143   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   144  IFX_EXTERN void     Ifx_Lwip_init(eth_addr_t ethAddr);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   145  IFX_EXTERN void     Ifx_Lwip_onTimerTick(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   146  IFX_EXTERN void     Ifx_Lwip_pollTimerFlags(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   147  IFX_EXTERN void     Ifx_Lwip_pollReceiveFlags(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   148  IFX_INLINE netif_t *Ifx_Lwip_getNetIf(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   149  IFX_INLINE uint8   *Ifx_Lwip_getIpAddrPtr(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   150  IFX_INLINE uint8   *Ifx_Lwip_getHwAddrPtr(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   151  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   152  /* This function is used to get the low-level driver */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   153  IFX_INLINE IfxGeth_Eth *IfxGeth_get(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   156  //________________________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   157  // INLINE FUNCTION IMPLEMENTATIONS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   159  /** \brief Returns pointer to the default network interface */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   160  IFX_INLINE netif_t *Ifx_Lwip_getNetIf(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   161  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   162      return &g_Lwip.netif;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   163  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   166  /** \brief Returns pointer to the actual IP address */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   167  IFX_INLINE uint8 *Ifx_Lwip_getIpAddrPtr(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   168  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   169      return (uint8 *)&g_Lwip.netif.ip_addr.addr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   170  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   171  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   173  /** \brief Returns pointer to the actual H/W (MAC) address */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   174  IFX_INLINE uint8 *Ifx_Lwip_getHwAddrPtr(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   175  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   176      return g_Lwip.eth_addr.addr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   177  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   178  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   179  /* This function is used to get the low-level driver */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   180  IFX_INLINE IfxGeth_Eth *IfxGeth_get(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   181  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\0_AppSw\Ethernet\lwip\port\include\Ifx_Lwip.h	   182      return &g_IfxGeth;
	movh.a	a15,#@his(g_IfxGeth)
	lea	a15,[a15]@los(g_IfxGeth)
.L263:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   527      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE, ("ifx_netif_init ( %#x)\n", netif));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   528  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   529      ethernetif = IfxGeth_get();
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   530  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   531      if (ethernetif == NULL)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   532      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   533          LWIP_DEBUGF(NETIF_DEBUG, ("ifx_netif_init: out of memory\n"));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   534          return ERR_MEM;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   535      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   536  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   537  #if LWIP_NETIF_HOSTNAME
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   538      /* Initialize interface hostname */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   539      netif->hostname = "lwip";
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   540  #endif /* LWIP_NETIF_HOSTNAME */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   541  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   542      /*
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   543       * Initialize the snmp variables and counters inside the struct netif.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   544       * The last argument should be replaced with your link speed, in units
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   545       * of bits per second.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   546       */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   547      //NETIF_INIT_SNMP(netif, snmp_ifType_ethernet_csmacd, LINK_SPEED_OF_YOUR_NETIF_IN_BPS);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   548  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   549      netif->state      = ethernetif;
	st.a	[a12]28,a15
.L264:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   550      netif->name[0]    = IFNAME0;
	mov	d15,#101
	st.b	[a12]42,d15
.L265:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   551      netif->name[1]    = IFNAME1;
	mov	d15,#110
	st.b	[a12]43,d15
.L266:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   552      /* We directly use etharp_output() here to save a function call.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   553       * You can instead declare your own function an call etharp_output()
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   554       * from it if you have to do some checks before sending (e.g. if link
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   555       * is available...) */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   556      netif->output     = etharp_output;
	movh.a	a15,#@his(etharp_output)
	lea	a15,[a15]@los(etharp_output)
.L267:
	st.a	[a12]20,a15
.L268:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   557      netif->linkoutput = low_level_output;
	movh.a	a15,#@his(low_level_output)
	lea	a15,[a15]@los(low_level_output)
.L269:
	st.a	[a12]24,a15
.L270:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   558  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   559      /* initialize the hardware */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   560      low_level_init(netif);
	mov.aa	a4,a12
.L244:
	call	low_level_init
.L245:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   561  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   562      return ERR_OK;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\netif.c	   563  }
	mov	d2,#0
	ret
.L92:
	
__ifx_netif_init_function_end:
	.size	ifx_netif_init,__ifx_netif_init_function_end-ifx_netif_init
.L63:
	; End of function
	
	.sdecl	'.rodata.netif.rtl8211f_pins',data,rom,cluster('rtl8211f_pins')
	.sect	'.rodata.netif.rtl8211f_pins'
	.global	rtl8211f_pins
	.align	4
rtl8211f_pins:	.type	object
	.size	rtl8211f_pins,60
	.word	IfxGeth_TXCLK_P11_4_OUT,IfxGeth_TXD0_P11_3_OUT,IfxGeth_TXD1_P11_2_OUT,IfxGeth_TXD2_P11_1_OUT
	.word	IfxGeth_TXD3_P11_0_OUT,IfxGeth_TXCTL_P11_6_OUT,IfxGeth_RXCLKA_P11_12_IN,IfxGeth_RXD0A_P11_10_IN
	.word	IfxGeth_RXD1A_P11_9_IN,IfxGeth_RXD2A_P11_8_IN,IfxGeth_RXD3A_P11_7_IN,IfxGeth_RXCTLA_P11_11_IN
	.word	IfxGeth_MDC_P12_0_OUT,IfxGeth_MDIO_P12_1_INOUT,IfxGeth_GREFCLK_P11_5_IN
	.sdecl	'.rodata.netif..3.str',data,rom
	.sect	'.rodata.netif..3.str'
.3.str:	.type	object
	.size	.3.str,40
	.byte	65,115,115,101
	.byte	114,116,105,111
	.byte	110,32,34,37
	.byte	115,34,32,102
	.byte	97,105,108,101
	.byte	100,32,97,116
	.byte	32,108,105,110
	.byte	101,32,37,100
	.byte	32,105,110,32
	.byte	37,115,10
	.space	1
	.sdecl	'.rodata.netif..4.str',data,rom
	.sect	'.rodata.netif..4.str'
.4.str:	.type	object
	.size	.4.str,46
	.byte	108,111,119,95
	.byte	108,101,118,101
	.byte	108,95,111,117
	.byte	116,112,117,116
	.byte	58,32,108,101
	.byte	110,103,116,104
	.byte	32,111,118,101
	.byte	114,102,108,111
	.byte	119,32,116,104
	.byte	101,32,98,117
	.byte	102,102,101,114
	.byte	10
	.space	1
	.sdecl	'.rodata.netif..5.str',data,rom
	.sect	'.rodata.netif..5.str'
.5.str:	.type	object
	.size	.5.str,48
	.byte	46,46,92,48
	.byte	95,83,114,99
	.byte	92,48,95,65
	.byte	112,112,83,119
	.byte	92,69,116,104
	.byte	101,114,110,101
	.byte	116,92,108,119
	.byte	105,112,92,112
	.byte	111,114,116,92
	.byte	115,114,99,92
	.byte	110,101,116,105
	.byte	102,46,99
	.space	1
	.sdecl	'.rodata.netif..11.str',data,rom
	.sect	'.rodata.netif..11.str'
.11.str:	.type	object
	.size	.11.str,14
	.byte	110,101,116,105
	.byte	102,32,33,61
	.byte	32,78,85,76
	.byte	76
	.space	1
	.calls	'__INDIRECT__','etharp_output'
	.calls	'__INDIRECT__','low_level_output'
	.calls	'low_level_init','IfxGeth_Eth_initModuleConfig'
	.calls	'low_level_init','IfxGeth_enableModule'
	.calls	'low_level_init','IfxPort_setPinMode'
	.calls	'low_level_init','IfxGeth_Eth_initModule'
	.calls	'low_level_init','IfxGeth_Eth_Phy_Rtl8211f_init'
	.calls	'low_level_init','IfxGeth_Eth_startTransmitters'
	.calls	'low_level_init','IfxGeth_Eth_startReceivers'
	.calls	'low_level_init','IfxGeth_mac_setLineSpeed'
	.calls	'low_level_output','pbuf_header'
	.calls	'low_level_output','IfxGeth_Eth_sendTransmitBuffer'
	.calls	'low_level_output','IfxGeth_Eth_getTransmitBuffer'
	.calls	'low_level_output','memcpy'
	.calls	'low_level_output','Ifx_Lwip_printf'
	.calls	'low_level_input','GetRxFrameSize'
	.calls	'low_level_input','pbuf_alloc'
	.calls	'low_level_input','pbuf_header'
	.calls	'low_level_input','IfxGeth_Eth_getReceiveBuffer'
	.calls	'low_level_input','memcpy'
	.calls	'low_level_input','IfxGeth_Eth_freeReceiveBuffer'
	.calls	'ifx_netif_input','low_level_input'
	.calls	'ifx_netif_input','lwip_htons'
	.calls	'ifx_netif_input','__INDIRECT__'
	.calls	'ifx_netif_input','pbuf_free'
	.calls	'ifx_netif_init','Ifx_Lwip_printf'
	.calls	'ifx_netif_init','low_level_init'
	.calls	'low_level_init','',288
	.calls	'low_level_output','',16
	.calls	'GetRxFrameSize','',0
	.calls	'low_level_input','',8
	.calls	'ifx_netif_input','',0
	.extern	Ifx_Lwip_printf
	.extern	lwip_htons
	.extern	pbuf_alloc
	.extern	pbuf_header
	.extern	pbuf_free
	.extern	lwip_stats
	.extern	etharp_output
	.extern	IfxGeth_mac_setLineSpeed
	.extern	IfxGeth_enableModule
	.extern	IfxPort_setPinMode
	.extern	IfxGeth_GREFCLK_P11_5_IN
	.extern	IfxGeth_MDC_P12_0_OUT
	.extern	IfxGeth_MDIO_P12_1_INOUT
	.extern	IfxGeth_RXCLKA_P11_12_IN
	.extern	IfxGeth_RXCTLA_P11_11_IN
	.extern	IfxGeth_RXD0A_P11_10_IN
	.extern	IfxGeth_RXD1A_P11_9_IN
	.extern	IfxGeth_RXD2A_P11_8_IN
	.extern	IfxGeth_RXD3A_P11_7_IN
	.extern	IfxGeth_TXCLK_P11_4_OUT
	.extern	IfxGeth_TXCTL_P11_6_OUT
	.extern	IfxGeth_TXD0_P11_3_OUT
	.extern	IfxGeth_TXD1_P11_2_OUT
	.extern	IfxGeth_TXD2_P11_1_OUT
	.extern	IfxGeth_TXD3_P11_0_OUT
	.extern	IfxGeth_Eth_getReceiveBuffer
	.extern	IfxGeth_Eth_getTransmitBuffer
	.extern	IfxGeth_Eth_initModule
	.extern	IfxGeth_Eth_initModuleConfig
	.extern	IfxGeth_Eth_sendTransmitBuffer
	.extern	IfxGeth_Eth_startReceivers
	.extern	IfxGeth_Eth_startTransmitters
	.extern	IfxGeth_Eth_freeReceiveBuffer
	.extern	IfxGeth_Eth_rxDescrList
	.extern	IfxGeth_Eth_txDescrList
	.extern	g_Lwip
	.extern	g_IfxGeth
	.extern	channel0TxBuffer1
	.extern	channel0RxBuffer1
	.extern	IfxGeth_Eth_Phy_Rtl8211f_init
	.extern	memcpy
	.extern	__INDIRECT__
	.calls	'ifx_netif_init','',16
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L56:
	.word	163013
	.half	3
	.word	.L57
	.byte	4
.L55:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L58
	.byte	2,1,1,3
	.word	167
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	170
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	215
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	227
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0
.L149:
	.byte	3
	.word	307
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	281
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	313
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	313
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	281
	.byte	6,0,7
	.byte	'unsigned int',0,4,7
.L103:
	.byte	7
	.byte	'int',0,4,5,7
	.byte	'unsigned char',0,1,8,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,68,16,4,11
	.byte	'SRPN',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	422
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	422
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	422
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,4,93,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	439
	.byte	4,2,35,0,0,14
	.word	729
	.byte	3
	.word	768
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,247,1,17,1,1,5
	.byte	'src',0,3,247,1,60
	.word	773
	.byte	6,0,10
	.byte	'_Ifx_GETH_MAC_CONFIGURATION_Bits',0,6,249,3,16,4,11
	.byte	'RE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TE',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'PRELEN',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'DC',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'BL',0,1
	.word	422
	.byte	2,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'DR',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'DCRS',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'DO',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'ECRSFD',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'LM',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'DM',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'FES',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'PS',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'JE',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'JD',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'BE',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'WD',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'ACS',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'CST',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'S2KP',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'GPSLCE',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'IPG',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'IPC',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'SARC',0,1
	.word	422
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,235,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	821
	.byte	4,2,35,0,0
.L140:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_GETH_MAC_EXT_CONFIGURATION_Bits',0,6,181,4,16,4,11
	.byte	'GPSL',0,2
	.word	1305
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'DCRCC',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'SPEN',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'USP',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'HDSMS',0,1
	.word	422
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'EIPGEN',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'EIPG',0,1
	.word	422
	.byte	5,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'FHE',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,139,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1327
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PACKET_FILTER_Bits',0,6,133,6,16,4,11
	.byte	'PR',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	2,5,2,35,0,11
	.byte	'DAIF',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'PM',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'DBF',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'PCF',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'SAIF',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'SAF',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	422
	.byte	5,0,2,35,1,11
	.byte	'VTFE',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	422
	.byte	3,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	422
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1305
	.byte	9,1,2,35,2,11
	.byte	'RA',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,243,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1633
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_WATCHDOG_TIMEOUT_Bits',0,6,186,9,16,4,11
	.byte	'WTO',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'PWE',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	399
	.byte	23,0,2,35,0,0,12,6,179,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1985
	.byte	4,2,35,0,0,15,64
	.word	422
	.byte	16,63,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_TAG_CTRL_Bits',0,6,135,9,16,4,11
	.byte	'OB',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'CT',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'OFS',0,1
	.word	422
	.byte	5,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	399
	.byte	10,15,2,35,0,11
	.byte	'VTIM',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'ESVL',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	2,3,2,35,2,11
	.byte	'EVLS',0,1
	.word	422
	.byte	2,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'EVLRXS',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'VTHM',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'EDVLP',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'RES_27',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'EIVLS',0,1
	.word	422
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'EIVLRXS',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,155,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2151
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_TAG_DATA_Bits',0,6,156,9,16,4,11
	.byte	'VID',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'VEN',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'ETV',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'DOVLTC',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'ERSVLM',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'ERIVLT',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	422
	.byte	3,0,2,35,2,11
	.byte	'DMACHEN',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'DMACHN',0,1
	.word	422
	.byte	2,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	422
	.byte	5,0,2,35,3,0,12,6,163,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2518
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_TAG_FILTER_Bits',0,6,171,9,16,4,11
	.byte	'VID',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'VEN',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'ETV',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'DOVLTC',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'ERSVLM',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'ERIVLT',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	422
	.byte	3,0,2,35,2,11
	.byte	'DMACHEN',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'DMACHN',0,1
	.word	422
	.byte	2,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	422
	.byte	5,0,2,35,3,0,12,6,171,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2780
	.byte	4,2,35,0,0,12,6,226,33,8,4,13
	.byte	'MAC_VLAN_TAG_DATA',0
	.word	2740
	.byte	4,2,35,0,13
	.byte	'MAC_VLAN_TAG_FILTER',0
	.word	3004
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_HASH_TABLE_Bits',0,6,231,8,16,4,11
	.byte	'VLHT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,131,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3107
	.byte	4,2,35,0,0,15,4
	.word	422
	.byte	16,3,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_INCL_Bits',0,6,238,8,16,4,11
	.byte	'VLT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'VLC',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'VLP',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'CSVL',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'VLTI',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'CBTI',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	422
	.byte	2,0,2,35,2,11
	.byte	'ADDR',0,1
	.word	422
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	422
	.byte	4,2,2,35,3,11
	.byte	'RDWR',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'BUSY',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,139,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3237
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_INCL_Q_Bits',0,6,254,8,16,4,11
	.byte	'VLT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'CSVL',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1305
	.byte	12,0,2,35,2,0,12,6,147,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3500
	.byte	4,2,35,0,0,12,6,233,33,8,4,13
	.byte	'MAC_VLAN_INCL',0
	.word	3460
	.byte	4,2,35,0,13
	.byte	'MAC_VLAN_INCL_Q',0
	.word	3615
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_INNER_VLAN_INCL_Bits',0,6,150,5,16,4,11
	.byte	'VLT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'VLC',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'VLP',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'CSVL',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'VLTI',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,2
	.word	1305
	.byte	11,0,2,35,2,0,12,6,179,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3710
	.byte	4,2,35,0,0,15,8
	.word	422
	.byte	16,7,0,10
	.byte	'_Ifx_GETH_MAC_Q0_TX_FLOW_CTRL_Bits',0,6,233,6,16,4,11
	.byte	'FCB_BPA',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TFE',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'PLT',0,1
	.word	422
	.byte	3,1,2,35,0,11
	.byte	'DZPQ',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'PT',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,179,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3901
	.byte	4,2,35,0,0,15,28
	.word	422
	.byte	16,27,0,10
	.byte	'_Ifx_GETH_MAC_RX_FLOW_CTRL_Bits',0,6,176,7,16,4,11
	.byte	'RFE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'UP',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	399
	.byte	23,0,2,35,0,0,12,6,227,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4115
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RXQ_CTRL4_Bits',0,6,162,7,16,4,11
	.byte	'UFFQE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'UFFQ',0,1
	.word	422
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	5,0,2,35,0,11
	.byte	'MFFQE',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'MFFQ',0,1
	.word	422
	.byte	2,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	422
	.byte	5,0,2,35,1,11
	.byte	'VFFQE',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'VFFQ',0,1
	.word	422
	.byte	2,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	1305
	.byte	13,0,2,35,2,0,12,6,219,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4289
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RXQ_CTRL0_Bits',0,6,251,6,16,4,11
	.byte	'RXQ0EN',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'RXQ1EN',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'RXQ2EN',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'RXQ3EN',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,195,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4532
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RXQ_CTRL1_Bits',0,6,134,7,16,4,11
	.byte	'AVCPQ',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'PTPQ',0,1
	.word	422
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'UPQ',0,1
	.word	422
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'MCBCQ',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'MCBCQEN',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'TACPQE',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'TPQC',0,1
	.word	422
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	8,0,2,35,3,0,12,6,203,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4725
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RXQ_CTRL2_Bits',0,6,153,7,16,4,11
	.byte	'PSRQ0',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'PSRQ1',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'PSRQ2',0,1
	.word	422
	.byte	8,0,2,35,2,11
	.byte	'PSRQ3',0,1
	.word	422
	.byte	8,0,2,35,3,0,12,6,211,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5077
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_INTERRUPT_STATUS_Bits',0,6,178,5,16,4,11
	.byte	'RGSMIIIS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	2,5,2,35,0,11
	.byte	'PHYIS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'PMTIS',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'LPIIS',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'MMCIS',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'MMCRXIS',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'MMCTXIS',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'MMCRXIPIS',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'TSIS',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'TXSTSIS',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'RXSTSIS',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	399
	.byte	3,14,2,35,0,11
	.byte	'MDIOIS',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	1305
	.byte	13,0,2,35,2,0,12,6,195,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5221
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_INTERRUPT_ENABLE_Bits',0,6,161,5,16,4,11
	.byte	'RGSMIIIE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	2,5,2,35,0,11
	.byte	'PHYIE',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'PMTIE',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'LPIIE',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	6,4,2,35,0,11
	.byte	'TSIE',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'TXSTSIE',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'RXSTSIE',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	399
	.byte	3,14,2,35,0,11
	.byte	'MDIOIE',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	1305
	.byte	13,0,2,35,2,0,12,6,187,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5613
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RX_TX_STATUS_Bits',0,6,186,7,16,4,11
	.byte	'TJT',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'NCARR',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'LCARR',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'EXDEF',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'LCOL',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'EXCOL',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'RWT',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	399
	.byte	23,0,2,35,0,0,12,6,235,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5929
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PMT_CONTROL_STATUS_Bits',0,6,169,6,16,4,11
	.byte	'PWRDWN',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'MGKPKTEN',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'RWKPKTEN',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	2,3,2,35,0,11
	.byte	'MGKPRCVD',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'RWKPRCVD',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	1305
	.byte	2,7,2,35,0,11
	.byte	'GLBLUCAST',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'RWKPFE',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	399
	.byte	13,8,2,35,0,11
	.byte	'RWKPTR',0,1
	.word	422
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	422
	.byte	2,1,2,35,3,11
	.byte	'RWKFILTRST',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,131,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6166
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RWK_PACKET_FILTER_Bits',0,6,245,6,16,4,11
	.byte	'WKUPFRMFTR',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,187,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6518
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RWK_FILTER_COMMAND_0_Bits',0,6,214,13,16,4,11
	.byte	'FILTER0_COMMAND',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'FILTER1_COMMAND',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'FILTER2_COMMAND',0,1
	.word	422
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	422
	.byte	4,0,2,35,2,11
	.byte	'FILTER3_COMMAND',0,1
	.word	422
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,6,211,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6624
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RWK_FILTER_OFFSET_0_Bits',0,6,234,13,16,4,11
	.byte	'FILTER0_OFFSET',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'FILTER1_OFFSET',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'FILTER2_OFFSET',0,1
	.word	422
	.byte	8,0,2,35,2,11
	.byte	'FILTER3_OFFSET',0,1
	.word	422
	.byte	8,0,2,35,3,0,12,6,227,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6906
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RWK_FILTER_CRC_Bits',0,6,227,13,16,4,11
	.byte	'FILTER0_CRC',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'FILTER1_CRC',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,219,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7092
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RWK_FILTER_BYTE_MASK_Bits',0,6,208,13,16,4,11
	.byte	'FILTERI_BYTE_MASK',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,203,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7215
	.byte	4,2,35,0,0,12,6,254,33,8,4,13
	.byte	'MAC_RWK_PACKET_FILTER',0
	.word	6584
	.byte	4,2,35,0,13
	.byte	'RWK_FILTER_COMMAND_0',0
	.word	6866
	.byte	4,2,35,0,13
	.byte	'RWK_FILTER_OFFSET_0',0
	.word	7052
	.byte	4,2,35,0,13
	.byte	'RWK_FILTER_CRC',0
	.word	7175
	.byte	4,2,35,0,13
	.byte	'RWK_FILTER_BYTE_MASK',0
	.word	7287
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_LPI_CONTROL_STATUS_Bits',0,6,199,5,16,4,11
	.byte	'TLPIEN',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TLPIEX',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'RLPIEN',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'RLPIEX',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'TLPIST',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'RLPIST',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	6,0,2,35,1,11
	.byte	'LPIEN',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'PLS',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'PLSEN',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'LPITXA',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'LPIATE',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'LPITCSE',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1305
	.byte	10,0,2,35,2,0,12,6,203,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7478
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_LPI_TIMERS_CONTROL_Bits',0,6,227,5,16,4,11
	.byte	'TWT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'LST',0,2
	.word	1305
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	422
	.byte	6,0,2,35,3,0,12,6,219,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7843
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_LPI_ENTRY_TIMER_Bits',0,6,219,5,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'LPIET',0,4
	.word	399
	.byte	17,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	1305
	.byte	12,0,2,35,2,0,12,6,211,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7981
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_1US_TIC_COUNTER_Bits',0,6,210,3,16,4,11
	.byte	'TIC_1US_CNTR',0,2
	.word	1305
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	399
	.byte	20,0,2,35,0,0,12,6,195,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8125
	.byte	4,2,35,0,0,15,24
	.word	422
	.byte	16,23,0,10
	.byte	'_Ifx_GETH_MAC_PHYIF_CONTROL_STATUS_Bits',0,6,153,6,16,4,11
	.byte	'TC',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'LUD',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	1305
	.byte	11,0,2,35,0,11
	.byte	'LNKMOD',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'LNKSPEED',0,1
	.word	422
	.byte	2,5,2,35,2,11
	.byte	'LNKSTS',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1305
	.byte	10,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	2,0,2,35,3,0,12,6,251,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8263
	.byte	4,2,35,0,0,15,20
	.word	422
	.byte	16,19,0,10
	.byte	'_Ifx_GETH_MAC_VERSION_Bits',0,6,223,8,16,4,11
	.byte	'SNPSVER',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'USERVER',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,251,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8578
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_DEBUG_Bits',0,6,161,4,16,4,11
	.byte	'RPESTS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'RFCFCSTS',0,1
	.word	422
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	1305
	.byte	13,0,2,35,0,11
	.byte	'TPESTS',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'TFCSTS',0,1
	.word	422
	.byte	2,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	1305
	.byte	13,0,2,35,2,0,12,6,251,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8713
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_HW_FEATURE0_Bits',0,6,198,4,16,4,11
	.byte	'MIISEL',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'GMIISEL',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'HDSEL',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'PCSSEL',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'VLHASH',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'SMASEL',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'RWKSEL',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'MGKSEL',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'MMCSEL',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'ARPOFFSEL',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	2,4,2,35,1,11
	.byte	'TSSEL',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'EEESEL',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'TXCOESEL',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'RXCOESEL',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'ADDMACADRSEL',0,1
	.word	422
	.byte	5,1,2,35,2,11
	.byte	'MACADR32SEL',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'MACADR64SEL',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'TSSTSSEL',0,1
	.word	422
	.byte	2,5,2,35,3,11
	.byte	'SAVLANINS',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'ACTPHYSEL',0,1
	.word	422
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,147,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8904
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_HW_FEATURE1_Bits',0,6,227,4,16,4,11
	.byte	'RXFIFOSIZE',0,1
	.word	422
	.byte	5,3,2,35,0,11
	.byte	'SPRAM',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'TXFIFOSIZE',0,2
	.word	1305
	.byte	5,5,2,35,0,11
	.byte	'OSTEN',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'PTOEN',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'ADVTHWORD',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'ADDR64',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'DCBEN',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'SPHEN',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'TSOEN',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'DBGMEMA',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'AVSEL',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'RAVSEL',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'POUOST',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'HASHTBLSZ',0,1
	.word	422
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'L3L4FNUM',0,1
	.word	422
	.byte	4,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,155,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9464
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_HW_FEATURE2_Bits',0,6,251,4,16,4,11
	.byte	'RXQCNT',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'TXQCNT',0,2
	.word	1305
	.byte	4,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	2,4,2,35,1,11
	.byte	'RXCHCNT',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'TXCHCNT',0,1
	.word	422
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	422
	.byte	2,0,2,35,2,11
	.byte	'PPSOUTNUM',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'AUXSNAPNUM',0,1
	.word	422
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,163,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9909
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_HW_FEATURE3_Bits',0,6,140,5,16,4,11
	.byte	'NRVF',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'CBTISEL',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'DVLAN',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	399
	.byte	26,0,2,35,0,0,12,6,171,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10241
	.byte	4,2,35,0,0,15,212,1
	.word	422
	.byte	16,211,1,0,10
	.byte	'_Ifx_GETH_MAC_MDIO_ADDRESS_Bits',0,6,235,5,16,4,11
	.byte	'GB',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'C45E',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'GOC_0',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'GOC_1',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'SKAP',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	422
	.byte	3,0,2,35,0,11
	.byte	'CR',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'NTC',0,1
	.word	422
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'RDA',0,1
	.word	422
	.byte	5,3,2,35,2,11
	.byte	'PA',0,2
	.word	1305
	.byte	5,6,2,35,2,11
	.byte	'BTB',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'PSE',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,6,227,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10426
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_MDIO_DATA_Bits',0,6,254,5,16,4,11
	.byte	'GD',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'RA',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,235,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10741
	.byte	4,2,35,0,0,15,40
	.word	422
	.byte	16,39,0,10
	.byte	'_Ifx_GETH_MAC_CSR_SW_CTRL_Bits',0,6,152,4,16,4,11
	.byte	'RCWE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	7,0,2,35,0,11
	.byte	'SEEN',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	399
	.byte	23,0,2,35,0,0,12,6,243,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10854
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_EXT_CFG1_Bits',0,6,172,4,16,4,11
	.byte	'SPLOFST',0,1
	.word	422
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'SPLM',0,1
	.word	422
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	399
	.byte	22,0,2,35,0,0,12,6,131,21,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11008
	.byte	4,2,35,0,0,15,196,1
	.word	422
	.byte	16,195,1,0,10
	.byte	'_Ifx_GETH_MAC_ADDRESS_HIGH0_Bits',0,6,228,3,16,4,11
	.byte	'ADDRHI',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'DCS',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1305
	.byte	13,1,2,35,2,11
	.byte	'AE',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,211,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11174
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_ADDRESS_LOW0_Bits',0,6,243,3,16,4,11
	.byte	'ADDRLO',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,227,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11324
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_ADDRESS_HIGH_Bits',0,6,217,3,16,4,11
	.byte	'ADDRHI',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'DCS',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	422
	.byte	6,0,2,35,2,11
	.byte	'MBC',0,1
	.word	422
	.byte	6,2,2,35,3,11
	.byte	'SA',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'AE',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,203,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11421
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_ADDRESS_LOW_Bits',0,6,237,3,16,4,11
	.byte	'ADDRLO',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,219,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11599
	.byte	4,2,35,0,0,15,128,6
	.word	422
	.byte	16,255,5,0,10
	.byte	'_Ifx_GETH_MMC_CONTROL_Bits',0,6,195,9,16,4,11
	.byte	'CNTRST',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'CNTSTOPRO',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'RSTONRD',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'CNTFREEZ',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'CNTPRST',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'CNTPRSTLVL',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'UCDBC',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	399
	.byte	23,0,2,35,0,0,12,6,187,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11706
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_RX_INTERRUPT_Bits',0,6,151,10,16,4,11
	.byte	'RXGBPKTIS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'RXGBOCTIS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'RXGOCTIS',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'RXBCGPIS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'RXMCGPIS',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'RXCRCERPIS',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'RXALGNERPIS',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'RXRUNTPIS',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'RXJABERPIS',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'RXUSIZEGPIS',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'RXOSIZEGPIS',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'RX64OCTGBPIS',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'RX65T127OCTGBPIS',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'RX128T255OCTGBPIS',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'RX256T511OCTGBPIS',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'RX512T1023OCTGBPIS',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'RX1024TMAXOCTGBPIS',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'RXUCGPIS',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'RXLENERPIS',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'RXORANGEPIS',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'RXPAUSPIS',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'RXFOVPIS',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'RXVLANGBPIS',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'RXWDOGPIS',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'RXRCVERRPIS',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'RXCTRLPIS',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'RXLPIUSCIS',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'RXLPITRCIS',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,6,211,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11960
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_TX_INTERRUPT_Bits',0,6,219,10,16,4,11
	.byte	'TXGBOCTIS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TXGBPKTIS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TXBCGPIS',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'TXMCGPIS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'TX64OCTGBPIS',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'TX65T127OCTGBPIS',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'TX128T255OCTGBPIS',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'TX256T511OCTGBPIS',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'TX512T1023OCTGBPIS',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'TX1024TMAXOCTGBPIS',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'TXUCGBPIS',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'TXMCGBPIS',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'TXBCGBPIS',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'TXUFLOWERPIS',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'TXSCOLGPIS',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'TXMCOLGPIS',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'TXDEFPIS',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'TXLATCOLPIS',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'TXEXCOLPIS',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'TXCARERPIS',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'TXGOCTIS',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'TXGPKTIS',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'TXEXDEFPIS',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'TXPAUSPIS',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'TXVLANGPIS',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'TXOSIZEGPIS',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'TXLPIUSCIS',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'TXLPITRCIS',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,6,227,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12706
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_RX_INTERRUPT_MASK_Bits',0,6,185,10,16,4,11
	.byte	'RXGBPKTIM',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'RXGBOCTIM',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'RXGOCTIM',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'RXBCGPIM',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'RXMCGPIM',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'RXCRCERPIM',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'RXALGNERPIM',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'RXRUNTPIM',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'RXJABERPIM',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'RXUSIZEGPIM',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'RXOSIZEGPIM',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'RX64OCTGBPIM',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'RX65T127OCTGBPIM',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'RX128T255OCTGBPIM',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'RX256T511OCTGBPIM',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'RX512T1023OCTGBPIM',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'RX1024TMAXOCTGBPIM',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'RXUCGPIM',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'RXLENERPIM',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'RXORANGEPIM',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'RXPAUSPIM',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'RXFOVPIM',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'RXVLANGBPIM',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'RXWDOGPIM',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'RXRCVERRPIM',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'RXCTRLPIM',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'RXLPIUSCIM',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'RXLPITRCIM',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,6,219,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13450
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_TX_INTERRUPT_MASK_Bits',0,6,253,10,16,4,11
	.byte	'TXGBOCTIM',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TXGBPKTIM',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TXBCGPIM',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'TXMCGPIM',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'TX64OCTGBPIM',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'TX65T127OCTGBPIM',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'TX128T255OCTGBPIM',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'TX256T511OCTGBPIM',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'TX512T1023OCTGBPIM',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'TX1024TMAXOCTGBPIM',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'TXUCGBPIM',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'TXMCGBPIM',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'TXBCGBPIM',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'TXUFLOWERPIM',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'TXSCOLGPIM',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'TXMCOLGPIM',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'TXDEFPIM',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'TXLATCOLPIM',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'TXEXCOLPIM',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'TXCARERPIM',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'TXGOCTIM',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'TXGPKTIM',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'TXEXDEFPIM',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'TXPAUSPIM',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'TXVLANGPIM',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'TXOSIZEGPIM',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'TXLPIUSCIM',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'TXLPITRCIM',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,6,235,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14201
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_OCTET_COUNT_GOOD_BAD_Bits',0,6,248,17,16,4,11
	.byte	'TXOCTGB',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,203,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14950
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_PACKET_COUNT_GOOD_BAD_Bits',0,6,140,18,16,4,11
	.byte	'TXPKTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,227,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15055
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_BROADCAST_PACKETS_GOOD_Bits',0,6,158,17,16,4,11
	.byte	'TXBCASTG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,227,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15184
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_MULTICAST_PACKETS_GOOD_Bits',0,6,221,17,16,4,11
	.byte	'TXMCASTG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,171,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15315
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_64OCTETS_PACKETS_GOOD_BAD_Bits',0,6,144,17,16,4,11
	.byte	'TX64OCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,211,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15446
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_65TO127OCTETS_PACKETS_GOOD_BAD_Bits',0,6,151,17,16,4,11
	.byte	'TX65_127OCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,219,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15581
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_128TO255OCTETS_PACKETS_GOOD_BAD_Bits',0,6,251,16,16,4,11
	.byte	'TX128_255OCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,187,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15725
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_256TO511OCTETS_PACKETS_GOOD_BAD_Bits',0,6,130,17,16,4,11
	.byte	'TX256_511OCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,195,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15871
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_Bits',0,6,137,17,16,4,11
	.byte	'TX512_1023OCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,203,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16017
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_Bits',0,6,244,16,16,4,11
	.byte	'TX1024_MAXOCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,179,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16165
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_UNICAST_PACKETS_GOOD_BAD_Bits',0,6,168,18,16,4,11
	.byte	'TXUCASTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,131,32,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16313
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_MULTICAST_PACKETS_GOOD_BAD_Bits',0,6,228,17,16,4,11
	.byte	'TXMCASTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,179,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16447
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_BROADCAST_PACKETS_GOOD_BAD_Bits',0,6,165,17,16,4,11
	.byte	'TXBCASTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,235,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16583
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_UNDERFLOW_ERROR_PACKETS_Bits',0,6,161,18,16,4,11
	.byte	'TXUNDRFLW',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,251,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16719
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_SINGLE_COLLISION_GOOD_PACKETS_Bits',0,6,154,18,16,4,11
	.byte	'TXSNGLCOLG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,243,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16852
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_MULTIPLE_COLLISION_GOOD_PACKETS_Bits',0,6,235,17,16,4,11
	.byte	'TXMULTCOLG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,187,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16992
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_DEFERRED_PACKETS_Bits',0,6,179,17,16,4,11
	.byte	'TXDEFRD',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,251,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17134
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_LATE_COLLISION_PACKETS_Bits',0,6,200,17,16,4,11
	.byte	'TXLATECOL',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,147,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17258
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_EXCESSIVE_COLLISION_PACKETS_Bits',0,6,186,17,16,4,11
	.byte	'TXEXSCOL',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,131,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17390
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_CARRIER_ERROR_PACKETS_Bits',0,6,172,17,16,4,11
	.byte	'TXCARR',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,243,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17526
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_OCTET_COUNT_GOOD_Bits',0,6,242,17,16,4,11
	.byte	'TXOCTG',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,195,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17654
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_PACKET_COUNT_GOOD_Bits',0,6,133,18,16,4,11
	.byte	'TXPKTG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,219,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17754
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_EXCESSIVE_DEFERRAL_ERROR_Bits',0,6,193,17,16,4,11
	.byte	'TXEXSDEF',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,139,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17878
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_PAUSE_PACKETS_Bits',0,6,147,18,16,4,11
	.byte	'TXPAUSE',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,235,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18011
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_VLAN_PACKETS_GOOD_Bits',0,6,175,18,16,4,11
	.byte	'TXVLANG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,139,32,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18132
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_OSIZE_PACKETS_GOOD_Bits',0,6,254,17,16,4,11
	.byte	'TXOSIZG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,211,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18257
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_PACKETS_COUNT_GOOD_BAD_Bits',0,6,179,16,16,4,11
	.byte	'RXPKTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,235,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18383
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_OCTET_COUNT_GOOD_BAD_Bits',0,6,159,16,16,4,11
	.byte	'RXOCTGB',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,211,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18513
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_OCTET_COUNT_GOOD_Bits',0,6,153,16,16,4,11
	.byte	'RXOCTG',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,203,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18618
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_BROADCAST_PACKETS_GOOD_Bits',0,6,218,15,16,4,11
	.byte	'RXBCASTG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,131,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18718
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_MULTICAST_PACKETS_GOOD_Bits',0,6,146,16,16,4,11
	.byte	'RXMCASTG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,195,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18849
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_CRC_ERROR_PACKETS_Bits',0,6,232,15,16,4,11
	.byte	'RXCRCERR',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,147,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18980
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_ALIGNMENT_ERROR_PACKETS_Bits',0,6,211,15,16,4,11
	.byte	'RXALGNERR',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,251,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19106
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_RUNT_ERROR_PACKETS_Bits',0,6,200,16,16,4,11
	.byte	'RXRUNTERR',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,131,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19239
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_JABBER_ERROR_PACKETS_Bits',0,6,246,15,16,4,11
	.byte	'RXJABERR',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,163,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19367
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_UNDERSIZE_PACKETS_GOOD_Bits',0,6,207,16,16,4,11
	.byte	'RXUNDERSZG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,139,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19496
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_OVERSIZE_PACKETS_GOOD_Bits',0,6,172,16,16,4,11
	.byte	'RXOVERSZG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,227,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19629
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_64OCTETS_PACKETS_GOOD_BAD_Bits',0,6,197,15,16,4,11
	.byte	'RX64OCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,235,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19760
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_65TO127OCTETS_PACKETS_GOOD_BAD_Bits',0,6,204,15,16,4,11
	.byte	'RX65_127OCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,243,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19895
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_128TO255OCTETS_PACKETS_GOOD_BAD_Bits',0,6,176,15,16,4,11
	.byte	'RX128_255OCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,211,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20039
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_256TO511OCTETS_PACKETS_GOOD_BAD_Bits',0,6,183,15,16,4,11
	.byte	'RX256_511OCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,219,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20185
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_Bits',0,6,190,15,16,4,11
	.byte	'RX512_1023OCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,227,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20331
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_Bits',0,6,169,15,16,4,11
	.byte	'RX1024_MAXOCTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,203,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20479
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_UNICAST_PACKETS_GOOD_Bits',0,6,214,16,16,4,11
	.byte	'RXUCASTG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,147,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20627
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_LENGTH_ERROR_PACKETS_Bits',0,6,253,15,16,4,11
	.byte	'RXLENERR',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,171,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20756
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_OUT_OF_RANGE_TYPE_PACKETS_Bits',0,6,165,16,16,4,11
	.byte	'RXOUTOFRNG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,219,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20885
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_PAUSE_PACKETS_Bits',0,6,186,16,16,4,11
	.byte	'RXPAUSEPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,243,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21021
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_FIFO_OVERFLOW_PACKETS_Bits',0,6,239,15,16,4,11
	.byte	'RXFIFOOVFL',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,155,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21145
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_VLAN_PACKETS_GOOD_BAD_Bits',0,6,221,16,16,4,11
	.byte	'RXVLANPKTGB',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,155,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21277
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_WATCHDOG_ERROR_PACKETS_Bits',0,6,228,16,16,4,11
	.byte	'RXWDGERR',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,163,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21410
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_RECEIVE_ERROR_PACKETS_Bits',0,6,193,16,16,4,11
	.byte	'RXRCVERR',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,251,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21541
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_CONTROL_PACKETS_GOOD_Bits',0,6,225,15,16,4,11
	.byte	'RXCTRLG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,139,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21671
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_LPI_USEC_CNTR_Bits',0,6,214,17,16,4,11
	.byte	'TXLPIUSC',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,163,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21799
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_LPI_TRAN_CNTR_Bits',0,6,207,17,16,4,11
	.byte	'TXLPITRC',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,155,31,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21921
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_LPI_USEC_CNTR_Bits',0,6,139,16,16,4,11
	.byte	'RXLPIUSC',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,187,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22043
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_LPI_TRAN_CNTR_Bits',0,6,132,16,16,4,11
	.byte	'RXLPITRC',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,179,29,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22165
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_IPC_RX_INTERRUPT_MASK_Bits',0,6,244,9,16,4,11
	.byte	'RXIPV4GPIM',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'RXIPV4HERPIM',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'RXIPV4NOPAYPIM',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'RXIPV4FRAGPIM',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'RXIPV4UDSBLPIM',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'RXIPV6GPIM',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'RXIPV6HERPIM',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'RXIPV6NOPAYPIM',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'RXUDPGPIM',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'RXUDPERPIM',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'RXTCPGPIM',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'RXTCPERPIM',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'RXICMPGPIM',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'RXICMPERPIM',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'RXIPV4GOIM',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'RXIPV4HEROIM',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'RXIPV4NOPAYOIM',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'RXIPV4FRAGOIM',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'RXIPV4UDSBLOIM',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'RXIPV6GOIM',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'RXIPV6HEROIM',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'RXIPV6NOPAYOIM',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'RXUDPGOIM',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'RXUDPEROIM',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'RXTCPGOIM',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'RXTCPEROIM',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'RXICMPGOIM',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'RXICMPEROIM',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	2,0,2,35,3,0,12,6,203,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22287
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_IPC_RX_INTERRUPT_Bits',0,6,209,9,16,4,11
	.byte	'RXIPV4GPIS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'RXIPV4HERPIS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'RXIPV4NOPAYPIS',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'RXIPV4FRAGPIS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'RXIPV4UDSBLPIS',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'RXIPV6GPIS',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'RXIPV6HERPIS',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'RXIPV6NOPAYPIS',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'RXUDPGPIS',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'RXUDPERPIS',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'RXTCPGPIS',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'RXTCPERPIS',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'RXICMPGPIS',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'RXICMPERPIS',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'RXIPV4GOIS',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'RXIPV4HEROIS',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'RXIPV4NOPAYOIS',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'RXIPV4FRAGOIS',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'RXIPV4UDSBLOIS',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'RXIPV6GOIS',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'RXIPV6HEROIS',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'RXIPV6NOPAYOIS',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'RXUDPGOIS',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'RXUDPEROIS',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'RXTCPGOIS',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'RXTCPEROIS',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'RXICMPGOIS',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'RXICMPEROIS',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	2,0,2,35,3,0,12,6,195,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23073
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_GOOD_PACKETS_Bits',0,6,160,14,16,4,11
	.byte	'RXIPV4GDPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,163,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23854
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_HEADER_ERROR_PACKETS_Bits',0,6,173,14,16,4,11
	.byte	'RXIPV4HDRERRPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,179,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23982
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_NO_PAYLOAD_PACKETS_Bits',0,6,186,14,16,4,11
	.byte	'RXIPV4NOPAYPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,195,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24122
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_FRAGMENTED_PACKETS_Bits',0,6,147,14,16,4,11
	.byte	'RXIPV4FRAGPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,147,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24259
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS_Bits',0,6,193,14,16,4,11
	.byte	'RXIPV4UDSBLPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,203,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24395
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_GOOD_PACKETS_Bits',0,6,212,14,16,4,11
	.byte	'RXIPV6GDPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,227,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24543
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_HEADER_ERROR_PACKETS_Bits',0,6,225,14,16,4,11
	.byte	'RXIPV6HDRERRPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,243,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24671
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_NO_PAYLOAD_PACKETS_Bits',0,6,238,14,16,4,11
	.byte	'RXIPV6NOPAYPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,131,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24811
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXUDP_GOOD_PACKETS_Bits',0,6,162,15,16,4,11
	.byte	'RXUDPGDPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,195,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24948
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXUDP_ERROR_PACKETS_Bits',0,6,149,15,16,4,11
	.byte	'RXUDPERRPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,179,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25074
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXTCP_GOOD_PACKETS_Bits',0,6,136,15,16,4,11
	.byte	'RXTCPGDPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,163,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25202
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXTCP_ERROR_PACKETS_Bits',0,6,251,14,16,4,11
	.byte	'RXTCPERRPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,147,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25328
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXICMP_GOOD_PACKETS_Bits',0,6,134,14,16,4,11
	.byte	'RXICMPGDPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,131,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25456
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXICMP_ERROR_PACKETS_Bits',0,6,249,13,16,4,11
	.byte	'RXICMPERRPKT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,243,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25584
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_GOOD_OCTETS_Bits',0,6,154,14,16,4,11
	.byte	'RXIPV4GDOCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,155,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25714
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_HEADER_ERROR_OCTETS_Bits',0,6,167,14,16,4,11
	.byte	'RXIPV4HDRERROCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,171,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25818
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_NO_PAYLOAD_OCTETS_Bits',0,6,180,14,16,4,11
	.byte	'RXIPV4NOPAYOCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,187,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25934
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_FRAGMENTED_OCTETS_Bits',0,6,141,14,16,4,11
	.byte	'RXIPV4FRAGOCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,139,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26047
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_Bits',0,6,200,14,16,4,11
	.byte	'RXIPV4UDSBLOCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,211,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26159
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_GOOD_OCTETS_Bits',0,6,206,14,16,4,11
	.byte	'RXIPV6GDOCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,219,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26282
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_HEADER_ERROR_OCTETS_Bits',0,6,219,14,16,4,11
	.byte	'RXIPV6HDRERROCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,235,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26386
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_NO_PAYLOAD_OCTETS_Bits',0,6,232,14,16,4,11
	.byte	'RXIPV6NOPAYOCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,251,27,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26502
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXUDP_GOOD_OCTETS_Bits',0,6,156,15,16,4,11
	.byte	'RXUDPGDOCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,187,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26615
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXUDP_ERROR_OCTETS_Bits',0,6,143,15,16,4,11
	.byte	'RXUDPERROCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,171,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26717
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXTCP_GOOD_OCTETS_Bits',0,6,130,15,16,4,11
	.byte	'RXTCPGDOCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,155,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26821
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXTCP_ERROR_OCTETS_Bits',0,6,245,14,16,4,11
	.byte	'RXTCPERROCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,139,28,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26923
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXICMP_GOOD_OCTETS_Bits',0,6,128,14,16,4,11
	.byte	'RXICMPGDOCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,251,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27027
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXICMP_ERROR_OCTETS_Bits',0,6,243,13,16,4,11
	.byte	'RXICMPERROCT',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,235,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27131
	.byte	4,2,35,0,0,15,248,4
	.word	422
	.byte	16,247,4,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_CONTROL_Bits',0,6,248,7,16,4,11
	.byte	'TSENA',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TSCFUPDT',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TSINIT',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'TSUPDT',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'TSADDREG',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'TSENALL',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'TSCTRLSSR',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'TSVER2ENA',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'TSIPENA',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'TSIPV6ENA',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'TSIPV4ENA',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'TSEVNTENA',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'TSMSTRENA',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'SNAPTYPSEL',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'TSENMACADDR',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'CSC',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	422
	.byte	3,0,2,35,2,11
	.byte	'TXTSSTSM',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	422
	.byte	3,4,2,35,3,11
	.byte	'AV8021ASMEN',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	422
	.byte	3,0,2,35,3,0,12,6,171,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27248
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SUB_SECOND_INCREMENT_Bits',0,6,200,7,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'SNSINC',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'SSINC',0,1
	.word	422
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	8,0,2,35,3,0,12,6,243,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27828
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SYSTEM_TIME_SECONDS_Bits',0,6,230,7,16,4,11
	.byte	'TSS',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,147,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27995
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS_Bits',0,6,216,7,16,4,11
	.byte	'TSSS',0,4
	.word	399
	.byte	31,1,2,35,0,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,131,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28096
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SYSTEM_TIME_SECONDS_UPDATE_Bits',0,6,236,7,16,4,11
	.byte	'TSS',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,155,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28225
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_Bits',0,6,223,7,16,4,11
	.byte	'TSSS',0,4
	.word	399
	.byte	31,1,2,35,0,11
	.byte	'ADDSUB',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,139,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28333
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_ADDEND_Bits',0,6,242,7,16,4,11
	.byte	'TSAR',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,163,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28464
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_Bits',0,6,209,7,16,4,11
	.byte	'TSHWR',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,251,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28563
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_STATUS_Bits',0,6,189,8,16,4,11
	.byte	'TSSOVF',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TSTARGT0',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'TSTRGTERR0',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'TSTARGT1',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'TSTRGTERR1',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'TSTARGT2',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'TSTRGTERR2',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'TSTARGT3',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'TSTRGTERR3',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	5,1,2,35,1,11
	.byte	'TXTSSIS',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	422
	.byte	4,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	2,0,2,35,3,0,12,6,227,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28701
	.byte	4,2,35,0,0,15,12
	.word	422
	.byte	16,11,0,10
	.byte	'_Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_Bits',0,6,210,8,16,4,11
	.byte	'TXTSSLO',0,4
	.word	399
	.byte	31,1,2,35,0,11
	.byte	'TXTSSMIS',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,235,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29135
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_SECONDS_Bits',0,6,217,8,16,4,11
	.byte	'TXTSSHI',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,243,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29272
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_INGRESS_ASYM_CORR_Bits',0,6,169,8,16,4,11
	.byte	'OSTIAC',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,203,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29385
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_EGRESS_ASYM_CORR_Bits',0,6,149,8,16,4,11
	.byte	'OSTEAC',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,179,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29497
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_Bits',0,6,175,8,16,4,11
	.byte	'TSIC',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,211,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29608
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_Bits',0,6,155,8,16,4,11
	.byte	'TSEC',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,187,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29724
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_Bits',0,6,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'TSICSNS',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,219,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29839
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_Bits',0,6,161,8,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'TSECSNS',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,195,23,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30003
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PPS_CONTROL_Bits',0,6,212,6,16,4,11
	.byte	'PPSCTRL_PPSCMD',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'PPSEN0',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'TRGTMODSEL0',0,1
	.word	422
	.byte	2,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	422
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	422
	.byte	2,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	2,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	422
	.byte	2,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	422
	.byte	2,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	422
	.byte	2,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,171,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30166
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PPS0_TARGET_TIME_SECONDS_Bits',0,6,200,6,16,4,11
	.byte	'TSTRH0',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,155,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30608
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PPS0_TARGET_TIME_NANOSECONDS_Bits',0,6,193,6,16,4,11
	.byte	'TTSL0',0,4
	.word	399
	.byte	31,1,2,35,0,11
	.byte	'TRGTBUSY0',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,147,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30717
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PPS0_INTERVAL_Bits',0,6,187,6,16,4,11
	.byte	'PPSINT0',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,139,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30850
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PPS0_WIDTH_Bits',0,6,206,6,16,4,11
	.byte	'PPSWIDTH0',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,163,22,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30949
	.byte	4,2,35,0,0,15,112
	.word	422
	.byte	16,111,0,10
	.byte	'_Ifx_GETH_MTL_OPERATION_MODE_Bits',0,6,172,11,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'DTXSTS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'RAA',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	2,3,2,35,0,11
	.byte	'SCHALG',0,1
	.word	422
	.byte	2,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'CNTPRST',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'CNTCLR',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	399
	.byte	22,0,2,35,0,0,12,6,251,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31056
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_INTERRUPT_STATUS_Bits',0,6,159,11,16,4,11
	.byte	'Q0IS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'Q1IS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'Q2IS',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'Q3IS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1305
	.byte	14,0,2,35,2,0,12,6,243,24,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31314
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ_DMA_MAP0_Bits',0,6,157,12,16,4,11
	.byte	'Q0MDMACH',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'Q0DDMACH',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	422
	.byte	3,0,2,35,0,11
	.byte	'Q1MDMACH',0,1
	.word	422
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	2,4,2,35,1,11
	.byte	'Q1DDMACH',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	422
	.byte	3,0,2,35,1,11
	.byte	'Q2MDMACH',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	422
	.byte	2,4,2,35,2,11
	.byte	'Q2DDMACH',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	422
	.byte	3,0,2,35,2,11
	.byte	'Q3MDMACH',0,1
	.word	422
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	422
	.byte	2,4,2,35,3,11
	.byte	'Q3DDMACH',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	422
	.byte	3,0,2,35,3,0,12,6,195,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31551
	.byte	4,2,35,0,0,15,204,1
	.word	422
	.byte	16,203,1,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0_OPERATION_MODE_Bits',0,6,229,12,16,4,11
	.byte	'FTQ',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TSF',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TXQEN',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'TTC',0,1
	.word	422
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	1305
	.byte	9,0,2,35,0,11
	.byte	'TQS',0,1
	.word	422
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1305
	.byte	12,0,2,35,2,0,12,6,235,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31983
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0_UNDERFLOW_Bits',0,6,248,12,16,4,11
	.byte	'UFFRMCNT',0,2
	.word	1305
	.byte	11,5,2,35,0,11
	.byte	'UFCNTOVF',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	399
	.byte	20,0,2,35,0,0,12,6,251,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32191
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0_DEBUG_Bits',0,6,207,12,16,4,11
	.byte	'TXQPAUSED',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TRCSTS',0,1
	.word	422
	.byte	2,5,2,35,0,11
	.byte	'TWCSTS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'TXQSTS',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'TXSTSFSTS',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	10,0,2,35,0,11
	.byte	'PTXQ',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'STXSTSF',0,1
	.word	422
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	1305
	.byte	9,0,2,35,2,0,12,6,219,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32335
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0_ETS_STATUS_Bits',0,6,222,12,16,4,11
	.byte	'ABS',0,4
	.word	399
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	8,0,2,35,3,0,12,6,227,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32611
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0_QUANTUM_WEIGHT_Bits',0,6,241,12,16,4,11
	.byte	'ISCQW',0,4
	.word	399
	.byte	21,11,2,35,0,11
	.byte	'reserved_21',0,2
	.word	1305
	.byte	11,0,2,35,2,0,12,6,243,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32731
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0',0,6,156,32,25,28,13
	.byte	'OPERATION_MODE',0
	.word	32151
	.byte	4,2,35,0,13
	.byte	'UNDERFLOW',0
	.word	32295
	.byte	4,2,35,4,13
	.byte	'DEBUG',0
	.word	32571
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3892
	.byte	8,2,35,12,13
	.byte	'ETS_STATUS',0
	.word	32691
	.byte	4,2,35,20,13
	.byte	'QUANTUM_WEIGHT',0
	.word	32817
	.byte	4,2,35,24,0,14
	.word	32857
	.byte	15,16
	.word	422
	.byte	16,15,0,10
	.byte	'_Ifx_GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS_Bits',0,6,186,11,16,4,11
	.byte	'TXUNFIS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'ABPSIS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'TXUIE',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'ABPSIE',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	6,0,2,35,1,11
	.byte	'RXOVFIS',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	422
	.byte	7,0,2,35,2,11
	.byte	'RXOIE',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	422
	.byte	7,0,2,35,3,0,12,6,131,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33019
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_Q0',0,6,179,32,25,4,13
	.byte	'INTERRUPT_CONTROL_STATUS',0
	.word	33272
	.byte	4,2,35,0,0,14
	.word	33312
	.byte	10
	.byte	'_Ifx_GETH_MTL_RXQ0_OPERATION_MODE_Bits',0,6,247,11,16,4,11
	.byte	'RTC',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'FUP',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'FEP',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'RSF',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'DIS_TCP_EF',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'EHFC',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'RFA',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	422
	.byte	2,2,2,35,1,11
	.byte	'RFD',0,4
	.word	399
	.byte	4,14,2,35,0,11
	.byte	'reserved_18',0,1
	.word	422
	.byte	2,4,2,35,2,11
	.byte	'RQS',0,2
	.word	1305
	.byte	5,7,2,35,2,11
	.byte	'reserved_25',0,1
	.word	422
	.byte	7,0,2,35,3,0,12,6,171,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33375
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_Bits',0,6,236,11,16,4,11
	.byte	'OVFPKTCNT',0,2
	.word	1305
	.byte	11,5,2,35,0,11
	.byte	'OVFCNTOVF',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'MISPKTCNT',0,2
	.word	1305
	.byte	11,5,2,35,2,11
	.byte	'MISCNTOVF',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,6,163,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33695
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ0_DEBUG_Bits',0,6,224,11,16,4,11
	.byte	'RWCSTS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'RRCSTS',0,1
	.word	422
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'RXQSTS',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	10,0,2,35,0,11
	.byte	'PRXQ',0,2
	.word	1305
	.byte	14,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	2,0,2,35,3,0,12,6,155,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33923
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ0_CONTROL_Bits',0,6,216,11,16,4,11
	.byte	'RXQ_WEGT',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'RXQ_FRM_ARBIT',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	399
	.byte	28,0,2,35,0,0,12,6,147,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34137
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ0',0,6,197,32,25,16,13
	.byte	'OPERATION_MODE',0
	.word	33655
	.byte	4,2,35,0,13
	.byte	'MISSED_PACKET_OVERFLOW_CNT',0
	.word	33883
	.byte	4,2,35,4,13
	.byte	'DEBUG',0
	.word	34097
	.byte	4,2,35,8,13
	.byte	'CONTROL',0
	.word	34243
	.byte	4,2,35,12,0,14
	.word	34283
	.byte	10
	.byte	'_Ifx_GETH_MTL_TXQ_OPERATION_MODE_Bits',0,6,174,13,16,4,11
	.byte	'FTQ',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TSF',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TXQEN',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'TTC',0,1
	.word	422
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	1305
	.byte	9,0,2,35,0,11
	.byte	'TQS',0,1
	.word	422
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1305
	.byte	12,0,2,35,2,0,12,6,171,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34406
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_UNDERFLOW_Bits',0,6,200,13,16,4,11
	.byte	'UFFRMCNT',0,2
	.word	1305
	.byte	11,5,2,35,0,11
	.byte	'UFCNTOVF',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	399
	.byte	20,0,2,35,0,0,12,6,195,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34613
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_DEBUG_Bits',0,6,128,13,16,4,11
	.byte	'TXQPAUSED',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TRCSTS',0,1
	.word	422
	.byte	2,5,2,35,0,11
	.byte	'TWCSTS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'TXQSTS',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'TXSTSFSTS',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	10,0,2,35,0,11
	.byte	'PTXQ',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'STXSTSF',0,1
	.word	422
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	1305
	.byte	9,0,2,35,2,0,12,6,131,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34756
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_ETS_CONTROL_Bits',0,6,143,13,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'AVALG',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'CC',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'SLC',0,1
	.word	422
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	399
	.byte	25,0,2,35,0,0,12,6,139,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35031
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_ETS_STATUS_Bits',0,6,153,13,16,4,11
	.byte	'ABS',0,4
	.word	399
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	8,0,2,35,3,0,12,6,147,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35203
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_QUANTUM_WEIGHT_Bits',0,6,186,13,16,4,11
	.byte	'ISCQW',0,4
	.word	399
	.byte	21,11,2,35,0,11
	.byte	'reserved_21',0,2
	.word	1305
	.byte	11,0,2,35,2,0,12,6,179,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35322
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_SENDSLOPECREDIT_Bits',0,6,193,13,16,4,11
	.byte	'SSC',0,2
	.word	1305
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,4
	.word	399
	.byte	18,0,2,35,0,0,12,6,187,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35447
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_HICREDIT_Bits',0,6,160,13,16,4,11
	.byte	'HC',0,4
	.word	399
	.byte	29,3,2,35,0,11
	.byte	'reserved_29',0,1
	.word	422
	.byte	3,0,2,35,3,0,12,6,155,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35571
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_LOCREDIT_Bits',0,6,167,13,16,4,11
	.byte	'LC',0,4
	.word	399
	.byte	29,3,2,35,0,11
	.byte	'reserved_29',0,1
	.word	422
	.byte	3,0,2,35,3,0,12,6,163,26,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35687
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ',0,6,218,32,25,40,13
	.byte	'OPERATION_MODE',0
	.word	34573
	.byte	4,2,35,0,13
	.byte	'UNDERFLOW',0
	.word	34716
	.byte	4,2,35,4,13
	.byte	'DEBUG',0
	.word	34991
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3228
	.byte	4,2,35,12,13
	.byte	'ETS_CONTROL',0
	.word	35163
	.byte	4,2,35,16,13
	.byte	'ETS_STATUS',0
	.word	35282
	.byte	4,2,35,20,13
	.byte	'QUANTUM_WEIGHT',0
	.word	35407
	.byte	4,2,35,24,13
	.byte	'SENDSLOPECREDIT',0
	.word	35531
	.byte	4,2,35,28,13
	.byte	'HICREDIT',0
	.word	35647
	.byte	4,2,35,32,13
	.byte	'LOCREDIT',0
	.word	35763
	.byte	4,2,35,36,0,14
	.word	35803
	.byte	10
	.byte	'_Ifx_GETH_MTL_Q_INTERRUPT_CONTROL_STATUS_Bits',0,6,201,11,16,4,11
	.byte	'TXUNFIS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'ABPSIS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'TXUIE',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'ABPSIE',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	6,0,2,35,1,11
	.byte	'RXOVFIS',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	422
	.byte	7,0,2,35,2,11
	.byte	'RXOIE',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	422
	.byte	7,0,2,35,3,0,12,6,139,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36037
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_Q',0,6,245,32,25,4,13
	.byte	'INTERRUPT_CONTROL_STATUS',0
	.word	36289
	.byte	4,2,35,0,0,14
	.word	36329
	.byte	10
	.byte	'_Ifx_GETH_MTL_RXQ_OPERATION_MODE_Bits',0,6,189,12,16,4,11
	.byte	'RTC',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'FUP',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'FEP',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'RSF',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'DIS_TCP_EF',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'EHFC',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'RFA',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	422
	.byte	2,2,2,35,1,11
	.byte	'RFD',0,4
	.word	399
	.byte	4,14,2,35,0,11
	.byte	'reserved_18',0,1
	.word	422
	.byte	2,4,2,35,2,11
	.byte	'RQS',0,2
	.word	1305
	.byte	5,7,2,35,2,11
	.byte	'reserved_25',0,1
	.word	422
	.byte	7,0,2,35,3,0,12,6,211,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36391
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ_MISSED_PACKET_OVERFLOW_CNT_Bits',0,6,178,12,16,4,11
	.byte	'OVFPKTCNT',0,2
	.word	1305
	.byte	11,5,2,35,0,11
	.byte	'OVFCNTOVF',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'MISPKTCNT',0,2
	.word	1305
	.byte	11,5,2,35,2,11
	.byte	'MISCNTOVF',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,6,203,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36710
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ_DEBUG_Bits',0,6,145,12,16,4,11
	.byte	'RWCSTS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'RRCSTS',0,1
	.word	422
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'RXQSTS',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	10,0,2,35,0,11
	.byte	'PRXQ',0,2
	.word	1305
	.byte	14,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	2,0,2,35,3,0,12,6,187,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36937
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ_CONTROL_Bits',0,6,137,12,16,4,11
	.byte	'RXQ_WEGT',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'RXQ_FRM_ARBIT',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	399
	.byte	28,0,2,35,0,0,12,6,179,25,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37150
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ',0,6,135,33,25,16,13
	.byte	'OPERATION_MODE',0
	.word	36670
	.byte	4,2,35,0,13
	.byte	'MISSED_PACKET_OVERFLOW_CNT',0
	.word	36897
	.byte	4,2,35,4,13
	.byte	'DEBUG',0
	.word	37110
	.byte	4,2,35,8,13
	.byte	'CONTROL',0
	.word	37255
	.byte	4,2,35,12,0,14
	.word	37295
	.byte	14
	.word	35803
	.byte	14
	.word	36329
	.byte	14
	.word	37295
	.byte	14
	.word	35803
	.byte	14
	.word	36329
	.byte	14
	.word	37295
	.byte	15,128,4
	.word	422
	.byte	16,255,3,0,10
	.byte	'_Ifx_GETH_DMA_MODE_Bits',0,6,255,2,16,4,11
	.byte	'SWR',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'DA',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TAA',0,1
	.word	422
	.byte	3,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	1305
	.byte	4,7,2,35,0,11
	.byte	'ARBC',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'TXPR',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'PR',0,1
	.word	422
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'INTM',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1305
	.byte	14,0,2,35,2,0,12,6,139,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37458
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_SYSBUS_MODE_Bits',0,6,143,3,16,4,11
	.byte	'FB',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	7,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	2,4,2,35,1,11
	.byte	'AAL',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'MB',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'RB',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	422
	.byte	3,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	2,0,2,35,3,0,12,6,147,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37726
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_INTERRUPT_STATUS_Bits',0,6,241,2,16,4,11
	.byte	'DC0IS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'DC1IS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'DC2IS',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'DC3IS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'MTLIS',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'MACIS',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1305
	.byte	14,0,2,35,2,0,12,6,131,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38066
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_DEBUG_STATUS0_Bits',0,6,219,2,16,4,11
	.byte	'AXWHSTS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'RPS0',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'TPS0',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'RPS1',0,1
	.word	422
	.byte	4,4,2,35,2,11
	.byte	'TPS1',0,1
	.word	422
	.byte	4,0,2,35,2,11
	.byte	'RPS2',0,1
	.word	422
	.byte	4,4,2,35,3,11
	.byte	'TPS2',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,6,243,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38318
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_DEBUG_STATUS1_Bits',0,6,233,2,16,4,11
	.byte	'RPS3',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'TPS3',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	399
	.byte	24,0,2,35,0,0,12,6,251,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38557
	.byte	4,2,35,0,0,15,236,1
	.word	422
	.byte	16,235,1,0,10
	.byte	'_Ifx_GETH_DMA_CH_CONTROL_Bits',0,6,167,1,16,4,11
	.byte	'reserved_0',0,2
	.word	1305
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'PBLX8',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'DSL',0,1
	.word	422
	.byte	3,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	422
	.byte	3,0,2,35,2,11
	.byte	'SPH',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	422
	.byte	7,0,2,35,3,0,12,6,227,18,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38702
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_TX_CONTROL_Bits',0,6,203,2,16,4,11
	.byte	'ST',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TCW',0,1
	.word	422
	.byte	3,4,2,35,0,11
	.byte	'OSF',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	1305
	.byte	7,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	422
	.byte	2,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'TXPBL',0,1
	.word	422
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	422
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,6,235,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38940
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_RX_CONTROL_Bits',0,6,254,1,16,4,11
	.byte	'SR',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'RBSZ_X_0',0,1
	.word	422
	.byte	2,5,2,35,0,11
	.byte	'RBSZ_13_Y',0,2
	.word	1305
	.byte	12,1,2,35,0,11
	.byte	'reserved_15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'RXPBL',0,1
	.word	422
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	422
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	3,1,2,35,3,11
	.byte	'RPF',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,179,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39241
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_TXDESC_LIST_ADDRESS_Bits',0,6,182,2,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'TDESLA',0,4
	.word	399
	.byte	30,0,2,35,0,0,12,6,211,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39500
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_RXDESC_LIST_ADDRESS_Bits',0,6,233,1,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'RDESLA',0,4
	.word	399
	.byte	30,0,2,35,0,0,12,6,155,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39629
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_TXDESC_TAIL_POINTER_Bits',0,6,196,2,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'TDTP',0,4
	.word	399
	.byte	30,0,2,35,0,0,12,6,227,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39758
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_RXDESC_TAIL_POINTER_Bits',0,6,247,1,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'RDTP',0,4
	.word	399
	.byte	30,0,2,35,0,0,12,6,171,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39885
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_TXDESC_RING_LENGTH_Bits',0,6,189,2,16,4,11
	.byte	'TDRL',0,2
	.word	1305
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,4
	.word	399
	.byte	22,0,2,35,0,0,12,6,219,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40012
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_RXDESC_RING_LENGTH_Bits',0,6,240,1,16,4,11
	.byte	'RDRL',0,2
	.word	1305
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,4
	.word	399
	.byte	22,0,2,35,0,0,12,6,163,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40139
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_INTERRUPT_ENABLE_Bits',0,6,204,1,16,4,11
	.byte	'TIE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TXSE',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TBUE',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	3,2,2,35,0,11
	.byte	'RIE',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'RBUE',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'RSE',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'RWTE',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'ETIE',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'ERIE',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'FBEE',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'CDEE',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'AIE',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'NIE',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,139,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40266
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_RX_INTERRUPT_WATCHDOG_TIMER_Bits',0,6,140,2,16,4,11
	.byte	'RWT',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'RWTU',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1305
	.byte	14,0,2,35,2,0,12,6,187,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40600
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_SLOT_FUNCTION_CONTROL_STATUS_Bits',0,6,149,2,16,4,11
	.byte	'ESC',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'ASC',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'SIV',0,2
	.word	1305
	.byte	12,0,2,35,0,11
	.byte	'RSN',0,1
	.word	422
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1305
	.byte	12,0,2,35,2,0,12,6,195,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40773
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_CURRENT_APP_TXDESC_Bits',0,6,198,1,16,4,11
	.byte	'CURTDESAPTR',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,131,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40976
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_CURRENT_APP_RXDESC_Bits',0,6,186,1,16,4,11
	.byte	'CURRDESAPTR',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,243,18,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41087
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_CURRENT_APP_TXBUFFER_Bits',0,6,192,1,16,4,11
	.byte	'CURTBUFAPTR',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,251,18,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41198
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_CURRENT_APP_RXBUFFER_Bits',0,6,180,1,16,4,11
	.byte	'CURRBUFAPTR',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,235,18,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41311
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_STATUS_Bits',0,6,160,2,16,4,11
	.byte	'TI',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'TPS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TBU',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	3,2,2,35,0,11
	.byte	'RI',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'RBU',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'RPS',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'RWT',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'ETI',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'ERI',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'FBE',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'CDE',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'AIS',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'NIS',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'TEB',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'REB',0,1
	.word	422
	.byte	3,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1305
	.byte	10,0,2,35,2,0,12,6,203,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41424
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_MISS_FRAME_CNT_Bits',0,6,224,1,16,4,11
	.byte	'MFC',0,2
	.word	1305
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	422
	.byte	4,1,2,35,1,11
	.byte	'MFCO',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,147,19,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41768
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH',0,6,156,33,25,128,1,13
	.byte	'CONTROL',0
	.word	38900
	.byte	4,2,35,0,13
	.byte	'TX_CONTROL',0
	.word	39201
	.byte	4,2,35,4,13
	.byte	'RX_CONTROL',0
	.word	39460
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3892
	.byte	8,2,35,12,13
	.byte	'TXDESC_LIST_ADDRESS',0
	.word	39589
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3228
	.byte	4,2,35,24,13
	.byte	'RXDESC_LIST_ADDRESS',0
	.word	39718
	.byte	4,2,35,28,13
	.byte	'TXDESC_TAIL_POINTER',0
	.word	39845
	.byte	4,2,35,32,13
	.byte	'reserved_24',0
	.word	3228
	.byte	4,2,35,36,13
	.byte	'RXDESC_TAIL_POINTER',0
	.word	39972
	.byte	4,2,35,40,13
	.byte	'TXDESC_RING_LENGTH',0
	.word	40099
	.byte	4,2,35,44,13
	.byte	'RXDESC_RING_LENGTH',0
	.word	40226
	.byte	4,2,35,48,13
	.byte	'INTERRUPT_ENABLE',0
	.word	40560
	.byte	4,2,35,52,13
	.byte	'RX_INTERRUPT_WATCHDOG_TIMER',0
	.word	40733
	.byte	4,2,35,56,13
	.byte	'SLOT_FUNCTION_CONTROL_STATUS',0
	.word	40936
	.byte	4,2,35,60,13
	.byte	'reserved_40',0
	.word	3228
	.byte	4,2,35,64,13
	.byte	'CURRENT_APP_TXDESC',0
	.word	41047
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	3228
	.byte	4,2,35,72,13
	.byte	'CURRENT_APP_RXDESC',0
	.word	41158
	.byte	4,2,35,76,13
	.byte	'reserved_50',0
	.word	3228
	.byte	4,2,35,80,13
	.byte	'CURRENT_APP_TXBUFFER',0
	.word	41271
	.byte	4,2,35,84,13
	.byte	'reserved_58',0
	.word	3228
	.byte	4,2,35,88,13
	.byte	'CURRENT_APP_RXBUFFER',0
	.word	41384
	.byte	4,2,35,92,13
	.byte	'STATUS',0
	.word	41728
	.byte	4,2,35,96,13
	.byte	'MISS_FRAME_CNT',0
	.word	41889
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	8254
	.byte	24,2,35,104,0,15,128,4
	.word	41929
	.byte	16,3,0,14
	.word	42607
	.byte	15,128,26
	.word	422
	.byte	16,255,25,0,10
	.byte	'_Ifx_GETH_CLC_Bits',0,6,159,1,16,4,11
	.byte	'DISR',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	399
	.byte	30,0,2,35,0,0,12,6,219,18,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42633
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ID_Bits',0,6,180,3,16,4,11
	.byte	'MODREV',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,6,163,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42753
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_GPCTL_Bits',0,6,161,3,16,4,11
	.byte	'ALTI0',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'ALTI1',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'ALTI2',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'ALTI3',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'ALTI4',0,1
	.word	422
	.byte	2,6,2,35,1,11
	.byte	'ALTI5',0,1
	.word	422
	.byte	2,4,2,35,1,11
	.byte	'ALTI6',0,1
	.word	422
	.byte	2,2,2,35,1,11
	.byte	'ALTI7',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'ALTI8',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'ALTI9',0,1
	.word	422
	.byte	2,4,2,35,2,11
	.byte	'ALTI10',0,1
	.word	422
	.byte	2,2,2,35,2,11
	.byte	'EPR',0,2
	.word	1305
	.byte	3,7,2,35,2,11
	.byte	'reserved_25',0,1
	.word	422
	.byte	6,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,155,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42873
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ACCEN0_Bits',0,6,73,16,4,11
	.byte	'EN0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,187,18,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43190
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ACCEN1_Bits',0,6,110,16,4,11
	.byte	'reserved_0',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,195,18,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43760
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_KRST0_Bits',0,6,188,3,16,4,11
	.byte	'RST',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	399
	.byte	30,0,2,35,0,0,12,6,171,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43850
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_KRST1_Bits',0,6,196,3,16,4,11
	.byte	'RST',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	399
	.byte	31,0,2,35,0,0,12,6,179,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43974
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_KRSTCLR_Bits',0,6,203,3,16,4,11
	.byte	'CLR',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	399
	.byte	31,0,2,35,0,0,12,6,187,20,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44079
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ACCEND_ACCEN0D_Bits',0,6,116,16,4,11
	.byte	'EN0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,6,203,18,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44186
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ACCEND_ACCEN1D_Bits',0,6,153,1,16,4,11
	.byte	'reserved_0',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,6,211,18,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44764
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ACCEND',0,6,199,33,25,8,13
	.byte	'ACCEN0D',0
	.word	44724
	.byte	4,2,35,0,13
	.byte	'ACCEN1D',0
	.word	44823
	.byte	4,2,35,4,0,15,32
	.word	44863
	.byte	16,3,0,14
	.word	44921
	.byte	10
	.byte	'_Ifx_GETH_SKEWCTL_Bits',0,6,235,16,16,4,11
	.byte	'TXCFG',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'RXCFG',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	399
	.byte	20,0,2,35,0,0,12,6,171,30,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44935
	.byte	4,2,35,0,0,15,188,1
	.word	422
	.byte	16,187,1,0,10
	.byte	'_Ifx_GETH',0,6,218,33,25,128,66,13
	.byte	'MAC_CONFIGURATION',0
	.word	1265
	.byte	4,2,35,0,13
	.byte	'MAC_EXT_CONFIGURATION',0
	.word	1593
	.byte	4,2,35,4,13
	.byte	'MAC_PACKET_FILTER',0
	.word	1945
	.byte	4,2,35,8,13
	.byte	'MAC_WATCHDOG_TIMEOUT',0
	.word	2102
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	2142
	.byte	64,2,35,16,13
	.byte	'MAC_VLAN_TAG_CTRL',0
	.word	2478
	.byte	4,2,35,80,17
	.word	3044
	.byte	4,2,35,84,13
	.byte	'MAC_VLAN_HASH_TABLE',0
	.word	3188
	.byte	4,2,35,88,13
	.byte	'reserved_5C',0
	.word	3228
	.byte	4,2,35,92,17
	.word	3655
	.byte	4,2,35,96,13
	.byte	'MAC_INNER_VLAN_INCL',0
	.word	3852
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3892
	.byte	8,2,35,104,13
	.byte	'MAC_Q0_TX_FLOW_CTRL',0
	.word	4066
	.byte	4,2,35,112,13
	.byte	'reserved_74',0
	.word	4106
	.byte	28,2,35,116,13
	.byte	'MAC_RX_FLOW_CTRL',0
	.word	4249
	.byte	4,3,35,144,1,13
	.byte	'MAC_RXQ_CTRL4',0
	.word	4492
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3892
	.byte	8,3,35,152,1,13
	.byte	'MAC_RXQ_CTRL0',0
	.word	4685
	.byte	4,3,35,160,1,13
	.byte	'MAC_RXQ_CTRL1',0
	.word	5037
	.byte	4,3,35,164,1,13
	.byte	'MAC_RXQ_CTRL2',0
	.word	5181
	.byte	4,3,35,168,1,13
	.byte	'reserved_AC',0
	.word	3228
	.byte	4,3,35,172,1,13
	.byte	'MAC_INTERRUPT_STATUS',0
	.word	5573
	.byte	4,3,35,176,1,13
	.byte	'MAC_INTERRUPT_ENABLE',0
	.word	5889
	.byte	4,3,35,180,1,13
	.byte	'MAC_RX_TX_STATUS',0
	.word	6126
	.byte	4,3,35,184,1,13
	.byte	'reserved_BC',0
	.word	3228
	.byte	4,3,35,188,1,13
	.byte	'MAC_PMT_CONTROL_STATUS',0
	.word	6478
	.byte	4,3,35,192,1,17
	.word	7327
	.byte	4,3,35,196,1,13
	.byte	'reserved_C8',0
	.word	3892
	.byte	8,3,35,200,1,13
	.byte	'MAC_LPI_CONTROL_STATUS',0
	.word	7803
	.byte	4,3,35,208,1,13
	.byte	'MAC_LPI_TIMERS_CONTROL',0
	.word	7941
	.byte	4,3,35,212,1,13
	.byte	'MAC_LPI_ENTRY_TIMER',0
	.word	8085
	.byte	4,3,35,216,1,13
	.byte	'MAC_1US_TIC_COUNTER',0
	.word	8214
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	8254
	.byte	24,3,35,224,1,13
	.byte	'MAC_PHYIF_CONTROL_STATUS',0
	.word	8529
	.byte	4,3,35,248,1,13
	.byte	'reserved_FC',0
	.word	8569
	.byte	20,3,35,252,1,13
	.byte	'MAC_VERSION',0
	.word	8673
	.byte	4,3,35,144,2,13
	.byte	'MAC_DEBUG',0
	.word	8864
	.byte	4,3,35,148,2,13
	.byte	'reserved_118',0
	.word	3228
	.byte	4,3,35,152,2,13
	.byte	'MAC_HW_FEATURE0',0
	.word	9424
	.byte	4,3,35,156,2,13
	.byte	'MAC_HW_FEATURE1',0
	.word	9869
	.byte	4,3,35,160,2,13
	.byte	'MAC_HW_FEATURE2',0
	.word	10201
	.byte	4,3,35,164,2,13
	.byte	'MAC_HW_FEATURE3',0
	.word	10375
	.byte	4,3,35,168,2,13
	.byte	'reserved_12C',0
	.word	10415
	.byte	212,1,3,35,172,2,13
	.byte	'MAC_MDIO_ADDRESS',0
	.word	10701
	.byte	4,3,35,128,4,13
	.byte	'MAC_MDIO_DATA',0
	.word	10805
	.byte	4,3,35,132,4,13
	.byte	'reserved_208',0
	.word	10845
	.byte	40,3,35,136,4,13
	.byte	'MAC_CSR_SW_CTRL',0
	.word	10968
	.byte	4,3,35,176,4,13
	.byte	'reserved_234',0
	.word	3228
	.byte	4,3,35,180,4,13
	.byte	'MAC_EXT_CFG1',0
	.word	11123
	.byte	4,3,35,184,4,13
	.byte	'reserved_23C',0
	.word	11163
	.byte	196,1,3,35,188,4,13
	.byte	'MAC_ADDRESS_HIGH0',0
	.word	11284
	.byte	4,3,35,128,6,13
	.byte	'MAC_ADDRESS_LOW0',0
	.word	11381
	.byte	4,3,35,132,6,13
	.byte	'MAC_ADDRESS_HIGH1',0
	.word	11559
	.byte	4,3,35,136,6,13
	.byte	'MAC_ADDRESS_LOW1',0
	.word	11655
	.byte	4,3,35,140,6,13
	.byte	'MAC_ADDRESS_HIGH2',0
	.word	11559
	.byte	4,3,35,144,6,13
	.byte	'MAC_ADDRESS_LOW2',0
	.word	11655
	.byte	4,3,35,148,6,13
	.byte	'MAC_ADDRESS_HIGH3',0
	.word	11559
	.byte	4,3,35,152,6,13
	.byte	'MAC_ADDRESS_LOW3',0
	.word	11655
	.byte	4,3,35,156,6,13
	.byte	'MAC_ADDRESS_HIGH4',0
	.word	11559
	.byte	4,3,35,160,6,13
	.byte	'MAC_ADDRESS_LOW4',0
	.word	11655
	.byte	4,3,35,164,6,13
	.byte	'MAC_ADDRESS_HIGH5',0
	.word	11559
	.byte	4,3,35,168,6,13
	.byte	'MAC_ADDRESS_LOW5',0
	.word	11655
	.byte	4,3,35,172,6,13
	.byte	'MAC_ADDRESS_HIGH6',0
	.word	11559
	.byte	4,3,35,176,6,13
	.byte	'MAC_ADDRESS_LOW6',0
	.word	11655
	.byte	4,3,35,180,6,13
	.byte	'MAC_ADDRESS_HIGH7',0
	.word	11559
	.byte	4,3,35,184,6,13
	.byte	'MAC_ADDRESS_LOW7',0
	.word	11655
	.byte	4,3,35,188,6,13
	.byte	'MAC_ADDRESS_HIGH8',0
	.word	11559
	.byte	4,3,35,192,6,13
	.byte	'MAC_ADDRESS_LOW8',0
	.word	11655
	.byte	4,3,35,196,6,13
	.byte	'MAC_ADDRESS_HIGH9',0
	.word	11559
	.byte	4,3,35,200,6,13
	.byte	'MAC_ADDRESS_LOW9',0
	.word	11655
	.byte	4,3,35,204,6,13
	.byte	'MAC_ADDRESS_HIGH10',0
	.word	11559
	.byte	4,3,35,208,6,13
	.byte	'MAC_ADDRESS_LOW10',0
	.word	11655
	.byte	4,3,35,212,6,13
	.byte	'MAC_ADDRESS_HIGH11',0
	.word	11559
	.byte	4,3,35,216,6,13
	.byte	'MAC_ADDRESS_LOW11',0
	.word	11655
	.byte	4,3,35,220,6,13
	.byte	'MAC_ADDRESS_HIGH12',0
	.word	11559
	.byte	4,3,35,224,6,13
	.byte	'MAC_ADDRESS_LOW12',0
	.word	11655
	.byte	4,3,35,228,6,13
	.byte	'MAC_ADDRESS_HIGH13',0
	.word	11559
	.byte	4,3,35,232,6,13
	.byte	'MAC_ADDRESS_LOW13',0
	.word	11655
	.byte	4,3,35,236,6,13
	.byte	'MAC_ADDRESS_HIGH14',0
	.word	11559
	.byte	4,3,35,240,6,13
	.byte	'MAC_ADDRESS_LOW14',0
	.word	11655
	.byte	4,3,35,244,6,13
	.byte	'MAC_ADDRESS_HIGH15',0
	.word	11559
	.byte	4,3,35,248,6,13
	.byte	'MAC_ADDRESS_LOW15',0
	.word	11655
	.byte	4,3,35,252,6,13
	.byte	'MAC_ADDRESS_HIGH16',0
	.word	11559
	.byte	4,3,35,128,7,13
	.byte	'MAC_ADDRESS_LOW16',0
	.word	11655
	.byte	4,3,35,132,7,13
	.byte	'MAC_ADDRESS_HIGH17',0
	.word	11559
	.byte	4,3,35,136,7,13
	.byte	'MAC_ADDRESS_LOW17',0
	.word	11655
	.byte	4,3,35,140,7,13
	.byte	'MAC_ADDRESS_HIGH18',0
	.word	11559
	.byte	4,3,35,144,7,13
	.byte	'MAC_ADDRESS_LOW18',0
	.word	11655
	.byte	4,3,35,148,7,13
	.byte	'MAC_ADDRESS_HIGH19',0
	.word	11559
	.byte	4,3,35,152,7,13
	.byte	'MAC_ADDRESS_LOW19',0
	.word	11655
	.byte	4,3,35,156,7,13
	.byte	'MAC_ADDRESS_HIGH20',0
	.word	11559
	.byte	4,3,35,160,7,13
	.byte	'MAC_ADDRESS_LOW20',0
	.word	11655
	.byte	4,3,35,164,7,13
	.byte	'MAC_ADDRESS_HIGH21',0
	.word	11559
	.byte	4,3,35,168,7,13
	.byte	'MAC_ADDRESS_LOW21',0
	.word	11655
	.byte	4,3,35,172,7,13
	.byte	'MAC_ADDRESS_HIGH22',0
	.word	11559
	.byte	4,3,35,176,7,13
	.byte	'MAC_ADDRESS_LOW22',0
	.word	11655
	.byte	4,3,35,180,7,13
	.byte	'MAC_ADDRESS_HIGH23',0
	.word	11559
	.byte	4,3,35,184,7,13
	.byte	'MAC_ADDRESS_LOW23',0
	.word	11655
	.byte	4,3,35,188,7,13
	.byte	'MAC_ADDRESS_HIGH24',0
	.word	11559
	.byte	4,3,35,192,7,13
	.byte	'MAC_ADDRESS_LOW24',0
	.word	11655
	.byte	4,3,35,196,7,13
	.byte	'MAC_ADDRESS_HIGH25',0
	.word	11559
	.byte	4,3,35,200,7,13
	.byte	'MAC_ADDRESS_LOW25',0
	.word	11655
	.byte	4,3,35,204,7,13
	.byte	'MAC_ADDRESS_HIGH26',0
	.word	11559
	.byte	4,3,35,208,7,13
	.byte	'MAC_ADDRESS_LOW26',0
	.word	11655
	.byte	4,3,35,212,7,13
	.byte	'MAC_ADDRESS_HIGH27',0
	.word	11559
	.byte	4,3,35,216,7,13
	.byte	'MAC_ADDRESS_LOW27',0
	.word	11655
	.byte	4,3,35,220,7,13
	.byte	'MAC_ADDRESS_HIGH28',0
	.word	11559
	.byte	4,3,35,224,7,13
	.byte	'MAC_ADDRESS_LOW28',0
	.word	11655
	.byte	4,3,35,228,7,13
	.byte	'MAC_ADDRESS_HIGH29',0
	.word	11559
	.byte	4,3,35,232,7,13
	.byte	'MAC_ADDRESS_LOW29',0
	.word	11655
	.byte	4,3,35,236,7,13
	.byte	'MAC_ADDRESS_HIGH30',0
	.word	11559
	.byte	4,3,35,240,7,13
	.byte	'MAC_ADDRESS_LOW30',0
	.word	11655
	.byte	4,3,35,244,7,13
	.byte	'MAC_ADDRESS_HIGH31',0
	.word	11559
	.byte	4,3,35,248,7,13
	.byte	'MAC_ADDRESS_LOW31',0
	.word	11655
	.byte	4,3,35,252,7,13
	.byte	'reserved_400',0
	.word	11695
	.byte	128,6,3,35,128,8,13
	.byte	'MMC_CONTROL',0
	.word	11920
	.byte	4,3,35,128,14,13
	.byte	'MMC_RX_INTERRUPT',0
	.word	12666
	.byte	4,3,35,132,14,13
	.byte	'MMC_TX_INTERRUPT',0
	.word	13410
	.byte	4,3,35,136,14,13
	.byte	'MMC_RX_INTERRUPT_MASK',0
	.word	14161
	.byte	4,3,35,140,14,13
	.byte	'MMC_TX_INTERRUPT_MASK',0
	.word	14910
	.byte	4,3,35,144,14,13
	.byte	'TX_OCTET_COUNT_GOOD_BAD',0
	.word	15015
	.byte	4,3,35,148,14,13
	.byte	'TX_PACKET_COUNT_GOOD_BAD',0
	.word	15144
	.byte	4,3,35,152,14,13
	.byte	'TX_BROADCAST_PACKETS_GOOD',0
	.word	15275
	.byte	4,3,35,156,14,13
	.byte	'TX_MULTICAST_PACKETS_GOOD',0
	.word	15406
	.byte	4,3,35,160,14,13
	.byte	'TX_64OCTETS_PACKETS_GOOD_BAD',0
	.word	15541
	.byte	4,3,35,164,14,13
	.byte	'TX_65TO127OCTETS_PACKETS_GOOD_BAD',0
	.word	15685
	.byte	4,3,35,168,14,13
	.byte	'TX_128TO255OCTETS_PACKETS_GOOD_BAD',0
	.word	15831
	.byte	4,3,35,172,14,13
	.byte	'TX_256TO511OCTETS_PACKETS_GOOD_BAD',0
	.word	15977
	.byte	4,3,35,176,14,13
	.byte	'TX_512TO1023OCTETS_PACKETS_GOOD_BAD',0
	.word	16125
	.byte	4,3,35,180,14,13
	.byte	'TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD',0
	.word	16273
	.byte	4,3,35,184,14,13
	.byte	'TX_UNICAST_PACKETS_GOOD_BAD',0
	.word	16407
	.byte	4,3,35,188,14,13
	.byte	'TX_MULTICAST_PACKETS_GOOD_BAD',0
	.word	16543
	.byte	4,3,35,192,14,13
	.byte	'TX_BROADCAST_PACKETS_GOOD_BAD',0
	.word	16679
	.byte	4,3,35,196,14,13
	.byte	'TX_UNDERFLOW_ERROR_PACKETS',0
	.word	16812
	.byte	4,3,35,200,14,13
	.byte	'TX_SINGLE_COLLISION_GOOD_PACKETS',0
	.word	16952
	.byte	4,3,35,204,14,13
	.byte	'TX_MULTIPLE_COLLISION_GOOD_PACKETS',0
	.word	17094
	.byte	4,3,35,208,14,13
	.byte	'TX_DEFERRED_PACKETS',0
	.word	17218
	.byte	4,3,35,212,14,13
	.byte	'TX_LATE_COLLISION_PACKETS',0
	.word	17350
	.byte	4,3,35,216,14,13
	.byte	'TX_EXCESSIVE_COLLISION_PACKETS',0
	.word	17486
	.byte	4,3,35,220,14,13
	.byte	'TX_CARRIER_ERROR_PACKETS',0
	.word	17614
	.byte	4,3,35,224,14,13
	.byte	'TX_OCTET_COUNT_GOOD',0
	.word	17714
	.byte	4,3,35,228,14,13
	.byte	'TX_PACKET_COUNT_GOOD',0
	.word	17838
	.byte	4,3,35,232,14,13
	.byte	'TX_EXCESSIVE_DEFERRAL_ERROR',0
	.word	17971
	.byte	4,3,35,236,14,13
	.byte	'TX_PAUSE_PACKETS',0
	.word	18092
	.byte	4,3,35,240,14,13
	.byte	'TX_VLAN_PACKETS_GOOD',0
	.word	18217
	.byte	4,3,35,244,14,13
	.byte	'TX_OSIZE_PACKETS_GOOD',0
	.word	18343
	.byte	4,3,35,248,14,13
	.byte	'reserved_77C',0
	.word	3228
	.byte	4,3,35,252,14,13
	.byte	'RX_PACKETS_COUNT_GOOD_BAD',0
	.word	18473
	.byte	4,3,35,128,15,13
	.byte	'RX_OCTET_COUNT_GOOD_BAD',0
	.word	18578
	.byte	4,3,35,132,15,13
	.byte	'RX_OCTET_COUNT_GOOD',0
	.word	18678
	.byte	4,3,35,136,15,13
	.byte	'RX_BROADCAST_PACKETS_GOOD',0
	.word	18809
	.byte	4,3,35,140,15,13
	.byte	'RX_MULTICAST_PACKETS_GOOD',0
	.word	18940
	.byte	4,3,35,144,15,13
	.byte	'RX_CRC_ERROR_PACKETS',0
	.word	19066
	.byte	4,3,35,148,15,13
	.byte	'RX_ALIGNMENT_ERROR_PACKETS',0
	.word	19199
	.byte	4,3,35,152,15,13
	.byte	'RX_RUNT_ERROR_PACKETS',0
	.word	19327
	.byte	4,3,35,156,15,13
	.byte	'RX_JABBER_ERROR_PACKETS',0
	.word	19456
	.byte	4,3,35,160,15,13
	.byte	'RX_UNDERSIZE_PACKETS_GOOD',0
	.word	19589
	.byte	4,3,35,164,15,13
	.byte	'RX_OVERSIZE_PACKETS_GOOD',0
	.word	19720
	.byte	4,3,35,168,15,13
	.byte	'RX_64OCTETS_PACKETS_GOOD_BAD',0
	.word	19855
	.byte	4,3,35,172,15,13
	.byte	'RX_65TO127OCTETS_PACKETS_GOOD_BAD',0
	.word	19999
	.byte	4,3,35,176,15,13
	.byte	'RX_128TO255OCTETS_PACKETS_GOOD_BAD',0
	.word	20145
	.byte	4,3,35,180,15,13
	.byte	'RX_256TO511OCTETS_PACKETS_GOOD_BAD',0
	.word	20291
	.byte	4,3,35,184,15,13
	.byte	'RX_512TO1023OCTETS_PACKETS_GOOD_BAD',0
	.word	20439
	.byte	4,3,35,188,15,13
	.byte	'RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD',0
	.word	20587
	.byte	4,3,35,192,15,13
	.byte	'RX_UNICAST_PACKETS_GOOD',0
	.word	20716
	.byte	4,3,35,196,15,13
	.byte	'RX_LENGTH_ERROR_PACKETS',0
	.word	20845
	.byte	4,3,35,200,15,13
	.byte	'RX_OUT_OF_RANGE_TYPE_PACKETS',0
	.word	20981
	.byte	4,3,35,204,15,13
	.byte	'RX_PAUSE_PACKETS',0
	.word	21105
	.byte	4,3,35,208,15,13
	.byte	'RX_FIFO_OVERFLOW_PACKETS',0
	.word	21237
	.byte	4,3,35,212,15,13
	.byte	'RX_VLAN_PACKETS_GOOD_BAD',0
	.word	21370
	.byte	4,3,35,216,15,13
	.byte	'RX_WATCHDOG_ERROR_PACKETS',0
	.word	21501
	.byte	4,3,35,220,15,13
	.byte	'RX_RECEIVE_ERROR_PACKETS',0
	.word	21631
	.byte	4,3,35,224,15,13
	.byte	'RX_CONTROL_PACKETS_GOOD',0
	.word	21759
	.byte	4,3,35,228,15,13
	.byte	'reserved_7E8',0
	.word	3228
	.byte	4,3,35,232,15,13
	.byte	'TX_LPI_USEC_CNTR',0
	.word	21881
	.byte	4,3,35,236,15,13
	.byte	'TX_LPI_TRAN_CNTR',0
	.word	22003
	.byte	4,3,35,240,15,13
	.byte	'RX_LPI_USEC_CNTR',0
	.word	22125
	.byte	4,3,35,244,15,13
	.byte	'RX_LPI_TRAN_CNTR',0
	.word	22247
	.byte	4,3,35,248,15,13
	.byte	'reserved_7FC',0
	.word	3228
	.byte	4,3,35,252,15,13
	.byte	'MMC_IPC_RX_INTERRUPT_MASK',0
	.word	23033
	.byte	4,3,35,128,16,13
	.byte	'reserved_804',0
	.word	3228
	.byte	4,3,35,132,16,13
	.byte	'MMC_IPC_RX_INTERRUPT',0
	.word	23814
	.byte	4,3,35,136,16,13
	.byte	'reserved_80C',0
	.word	3228
	.byte	4,3,35,140,16,13
	.byte	'RXIPV4_GOOD_PACKETS',0
	.word	23942
	.byte	4,3,35,144,16,13
	.byte	'RXIPV4_HEADER_ERROR_PACKETS',0
	.word	24082
	.byte	4,3,35,148,16,13
	.byte	'RXIPV4_NO_PAYLOAD_PACKETS',0
	.word	24219
	.byte	4,3,35,152,16,13
	.byte	'RXIPV4_FRAGMENTED_PACKETS',0
	.word	24355
	.byte	4,3,35,156,16,13
	.byte	'RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS',0
	.word	24503
	.byte	4,3,35,160,16,13
	.byte	'RXIPV6_GOOD_PACKETS',0
	.word	24631
	.byte	4,3,35,164,16,13
	.byte	'RXIPV6_HEADER_ERROR_PACKETS',0
	.word	24771
	.byte	4,3,35,168,16,13
	.byte	'RXIPV6_NO_PAYLOAD_PACKETS',0
	.word	24908
	.byte	4,3,35,172,16,13
	.byte	'RXUDP_GOOD_PACKETS',0
	.word	25034
	.byte	4,3,35,176,16,13
	.byte	'RXUDP_ERROR_PACKETS',0
	.word	25162
	.byte	4,3,35,180,16,13
	.byte	'RXTCP_GOOD_PACKETS',0
	.word	25288
	.byte	4,3,35,184,16,13
	.byte	'RXTCP_ERROR_PACKETS',0
	.word	25416
	.byte	4,3,35,188,16,13
	.byte	'RXICMP_GOOD_PACKETS',0
	.word	25544
	.byte	4,3,35,192,16,13
	.byte	'RXICMP_ERROR_PACKETS',0
	.word	25674
	.byte	4,3,35,196,16,13
	.byte	'reserved_848',0
	.word	3892
	.byte	8,3,35,200,16,13
	.byte	'RXIPV4_GOOD_OCTETS',0
	.word	25778
	.byte	4,3,35,208,16,13
	.byte	'RXIPV4_HEADER_ERROR_OCTETS',0
	.word	25894
	.byte	4,3,35,212,16,13
	.byte	'RXIPV4_NO_PAYLOAD_OCTETS',0
	.word	26007
	.byte	4,3,35,216,16,13
	.byte	'RXIPV4_FRAGMENTED_OCTETS',0
	.word	26119
	.byte	4,3,35,220,16,13
	.byte	'RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS',0
	.word	26242
	.byte	4,3,35,224,16,13
	.byte	'RXIPV6_GOOD_OCTETS',0
	.word	26346
	.byte	4,3,35,228,16,13
	.byte	'RXIPV6_HEADER_ERROR_OCTETS',0
	.word	26462
	.byte	4,3,35,232,16,13
	.byte	'RXIPV6_NO_PAYLOAD_OCTETS',0
	.word	26575
	.byte	4,3,35,236,16,13
	.byte	'RXUDP_GOOD_OCTETS',0
	.word	26677
	.byte	4,3,35,240,16,13
	.byte	'RXUDP_ERROR_OCTETS',0
	.word	26781
	.byte	4,3,35,244,16,13
	.byte	'RXTCP_GOOD_OCTETS',0
	.word	26883
	.byte	4,3,35,248,16,13
	.byte	'RXTCP_ERROR_OCTETS',0
	.word	26987
	.byte	4,3,35,252,16,13
	.byte	'RXICMP_GOOD_OCTETS',0
	.word	27091
	.byte	4,3,35,128,17,13
	.byte	'RXICMP_ERROR_OCTETS',0
	.word	27197
	.byte	4,3,35,132,17,13
	.byte	'reserved_888',0
	.word	27237
	.byte	248,4,3,35,136,17,13
	.byte	'MAC_TIMESTAMP_CONTROL',0
	.word	27788
	.byte	4,3,35,128,22,13
	.byte	'MAC_SUB_SECOND_INCREMENT',0
	.word	27955
	.byte	4,3,35,132,22,13
	.byte	'MAC_SYSTEM_TIME_SECONDS',0
	.word	28056
	.byte	4,3,35,136,22,13
	.byte	'MAC_SYSTEM_TIME_NANOSECONDS',0
	.word	28185
	.byte	4,3,35,140,22,13
	.byte	'MAC_SYSTEM_TIME_SECONDS_UPDATE',0
	.word	28293
	.byte	4,3,35,144,22,13
	.byte	'MAC_SYSTEM_TIME_NANOSECONDS_UPDATE',0
	.word	28424
	.byte	4,3,35,148,22,13
	.byte	'MAC_TIMESTAMP_ADDEND',0
	.word	28523
	.byte	4,3,35,152,22,13
	.byte	'MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS',0
	.word	28661
	.byte	4,3,35,156,22,13
	.byte	'MAC_TIMESTAMP_STATUS',0
	.word	29086
	.byte	4,3,35,160,22,13
	.byte	'reserved_B24',0
	.word	29126
	.byte	12,3,35,164,22,13
	.byte	'MAC_TX_TIMESTAMP_STATUS_NANOSECONDS',0
	.word	29232
	.byte	4,3,35,176,22,13
	.byte	'MAC_TX_TIMESTAMP_STATUS_SECONDS',0
	.word	29345
	.byte	4,3,35,180,22,13
	.byte	'reserved_B38',0
	.word	8254
	.byte	24,3,35,184,22,13
	.byte	'MAC_TIMESTAMP_INGRESS_ASYM_CORR',0
	.word	29457
	.byte	4,3,35,208,22,13
	.byte	'MAC_TIMESTAMP_EGRESS_ASYM_CORR',0
	.word	29568
	.byte	4,3,35,212,22,13
	.byte	'MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND',0
	.word	29684
	.byte	4,3,35,216,22,13
	.byte	'MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND',0
	.word	29799
	.byte	4,3,35,220,22,13
	.byte	'MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC',0
	.word	29963
	.byte	4,3,35,224,22,13
	.byte	'MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC',0
	.word	30126
	.byte	4,3,35,228,22,13
	.byte	'reserved_B68',0
	.word	3892
	.byte	8,3,35,232,22,13
	.byte	'MAC_PPS_CONTROL',0
	.word	30568
	.byte	4,3,35,240,22,13
	.byte	'reserved_B74',0
	.word	29126
	.byte	12,3,35,244,22,13
	.byte	'MAC_PPS0_TARGET_TIME_SECONDS',0
	.word	30677
	.byte	4,3,35,128,23,13
	.byte	'MAC_PPS0_TARGET_TIME_NANOSECONDS',0
	.word	30810
	.byte	4,3,35,132,23,13
	.byte	'MAC_PPS0_INTERVAL',0
	.word	30909
	.byte	4,3,35,136,23,13
	.byte	'MAC_PPS0_WIDTH',0
	.word	31007
	.byte	4,3,35,140,23,13
	.byte	'reserved_B90',0
	.word	31047
	.byte	112,3,35,144,23,13
	.byte	'MTL_OPERATION_MODE',0
	.word	31274
	.byte	4,3,35,128,24,13
	.byte	'reserved_C04',0
	.word	4106
	.byte	28,3,35,132,24,13
	.byte	'MTL_INTERRUPT_STATUS',0
	.word	31511
	.byte	4,3,35,160,24,13
	.byte	'reserved_C24',0
	.word	29126
	.byte	12,3,35,164,24,13
	.byte	'MTL_RXQ_DMA_MAP0',0
	.word	31932
	.byte	4,3,35,176,24,13
	.byte	'reserved_C34',0
	.word	31972
	.byte	204,1,3,35,180,24,13
	.byte	'MTL_TXQ0',0
	.word	33005
	.byte	28,3,35,128,26,13
	.byte	'reserved_D1C',0
	.word	33010
	.byte	16,3,35,156,26,13
	.byte	'MTL_Q0',0
	.word	33370
	.byte	4,3,35,172,26,13
	.byte	'MTL_RXQ0',0
	.word	34401
	.byte	16,3,35,176,26,13
	.byte	'MTL_TXQ1',0
	.word	36032
	.byte	40,3,35,192,26,13
	.byte	'reserved_D68',0
	.word	3228
	.byte	4,3,35,232,26,13
	.byte	'MTL_Q1',0
	.word	36386
	.byte	4,3,35,236,26,13
	.byte	'MTL_RXQ1',0
	.word	37412
	.byte	16,3,35,240,26,13
	.byte	'MTL_TXQ2',0
	.word	37417
	.byte	40,3,35,128,27,13
	.byte	'reserved_DA8',0
	.word	3228
	.byte	4,3,35,168,27,13
	.byte	'MTL_Q2',0
	.word	37422
	.byte	4,3,35,172,27,13
	.byte	'MTL_RXQ2',0
	.word	37427
	.byte	16,3,35,176,27,13
	.byte	'MTL_TXQ3',0
	.word	37432
	.byte	40,3,35,192,27,13
	.byte	'reserved_DE8',0
	.word	3228
	.byte	4,3,35,232,27,13
	.byte	'MTL_Q3',0
	.word	37437
	.byte	4,3,35,236,27,13
	.byte	'MTL_RXQ3',0
	.word	37442
	.byte	16,3,35,240,27,13
	.byte	'reserved_E00',0
	.word	37447
	.byte	128,4,3,35,128,28,13
	.byte	'DMA_MODE',0
	.word	37686
	.byte	4,3,35,128,32,13
	.byte	'DMA_SYSBUS_MODE',0
	.word	38026
	.byte	4,3,35,132,32,13
	.byte	'DMA_INTERRUPT_STATUS',0
	.word	38278
	.byte	4,3,35,136,32,13
	.byte	'DMA_DEBUG_STATUS0',0
	.word	38517
	.byte	4,3,35,140,32,13
	.byte	'DMA_DEBUG_STATUS1',0
	.word	38651
	.byte	4,3,35,144,32,13
	.byte	'reserved_1014',0
	.word	38691
	.byte	236,1,3,35,148,32,13
	.byte	'DMA_CH',0
	.word	42617
	.byte	128,4,3,35,128,34,13
	.byte	'reserved_1300',0
	.word	42622
	.byte	128,26,3,35,128,38,13
	.byte	'CLC',0
	.word	42713
	.byte	4,3,35,128,64,13
	.byte	'ID',0
	.word	42833
	.byte	4,3,35,132,64,13
	.byte	'GPCTL',0
	.word	43150
	.byte	4,3,35,136,64,13
	.byte	'ACCEN0',0
	.word	43720
	.byte	4,3,35,140,64,13
	.byte	'ACCEN1',0
	.word	43810
	.byte	4,3,35,144,64,13
	.byte	'KRST0',0
	.word	43934
	.byte	4,3,35,148,64,13
	.byte	'KRST1',0
	.word	44039
	.byte	4,3,35,152,64,13
	.byte	'KRSTCLR',0
	.word	44146
	.byte	4,3,35,156,64,13
	.byte	'ACCEND',0
	.word	44930
	.byte	32,3,35,160,64,13
	.byte	'SKEWCTL',0
	.word	45044
	.byte	4,3,35,192,64,13
	.byte	'reserved_2044',0
	.word	45084
	.byte	188,1,3,35,196,64,0,14
	.word	45095
	.byte	3
	.word	53366
	.byte	18,5,163,2,9,1,19
	.byte	'IfxGeth_DuplexMode_halfDuplex',0,0,19
	.byte	'IfxGeth_DuplexMode_fullDuplex',0,1,0
.L123:
	.byte	4
	.byte	'IfxGeth_mac_setDuplexMode',0,3,5,215,11,17,1,1
.L125:
	.byte	5
	.byte	'gethSFR',0,5,215,11,53
	.word	53371
.L127:
	.byte	5
	.byte	'mode',0,5,215,11,81
	.word	53376
.L129:
	.byte	6,0,10
	.byte	'_Ifx_P_OUT_Bits',0,8,145,3,16,4,11
	.byte	'P0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,8,171,5,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53514
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,8,171,2,16,4,11
	.byte	'PS0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,8,251,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53830
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,8,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,8,155,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54401
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,8,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	422
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	422
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	422
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	422
	.byte	5,0,2,35,3,0,12,8,171,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54521
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,8,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	422
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	422
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	422
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	422
	.byte	5,0,2,35,3,0,12,8,187,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54736
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,8,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	422
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	422
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	422
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	422
	.byte	5,0,2,35,3,0,12,8,195,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54951
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,8,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	422
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	422
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	422
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	422
	.byte	5,0,2,35,3,0,12,8,179,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55168
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,8,141,1,16,4,11
	.byte	'P0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,8,163,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55388
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,8,212,3,16,4,11
	.byte	'PD0',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	422
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	422
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	422
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	422
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	422
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	422
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	422
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	422
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	422
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	422
	.byte	2,0,2,35,3,0,12,8,195,5,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55703
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,8,233,3,16,4,11
	.byte	'PD8',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	422
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	422
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	422
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	422
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	422
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	422
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	422
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	422
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	422
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	422
	.byte	2,0,2,35,3,0,12,8,203,5,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56007
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ESR_Bits',0,8,111,16,4,11
	.byte	'EN0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,8,147,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56323
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,8,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,8,187,5,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56654
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,8,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,8,179,5,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57020
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,8,230,2,16,4,11
	.byte	'PS0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	399
	.byte	28,0,2,35,0,0,12,8,139,5,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57384
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,8,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	399
	.byte	24,0,2,35,0,0,12,8,155,5,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57531
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,8,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	399
	.byte	20,0,2,35,0,0,12,8,163,5,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57700
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,8,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	1305
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,8,147,5,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57872
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,8,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1305
	.byte	12,0,2,35,2,0,12,8,219,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58047
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,8,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	399
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	8,0,2,35,3,0,12,8,235,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58221
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,8,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	399
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,12,8,243,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58395
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,8,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	399
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,8,227,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58571
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,8,208,2,16,4,11
	.byte	'PS0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,8,131,5,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58727
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,8,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,8,211,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59060
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,8,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	422
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	422
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,8,203,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59408
	.byte	4,2,35,0,0,15,32
	.word	59688
	.byte	16,7,0,15,56
	.word	422
	.byte	16,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,105,16,4,11
	.byte	'reserved_0',0,4
	.word	399
	.byte	32,0,2,35,0,0,12,8,139,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59746
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,68,16,4,11
	.byte	'EN0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,8,131,4,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59833
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,8,220,5,25,128,2,13
	.byte	'OUT',0
	.word	53790
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	54361
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	54481
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3228
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	54696
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	54911
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	55128
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	55348
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3228
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	55663
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	8254
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	55967
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	56283
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	3892
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	56614
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	29126
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	56980
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	57344
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3892
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	57491
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	57660
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	57832
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	58007
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	58181
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	58355
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	58531
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	58687
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	59020
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	59368
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3892
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	59728
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	59737
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	59793
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	60360
	.byte	4,3,35,252,1,0,14
	.word	60400
	.byte	3
	.word	60970
	.byte	18,7,140,1,9,1,19
	.byte	'IfxPort_OutputMode_none',0,0,19
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,19
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,18,7,126,9,1,19
	.byte	'IfxPort_OutputIdx_general',0,128,1,19
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,19
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,19
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,19
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,19
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,19
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,19
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0
.L111:
	.byte	4
	.byte	'IfxPort_setPinModeOutput',0,3,7,163,5,17,1,1
.L114:
	.byte	5
	.byte	'port',0,7,163,5,49
	.word	60975
.L116:
	.byte	5
	.byte	'pinIndex',0,7,163,5,61
	.word	422
.L118:
	.byte	5
	.byte	'mode',0,7,163,5,90
	.word	60980
.L120:
	.byte	5
	.byte	'index',0,7,163,5,114
	.word	61076
.L122:
	.byte	6,0,18,7,187,1,9,4,19
	.byte	'IfxPort_State_notChanged',0,0,19
	.byte	'IfxPort_State_high',0,1,19
	.byte	'IfxPort_State_low',0,128,128,4,19
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,7,169,5,17,1,1,5
	.byte	'port',0,7,169,5,44
	.word	60975
	.byte	5
	.byte	'pinIndex',0,7,169,5,56
	.word	422
	.byte	5
	.byte	'action',0,7,169,5,80
	.word	61389
	.byte	6,0
.L165:
	.byte	7
	.byte	'unsigned long int',0,4,7,18,5,131,2,9,1,19
	.byte	'IfxGeth_TxDmaChannel_0',0,0,19
	.byte	'IfxGeth_TxDmaChannel_1',0,1,19
	.byte	'IfxGeth_TxDmaChannel_2',0,2,19
	.byte	'IfxGeth_TxDmaChannel_3',0,3,0,20,5,229,3,9,4,11
	.byte	'BUF1AP',0,4
	.word	61570
	.byte	32,0,2,35,0,0,20,5,236,3,9,4,11
	.byte	'TTSL',0,4
	.word	61570
	.byte	32,0,2,35,0,0,20,5,188,3,9,4,11
	.byte	'TTSL',0,4
	.word	61570
	.byte	32,0,2,35,0,0,12,5,234,4,9,4,13
	.byte	'R',0
	.word	61698
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	61723
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	61746
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	61570
	.byte	4,2,35,0,0,20,5,243,3,9,4,11
	.byte	'BUF2AP',0,4
	.word	61570
	.byte	32,0,2,35,0,0,20,5,250,3,9,4,11
	.byte	'TTSH',0,4
	.word	61570
	.byte	32,0,2,35,0,0,20,5,195,3,9,4,11
	.byte	'TTSH',0,4
	.word	61570
	.byte	32,0,2,35,0,0,12,5,244,4,9,4,13
	.byte	'R',0
	.word	61820
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	61845
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	61868
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	61570
	.byte	4,2,35,0,0,20,5,129,4,9,4,11
	.byte	'B1L',0,2
	.word	1305
	.byte	14,2,2,35,0,11
	.byte	'VTIR',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'B2L',0,2
	.word	1305
	.byte	14,2,2,35,2,11
	.byte	'TTSE_TMWD',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'IOC',0,1
	.word	422
	.byte	1,0,2,35,3,0,20,5,140,4,9,4,11
	.byte	'reserved_0',0,4
	.word	61570
	.byte	32,0,2,35,0,0,20,5,202,3,9,4,11
	.byte	'MSS',0,2
	.word	1305
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'IVT',0,2
	.word	1305
	.byte	16,0,2,35,2,0,12,5,254,4,9,4,13
	.byte	'R',0
	.word	61942
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	62031
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	62060
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	61570
	.byte	4,2,35,0,0,20,5,147,4,9,4,11
	.byte	'FL_TPL',0,2
	.word	1305
	.byte	15,1,2,35,0,11
	.byte	'TPL',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'CIC_TPL',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'TSE',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'SLOTNUM_THL',0,1
	.word	422
	.byte	4,1,2,35,2,11
	.byte	'SAIC',0,2
	.word	1305
	.byte	3,6,2,35,2,11
	.byte	'CPC',0,1
	.word	422
	.byte	2,4,2,35,3,11
	.byte	'LD',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'FD',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'CTXT',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	422
	.byte	1,0,2,35,3,0,20,5,164,4,9,4,11
	.byte	'IHE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'DB',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'UF',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'ED',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'CC',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'EC',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'LC',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'NC',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'LOC',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'PCE',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'FF',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'JT',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'ES',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'TTSS',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1305
	.byte	10,4,2,35,2,11
	.byte	'LD',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'FD',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'CTXT',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	422
	.byte	1,0,2,35,3,0,20,5,211,3,9,4,11
	.byte	'VT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'VLTV',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'IVLTV',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'IVTIR',0,1
	.word	422
	.byte	2,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	422
	.byte	3,1,2,35,2,11
	.byte	'CDE',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	2,6,2,35,3,11
	.byte	'TCMSSV',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'OSTC',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	2,2,2,35,3,11
	.byte	'CTXT',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,5,136,5,9,4,13
	.byte	'R',0
	.word	62171
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	62358
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	62671
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	61570
	.byte	4,2,35,0,0,20,5,160,5,9,16,13
	.byte	'TDES0',0
	.word	61769
	.byte	4,2,35,0,13
	.byte	'TDES1',0
	.word	61891
	.byte	4,2,35,4,13
	.byte	'TDES2',0
	.word	62120
	.byte	4,2,35,8,13
	.byte	'TDES3',0
	.word	62891
	.byte	4,2,35,12,0,15,128,1
	.word	62942
	.byte	16,7,0,14
	.word	63009
	.byte	12,5,181,5,9,128,1,13
	.byte	'descr',0
	.word	63019
	.byte	128,1,2,35,0,0,3
	.word	63024
	.byte	14
	.word	62942
	.byte	3
	.word	63053
	.byte	20,9,192,3,9,20,13
	.byte	'channelId',0
	.word	61591
	.byte	1,2,35,0,13
	.byte	'txDescrList',0
	.word	63048
	.byte	4,2,35,4,13
	.byte	'txDescrPtr',0
	.word	63058
	.byte	4,2,35,8,13
	.byte	'txCount',0
	.word	61570
	.byte	4,2,35,12,13
	.byte	'txBuf1Size',0
	.word	1305
	.byte	2,2,35,16,0,15,80
	.word	63063
	.byte	16,3,0,18,5,223,1,9,1,19
	.byte	'IfxGeth_RxDmaChannel_0',0,0,19
	.byte	'IfxGeth_RxDmaChannel_1',0,1,19
	.byte	'IfxGeth_RxDmaChannel_2',0,2,19
	.byte	'IfxGeth_RxDmaChannel_3',0,3,0,20,5,217,2,9,4,11
	.byte	'BUF1AP',0,4
	.word	61570
	.byte	32,0,2,35,0,0,20,5,224,2,9,4,11
	.byte	'OVT',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'IVT',0,2
	.word	1305
	.byte	16,0,2,35,2,0,20,5,186,2,9,4,11
	.byte	'RTSL',0,4
	.word	61570
	.byte	32,0,2,35,0,0,12,5,194,4,9,4,13
	.byte	'R',0
	.word	63283
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	63308
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	63345
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	61570
	.byte	4,2,35,0,0,20,5,232,2,9,4,11
	.byte	'reserved_0',0,4
	.word	61570
	.byte	32,0,2,35,0,0,20,5,239,2,9,4,11
	.byte	'PT',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'IPHE',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'IP4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'IP6',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'IPCB',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'IPCE',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'PMT',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'PFT',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'PV',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'TSA',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'TD',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'OPC',0,2
	.word	1305
	.byte	16,0,2,35,2,0,20,5,193,2,9,4,11
	.byte	'RTSH',0,4
	.word	61570
	.byte	32,0,2,35,0,0,12,5,204,4,9,4,13
	.byte	'R',0
	.word	63419
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	63448
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	63635
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	61570
	.byte	4,2,35,0,0,20,5,129,3,9,4,11
	.byte	'BUF2AP',0,4
	.word	61570
	.byte	32,0,2,35,0,0,20,5,136,3,9,4,11
	.byte	'HL',0,2
	.word	1305
	.byte	10,6,2,35,0,11
	.byte	'ARPNR',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	422
	.byte	3,2,2,35,1,11
	.byte	'ITS',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'OTS',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'SAF',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'DAF',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'HF',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'MADRM',0,2
	.word	1305
	.byte	8,5,2,35,2,11
	.byte	'L3FM',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'L4FM',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'L3L4FM',0,1
	.word	422
	.byte	3,0,2,35,3,0,20,5,200,2,9,4,11
	.byte	'reserved_0',0,4
	.word	61570
	.byte	32,0,2,35,0,0,12,5,214,4,9,4,13
	.byte	'R',0
	.word	63709
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	63734
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	63936
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	61570
	.byte	4,2,35,0,0,20,5,154,3,9,4,11
	.byte	'reserved_0',0,4
	.word	61570
	.byte	24,8,2,35,0,11
	.byte	'BUF1V',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'BUF2V',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'reserved_27',0,1
	.word	422
	.byte	4,2,2,35,3,11
	.byte	'IOC',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	422
	.byte	1,0,2,35,3,0,20,5,166,3,9,4,11
	.byte	'PL',0,2
	.word	1305
	.byte	15,1,2,35,0,11
	.byte	'ES',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'LT',0,1
	.word	422
	.byte	3,5,2,35,2,11
	.byte	'DE',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'RE',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'OE',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'RWT',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'GP',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'CE',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'RS0V',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'RS1V',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'RS2V',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'LD',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'FD',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'CTXT',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	422
	.byte	1,0,2,35,3,0,20,5,207,2,9,4,11
	.byte	'reserved_0',0,4
	.word	61570
	.byte	29,3,2,35,0,11
	.byte	'DE',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'CTXT',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	422
	.byte	1,0,2,35,3,0,12,5,224,4,9,4,13
	.byte	'R',0
	.word	64016
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	64132
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	64373
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	61570
	.byte	4,2,35,0,0,20,5,150,5,9,16,13
	.byte	'RDES0',0
	.word	63368
	.byte	4,2,35,0,13
	.byte	'RDES1',0
	.word	63658
	.byte	4,2,35,4,13
	.byte	'RDES2',0
	.word	63965
	.byte	4,2,35,8,13
	.byte	'RDES3',0
	.word	64447
	.byte	4,2,35,12,0,15,128,1
	.word	64498
	.byte	16,7,0,14
	.word	64565
	.byte	12,5,174,5,9,128,1,13
	.byte	'descr',0
	.word	64575
	.byte	128,1,2,35,0,0,3
	.word	64580
	.byte	14
	.word	64498
	.byte	3
	.word	64609
	.byte	20,9,182,3,9,16,13
	.byte	'channelId',0
	.word	63176
	.byte	1,2,35,0,13
	.byte	'rxDescrList',0
	.word	64604
	.byte	4,2,35,4,13
	.byte	'rxDescrPtr',0
	.word	64614
	.byte	4,2,35,8,13
	.byte	'rxCount',0
	.word	61570
	.byte	4,2,35,12,0,15,64
	.word	64619
	.byte	16,3,0,20,9,207,3,9,156,1,13
	.byte	'gethSFR',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'numOfTxChannels',0
	.word	61570
	.byte	4,2,35,4,13
	.byte	'numOfRxChannels',0
	.word	61570
	.byte	4,2,35,8,13
	.byte	'txChannel',0
	.word	63167
	.byte	80,2,35,12,13
	.byte	'rxChannel',0
	.word	64703
	.byte	64,2,35,92,0
.L101:
	.byte	3
	.word	64712
.L142:
	.byte	8
	.byte	'IfxGeth_Eth_waitTransmitBuffer',0,3,9,215,8,18
	.word	313
	.byte	1,1
.L144:
	.byte	5
	.byte	'geth',0,9,215,8,62
	.word	64825
.L146:
	.byte	5
	.byte	'channelId',0,9,215,8,89
	.word	61591
.L148:
	.byte	6,0,8
	.byte	'IfxGeth_Eth_getActualRxDescriptor',0,3,9,185,8,38
	.word	64614
	.byte	1,1,5
	.byte	'geth',0,9,185,8,85
	.word	64825
	.byte	5
	.byte	'channelId',0,9,185,8,112
	.word	63176
	.byte	6,0
.L154:
	.byte	8
	.byte	'IfxGeth_Eth_getActualTxDescriptor',0,3,9,191,8,38
	.word	63058
	.byte	1,1
.L156:
	.byte	5
	.byte	'geth',0,9,191,8,85
	.word	64825
.L158:
	.byte	5
	.byte	'channelId',0,9,191,8,112
	.word	61591
.L160:
	.byte	6,0
.L174:
	.byte	8
	.byte	'IfxGeth_Eth_isRxDataAvailable',0,3,9,209,8,20
	.word	422
	.byte	1,1
.L177:
	.byte	5
	.byte	'geth',0,9,209,8,63
	.word	64825
.L179:
	.byte	5
	.byte	'channelId',0,9,209,8,90
	.word	63176
.L181:
	.byte	21,6,0,0,8
	.byte	'IfxGeth_get',0,3,10,180,1,25
	.word	64825
	.byte	1,1,6,0,22
	.word	415
	.byte	23
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,24
	.word	65175
	.byte	0,14
	.word	399
	.byte	3
	.word	399
	.byte	25
	.byte	'__cmpswapw',0
	.word	65217
	.byte	1,1,1,1,26
	.byte	'p',0
	.word	65222
	.byte	26
	.byte	'value',0
	.word	399
	.byte	26
	.byte	'compare',0
	.word	399
	.byte	0
.L91:
	.byte	7
	.byte	'char',0,1,6,7
	.byte	'char',0,1,6,22
	.word	65287
	.byte	3
	.word	65295
	.byte	27
	.byte	'Ifx_Lwip_printf',0,11,123,6
	.word	65279
	.byte	1,1,1,1,5
	.byte	's',0,11,123,34
	.word	65300
	.byte	28,11,123,37,0,27
	.byte	'lwip_htons',0,12,96,7
	.word	1305
	.byte	1,1,1,1,5
	.byte	'x',0,12,96,24
	.word	1305
	.byte	0,10
	.byte	'pbuf',0,13,186,1,8,16,13
	.byte	'next',0
	.word	.L135-.L56
	.byte	4,2,35,0,13
	.byte	'payload',0
	.word	313
	.byte	4,2,35,4,13
	.byte	'tot_len',0
	.word	1305
	.byte	2,2,35,8,13
	.byte	'len',0
	.word	1305
	.byte	2,2,35,10,13
	.byte	'type_internal',0
	.word	422
	.byte	1,2,35,12,13
	.byte	'flags',0
	.word	422
	.byte	1,2,35,13,13
	.byte	'ref',0
	.word	422
	.byte	1,2,35,14,13
	.byte	'if_idx',0
	.word	422
	.byte	1,2,35,15,0
.L135:
	.byte	3
	.word	65382
	.byte	18,13,89,9,1,19
	.byte	'PBUF_RAW',0,0,19
	.byte	'PBUF_RAW_TX',0,0,19
	.byte	'PBUF_LINK',0,16,19
	.byte	'PBUF_IP',0,36,19
	.byte	'PBUF_TRANSPORT',0,56,0,18,13,145,1,9,2,19
	.byte	'PBUF_ROM',0,1,19
	.byte	'PBUF_REF',0,193,0,19
	.byte	'PBUF_POOL',0,130,3,19
	.byte	'PBUF_RAM',0,128,5,0,27
	.byte	'pbuf_alloc',0,13,147,2,14
	.word	65522
	.byte	1,1,1,1,5
	.byte	'l',0,13,147,2,36
	.word	65527
	.byte	5
	.byte	'length',0,13,147,2,45
	.word	1305
	.byte	5
	.byte	'type',0,13,147,2,63
	.word	65597
	.byte	0,7
	.byte	'short int',0,2,5,27
	.byte	'pbuf_header',0,13,158,2,6
	.word	422
	.byte	1,1,1,1,5
	.byte	'p',0,13,158,2,31
	.word	65522
	.byte	5
	.byte	'header_size',0,13,158,2,40
	.word	65718
	.byte	0,27
	.byte	'pbuf_free',0,13,165,2,6
	.word	422
	.byte	1,1,1,1,5
	.byte	'p',0,13,165,2,29
	.word	65522
	.byte	0,10
	.byte	'ip4_addr',0,16,51,8,4,13
	.byte	'addr',0
	.word	61570
	.byte	4,2,35,0,0,29
	.word	65279
	.byte	1,1,24
	.word	65522
	.byte	24
	.word	.L246-.L56
	.byte	0,3
	.word	65853
	.byte	30
	.byte	'netif_input_fn',0,15,178,1,17
	.word	65871
	.byte	22
	.word	65824
	.byte	3
	.word	65900
	.byte	29
	.word	65279
	.byte	1,1,24
	.word	.L246-.L56
	.byte	24
	.word	65522
	.byte	24
	.word	65905
	.byte	0,3
	.word	65910
	.byte	30
	.byte	'netif_output_fn',0,15,189,1,17
	.word	65933
	.byte	29
	.word	65279
	.byte	1,1,24
	.word	.L246-.L56
	.byte	24
	.word	65522
	.byte	0,3
	.word	65963
	.byte	30
	.byte	'netif_linkoutput_fn',0,15,212,1,17
	.word	65981
	.byte	15,6
	.word	422
	.byte	16,5,0,15,2
	.word	65287
	.byte	16,1,0,10
	.byte	'netif',0,15,132,2,8,48,13
	.byte	'next',0
	.word	.L246-.L56
	.byte	4,2,35,0,13
	.byte	'ip_addr',0
	.word	65824
	.byte	4,2,35,4,13
	.byte	'netmask',0
	.word	65824
	.byte	4,2,35,8,13
	.byte	'gw',0
	.word	65824
	.byte	4,2,35,12,13
	.byte	'input',0
	.word	65876
	.byte	4,2,35,16,13
	.byte	'output',0
	.word	65938
	.byte	4,2,35,20,13
	.byte	'linkoutput',0
	.word	65986
	.byte	4,2,35,24,13
	.byte	'state',0
	.word	313
	.byte	4,2,35,28,13
	.byte	'mtu',0
	.word	1305
	.byte	2,2,35,32,13
	.byte	'hwaddr',0
	.word	66015
	.byte	6,2,35,34,13
	.byte	'hwaddr_len',0
	.word	422
	.byte	1,2,35,40,13
	.byte	'flags',0
	.word	422
	.byte	1,2,35,41,13
	.byte	'name',0
	.word	66024
	.byte	2,2,35,42,13
	.byte	'num',0
	.word	422
	.byte	1,2,35,44,13
	.byte	'rs_count',0
	.word	422
	.byte	1,2,35,45,0
.L246:
	.byte	3
	.word	66033
	.byte	22
	.word	65824
	.byte	3
	.word	66286
	.byte	27
	.byte	'etharp_output',0,14,81,7
	.word	65279
	.byte	1,1,1,1,5
	.byte	'netif',0,14,81,35
	.word	66281
	.byte	5
	.byte	'q',0,14,81,55
	.word	65522
	.byte	5
	.byte	'ipaddr',0,14,81,76
	.word	66291
	.byte	0,3
	.word	65853
	.byte	3
	.word	65910
	.byte	3
	.word	65963
	.byte	31
	.word	175
	.byte	32
	.word	201
	.byte	6,0,31
	.word	236
	.byte	32
	.word	268
	.byte	6,0,31
	.word	318
	.byte	32
	.word	337
	.byte	6,0,31
	.word	353
	.byte	32
	.word	368
	.byte	32
	.word	382
	.byte	6,0,31
	.word	778
	.byte	32
	.word	806
	.byte	6,0,31
	.word	53447
	.byte	32
	.word	53481
	.byte	32
	.word	53498
	.byte	6,0,18,5,127,9,1,19
	.byte	'IfxGeth_LineSpeed_10Mbps',0,0,19
	.byte	'IfxGeth_LineSpeed_100Mbps',0,1,19
	.byte	'IfxGeth_LineSpeed_1000Mbps',0,2,19
	.byte	'IfxGeth_LineSpeed_2500Mbps',0,3,0,33
	.byte	'IfxGeth_mac_setLineSpeed',0,5,159,6,17,1,1,1,1,5
	.byte	'gethSFR',0,5,159,6,52
	.word	53371
	.byte	5
	.byte	'speed',0,5,159,6,79
	.word	66459
	.byte	0,33
	.byte	'IfxGeth_enableModule',0,5,222,6,17,1,1,1,1,5
	.byte	'gethSFR',0,5,222,6,48
	.word	53371
	.byte	0,31
	.word	61293
	.byte	32
	.word	61326
	.byte	32
	.word	61340
	.byte	32
	.word	61358
	.byte	32
	.word	61372
	.byte	6,0,31
	.word	61492
	.byte	32
	.word	61520
	.byte	32
	.word	61534
	.byte	32
	.word	61552
	.byte	6,0,18,7,101,9,1,19
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,19
	.byte	'IfxPort_Mode_inputPullDown',0,8,19
	.byte	'IfxPort_Mode_inputPullUp',0,16,19
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,19
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,19
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,19
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,19
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,19
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,19
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,19
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,19
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,19
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,19
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,19
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,19
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,19
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,19
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,19
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,33
	.byte	'IfxPort_setPinMode',0,7,183,3,17,1,1,1,1,5
	.byte	'port',0,7,183,3,43
	.word	60975
	.byte	5
	.byte	'pinIndex',0,7,183,3,55
	.word	422
	.byte	5
	.byte	'mode',0,7,183,3,78
	.word	66742
	.byte	0,31
	.word	64830
	.byte	32
	.word	64873
	.byte	32
	.word	64887
	.byte	6,0,27
	.byte	'IfxGeth_Eth_getReceiveBuffer',0,9,179,4,18
	.word	313
	.byte	1,1,1,1,5
	.byte	'geth',0,9,179,4,60
	.word	64825
	.byte	5
	.byte	'channelId',0,9,179,4,87
	.word	63176
	.byte	0,27
	.byte	'IfxGeth_Eth_getTransmitBuffer',0,9,187,4,18
	.word	313
	.byte	1,1,1,1,5
	.byte	'geth',0,9,187,4,61
	.word	64825
	.byte	5
	.byte	'channelId',0,9,187,4,88
	.word	61591
	.byte	0,18,5,156,1,9,1,19
	.byte	'IfxGeth_PhyInterfaceMode_mii',0,0,19
	.byte	'IfxGeth_PhyInterfaceMode_rgmii',0,1,19
	.byte	'IfxGeth_PhyInterfaceMode_rmii',0,4,0,20,7,246,1,9,8,13
	.byte	'port',0
	.word	60975
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	422
	.byte	1,2,35,4,0,18,18,127,9,1,19
	.byte	'Ifx_RxSel_a',0,0,19
	.byte	'Ifx_RxSel_b',0,1,19
	.byte	'Ifx_RxSel_c',0,2,19
	.byte	'Ifx_RxSel_d',0,3,19
	.byte	'Ifx_RxSel_e',0,4,19
	.byte	'Ifx_RxSel_f',0,5,19
	.byte	'Ifx_RxSel_g',0,6,19
	.byte	'Ifx_RxSel_h',0,7,0,20,17,64,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	67916
	.byte	3
	.word	67967
	.byte	20,17,96,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	67977
	.byte	3
	.word	68028
	.byte	20,17,120,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	68038
	.byte	3
	.word	68089
	.byte	20,17,144,1,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'inSelect',0
	.word	67798
	.byte	1,2,35,12,13
	.byte	'outSelect',0
	.word	61076
	.byte	1,2,35,13,0,22
	.word	68099
	.byte	3
	.word	68172
	.byte	20,17,153,1,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	61076
	.byte	1,2,35,12,0,22
	.word	68182
	.byte	3
	.word	68234
	.byte	20,17,136,1,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	61076
	.byte	1,2,35,12,0,22
	.word	68244
	.byte	3
	.word	68296
	.byte	20,17,169,1,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	61076
	.byte	1,2,35,12,0,22
	.word	68306
	.byte	3
	.word	68358
	.byte	20,9,199,2,9,36,13
	.byte	'crsDiv',0
	.word	67972
	.byte	4,2,35,0,13
	.byte	'refClk',0
	.word	68033
	.byte	4,2,35,4,13
	.byte	'rxd0',0
	.word	68094
	.byte	4,2,35,8,13
	.byte	'rxd1',0
	.word	68094
	.byte	4,2,35,12,13
	.byte	'mdio',0
	.word	68177
	.byte	4,2,35,16,13
	.byte	'txd0',0
	.word	68239
	.byte	4,2,35,20,13
	.byte	'mdc',0
	.word	68301
	.byte	4,2,35,24,13
	.byte	'txd1',0
	.word	68239
	.byte	4,2,35,28,13
	.byte	'txEn',0
	.word	68363
	.byte	4,2,35,32,0,22
	.word	68368
	.byte	3
	.word	68504
	.byte	20,17,161,1,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	61076
	.byte	1,2,35,12,0,22
	.word	68514
	.byte	3
	.word	68566
	.byte	20,17,185,1,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	61076
	.byte	1,2,35,12,0,22
	.word	68576
	.byte	3
	.word	68628
	.byte	20,17,104,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	68638
	.byte	3
	.word	68689
	.byte	20,17,80,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	68699
	.byte	3
	.word	68750
	.byte	20,17,88,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	68760
	.byte	3
	.word	68811
	.byte	20,9,178,2,9,60,13
	.byte	'txClk',0
	.word	68571
	.byte	4,2,35,0,13
	.byte	'txd0',0
	.word	68239
	.byte	4,2,35,4,13
	.byte	'txd1',0
	.word	68239
	.byte	4,2,35,8,13
	.byte	'txd2',0
	.word	68239
	.byte	4,2,35,12,13
	.byte	'txd3',0
	.word	68239
	.byte	4,2,35,16,13
	.byte	'txCtl',0
	.word	68633
	.byte	4,2,35,20,13
	.byte	'rxClk',0
	.word	68694
	.byte	4,2,35,24,13
	.byte	'rxd0',0
	.word	68094
	.byte	4,2,35,28,13
	.byte	'rxd1',0
	.word	68094
	.byte	4,2,35,32,13
	.byte	'rxd2',0
	.word	68094
	.byte	4,2,35,36,13
	.byte	'rxd3',0
	.word	68094
	.byte	4,2,35,40,13
	.byte	'rxCtl',0
	.word	68755
	.byte	4,2,35,44,13
	.byte	'mdc',0
	.word	68301
	.byte	4,2,35,48,13
	.byte	'mdio',0
	.word	68177
	.byte	4,2,35,52,13
	.byte	'grefClk',0
	.word	68816
	.byte	4,2,35,56,0,22
	.word	68821
	.byte	3
	.word	69044
	.byte	20,17,56,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	69054
	.byte	3
	.word	69105
	.byte	20,17,128,1,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	69115
	.byte	3
	.word	69167
	.byte	20,17,112,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	69177
	.byte	3
	.word	69228
	.byte	20,17,72,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	69238
	.byte	3
	.word	69289
	.byte	20,17,193,1,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	67798
	.byte	1,2,35,12,0,22
	.word	69299
	.byte	3
	.word	69351
	.byte	20,17,177,1,15,16,13
	.byte	'module',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	67759
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	61076
	.byte	1,2,35,12,0,22
	.word	69361
	.byte	3
	.word	69413
	.byte	20,9,145,2,9,72,13
	.byte	'crs',0
	.word	69110
	.byte	4,2,35,0,13
	.byte	'col',0
	.word	69172
	.byte	4,2,35,4,13
	.byte	'txClk',0
	.word	69233
	.byte	4,2,35,8,13
	.byte	'rxClk',0
	.word	68694
	.byte	4,2,35,12,13
	.byte	'rxDv',0
	.word	69294
	.byte	4,2,35,16,13
	.byte	'rxEr',0
	.word	69356
	.byte	4,2,35,20,13
	.byte	'rxd0',0
	.word	68094
	.byte	4,2,35,24,13
	.byte	'rxd1',0
	.word	68094
	.byte	4,2,35,28,13
	.byte	'rxd2',0
	.word	68094
	.byte	4,2,35,32,13
	.byte	'rxd3',0
	.word	68094
	.byte	4,2,35,36,13
	.byte	'txEn',0
	.word	68363
	.byte	4,2,35,40,13
	.byte	'txEr',0
	.word	69418
	.byte	4,2,35,44,13
	.byte	'txd0',0
	.word	68239
	.byte	4,2,35,48,13
	.byte	'txd1',0
	.word	68239
	.byte	4,2,35,52,13
	.byte	'txd2',0
	.word	68239
	.byte	4,2,35,56,13
	.byte	'txd3',0
	.word	68239
	.byte	4,2,35,60,13
	.byte	'mdc',0
	.word	68301
	.byte	4,2,35,64,13
	.byte	'mdio',0
	.word	68177
	.byte	4,2,35,68,0,22
	.word	69423
	.byte	3
	.word	69681
	.byte	20,9,173,3,9,12,13
	.byte	'rmiiPins',0
	.word	68509
	.byte	4,2,35,0,13
	.byte	'rgmiiPins',0
	.word	69049
	.byte	4,2,35,4,13
	.byte	'miiPins',0
	.word	69686
	.byte	4,2,35,8,0,18,5,172,2,9,1,19
	.byte	'IfxGeth_LoopbackMode_disable',0,0,19
	.byte	'IfxGeth_LoopbackMode_enable',0,1,0,15,6
	.word	422
	.byte	16,5,0,20,9,149,3,9,12,13
	.byte	'duplexMode',0
	.word	53376
	.byte	1,2,35,0,13
	.byte	'lineSpeed',0
	.word	66459
	.byte	1,2,35,1,13
	.byte	'loopbackMode',0
	.word	69752
	.byte	1,2,35,2,13
	.byte	'macAddress',0
	.word	69820
	.byte	6,2,35,3,13
	.byte	'maxPacketSize',0
	.word	1305
	.byte	2,2,35,10,0,18,5,152,2,9,1,19
	.byte	'IfxGeth_TxSchedulingAlgorithm_wrr',0,0,19
	.byte	'IfxGeth_TxSchedulingAlgorithm_sp',0,3,0,18,5,215,1,9,1,19
	.byte	'IfxGeth_RxArbitrationAlgorithm_sp',0,0,19
	.byte	'IfxGeth_RxArbitrationAlgorithm_wsp',0,1,0,18,5,176,1,9,1,19
	.byte	'IfxGeth_QueueSize_256Bytes',0,0,19
	.byte	'IfxGeth_QueueSize_512Bytes',0,1,19
	.byte	'IfxGeth_QueueSize_768Bytes',0,2,19
	.byte	'IfxGeth_QueueSize_1024Bytes',0,3,19
	.byte	'IfxGeth_QueueSize_1280Bytes',0,4,19
	.byte	'IfxGeth_QueueSize_1536Bytes',0,5,19
	.byte	'IfxGeth_QueueSize_1792Bytes',0,6,19
	.byte	'IfxGeth_QueueSize_2048Bytes',0,7,19
	.byte	'IfxGeth_QueueSize_2304Bytes',0,8,19
	.byte	'IfxGeth_QueueSize_2560Bytes',0,9,19
	.byte	'IfxGeth_QueueSize_2816Bytes',0,10,19
	.byte	'IfxGeth_QueueSize_3072Bytes',0,11,19
	.byte	'IfxGeth_QueueSize_3328Bytes',0,12,19
	.byte	'IfxGeth_QueueSize_3584Bytes',0,13,19
	.byte	'IfxGeth_QueueSize_3840Bytes',0,14,19
	.byte	'IfxGeth_QueueSize_4096Bytes',0,15,19
	.byte	'IfxGeth_QueueSize_4352Bytes',0,16,19
	.byte	'IfxGeth_QueueSize_4608Bytes',0,17,19
	.byte	'IfxGeth_QueueSize_4864Bytes',0,18,19
	.byte	'IfxGeth_QueueSize_5120Bytes',0,19,19
	.byte	'IfxGeth_QueueSize_5376Bytes',0,20,19
	.byte	'IfxGeth_QueueSize_5632Bytes',0,21,19
	.byte	'IfxGeth_QueueSize_5888Bytes',0,22,19
	.byte	'IfxGeth_QueueSize_6144Bytes',0,23,19
	.byte	'IfxGeth_QueueSize_6400Bytes',0,24,19
	.byte	'IfxGeth_QueueSize_6656Bytes',0,25,19
	.byte	'IfxGeth_QueueSize_6912Bytes',0,26,19
	.byte	'IfxGeth_QueueSize_7168Bytes',0,27,19
	.byte	'IfxGeth_QueueSize_7424Bytes',0,28,19
	.byte	'IfxGeth_QueueSize_7680Bytes',0,29,19
	.byte	'IfxGeth_QueueSize_7936Bytes',0,30,19
	.byte	'IfxGeth_QueueSize_8192Bytes',0,31,0,20,9,249,2,9,4,13
	.byte	'storeAndForward',0
	.word	422
	.byte	1,2,35,0,13
	.byte	'txQueueSize',0
	.word	70098
	.byte	1,2,35,1,13
	.byte	'txQueueUnderflowInterruptEnabled',0
	.word	422
	.byte	1,2,35,2,0,15,16
	.word	71062
	.byte	16,3,0,20,9,225,2,9,8,13
	.byte	'storeAndForward',0
	.word	422
	.byte	1,2,35,0,13
	.byte	'rxQueueSize',0
	.word	70098
	.byte	1,2,35,1,13
	.byte	'forwardErrorPacket',0
	.word	422
	.byte	1,2,35,2,13
	.byte	'forwardUndersizedGoodPacket',0
	.word	422
	.byte	1,2,35,3,13
	.byte	'daBasedDmaChannelEnabled',0
	.word	422
	.byte	1,2,35,4,13
	.byte	'rxDmaChannelMap',0
	.word	63176
	.byte	1,2,35,5,13
	.byte	'rxQueueOverflowInterruptEnabled',0
	.word	422
	.byte	1,2,35,6,0,15,32
	.word	71166
	.byte	16,3,0,18,5,243,1,9,1,19
	.byte	'IfxGeth_ServiceRequest_0',0,0,19
	.byte	'IfxGeth_ServiceRequest_1',0,1,19
	.byte	'IfxGeth_ServiceRequest_2',0,2,19
	.byte	'IfxGeth_ServiceRequest_3',0,3,19
	.byte	'IfxGeth_ServiceRequest_4',0,4,19
	.byte	'IfxGeth_ServiceRequest_5',0,5,19
	.byte	'IfxGeth_ServiceRequest_6',0,6,19
	.byte	'IfxGeth_ServiceRequest_7',0,7,19
	.byte	'IfxGeth_ServiceRequest_8',0,8,19
	.byte	'IfxGeth_ServiceRequest_9',0,9,0,18,19,66,9,1,19
	.byte	'IfxSrc_Tos_cpu0',0,0,19
	.byte	'IfxSrc_Tos_dma',0,1,19
	.byte	'IfxSrc_Tos_cpu1',0,2,19
	.byte	'IfxSrc_Tos_cpu2',0,3,19
	.byte	'IfxSrc_Tos_cpu3',0,4,19
	.byte	'IfxSrc_Tos_cpu4',0,5,19
	.byte	'IfxSrc_Tos_cpu5',0,6,0,20,9,169,2,9,6,13
	.byte	'serviceRequest',0
	.word	71393
	.byte	1,2,35,0,13
	.byte	'priority',0
	.word	1305
	.byte	2,2,35,2,13
	.byte	'provider',0
	.word	71670
	.byte	1,2,35,4,0,20,9,160,3,9,68,13
	.byte	'numOfTxQueues',0
	.word	61570
	.byte	4,2,35,0,13
	.byte	'txSchedulingAlgorithm',0
	.word	69940
	.byte	1,2,35,4,13
	.byte	'numOfRxQueues',0
	.word	61570
	.byte	4,2,35,6,13
	.byte	'rxArbitrationAlgorithm',0
	.word	70018
	.byte	1,2,35,10,13
	.byte	'txQueue',0
	.word	71157
	.byte	16,2,35,12,13
	.byte	'rxQueue',0
	.word	71384
	.byte	32,2,35,28,13
	.byte	'interrupt',0
	.word	71801
	.byte	6,2,35,60,0,18,5,85,9,1,19
	.byte	'IfxGeth_DmaBurstLength_0',0,0,19
	.byte	'IfxGeth_DmaBurstLength_1',0,1,19
	.byte	'IfxGeth_DmaBurstLength_2',0,2,19
	.byte	'IfxGeth_DmaBurstLength_4',0,4,19
	.byte	'IfxGeth_DmaBurstLength_8',0,8,19
	.byte	'IfxGeth_DmaBurstLength_16',0,16,19
	.byte	'IfxGeth_DmaBurstLength_32',0,32,0,3
	.word	61570
	.byte	20,9,238,2,9,16,13
	.byte	'channelId',0
	.word	61591
	.byte	1,2,35,0,13
	.byte	'maxBurstLength',0
	.word	72037
	.byte	1,2,35,1,13
	.byte	'txDescrList',0
	.word	63048
	.byte	4,2,35,4,13
	.byte	'txBuffer1StartAddress',0
	.word	72234
	.byte	4,2,35,8,13
	.byte	'txBuffer1Size',0
	.word	1305
	.byte	2,2,35,12,0,15,64
	.word	72239
	.byte	16,3,0,20,9,214,2,9,16,13
	.byte	'channelId',0
	.word	63176
	.byte	1,2,35,0,13
	.byte	'maxBurstLength',0
	.word	72037
	.byte	1,2,35,1,13
	.byte	'rxDescrList',0
	.word	64604
	.byte	4,2,35,4,13
	.byte	'rxBuffer1StartAddress',0
	.word	72234
	.byte	4,2,35,8,13
	.byte	'rxBuffer1Size',0
	.word	1305
	.byte	2,2,35,12,0,15,64
	.word	72373
	.byte	16,3,0,18,5,98,9,1,19
	.byte	'IfxGeth_DmaChannel_0',0,0,19
	.byte	'IfxGeth_DmaChannel_1',0,1,19
	.byte	'IfxGeth_DmaChannel_2',0,2,19
	.byte	'IfxGeth_DmaChannel_3',0,3,0,20,9,136,2,9,6,13
	.byte	'channelId',0
	.word	72507
	.byte	1,2,35,0,13
	.byte	'priority',0
	.word	1305
	.byte	2,2,35,2,13
	.byte	'provider',0
	.word	71670
	.byte	1,2,35,4,0,15,24
	.word	72605
	.byte	16,3,0,20,9,134,3,9,188,1,13
	.byte	'numOfTxChannels',0
	.word	61570
	.byte	4,2,35,0,13
	.byte	'numOfRxChannels',0
	.word	61570
	.byte	4,2,35,4,13
	.byte	'addressAlignedBeatsEnabled',0
	.word	422
	.byte	1,2,35,8,13
	.byte	'fixedBurstEnabled',0
	.word	422
	.byte	1,2,35,9,13
	.byte	'mixedBurstEnabled',0
	.word	422
	.byte	1,2,35,10,13
	.byte	'txChannel',0
	.word	72364
	.byte	64,2,35,12,13
	.byte	'rxChannel',0
	.word	72498
	.byte	64,2,35,76,13
	.byte	'txInterrupt',0
	.word	72667
	.byte	24,3,35,140,1,13
	.byte	'rxInterrupt',0
	.word	72667
	.byte	24,3,35,164,1,0
.L107:
	.byte	20,9,218,3,9,160,2,13
	.byte	'gethSFR',0
	.word	53371
	.byte	4,2,35,0,13
	.byte	'phyInterfaceMode',0
	.word	67656
	.byte	1,2,35,4,13
	.byte	'pins',0
	.word	69691
	.byte	12,2,35,8,13
	.byte	'mac',0
	.word	69829
	.byte	12,2,35,20,13
	.byte	'mtl',0
	.word	71868
	.byte	68,2,35,32,13
	.byte	'dma',0
	.word	72676
	.byte	188,1,2,35,100,0,3
	.word	72906
	.byte	33
	.byte	'IfxGeth_Eth_initModule',0,9,203,4,17,1,1,1,1,5
	.byte	'geth',0,9,203,4,53
	.word	64825
	.byte	5
	.byte	'config',0,9,203,4,79
	.word	73011
	.byte	0,33
	.byte	'IfxGeth_Eth_initModuleConfig',0,9,216,4,17,1,1,1,1,5
	.byte	'config',0,9,216,4,66
	.word	73011
	.byte	5
	.byte	'gethSFR',0,9,216,4,84
	.word	53371
	.byte	0,31
	.word	64908
	.byte	32
	.word	64954
	.byte	32
	.word	64968
	.byte	6,0,31
	.word	64989
	.byte	32
	.word	65035
	.byte	32
	.word	65049
	.byte	6,0,31
	.word	65070
	.byte	32
	.word	65112
	.byte	32
	.word	65126
	.byte	21,34
	.word	64908
	.byte	32
	.word	64954
	.byte	32
	.word	64968
	.byte	35
	.word	64987
	.byte	0,6,0,0,33
	.byte	'IfxGeth_Eth_sendTransmitBuffer',0,9,241,6,17,1,1,1,1,5
	.byte	'geth',0,9,241,6,61
	.word	64825
	.byte	5
	.byte	'packetLength',0,9,241,6,74
	.word	61570
	.byte	5
	.byte	'channelId',0,9,241,6,109
	.word	61591
	.byte	0,33
	.byte	'IfxGeth_Eth_startReceivers',0,9,169,7,17,1,1,1,1,5
	.byte	'geth',0,9,169,7,57
	.word	64825
	.byte	5
	.byte	'numOfChannels',0,9,169,7,70
	.word	61570
	.byte	0,33
	.byte	'IfxGeth_Eth_startTransmitters',0,9,197,7,17,1,1,1,1,5
	.byte	'geth',0,9,197,7,60
	.word	64825
	.byte	5
	.byte	'numOfChannels',0,9,197,7,73
	.word	61570
	.byte	0,33
	.byte	'IfxGeth_Eth_freeReceiveBuffer',0,9,163,8,17,1,1,1,1,5
	.byte	'geth',0,9,163,8,60
	.word	64825
	.byte	5
	.byte	'channelId',0,9,163,8,87
	.word	63176
	.byte	0,31
	.word	65149
	.byte	6,0
.L93:
	.byte	3
	.word	66033
.L97:
	.byte	3
	.word	65382
	.byte	36
	.byte	'IfxGeth_Eth_Phy_Rtl8211f_init',0,20,100,19
	.word	61570
	.byte	1,1,1,1,37
	.word	313
	.byte	22
	.word	307
	.byte	3
	.word	73609
	.byte	37
	.word	73614
	.byte	27
	.byte	'memcpy',0,21,53,17
	.word	313
	.byte	1,1,1,1,38,21,53,33
	.word	73604
	.byte	38,21,53,56
	.word	73619
	.byte	38,21,53,68
	.word	399
	.byte	0
.L138:
	.byte	3
	.word	422
.L152:
	.byte	3
	.word	62942
.L162:
	.byte	3
	.word	64498
	.byte	39
	.byte	'__INDIRECT__',0,22,1,1,1,1,1,30
	.byte	'__wchar_t',0,22,1,1
	.word	65718
	.byte	30
	.byte	'__size_t',0,22,1,1
	.word	399
	.byte	30
	.byte	'__ptrdiff_t',0,22,1,1
	.word	415
	.byte	40,1,3
	.word	73758
	.byte	30
	.byte	'__codeptr',0,22,1,1
	.word	73760
	.byte	30
	.byte	'__intptr_t',0,22,1,1
	.word	415
	.byte	30
	.byte	'__uintptr_t',0,22,1,1
	.word	399
	.byte	30
	.byte	'size_t',0,23,24,25
	.word	399
	.byte	30
	.byte	'boolean',0,24,104,29
	.word	422
	.byte	30
	.byte	'uint8',0,24,108,29
	.word	422
	.byte	30
	.byte	'uint16',0,24,112,29
	.word	1305
	.byte	30
	.byte	'uint32',0,24,116,29
	.word	61570
	.byte	30
	.byte	'uint64',0,24,121,29
	.word	281
	.byte	30
	.byte	'sint8',0,24,125,29
	.word	65279
	.byte	30
	.byte	'sint16',0,24,129,1,29
	.word	65718
	.byte	7
	.byte	'long int',0,4,5,30
	.byte	'sint32',0,24,134,1,29
	.word	73942
	.byte	7
	.byte	'long long int',0,8,5,30
	.byte	'sint64',0,24,141,1,29
	.word	73970
	.byte	30
	.byte	'float32',0,24,170,1,29
	.word	227
	.byte	30
	.byte	'pvoid',0,18,54,28
	.word	313
	.byte	30
	.byte	'Ifx_TickTime',0,18,76,28
	.word	73970
	.byte	30
	.byte	'Ifx_Priority',0,18,100,16
	.word	1305
	.byte	30
	.byte	'Ifx_RxSel',0,18,137,1,3
	.word	67798
	.byte	30
	.byte	'u8_t',0,11,85,16
	.word	422
	.byte	30
	.byte	'u16_t',0,11,86,16
	.word	1305
	.byte	30
	.byte	'u32_t',0,11,87,16
	.word	61570
	.byte	30
	.byte	's8_t',0,11,88,16
	.word	65279
	.byte	30
	.byte	's16_t',0,11,89,16
	.word	65718
	.byte	30
	.byte	'intmax_t',0,25,198,2,41
	.word	73970
	.byte	30
	.byte	'mem_size_t',0,26,67,15
	.word	1305
	.byte	30
	.byte	'err_t',0,27,96,14
	.word	65279
	.byte	30
	.byte	'pbuf_layer',0,13,112,3
	.word	65527
	.byte	30
	.byte	'pbuf_type',0,13,168,1,3
	.word	65597
	.byte	41,1,1,24
	.word	65522
	.byte	0,3
	.word	74252
	.byte	30
	.byte	'pbuf_free_custom_fn',0,13,242,1,16
	.word	74261
	.byte	10
	.byte	'stats_proto',0,28,64,8,24,13
	.byte	'xmit',0
	.word	1305
	.byte	2,2,35,0,13
	.byte	'recv',0
	.word	1305
	.byte	2,2,35,2,13
	.byte	'fw',0
	.word	1305
	.byte	2,2,35,4,13
	.byte	'drop',0
	.word	1305
	.byte	2,2,35,6,13
	.byte	'chkerr',0
	.word	1305
	.byte	2,2,35,8,13
	.byte	'lenerr',0
	.word	1305
	.byte	2,2,35,10,13
	.byte	'memerr',0
	.word	1305
	.byte	2,2,35,12,13
	.byte	'rterr',0
	.word	1305
	.byte	2,2,35,14,13
	.byte	'proterr',0
	.word	1305
	.byte	2,2,35,16,13
	.byte	'opterr',0
	.word	1305
	.byte	2,2,35,18,13
	.byte	'err',0
	.word	1305
	.byte	2,2,35,20,13
	.byte	'cachehit',0
	.word	1305
	.byte	2,2,35,22,0,10
	.byte	'stats_mem',0,28,98,8,16,13
	.byte	'name',0
	.word	65300
	.byte	4,2,35,0,13
	.byte	'err',0
	.word	1305
	.byte	2,2,35,4,13
	.byte	'avail',0
	.word	1305
	.byte	2,2,35,6,13
	.byte	'used',0
	.word	1305
	.byte	2,2,35,8,13
	.byte	'max',0
	.word	1305
	.byte	2,2,35,10,13
	.byte	'illegal',0
	.word	1305
	.byte	2,2,35,12,0,3
	.word	74494
	.byte	15,36
	.word	74596
	.byte	16,8,0,10
	.byte	'stats_',0,28,232,1,8,220,1,13
	.byte	'link',0
	.word	74295
	.byte	24,2,35,0,13
	.byte	'etharp',0
	.word	74295
	.byte	24,2,35,24,13
	.byte	'ip_frag',0
	.word	74295
	.byte	24,2,35,48,13
	.byte	'ip',0
	.word	74295
	.byte	24,2,35,72,13
	.byte	'icmp',0
	.word	74295
	.byte	24,2,35,96,13
	.byte	'udp',0
	.word	74295
	.byte	24,2,35,120,13
	.byte	'tcp',0
	.word	74295
	.byte	24,3,35,144,1,13
	.byte	'mem',0
	.word	74494
	.byte	16,3,35,168,1,13
	.byte	'memp',0
	.word	74601
	.byte	36,3,35,184,1,0,42
	.byte	'lwip_stats',0,28,176,2,22
	.word	74610
	.byte	1,1,30
	.byte	'ip4_addr_t',0,16,57,25
	.word	65824
	.byte	30
	.byte	'ip_addr_t',0,29,142,2,20
	.word	65824
	.byte	10
	.byte	'link_changed_s',0,15,213,4,10,1,13
	.byte	'state',0
	.word	422
	.byte	1,2,35,0,0,10
	.byte	'status_changed_s',0,15,219,4,10,1,13
	.byte	'state',0
	.word	422
	.byte	1,2,35,0,0,22
	.word	65824
	.byte	3
	.word	74890
	.byte	10
	.byte	'ipv4_changed_s',0,15,225,4,10,12,13
	.byte	'old_address',0
	.word	74895
	.byte	4,2,35,0,13
	.byte	'old_netmask',0
	.word	74895
	.byte	4,2,35,4,13
	.byte	'old_gw',0
	.word	74895
	.byte	4,2,35,8,0,10
	.byte	'ipv6_set_s',0,15,233,4,10,8,13
	.byte	'addr_index',0
	.word	65279
	.byte	1,2,35,0,13
	.byte	'old_address',0
	.word	74895
	.byte	4,2,35,4,0,10
	.byte	'ipv6_addr_state_changed_s',0,15,241,4,10,8,13
	.byte	'addr_index',0
	.word	65279
	.byte	1,2,35,0,13
	.byte	'old_state',0
	.word	422
	.byte	1,2,35,1,13
	.byte	'address',0
	.word	74895
	.byte	4,2,35,4,0,12,15,210,4,9,12,13
	.byte	'link_changed',0
	.word	74814
	.byte	1,2,35,0,13
	.byte	'status_changed',0
	.word	74851
	.byte	1,2,35,0,13
	.byte	'ipv4_changed',0
	.word	74900
	.byte	12,2,35,0,13
	.byte	'ipv6_set',0
	.word	74980
	.byte	8,2,35,0,13
	.byte	'ipv6_addr_state_changed',0
	.word	75039
	.byte	8,2,35,0,0,22
	.word	75128
	.byte	3
	.word	75254
	.byte	41,1,1,24
	.word	66281
	.byte	24
	.word	1305
	.byte	24
	.word	75259
	.byte	0,3
	.word	75264
	.byte	30
	.byte	'netif_ext_callback_fn',0,15,132,5,16
	.word	75283
	.byte	10
	.byte	'ip4_addr_packed',0,30,53,8,4,13
	.byte	'addr',0
	.word	61570
	.byte	4,2,35,0,0,30
	.byte	'ip4_addr_p_t',0,30,61,32
	.word	75319
	.byte	30
	.byte	'Ifx_UReg_8Bit',0,31,96,24
	.word	422
	.byte	30
	.byte	'Ifx_UReg_32Bit',0,31,98,24
	.word	399
	.byte	30
	.byte	'Ifx_SReg_32Bit',0,31,101,24
	.word	415
	.byte	30
	.byte	'Ifx_GETH_ACCEN0_Bits',0,6,107,3
	.word	43190
	.byte	30
	.byte	'Ifx_GETH_ACCEN1_Bits',0,6,113,3
	.word	43760
	.byte	30
	.byte	'Ifx_GETH_ACCEND_ACCEN0D_Bits',0,6,150,1,3
	.word	44186
	.byte	30
	.byte	'Ifx_GETH_ACCEND_ACCEN1D_Bits',0,6,156,1,3
	.word	44764
	.byte	30
	.byte	'Ifx_GETH_CLC_Bits',0,6,164,1,3
	.word	42633
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_CONTROL_Bits',0,6,177,1,3
	.word	38702
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_RXBUFFER_Bits',0,6,183,1,3
	.word	41311
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_RXDESC_Bits',0,6,189,1,3
	.word	41087
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_TXBUFFER_Bits',0,6,195,1,3
	.word	41198
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_TXDESC_Bits',0,6,201,1,3
	.word	40976
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_INTERRUPT_ENABLE_Bits',0,6,221,1,3
	.word	40266
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_MISS_FRAME_CNT_Bits',0,6,230,1,3
	.word	41768
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_RXDESC_LIST_ADDRESS_Bits',0,6,237,1,3
	.word	39629
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_RXDESC_RING_LENGTH_Bits',0,6,244,1,3
	.word	40139
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_RXDESC_TAIL_POINTER_Bits',0,6,251,1,3
	.word	39885
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_RX_CONTROL_Bits',0,6,137,2,3
	.word	39241
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_RX_INTERRUPT_WATCHDOG_TIMER_Bits',0,6,146,2,3
	.word	40600
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_SLOT_FUNCTION_CONTROL_STATUS_Bits',0,6,157,2,3
	.word	40773
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_STATUS_Bits',0,6,179,2,3
	.word	41424
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_TXDESC_LIST_ADDRESS_Bits',0,6,186,2,3
	.word	39500
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_TXDESC_RING_LENGTH_Bits',0,6,193,2,3
	.word	40012
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_TXDESC_TAIL_POINTER_Bits',0,6,200,2,3
	.word	39758
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_TX_CONTROL_Bits',0,6,216,2,3
	.word	38940
	.byte	30
	.byte	'Ifx_GETH_DMA_DEBUG_STATUS0_Bits',0,6,230,2,3
	.word	38318
	.byte	30
	.byte	'Ifx_GETH_DMA_DEBUG_STATUS1_Bits',0,6,238,2,3
	.word	38557
	.byte	30
	.byte	'Ifx_GETH_DMA_INTERRUPT_STATUS_Bits',0,6,252,2,3
	.word	38066
	.byte	30
	.byte	'Ifx_GETH_DMA_MODE_Bits',0,6,140,3,3
	.word	37458
	.byte	30
	.byte	'Ifx_GETH_DMA_SYSBUS_MODE_Bits',0,6,158,3,3
	.word	37726
	.byte	30
	.byte	'Ifx_GETH_GPCTL_Bits',0,6,177,3,3
	.word	42873
	.byte	30
	.byte	'Ifx_GETH_ID_Bits',0,6,185,3,3
	.word	42753
	.byte	30
	.byte	'Ifx_GETH_KRST0_Bits',0,6,193,3,3
	.word	43850
	.byte	30
	.byte	'Ifx_GETH_KRST1_Bits',0,6,200,3,3
	.word	43974
	.byte	30
	.byte	'Ifx_GETH_KRSTCLR_Bits',0,6,207,3,3
	.word	44079
	.byte	30
	.byte	'Ifx_GETH_MAC_1US_TIC_COUNTER_Bits',0,6,214,3,3
	.word	8125
	.byte	30
	.byte	'Ifx_GETH_MAC_ADDRESS_HIGH_Bits',0,6,225,3,3
	.word	11421
	.byte	30
	.byte	'Ifx_GETH_MAC_ADDRESS_HIGH0_Bits',0,6,234,3,3
	.word	11174
	.byte	30
	.byte	'Ifx_GETH_MAC_ADDRESS_LOW_Bits',0,6,240,3,3
	.word	11599
	.byte	30
	.byte	'Ifx_GETH_MAC_ADDRESS_LOW0_Bits',0,6,246,3,3
	.word	11324
	.byte	30
	.byte	'Ifx_GETH_MAC_CONFIGURATION_Bits',0,6,149,4,3
	.word	821
	.byte	30
	.byte	'Ifx_GETH_MAC_CSR_SW_CTRL_Bits',0,6,158,4,3
	.word	10854
	.byte	30
	.byte	'Ifx_GETH_MAC_DEBUG_Bits',0,6,169,4,3
	.word	8713
	.byte	30
	.byte	'Ifx_GETH_MAC_EXT_CFG1_Bits',0,6,178,4,3
	.word	11008
	.byte	30
	.byte	'Ifx_GETH_MAC_EXT_CONFIGURATION_Bits',0,6,195,4,3
	.word	1327
	.byte	30
	.byte	'Ifx_GETH_MAC_HW_FEATURE0_Bits',0,6,224,4,3
	.word	8904
	.byte	30
	.byte	'Ifx_GETH_MAC_HW_FEATURE1_Bits',0,6,248,4,3
	.word	9464
	.byte	30
	.byte	'Ifx_GETH_MAC_HW_FEATURE2_Bits',0,6,137,5,3
	.word	9909
	.byte	30
	.byte	'Ifx_GETH_MAC_HW_FEATURE3_Bits',0,6,147,5,3
	.word	10241
	.byte	30
	.byte	'Ifx_GETH_MAC_INNER_VLAN_INCL_Bits',0,6,158,5,3
	.word	3710
	.byte	30
	.byte	'Ifx_GETH_MAC_INTERRUPT_ENABLE_Bits',0,6,175,5,3
	.word	5613
	.byte	30
	.byte	'Ifx_GETH_MAC_INTERRUPT_STATUS_Bits',0,6,196,5,3
	.word	5221
	.byte	30
	.byte	'Ifx_GETH_MAC_LPI_CONTROL_STATUS_Bits',0,6,216,5,3
	.word	7478
	.byte	30
	.byte	'Ifx_GETH_MAC_LPI_ENTRY_TIMER_Bits',0,6,224,5,3
	.word	7981
	.byte	30
	.byte	'Ifx_GETH_MAC_LPI_TIMERS_CONTROL_Bits',0,6,232,5,3
	.word	7843
	.byte	30
	.byte	'Ifx_GETH_MAC_MDIO_ADDRESS_Bits',0,6,251,5,3
	.word	10426
	.byte	30
	.byte	'Ifx_GETH_MAC_MDIO_DATA_Bits',0,6,130,6,3
	.word	10741
	.byte	30
	.byte	'Ifx_GETH_MAC_PACKET_FILTER_Bits',0,6,150,6,3
	.word	1633
	.byte	30
	.byte	'Ifx_GETH_MAC_PHYIF_CONTROL_STATUS_Bits',0,6,166,6,3
	.word	8263
	.byte	30
	.byte	'Ifx_GETH_MAC_PMT_CONTROL_STATUS_Bits',0,6,184,6,3
	.word	6166
	.byte	30
	.byte	'Ifx_GETH_MAC_PPS0_INTERVAL_Bits',0,6,190,6,3
	.word	30850
	.byte	30
	.byte	'Ifx_GETH_MAC_PPS0_TARGET_TIME_NANOSECONDS_Bits',0,6,197,6,3
	.word	30717
	.byte	30
	.byte	'Ifx_GETH_MAC_PPS0_TARGET_TIME_SECONDS_Bits',0,6,203,6,3
	.word	30608
	.byte	30
	.byte	'Ifx_GETH_MAC_PPS0_WIDTH_Bits',0,6,209,6,3
	.word	30949
	.byte	30
	.byte	'Ifx_GETH_MAC_PPS_CONTROL_Bits',0,6,230,6,3
	.word	30166
	.byte	30
	.byte	'Ifx_GETH_MAC_Q0_TX_FLOW_CTRL_Bits',0,6,242,6,3
	.word	3901
	.byte	30
	.byte	'Ifx_GETH_MAC_RWK_PACKET_FILTER_Bits',0,6,248,6,3
	.word	6518
	.byte	30
	.byte	'Ifx_GETH_MAC_RXQ_CTRL0_Bits',0,6,131,7,3
	.word	4532
	.byte	30
	.byte	'Ifx_GETH_MAC_RXQ_CTRL1_Bits',0,6,150,7,3
	.word	4725
	.byte	30
	.byte	'Ifx_GETH_MAC_RXQ_CTRL2_Bits',0,6,159,7,3
	.word	5077
	.byte	30
	.byte	'Ifx_GETH_MAC_RXQ_CTRL4_Bits',0,6,173,7,3
	.word	4289
	.byte	30
	.byte	'Ifx_GETH_MAC_RX_FLOW_CTRL_Bits',0,6,183,7,3
	.word	4115
	.byte	30
	.byte	'Ifx_GETH_MAC_RX_TX_STATUS_Bits',0,6,197,7,3
	.word	5929
	.byte	30
	.byte	'Ifx_GETH_MAC_SUB_SECOND_INCREMENT_Bits',0,6,206,7,3
	.word	27828
	.byte	30
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_Bits',0,6,213,7,3
	.word	28563
	.byte	30
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS_Bits',0,6,220,7,3
	.word	28096
	.byte	30
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_Bits',0,6,227,7,3
	.word	28333
	.byte	30
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_SECONDS_Bits',0,6,233,7,3
	.word	27995
	.byte	30
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_SECONDS_UPDATE_Bits',0,6,239,7,3
	.word	28225
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_ADDEND_Bits',0,6,245,7,3
	.word	28464
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_CONTROL_Bits',0,6,146,8,3
	.word	27248
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_ASYM_CORR_Bits',0,6,152,8,3
	.word	29497
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_Bits',0,6,158,8,3
	.word	29724
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_Bits',0,6,166,8,3
	.word	30003
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_ASYM_CORR_Bits',0,6,172,8,3
	.word	29385
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_Bits',0,6,178,8,3
	.word	29608
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_Bits',0,6,186,8,3
	.word	29839
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_STATUS_Bits',0,6,207,8,3
	.word	28701
	.byte	30
	.byte	'Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_Bits',0,6,214,8,3
	.word	29135
	.byte	30
	.byte	'Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_SECONDS_Bits',0,6,220,8,3
	.word	29272
	.byte	30
	.byte	'Ifx_GETH_MAC_VERSION_Bits',0,6,228,8,3
	.word	8578
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_HASH_TABLE_Bits',0,6,235,8,3
	.word	3107
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_INCL_Bits',0,6,251,8,3
	.word	3237
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_INCL_Q_Bits',0,6,132,9,3
	.word	3500
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_TAG_CTRL_Bits',0,6,153,9,3
	.word	2151
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_TAG_DATA_Bits',0,6,168,9,3
	.word	2518
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_TAG_FILTER_Bits',0,6,183,9,3
	.word	2780
	.byte	30
	.byte	'Ifx_GETH_MAC_WATCHDOG_TIMEOUT_Bits',0,6,192,9,3
	.word	1985
	.byte	30
	.byte	'Ifx_GETH_MMC_CONTROL_Bits',0,6,206,9,3
	.word	11706
	.byte	30
	.byte	'Ifx_GETH_MMC_IPC_RX_INTERRUPT_Bits',0,6,241,9,3
	.word	23073
	.byte	30
	.byte	'Ifx_GETH_MMC_IPC_RX_INTERRUPT_MASK_Bits',0,6,148,10,3
	.word	22287
	.byte	30
	.byte	'Ifx_GETH_MMC_RX_INTERRUPT_Bits',0,6,182,10,3
	.word	11960
	.byte	30
	.byte	'Ifx_GETH_MMC_RX_INTERRUPT_MASK_Bits',0,6,216,10,3
	.word	13450
	.byte	30
	.byte	'Ifx_GETH_MMC_TX_INTERRUPT_Bits',0,6,250,10,3
	.word	12706
	.byte	30
	.byte	'Ifx_GETH_MMC_TX_INTERRUPT_MASK_Bits',0,6,156,11,3
	.word	14201
	.byte	30
	.byte	'Ifx_GETH_MTL_INTERRUPT_STATUS_Bits',0,6,169,11,3
	.word	31314
	.byte	30
	.byte	'Ifx_GETH_MTL_OPERATION_MODE_Bits',0,6,183,11,3
	.word	31056
	.byte	30
	.byte	'Ifx_GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS_Bits',0,6,198,11,3
	.word	33019
	.byte	30
	.byte	'Ifx_GETH_MTL_Q_INTERRUPT_CONTROL_STATUS_Bits',0,6,213,11,3
	.word	36037
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ0_CONTROL_Bits',0,6,221,11,3
	.word	34137
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ0_DEBUG_Bits',0,6,233,11,3
	.word	33923
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_Bits',0,6,244,11,3
	.word	33695
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ0_OPERATION_MODE_Bits',0,6,134,12,3
	.word	33375
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ_CONTROL_Bits',0,6,142,12,3
	.word	37150
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ_DEBUG_Bits',0,6,154,12,3
	.word	36937
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ_DMA_MAP0_Bits',0,6,175,12,3
	.word	31551
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ_MISSED_PACKET_OVERFLOW_CNT_Bits',0,6,186,12,3
	.word	36710
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ_OPERATION_MODE_Bits',0,6,204,12,3
	.word	36391
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0_DEBUG_Bits',0,6,219,12,3
	.word	32335
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0_ETS_STATUS_Bits',0,6,226,12,3
	.word	32611
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0_OPERATION_MODE_Bits',0,6,238,12,3
	.word	31983
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0_QUANTUM_WEIGHT_Bits',0,6,245,12,3
	.word	32731
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0_UNDERFLOW_Bits',0,6,253,12,3
	.word	32191
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_DEBUG_Bits',0,6,140,13,3
	.word	34756
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_ETS_CONTROL_Bits',0,6,150,13,3
	.word	35031
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_ETS_STATUS_Bits',0,6,157,13,3
	.word	35203
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_HICREDIT_Bits',0,6,164,13,3
	.word	35571
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_LOCREDIT_Bits',0,6,171,13,3
	.word	35687
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_OPERATION_MODE_Bits',0,6,183,13,3
	.word	34406
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_QUANTUM_WEIGHT_Bits',0,6,190,13,3
	.word	35322
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_SENDSLOPECREDIT_Bits',0,6,197,13,3
	.word	35447
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_UNDERFLOW_Bits',0,6,205,13,3
	.word	34613
	.byte	30
	.byte	'Ifx_GETH_RWK_FILTER_BYTE_MASK_Bits',0,6,211,13,3
	.word	7215
	.byte	30
	.byte	'Ifx_GETH_RWK_FILTER_COMMAND_0_Bits',0,6,224,13,3
	.word	6624
	.byte	30
	.byte	'Ifx_GETH_RWK_FILTER_CRC_Bits',0,6,231,13,3
	.word	7092
	.byte	30
	.byte	'Ifx_GETH_RWK_FILTER_OFFSET_0_Bits',0,6,240,13,3
	.word	6906
	.byte	30
	.byte	'Ifx_GETH_RXICMP_ERROR_OCTETS_Bits',0,6,246,13,3
	.word	27131
	.byte	30
	.byte	'Ifx_GETH_RXICMP_ERROR_PACKETS_Bits',0,6,253,13,3
	.word	25584
	.byte	30
	.byte	'Ifx_GETH_RXICMP_GOOD_OCTETS_Bits',0,6,131,14,3
	.word	27027
	.byte	30
	.byte	'Ifx_GETH_RXICMP_GOOD_PACKETS_Bits',0,6,138,14,3
	.word	25456
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_FRAGMENTED_OCTETS_Bits',0,6,144,14,3
	.word	26047
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_FRAGMENTED_PACKETS_Bits',0,6,151,14,3
	.word	24259
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_GOOD_OCTETS_Bits',0,6,157,14,3
	.word	25714
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_GOOD_PACKETS_Bits',0,6,164,14,3
	.word	23854
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_HEADER_ERROR_OCTETS_Bits',0,6,170,14,3
	.word	25818
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_HEADER_ERROR_PACKETS_Bits',0,6,177,14,3
	.word	23982
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_NO_PAYLOAD_OCTETS_Bits',0,6,183,14,3
	.word	25934
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_NO_PAYLOAD_PACKETS_Bits',0,6,190,14,3
	.word	24122
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS_Bits',0,6,197,14,3
	.word	24395
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_Bits',0,6,203,14,3
	.word	26159
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_GOOD_OCTETS_Bits',0,6,209,14,3
	.word	26282
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_GOOD_PACKETS_Bits',0,6,216,14,3
	.word	24543
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_HEADER_ERROR_OCTETS_Bits',0,6,222,14,3
	.word	26386
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_HEADER_ERROR_PACKETS_Bits',0,6,229,14,3
	.word	24671
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_NO_PAYLOAD_OCTETS_Bits',0,6,235,14,3
	.word	26502
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_NO_PAYLOAD_PACKETS_Bits',0,6,242,14,3
	.word	24811
	.byte	30
	.byte	'Ifx_GETH_RXTCP_ERROR_OCTETS_Bits',0,6,248,14,3
	.word	26923
	.byte	30
	.byte	'Ifx_GETH_RXTCP_ERROR_PACKETS_Bits',0,6,255,14,3
	.word	25328
	.byte	30
	.byte	'Ifx_GETH_RXTCP_GOOD_OCTETS_Bits',0,6,133,15,3
	.word	26821
	.byte	30
	.byte	'Ifx_GETH_RXTCP_GOOD_PACKETS_Bits',0,6,140,15,3
	.word	25202
	.byte	30
	.byte	'Ifx_GETH_RXUDP_ERROR_OCTETS_Bits',0,6,146,15,3
	.word	26717
	.byte	30
	.byte	'Ifx_GETH_RXUDP_ERROR_PACKETS_Bits',0,6,153,15,3
	.word	25074
	.byte	30
	.byte	'Ifx_GETH_RXUDP_GOOD_OCTETS_Bits',0,6,159,15,3
	.word	26615
	.byte	30
	.byte	'Ifx_GETH_RXUDP_GOOD_PACKETS_Bits',0,6,166,15,3
	.word	24948
	.byte	30
	.byte	'Ifx_GETH_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_Bits',0,6,173,15,3
	.word	20479
	.byte	30
	.byte	'Ifx_GETH_RX_128TO255OCTETS_PACKETS_GOOD_BAD_Bits',0,6,180,15,3
	.word	20039
	.byte	30
	.byte	'Ifx_GETH_RX_256TO511OCTETS_PACKETS_GOOD_BAD_Bits',0,6,187,15,3
	.word	20185
	.byte	30
	.byte	'Ifx_GETH_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_Bits',0,6,194,15,3
	.word	20331
	.byte	30
	.byte	'Ifx_GETH_RX_64OCTETS_PACKETS_GOOD_BAD_Bits',0,6,201,15,3
	.word	19760
	.byte	30
	.byte	'Ifx_GETH_RX_65TO127OCTETS_PACKETS_GOOD_BAD_Bits',0,6,208,15,3
	.word	19895
	.byte	30
	.byte	'Ifx_GETH_RX_ALIGNMENT_ERROR_PACKETS_Bits',0,6,215,15,3
	.word	19106
	.byte	30
	.byte	'Ifx_GETH_RX_BROADCAST_PACKETS_GOOD_Bits',0,6,222,15,3
	.word	18718
	.byte	30
	.byte	'Ifx_GETH_RX_CONTROL_PACKETS_GOOD_Bits',0,6,229,15,3
	.word	21671
	.byte	30
	.byte	'Ifx_GETH_RX_CRC_ERROR_PACKETS_Bits',0,6,236,15,3
	.word	18980
	.byte	30
	.byte	'Ifx_GETH_RX_FIFO_OVERFLOW_PACKETS_Bits',0,6,243,15,3
	.word	21145
	.byte	30
	.byte	'Ifx_GETH_RX_JABBER_ERROR_PACKETS_Bits',0,6,250,15,3
	.word	19367
	.byte	30
	.byte	'Ifx_GETH_RX_LENGTH_ERROR_PACKETS_Bits',0,6,129,16,3
	.word	20756
	.byte	30
	.byte	'Ifx_GETH_RX_LPI_TRAN_CNTR_Bits',0,6,136,16,3
	.word	22165
	.byte	30
	.byte	'Ifx_GETH_RX_LPI_USEC_CNTR_Bits',0,6,143,16,3
	.word	22043
	.byte	30
	.byte	'Ifx_GETH_RX_MULTICAST_PACKETS_GOOD_Bits',0,6,150,16,3
	.word	18849
	.byte	30
	.byte	'Ifx_GETH_RX_OCTET_COUNT_GOOD_Bits',0,6,156,16,3
	.word	18618
	.byte	30
	.byte	'Ifx_GETH_RX_OCTET_COUNT_GOOD_BAD_Bits',0,6,162,16,3
	.word	18513
	.byte	30
	.byte	'Ifx_GETH_RX_OUT_OF_RANGE_TYPE_PACKETS_Bits',0,6,169,16,3
	.word	20885
	.byte	30
	.byte	'Ifx_GETH_RX_OVERSIZE_PACKETS_GOOD_Bits',0,6,176,16,3
	.word	19629
	.byte	30
	.byte	'Ifx_GETH_RX_PACKETS_COUNT_GOOD_BAD_Bits',0,6,183,16,3
	.word	18383
	.byte	30
	.byte	'Ifx_GETH_RX_PAUSE_PACKETS_Bits',0,6,190,16,3
	.word	21021
	.byte	30
	.byte	'Ifx_GETH_RX_RECEIVE_ERROR_PACKETS_Bits',0,6,197,16,3
	.word	21541
	.byte	30
	.byte	'Ifx_GETH_RX_RUNT_ERROR_PACKETS_Bits',0,6,204,16,3
	.word	19239
	.byte	30
	.byte	'Ifx_GETH_RX_UNDERSIZE_PACKETS_GOOD_Bits',0,6,211,16,3
	.word	19496
	.byte	30
	.byte	'Ifx_GETH_RX_UNICAST_PACKETS_GOOD_Bits',0,6,218,16,3
	.word	20627
	.byte	30
	.byte	'Ifx_GETH_RX_VLAN_PACKETS_GOOD_BAD_Bits',0,6,225,16,3
	.word	21277
	.byte	30
	.byte	'Ifx_GETH_RX_WATCHDOG_ERROR_PACKETS_Bits',0,6,232,16,3
	.word	21410
	.byte	30
	.byte	'Ifx_GETH_SKEWCTL_Bits',0,6,241,16,3
	.word	44935
	.byte	30
	.byte	'Ifx_GETH_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_Bits',0,6,248,16,3
	.word	16165
	.byte	30
	.byte	'Ifx_GETH_TX_128TO255OCTETS_PACKETS_GOOD_BAD_Bits',0,6,255,16,3
	.word	15725
	.byte	30
	.byte	'Ifx_GETH_TX_256TO511OCTETS_PACKETS_GOOD_BAD_Bits',0,6,134,17,3
	.word	15871
	.byte	30
	.byte	'Ifx_GETH_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_Bits',0,6,141,17,3
	.word	16017
	.byte	30
	.byte	'Ifx_GETH_TX_64OCTETS_PACKETS_GOOD_BAD_Bits',0,6,148,17,3
	.word	15446
	.byte	30
	.byte	'Ifx_GETH_TX_65TO127OCTETS_PACKETS_GOOD_BAD_Bits',0,6,155,17,3
	.word	15581
	.byte	30
	.byte	'Ifx_GETH_TX_BROADCAST_PACKETS_GOOD_Bits',0,6,162,17,3
	.word	15184
	.byte	30
	.byte	'Ifx_GETH_TX_BROADCAST_PACKETS_GOOD_BAD_Bits',0,6,169,17,3
	.word	16583
	.byte	30
	.byte	'Ifx_GETH_TX_CARRIER_ERROR_PACKETS_Bits',0,6,176,17,3
	.word	17526
	.byte	30
	.byte	'Ifx_GETH_TX_DEFERRED_PACKETS_Bits',0,6,183,17,3
	.word	17134
	.byte	30
	.byte	'Ifx_GETH_TX_EXCESSIVE_COLLISION_PACKETS_Bits',0,6,190,17,3
	.word	17390
	.byte	30
	.byte	'Ifx_GETH_TX_EXCESSIVE_DEFERRAL_ERROR_Bits',0,6,197,17,3
	.word	17878
	.byte	30
	.byte	'Ifx_GETH_TX_LATE_COLLISION_PACKETS_Bits',0,6,204,17,3
	.word	17258
	.byte	30
	.byte	'Ifx_GETH_TX_LPI_TRAN_CNTR_Bits',0,6,211,17,3
	.word	21921
	.byte	30
	.byte	'Ifx_GETH_TX_LPI_USEC_CNTR_Bits',0,6,218,17,3
	.word	21799
	.byte	30
	.byte	'Ifx_GETH_TX_MULTICAST_PACKETS_GOOD_Bits',0,6,225,17,3
	.word	15315
	.byte	30
	.byte	'Ifx_GETH_TX_MULTICAST_PACKETS_GOOD_BAD_Bits',0,6,232,17,3
	.word	16447
	.byte	30
	.byte	'Ifx_GETH_TX_MULTIPLE_COLLISION_GOOD_PACKETS_Bits',0,6,239,17,3
	.word	16992
	.byte	30
	.byte	'Ifx_GETH_TX_OCTET_COUNT_GOOD_Bits',0,6,245,17,3
	.word	17654
	.byte	30
	.byte	'Ifx_GETH_TX_OCTET_COUNT_GOOD_BAD_Bits',0,6,251,17,3
	.word	14950
	.byte	30
	.byte	'Ifx_GETH_TX_OSIZE_PACKETS_GOOD_Bits',0,6,130,18,3
	.word	18257
	.byte	30
	.byte	'Ifx_GETH_TX_PACKET_COUNT_GOOD_Bits',0,6,137,18,3
	.word	17754
	.byte	30
	.byte	'Ifx_GETH_TX_PACKET_COUNT_GOOD_BAD_Bits',0,6,144,18,3
	.word	15055
	.byte	30
	.byte	'Ifx_GETH_TX_PAUSE_PACKETS_Bits',0,6,151,18,3
	.word	18011
	.byte	30
	.byte	'Ifx_GETH_TX_SINGLE_COLLISION_GOOD_PACKETS_Bits',0,6,158,18,3
	.word	16852
	.byte	30
	.byte	'Ifx_GETH_TX_UNDERFLOW_ERROR_PACKETS_Bits',0,6,165,18,3
	.word	16719
	.byte	30
	.byte	'Ifx_GETH_TX_UNICAST_PACKETS_GOOD_BAD_Bits',0,6,172,18,3
	.word	16313
	.byte	30
	.byte	'Ifx_GETH_TX_VLAN_PACKETS_GOOD_Bits',0,6,179,18,3
	.word	18132
	.byte	30
	.byte	'Ifx_GETH_ACCEN0',0,6,192,18,3
	.word	43720
	.byte	30
	.byte	'Ifx_GETH_ACCEN1',0,6,200,18,3
	.word	43810
	.byte	30
	.byte	'Ifx_GETH_ACCEND_ACCEN0D',0,6,208,18,3
	.word	44724
	.byte	30
	.byte	'Ifx_GETH_ACCEND_ACCEN1D',0,6,216,18,3
	.word	44823
	.byte	30
	.byte	'Ifx_GETH_CLC',0,6,224,18,3
	.word	42713
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_CONTROL',0,6,232,18,3
	.word	38900
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_RXBUFFER',0,6,240,18,3
	.word	41384
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_RXDESC',0,6,248,18,3
	.word	41158
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_TXBUFFER',0,6,128,19,3
	.word	41271
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_TXDESC',0,6,136,19,3
	.word	41047
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_INTERRUPT_ENABLE',0,6,144,19,3
	.word	40560
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_MISS_FRAME_CNT',0,6,152,19,3
	.word	41889
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_RXDESC_LIST_ADDRESS',0,6,160,19,3
	.word	39718
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_RXDESC_RING_LENGTH',0,6,168,19,3
	.word	40226
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_RXDESC_TAIL_POINTER',0,6,176,19,3
	.word	39972
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_RX_CONTROL',0,6,184,19,3
	.word	39460
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_RX_INTERRUPT_WATCHDOG_TIMER',0,6,192,19,3
	.word	40733
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_SLOT_FUNCTION_CONTROL_STATUS',0,6,200,19,3
	.word	40936
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_STATUS',0,6,208,19,3
	.word	41728
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_TXDESC_LIST_ADDRESS',0,6,216,19,3
	.word	39589
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_TXDESC_RING_LENGTH',0,6,224,19,3
	.word	40099
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_TXDESC_TAIL_POINTER',0,6,232,19,3
	.word	39845
	.byte	30
	.byte	'Ifx_GETH_DMA_CH_TX_CONTROL',0,6,240,19,3
	.word	39201
	.byte	30
	.byte	'Ifx_GETH_DMA_DEBUG_STATUS0',0,6,248,19,3
	.word	38517
	.byte	30
	.byte	'Ifx_GETH_DMA_DEBUG_STATUS1',0,6,128,20,3
	.word	38651
	.byte	30
	.byte	'Ifx_GETH_DMA_INTERRUPT_STATUS',0,6,136,20,3
	.word	38278
	.byte	30
	.byte	'Ifx_GETH_DMA_MODE',0,6,144,20,3
	.word	37686
	.byte	30
	.byte	'Ifx_GETH_DMA_SYSBUS_MODE',0,6,152,20,3
	.word	38026
	.byte	30
	.byte	'Ifx_GETH_GPCTL',0,6,160,20,3
	.word	43150
	.byte	30
	.byte	'Ifx_GETH_ID',0,6,168,20,3
	.word	42833
	.byte	30
	.byte	'Ifx_GETH_KRST0',0,6,176,20,3
	.word	43934
	.byte	30
	.byte	'Ifx_GETH_KRST1',0,6,184,20,3
	.word	44039
	.byte	30
	.byte	'Ifx_GETH_KRSTCLR',0,6,192,20,3
	.word	44146
	.byte	30
	.byte	'Ifx_GETH_MAC_1US_TIC_COUNTER',0,6,200,20,3
	.word	8214
	.byte	30
	.byte	'Ifx_GETH_MAC_ADDRESS_HIGH',0,6,208,20,3
	.word	11559
	.byte	30
	.byte	'Ifx_GETH_MAC_ADDRESS_HIGH0',0,6,216,20,3
	.word	11284
	.byte	30
	.byte	'Ifx_GETH_MAC_ADDRESS_LOW',0,6,224,20,3
	.word	11655
	.byte	30
	.byte	'Ifx_GETH_MAC_ADDRESS_LOW0',0,6,232,20,3
	.word	11381
	.byte	30
	.byte	'Ifx_GETH_MAC_CONFIGURATION',0,6,240,20,3
	.word	1265
	.byte	30
	.byte	'Ifx_GETH_MAC_CSR_SW_CTRL',0,6,248,20,3
	.word	10968
	.byte	30
	.byte	'Ifx_GETH_MAC_DEBUG',0,6,128,21,3
	.word	8864
	.byte	30
	.byte	'Ifx_GETH_MAC_EXT_CFG1',0,6,136,21,3
	.word	11123
	.byte	30
	.byte	'Ifx_GETH_MAC_EXT_CONFIGURATION',0,6,144,21,3
	.word	1593
	.byte	30
	.byte	'Ifx_GETH_MAC_HW_FEATURE0',0,6,152,21,3
	.word	9424
	.byte	30
	.byte	'Ifx_GETH_MAC_HW_FEATURE1',0,6,160,21,3
	.word	9869
	.byte	30
	.byte	'Ifx_GETH_MAC_HW_FEATURE2',0,6,168,21,3
	.word	10201
	.byte	30
	.byte	'Ifx_GETH_MAC_HW_FEATURE3',0,6,176,21,3
	.word	10375
	.byte	30
	.byte	'Ifx_GETH_MAC_INNER_VLAN_INCL',0,6,184,21,3
	.word	3852
	.byte	30
	.byte	'Ifx_GETH_MAC_INTERRUPT_ENABLE',0,6,192,21,3
	.word	5889
	.byte	30
	.byte	'Ifx_GETH_MAC_INTERRUPT_STATUS',0,6,200,21,3
	.word	5573
	.byte	30
	.byte	'Ifx_GETH_MAC_LPI_CONTROL_STATUS',0,6,208,21,3
	.word	7803
	.byte	30
	.byte	'Ifx_GETH_MAC_LPI_ENTRY_TIMER',0,6,216,21,3
	.word	8085
	.byte	30
	.byte	'Ifx_GETH_MAC_LPI_TIMERS_CONTROL',0,6,224,21,3
	.word	7941
	.byte	30
	.byte	'Ifx_GETH_MAC_MDIO_ADDRESS',0,6,232,21,3
	.word	10701
	.byte	30
	.byte	'Ifx_GETH_MAC_MDIO_DATA',0,6,240,21,3
	.word	10805
	.byte	30
	.byte	'Ifx_GETH_MAC_PACKET_FILTER',0,6,248,21,3
	.word	1945
	.byte	30
	.byte	'Ifx_GETH_MAC_PHYIF_CONTROL_STATUS',0,6,128,22,3
	.word	8529
	.byte	30
	.byte	'Ifx_GETH_MAC_PMT_CONTROL_STATUS',0,6,136,22,3
	.word	6478
	.byte	30
	.byte	'Ifx_GETH_MAC_PPS0_INTERVAL',0,6,144,22,3
	.word	30909
	.byte	30
	.byte	'Ifx_GETH_MAC_PPS0_TARGET_TIME_NANOSECONDS',0,6,152,22,3
	.word	30810
	.byte	30
	.byte	'Ifx_GETH_MAC_PPS0_TARGET_TIME_SECONDS',0,6,160,22,3
	.word	30677
	.byte	30
	.byte	'Ifx_GETH_MAC_PPS0_WIDTH',0,6,168,22,3
	.word	31007
	.byte	30
	.byte	'Ifx_GETH_MAC_PPS_CONTROL',0,6,176,22,3
	.word	30568
	.byte	30
	.byte	'Ifx_GETH_MAC_Q0_TX_FLOW_CTRL',0,6,184,22,3
	.word	4066
	.byte	30
	.byte	'Ifx_GETH_MAC_RWK_PACKET_FILTER',0,6,192,22,3
	.word	6584
	.byte	30
	.byte	'Ifx_GETH_MAC_RXQ_CTRL0',0,6,200,22,3
	.word	4685
	.byte	30
	.byte	'Ifx_GETH_MAC_RXQ_CTRL1',0,6,208,22,3
	.word	5037
	.byte	30
	.byte	'Ifx_GETH_MAC_RXQ_CTRL2',0,6,216,22,3
	.word	5181
	.byte	30
	.byte	'Ifx_GETH_MAC_RXQ_CTRL4',0,6,224,22,3
	.word	4492
	.byte	30
	.byte	'Ifx_GETH_MAC_RX_FLOW_CTRL',0,6,232,22,3
	.word	4249
	.byte	30
	.byte	'Ifx_GETH_MAC_RX_TX_STATUS',0,6,240,22,3
	.word	6126
	.byte	30
	.byte	'Ifx_GETH_MAC_SUB_SECOND_INCREMENT',0,6,248,22,3
	.word	27955
	.byte	30
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS',0,6,128,23,3
	.word	28661
	.byte	30
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS',0,6,136,23,3
	.word	28185
	.byte	30
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE',0,6,144,23,3
	.word	28424
	.byte	30
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_SECONDS',0,6,152,23,3
	.word	28056
	.byte	30
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_SECONDS_UPDATE',0,6,160,23,3
	.word	28293
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_ADDEND',0,6,168,23,3
	.word	28523
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_CONTROL',0,6,176,23,3
	.word	27788
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_ASYM_CORR',0,6,184,23,3
	.word	29568
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND',0,6,192,23,3
	.word	29799
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC',0,6,200,23,3
	.word	30126
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_ASYM_CORR',0,6,208,23,3
	.word	29457
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND',0,6,216,23,3
	.word	29684
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC',0,6,224,23,3
	.word	29963
	.byte	30
	.byte	'Ifx_GETH_MAC_TIMESTAMP_STATUS',0,6,232,23,3
	.word	29086
	.byte	30
	.byte	'Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS',0,6,240,23,3
	.word	29232
	.byte	30
	.byte	'Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_SECONDS',0,6,248,23,3
	.word	29345
	.byte	30
	.byte	'Ifx_GETH_MAC_VERSION',0,6,128,24,3
	.word	8673
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_HASH_TABLE',0,6,136,24,3
	.word	3188
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_INCL',0,6,144,24,3
	.word	3460
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_INCL_Q',0,6,152,24,3
	.word	3615
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_TAG_CTRL',0,6,160,24,3
	.word	2478
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_TAG_DATA',0,6,168,24,3
	.word	2740
	.byte	30
	.byte	'Ifx_GETH_MAC_VLAN_TAG_FILTER',0,6,176,24,3
	.word	3004
	.byte	30
	.byte	'Ifx_GETH_MAC_WATCHDOG_TIMEOUT',0,6,184,24,3
	.word	2102
	.byte	30
	.byte	'Ifx_GETH_MMC_CONTROL',0,6,192,24,3
	.word	11920
	.byte	30
	.byte	'Ifx_GETH_MMC_IPC_RX_INTERRUPT',0,6,200,24,3
	.word	23814
	.byte	30
	.byte	'Ifx_GETH_MMC_IPC_RX_INTERRUPT_MASK',0,6,208,24,3
	.word	23033
	.byte	30
	.byte	'Ifx_GETH_MMC_RX_INTERRUPT',0,6,216,24,3
	.word	12666
	.byte	30
	.byte	'Ifx_GETH_MMC_RX_INTERRUPT_MASK',0,6,224,24,3
	.word	14161
	.byte	30
	.byte	'Ifx_GETH_MMC_TX_INTERRUPT',0,6,232,24,3
	.word	13410
	.byte	30
	.byte	'Ifx_GETH_MMC_TX_INTERRUPT_MASK',0,6,240,24,3
	.word	14910
	.byte	30
	.byte	'Ifx_GETH_MTL_INTERRUPT_STATUS',0,6,248,24,3
	.word	31511
	.byte	30
	.byte	'Ifx_GETH_MTL_OPERATION_MODE',0,6,128,25,3
	.word	31274
	.byte	30
	.byte	'Ifx_GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS',0,6,136,25,3
	.word	33272
	.byte	30
	.byte	'Ifx_GETH_MTL_Q_INTERRUPT_CONTROL_STATUS',0,6,144,25,3
	.word	36289
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ0_CONTROL',0,6,152,25,3
	.word	34243
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ0_DEBUG',0,6,160,25,3
	.word	34097
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT',0,6,168,25,3
	.word	33883
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ0_OPERATION_MODE',0,6,176,25,3
	.word	33655
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ_CONTROL',0,6,184,25,3
	.word	37255
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ_DEBUG',0,6,192,25,3
	.word	37110
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ_DMA_MAP0',0,6,200,25,3
	.word	31932
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ_MISSED_PACKET_OVERFLOW_CNT',0,6,208,25,3
	.word	36897
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ_OPERATION_MODE',0,6,216,25,3
	.word	36670
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0_DEBUG',0,6,224,25,3
	.word	32571
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0_ETS_STATUS',0,6,232,25,3
	.word	32691
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0_OPERATION_MODE',0,6,240,25,3
	.word	32151
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0_QUANTUM_WEIGHT',0,6,248,25,3
	.word	32817
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0_UNDERFLOW',0,6,128,26,3
	.word	32295
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_DEBUG',0,6,136,26,3
	.word	34991
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_ETS_CONTROL',0,6,144,26,3
	.word	35163
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_ETS_STATUS',0,6,152,26,3
	.word	35282
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_HICREDIT',0,6,160,26,3
	.word	35647
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_LOCREDIT',0,6,168,26,3
	.word	35763
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_OPERATION_MODE',0,6,176,26,3
	.word	34573
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_QUANTUM_WEIGHT',0,6,184,26,3
	.word	35407
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_SENDSLOPECREDIT',0,6,192,26,3
	.word	35531
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ_UNDERFLOW',0,6,200,26,3
	.word	34716
	.byte	30
	.byte	'Ifx_GETH_RWK_FILTER_BYTE_MASK',0,6,208,26,3
	.word	7287
	.byte	30
	.byte	'Ifx_GETH_RWK_FILTER_COMMAND_0',0,6,216,26,3
	.word	6866
	.byte	30
	.byte	'Ifx_GETH_RWK_FILTER_CRC',0,6,224,26,3
	.word	7175
	.byte	30
	.byte	'Ifx_GETH_RWK_FILTER_OFFSET_0',0,6,232,26,3
	.word	7052
	.byte	30
	.byte	'Ifx_GETH_RXICMP_ERROR_OCTETS',0,6,240,26,3
	.word	27197
	.byte	30
	.byte	'Ifx_GETH_RXICMP_ERROR_PACKETS',0,6,248,26,3
	.word	25674
	.byte	30
	.byte	'Ifx_GETH_RXICMP_GOOD_OCTETS',0,6,128,27,3
	.word	27091
	.byte	30
	.byte	'Ifx_GETH_RXICMP_GOOD_PACKETS',0,6,136,27,3
	.word	25544
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_FRAGMENTED_OCTETS',0,6,144,27,3
	.word	26119
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_FRAGMENTED_PACKETS',0,6,152,27,3
	.word	24355
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_GOOD_OCTETS',0,6,160,27,3
	.word	25778
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_GOOD_PACKETS',0,6,168,27,3
	.word	23942
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_HEADER_ERROR_OCTETS',0,6,176,27,3
	.word	25894
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_HEADER_ERROR_PACKETS',0,6,184,27,3
	.word	24082
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_NO_PAYLOAD_OCTETS',0,6,192,27,3
	.word	26007
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_NO_PAYLOAD_PACKETS',0,6,200,27,3
	.word	24219
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS',0,6,208,27,3
	.word	24503
	.byte	30
	.byte	'Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS',0,6,216,27,3
	.word	26242
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_GOOD_OCTETS',0,6,224,27,3
	.word	26346
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_GOOD_PACKETS',0,6,232,27,3
	.word	24631
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_HEADER_ERROR_OCTETS',0,6,240,27,3
	.word	26462
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_HEADER_ERROR_PACKETS',0,6,248,27,3
	.word	24771
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_NO_PAYLOAD_OCTETS',0,6,128,28,3
	.word	26575
	.byte	30
	.byte	'Ifx_GETH_RXIPV6_NO_PAYLOAD_PACKETS',0,6,136,28,3
	.word	24908
	.byte	30
	.byte	'Ifx_GETH_RXTCP_ERROR_OCTETS',0,6,144,28,3
	.word	26987
	.byte	30
	.byte	'Ifx_GETH_RXTCP_ERROR_PACKETS',0,6,152,28,3
	.word	25416
	.byte	30
	.byte	'Ifx_GETH_RXTCP_GOOD_OCTETS',0,6,160,28,3
	.word	26883
	.byte	30
	.byte	'Ifx_GETH_RXTCP_GOOD_PACKETS',0,6,168,28,3
	.word	25288
	.byte	30
	.byte	'Ifx_GETH_RXUDP_ERROR_OCTETS',0,6,176,28,3
	.word	26781
	.byte	30
	.byte	'Ifx_GETH_RXUDP_ERROR_PACKETS',0,6,184,28,3
	.word	25162
	.byte	30
	.byte	'Ifx_GETH_RXUDP_GOOD_OCTETS',0,6,192,28,3
	.word	26677
	.byte	30
	.byte	'Ifx_GETH_RXUDP_GOOD_PACKETS',0,6,200,28,3
	.word	25034
	.byte	30
	.byte	'Ifx_GETH_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD',0,6,208,28,3
	.word	20587
	.byte	30
	.byte	'Ifx_GETH_RX_128TO255OCTETS_PACKETS_GOOD_BAD',0,6,216,28,3
	.word	20145
	.byte	30
	.byte	'Ifx_GETH_RX_256TO511OCTETS_PACKETS_GOOD_BAD',0,6,224,28,3
	.word	20291
	.byte	30
	.byte	'Ifx_GETH_RX_512TO1023OCTETS_PACKETS_GOOD_BAD',0,6,232,28,3
	.word	20439
	.byte	30
	.byte	'Ifx_GETH_RX_64OCTETS_PACKETS_GOOD_BAD',0,6,240,28,3
	.word	19855
	.byte	30
	.byte	'Ifx_GETH_RX_65TO127OCTETS_PACKETS_GOOD_BAD',0,6,248,28,3
	.word	19999
	.byte	30
	.byte	'Ifx_GETH_RX_ALIGNMENT_ERROR_PACKETS',0,6,128,29,3
	.word	19199
	.byte	30
	.byte	'Ifx_GETH_RX_BROADCAST_PACKETS_GOOD',0,6,136,29,3
	.word	18809
	.byte	30
	.byte	'Ifx_GETH_RX_CONTROL_PACKETS_GOOD',0,6,144,29,3
	.word	21759
	.byte	30
	.byte	'Ifx_GETH_RX_CRC_ERROR_PACKETS',0,6,152,29,3
	.word	19066
	.byte	30
	.byte	'Ifx_GETH_RX_FIFO_OVERFLOW_PACKETS',0,6,160,29,3
	.word	21237
	.byte	30
	.byte	'Ifx_GETH_RX_JABBER_ERROR_PACKETS',0,6,168,29,3
	.word	19456
	.byte	30
	.byte	'Ifx_GETH_RX_LENGTH_ERROR_PACKETS',0,6,176,29,3
	.word	20845
	.byte	30
	.byte	'Ifx_GETH_RX_LPI_TRAN_CNTR',0,6,184,29,3
	.word	22247
	.byte	30
	.byte	'Ifx_GETH_RX_LPI_USEC_CNTR',0,6,192,29,3
	.word	22125
	.byte	30
	.byte	'Ifx_GETH_RX_MULTICAST_PACKETS_GOOD',0,6,200,29,3
	.word	18940
	.byte	30
	.byte	'Ifx_GETH_RX_OCTET_COUNT_GOOD',0,6,208,29,3
	.word	18678
	.byte	30
	.byte	'Ifx_GETH_RX_OCTET_COUNT_GOOD_BAD',0,6,216,29,3
	.word	18578
	.byte	30
	.byte	'Ifx_GETH_RX_OUT_OF_RANGE_TYPE_PACKETS',0,6,224,29,3
	.word	20981
	.byte	30
	.byte	'Ifx_GETH_RX_OVERSIZE_PACKETS_GOOD',0,6,232,29,3
	.word	19720
	.byte	30
	.byte	'Ifx_GETH_RX_PACKETS_COUNT_GOOD_BAD',0,6,240,29,3
	.word	18473
	.byte	30
	.byte	'Ifx_GETH_RX_PAUSE_PACKETS',0,6,248,29,3
	.word	21105
	.byte	30
	.byte	'Ifx_GETH_RX_RECEIVE_ERROR_PACKETS',0,6,128,30,3
	.word	21631
	.byte	30
	.byte	'Ifx_GETH_RX_RUNT_ERROR_PACKETS',0,6,136,30,3
	.word	19327
	.byte	30
	.byte	'Ifx_GETH_RX_UNDERSIZE_PACKETS_GOOD',0,6,144,30,3
	.word	19589
	.byte	30
	.byte	'Ifx_GETH_RX_UNICAST_PACKETS_GOOD',0,6,152,30,3
	.word	20716
	.byte	30
	.byte	'Ifx_GETH_RX_VLAN_PACKETS_GOOD_BAD',0,6,160,30,3
	.word	21370
	.byte	30
	.byte	'Ifx_GETH_RX_WATCHDOG_ERROR_PACKETS',0,6,168,30,3
	.word	21501
	.byte	30
	.byte	'Ifx_GETH_SKEWCTL',0,6,176,30,3
	.word	45044
	.byte	30
	.byte	'Ifx_GETH_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD',0,6,184,30,3
	.word	16273
	.byte	30
	.byte	'Ifx_GETH_TX_128TO255OCTETS_PACKETS_GOOD_BAD',0,6,192,30,3
	.word	15831
	.byte	30
	.byte	'Ifx_GETH_TX_256TO511OCTETS_PACKETS_GOOD_BAD',0,6,200,30,3
	.word	15977
	.byte	30
	.byte	'Ifx_GETH_TX_512TO1023OCTETS_PACKETS_GOOD_BAD',0,6,208,30,3
	.word	16125
	.byte	30
	.byte	'Ifx_GETH_TX_64OCTETS_PACKETS_GOOD_BAD',0,6,216,30,3
	.word	15541
	.byte	30
	.byte	'Ifx_GETH_TX_65TO127OCTETS_PACKETS_GOOD_BAD',0,6,224,30,3
	.word	15685
	.byte	30
	.byte	'Ifx_GETH_TX_BROADCAST_PACKETS_GOOD',0,6,232,30,3
	.word	15275
	.byte	30
	.byte	'Ifx_GETH_TX_BROADCAST_PACKETS_GOOD_BAD',0,6,240,30,3
	.word	16679
	.byte	30
	.byte	'Ifx_GETH_TX_CARRIER_ERROR_PACKETS',0,6,248,30,3
	.word	17614
	.byte	30
	.byte	'Ifx_GETH_TX_DEFERRED_PACKETS',0,6,128,31,3
	.word	17218
	.byte	30
	.byte	'Ifx_GETH_TX_EXCESSIVE_COLLISION_PACKETS',0,6,136,31,3
	.word	17486
	.byte	30
	.byte	'Ifx_GETH_TX_EXCESSIVE_DEFERRAL_ERROR',0,6,144,31,3
	.word	17971
	.byte	30
	.byte	'Ifx_GETH_TX_LATE_COLLISION_PACKETS',0,6,152,31,3
	.word	17350
	.byte	30
	.byte	'Ifx_GETH_TX_LPI_TRAN_CNTR',0,6,160,31,3
	.word	22003
	.byte	30
	.byte	'Ifx_GETH_TX_LPI_USEC_CNTR',0,6,168,31,3
	.word	21881
	.byte	30
	.byte	'Ifx_GETH_TX_MULTICAST_PACKETS_GOOD',0,6,176,31,3
	.word	15406
	.byte	30
	.byte	'Ifx_GETH_TX_MULTICAST_PACKETS_GOOD_BAD',0,6,184,31,3
	.word	16543
	.byte	30
	.byte	'Ifx_GETH_TX_MULTIPLE_COLLISION_GOOD_PACKETS',0,6,192,31,3
	.word	17094
	.byte	30
	.byte	'Ifx_GETH_TX_OCTET_COUNT_GOOD',0,6,200,31,3
	.word	17714
	.byte	30
	.byte	'Ifx_GETH_TX_OCTET_COUNT_GOOD_BAD',0,6,208,31,3
	.word	15015
	.byte	30
	.byte	'Ifx_GETH_TX_OSIZE_PACKETS_GOOD',0,6,216,31,3
	.word	18343
	.byte	30
	.byte	'Ifx_GETH_TX_PACKET_COUNT_GOOD',0,6,224,31,3
	.word	17838
	.byte	30
	.byte	'Ifx_GETH_TX_PACKET_COUNT_GOOD_BAD',0,6,232,31,3
	.word	15144
	.byte	30
	.byte	'Ifx_GETH_TX_PAUSE_PACKETS',0,6,240,31,3
	.word	18092
	.byte	30
	.byte	'Ifx_GETH_TX_SINGLE_COLLISION_GOOD_PACKETS',0,6,248,31,3
	.word	16952
	.byte	30
	.byte	'Ifx_GETH_TX_UNDERFLOW_ERROR_PACKETS',0,6,128,32,3
	.word	16812
	.byte	30
	.byte	'Ifx_GETH_TX_UNICAST_PACKETS_GOOD_BAD',0,6,136,32,3
	.word	16407
	.byte	30
	.byte	'Ifx_GETH_TX_VLAN_PACKETS_GOOD',0,6,144,32,3
	.word	18217
	.byte	14
	.word	32857
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ0',0,6,164,32,3
	.word	94209
	.byte	14
	.word	33312
	.byte	30
	.byte	'Ifx_GETH_MTL_Q0',0,6,182,32,3
	.word	94241
	.byte	14
	.word	34283
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ0',0,6,203,32,3
	.word	94271
	.byte	14
	.word	35803
	.byte	30
	.byte	'Ifx_GETH_MTL_TXQ',0,6,230,32,3
	.word	94303
	.byte	14
	.word	36329
	.byte	30
	.byte	'Ifx_GETH_MTL_Q',0,6,248,32,3
	.word	94334
	.byte	14
	.word	37295
	.byte	30
	.byte	'Ifx_GETH_MTL_RXQ',0,6,141,33,3
	.word	94363
	.byte	14
	.word	41929
	.byte	30
	.byte	'Ifx_GETH_DMA_CH',0,6,184,33,3
	.word	94394
	.byte	14
	.word	44863
	.byte	30
	.byte	'Ifx_GETH_ACCEND',0,6,203,33,3
	.word	94424
	.byte	14
	.word	45095
	.byte	30
	.byte	'Ifx_GETH',0,6,133,36,3
	.word	94454
	.byte	18,32,162,11,9,1,19
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,19
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,19
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,30
	.byte	'IfxScu_WDTCON1_IR',0,32,167,11,3
	.word	94477
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,33,68,16,4,11
	.byte	'EN0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_ACCEN00_Bits',0,33,102,3
	.word	94599
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,33,105,16,4,11
	.byte	'reserved_0',0,4
	.word	399
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN01_Bits',0,33,108,3
	.word	95158
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,33,111,16,4,11
	.byte	'EN0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_ACCEN10_Bits',0,33,145,1,3
	.word	95237
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,33,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	399
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN11_Bits',0,33,151,1,3
	.word	95797
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,33,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	399
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,33,164,1,3
	.word	95878
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,33,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	422
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	422
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	422
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	422
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	422
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	422
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON0_Bits',0,33,181,1,3
	.word	96095
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,33,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	422
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	422
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	422
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	422
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	422
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON1_Bits',0,33,199,1,3
	.word	96368
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,33,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	422
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	399
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON10_Bits',0,33,206,1,3
	.word	96694
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,33,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	422
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	399
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON11_Bits',0,33,213,1,3
	.word	96796
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,33,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	422
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	399
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	422
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON2_Bits',0,33,228,1,3
	.word	96898
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,33,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	422
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	399
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON3_Bits',0,33,248,1,3
	.word	97172
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,33,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	1305
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	399
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	422
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON4_Bits',0,33,132,2,3
	.word	97541
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,33,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	399
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON5_Bits',0,33,143,2,3
	.word	97721
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,33,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	422
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	399
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON6_Bits',0,33,150,2,3
	.word	97890
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,33,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	422
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	399
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON7_Bits',0,33,157,2,3
	.word	97990
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,33,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	422
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	399
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON8_Bits',0,33,164,2,3
	.word	98090
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,33,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	422
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	399
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON9_Bits',0,33,171,2,3
	.word	98190
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,33,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	422
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	422
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	422
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	422
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CHIPID_Bits',0,33,185,2,3
	.word	98290
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,33,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	1305
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	1305
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,33,200,2,3
	.word	98493
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,33,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	1305
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	399
	.byte	20,0,2,35,0,0,30
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,33,207,2,3
	.word	98725
	.byte	7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_EICON0_Bits',0,33,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	98827
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_SCU_EICON0_Bits',0,33,216,2,3
	.word	98843
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,33,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	399
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_EICON1_Bits',0,33,228,2,3
	.word	98971
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,33,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	422
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	422
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	399
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	422
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	422
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EICR_Bits',0,33,250,2,3
	.word	99160
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,33,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	422
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	422
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	422
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_EIFILT_Bits',0,33,147,3,3
	.word	99524
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,33,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	399
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_EIFR_Bits',0,33,161,3,3
	.word	99963
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,33,164,3,16,4,11
	.byte	'AE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_EISR_Bits',0,33,174,3,3
	.word	100174
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,33,177,3,16,4,11
	.byte	'POL',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	1305
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1305
	.byte	14,0,2,35,2,0,30
	.byte	'Ifx_SCU_EMSR_Bits',0,33,187,3,3
	.word	100350
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,33,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	399
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	422
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	422
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_EMSSW_Bits',0,33,196,3,3
	.word	100544
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,33,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	1305
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	399
	.byte	23,0,2,35,0,0,30
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,33,204,3,3
	.word	100679
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,33,207,3,16,4,11
	.byte	'ARI',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	399
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_ESROCFG_Bits',0,33,212,3,3
	.word	100815
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,33,215,3,16,4,11
	.byte	'EN0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	422
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	422
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	422
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	422
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_SCU_EXTCON_Bits',0,33,226,3,3
	.word	100926
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,33,229,3,16,4,11
	.byte	'STEP',0,2
	.word	1305
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	422
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	1305
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	422
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_FDR_Bits',0,33,237,3,3
	.word	101144
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,33,240,3,16,4,11
	.byte	'FS0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_SCU_FMR_Bits',0,33,132,4,3
	.word	101307
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,33,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_ID_Bits',0,33,140,4,3
	.word	101643
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,33,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	422
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	422
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_SCU_IGCR_Bits',0,33,167,4,3
	.word	101750
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,33,170,4,16,4,11
	.byte	'P0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	399
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_IN_Bits',0,33,175,4,3
	.word	102202
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,33,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_IOCR_Bits',0,33,185,4,3
	.word	102301
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,33,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	399
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	1305
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,33,198,4,3
	.word	102451
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,33,201,4,16,4,11
	.byte	'SEED',0,4
	.word	399
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	422
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,33,208,4,3
	.word	102689
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,33,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	1305
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	399
	.byte	20,0,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,33,215,4,3
	.word	102850
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,33,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	399
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,33,221,4,3
	.word	102956
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,33,224,4,16,4,11
	.byte	'LS2',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	1305
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	1305
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_LCLCON0_Bits',0,33,232,4,3
	.word	103042
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,33,235,4,16,4,11
	.byte	'LS3',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	1305
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	1305
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_LCLCON1_Bits',0,33,243,4,3
	.word	103210
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,33,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1305
	.byte	10,0,2,35,2,0,30
	.byte	'Ifx_SCU_LCLTEST_Bits',0,33,134,5,3
	.word	103378
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,33,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	422
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	1305
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_MANID_Bits',0,33,142,5,3
	.word	103692
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,33,145,5,16,4,11
	.byte	'PS0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	1305
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1305
	.byte	14,0,2,35,2,0,30
	.byte	'Ifx_SCU_OMR_Bits',0,33,153,5,3
	.word	103803
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,33,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	422
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	422
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	422
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	422
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	422
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	422
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_OSCCON_Bits',0,33,177,5,3
	.word	103961
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,33,180,5,16,4,11
	.byte	'P0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	399
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_OUT_Bits',0,33,185,5,3
	.word	104372
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,33,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	422
	.byte	6,0,2,35,3,0,30
	.byte	'Ifx_SCU_OVCCON_Bits',0,33,204,5,3
	.word	104473
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,33,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	399
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,33,216,5,3
	.word	104791
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,33,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	399
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDISC_Bits',0,33,224,5,3
	.word	104978
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,33,227,5,16,4,11
	.byte	'PD0',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	399
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDR_Bits',0,33,234,5,3
	.word	105089
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,33,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	399
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDRR_Bits',0,33,248,5,3
	.word	105222
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,33,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	1305
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	422
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	422
	.byte	5,0,2,35,3,0,30
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,33,134,6,3
	.word	105425
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,33,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	399
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,33,143,6,3
	.word	105665
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,33,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	399
	.byte	25,0,2,35,0,0,30
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,33,156,6,3
	.word	105809
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,33,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	399
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR0_Bits',0,33,165,6,3
	.word	106031
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,33,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	399
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR1_Bits',0,33,174,6,3
	.word	106167
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,33,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	399
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR2_Bits',0,33,183,6,3
	.word	106303
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,33,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	399
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR3_Bits',0,33,192,6,3
	.word	106439
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,33,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	399
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR4_Bits',0,33,201,6,3
	.word	106575
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,33,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	399
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR5_Bits',0,33,210,6,3
	.word	106711
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,33,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1305
	.byte	12,0,2,35,2,0,30
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,33,227,6,3
	.word	106847
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,33,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	422
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	399
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	422
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,33,241,6,3
	.word	107119
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,33,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1305
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	422
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,33,135,7,3
	.word	107364
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,33,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	1305
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	422
	.byte	6,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,33,143,7,3
	.word	107752
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,33,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	422
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	422
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,33,157,7,3
	.word	107870
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,33,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	422
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	422
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	422
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	1305
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	422
	.byte	6,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,33,172,7,3
	.word	108113
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,33,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	422
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	422
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	422
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	422
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	422
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	422
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	422
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	422
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1305
	.byte	10,0,2,35,2,0,30
	.byte	'Ifx_SCU_RSTCON_Bits',0,33,189,7,3
	.word	108380
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,33,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	1305
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_RSTCON2_Bits',0,33,206,7,3
	.word	108639
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,33,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	399
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON3_Bits',0,33,212,7,3
	.word	108944
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,33,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	422
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	422
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	422
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	422
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	422
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,33,245,7,3
	.word	109025
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,33,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	98827
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_SCU_SEICON0_Bits',0,33,254,7,3
	.word	109574
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,33,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	399
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_SEICON1_Bits',0,33,138,8,3
	.word	109704
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,33,141,8,16,4,11
	.byte	'AE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1305
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_SEISR_Bits',0,33,151,8,3
	.word	109895
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,33,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	1305
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	422
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	422
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_STCON_Bits',0,33,161,8,3
	.word	110073
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,33,164,8,16,4,11
	.byte	'MEM',0,4
	.word	399
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM1_Bits',0,33,167,8,3
	.word	110224
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,33,170,8,16,4,11
	.byte	'MEM',0,4
	.word	399
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM2_Bits',0,33,173,8,3
	.word	110296
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,33,176,8,16,4,11
	.byte	'MEM',0,4
	.word	399
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM3_Bits',0,33,179,8,3
	.word	110368
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,33,182,8,16,4,11
	.byte	'MEM',0,4
	.word	399
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM4_Bits',0,33,185,8,3
	.word	110440
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,33,188,8,16,4,11
	.byte	'MEM',0,4
	.word	399
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM5_Bits',0,33,191,8,3
	.word	110512
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,33,194,8,16,4,11
	.byte	'MEM',0,4
	.word	399
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM6_Bits',0,33,197,8,3
	.word	110584
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,33,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	422
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	422
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	422
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	422
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	422
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	422
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	422
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	422
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_STSTAT_Bits',0,33,216,8,3
	.word	110656
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,33,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	1305
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,33,224,8,3
	.word	110985
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,33,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	422
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	422
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,33,234,8,3
	.word	111105
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,33,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	422
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	422
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_SYSCON_Bits',0,33,249,8,3
	.word	111275
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,33,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	1305
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	422
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	422
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	422
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	422
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	422
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,33,137,9,3
	.word	111538
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,33,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	422
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	399
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,33,144,9,3
	.word	111817
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,33,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	1305
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,33,151,9,3
	.word	111921
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,33,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	422
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	399
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,33,164,9,3
	.word	112027
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,33,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	399
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,33,174,9,3
	.word	112250
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,33,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	422
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	422
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	422
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	422
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	422
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	422
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	422
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	422
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	422
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	422
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,33,199,9,3
	.word	112398
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,33,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	422
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	422
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	422
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	422
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,33,215,9,3
	.word	112886
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,33,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	399
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSET_Bits',0,33,225,9,3
	.word	113183
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,33,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	399
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,33,235,9,3
	.word	113331
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,33,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	98827
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,33,244,9,3
	.word	113481
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,33,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	422
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,33,132,10,3
	.word	113611
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,33,135,10,16,4,11
	.byte	'AE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	422
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,33,148,10,3
	.word	113871
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,33,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	98827
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,33,157,10,3
	.word	114094
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,33,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	422
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,33,173,10,3
	.word	114220
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,33,176,10,16,4,11
	.byte	'AE',0,1
	.word	422
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	422
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	422
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	422
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	422
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	422
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	422
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	422
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	422
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	422
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	1305
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,33,189,10,3
	.word	114472
	.byte	12,33,197,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94599
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN00',0,33,202,10,3
	.word	114691
	.byte	12,33,205,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95158
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN01',0,33,210,10,3
	.word	114756
	.byte	12,33,213,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95237
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN10',0,33,218,10,3
	.word	114821
	.byte	12,33,221,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95797
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN11',0,33,226,10,3
	.word	114886
	.byte	12,33,229,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95878
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ARSTDIS',0,33,234,10,3
	.word	114951
	.byte	12,33,237,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96095
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON0',0,33,242,10,3
	.word	115016
	.byte	12,33,245,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96368
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON1',0,33,250,10,3
	.word	115081
	.byte	12,33,253,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96694
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON10',0,33,130,11,3
	.word	115146
	.byte	12,33,133,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96796
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON11',0,33,138,11,3
	.word	115212
	.byte	12,33,141,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96898
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON2',0,33,146,11,3
	.word	115278
	.byte	12,33,149,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97172
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON3',0,33,154,11,3
	.word	115343
	.byte	12,33,157,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97541
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON4',0,33,162,11,3
	.word	115408
	.byte	12,33,165,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97721
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON5',0,33,170,11,3
	.word	115473
	.byte	12,33,173,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97890
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON6',0,33,178,11,3
	.word	115538
	.byte	12,33,181,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97990
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON7',0,33,186,11,3
	.word	115603
	.byte	12,33,189,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98090
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON8',0,33,194,11,3
	.word	115668
	.byte	12,33,197,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98190
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON9',0,33,202,11,3
	.word	115733
	.byte	12,33,205,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98290
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CHIPID',0,33,210,11,3
	.word	115798
	.byte	12,33,213,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98493
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_DTSCLIM',0,33,218,11,3
	.word	115862
	.byte	12,33,221,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98725
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_DTSCSTAT',0,33,226,11,3
	.word	115927
	.byte	12,33,229,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98843
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EICON0',0,33,234,11,3
	.word	115993
	.byte	12,33,237,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98971
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EICON1',0,33,242,11,3
	.word	116057
	.byte	12,33,245,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99160
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EICR',0,33,250,11,3
	.word	116121
	.byte	12,33,253,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99524
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EIFILT',0,33,130,12,3
	.word	116183
	.byte	12,33,133,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99963
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EIFR',0,33,138,12,3
	.word	116247
	.byte	12,33,141,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100174
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EISR',0,33,146,12,3
	.word	116309
	.byte	12,33,149,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100350
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EMSR',0,33,154,12,3
	.word	116371
	.byte	12,33,157,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100544
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EMSSW',0,33,162,12,3
	.word	116433
	.byte	12,33,165,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100679
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,33,170,12,3
	.word	116496
	.byte	12,33,173,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100815
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ESROCFG',0,33,178,12,3
	.word	116569
	.byte	12,33,181,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100926
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EXTCON',0,33,186,12,3
	.word	116634
	.byte	12,33,189,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101144
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_FDR',0,33,194,12,3
	.word	116698
	.byte	12,33,197,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101307
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_FMR',0,33,202,12,3
	.word	116759
	.byte	12,33,205,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101643
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ID',0,33,210,12,3
	.word	116820
	.byte	12,33,213,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101750
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IGCR',0,33,218,12,3
	.word	116880
	.byte	12,33,221,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102202
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IN',0,33,226,12,3
	.word	116942
	.byte	12,33,229,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102301
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IOCR',0,33,234,12,3
	.word	117002
	.byte	12,33,237,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102451
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL0',0,33,242,12,3
	.word	117064
	.byte	12,33,245,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102689
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL1',0,33,250,12,3
	.word	117132
	.byte	12,33,253,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102850
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL2',0,33,130,13,3
	.word	117200
	.byte	12,33,133,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102956
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL3',0,33,138,13,3
	.word	117268
	.byte	12,33,141,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103042
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LCLCON0',0,33,146,13,3
	.word	117336
	.byte	12,33,149,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103210
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LCLCON1',0,33,154,13,3
	.word	117401
	.byte	12,33,157,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103378
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LCLTEST',0,33,162,13,3
	.word	117466
	.byte	12,33,165,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103692
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_MANID',0,33,170,13,3
	.word	117531
	.byte	12,33,173,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103803
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OMR',0,33,178,13,3
	.word	117594
	.byte	12,33,181,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103961
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OSCCON',0,33,186,13,3
	.word	117655
	.byte	12,33,189,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104372
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OUT',0,33,194,13,3
	.word	117719
	.byte	12,33,197,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104473
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OVCCON',0,33,202,13,3
	.word	117780
	.byte	12,33,205,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104791
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OVCENABLE',0,33,210,13,3
	.word	117844
	.byte	12,33,213,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104978
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDISC',0,33,218,13,3
	.word	117911
	.byte	12,33,221,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105089
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDR',0,33,226,13,3
	.word	117974
	.byte	12,33,229,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105222
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDRR',0,33,234,13,3
	.word	118035
	.byte	12,33,237,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105425
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PERPLLCON0',0,33,242,13,3
	.word	118097
	.byte	12,33,245,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105665
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PERPLLCON1',0,33,250,13,3
	.word	118165
	.byte	12,33,253,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105809
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PERPLLSTAT',0,33,130,14,3
	.word	118233
	.byte	12,33,133,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106031
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR0',0,33,138,14,3
	.word	118301
	.byte	12,33,141,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106167
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR1',0,33,146,14,3
	.word	118365
	.byte	12,33,149,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106303
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR2',0,33,154,14,3
	.word	118429
	.byte	12,33,157,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106439
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR3',0,33,162,14,3
	.word	118493
	.byte	12,33,165,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106575
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR4',0,33,170,14,3
	.word	118557
	.byte	12,33,173,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106711
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMCSR5',0,33,178,14,3
	.word	118621
	.byte	12,33,181,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106847
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSTAT0',0,33,186,14,3
	.word	118685
	.byte	12,33,189,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107119
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWCR1',0,33,194,14,3
	.word	118750
	.byte	12,33,197,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107364
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMTRCSR0',0,33,202,14,3
	.word	118815
	.byte	12,33,205,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107752
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMTRCSR1',0,33,210,14,3
	.word	118881
	.byte	12,33,213,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107870
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMTRCSR2',0,33,218,14,3
	.word	118947
	.byte	12,33,221,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108113
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMTRCSR3',0,33,226,14,3
	.word	119013
	.byte	12,33,229,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108380
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON',0,33,234,14,3
	.word	119079
	.byte	12,33,237,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108639
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON2',0,33,242,14,3
	.word	119143
	.byte	12,33,245,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108944
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON3',0,33,250,14,3
	.word	119208
	.byte	12,33,253,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109025
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTSTAT',0,33,130,15,3
	.word	119273
	.byte	12,33,133,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109574
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SEICON0',0,33,138,15,3
	.word	119338
	.byte	12,33,141,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109704
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SEICON1',0,33,146,15,3
	.word	119403
	.byte	12,33,149,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109895
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SEISR',0,33,154,15,3
	.word	119468
	.byte	12,33,157,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110073
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STCON',0,33,162,15,3
	.word	119531
	.byte	12,33,165,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110224
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM1',0,33,170,15,3
	.word	119594
	.byte	12,33,173,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110296
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM2',0,33,178,15,3
	.word	119658
	.byte	12,33,181,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110368
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM3',0,33,186,15,3
	.word	119722
	.byte	12,33,189,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110440
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM4',0,33,194,15,3
	.word	119786
	.byte	12,33,197,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110512
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM5',0,33,202,15,3
	.word	119850
	.byte	12,33,205,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110584
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STMEM6',0,33,210,15,3
	.word	119914
	.byte	12,33,213,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110656
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STSTAT',0,33,218,15,3
	.word	119978
	.byte	12,33,221,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110985
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SWAPCTRL',0,33,226,15,3
	.word	120042
	.byte	12,33,229,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111105
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SWRSTCON',0,33,234,15,3
	.word	120108
	.byte	12,33,237,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111275
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSCON',0,33,242,15,3
	.word	120174
	.byte	12,33,245,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111538
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLCON0',0,33,250,15,3
	.word	120238
	.byte	12,33,253,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111817
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLCON1',0,33,130,16,3
	.word	120306
	.byte	12,33,133,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111921
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLCON2',0,33,138,16,3
	.word	120374
	.byte	12,33,141,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112027
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSPLLSTAT',0,33,146,16,3
	.word	120442
	.byte	12,33,149,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112250
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPCLR',0,33,154,16,3
	.word	120510
	.byte	12,33,157,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112398
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPDIS0',0,33,162,16,3
	.word	120575
	.byte	12,33,165,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112886
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPDIS1',0,33,170,16,3
	.word	120641
	.byte	12,33,173,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113183
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSET',0,33,178,16,3
	.word	120707
	.byte	12,33,181,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113331
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSTAT',0,33,186,16,3
	.word	120772
	.byte	12,33,189,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113481
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTCPU_CON0',0,33,194,16,3
	.word	120838
	.byte	12,33,197,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113611
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTCPU_CON1',0,33,202,16,3
	.word	120907
	.byte	12,33,205,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113871
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTCPU_SR',0,33,210,16,3
	.word	120976
	.byte	12,33,213,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114094
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON0',0,33,218,16,3
	.word	121043
	.byte	12,33,221,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114220
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON1',0,33,226,16,3
	.word	121110
	.byte	12,33,229,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114472
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_SR',0,33,234,16,3
	.word	121177
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,33,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	116496
	.byte	4,2,35,0,0,14
	.word	121242
	.byte	30
	.byte	'Ifx_SCU_ESRCFGX',0,33,249,16,3
	.word	121283
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU',0,33,136,17,25,12,13
	.byte	'CON0',0
	.word	120838
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	120907
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	120976
	.byte	4,2,35,8,0,14
	.word	121313
	.byte	30
	.byte	'Ifx_SCU_WDTCPU',0,33,141,17,3
	.word	121376
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,33,156,17,25,12,13
	.byte	'CON0',0
	.word	121043
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	121110
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	121177
	.byte	4,2,35,8,0,14
	.word	121405
	.byte	30
	.byte	'Ifx_SCU_WDTS',0,33,161,17,3
	.word	121466
	.byte	30
	.byte	'IfxSrc_Tos',0,19,75,3
	.word	71670
	.byte	30
	.byte	'Ifx_SRC_SRCR_Bits',0,4,85,3
	.word	439
	.byte	30
	.byte	'Ifx_SRC_SRCR',0,4,98,3
	.word	729
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,4,110,25,4,13
	.byte	'SB',0
	.word	729
	.byte	4,2,35,0,0,14
	.word	121559
	.byte	30
	.byte	'Ifx_SRC_CPU_CPU',0,4,113,3
	.word	121594
	.byte	15,24
	.word	121559
	.byte	16,5,0,14
	.word	121623
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,4,128,1,25,24,13
	.byte	'CPU',0
	.word	121632
	.byte	24,2,35,0,0,14
	.word	121637
	.byte	30
	.byte	'Ifx_SRC_CPU',0,4,131,1,3
	.word	121670
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,4,146,1,25,4,13
	.byte	'SR',0
	.word	729
	.byte	4,2,35,0,0,14
	.word	121696
	.byte	30
	.byte	'Ifx_SRC_AGBT_AGBT',0,4,149,1,3
	.word	121734
	.byte	15,4
	.word	121696
	.byte	16,0,0,14
	.word	121766
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,4,164,1,25,4,13
	.byte	'AGBT',0
	.word	121775
	.byte	4,2,35,0,0,14
	.word	121780
	.byte	30
	.byte	'Ifx_SRC_AGBT',0,4,167,1,3
	.word	121815
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,4,182,1,25,4,13
	.byte	'SR',0
	.word	729
	.byte	4,2,35,0,0,14
	.word	121842
	.byte	30
	.byte	'Ifx_SRC_XBAR_XBAR',0,4,185,1,3
	.word	121880
	.byte	15,12
	.word	121842
	.byte	16,2,0,14
	.word	121912
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,4,200,1,25,12,13
	.byte	'XBAR',0
	.word	121921
	.byte	12,2,35,0,0,14
	.word	121926
	.byte	30
	.byte	'Ifx_SRC_XBAR',0,4,203,1,3
	.word	121961
	.byte	15,8
	.word	729
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,4,218,1,25,8,13
	.byte	'SR',0
	.word	121988
	.byte	8,2,35,0,0,14
	.word	121997
	.byte	30
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,4,221,1,3
	.word	122043
	.byte	14
	.word	121997
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,4,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	122083
	.byte	8,2,35,0,0,14
	.word	122088
	.byte	30
	.byte	'Ifx_SRC_CERBERUS',0,4,239,1,3
	.word	122131
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,4,254,1,25,12,13
	.byte	'TX',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	729
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	729
	.byte	4,2,35,8,0,14
	.word	122162
	.byte	30
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,4,131,2,3
	.word	122229
	.byte	15,144,1
	.word	122162
	.byte	16,11,0,14
	.word	122265
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,4,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	122275
	.byte	144,1,2,35,0,0,14
	.word	122280
	.byte	30
	.byte	'Ifx_SRC_ASCLIN',0,4,149,2,3
	.word	122321
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,4,164,2,25,20,13
	.byte	'TX',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	729
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	729
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	729
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	729
	.byte	4,2,35,16,0,14
	.word	122350
	.byte	30
	.byte	'Ifx_SRC_QSPI_QSPI',0,4,171,2,3
	.word	122436
	.byte	15,120
	.word	122350
	.byte	16,5,0,14
	.word	122468
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,4,186,2,25,120,13
	.byte	'QSPI',0
	.word	122477
	.byte	120,2,35,0,0,14
	.word	122482
	.byte	30
	.byte	'Ifx_SRC_QSPI',0,4,189,2,3
	.word	122517
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,4,204,2,25,4,13
	.byte	'SR',0
	.word	729
	.byte	4,2,35,0,0,14
	.word	122544
	.byte	30
	.byte	'Ifx_SRC_HSCT_HSCT',0,4,207,2,3
	.word	122582
	.byte	15,8
	.word	122544
	.byte	16,1,0,14
	.word	122614
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,4,222,2,25,8,13
	.byte	'HSCT',0
	.word	122623
	.byte	8,2,35,0,0,14
	.word	122628
	.byte	30
	.byte	'Ifx_SRC_HSCT',0,4,225,2,3
	.word	122663
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,4,240,2,25,16,13
	.byte	'COK',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	729
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	729
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	729
	.byte	4,2,35,12,0,14
	.word	122690
	.byte	30
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,4,246,2,3
	.word	122771
	.byte	15,64
	.word	122690
	.byte	16,3,0,14
	.word	122806
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,4,133,3,25,68,13
	.byte	'CH',0
	.word	122815
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	729
	.byte	4,2,35,64,0,14
	.word	122820
	.byte	30
	.byte	'Ifx_SRC_HSSL_HSSL',0,4,137,3,3
	.word	122871
	.byte	15,136,1
	.word	122820
	.byte	16,1,0,14
	.word	122903
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,4,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	122913
	.byte	136,1,2,35,0,0,14
	.word	122918
	.byte	30
	.byte	'Ifx_SRC_HSSL',0,4,155,3,3
	.word	122955
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,4,170,3,25,16,13
	.byte	'DTR',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	729
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	729
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3228
	.byte	4,2,35,12,0,14
	.word	122982
	.byte	30
	.byte	'Ifx_SRC_I2C_I2C',0,4,176,3,3
	.word	123063
	.byte	15,32
	.word	122982
	.byte	16,1,0,14
	.word	123093
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,4,191,3,25,32,13
	.byte	'I2C',0
	.word	123102
	.byte	32,2,35,0,0,14
	.word	123107
	.byte	30
	.byte	'Ifx_SRC_I2C',0,4,194,3,3
	.word	123140
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,4,209,3,25,4,13
	.byte	'SR',0
	.word	729
	.byte	4,2,35,0,0,14
	.word	123166
	.byte	30
	.byte	'Ifx_SRC_SENT_SENT',0,4,212,3,3
	.word	123204
	.byte	15,40
	.word	123166
	.byte	16,9,0,14
	.word	123236
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,4,227,3,25,40,13
	.byte	'SENT',0
	.word	123245
	.byte	40,2,35,0,0,14
	.word	123250
	.byte	30
	.byte	'Ifx_SRC_SENT',0,4,230,3,3
	.word	123285
	.byte	15,20
	.word	729
	.byte	16,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,4,245,3,25,20,13
	.byte	'SR',0
	.word	123312
	.byte	20,2,35,0,0,14
	.word	123321
	.byte	30
	.byte	'Ifx_SRC_MSC_MSC',0,4,248,3,3
	.word	123357
	.byte	15,80
	.word	123321
	.byte	16,3,0,14
	.word	123387
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,4,135,4,25,80,13
	.byte	'MSC',0
	.word	123396
	.byte	80,2,35,0,0,14
	.word	123401
	.byte	30
	.byte	'Ifx_SRC_MSC',0,4,138,4,3
	.word	123434
	.byte	15,16
	.word	729
	.byte	16,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,4,153,4,25,16,13
	.byte	'SR',0
	.word	123460
	.byte	16,2,35,0,0,14
	.word	123469
	.byte	30
	.byte	'Ifx_SRC_CCU6_CCU',0,4,156,4,3
	.word	123506
	.byte	15,32
	.word	123469
	.byte	16,1,0,14
	.word	123537
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,4,171,4,25,32,13
	.byte	'CCU',0
	.word	123546
	.byte	32,2,35,0,0,14
	.word	123551
	.byte	30
	.byte	'Ifx_SRC_CCU6',0,4,174,4,3
	.word	123585
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,4,189,4,25,24,13
	.byte	'CIRQ',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	729
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	729
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	729
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	729
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	729
	.byte	4,2,35,20,0,14
	.word	123612
	.byte	30
	.byte	'Ifx_SRC_GPT12_GPT12',0,4,197,4,3
	.word	123714
	.byte	15,24
	.word	123612
	.byte	16,0,0,14
	.word	123748
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,4,212,4,25,24,13
	.byte	'GPT12',0
	.word	123757
	.byte	24,2,35,0,0,14
	.word	123762
	.byte	30
	.byte	'Ifx_SRC_GPT12',0,4,215,4,3
	.word	123799
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,4,230,4,25,8,13
	.byte	'SR',0
	.word	121988
	.byte	8,2,35,0,0,14
	.word	123827
	.byte	30
	.byte	'Ifx_SRC_STM_STM',0,4,233,4,3
	.word	123863
	.byte	15,48
	.word	123827
	.byte	16,5,0,14
	.word	123893
	.byte	10
	.byte	'_Ifx_SRC_STM',0,4,248,4,25,48,13
	.byte	'STM',0
	.word	123902
	.byte	48,2,35,0,0,14
	.word	123907
	.byte	30
	.byte	'Ifx_SRC_STM',0,4,251,4,3
	.word	123940
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,4,138,5,25,4,13
	.byte	'SR',0
	.word	729
	.byte	4,2,35,0,0,14
	.word	123966
	.byte	30
	.byte	'Ifx_SRC_FCE_FCE0',0,4,141,5,3
	.word	124003
	.byte	14
	.word	123966
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,4,156,5,25,4,13
	.byte	'FCE0',0
	.word	124034
	.byte	4,2,35,0,0,14
	.word	124039
	.byte	30
	.byte	'Ifx_SRC_FCE',0,4,159,5,3
	.word	124073
	.byte	15,32
	.word	422
	.byte	16,31,0,15,128,4
	.word	729
	.byte	16,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,4,174,5,25,176,4,13
	.byte	'ERR',0
	.word	123460
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	124099
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	124108
	.byte	128,4,2,35,48,0,14
	.word	124118
	.byte	30
	.byte	'Ifx_SRC_DMA_DMA',0,4,179,5,3
	.word	124190
	.byte	15,176,4
	.word	124118
	.byte	16,0,0,14
	.word	124220
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,4,194,5,25,176,4,13
	.byte	'DMA',0
	.word	124230
	.byte	176,4,2,35,0,0,14
	.word	124235
	.byte	30
	.byte	'Ifx_SRC_DMA',0,4,197,5,3
	.word	124270
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,4,212,5,25,8,13
	.byte	'ERR',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	729
	.byte	4,2,35,4,0,14
	.word	124296
	.byte	30
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,4,216,5,3
	.word	124350
	.byte	15,8
	.word	124296
	.byte	16,0,0,14
	.word	124384
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,4,231,5,25,8,13
	.byte	'SDMMC',0
	.word	124393
	.byte	8,2,35,0,0,14
	.word	124398
	.byte	30
	.byte	'Ifx_SRC_SDMMC',0,4,234,5,3
	.word	124435
	.byte	15,40
	.word	729
	.byte	16,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,4,249,5,25,40,13
	.byte	'SR',0
	.word	124463
	.byte	40,2,35,0,0,14
	.word	124472
	.byte	30
	.byte	'Ifx_SRC_GETH_GETH',0,4,252,5,3
	.word	124510
	.byte	15,40
	.word	124472
	.byte	16,0,0,14
	.word	124542
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,4,139,6,25,40,13
	.byte	'GETH',0
	.word	124551
	.byte	40,2,35,0,0,14
	.word	124556
	.byte	30
	.byte	'Ifx_SRC_GETH',0,4,142,6,3
	.word	124591
	.byte	15,64
	.word	729
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,4,157,6,25,64,13
	.byte	'INT',0
	.word	124618
	.byte	64,2,35,0,0,14
	.word	124627
	.byte	30
	.byte	'Ifx_SRC_CAN_CAN',0,4,160,6,3
	.word	124664
	.byte	15,192,1
	.word	124627
	.byte	16,2,0,14
	.word	124694
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,4,175,6,25,192,1,13
	.byte	'CAN',0
	.word	124704
	.byte	192,1,2,35,0,0,14
	.word	124709
	.byte	30
	.byte	'Ifx_SRC_CAN',0,4,178,6,3
	.word	124744
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,4,193,6,25,16,13
	.byte	'SR0',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	729
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	729
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	729
	.byte	4,2,35,12,0,14
	.word	124770
	.byte	30
	.byte	'Ifx_SRC_VADC_G',0,4,199,6,3
	.word	124845
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,4,214,6,25,4,13
	.byte	'SR0',0
	.word	729
	.byte	4,2,35,0,0,14
	.word	124874
	.byte	30
	.byte	'Ifx_SRC_VADC_FC',0,4,217,6,3
	.word	124911
	.byte	15,192,1
	.word	124770
	.byte	16,11,0,14
	.word	124941
	.byte	15,32
	.word	124874
	.byte	16,7,0,14
	.word	124956
	.byte	15,32
	.word	124770
	.byte	16,1,0,14
	.word	124970
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,4,233,6,25,128,2,13
	.byte	'G',0
	.word	124951
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	124965
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	124979
	.byte	32,3,35,224,1,0,14
	.word	124984
	.byte	30
	.byte	'Ifx_SRC_VADC',0,4,238,6,3
	.word	125044
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,4,253,6,25,8,13
	.byte	'SRM',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	729
	.byte	4,2,35,4,0,14
	.word	125071
	.byte	30
	.byte	'Ifx_SRC_DSADC_DSADC',0,4,129,7,3
	.word	125125
	.byte	15,112
	.word	125071
	.byte	16,13,0,14
	.word	125159
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,4,144,7,25,112,13
	.byte	'DSADC',0
	.word	125168
	.byte	112,2,35,0,0,14
	.word	125173
	.byte	30
	.byte	'Ifx_SRC_DSADC',0,4,147,7,3
	.word	125210
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,4,162,7,25,48,13
	.byte	'INT0',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	729
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	729
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	729
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	729
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	729
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	729
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	729
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	729
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	729
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3892
	.byte	8,2,35,40,0,14
	.word	125238
	.byte	30
	.byte	'Ifx_SRC_ERAY_ERAY',0,4,175,7,3
	.word	125433
	.byte	15,96
	.word	125238
	.byte	16,1,0,14
	.word	125465
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,4,190,7,25,96,13
	.byte	'ERAY',0
	.word	125474
	.byte	96,2,35,0,0,14
	.word	125479
	.byte	30
	.byte	'Ifx_SRC_ERAY',0,4,193,7,3
	.word	125514
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,4,208,7,25,8,13
	.byte	'HSM',0
	.word	121988
	.byte	8,2,35,0,0,14
	.word	125541
	.byte	30
	.byte	'Ifx_SRC_HSM_HSM',0,4,211,7,3
	.word	125578
	.byte	15,8
	.word	125541
	.byte	16,0,0,14
	.word	125608
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,4,226,7,25,8,13
	.byte	'HSM',0
	.word	125617
	.byte	8,2,35,0,0,14
	.word	125622
	.byte	30
	.byte	'Ifx_SRC_HSM',0,4,229,7,3
	.word	125655
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,4,244,7,25,16,13
	.byte	'SCUERU',0
	.word	123460
	.byte	16,2,35,0,0,14
	.word	125681
	.byte	30
	.byte	'Ifx_SRC_SCU',0,4,247,7,3
	.word	125717
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,4,134,8,25,4,13
	.byte	'SR',0
	.word	729
	.byte	4,2,35,0,0,14
	.word	125743
	.byte	30
	.byte	'Ifx_SRC_PMS_PMS',0,4,137,8,3
	.word	125779
	.byte	15,16
	.word	125743
	.byte	16,3,0,14
	.word	125809
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,4,152,8,25,16,13
	.byte	'PMS',0
	.word	125818
	.byte	16,2,35,0,0,14
	.word	125823
	.byte	30
	.byte	'Ifx_SRC_PMS',0,4,155,8,3
	.word	125856
	.byte	15,12
	.word	729
	.byte	16,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,4,170,8,25,12,13
	.byte	'SR',0
	.word	125882
	.byte	12,2,35,0,0,14
	.word	125891
	.byte	30
	.byte	'Ifx_SRC_SMU_SMU',0,4,173,8,3
	.word	125927
	.byte	15,12
	.word	125891
	.byte	16,0,0,14
	.word	125957
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,4,188,8,25,12,13
	.byte	'SMU',0
	.word	125966
	.byte	12,2,35,0,0,14
	.word	125971
	.byte	30
	.byte	'Ifx_SRC_SMU',0,4,191,8,3
	.word	126004
	.byte	15,32
	.word	729
	.byte	16,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,4,206,8,25,32,13
	.byte	'SR',0
	.word	126030
	.byte	32,2,35,0,0,14
	.word	126039
	.byte	30
	.byte	'Ifx_SRC_PSI5_PSI5',0,4,209,8,3
	.word	126077
	.byte	15,32
	.word	126039
	.byte	16,0,0,14
	.word	126109
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,4,224,8,25,32,13
	.byte	'PSI5',0
	.word	126118
	.byte	32,2,35,0,0,14
	.word	126123
	.byte	30
	.byte	'Ifx_SRC_PSI5',0,4,227,8,3
	.word	126158
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,4,242,8,25,12,13
	.byte	'BFR',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	729
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	729
	.byte	4,2,35,8,0,14
	.word	126185
	.byte	30
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,4,247,8,3
	.word	126254
	.byte	14
	.word	126185
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,4,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	126289
	.byte	12,2,35,0,0,14
	.word	126294
	.byte	30
	.byte	'Ifx_SRC_HSPDM',0,4,137,9,3
	.word	126332
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,4,152,9,25,24,13
	.byte	'LI0',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	729
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	729
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	729
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	729
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	729
	.byte	4,2,35,20,0,14
	.word	126360
	.byte	30
	.byte	'Ifx_SRC_DAM_DAM',0,4,160,9,3
	.word	126461
	.byte	15,48
	.word	126360
	.byte	16,1,0,14
	.word	126491
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,4,175,9,25,48,13
	.byte	'DAM',0
	.word	126500
	.byte	48,2,35,0,0,14
	.word	126505
	.byte	30
	.byte	'Ifx_SRC_DAM',0,4,178,9,3
	.word	126538
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,4,193,9,25,32,13
	.byte	'SR',0
	.word	126030
	.byte	32,2,35,0,0,14
	.word	126564
	.byte	30
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,4,196,9,3
	.word	126604
	.byte	15,32
	.word	126564
	.byte	16,0,0,14
	.word	126638
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,4,211,9,25,32,13
	.byte	'PSI5S',0
	.word	126647
	.byte	32,2,35,0,0,14
	.word	126652
	.byte	30
	.byte	'Ifx_SRC_PSI5S',0,4,214,9,3
	.word	126689
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,4,229,9,25,8,13
	.byte	'ERR',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	729
	.byte	4,2,35,4,0,14
	.word	126717
	.byte	30
	.byte	'Ifx_SRC_RIF_RIF',0,4,233,9,3
	.word	126767
	.byte	15,16
	.word	126717
	.byte	16,1,0,14
	.word	126797
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,4,248,9,25,16,13
	.byte	'RIF',0
	.word	126806
	.byte	16,2,35,0,0,14
	.word	126811
	.byte	30
	.byte	'Ifx_SRC_RIF',0,4,251,9,3
	.word	126844
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,4,138,10,25,8,13
	.byte	'INT',0
	.word	729
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	729
	.byte	4,2,35,4,0,14
	.word	126870
	.byte	30
	.byte	'Ifx_SRC_SPU_SPU',0,4,142,10,3
	.word	126920
	.byte	15,16
	.word	126870
	.byte	16,1,0,14
	.word	126950
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,4,157,10,25,16,13
	.byte	'SPU',0
	.word	126959
	.byte	16,2,35,0,0,14
	.word	126964
	.byte	30
	.byte	'Ifx_SRC_SPU',0,4,160,10,3
	.word	126997
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,4,175,10,25,32,13
	.byte	'SR',0
	.word	126030
	.byte	32,2,35,0,0,14
	.word	127023
	.byte	30
	.byte	'Ifx_SRC_GPSR_GPSR',0,4,178,10,3
	.word	127061
	.byte	15,192,1
	.word	127023
	.byte	16,5,0,14
	.word	127093
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,4,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	127103
	.byte	192,1,2,35,0,0,14
	.word	127108
	.byte	30
	.byte	'Ifx_SRC_GPSR',0,4,196,10,3
	.word	127145
	.byte	30
	.byte	'IfxGeth_DmaBurstLength',0,5,94,3
	.word	72037
	.byte	30
	.byte	'IfxGeth_DmaChannel',0,5,104,3
	.word	72507
	.byte	18,5,108,9,1,19
	.byte	'IfxGeth_DmaInterruptFlag_transmitInterrupt',0,0,19
	.byte	'IfxGeth_DmaInterruptFlag_transmitStopped',0,1,19
	.byte	'IfxGeth_DmaInterruptFlag_transmitBufferUnavailable',0,2,19
	.byte	'IfxGeth_DmaInterruptFlag_receiveInterrupt',0,6,19
	.byte	'IfxGeth_DmaInterruptFlag_receiveBufferUnavailable',0,7,19
	.byte	'IfxGeth_DmaInterruptFlag_receiveStopped',0,8,19
	.byte	'IfxGeth_DmaInterruptFlag_receiveWatchdogTimeout',0,9,19
	.byte	'IfxGeth_DmaInterruptFlag_earlyTransmitInterrupt',0,10,19
	.byte	'IfxGeth_DmaInterruptFlag_earlyReceiveInterrupt',0,11,19
	.byte	'IfxGeth_DmaInterruptFlag_fatalBusError',0,12,19
	.byte	'IfxGeth_DmaInterruptFlag_contextDescriptorError',0,13,19
	.byte	'IfxGeth_DmaInterruptFlag_abnormalInterruptSummary',0,14,19
	.byte	'IfxGeth_DmaInterruptFlag_normalInterruptSummary',0,15,0,30
	.byte	'IfxGeth_DmaInterruptFlag',0,5,123,3
	.word	127230
	.byte	30
	.byte	'IfxGeth_LineSpeed',0,5,133,1,3
	.word	66459
	.byte	30
	.byte	'IfxGeth_PhyInterfaceMode',0,5,161,1,3
	.word	67656
	.byte	18,5,166,1,9,1,19
	.byte	'IfxGeth_PreambleLength_7Bytes',0,0,19
	.byte	'IfxGeth_PreambleLength_5Bytes',0,1,19
	.byte	'IfxGeth_PreambleLength_3Bytes',0,2,0,30
	.byte	'IfxGeth_PreambleLength',0,5,171,1,3
	.word	127951
	.byte	30
	.byte	'IfxGeth_QueueSize',0,5,210,1,3
	.word	70098
	.byte	30
	.byte	'IfxGeth_RxArbitrationAlgorithm',0,5,219,1,3
	.word	70018
	.byte	30
	.byte	'IfxGeth_RxDmaChannel',0,5,229,1,3
	.word	63176
	.byte	18,5,233,1,9,1,19
	.byte	'IfxGeth_RxMtlQueue_0',0,0,19
	.byte	'IfxGeth_RxMtlQueue_1',0,1,19
	.byte	'IfxGeth_RxMtlQueue_2',0,2,19
	.byte	'IfxGeth_RxMtlQueue_3',0,3,0,30
	.byte	'IfxGeth_RxMtlQueue',0,5,239,1,3
	.word	128183
	.byte	30
	.byte	'IfxGeth_ServiceRequest',0,5,255,1,3
	.word	71393
	.byte	30
	.byte	'IfxGeth_TxDmaChannel',0,5,137,2,3
	.word	61591
	.byte	30
	.byte	'IfxGeth_TxSchedulingAlgorithm',0,5,156,2,3
	.word	69940
	.byte	30
	.byte	'IfxGeth_DuplexMode',0,5,167,2,3
	.word	53376
	.byte	30
	.byte	'IfxGeth_LoopbackMode',0,5,176,2,3
	.word	69752
	.byte	30
	.byte	'IfxGeth_RxContextDescr0_Bits',0,5,189,2,3
	.word	63345
	.byte	30
	.byte	'IfxGeth_RxContextDescr1_Bits',0,5,196,2,3
	.word	63635
	.byte	30
	.byte	'IfxGeth_RxContextDescr2_Bits',0,5,203,2,3
	.word	63936
	.byte	30
	.byte	'IfxGeth_RxContextDescr3_Bits',0,5,213,2,3
	.word	64373
	.byte	30
	.byte	'IfxGeth_RxDescr0_RF_Bits',0,5,220,2,3
	.word	63283
	.byte	30
	.byte	'IfxGeth_RxDescr0_WF_Bits',0,5,228,2,3
	.word	63308
	.byte	30
	.byte	'IfxGeth_RxDescr1_RF_Bits',0,5,235,2,3
	.word	63419
	.byte	30
	.byte	'IfxGeth_RxDescr1_WF_Bits',0,5,253,2,3
	.word	63448
	.byte	30
	.byte	'IfxGeth_RxDescr2_RF_Bits',0,5,132,3,3
	.word	63709
	.byte	30
	.byte	'IfxGeth_RxDescr2_WF_Bits',0,5,150,3,3
	.word	63734
	.byte	30
	.byte	'IfxGeth_RxDescr3_RF_Bits',0,5,162,3,3
	.word	64016
	.byte	30
	.byte	'IfxGeth_RxDescr3_WF_Bits',0,5,184,3,3
	.word	64132
	.byte	30
	.byte	'IfxGeth_TxContextDescr0_Bits',0,5,191,3,3
	.word	61746
	.byte	30
	.byte	'IfxGeth_TxContextDescr1_Bits',0,5,198,3,3
	.word	61868
	.byte	30
	.byte	'IfxGeth_TxContextDescr2_Bits',0,5,207,3,3
	.word	62060
	.byte	30
	.byte	'IfxGeth_TxContextDescr3_Bits',0,5,225,3,3
	.word	62671
	.byte	30
	.byte	'IfxGeth_TxDescr0_RF_Bits',0,5,232,3,3
	.word	61698
	.byte	30
	.byte	'IfxGeth_TxDescr0_WF_Bits',0,5,239,3,3
	.word	61723
	.byte	30
	.byte	'IfxGeth_TxDescr1_RF_Bits',0,5,246,3,3
	.word	61820
	.byte	30
	.byte	'IfxGeth_TxDescr1_WF_Bits',0,5,253,3,3
	.word	61845
	.byte	30
	.byte	'IfxGeth_TxDescr2_RF_Bits',0,5,136,4,3
	.word	61942
	.byte	30
	.byte	'IfxGeth_TxDescr2_WF_Bits',0,5,143,4,3
	.word	62031
	.byte	30
	.byte	'IfxGeth_TxDescr3_RF_Bits',0,5,160,4,3
	.word	62171
	.byte	30
	.byte	'IfxGeth_TxDescr3_WF_Bits',0,5,186,4,3
	.word	62358
	.byte	30
	.byte	'IfxGeth_RxDescr0',0,5,200,4,3
	.word	63368
	.byte	30
	.byte	'IfxGeth_RxDescr1',0,5,210,4,3
	.word	63658
	.byte	30
	.byte	'IfxGeth_RxDescr2',0,5,220,4,3
	.word	63965
	.byte	30
	.byte	'IfxGeth_RxDescr3',0,5,230,4,3
	.word	64447
	.byte	30
	.byte	'IfxGeth_TxDescr0',0,5,240,4,3
	.word	61769
	.byte	30
	.byte	'IfxGeth_TxDescr1',0,5,250,4,3
	.word	61891
	.byte	30
	.byte	'IfxGeth_TxDescr2',0,5,132,5,3
	.word	62120
	.byte	30
	.byte	'IfxGeth_TxDescr3',0,5,142,5,3
	.word	62891
	.byte	30
	.byte	'IfxGeth_RxDescr',0,5,156,5,3
	.word	64498
	.byte	30
	.byte	'IfxGeth_TxDescr',0,5,166,5,3
	.word	62942
	.byte	30
	.byte	'IfxGeth_RxDescrList',0,5,177,5,3
	.word	64580
	.byte	30
	.byte	'IfxGeth_TxDescrList',0,5,184,5,3
	.word	63024
	.byte	30
	.byte	'Ifx_P_ACCEN0_Bits',0,8,102,3
	.word	59833
	.byte	30
	.byte	'Ifx_P_ACCEN1_Bits',0,8,108,3
	.word	59746
	.byte	30
	.byte	'Ifx_P_ESR_Bits',0,8,130,1,3
	.word	56323
	.byte	30
	.byte	'Ifx_P_ID_Bits',0,8,138,1,3
	.word	54401
	.byte	30
	.byte	'Ifx_P_IN_Bits',0,8,160,1,3
	.word	55388
	.byte	30
	.byte	'Ifx_P_IOCR0_Bits',0,8,173,1,3
	.word	54521
	.byte	30
	.byte	'Ifx_P_IOCR12_Bits',0,8,186,1,3
	.word	55168
	.byte	30
	.byte	'Ifx_P_IOCR4_Bits',0,8,199,1,3
	.word	54736
	.byte	30
	.byte	'Ifx_P_IOCR8_Bits',0,8,212,1,3
	.word	54951
	.byte	30
	.byte	'Ifx_P_LPCR_Bits',0,8,231,1,3
	.word	59408
	.byte	30
	.byte	'Ifx_P_OMCR_Bits',0,8,253,1,3
	.word	59060
	.byte	30
	.byte	'Ifx_P_OMCR0_Bits',0,8,136,2,3
	.word	58047
	.byte	30
	.byte	'Ifx_P_OMCR12_Bits',0,8,146,2,3
	.word	58571
	.byte	30
	.byte	'Ifx_P_OMCR4_Bits',0,8,157,2,3
	.word	58221
	.byte	30
	.byte	'Ifx_P_OMCR8_Bits',0,8,168,2,3
	.word	58395
	.byte	30
	.byte	'Ifx_P_OMR_Bits',0,8,205,2,3
	.word	53830
	.byte	30
	.byte	'Ifx_P_OMSR_Bits',0,8,227,2,3
	.word	58727
	.byte	30
	.byte	'Ifx_P_OMSR0_Bits',0,8,237,2,3
	.word	57384
	.byte	30
	.byte	'Ifx_P_OMSR12_Bits',0,8,248,2,3
	.word	57872
	.byte	30
	.byte	'Ifx_P_OMSR4_Bits',0,8,131,3,3
	.word	57531
	.byte	30
	.byte	'Ifx_P_OMSR8_Bits',0,8,142,3,3
	.word	57700
	.byte	30
	.byte	'Ifx_P_OUT_Bits',0,8,164,3,3
	.word	53514
	.byte	30
	.byte	'Ifx_P_PCSR_Bits',0,8,187,3,3
	.word	57020
	.byte	30
	.byte	'Ifx_P_PDISC_Bits',0,8,209,3,3
	.word	56654
	.byte	30
	.byte	'Ifx_P_PDR0_Bits',0,8,230,3,3
	.word	55703
	.byte	30
	.byte	'Ifx_P_PDR1_Bits',0,8,251,3,3
	.word	56007
	.byte	30
	.byte	'Ifx_P_ACCEN0',0,8,136,4,3
	.word	60360
	.byte	30
	.byte	'Ifx_P_ACCEN1',0,8,144,4,3
	.word	59793
	.byte	30
	.byte	'Ifx_P_ESR',0,8,152,4,3
	.word	56614
	.byte	30
	.byte	'Ifx_P_ID',0,8,160,4,3
	.word	54481
	.byte	30
	.byte	'Ifx_P_IN',0,8,168,4,3
	.word	55663
	.byte	30
	.byte	'Ifx_P_IOCR0',0,8,176,4,3
	.word	54696
	.byte	30
	.byte	'Ifx_P_IOCR12',0,8,184,4,3
	.word	55348
	.byte	30
	.byte	'Ifx_P_IOCR4',0,8,192,4,3
	.word	54911
	.byte	30
	.byte	'Ifx_P_IOCR8',0,8,200,4,3
	.word	55128
	.byte	30
	.byte	'Ifx_P_LPCR',0,8,208,4,3
	.word	59688
	.byte	30
	.byte	'Ifx_P_OMCR',0,8,216,4,3
	.word	59368
	.byte	30
	.byte	'Ifx_P_OMCR0',0,8,224,4,3
	.word	58181
	.byte	30
	.byte	'Ifx_P_OMCR12',0,8,232,4,3
	.word	58687
	.byte	30
	.byte	'Ifx_P_OMCR4',0,8,240,4,3
	.word	58355
	.byte	30
	.byte	'Ifx_P_OMCR8',0,8,248,4,3
	.word	58531
	.byte	30
	.byte	'Ifx_P_OMR',0,8,128,5,3
	.word	54361
	.byte	30
	.byte	'Ifx_P_OMSR',0,8,136,5,3
	.word	59020
	.byte	30
	.byte	'Ifx_P_OMSR0',0,8,144,5,3
	.word	57491
	.byte	30
	.byte	'Ifx_P_OMSR12',0,8,152,5,3
	.word	58007
	.byte	30
	.byte	'Ifx_P_OMSR4',0,8,160,5,3
	.word	57660
	.byte	30
	.byte	'Ifx_P_OMSR8',0,8,168,5,3
	.word	57832
	.byte	30
	.byte	'Ifx_P_OUT',0,8,176,5,3
	.word	53790
	.byte	30
	.byte	'Ifx_P_PCSR',0,8,184,5,3
	.word	57344
	.byte	30
	.byte	'Ifx_P_PDISC',0,8,192,5,3
	.word	56980
	.byte	30
	.byte	'Ifx_P_PDR0',0,8,200,5,3
	.word	55967
	.byte	30
	.byte	'Ifx_P_PDR1',0,8,208,5,3
	.word	56283
	.byte	14
	.word	60400
	.byte	30
	.byte	'Ifx_P',0,8,128,6,3
	.word	130827
	.byte	18,7,73,9,1,19
	.byte	'IfxPort_ControlledBy_port',0,0,19
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,30
	.byte	'IfxPort_ControlledBy',0,7,77,3
	.word	130847
	.byte	18,7,81,9,1,19
	.byte	'IfxPort_InputMode_undefined',0,127,19
	.byte	'IfxPort_InputMode_noPullDevice',0,0,19
	.byte	'IfxPort_InputMode_pullDown',0,8,19
	.byte	'IfxPort_InputMode_pullUp',0,16,0,30
	.byte	'IfxPort_InputMode',0,7,87,3
	.word	130938
	.byte	18,7,91,9,1,19
	.byte	'IfxPort_LvdsMode_high',0,0,19
	.byte	'IfxPort_LvdsMode_medium',0,1,0,30
	.byte	'IfxPort_LvdsMode',0,7,95,3
	.word	131089
	.byte	30
	.byte	'IfxPort_Mode',0,7,122,3
	.word	66742
	.byte	30
	.byte	'IfxPort_OutputIdx',0,7,136,1,3
	.word	61076
	.byte	30
	.byte	'IfxPort_OutputMode',0,7,145,1,3
	.word	60980
	.byte	18,7,151,1,9,1,19
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,19
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,19
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,19
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,19
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,19
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,19
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,19
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,19
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,19
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,19
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,19
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,30
	.byte	'IfxPort_PadDriver',0,7,165,1,3
	.word	131246
	.byte	18,7,169,1,9,1,19
	.byte	'IfxPort_PadSupply_3v',0,0,19
	.byte	'IfxPort_PadSupply_5v',0,1,0,30
	.byte	'IfxPort_PadSupply',0,7,173,1,3
	.word	131696
	.byte	18,7,177,1,9,1,19
	.byte	'IfxPort_PinFunctionMode_digital',0,0,19
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,30
	.byte	'IfxPort_PinFunctionMode',0,7,181,1,3
	.word	131776
	.byte	30
	.byte	'IfxPort_State',0,7,193,1,3
	.word	61389
	.byte	30
	.byte	'IfxPort_Pin',0,7,250,1,3
	.word	67759
	.byte	22
	.word	69054
	.byte	30
	.byte	'IfxGeth_Crs_In',0,17,61,3
	.word	131927
	.byte	22
	.word	67916
	.byte	30
	.byte	'IfxGeth_Crsdv_In',0,17,69,3
	.word	131955
	.byte	22
	.word	69238
	.byte	30
	.byte	'IfxGeth_Rxdv_In',0,17,77,3
	.word	131985
	.byte	22
	.word	68699
	.byte	30
	.byte	'IfxGeth_Rxctl_In',0,17,85,3
	.word	132014
	.byte	22
	.word	68760
	.byte	30
	.byte	'IfxGeth_Grefclk_In',0,17,93,3
	.word	132044
	.byte	22
	.word	67977
	.byte	30
	.byte	'IfxGeth_Refclk_In',0,17,101,3
	.word	132076
	.byte	22
	.word	68638
	.byte	30
	.byte	'IfxGeth_Rxclk_In',0,17,109,3
	.word	132107
	.byte	22
	.word	69177
	.byte	30
	.byte	'IfxGeth_Txclk_In',0,17,117,3
	.word	132137
	.byte	22
	.word	68038
	.byte	30
	.byte	'IfxGeth_Rxd_In',0,17,125,3
	.word	132167
	.byte	22
	.word	69115
	.byte	30
	.byte	'IfxGeth_Col_In',0,17,133,1,3
	.word	132195
	.byte	22
	.word	68244
	.byte	30
	.byte	'IfxGeth_Mdc_Out',0,17,141,1,3
	.word	132224
	.byte	22
	.word	68099
	.byte	30
	.byte	'IfxGeth_Mdio_InOut',0,17,150,1,3
	.word	132254
	.byte	22
	.word	68182
	.byte	30
	.byte	'IfxGeth_Txd_Out',0,17,158,1,3
	.word	132287
	.byte	22
	.word	68514
	.byte	30
	.byte	'IfxGeth_Txclk_Out',0,17,166,1,3
	.word	132317
	.byte	22
	.word	68306
	.byte	30
	.byte	'IfxGeth_Txen_Out',0,17,174,1,3
	.word	132349
	.byte	22
	.word	69361
	.byte	30
	.byte	'IfxGeth_Txer_Out',0,17,182,1,3
	.word	132380
	.byte	22
	.word	68576
	.byte	30
	.byte	'IfxGeth_Txctl_Out',0,17,190,1,3
	.word	132411
	.byte	22
	.word	69299
	.byte	30
	.byte	'IfxGeth_Rxer_In',0,17,198,1,3
	.word	132443
	.byte	22
	.word	68760
	.byte	42
	.byte	'IfxGeth_GREFCLK_P11_5_IN',0,17,213,1,31
	.word	132473
	.byte	1,1,22
	.word	68244
	.byte	42
	.byte	'IfxGeth_MDC_P12_0_OUT',0,17,215,1,28
	.word	132514
	.byte	1,1,22
	.word	68099
	.byte	42
	.byte	'IfxGeth_MDIO_P12_1_INOUT',0,17,218,1,31
	.word	132552
	.byte	1,1,22
	.word	68638
	.byte	42
	.byte	'IfxGeth_RXCLKA_P11_12_IN',0,17,222,1,29
	.word	132593
	.byte	1,1,22
	.word	68699
	.byte	42
	.byte	'IfxGeth_RXCTLA_P11_11_IN',0,17,225,1,29
	.word	132634
	.byte	1,1,22
	.word	68038
	.byte	42
	.byte	'IfxGeth_RXD0A_P11_10_IN',0,17,226,1,27
	.word	132675
	.byte	1,1,22
	.word	68038
	.byte	42
	.byte	'IfxGeth_RXD1A_P11_9_IN',0,17,227,1,27
	.word	132715
	.byte	1,1,22
	.word	68038
	.byte	42
	.byte	'IfxGeth_RXD2A_P11_8_IN',0,17,228,1,27
	.word	132754
	.byte	1,1,22
	.word	68038
	.byte	42
	.byte	'IfxGeth_RXD3A_P11_7_IN',0,17,229,1,27
	.word	132793
	.byte	1,1,22
	.word	68514
	.byte	42
	.byte	'IfxGeth_TXCLK_P11_4_OUT',0,17,237,1,30
	.word	132832
	.byte	1,1,22
	.word	68576
	.byte	42
	.byte	'IfxGeth_TXCTL_P11_6_OUT',0,17,238,1,30
	.word	132872
	.byte	1,1,22
	.word	68182
	.byte	42
	.byte	'IfxGeth_TXD0_P11_3_OUT',0,17,239,1,28
	.word	132912
	.byte	1,1,22
	.word	68182
	.byte	42
	.byte	'IfxGeth_TXD1_P11_2_OUT',0,17,240,1,28
	.word	132951
	.byte	1,1,22
	.word	68182
	.byte	42
	.byte	'IfxGeth_TXD2_P11_1_OUT',0,17,241,1,28
	.word	132990
	.byte	1,1,22
	.word	68182
	.byte	42
	.byte	'IfxGeth_TXD3_P11_0_OUT',0,17,242,1,28
	.word	133029
	.byte	1,1,30
	.byte	'IfxGeth_Eth_DmaInterruptConfig',0,9,141,2,3
	.word	72605
	.byte	30
	.byte	'IfxGeth_Eth_MiiPins',0,9,165,2,3
	.word	69423
	.byte	30
	.byte	'IfxGeth_Eth_MtlInterruptConfig',0,9,174,2,3
	.word	71801
	.byte	30
	.byte	'IfxGeth_Eth_RgmiiPins',0,9,195,2,3
	.word	68821
	.byte	30
	.byte	'IfxGeth_Eth_RmiiPins',0,9,210,2,3
	.word	68368
	.byte	30
	.byte	'IfxGeth_Eth_RxChannelConfig',0,9,221,2,3
	.word	72373
	.byte	30
	.byte	'IfxGeth_Eth_RxQueueConfig',0,9,234,2,3
	.word	71166
	.byte	30
	.byte	'IfxGeth_Eth_TxChannelConfig',0,9,245,2,3
	.word	72239
	.byte	30
	.byte	'IfxGeth_Eth_TxQueueConfig',0,9,254,2,3
	.word	71062
	.byte	30
	.byte	'IfxGeth_Eth_DmaConfig',0,9,145,3,3
	.word	72676
	.byte	30
	.byte	'IfxGeth_Eth_MacConfig',0,9,156,3,3
	.word	69829
	.byte	30
	.byte	'IfxGeth_Eth_MtlConfig',0,9,169,3,3
	.word	71868
	.byte	30
	.byte	'IfxGeth_Eth_PinConfig',0,9,178,3,3
	.word	69691
	.byte	30
	.byte	'IfxGeth_Eth_RxChannel',0,9,188,3,3
	.word	64619
	.byte	30
	.byte	'IfxGeth_Eth_TxChannel',0,9,199,3,3
	.word	63063
	.byte	30
	.byte	'IfxGeth_Eth',0,9,214,3,3
	.word	64712
	.byte	30
	.byte	'IfxGeth_Eth_Config',0,9,226,3,3
	.word	72906
	.byte	15,128,4
	.word	64580
	.byte	16,3,0,15,128,4
	.word	133617
	.byte	16,0,0,42
	.byte	'IfxGeth_Eth_rxDescrList',0,9,173,8,32
	.word	133627
	.byte	1,1,15,128,4
	.word	63024
	.byte	16,3,0,15,128,4
	.word	133672
	.byte	16,0,0,42
	.byte	'IfxGeth_Eth_txDescrList',0,9,177,8,32
	.word	133682
	.byte	1,1,10
	.byte	'udp_pcb',0,34,81,8,32,13
	.byte	'local_ip',0
	.word	65824
	.byte	4,2,35,0,13
	.byte	'remote_ip',0
	.word	65824
	.byte	4,2,35,4,13
	.byte	'netif_idx',0
	.word	422
	.byte	1,2,35,8,13
	.byte	'so_options',0
	.word	422
	.byte	1,2,35,9,13
	.byte	'tos',0
	.word	422
	.byte	1,2,35,10,13
	.byte	'ttl',0
	.word	422
	.byte	1,2,35,11,13
	.byte	'next',0
	.word	.L247-.L56
	.byte	4,2,35,12,13
	.byte	'flags',0
	.word	422
	.byte	1,2,35,16,13
	.byte	'local_port',0
	.word	1305
	.byte	2,2,35,18,13
	.byte	'remote_port',0
	.word	1305
	.byte	2,2,35,20,13
	.byte	'recv',0
	.word	.L248-.L56
	.byte	4,2,35,24,13
	.byte	'recv_arg',0
	.word	313
	.byte	4,2,35,28,0
.L247:
	.byte	3
	.word	133727
	.byte	41,1,1,24
	.word	313
	.byte	24
	.word	133945
	.byte	24
	.word	65522
	.byte	24
	.word	65905
	.byte	24
	.word	1305
	.byte	0,3
	.word	133950
.L248:
	.byte	30
	.byte	'udp_recv_fn',0,34,77,16
	.word	133979
	.byte	3
	.word	133950
	.byte	30
	.byte	'tcpwnd_size_t',0,35,53,15
	.word	1305
	.byte	43
	.byte	'tcp_state',0,35,56,6,1,19
	.byte	'CLOSED',0,0,19
	.byte	'LISTEN',0,1,19
	.byte	'SYN_SENT',0,2,19
	.byte	'SYN_RCVD',0,3,19
	.byte	'ESTABLISHED',0,4,19
	.byte	'FIN_WAIT_1',0,5,19
	.byte	'FIN_WAIT_2',0,6,19
	.byte	'CLOSE_WAIT',0,7,19
	.byte	'CLOSING',0,8,19
	.byte	'LAST_ACK',0,9,19
	.byte	'TIME_WAIT',0,10,0,10
	.byte	'tcp_hdr',0,38,56,8,20,13
	.byte	'src',0
	.word	1305
	.byte	2,2,35,0,13
	.byte	'dest',0
	.word	1305
	.byte	2,2,35,2,13
	.byte	'seqno',0
	.word	61570
	.byte	4,2,35,4,13
	.byte	'ackno',0
	.word	61570
	.byte	4,2,35,8,13
	.byte	'_hdrlen_rsvd_flags',0
	.word	1305
	.byte	2,2,35,12,13
	.byte	'wnd',0
	.word	1305
	.byte	2,2,35,14,13
	.byte	'chksum',0
	.word	1305
	.byte	2,2,35,16,13
	.byte	'urgp',0
	.word	1305
	.byte	2,2,35,18,0,3
	.word	134173
	.byte	10
	.byte	'tcp_seg',0,37,253,1,8,20,13
	.byte	'next',0
	.word	.L249-.L56
	.byte	4,2,35,0,13
	.byte	'p',0
	.word	65522
	.byte	4,2,35,4,13
	.byte	'len',0
	.word	1305
	.byte	2,2,35,8,13
	.byte	'oversize_left',0
	.word	1305
	.byte	2,2,35,10,13
	.byte	'flags',0
	.word	422
	.byte	1,2,35,12,13
	.byte	'tcphdr',0
	.word	134315
	.byte	4,2,35,16,0
.L249:
	.byte	3
	.word	134320
	.byte	10
	.byte	'tcp_pcb_listen',0,36,223,1,8,28,13
	.byte	'local_ip',0
	.word	65824
	.byte	4,2,35,0,13
	.byte	'remote_ip',0
	.word	65824
	.byte	4,2,35,4,13
	.byte	'netif_idx',0
	.word	422
	.byte	1,2,35,8,13
	.byte	'so_options',0
	.word	422
	.byte	1,2,35,9,13
	.byte	'tos',0
	.word	422
	.byte	1,2,35,10,13
	.byte	'ttl',0
	.word	422
	.byte	1,2,35,11,13
	.byte	'next',0
	.word	.L250-.L56
	.byte	4,2,35,12,13
	.byte	'callback_arg',0
	.word	313
	.byte	4,2,35,16,13
	.byte	'state',0
	.word	134031
	.byte	1,2,35,20,13
	.byte	'prio',0
	.word	422
	.byte	1,2,35,21,13
	.byte	'local_port',0
	.word	1305
	.byte	2,2,35,22,13
	.byte	'accept',0
	.word	.L251-.L56
	.byte	4,2,35,24,0
.L250:
	.byte	3
	.word	134432
	.byte	29
	.word	65279
	.byte	1,1,24
	.word	313
	.byte	24
	.word	.L252-.L56
	.byte	24
	.word	1305
	.byte	0,3
	.word	134662
	.byte	30
	.byte	'tcp_sent_fn',0,36,96,17
	.word	134685
	.byte	29
	.word	65279
	.byte	1,1,24
	.word	313
	.byte	24
	.word	.L252-.L56
	.byte	24
	.word	65522
	.byte	24
	.word	65279
	.byte	0,3
	.word	134710
	.byte	30
	.byte	'tcp_recv_fn',0,36,82,17
	.word	134738
	.byte	30
	.byte	'tcp_connected_fn',0,36,134,1,17
	.word	.L253-.L56
	.byte	29
	.word	65279
	.byte	1,1,24
	.word	313
	.byte	24
	.word	.L252-.L56
	.byte	0,3
	.word	134789
	.byte	30
	.byte	'tcp_poll_fn',0,36,108,17
	.word	134807
	.byte	41,1,1,24
	.word	313
	.byte	24
	.word	65279
	.byte	0,3
	.word	134832
	.byte	30
	.byte	'tcp_err_fn',0,36,120,17
	.word	134846
	.byte	10
	.byte	'tcp_pcb',0,36,242,1,8,156,1,13
	.byte	'local_ip',0
	.word	65824
	.byte	4,2,35,0,13
	.byte	'remote_ip',0
	.word	65824
	.byte	4,2,35,4,13
	.byte	'netif_idx',0
	.word	422
	.byte	1,2,35,8,13
	.byte	'so_options',0
	.word	422
	.byte	1,2,35,9,13
	.byte	'tos',0
	.word	422
	.byte	1,2,35,10,13
	.byte	'ttl',0
	.word	422
	.byte	1,2,35,11,13
	.byte	'next',0
	.word	.L252-.L56
	.byte	4,2,35,12,13
	.byte	'callback_arg',0
	.word	313
	.byte	4,2,35,16,13
	.byte	'state',0
	.word	134031
	.byte	1,2,35,20,13
	.byte	'prio',0
	.word	422
	.byte	1,2,35,21,13
	.byte	'local_port',0
	.word	1305
	.byte	2,2,35,22,13
	.byte	'remote_port',0
	.word	1305
	.byte	2,2,35,24,13
	.byte	'flags',0
	.word	1305
	.byte	2,2,35,26,13
	.byte	'polltmr',0
	.word	422
	.byte	1,2,35,28,13
	.byte	'pollinterval',0
	.word	422
	.byte	1,2,35,29,13
	.byte	'last_timer',0
	.word	422
	.byte	1,2,35,30,13
	.byte	'tmr',0
	.word	61570
	.byte	4,2,35,32,13
	.byte	'rcv_nxt',0
	.word	61570
	.byte	4,2,35,36,13
	.byte	'rcv_wnd',0
	.word	1305
	.byte	2,2,35,40,13
	.byte	'rcv_ann_wnd',0
	.word	1305
	.byte	2,2,35,42,13
	.byte	'rcv_ann_right_edge',0
	.word	61570
	.byte	4,2,35,44,13
	.byte	'rtime',0
	.word	65718
	.byte	2,2,35,48,13
	.byte	'mss',0
	.word	1305
	.byte	2,2,35,50,13
	.byte	'rttest',0
	.word	61570
	.byte	4,2,35,52,13
	.byte	'rtseq',0
	.word	61570
	.byte	4,2,35,56,13
	.byte	'sa',0
	.word	65718
	.byte	2,2,35,60,13
	.byte	'sv',0
	.word	65718
	.byte	2,2,35,62,13
	.byte	'rto',0
	.word	65718
	.byte	2,2,35,64,13
	.byte	'nrtx',0
	.word	422
	.byte	1,2,35,66,13
	.byte	'dupacks',0
	.word	422
	.byte	1,2,35,67,13
	.byte	'lastack',0
	.word	61570
	.byte	4,2,35,68,13
	.byte	'cwnd',0
	.word	1305
	.byte	2,2,35,72,13
	.byte	'ssthresh',0
	.word	1305
	.byte	2,2,35,74,13
	.byte	'rto_end',0
	.word	61570
	.byte	4,2,35,76,13
	.byte	'snd_nxt',0
	.word	61570
	.byte	4,2,35,80,13
	.byte	'snd_wl1',0
	.word	61570
	.byte	4,2,35,84,13
	.byte	'snd_wl2',0
	.word	61570
	.byte	4,2,35,88,13
	.byte	'snd_lbb',0
	.word	61570
	.byte	4,2,35,92,13
	.byte	'snd_wnd',0
	.word	1305
	.byte	2,2,35,96,13
	.byte	'snd_wnd_max',0
	.word	1305
	.byte	2,2,35,98,13
	.byte	'snd_buf',0
	.word	1305
	.byte	2,2,35,100,13
	.byte	'snd_queuelen',0
	.word	1305
	.byte	2,2,35,102,13
	.byte	'unsent_oversize',0
	.word	1305
	.byte	2,2,35,104,13
	.byte	'bytes_acked',0
	.word	1305
	.byte	2,2,35,106,13
	.byte	'unsent',0
	.word	134427
	.byte	4,2,35,108,13
	.byte	'unacked',0
	.word	134427
	.byte	4,2,35,112,13
	.byte	'ooseq',0
	.word	134427
	.byte	4,2,35,116,13
	.byte	'refused_data',0
	.word	65522
	.byte	4,2,35,120,13
	.byte	'listener',0
	.word	134657
	.byte	4,2,35,124,13
	.byte	'sent',0
	.word	134690
	.byte	4,3,35,128,1,13
	.byte	'recv',0
	.word	134743
	.byte	4,3,35,132,1,13
	.byte	'connected',0
	.word	134763
	.byte	4,3,35,136,1,13
	.byte	'poll',0
	.word	134812
	.byte	4,3,35,140,1,13
	.byte	'errf',0
	.word	134851
	.byte	4,3,35,144,1,13
	.byte	'keep_idle',0
	.word	61570
	.byte	4,3,35,148,1,13
	.byte	'persist_cnt',0
	.word	422
	.byte	1,3,35,152,1,13
	.byte	'persist_backoff',0
	.word	422
	.byte	1,3,35,153,1,13
	.byte	'persist_probe',0
	.word	422
	.byte	1,3,35,154,1,13
	.byte	'keep_cnt_sent',0
	.word	422
	.byte	1,3,35,155,1,0
.L252:
	.byte	3
	.word	134870
	.byte	29
	.word	65279
	.byte	1,1,24
	.word	313
	.byte	24
	.word	135932
	.byte	24
	.word	65279
	.byte	0
.L253:
	.byte	3
	.word	135937
.L251:
	.byte	30
	.byte	'tcp_accept_fn',0,36,70,17
	.word	135960
	.byte	3
	.word	135937
	.byte	3
	.word	134662
	.byte	3
	.word	134710
	.byte	3
	.word	135937
	.byte	3
	.word	134789
	.byte	3
	.word	134832
	.byte	41,1,1,24
	.word	422
	.byte	24
	.word	313
	.byte	0,3
	.word	136017
	.byte	30
	.byte	'tcp_extarg_callback_pcb_destroyed_fn',0,36,173,1,16
	.word	136031
	.byte	29
	.word	65279
	.byte	1,1,24
	.word	422
	.byte	24
	.word	134657
	.byte	24
	.word	135932
	.byte	0,3
	.word	136082
	.byte	30
	.byte	'tcp_extarg_callback_passive_open_fn',0,36,182,1,17
	.word	136105
	.byte	30
	.byte	'tcpflags_t',0,36,206,1,15
	.word	1305
	.byte	30
	.byte	'netif_t',0,10,83,25
	.word	66033
	.byte	30
	.byte	'pbuf_t',0,10,84,25
	.word	65382
	.byte	10
	.byte	'eth_addr',0,39,60,8,6,13
	.byte	'addr',0
	.word	66015
	.byte	6,2,35,0,0,30
	.byte	'eth_addr_t',0,10,86,25
	.word	136206
	.byte	20,10,103,5,8,13
	.byte	'arp',0
	.word	1305
	.byte	2,2,35,0,13
	.byte	'tcp_fast',0
	.word	1305
	.byte	2,2,35,2,13
	.byte	'tcp_slow',0
	.word	1305
	.byte	2,2,35,4,13
	.byte	'link',0
	.word	1305
	.byte	2,2,35,6,0,14
	.word	1305
	.byte	20,10,96,9,68,13
	.byte	'netif',0
	.word	66033
	.byte	48,2,35,0,13
	.byte	'eth_addr',0
	.word	136206
	.byte	6,2,35,48,13
	.byte	'timer',0
	.word	136254
	.byte	8,2,35,56,13
	.byte	'timerFlags',0
	.word	136323
	.byte	2,2,35,64,0,30
	.byte	'Ifx_Lwip',0,10,116,3
	.word	136328
	.byte	42
	.byte	'g_Lwip',0,10,134,1,21
	.word	136328
	.byte	1,1,42
	.byte	'g_IfxGeth',0,10,135,1,24
	.word	64712
	.byte	1,1,15,144,20
	.word	422
	.byte	16,143,20,0,15,128,161,1
	.word	136458
	.byte	16,7,0,42
	.byte	'channel0TxBuffer1',0,10,136,1,18
	.word	136469
	.byte	1,1,42
	.byte	'channel0RxBuffer1',0,10,137,1,18
	.word	136469
	.byte	1,1,10
	.byte	'_Ifx_CPU_A_Bits',0,40,68,16,4,11
	.byte	'ADDR',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_A_Bits',0,40,71,3
	.word	136538
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,40,74,16,4,11
	.byte	'VSS',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	98827
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_CPU_BIV_Bits',0,40,78,3
	.word	136599
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,40,81,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	98827
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	98827
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	98827
	.byte	4,0,2,35,0,0,30
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,40,87,3
	.word	136678
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,40,90,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	98827
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	98827
	.byte	4,0,2,35,0,0,30
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,40,95,3
	.word	136816
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,40,98,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	98827
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	98827
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	98827
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	98827
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,40,106,3
	.word	136937
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,40,109,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	98827
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_CPU_BTV_Bits',0,40,113,3
	.word	137113
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,40,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	98827
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_CCNT_Bits',0,40,120,3
	.word	137199
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,40,123,16,4,11
	.byte	'CM',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	98827
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	98827
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	98827
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	98827
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_CPU_CCTRL_Bits',0,40,131,1,3
	.word	137288
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,40,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	98827
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_COMPAT_Bits',0,40,140,1,3
	.word	137435
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,40,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	98827
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	98827
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_CPU_CORE_ID_Bits',0,40,147,1,3
	.word	137564
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,40,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	98827
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_CPR_L_Bits',0,40,154,1,3
	.word	137664
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,40,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	98827
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_CPR_U_Bits',0,40,161,1,3
	.word	137759
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,40,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	98827
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	98827
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_CPU_CPU_ID_Bits',0,40,169,1,3
	.word	137854
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,40,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	98827
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	98827
	.byte	22,0,2,35,0,0,30
	.byte	'Ifx_CPU_CPXE_Bits',0,40,176,1,3
	.word	137964
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,40,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	98827
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	98827
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	98827
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_CPU_CREVT_Bits',0,40,187,1,3
	.word	138056
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,40,190,1,16,4,11
	.byte	'CID',0,4
	.word	98827
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	98827
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_CPU_CUS_ID_Bits',0,40,194,1,3
	.word	138210
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,40,197,1,16,4,11
	.byte	'DATA',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_D_Bits',0,40,200,1,3
	.word	138304
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,40,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	98827
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	98827
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_CPU_DATR_Bits',0,40,214,1,3
	.word	138367
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,40,217,1,16,4,11
	.byte	'DE',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	98827
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	98827
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	98827
	.byte	19,0,2,35,0,0,30
	.byte	'Ifx_CPU_DBGSR_Bits',0,40,228,1,3
	.word	138593
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,40,231,1,16,4,11
	.byte	'DTA',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	98827
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_CPU_DBGTCR_Bits',0,40,235,1,3
	.word	138808
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,40,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	98827
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_CPU_DCON0_Bits',0,40,243,1,3
	.word	138902
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,40,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	98827
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_CPU_DCON2_Bits',0,40,250,1,3
	.word	139018
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,40,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	98827
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_CPU_DCX_Bits',0,40,129,2,3
	.word	139119
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,40,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_DEADD_Bits',0,40,135,2,3
	.word	139212
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,40,138,2,16,4,11
	.byte	'TA',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_DIEAR_Bits',0,40,141,2,3
	.word	139292
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,40,144,2,16,4,11
	.byte	'IED',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	98827
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	98827
	.byte	15,0,2,35,0,0,30
	.byte	'Ifx_CPU_DIETR_Bits',0,40,159,2,3
	.word	139361
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,40,162,2,16,4,11
	.byte	'EN0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,40,196,2,3
	.word	139645
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,40,199,2,16,4,11
	.byte	'EN0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,40,233,2,3
	.word	140236
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,40,236,2,16,4,11
	.byte	'EN32',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,40,142,3,3
	.word	140827
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,40,145,3,16,4,11
	.byte	'EN32',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,40,179,3,3
	.word	141428
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,40,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	98827
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,40,186,3,3
	.word	142029
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,40,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	98827
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,40,193,3,3
	.word	142144
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,40,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	98827
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_CPU_DMS_Bits',0,40,200,3,3
	.word	142259
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,40,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	98827
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	98827
	.byte	14,0,2,35,0,0,30
	.byte	'Ifx_CPU_DPRE_Bits',0,40,207,3,3
	.word	142352
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,40,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	98827
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_CPU_DPR_L_Bits',0,40,214,3,3
	.word	142444
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,40,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	98827
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_CPU_DPR_U_Bits',0,40,221,3,3
	.word	142539
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,40,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	98827
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	98827
	.byte	14,0,2,35,0,0,30
	.byte	'Ifx_CPU_DPWE_Bits',0,40,228,3,3
	.word	142634
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,40,231,3,16,4,11
	.byte	'SRE',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	98827
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	98827
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	98827
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	98827
	.byte	7,0,2,35,0,0,30
	.byte	'Ifx_CPU_DSTR_Bits',0,40,250,3,3
	.word	142726
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,40,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	98827
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	98827
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	98827
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_CPU_EXEVT_Bits',0,40,133,4,3
	.word	143065
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,40,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	98827
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	98827
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	98827
	.byte	12,0,2,35,0,0,30
	.byte	'Ifx_CPU_FCX_Bits',0,40,141,4,3
	.word	143219
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,40,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	98827
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	98827
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	98827
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	98827
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	98827
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	98827
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	98827
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	98827
	.byte	2,0,2,35,0,0,30
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,40,154,4,3
	.word	143325
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,40,157,4,16,4,11
	.byte	'STALL',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	98827
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	98827
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	98827
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	98827
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	98827
	.byte	6,0,2,35,0,0,30
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,40,165,4,3
	.word	143543
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,40,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	98827
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	98827
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	98827
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	98827
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	98827
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	98827
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	98827
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	98827
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	98827
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	98827
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	98827
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	98827
	.byte	2,0,2,35,0,0,30
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,40,182,4,3
	.word	143734
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,40,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	98827
	.byte	22,0,2,35,0,0,30
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,40,198,4,3
	.word	144034
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,40,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	98827
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,40,205,4,3
	.word	144339
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,40,208,4,16,4,11
	.byte	'TST',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	98827
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	98827
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	98827
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	98827
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,40,227,4,3
	.word	144440
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,40,230,4,16,4,11
	.byte	'OPC',0,4
	.word	98827
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	98827
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	98827
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	98827
	.byte	12,0,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,40,237,4,3
	.word	144789
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,40,240,4,16,4,11
	.byte	'PC',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,40,243,4,3
	.word	144949
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,40,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,40,249,4,3
	.word	145030
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,40,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,40,255,4,3
	.word	145117
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,40,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,40,133,5,3
	.word	145204
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,40,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	98827
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_ICNT_Bits',0,40,140,5,3
	.word	145291
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,40,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	98827
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	98827
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	98827
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	98827
	.byte	8,0,2,35,0,0,30
	.byte	'Ifx_CPU_ICR_Bits',0,40,150,5,3
	.word	145382
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,40,153,5,16,4,11
	.byte	'ISP',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_ISP_Bits',0,40,156,5,3
	.word	145524
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,40,159,5,16,4,11
	.byte	'RST',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	98827
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	98827
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_CPU_KRST0_Bits',0,40,164,5,3
	.word	145590
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,40,167,5,16,4,11
	.byte	'RST',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	98827
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_CPU_KRST1_Bits',0,40,171,5,3
	.word	145701
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,40,174,5,16,4,11
	.byte	'CLR',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	98827
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,40,178,5,3
	.word	145793
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,40,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	98827
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	98827
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	98827
	.byte	12,0,2,35,0,0,30
	.byte	'Ifx_CPU_LCX_Bits',0,40,186,5,3
	.word	145889
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,40,189,5,16,4,11
	.byte	'EN0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,40,223,5,3
	.word	145995
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,40,226,5,16,4,11
	.byte	'EN32',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,40,132,6,3
	.word	146578
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,40,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	98827
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_M1CNT_Bits',0,40,139,6,3
	.word	147171
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,40,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	98827
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_M2CNT_Bits',0,40,146,6,3
	.word	147264
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,40,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	98827
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_M3CNT_Bits',0,40,153,6,3
	.word	147357
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,40,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_OSEL_Bits',0,40,159,6,3
	.word	147450
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,40,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	98827
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_CPU_PC_Bits',0,40,166,6,3
	.word	147523
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,40,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	98827
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_CPU_PCON0_Bits',0,40,174,6,3
	.word	147608
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,40,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	98827
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_CPU_PCON1_Bits',0,40,182,6,3
	.word	147724
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,40,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	98827
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_CPU_PCON2_Bits',0,40,189,6,3
	.word	147835
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,40,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	98827
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	98827
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	98827
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	98827
	.byte	2,0,2,35,0,0,30
	.byte	'Ifx_CPU_PCXI_Bits',0,40,200,6,3
	.word	147936
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,40,203,6,16,4,11
	.byte	'TA',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_PIEAR_Bits',0,40,206,6,3
	.word	148089
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,40,209,6,16,4,11
	.byte	'IED',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	98827
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	98827
	.byte	15,0,2,35,0,0,30
	.byte	'Ifx_CPU_PIETR_Bits',0,40,224,6,3
	.word	148158
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,40,227,6,16,4,11
	.byte	'DAC',0,4
	.word	98827
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_CPU_PMA0_Bits',0,40,231,6,3
	.word	148442
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,40,234,6,16,4,11
	.byte	'CAC',0,4
	.word	98827
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_CPU_PMA1_Bits',0,40,238,6,3
	.word	148533
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,40,241,6,16,4,11
	.byte	'PSI',0,4
	.word	98827
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	98827
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_CPU_PMA2_Bits',0,40,245,6,3
	.word	148624
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,40,248,6,16,4,11
	.byte	'FRE',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	98827
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	98827
	.byte	17,0,2,35,0,0,30
	.byte	'Ifx_CPU_PSTR_Bits',0,40,130,7,3
	.word	148715
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,40,133,7,16,4,11
	.byte	'CDC',0,4
	.word	98827
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	98827
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	98827
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	98827
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	98827
	.byte	8,0,2,35,0,0,30
	.byte	'Ifx_CPU_PSW_Bits',0,40,145,7,3
	.word	148918
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,40,148,7,16,4,11
	.byte	'EN0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,40,182,7,3
	.word	149123
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,40,185,7,16,4,11
	.byte	'EN32',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,40,219,7,3
	.word	149690
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,40,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	98827
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_RGN_LA_Bits',0,40,226,7,3
	.word	150267
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,40,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	98827
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_RGN_UA_Bits',0,40,233,7,3
	.word	150362
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,40,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	98827
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	98827
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	98827
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_SEGEN_Bits',0,40,242,7,3
	.word	150457
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,40,245,7,16,4,11
	.byte	'EN0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,40,151,8,3
	.word	150585
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,40,154,8,16,4,11
	.byte	'EN32',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,40,188,8,3
	.word	151168
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,40,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	98827
	.byte	7,0,2,35,0,0,30
	.byte	'Ifx_CPU_SMACON_Bits',0,40,196,8,3
	.word	151761
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,40,199,8,16,4,11
	.byte	'EN0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,40,233,8,3
	.word	151879
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,40,236,8,16,4,11
	.byte	'EN32',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	98827
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	98827
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	98827
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	98827
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	98827
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	98827
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	98827
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	98827
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	98827
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	98827
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	98827
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	98827
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	98827
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,40,142,9,3
	.word	152468
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,40,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	98827
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	98827
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	98827
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_CPU_SWEVT_Bits',0,40,153,9,3
	.word	153067
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,40,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	98827
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	98827
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	98827
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	98827
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	98827
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	98827
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	98827
	.byte	7,0,2,35,0,0,30
	.byte	'Ifx_CPU_SYSCON_Bits',0,40,171,9,3
	.word	153221
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,40,174,9,16,4,11
	.byte	'ASI',0,4
	.word	98827
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	98827
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,40,178,9,3
	.word	153520
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,40,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	98827
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	98827
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	98827
	.byte	15,0,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_CON_Bits',0,40,189,9,3
	.word	153618
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,40,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	98827
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	98827
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,40,196,9,3
	.word	153790
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,40,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	98827
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	98827
	.byte	20,0,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,40,203,9,3
	.word	153919
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,40,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	98827
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	98827
	.byte	20,0,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,40,211,9,3
	.word	154049
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,40,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	98827
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	98827
	.byte	8,0,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,40,218,9,3
	.word	154201
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,40,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	98827
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	98827
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	98827
	.byte	8,0,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,40,226,9,3
	.word	154328
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,40,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	98827
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	98827
	.byte	12,0,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,40,233,9,3
	.word	154477
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,40,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	98827
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	98827
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	98827
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	98827
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	98827
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	98827
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	98827
	.byte	1,0,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,40,246,9,3
	.word	154591
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,40,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,40,252,9,3
	.word	154835
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,40,255,9,16,4,11
	.byte	'T0',0,4
	.word	98827
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	98827
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	98827
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	98827
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	98827
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	98827
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,40,138,10,3
	.word	154915
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,40,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	98827
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_TR_ADR_Bits',0,40,144,10,3
	.word	155110
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,40,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	98827
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	98827
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	98827
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	98827
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	98827
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	98827
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	98827
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	98827
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	98827
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	98827
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	98827
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	98827
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	98827
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	98827
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	98827
	.byte	3,0,2,35,0,0,30
	.byte	'Ifx_CPU_TR_EVT_Bits',0,40,164,10,3
	.word	155183
	.byte	12,40,172,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136538
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_A',0,40,177,10,3
	.word	155501
	.byte	12,40,180,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136599
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_BIV',0,40,185,10,3
	.word	155560
	.byte	12,40,188,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136678
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_BLK_OMASK',0,40,193,10,3
	.word	155621
	.byte	12,40,196,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136816
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_BLK_OTAR',0,40,201,10,3
	.word	155688
	.byte	12,40,204,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136937
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_BLK_RABR',0,40,209,10,3
	.word	155754
	.byte	12,40,212,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137113
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_BTV',0,40,217,10,3
	.word	155820
	.byte	12,40,220,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137199
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_CCNT',0,40,225,10,3
	.word	155881
	.byte	12,40,228,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137288
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_CCTRL',0,40,233,10,3
	.word	155943
	.byte	12,40,236,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137435
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_COMPAT',0,40,241,10,3
	.word	156006
	.byte	12,40,244,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137564
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_CORE_ID',0,40,249,10,3
	.word	156070
	.byte	12,40,252,10,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137664
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_CPR_L',0,40,129,11,3
	.word	156135
	.byte	12,40,132,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137759
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_CPR_U',0,40,137,11,3
	.word	156198
	.byte	12,40,140,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137854
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_CPU_ID',0,40,145,11,3
	.word	156261
	.byte	12,40,148,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137964
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_CPXE',0,40,153,11,3
	.word	156325
	.byte	12,40,156,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138056
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_CREVT',0,40,161,11,3
	.word	156387
	.byte	12,40,164,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138210
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_CUS_ID',0,40,169,11,3
	.word	156450
	.byte	12,40,172,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138304
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_D',0,40,177,11,3
	.word	156514
	.byte	12,40,180,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138367
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DATR',0,40,185,11,3
	.word	156573
	.byte	12,40,188,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138593
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DBGSR',0,40,193,11,3
	.word	156635
	.byte	12,40,196,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138808
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DBGTCR',0,40,201,11,3
	.word	156698
	.byte	12,40,204,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138902
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DCON0',0,40,209,11,3
	.word	156762
	.byte	12,40,212,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	139018
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DCON2',0,40,217,11,3
	.word	156825
	.byte	12,40,220,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	139119
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DCX',0,40,225,11,3
	.word	156888
	.byte	12,40,228,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	139212
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DEADD',0,40,233,11,3
	.word	156949
	.byte	12,40,236,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	139292
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DIEAR',0,40,241,11,3
	.word	157012
	.byte	12,40,244,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	139361
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DIETR',0,40,249,11,3
	.word	157075
	.byte	12,40,252,11,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	139645
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,40,129,12,3
	.word	157138
	.byte	12,40,132,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	140236
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,40,137,12,3
	.word	157218
	.byte	12,40,140,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	140827
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,40,145,12,3
	.word	157298
	.byte	12,40,148,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	141428
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,40,153,12,3
	.word	157378
	.byte	12,40,156,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	142029
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,40,161,12,3
	.word	157458
	.byte	12,40,164,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	142144
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,40,169,12,3
	.word	157532
	.byte	12,40,172,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	142259
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DMS',0,40,177,12,3
	.word	157606
	.byte	12,40,180,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	142352
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DPRE',0,40,185,12,3
	.word	157667
	.byte	12,40,188,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	142444
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DPR_L',0,40,193,12,3
	.word	157729
	.byte	12,40,196,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	142539
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DPR_U',0,40,201,12,3
	.word	157792
	.byte	12,40,204,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	142634
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DPWE',0,40,209,12,3
	.word	157855
	.byte	12,40,212,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	142726
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_DSTR',0,40,217,12,3
	.word	157917
	.byte	12,40,220,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	143065
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_EXEVT',0,40,225,12,3
	.word	157979
	.byte	12,40,228,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	143219
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FCX',0,40,233,12,3
	.word	158042
	.byte	12,40,236,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	143325
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FLASHCON0',0,40,241,12,3
	.word	158103
	.byte	12,40,244,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	143543
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FLASHCON1',0,40,249,12,3
	.word	158170
	.byte	12,40,252,12,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	143734
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FLASHCON2',0,40,129,13,3
	.word	158237
	.byte	12,40,132,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	144034
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FLASHCON3',0,40,137,13,3
	.word	158304
	.byte	12,40,140,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	144339
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FLASHCON4',0,40,145,13,3
	.word	158371
	.byte	12,40,148,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	144440
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,40,153,13,3
	.word	158438
	.byte	12,40,156,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	144789
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,40,161,13,3
	.word	158508
	.byte	12,40,164,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	144949
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,40,169,13,3
	.word	158578
	.byte	12,40,172,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145030
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,40,177,13,3
	.word	158647
	.byte	12,40,180,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145117
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,40,185,13,3
	.word	158718
	.byte	12,40,188,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145204
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,40,193,13,3
	.word	158789
	.byte	12,40,196,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145291
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_ICNT',0,40,201,13,3
	.word	158860
	.byte	12,40,204,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145382
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_ICR',0,40,209,13,3
	.word	158922
	.byte	12,40,212,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145524
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_ISP',0,40,217,13,3
	.word	158983
	.byte	12,40,220,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145590
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_KRST0',0,40,225,13,3
	.word	159044
	.byte	12,40,228,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145701
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_KRST1',0,40,233,13,3
	.word	159107
	.byte	12,40,236,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145793
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_KRSTCLR',0,40,241,13,3
	.word	159170
	.byte	12,40,244,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145889
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_LCX',0,40,249,13,3
	.word	159235
	.byte	12,40,252,13,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145995
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,40,129,14,3
	.word	159296
	.byte	12,40,132,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	146578
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,40,137,14,3
	.word	159372
	.byte	12,40,140,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147171
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_M1CNT',0,40,145,14,3
	.word	159448
	.byte	12,40,148,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147264
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_M2CNT',0,40,153,14,3
	.word	159511
	.byte	12,40,156,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147357
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_M3CNT',0,40,161,14,3
	.word	159574
	.byte	12,40,164,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147450
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_OSEL',0,40,169,14,3
	.word	159637
	.byte	12,40,172,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147523
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PC',0,40,177,14,3
	.word	159699
	.byte	12,40,180,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147608
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PCON0',0,40,185,14,3
	.word	159759
	.byte	12,40,188,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147724
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PCON1',0,40,193,14,3
	.word	159822
	.byte	12,40,196,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147835
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PCON2',0,40,201,14,3
	.word	159885
	.byte	12,40,204,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147936
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PCXI',0,40,209,14,3
	.word	159948
	.byte	12,40,212,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	148089
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PIEAR',0,40,217,14,3
	.word	160010
	.byte	12,40,220,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	148158
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PIETR',0,40,225,14,3
	.word	160073
	.byte	12,40,228,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	148442
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PMA0',0,40,233,14,3
	.word	160136
	.byte	12,40,236,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	148533
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PMA1',0,40,241,14,3
	.word	160198
	.byte	12,40,244,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	148624
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PMA2',0,40,249,14,3
	.word	160260
	.byte	12,40,252,14,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	148715
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PSTR',0,40,129,15,3
	.word	160322
	.byte	12,40,132,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	148918
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_PSW',0,40,137,15,3
	.word	160384
	.byte	12,40,140,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	149123
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_RGN_ACCENA',0,40,145,15,3
	.word	160445
	.byte	12,40,148,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	149690
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_RGN_ACCENB',0,40,153,15,3
	.word	160513
	.byte	12,40,156,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	150267
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_RGN_LA',0,40,161,15,3
	.word	160581
	.byte	12,40,164,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	150362
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_RGN_UA',0,40,169,15,3
	.word	160645
	.byte	12,40,172,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	150457
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SEGEN',0,40,177,15,3
	.word	160709
	.byte	12,40,180,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	150585
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,40,185,15,3
	.word	160772
	.byte	12,40,188,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	151168
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,40,193,15,3
	.word	160848
	.byte	12,40,196,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	151761
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SMACON',0,40,201,15,3
	.word	160924
	.byte	12,40,204,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	151879
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,40,209,15,3
	.word	160988
	.byte	12,40,212,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	152468
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,40,217,15,3
	.word	161067
	.byte	12,40,220,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	153067
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SWEVT',0,40,225,15,3
	.word	161146
	.byte	12,40,228,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	153221
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SYSCON',0,40,233,15,3
	.word	161209
	.byte	12,40,236,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	153520
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TASK_ASI',0,40,241,15,3
	.word	161273
	.byte	12,40,244,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	153618
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_CON',0,40,249,15,3
	.word	161339
	.byte	12,40,252,15,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	153790
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,40,129,16,3
	.word	161404
	.byte	12,40,132,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	153919
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,40,137,16,3
	.word	161480
	.byte	12,40,140,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	154049
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,40,145,16,3
	.word	161558
	.byte	12,40,148,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	154201
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,40,153,16,3
	.word	161636
	.byte	12,40,156,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	154328
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,40,161,16,3
	.word	161713
	.byte	12,40,164,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	154477
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,40,169,16,3
	.word	161790
	.byte	12,40,172,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	154591
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,40,177,16,3
	.word	161861
	.byte	12,40,180,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	154835
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TPS_TIMER',0,40,185,16,3
	.word	161933
	.byte	12,40,188,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	154915
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TRIG_ACC',0,40,193,16,3
	.word	162000
	.byte	12,40,196,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	155110
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TR_ADR',0,40,201,16,3
	.word	162066
	.byte	12,40,204,16,9,4,13
	.byte	'U',0
	.word	399
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	415
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	155183
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_TR_EVT',0,40,209,16,3
	.word	162130
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,40,221,16,25,16,13
	.byte	'LA',0
	.word	160581
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	160645
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	160445
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	160513
	.byte	4,2,35,12,0,14
	.word	162194
	.byte	30
	.byte	'Ifx_CPU_RGN',0,40,227,16,3
	.word	162270
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,40,242,16,25,12,13
	.byte	'RABR',0
	.word	155754
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	155688
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	155621
	.byte	4,2,35,8,0,14
	.word	162296
	.byte	30
	.byte	'Ifx_CPU_BLK',0,40,247,16,3
	.word	162359
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,40,134,17,25,28,13
	.byte	'CON',0
	.word	158438
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	158578
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	158508
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3228
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	158647
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	158718
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	158789
	.byte	4,2,35,24,0,14
	.word	162385
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP',0,40,143,17,3
	.word	162510
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,40,158,17,25,8,13
	.byte	'L',0
	.word	157729
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	157792
	.byte	4,2,35,4,0,14
	.word	162541
	.byte	30
	.byte	'Ifx_CPU_DPR',0,40,162,17,3
	.word	162583
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,40,177,17,25,8,13
	.byte	'L',0
	.word	156135
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	156198
	.byte	4,2,35,4,0,14
	.word	162609
	.byte	30
	.byte	'Ifx_CPU_CPR',0,40,181,17,3
	.word	162651
	.byte	15,12
	.word	161933
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,40,196,17,25,16,13
	.byte	'CON',0
	.word	161339
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	162677
	.byte	12,2,35,4,0,14
	.word	162686
	.byte	30
	.byte	'Ifx_CPU_TPS',0,40,200,17,3
	.word	162734
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,40,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	161558
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	161480
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	161713
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	161636
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	161404
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	161861
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	161790
	.byte	4,2,35,24,0,14
	.word	162760
	.byte	30
	.byte	'Ifx_CPU_TPS_EXTIM',0,40,224,17,3
	.word	162909
	.byte	10
	.byte	'_Ifx_CPU_TR',0,40,239,17,25,8,13
	.byte	'EVT',0
	.word	162130
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	162066
	.byte	4,2,35,4,0,14
	.word	162941
	.byte	30
	.byte	'Ifx_CPU_TR',0,40,243,17,3
	.word	162986
.L188:
	.byte	22
	.word	68821
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L57:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,13,0,73,19,11
	.byte	15,56,9,0,0,18,4,1,58,15,59,15,57,15,11,15,0,0,19,40,0,3,8,28,13,0,0,20,19,1,58,15,59,15,57,15,11,15,0
	.byte	0,21,11,1,0,0,22,38,0,73,19,0,0,23,46,1,3,8,54,15,39,12,63,12,60,12,0,0,24,5,0,73,19,0,0,25,46,1,3,8,73
	.byte	19,54,15,39,12,63,12,60,12,0,0,26,5,0,3,8,73,19,0,0,27,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63
	.byte	12,60,12,0,0,28,24,0,58,15,59,15,57,15,0,0,29,21,1,73,19,54,15,39,12,0,0,30,22,0,3,8,58,15,59,15,57,15
	.byte	73,19,0,0,31,46,1,49,19,0,0,32,5,0,49,19,0,0,33,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0
	.byte	34,29,1,49,19,0,0,35,11,0,49,19,0,0,36,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,37
	.byte	55,0,73,19,0,0,38,5,0,58,15,59,15,57,15,73,19,0,0,39,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0
	.byte	40,21,0,54,15,0,0,41,21,1,54,15,39,12,0,0,42,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,43,4,1,3
	.byte	8,58,15,59,15,57,15,11,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L58:
	.word	.L255-.L254
.L254:
	.half	3
	.word	.L257-.L256
.L256:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Rtl8211f',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxGeth.h',0,4,0,0
	.byte	'IfxGeth_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxGeth_Eth.h',0,6,0,0
	.byte	'Ifx_Lwip.h',0,7,0,0
	.byte	'cc.h',0,8,0,0
	.byte	'def.h',0,9,0,0
	.byte	'pbuf.h',0,9,0,0
	.byte	'etharp.h',0,9,0,0
	.byte	'netif.h',0,9,0,0
	.byte	'ip4_addr.h',0,9,0,0
	.byte	'IfxGeth_PinMap.h',0,10,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxSrc_cfg.h',0,11,0,0
	.byte	'IfxGeth_Phy_Rtl8211f.h',0,12,0,0
	.byte	'string.h',0,13,0,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0,0,0,0
	.byte	'stddef.h',0,13,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'stdint.h',0,13,0,0
	.byte	'mem.h',0,9,0,0
	.byte	'err.h',0,9,0,0
	.byte	'stats.h',0,9,0,0
	.byte	'ip_addr.h',0,9,0,0
	.byte	'ip4.h',0,14,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,11,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'udp.h',0,9,0,0
	.byte	'tcpbase.h',0,9,0,0
	.byte	'tcp.h',0,9,0,0
	.byte	'tcp_priv.h',0,15,0,0
	.byte	'tcp.h',0,14,0,0
	.byte	'ethernet.h',0,14,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0,0
.L257:
.L255:
	.sdecl	'.debug_info',debug,cluster('ifx_netif_init')
	.sect	'.debug_info'
.L59:
	.word	241
	.half	3
	.word	.L60
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L62,.L61
	.byte	2
	.word	.L55
	.byte	3
	.byte	'ifx_netif_init',0,1,138,4,7
	.word	.L91
	.byte	1,1,1
	.word	.L54,.L92,.L53
	.byte	4
	.byte	'netif',0,1,138,4,31
	.word	.L93,.L94
	.byte	5
	.word	.L54,.L92
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('ifx_netif_init')
	.sect	'.debug_abbrev'
.L60:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('ifx_netif_init')
	.sect	'.debug_line'
.L61:
	.word	.L259-.L258
.L258:
	.half	3
	.word	.L261-.L260
.L260:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include',0
	.byte	0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0,0,0,0
	.byte	'Ifx_Lwip.h',0,1,0,0,0
.L261:
	.byte	5,7,7,0,5,2
	.word	.L54
	.byte	3,137,4,1,5,5,9
	.half	.L243-.L54
	.byte	3,4,1,7,9
	.half	.L262-.L243
	.byte	1,4,2,5,13,9
	.half	.L41-.L262
	.byte	3,168,125,1,4,1,5,23,9
	.half	.L263-.L41
	.byte	3,239,2,1,5,25,9
	.half	.L264-.L263
	.byte	3,1,1,5,23,1,5,25,9
	.half	.L265-.L264
	.byte	3,1,1,5,23,1,5,25,9
	.half	.L266-.L265
	.byte	3,5,1,5,23,9
	.half	.L267-.L266
	.byte	1,5,25,9
	.half	.L268-.L267
	.byte	3,1,1,5,23,9
	.half	.L269-.L268
	.byte	1,5,20,9
	.half	.L270-.L269
	.byte	3,3,1,5,12,9
	.half	.L245-.L270
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L63-.L245
	.byte	0,1,1
.L259:
	.sdecl	'.debug_ranges',debug,cluster('ifx_netif_init')
	.sect	'.debug_ranges'
.L62:
	.word	-1,.L54,0,.L63-.L54,0,0
	.sdecl	'.debug_info',debug,cluster('ifx_netif_input')
	.sect	'.debug_info'
.L64:
	.word	258
	.half	3
	.word	.L65
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L67,.L66
	.byte	2
	.word	.L55
	.byte	3
	.byte	'ifx_netif_input',0,1,203,3,7
	.word	.L91
	.byte	1,1,1
	.word	.L52,.L95,.L51
	.byte	4
	.byte	'netif',0,1,203,3,32
	.word	.L93,.L96
	.byte	5
	.word	.L52,.L95
	.byte	6
	.byte	'p',0,1,207,3,16
	.word	.L97,.L98
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('ifx_netif_input')
	.sect	'.debug_abbrev'
.L65:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('ifx_netif_input')
	.sect	'.debug_line'
.L66:
	.word	.L272-.L271
.L271:
	.half	3
	.word	.L274-.L273
.L273:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0,0,0,0,0
.L274:
	.byte	5,7,7,0,5,2
	.word	.L52
	.byte	3,202,3,1,5,25,9
	.half	.L234-.L52
	.byte	3,7,1,5,7,9
	.half	.L233-.L234
	.byte	1,5,5,9
	.half	.L236-.L233
	.byte	3,3,1,5,15,7,9
	.half	.L275-.L236
	.byte	3,7,1,5,13,9
	.half	.L235-.L275
	.byte	3,2,1,5,10,9
	.half	.L276-.L235
	.byte	3,3,1,9
	.half	.L277-.L276
	.byte	3,1,1,5,18,9
	.half	.L36-.L277
	.byte	3,8,1,5,29,9
	.half	.L278-.L36
	.byte	1,5,9,9
	.half	.L238-.L278
	.byte	1,5,19,7,9
	.half	.L38-.L238
	.byte	3,11,1,5,12,9
	.half	.L35-.L38
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L68-.L35
	.byte	0,1,1
.L272:
	.sdecl	'.debug_ranges',debug,cluster('ifx_netif_input')
	.sect	'.debug_ranges'
.L67:
	.word	-1,.L52,0,.L68-.L52,0,0
	.sdecl	'.debug_info',debug,cluster('low_level_init')
	.sect	'.debug_info'
.L69:
	.word	465
	.half	3
	.word	.L70
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L72,.L71
	.byte	2
	.word	.L55
	.byte	3
	.byte	'low_level_init',0,1,143,1,13,1,1
	.word	.L44,.L99,.L43
	.byte	4
	.byte	'netif',0,1,143,1,37
	.word	.L93,.L100
	.byte	5
	.word	.L44,.L99
	.byte	6
	.byte	'ethernetif',0,1,145,1,15
	.word	.L101,.L102
	.byte	6
	.byte	'i',0,1,146,1,13
	.word	.L103,.L104
	.byte	7
	.word	.L105
	.byte	6
	.byte	'GethConfig',0,1,167,1,25
	.word	.L107,.L108
	.byte	7
	.word	.L109
	.byte	8
	.word	.L111,.L112,.L113
	.byte	9
	.word	.L114,.L115
	.byte	9
	.word	.L116,.L117
	.byte	9
	.word	.L118,.L119
	.byte	9
	.word	.L120,.L121
	.byte	10
	.word	.L122,.L112,.L113
	.byte	0,8
	.word	.L123,.L124,.L9
	.byte	9
	.word	.L125,.L126
	.byte	9
	.word	.L127,.L128
	.byte	10
	.word	.L129,.L124,.L9
	.byte	0,8
	.word	.L123,.L10,.L130
	.byte	9
	.word	.L125,.L126
	.byte	9
	.word	.L127,.L128
	.byte	10
	.word	.L129,.L10,.L130
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('low_level_init')
	.sect	'.debug_abbrev'
.L70:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0,0,10,11,0,49
	.byte	16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('low_level_init')
	.sect	'.debug_line'
.L71:
	.word	.L280-.L279
.L279:
	.half	3
	.word	.L282-.L281
.L281:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std',0,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0,0,0,0
	.byte	'IfxPort.h',0,1,0,0
	.byte	'IfxGeth.h',0,2,0,0,0
.L282:
	.byte	5,13,7,0,5,2
	.word	.L44
	.byte	3,142,1,1,5,33,9
	.half	.L190-.L44
	.byte	3,2,1,5,25,9
	.half	.L191-.L190
	.byte	3,4,1,5,23,1,5,28,9
	.half	.L283-.L191
	.byte	3,5,1,5,34,9
	.half	.L284-.L283
	.byte	1,5,14,9
	.half	.L285-.L284
	.byte	1,5,38,9
	.half	.L286-.L285
	.byte	3,126,1,5,48,9
	.half	.L2-.L286
	.byte	3,2,1,5,26,9
	.half	.L287-.L2
	.byte	1,5,38,3,126,1,5,18,7,9
	.half	.L288-.L287
	.byte	3,6,1,5,16,1,5,41,9
	.half	.L289-.L288
	.byte	3,5,1,5,18,1,5,49,9
	.half	.L106-.L289
	.byte	3,6,1,5,36,9
	.half	.L290-.L106
	.byte	1,5,49,9
	.half	.L291-.L290
	.byte	1,5,36,9
	.half	.L292-.L291
	.byte	3,2,1,5,34,1,5,38,9
	.half	.L293-.L292
	.byte	3,1,1,5,35,9
	.half	.L294-.L293
	.byte	1,5,34,9
	.half	.L295-.L294
	.byte	3,1,1,5,36,9
	.half	.L296-.L295
	.byte	3,2,1,5,34,1,5,50,9
	.half	.L297-.L296
	.byte	3,1,1,5,35,9
	.half	.L298-.L297
	.byte	1,5,50,9
	.half	.L299-.L298
	.byte	3,1,1,5,35,9
	.half	.L300-.L299
	.byte	1,5,50,9
	.half	.L301-.L300
	.byte	3,1,1,5,35,9
	.half	.L302-.L301
	.byte	1,5,50,9
	.half	.L303-.L302
	.byte	3,1,1,5,35,9
	.half	.L304-.L303
	.byte	1,5,50,9
	.half	.L305-.L304
	.byte	3,1,1,5,35,9
	.half	.L306-.L305
	.byte	1,5,50,9
	.half	.L307-.L306
	.byte	3,1,1,5,35,9
	.half	.L308-.L307
	.byte	1,9
	.half	.L309-.L308
	.byte	3,3,1,9
	.half	.L310-.L309
	.byte	3,1,1,5,46,9
	.half	.L311-.L310
	.byte	3,1,1,5,44,1,5,48,9
	.half	.L312-.L311
	.byte	3,1,1,5,44,9
	.half	.L313-.L312
	.byte	3,1,1,5,48,9
	.half	.L314-.L313
	.byte	3,1,1,9
	.half	.L315-.L314
	.byte	3,1,1,5,37,9
	.half	.L316-.L315
	.byte	3,2,1,9
	.half	.L317-.L316
	.byte	3,1,1,5,44,9
	.half	.L318-.L317
	.byte	3,1,1,5,71,9
	.half	.L319-.L318
	.byte	3,1,1,5,46,9
	.half	.L320-.L319
	.byte	1,5,69,9
	.half	.L321-.L320
	.byte	3,1,1,5,56,9
	.half	.L322-.L321
	.byte	1,5,50,9
	.half	.L323-.L322
	.byte	3,1,1,5,48,1,5,44,9
	.half	.L324-.L323
	.byte	3,2,1,5,72,9
	.half	.L325-.L324
	.byte	3,1,1,5,46,9
	.half	.L326-.L325
	.byte	1,5,69,9
	.half	.L327-.L326
	.byte	3,1,1,5,56,9
	.half	.L328-.L327
	.byte	1,5,48,9
	.half	.L329-.L328
	.byte	3,1,1,5,46,9
	.half	.L110-.L329
	.byte	3,7,1,5,47,9
	.half	.L330-.L110
	.byte	3,1,1,5,45,1,9
	.half	.L331-.L330
	.byte	3,1,1,5,46,9
	.half	.L332-.L331
	.byte	3,1,1,5,47,9
	.half	.L333-.L332
	.byte	3,1,1,5,45,1,9
	.half	.L334-.L333
	.byte	3,1,1,5,32,9
	.half	.L335-.L334
	.byte	3,5,1,5,112,9
	.half	.L112-.L335
	.byte	3,1,1,5,123,9
	.half	.L336-.L112
	.byte	1,5,50,9
	.half	.L337-.L336
	.byte	1,4,2,5,61,9
	.half	.L338-.L337
	.byte	3,201,3,1,4,1,5,72,3,183,124,1,4,2,5,40,9
	.half	.L339-.L338
	.byte	3,201,3,1,4,1,5,25,9
	.half	.L113-.L339
	.byte	3,184,124,1,5,35,9
	.half	.L340-.L113
	.byte	1,5,25,9
	.half	.L341-.L340
	.byte	1,5,47,9
	.half	.L342-.L341
	.byte	1,5,25,9
	.half	.L343-.L342
	.byte	1,5,33,9
	.half	.L344-.L343
	.byte	1,5,43,9
	.half	.L345-.L344
	.byte	3,2,1,5,22,9
	.half	.L346-.L345
	.byte	3,191,127,1,5,43,9
	.half	.L3-.L346
	.byte	3,193,0,1,5,46,9
	.half	.L347-.L3
	.byte	1,7,9
	.half	.L348-.L347
	.byte	1,5,35,3,4,1,5,40,9
	.half	.L349-.L348
	.byte	3,2,1,5,46,9
	.half	.L350-.L349
	.byte	3,122,1,5,38,9
	.half	.L4-.L350
	.byte	3,4,1,5,47,9
	.half	.L5-.L4
	.byte	3,1,1,5,50,9
	.half	.L351-.L5
	.byte	1,5,40,7,9
	.half	.L352-.L351
	.byte	3,1,1,5,52,9
	.half	.L353-.L352
	.byte	1,5,31,7,9
	.half	.L354-.L353
	.byte	3,3,1,5,84,9
	.half	.L355-.L354
	.byte	3,1,1,5,37,9
	.half	.L356-.L355
	.byte	1,5,43,9
	.half	.L6-.L356
	.byte	3,1,1,5,46,9
	.half	.L357-.L6
	.byte	1,5,38,7,9
	.half	.L7-.L357
	.byte	3,4,1,5,47,9
	.half	.L8-.L7
	.byte	3,1,1,5,50,9
	.half	.L358-.L8
	.byte	1,5,40,7,9
	.half	.L359-.L358
	.byte	3,1,1,5,52,9
	.half	.L360-.L359
	.byte	1,5,42,7,9
	.half	.L361-.L360
	.byte	3,4,1,5,35,9
	.half	.L193-.L361
	.byte	3,2,1,5,48,9
	.half	.L362-.L193
	.byte	3,3,1,5,45,9
	.half	.L195-.L362
	.byte	3,1,1,5,41,9
	.half	.L197-.L195
	.byte	3,4,1,5,6,9
	.half	.L363-.L197
	.byte	1,5,12,7,9
	.half	.L364-.L363
	.byte	3,3,1,5,20,9
	.half	.L365-.L364
	.byte	1,5,42,9
	.half	.L366-.L365
	.byte	3,2,1,5,44,9
	.half	.L367-.L366
	.byte	3,1,1,5,7,9
	.half	.L368-.L367
	.byte	3,127,1,4,3,5,33,7,9
	.half	.L124-.L368
	.byte	3,214,9,1,5,37,9
	.half	.L369-.L124
	.byte	1,4,1,5,85,3,171,118,1,5,1,9
	.half	.L9-.L369
	.byte	3,16,1,4,3,5,33,7,9
	.half	.L10-.L9
	.byte	3,197,9,1,5,37,9
	.half	.L370-.L10
	.byte	1,4,1,5,42,9
	.half	.L130-.L370
	.byte	3,175,118,1,5,43,9
	.half	.L371-.L130
	.byte	3,2,1,5,42,9
	.half	.L372-.L371
	.byte	3,126,1,5,7,9
	.half	.L373-.L372
	.byte	1,5,54,7,9
	.half	.L374-.L373
	.byte	3,2,1,5,79,1,5,46,9
	.half	.L12-.L374
	.byte	3,2,1,5,11,9
	.half	.L375-.L12
	.byte	1,5,58,7,9
	.half	.L376-.L375
	.byte	3,2,1,5,84,1,5,58,9
	.half	.L14-.L376
	.byte	3,3,1,5,1,9
	.half	.L73-.L14
	.byte	3,3,0,1,1
.L280:
	.sdecl	'.debug_ranges',debug,cluster('low_level_init')
	.sect	'.debug_ranges'
.L72:
	.word	-1,.L44,0,.L73-.L44,0,0
.L105:
	.word	-1,.L44,.L106-.L44,.L9-.L44,.L10-.L44,.L99-.L44,0,0
.L109:
	.word	-1,.L44,.L110-.L44,.L9-.L44,.L10-.L44,.L99-.L44,0,0
	.sdecl	'.debug_info',debug,cluster('low_level_output')
	.sect	'.debug_info'
.L74:
	.word	487
	.half	3
	.word	.L75
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L77,.L76
	.byte	2
	.word	.L55
	.byte	3
	.byte	'low_level_output',0,1,165,2,14
	.word	.L91
	.byte	1,1
	.word	.L46,.L131,.L45
	.byte	4
	.byte	'netif',0,1,165,2,40
	.word	.L93,.L132
	.byte	4
	.byte	'p',0,1,165,2,55
	.word	.L97,.L133
	.byte	5
	.word	.L46,.L131
	.byte	6
	.byte	'ethernetif',0,1,167,2,20
	.word	.L101,.L134
	.byte	6
	.byte	'q',0,1,168,2,18
	.word	.L135,.L136
	.byte	5
	.word	.L19,.L137
	.byte	6
	.byte	'tbuf',0,1,186,2,15
	.word	.L138,.L139
	.byte	6
	.byte	'l',0,1,187,2,15
	.word	.L140,.L141
	.byte	7
	.word	.L142,.L19,.L143
	.byte	8
	.word	.L144,.L145
	.byte	8
	.word	.L146,.L147
	.byte	9
	.word	.L148,.L19,.L143
	.byte	6
	.byte	'tx',0,2,217,8,11
	.word	.L149,.L150
	.byte	0,0,5
	.word	.L151,.L137
	.byte	6
	.byte	'pactTxDescriptor',0,1,200,2,26
	.word	.L152,.L153
	.byte	7
	.word	.L154,.L151,.L155
	.byte	8
	.word	.L156,.L157
	.byte	8
	.word	.L158,.L159
	.byte	10
	.word	.L160,.L151,.L155
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('low_level_output')
	.sect	'.debug_abbrev'
.L75:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('low_level_output')
	.sect	'.debug_line'
.L76:
	.word	.L378-.L377
.L377:
	.half	3
	.word	.L380-.L379
.L379:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth',0,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0,0,0,0
	.byte	'IfxGeth_Eth.h',0,1,0,0,0
.L380:
	.byte	5,14,7,0,5,2
	.word	.L46
	.byte	3,164,2,1,5,38,9
	.half	.L200-.L46
	.byte	3,2,1,5,20,9
	.half	.L201-.L200
	.byte	3,7,1,5,11,9
	.half	.L202-.L201
	.byte	3,3,1,5,30,9
	.half	.L381-.L202
	.byte	1,5,9,9
	.half	.L382-.L381
	.byte	1,5,61,7,9
	.half	.L383-.L382
	.byte	1,5,50,7,9
	.half	.L16-.L383
	.byte	3,4,1,5,84,9
	.half	.L384-.L16
	.byte	1,4,2,5,50,9
	.half	.L19-.L384
	.byte	3,168,6,1,5,29,9
	.half	.L204-.L19
	.byte	3,1,1,5,5,7,9
	.half	.L385-.L204
	.byte	3,2,1,4,1,5,20,9
	.half	.L143-.L385
	.byte	3,219,121,1,5,16,3,2,1,5,33,9
	.half	.L20-.L143
	.byte	3,5,1,5,39,9
	.half	.L386-.L20
	.byte	1,5,51,9
	.half	.L387-.L386
	.byte	1,5,22,9
	.half	.L388-.L387
	.byte	3,1,1,5,19,9
	.half	.L389-.L388
	.byte	1,5,13,9
	.half	.L206-.L389
	.byte	3,2,1,5,37,9
	.half	.L21-.L206
	.byte	3,120,1,5,30,9
	.half	.L390-.L21
	.byte	1,4,2,5,38,7,9
	.half	.L151-.L390
	.byte	3,132,6,1,4,1,5,41,9
	.half	.L155-.L151
	.byte	3,138,122,1,5,49,9
	.half	.L391-.L155
	.byte	3,1,1,5,34,9
	.half	.L207-.L391
	.byte	3,127,1,5,39,9
	.half	.L392-.L207
	.byte	1,5,49,9
	.half	.L18-.L392
	.byte	3,1,1,5,20,9
	.half	.L137-.L18
	.byte	3,6,1,5,5,9
	.half	.L210-.L137
	.byte	3,3,1,5,12,9
	.half	.L393-.L210
	.byte	3,4,1,5,5,9
	.half	.L394-.L393
	.byte	3,124,1,5,1,9
	.half	.L395-.L394
	.byte	3,5,1,7,9
	.half	.L78-.L395
	.byte	0,1,1
.L378:
	.sdecl	'.debug_ranges',debug,cluster('low_level_output')
	.sect	'.debug_ranges'
.L77:
	.word	-1,.L46,0,.L78-.L46,0,0
	.sdecl	'.debug_info',debug,cluster('GetRxFrameSize')
	.sect	'.debug_info'
.L79:
	.word	296
	.half	3
	.word	.L80
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L82,.L81
	.byte	2
	.word	.L55
	.byte	3
	.byte	'GetRxFrameSize',0,1,220,2,15
	.word	.L140
	.byte	1,1
	.word	.L48,.L161,.L47
	.byte	4
	.byte	'descr',0,1,220,2,47
	.word	.L162,.L163
	.byte	5
	.word	.L48,.L161
	.byte	6
	.byte	'len',0,1,222,2,10
	.word	.L140,.L164
	.byte	6
	.byte	'rdes3',0,1,224,2,10
	.word	.L165,.L166
	.byte	6
	.byte	'rdes1',0,1,225,2,10
	.word	.L165,.L167
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('GetRxFrameSize')
	.sect	'.debug_abbrev'
.L80:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('GetRxFrameSize')
	.sect	'.debug_line'
.L81:
	.word	.L397-.L396
.L396:
	.half	3
	.word	.L399-.L398
.L398:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0,0,0,0,0
.L399:
	.byte	5,30,7,0,5,2
	.word	.L48
	.byte	3,223,2,1,9
	.half	.L211-.L48
	.byte	3,1,1,5,7,9
	.half	.L213-.L211
	.byte	3,2,1,5,26,7,9
	.half	.L400-.L213
	.byte	3,1,1,5,27,7,9
	.half	.L401-.L400
	.byte	3,1,1,5,6,7,9
	.half	.L23-.L401
	.byte	3,3,1,5,1,3,9,1,5,15,7,9
	.half	.L25-.L23
	.byte	3,124,1,5,25,9
	.half	.L212-.L25
	.byte	1,5,1,9
	.half	.L402-.L212
	.byte	3,4,1,7,9
	.half	.L83-.L402
	.byte	0,1,1
.L397:
	.sdecl	'.debug_ranges',debug,cluster('GetRxFrameSize')
	.sect	'.debug_ranges'
.L82:
	.word	-1,.L48,0,.L83-.L48,0,0
	.sdecl	'.debug_info',debug,cluster('low_level_input')
	.sect	'.debug_info'
.L84:
	.word	381
	.half	3
	.word	.L85
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L87,.L86
	.byte	2
	.word	.L55
	.byte	3
	.byte	'low_level_input',0,1,251,2,16
	.word	.L97
	.byte	1,1
	.word	.L50,.L168,.L49
	.byte	4
	.byte	'netif',0,1,251,2,41
	.word	.L93,.L169
	.byte	5
	.word	.L50,.L168
	.byte	6
	.byte	'ethernetif',0,1,253,2,15
	.word	.L101,.L170
	.byte	6
	.byte	'p',0,1,254,2,13
	.word	.L97,.L171
	.byte	6
	.byte	'q',0,1,254,2,17
	.word	.L97,.L172
	.byte	6
	.byte	'len',0,1,255,2,13
	.word	.L140,.L173
	.byte	7
	.word	.L174,.L175,.L176
	.byte	8
	.word	.L177,.L178
	.byte	8
	.word	.L179,.L180
	.byte	9
	.word	.L181,.L175,.L176
	.byte	0,10
	.word	.L182
	.byte	6
	.byte	'src',0,1,153,3,15
	.word	.L138,.L187
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('low_level_input')
	.sect	'.debug_abbrev'
.L85:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('low_level_input')
	.sect	'.debug_line'
.L86:
	.word	.L404-.L403
.L403:
	.half	3
	.word	.L406-.L405
.L405:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth',0,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0,0,0,0
	.byte	'IfxGeth_Eth.h',0,1,0,0,0
.L406:
	.byte	5,16,7,0,5,2
	.word	.L50
	.byte	3,250,2,1,5,33,9
	.half	.L214-.L50
	.byte	3,2,1,5,9,9
	.half	.L218-.L214
	.byte	3,4,1,4,2,5,38,9
	.half	.L175-.L218
	.byte	3,186,5,1,5,71,9
	.half	.L215-.L175
	.byte	3,24,1,4,1,5,5,9
	.half	.L176-.L215
	.byte	3,175,122,1,5,30,7,9
	.half	.L407-.L176
	.byte	3,2,1,5,5,9
	.half	.L28-.L407
	.byte	3,3,1,5,16,7,9
	.half	.L408-.L28
	.byte	3,2,1,5,1,9
	.half	.L409-.L408
	.byte	3,54,1,5,9,7,9
	.half	.L29-.L409
	.byte	3,78,1,5,20,9
	.half	.L220-.L29
	.byte	3,4,1,5,35,9
	.half	.L410-.L220
	.byte	1,5,7,9
	.half	.L221-.L410
	.byte	1,5,9,9
	.half	.L183-.L221
	.byte	3,36,1,5,5,9
	.half	.L184-.L183
	.byte	3,94,1,5,24,7,9
	.half	.L411-.L184
	.byte	3,3,1,5,62,9
	.half	.L185-.L411
	.byte	3,3,1,5,19,9
	.half	.L224-.L185
	.byte	1,5,16,9
	.half	.L225-.L224
	.byte	3,4,1,5,21,9
	.half	.L32-.L225
	.byte	3,11,1,5,38,9
	.half	.L412-.L32
	.byte	1,5,25,9
	.half	.L227-.L412
	.byte	3,1,1,5,37,9
	.half	.L413-.L227
	.byte	3,116,1,5,23,9
	.half	.L414-.L413
	.byte	3,12,1,5,30,9
	.half	.L415-.L414
	.byte	3,116,1,5,51,7,9
	.half	.L416-.L415
	.byte	3,18,1,5,24,9
	.half	.L229-.L416
	.byte	3,3,1,5,9,9
	.half	.L231-.L229
	.byte	3,3,1,5,74,9
	.half	.L186-.L231
	.byte	3,122,1,5,9,9
	.half	.L31-.L186
	.byte	3,11,1,9
	.half	.L417-.L31
	.byte	3,1,1,5,5,9
	.half	.L33-.L417
	.byte	3,3,1,5,1,9
	.half	.L232-.L33
	.byte	3,1,1,7,9
	.half	.L88-.L232
	.byte	0,1,1
.L404:
	.sdecl	'.debug_ranges',debug,cluster('low_level_input')
	.sect	'.debug_ranges'
.L87:
	.word	-1,.L50,0,.L88-.L50,0,0
.L182:
	.word	-1,.L50,.L183-.L50,.L184-.L50,.L185-.L50,.L186-.L50,0,0
	.sdecl	'.debug_info',debug,cluster('rtl8211f_pins')
	.sect	'.debug_info'
.L89:
	.word	194
	.half	3
	.word	.L90
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\netif.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L55
	.byte	3
	.byte	'rtl8211f_pins',0,22,118,29
	.word	.L188
	.byte	1,5,3
	.word	rtl8211f_pins
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('rtl8211f_pins')
	.sect	'.debug_abbrev'
.L90:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('GetRxFrameSize')
	.sect	'.debug_loc'
.L47:
	.word	-1,.L48,0,.L161-.L48
	.half	2
	.byte	138,0
	.word	0,0
.L163:
	.word	-1,.L48,0,.L161-.L48
	.half	1
	.byte	100
	.word	0,0
.L164:
	.word	0,0
.L167:
	.word	-1,.L48,.L213-.L48,.L161-.L48
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L166:
	.word	-1,.L48,.L211-.L48,.L212-.L48
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('ifx_netif_init')
	.sect	'.debug_loc'
.L53:
	.word	-1,.L54,0,.L241-.L54
	.half	2
	.byte	138,0
	.word	.L241-.L54,.L92-.L54
	.half	2
	.byte	138,16
	.word	.L92-.L54,.L92-.L54
	.half	2
	.byte	138,0
	.word	0,0
.L94:
	.word	-1,.L54,0,.L242-.L54
	.half	1
	.byte	100
	.word	.L243-.L54,.L92-.L54
	.half	1
	.byte	108
	.word	.L244-.L54,.L245-.L54
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('ifx_netif_input')
	.sect	'.debug_loc'
.L51:
	.word	-1,.L52,0,.L95-.L52
	.half	2
	.byte	138,0
	.word	0,0
.L96:
	.word	-1,.L52,0,.L233-.L52
	.half	1
	.byte	100
	.word	.L234-.L52,.L95-.L52
	.half	1
	.byte	111
	.word	.L239-.L52,.L238-.L52
	.half	1
	.byte	101
	.word	0,0
.L98:
	.word	-1,.L52,.L233-.L52,.L235-.L52
	.half	1
	.byte	98
	.word	.L236-.L52,.L95-.L52
	.half	1
	.byte	108
	.word	.L237-.L52,.L238-.L52
	.half	1
	.byte	100
	.word	.L240-.L52,.L35-.L52
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('low_level_init')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L44,0,.L99-.L44
	.half	3
	.byte	145,224,125
	.word	0,0
.L102:
	.word	-1,.L44,.L191-.L44,.L99-.L44
	.half	1
	.byte	109
	.word	.L192-.L44,.L193-.L44
	.half	1
	.byte	100
	.word	.L194-.L44,.L195-.L44
	.half	1
	.byte	100
	.word	.L196-.L44,.L197-.L44
	.half	1
	.byte	100
	.word	0,0
.L126:
	.word	0,0
.L104:
	.word	0,0
.L121:
	.word	0,0
.L43:
	.word	-1,.L44,0,.L189-.L44
	.half	2
	.byte	138,0
	.word	.L189-.L44,.L10-.L44
	.half	3
	.byte	138,160,2
	.word	.L10-.L44,.L10-.L44
	.half	2
	.byte	138,0
	.word	.L10-.L44,.L99-.L44
	.half	3
	.byte	138,160,2
	.word	.L99-.L44,.L99-.L44
	.half	2
	.byte	138,0
	.word	0,0
.L119:
	.word	0,0
.L128:
	.word	0,0
.L100:
	.word	-1,.L44,0,.L2-.L44
	.half	1
	.byte	100
	.word	.L190-.L44,.L99-.L44
	.half	1
	.byte	108
	.word	0,0
.L117:
	.word	0,0
.L115:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('low_level_input')
	.sect	'.debug_loc'
.L180:
	.word	0,0
.L170:
	.word	-1,.L50,.L216-.L50,.L217-.L50
	.half	1
	.byte	111
	.word	.L218-.L50,.L168-.L50
	.half	2
	.byte	145,120
	.word	.L223-.L50,.L224-.L50
	.half	1
	.byte	100
	.word	.L228-.L50,.L229-.L50
	.half	1
	.byte	100
	.word	0,0
.L178:
	.word	0,0
.L173:
	.word	-1,.L50,.L175-.L50,.L219-.L50
	.half	1
	.byte	82
	.word	.L220-.L50,.L221-.L50
	.half	1
	.byte	85
	.word	0,0
.L49:
	.word	-1,.L50,0,.L214-.L50
	.half	2
	.byte	138,0
	.word	.L214-.L50,.L29-.L50
	.half	2
	.byte	138,8
	.word	.L29-.L50,.L29-.L50
	.half	2
	.byte	138,0
	.word	.L29-.L50,.L168-.L50
	.half	2
	.byte	138,8
	.word	.L168-.L50,.L168-.L50
	.half	2
	.byte	138,0
	.word	0,0
.L169:
	.word	-1,.L50,0,.L215-.L50
	.half	1
	.byte	100
	.word	0,0
.L171:
	.word	-1,.L50,.L221-.L50,.L222-.L50
	.half	1
	.byte	98
	.word	.L183-.L50,.L168-.L50
	.half	1
	.byte	108
	.word	.L222-.L50,.L185-.L50
	.half	1
	.byte	100
	.word	.L230-.L50,.L231-.L50
	.half	1
	.byte	100
	.word	.L31-.L50,.L33-.L50
	.half	1
	.byte	98
	.word	.L232-.L50,.L168-.L50
	.half	1
	.byte	98
	.word	0,0
.L172:
	.word	-1,.L50,.L32-.L50,.L31-.L50
	.half	1
	.byte	110
	.word	0,0
.L187:
	.word	-1,.L50,.L224-.L50,.L32-.L50
	.half	1
	.byte	98
	.word	.L225-.L50,.L31-.L50
	.half	1
	.byte	109
	.word	.L226-.L50,.L227-.L50
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('low_level_output')
	.sect	'.debug_loc'
.L159:
	.word	0,0
.L147:
	.word	0,0
.L134:
	.word	-1,.L46,.L201-.L46,.L131-.L46
	.half	1
	.byte	109
	.word	.L203-.L46,.L204-.L46
	.half	1
	.byte	100
	.word	.L208-.L46,.L137-.L46
	.half	1
	.byte	100
	.word	0,0
.L157:
	.word	0,0
.L145:
	.word	0,0
.L141:
	.word	-1,.L46,.L20-.L46,.L205-.L46
	.half	1
	.byte	88
	.word	.L206-.L46,.L18-.L46
	.half	1
	.byte	88
	.word	.L207-.L46,.L18-.L46
	.half	1
	.byte	84
	.word	.L208-.L46,.L137-.L46
	.half	1
	.byte	84
	.word	0,0
.L45:
	.word	-1,.L46,0,.L198-.L46
	.half	2
	.byte	138,0
	.word	.L198-.L46,.L131-.L46
	.half	2
	.byte	138,16
	.word	.L131-.L46,.L131-.L46
	.half	2
	.byte	138,0
	.word	0,0
.L132:
	.word	-1,.L46,0,.L199-.L46
	.half	1
	.byte	100
	.word	0,0
.L133:
	.word	-1,.L46,0,.L199-.L46
	.half	1
	.byte	101
	.word	.L200-.L46,.L131-.L46
	.half	1
	.byte	108
	.word	.L199-.L46,.L202-.L46
	.half	1
	.byte	100
	.word	.L209-.L46,.L210-.L46
	.half	1
	.byte	100
	.word	0,0
.L153:
	.word	0,0
.L136:
	.word	-1,.L46,.L20-.L46,.L155-.L46
	.half	1
	.byte	111
	.word	0,0
.L139:
	.word	0,0
.L150:
	.word	-1,.L46,.L204-.L46,.L20-.L46
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L418:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('low_level_init')
	.sect	'.debug_frame'
	.word	56
	.word	.L418,.L44,.L99-.L44
	.byte	4
	.word	(.L189-.L44)/2
	.byte	19,160,2,22,26,4,19,138,160,2,4
	.word	(.L10-.L189)/2
	.byte	19,0,8,26,19,160,2,22,26,4,19,138,160,2,4
	.word	(.L99-.L10)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('low_level_output')
	.sect	'.debug_frame'
	.word	36
	.word	.L418,.L46,.L131-.L46
	.byte	4
	.word	(.L198-.L46)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L131-.L198)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('GetRxFrameSize')
	.sect	'.debug_frame'
	.word	24
	.word	.L418,.L48,.L161-.L48
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('low_level_input')
	.sect	'.debug_frame'
	.word	52
	.word	.L418,.L50,.L168-.L50
	.byte	4
	.word	(.L214-.L50)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L29-.L214)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L168-.L29)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('ifx_netif_input')
	.sect	'.debug_frame'
	.word	12
	.word	.L418,.L52,.L95-.L52
	.sdecl	'.debug_frame',debug,cluster('ifx_netif_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L418,.L54,.L92-.L54
	.byte	4
	.word	(.L241-.L54)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L92-.L241)/2
	.byte	19,0,8,26,0,0


	; Module end
