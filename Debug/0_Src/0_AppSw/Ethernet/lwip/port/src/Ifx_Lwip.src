	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\.Ifx_Lwip.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Rtl8211f -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.src ..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c'

	
$TC162
	.sdecl	'.zrodata.Ifx_Lwip..6.cnt',data,rom
	.sect	'.zrodata.Ifx_Lwip..6.cnt'
	.align	2
.6.cnt:	.type	object
	.size	.6.cnt,4
	.word	16820416
	.sdecl	'.zrodata.Ifx_Lwip..7.cnt',data,rom
	.sect	'.zrodata.Ifx_Lwip..7.cnt'
	.align	2
.7.cnt:	.type	object
	.size	.7.cnt,4
	.word	167815360
	.sdecl	'.zrodata.Ifx_Lwip..8.cnt',data,rom
	.sect	'.zrodata.Ifx_Lwip..8.cnt'
	.align	2
.8.cnt:	.type	object
	.size	.8.cnt,4
	.word	16777215
	
	.sdecl	'.text.text_cpu0',code,cluster('Ifx_Lwip_onTimerTick')
	.sect	'.text.text_cpu0'
	.align	2
	
	.global	Ifx_Lwip_onTimerTick

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	     1  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	     2   * \file Ifx_Lwip.c
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	     3   * \brief Source file of lwIP port to TriCore
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	     4   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	     5   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	     6   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	     7   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	     8   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    10   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    11   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    13   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    16  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    17  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    19  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    20   * Permission is hereby granted, free of charge, to any person or
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    21   * organization obtaining a copy of the software and accompanying
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    24   * derivative works of the Software, and to permit third-parties to whom the
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    25   * Software is furnished to do so, all subject to the following:
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    26  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    32   * language processor.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    33  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    41  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    42   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    43   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    44  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    45  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    46  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    47  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    48  #include <Cpu/Std/Ifx_Types.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    49  #include <Cpu/Std/IfxCpu.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    50  #include "IfxGeth_Eth.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    51  #include "Ifx_Lwip.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    52  #include "lwipopts.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    53  #include "Ifx_Netif.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    54  #include "IfxGeth_Phy_Rtl8211f.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    55  #include "Configuration.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    56  #include <string.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    57  #include <stdarg.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    58  #include <UART_Logging.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    59  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    60  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    61  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    62  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    63  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    64  #define IFX_LWIP_TIMER_TICK_MS      (1U)    // number of timer ticks per millisecond
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    65  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    66  #define IFX_LWIP_ARP_PERIOD         (ARP_TMR_INTERVAL / IFX_LWIP_TIMER_TICK_MS)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    67  #define IFX_LWIP_TCP_FAST_PERIOD    (TCP_FAST_INTERVAL / IFX_LWIP_TIMER_TICK_MS)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    68  #define IFX_LWIP_TCP_SLOW_PERIOD    (TCP_SLOW_INTERVAL / IFX_LWIP_TIMER_TICK_MS)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    69  #define IFX_LWIP_DHCP_COARSE_PERIOD (DHCP_COARSE_TIMER_MSECS / IFX_LWIP_TIMER_TICK_MS)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    70  #define IFX_LWIP_DHCP_FINE_PERIOD   (DHCP_FINE_TIMER_MSECS / IFX_LWIP_TIMER_TICK_MS)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    71  #define IFX_LWIP_LINK_PERIOD        (100U / IFX_LWIP_TIMER_TICK_MS) /* 100 ms */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    72  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    73  #define IFX_LWIP_FLAG_ARP           (1U << 1)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    74  #define IFX_LWIP_FLAG_TCP_FAST      (1U << 2)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    75  #define IFX_LWIP_FLAG_TCP_SLOW      (1U << 3)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    76  #define IFX_LWIP_FLAG_LINK          (1U << 4)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    77  #define IFX_LWIP_FLAG_DHCP_COARSE   (1U << 5)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    78  #define IFX_LWIP_FLAG_DHCP_FINE     (1U << 6)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    79  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    80  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    81  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    82  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    83  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    84  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    85  /*-----------------------------Data Structures--------------------------------*/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    86  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    87  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    88  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    89  /*------------------------------Global variables------------------------------*/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    90  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    91  #if CPU_WHICH_SERVICE_ETHERNET == 0
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    92      #if defined(__GNUC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    93      #pragma section ".text_cpu0" ax
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    94      #pragma section ".bss_cpu0" awc0
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    95      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    96      #if defined(__TASKING__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    97      #pragma section code    "text_cpu0"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    98      #pragma section farbss  "bss_cpu0"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	    99      #pragma section fardata "data_cpu0"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   100      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   101      #if defined(__DCC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   102      #pragma section CODE ".text_cpu0"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   103      #pragma section DATA ".data_cpu0" ".bss_cpu0" far-absolute RW
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   104      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   105      #if defined(__ghs__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   106      #pragma ghs section text=".text_cpu0"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   107      #pragma ghs section bss= ".bss_cpu0"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   108      #pragma ghs section data=".data_cpu0"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   109      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   110  #elif ((CPU_WHICH_SERVICE_ETHERNET == 1) && (CPU_WHICH_SERVICE_ETHERNET < IFXCPU_NUM_MODULES))
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   111      #if defined(__GNUC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   112      #pragma section ".text_cpu1" ax
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   113      #pragma section ".bss_cpu1" awc1
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   114      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   115      #if defined(__TASKING__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   116      #pragma section code    "text_cpu1"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   117      #pragma section farbss  "bss_cpu1"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   118      #pragma section fardata "data_cpu1"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   119      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   120      #if defined(__DCC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   121      #pragma section CODE ".text_cpu1"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   122      #pragma section DATA ".data_cpu1" ".bss_cpu1" far-absolute RW
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   123      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   124      #if defined(__ghs__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   125      #pragma ghs section text=".text_cpu1"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   126      #pragma ghs section bss= ".bss_cpu1"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   127      #pragma ghs section data=".data_cpu1"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   128      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   129  #elif ((CPU_WHICH_SERVICE_ETHERNET == 2) && (CPU_WHICH_SERVICE_ETHERNET < IFXCPU_NUM_MODULES))
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   130      #if defined(__GNUC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   131      #pragma section ".text_cpu2" ax
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   132      #pragma section ".bss_cpu2" awc2
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   133      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   134      #if defined(__TASKING__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   135      #pragma section code    "text_cpu2"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   136      #pragma section farbss  "bss_cpu2"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   137      #pragma section fardata "data_cpu2"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   138      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   139      #if defined(__DCC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   140      #pragma section CODE ".text_cpu2"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   141      #pragma section DATA ".data_cpu2" ".bss_cpu2" far-absolute RW
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   142      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   143      #if defined(__ghs__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   144      #pragma ghs section text=".text_cpu2"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   145      #pragma ghs section bss= ".bss_cpu2"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   146      #pragma ghs section data=".data_cpu2"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   147      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   148  #elif ((CPU_WHICH_SERVICE_ETHERNET == 3) && (CPU_WHICH_SERVICE_ETHERNET < IFXCPU_NUM_MODULES))
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   149      #if defined(__GNUC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   150      #pragma section ".text_cpu3" ax
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   151      #pragma section ".bss_cpu3" awc3
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   152      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   153      #if defined(__TASKING__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   154      #pragma section code    "text_cpu3"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   155      #pragma section farbss  "bss_cpu3"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   156      #pragma section fardata "data_cpu3"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   157      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   158      #if defined(__DCC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   159      #pragma section CODE ".text_cpu3"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   160      #pragma section DATA ".data_cpu3" ".bss_cpu3" far-absolute RW
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   161      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   162      #if defined(__ghs__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   163      #pragma ghs section text=".text_cpu3"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   164      #pragma ghs section bss= ".bss_cpu3"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   165      #pragma ghs section data=".data_cpu3"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   166      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   167  #elif ((CPU_WHICH_SERVICE_ETHERNET == 4) && (CPU_WHICH_SERVICE_ETHERNET < IFXCPU_NUM_MODULES))
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   168      #if defined(__GNUC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   169      #pragma section ".text_cpu4" ax
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   170      #pragma section ".bss_cpu4" awc4
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   171      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   172      #if defined(__TASKING__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   173      #pragma section code    "text_cpu4"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   174      #pragma section farbss  "bss_cpu4"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   175      #pragma section fardata "data_cpu4"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   176      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   177      #if defined(__DCC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   178      #pragma section CODE ".text_cpu4"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   179      #pragma section DATA ".data_cpu4" ".bss_cpu4" far-absolute RW
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   180      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   181      #if defined(__ghs__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   182      #pragma ghs section text=".text_cpu4"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   183      #pragma ghs section bss= ".bss_cpu4"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   184      #pragma ghs section data=".data_cpu4"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   185      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   186  #elif ((CPU_WHICH_SERVICE_ETHERNET == 5) && (CPU_WHICH_SERVICE_ETHERNET < IFXCPU_NUM_MODULES))
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   187      #if defined(__GNUC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   188      #pragma section ".text_cpu5" ax
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   189      #pragma section ".bss_cpu5" awc5
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   190      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   191      #if defined(__TASKING__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   192      #pragma section code    "text_cpu5"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   193      #pragma section farbss  "bss_cpu5"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   194      #pragma section fardata "data_cpu5"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   195      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   196      #if defined(__DCC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   197      #pragma section CODE ".text_cpu5"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   198      #pragma section DATA ".data_cpu5" ".bss_cpu5" far-absolute RW
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   199      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   200      #if defined(__ghs__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   201      #pragma ghs section text=".text_cpu5"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   202      #pragma ghs section bss= ".bss_cpu5"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   203      #pragma ghs section data=".data_cpu5"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   204      #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   205  #else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   206  #error "Set CPU_WHICH_SERVICE_ETHERNET to a valid value!"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   207  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   208  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   209  volatile uint32 g_TickCount_1ms;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   210  Ifx_Lwip    g_Lwip;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   211  IfxGeth_Eth g_IfxGeth;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   212  uint32 isrTxCount=0;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   213  uint32 isrRxCount=0;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   214  uint8 channel0TxBuffer1[IFXGETH_MAX_TX_DESCRIPTORS][IFXGETH_MAX_TX_BUFFER_SIZE];
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   215  uint8 channel0RxBuffer1[IFXGETH_MAX_RX_DESCRIPTORS][IFXGETH_MAX_RX_BUFFER_SIZE];
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   216  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   217  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   218  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   219  /*------------------------Private Variables/Constants-------------------------*/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   220  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   221  #if defined(__GNUC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   222      #pragma section // end bss section
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   223  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   224  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   225  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   226  /*-------------------------Function Prototypes--------------------------------*/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   227  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   228  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   229  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   230  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   231  /******************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   232  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   233  #define Ifx_Lwip_timerIncr(var, PERIOD, FLAG) \ 
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   234      {                                         \ 
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   235          var += 1;                             \ 
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   236          if (var >= PERIOD)                    \ 
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   237          {                                     \ 
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   238              var         = 0;                  \ 
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   239              timerFlags |= FLAG;               \ 
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   240          }                                     \ 
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   241      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   242  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   243  /** \brief Timer interrupt callback */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   244  void Ifx_Lwip_onTimerTick(void)
; Function Ifx_Lwip_onTimerTick
.L27:
Ifx_Lwip_onTimerTick:	.type	func

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   245  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   246      Ifx_Lwip *lwip       = &g_Lwip;
	movh.a	a15,#@his(g_Lwip)
	lea	a15,[a15]@los(g_Lwip)
.L240:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   247      uint16    timerFlags = lwip->timerFlags;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   248  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   249      Ifx_Lwip_timerIncr(lwip->timer.arp, IFX_LWIP_ARP_PERIOD, IFX_LWIP_FLAG_ARP);
	ld.hu	d2,[a15]56
.L241:
	mov	d3,#1000
	lea	a2,[a15]64
.L242:
	add	d2,#1
	ld.hu	d4,[a15]64
.L175:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   250  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   251      Ifx_Lwip_timerIncr(lwip->timer.tcp_fast, IFX_LWIP_TCP_FAST_PERIOD, IFX_LWIP_FLAG_TCP_FAST);
	extr.u	d2,d2,#0,#16
	lea	a4,[a15]58
	ld.hu	d15,[a15]58
.L243:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   252      Ifx_Lwip_timerIncr(lwip->timer.tcp_slow, IFX_LWIP_TCP_SLOW_PERIOD, IFX_LWIP_FLAG_TCP_SLOW);
	lea	a5,[a15]60
	ld.hu	d0,[a15]60
.L244:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   253  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   254  #if LWIP_DHCP
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   255      Ifx_Lwip_timerIncr(lwip->timer.dhcp_coarse, IFX_LWIP_DHCP_COARSE_PERIOD, IFX_LWIP_FLAG_DHCP_COARSE);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   256      Ifx_Lwip_timerIncr(lwip->timer.dhcp_fine, IFX_LWIP_DHCP_FINE_PERIOD, IFX_LWIP_FLAG_DHCP_FINE);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   257  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   258  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   259      Ifx_Lwip_timerIncr(lwip->timer.link, IFX_LWIP_LINK_PERIOD, IFX_LWIP_FLAG_LINK);
	lea	a6,[a15]62
	ld.hu	d1,[a15]62
.L245:
	lea	a7,[a15]56
	jlt.u	d2,d3,.L2
	mov	d2,#0
	or	d4,d4,#2
.L2:
	add	d15,#1
	extr.u	d3,d15,#0,#16
	mov	d15,#250
	jlt.u	d3,d15,.L3
	mov	d3,#0
	or	d4,d4,#4
.L3:
	add	d0,#1
	extr.u	d0,d0,#0,#16
	mov	d15,#500
	jlt.u	d0,d15,.L4
	mov	d0,#0
	or	d4,d4,#8
.L4:
	add	d1,#1
	extr.u	d1,d1,#0,#16
	mov	d15,#100
	jlt.u	d1,d15,.L5
	mov	d1,#0
	or	d4,d4,#16
.L5:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   260  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   261      lwip->timerFlags = timerFlags;
	st.h	[a2],d4
.L246:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   262  }
	st.h	[a6],d1
	st.h	[a5],d0
	st.h	[a4],d3
	st.h	[a7],d2
	ret
.L129:
	
__Ifx_Lwip_onTimerTick_function_end:
	.size	Ifx_Lwip_onTimerTick,__Ifx_Lwip_onTimerTick_function_end-Ifx_Lwip_onTimerTick
.L67:
	; End of function
	
	.sdecl	'.text.text_cpu0',code,cluster('Ifx_Lwip_pollTimerFlags')
	.sect	'.text.text_cpu0'
	.align	2
	
	.global	Ifx_Lwip_pollTimerFlags

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   263  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   264  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   265  /** \brief Polling the timer event flags */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   266  void Ifx_Lwip_pollTimerFlags(void)
; Function Ifx_Lwip_pollTimerFlags
.L29:
Ifx_Lwip_pollTimerFlags:	.type	func

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85   *  \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98   *   \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117  /** \brief Event used for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  typedef unsigned int IfxCpu_syncEvent;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147  /** \brief Overlay Address Mask: determines the overlay block size and the bits used for address comparison and translation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151      IfxCpu_OverlayAddressMask_32byte  = 0xFFF,  /**< \brief 32 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152      IfxCpu_OverlayAddressMask_64byte  = 0xFFE,  /**< \brief 64 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153      IfxCpu_OverlayAddressMask_128byte = 0xFFC,  /**< \brief 128 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154      IfxCpu_OverlayAddressMask_256byte = 0xFF8,  /**< \brief 256 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155      IfxCpu_OverlayAddressMask_512byte = 0xFF0,  /**< \brief 512 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156      IfxCpu_OverlayAddressMask_1KB     = 0xFE0,  /**< \brief 1K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157      IfxCpu_OverlayAddressMask_2KB     = 0xFC0,  /**< \brief 2K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158      IfxCpu_OverlayAddressMask_4KB     = 0xF80,  /**< \brief 4K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159      IfxCpu_OverlayAddressMask_8KB     = 0xF00,  /**< \brief 8K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160      IfxCpu_OverlayAddressMask_16KB    = 0xE00,  /**< \brief 16K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161      IfxCpu_OverlayAddressMask_32KB    = 0xC00,  /**< \brief 32K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162      IfxCpu_OverlayAddressMask_64KB    = 0x800,  /**< \brief 64K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163      IfxCpu_OverlayAddressMask_128KB   = 0x0     /**< \brief 128K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_OverlayAddressMask;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166  /** \brief Selects overlay memory used for redirection
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170      IfxCpu_OverlayMemorySelect_core0DsprPspr = 0,  /**< \brief Redirection to Core 0 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171      IfxCpu_OverlayMemorySelect_core1DsprPspr = 1,  /**< \brief Redirection to Core 1 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172      IfxCpu_OverlayMemorySelect_core2DsprPspr = 2,  /**< \brief Redirection to Core 2 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173      IfxCpu_OverlayMemorySelect_core3DsprPspr = 3,  /**< \brief Redirection to Core 3 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_OverlayMemorySelect_core4DsprPspr = 4,  /**< \brief Redirection to Core 4 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_OverlayMemorySelect_core5DsprPspr = 5,  /**< \brief Redirection to Core 5 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_OverlayMemorySelect_lmu           = 8,  /**< \brief Redirection to LMU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_OverlayMemorySelect_emem          = 9,  /**< \brief Redirection to EMEM memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_OverlayMemorySelect_ebu           = 10  /**< \brief Redirection to EBU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_OverlayMemorySelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183      IfxCpu_ResetStatus_notCpuReset   = 0,  /**< \brief No Kernel Reset was executed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184      IfxCpu_ResetStatus_cpuResetBySmu = 1,  /**< \brief Kernel reset was requested by hardware since last clear (SMU) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185      IfxCpu_ResetStatus_cpuResetBySw  = 2   /**< \brief Kernel reset was requested by software since last clear (by writing KRST0.RST=1 and KRST1.RST=1) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186  } IfxCpu_ResetStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief counter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200      uint32  counter;        /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201      boolean overlfow;       /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief To request reset of a particular core, given by coreId
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313  IFX_EXTERN void IfxCpu_triggerCpuReset(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315  /** \brief Retrieve the cause of reset(no reset, hardware(SMU) or software) since last clear by reading KRST0.RSTSTAT and clear it.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_EXTERN IfxCpu_ResetStatus IfxCpu_getCpuResetStatus(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  /** \brief This function disables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631  IFX_EXTERN void IfxCpu_disableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633  /** \brief This function configures and enables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635   * The data overlay provides the capability to redirect selected data accesses to the Overlay memory. Data accesses made by the TriCore to Program Flash, Online Data Acquisition space, or EBU space can be redirected. Overlay memory may be located in the Local Memory (if present), in the Emulation Memory (Emulation Device only), or in the EBU space,or in the DPSR/PSPR memory.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637   * How the overlay Memory works?
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638   * Any data access to segment 8 or segment A is checked against all the activated overlay blocks. For each activated overlay block, address bits 27..5 are compared with the target base address , and this bit-wise comparison is qualified by the content of address mask. Address bits participate in the comparison if the corresponding mask bits are set to one. The access is redirected, if all the address bits selected by mask equal to the corresponding bits in target address.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639   * The address for redirection is constructed as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640   * 1. Address bits 31..22 are set according to the overlay memory selection and the cache-ability of the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641   * 2. For address bits 21..5:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642   * - If the corresponding address mask bit is set, the address bit value is taken from overlay base address .
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643   * - If the corresponding address mask bit is cleared, the address bit value is taken from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644   * 3. Address bits 4..0 are always taken directly from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645   * If there is no redirection, the original address is used to perform the access.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646   * Target address ranges for activated overlay blocks should not overlap or an exception may occur.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649   * \param overlayMemorySelect Overlay Memory Select
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650   * \param overlayAddressMask overlay Address Mask
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651   * \param targetBaseAddress Target Base address (i.e Source address to be re-directed)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652   * \param overlayBaseAddress Overlay or Re-directed Base address (Bits 21..5 of the base address the overlay memory block in the overlay memory)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  IFX_EXTERN void IfxCpu_enableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock, IfxCpu_OverlayMemorySelect overlayMemorySelect, IfxCpu_OverlayAddressMask overlayAddressMask, uint32 targetBaseAddress, uint32 overlayBaseAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675   * CORE_ID register.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678   * e.g:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679   * 1. Check for synchronisation between core 0 and core 5
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680   * # define 0x41U
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681   * 2. Check for synchronisation between core 0 to core 5
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682   * # define 0x5FU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686   * Core 0: 0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687   * Core 1: 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688   * Core 2: 2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689   * Core 3: 3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690   * Core 4: 4
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691   * Core 5: 6
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693   * \param timeoutMilliSec timeout in millisec
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694   * \return Error condition
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699   * // Global variable. preferably located in  shared memory.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700   * IfxCpu_syncEvent event;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701   * boolean errorVal;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703   * // Below code should be repeated in Each core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705   * // Upon reaching Synchonisation point
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706   * IfxCpu_emitEvent(&event);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  /** \brief This function sets a bit corresponding to the core in the event.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718   * A coding example can be found in \ref IfxCpu_waitEvent
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729  /** \brief Sets all CPUs to Idle mode except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730   * \param masterCpu Master CPU Index- All except this will be set to Idle Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_EXTERN void IfxCpu_setAllIdleExceptMasterCpu(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  /** \brief Disables interrupts for all CPUs except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736   * \param masterCpu Master CPU Index- All except this will have their interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  IFX_EXTERN void IfxCpu_disableInterruptsAllExceptMaster(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L176:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L177:
	ne	d15,d15,#0
.L138:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757      __disable();
	disable
.L251:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758      __nop();
	nop
.L135:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   267  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   268      Ifx_Lwip *lwip = &g_Lwip;
	movh.a	a12,#@his(g_Lwip)
	lea	a12,[a12]@los(g_Lwip)
.L252:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   269      uint16    timerFlags;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   270  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   271      /* disable interrupts */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   272      boolean interruptState = IfxCpu_disableInterrupts();
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   273  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   274      timerFlags       = lwip->timerFlags;
	ld.hu	d8,[a12]64
.L178:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   275      lwip->timerFlags = 0;
	mov	d0,#0
	st.h	[a12]64,d0
.L143:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L6
.L253:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85   *  \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98   *   \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117  /** \brief Event used for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  typedef unsigned int IfxCpu_syncEvent;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147  /** \brief Overlay Address Mask: determines the overlay block size and the bits used for address comparison and translation
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151      IfxCpu_OverlayAddressMask_32byte  = 0xFFF,  /**< \brief 32 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152      IfxCpu_OverlayAddressMask_64byte  = 0xFFE,  /**< \brief 64 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153      IfxCpu_OverlayAddressMask_128byte = 0xFFC,  /**< \brief 128 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154      IfxCpu_OverlayAddressMask_256byte = 0xFF8,  /**< \brief 256 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155      IfxCpu_OverlayAddressMask_512byte = 0xFF0,  /**< \brief 512 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156      IfxCpu_OverlayAddressMask_1KB     = 0xFE0,  /**< \brief 1K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157      IfxCpu_OverlayAddressMask_2KB     = 0xFC0,  /**< \brief 2K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158      IfxCpu_OverlayAddressMask_4KB     = 0xF80,  /**< \brief 4K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159      IfxCpu_OverlayAddressMask_8KB     = 0xF00,  /**< \brief 8K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160      IfxCpu_OverlayAddressMask_16KB    = 0xE00,  /**< \brief 16K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161      IfxCpu_OverlayAddressMask_32KB    = 0xC00,  /**< \brief 32K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162      IfxCpu_OverlayAddressMask_64KB    = 0x800,  /**< \brief 64K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163      IfxCpu_OverlayAddressMask_128KB   = 0x0     /**< \brief 128K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_OverlayAddressMask;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166  /** \brief Selects overlay memory used for redirection
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170      IfxCpu_OverlayMemorySelect_core0DsprPspr = 0,  /**< \brief Redirection to Core 0 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171      IfxCpu_OverlayMemorySelect_core1DsprPspr = 1,  /**< \brief Redirection to Core 1 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172      IfxCpu_OverlayMemorySelect_core2DsprPspr = 2,  /**< \brief Redirection to Core 2 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173      IfxCpu_OverlayMemorySelect_core3DsprPspr = 3,  /**< \brief Redirection to Core 3 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_OverlayMemorySelect_core4DsprPspr = 4,  /**< \brief Redirection to Core 4 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_OverlayMemorySelect_core5DsprPspr = 5,  /**< \brief Redirection to Core 5 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_OverlayMemorySelect_lmu           = 8,  /**< \brief Redirection to LMU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_OverlayMemorySelect_emem          = 9,  /**< \brief Redirection to EMEM memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_OverlayMemorySelect_ebu           = 10  /**< \brief Redirection to EBU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_OverlayMemorySelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183      IfxCpu_ResetStatus_notCpuReset   = 0,  /**< \brief No Kernel Reset was executed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184      IfxCpu_ResetStatus_cpuResetBySmu = 1,  /**< \brief Kernel reset was requested by hardware since last clear (SMU) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185      IfxCpu_ResetStatus_cpuResetBySw  = 2   /**< \brief Kernel reset was requested by software since last clear (by writing KRST0.RST=1 and KRST1.RST=1) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186  } IfxCpu_ResetStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief counter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200      uint32  counter;        /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201      boolean overlfow;       /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief To request reset of a particular core, given by coreId
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313  IFX_EXTERN void IfxCpu_triggerCpuReset(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315  /** \brief Retrieve the cause of reset(no reset, hardware(SMU) or software) since last clear by reading KRST0.RSTSTAT and clear it.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_EXTERN IfxCpu_ResetStatus IfxCpu_getCpuResetStatus(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  /** \brief This function disables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631  IFX_EXTERN void IfxCpu_disableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633  /** \brief This function configures and enables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635   * The data overlay provides the capability to redirect selected data accesses to the Overlay memory. Data accesses made by the TriCore to Program Flash, Online Data Acquisition space, or EBU space can be redirected. Overlay memory may be located in the Local Memory (if present), in the Emulation Memory (Emulation Device only), or in the EBU space,or in the DPSR/PSPR memory.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637   * How the overlay Memory works?
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638   * Any data access to segment 8 or segment A is checked against all the activated overlay blocks. For each activated overlay block, address bits 27..5 are compared with the target base address , and this bit-wise comparison is qualified by the content of address mask. Address bits participate in the comparison if the corresponding mask bits are set to one. The access is redirected, if all the address bits selected by mask equal to the corresponding bits in target address.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639   * The address for redirection is constructed as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640   * 1. Address bits 31..22 are set according to the overlay memory selection and the cache-ability of the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641   * 2. For address bits 21..5:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642   * - If the corresponding address mask bit is set, the address bit value is taken from overlay base address .
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643   * - If the corresponding address mask bit is cleared, the address bit value is taken from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644   * 3. Address bits 4..0 are always taken directly from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645   * If there is no redirection, the original address is used to perform the access.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646   * Target address ranges for activated overlay blocks should not overlap or an exception may occur.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649   * \param overlayMemorySelect Overlay Memory Select
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650   * \param overlayAddressMask overlay Address Mask
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651   * \param targetBaseAddress Target Base address (i.e Source address to be re-directed)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652   * \param overlayBaseAddress Overlay or Re-directed Base address (Bits 21..5 of the base address the overlay memory block in the overlay memory)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  IFX_EXTERN void IfxCpu_enableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock, IfxCpu_OverlayMemorySelect overlayMemorySelect, IfxCpu_OverlayAddressMask overlayAddressMask, uint32 targetBaseAddress, uint32 overlayBaseAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675   * CORE_ID register.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678   * e.g:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679   * 1. Check for synchronisation between core 0 and core 5
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680   * # define 0x41U
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681   * 2. Check for synchronisation between core 0 to core 5
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682   * # define 0x5FU
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686   * Core 0: 0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687   * Core 1: 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688   * Core 2: 2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689   * Core 3: 3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690   * Core 4: 4
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691   * Core 5: 6
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693   * \param timeoutMilliSec timeout in millisec
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694   * \return Error condition
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699   * // Global variable. preferably located in  shared memory.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700   * IfxCpu_syncEvent event;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701   * boolean errorVal;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703   * // Below code should be repeated in Each core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705   * // Upon reaching Synchonisation point
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706   * IfxCpu_emitEvent(&event);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  /** \brief This function sets a bit corresponding to the core in the event.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718   * A coding example can be found in \ref IfxCpu_waitEvent
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729  /** \brief Sets all CPUs to Idle mode except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730   * \param masterCpu Master CPU Index- All except this will be set to Idle Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_EXTERN void IfxCpu_setAllIdleExceptMasterCpu(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  /** \brief Disables interrupts for all CPUs except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736   * \param masterCpu Master CPU Index- All except this will have their interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  IFX_EXTERN void IfxCpu_disableInterruptsAllExceptMaster(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      reg.U = __mfcr(CPU_ICR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749      return reg.B.IE != 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757      __disable();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758      __nop();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   759      return enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   760  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   762  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   763  IFX_INLINE void IfxCpu_enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   765      __enable();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   769  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   771      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   772      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   773      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   774      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   776      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   777      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   778      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   780      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   781      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   782          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   783      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   785      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   787      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   789      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   790      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   791      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   792      /*Write to PMA0 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   793      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794      __mtcr(CPU_PMA0, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   795      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   796      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   797  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   799  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   800  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   801  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   802      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   803      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   804      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   805      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   806  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   807      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   808      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   809      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   811      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   812      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   813          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   814      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   816      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   818      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   819  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   820      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   821      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   822      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   823      /*Write to PMA1 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   824      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   825      __mtcr(CPU_PMA1, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   826      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   827      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   828  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   829  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   830  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   831  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   832  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   833      __disable();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   834      __nop();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   835  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   837  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   838  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   839  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   840      Ifx_CPU *module;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   841  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   842      if (cpu < IfxCpu_ResourceCpu_none)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   843      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   844          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   845      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   846      else
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   847      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   848          module = NULL_PTR;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   849      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   851      return module;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   852  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   854  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   855  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   856  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   857      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   858  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   860  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   861  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   862  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   863      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   864  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   866  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   867  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   868  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   869      Ifx_CPU_CORE_ID reg;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   870      reg.U = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   871      return (IfxCpu_Id)reg.B.CORE_ID;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   872  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   874  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   875  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   876  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   877      uint32 reg;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   878      reg = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   879      return (IfxCpu_ResourceCpu)__minu(reg, 5);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   880  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   883  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   884  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   885      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   886  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   887  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   889  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   890  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   891      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   892  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   895  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   896  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   897      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   898  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   899      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   900      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   901          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   902      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   903      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   904      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   905          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   906      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   907      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   908      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   909          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   910      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   911      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   912      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   913          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   914      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   915      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   916      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   917          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   918      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   920      return ccnt.B.COUNTVALUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   921  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   922  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   923  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   924  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   925  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   926      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   928      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   929      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   930          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   931      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   932      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   933      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   934          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   935      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   936      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   937      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   938          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   939      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   940      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   941      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   942          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   943      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   944      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   945      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   946          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   947      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   948  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   949      return ccnt.B.SOVF;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   950  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   951  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   952  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   953  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   954  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   955      uint32  k;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   956      uint32  nxt_cxi_val = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   957      uint32 *prvCsa      = 0U;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   958      uint32 *nxtCsa      = csaBegin;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   959      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   961      for (k = 0; k < numOfCsa; k++)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   962      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   963          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   964  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   965          if (k == 0)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   966          {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   967              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   968          }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   969          else
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   970          {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   971              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   972          }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   974          if (k == (numOfCsa - 3U))
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   975          {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   976              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   977          }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   978  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   979          prvCsa  = (uint32 *)nxtCsa;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   980          nxtCsa += 16;           /* next CSA */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   981      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   982  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   983      *prvCsa = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   984  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   985  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   987  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   988  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   989      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   990      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   991          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   992          Ifx_CPU_PCON1 pcon1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   993          pcon1.U       = __mfcr(CPU_PCON1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   994          pcon1.B.PCINV = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   995          __mtcr(CPU_PCON1, pcon1.U);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   996          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   997      }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   998  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   999  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1001  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1002  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1003      uint8 segment = (uint32)address >> 24;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1004      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1005  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1006  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1007  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1008  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1009  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1010      Ifx_CPU_CCTRL cctrl;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1011      cctrl.U    = __mfcr(CPU_CCTRL);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1012      /*Disable the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1013      cctrl.B.CE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1014      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1016      /* reset the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1017      __mtcr(CPU_CCNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1018      __mtcr(CPU_ICNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1019      __mtcr(CPU_M1CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1020      __mtcr(CPU_M2CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1021      __mtcr(CPU_M3CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1022  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1023      /*Enable the counters, set the counter mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1024      cctrl.B.CE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1025      cctrl.B.CM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1026      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1027  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1029  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1030  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1031  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1033      {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1034          __enable();
	enable

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
.L6:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   276  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   277      /* enable interrupts again */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   278      IfxCpu_restoreInterrupts(interruptState);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   279  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   280  #if LWIP_DHCP
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   281      if (timerFlags & IFX_LWIP_FLAG_DHCP_COARSE)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   282      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   283          /* only if we have a link we will check the dhcp */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   284          if (g_Lwip.netif.flags & NETIF_FLAG_LINK_UP)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   285              dhcp_coarse_tmr();
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   286      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   287  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   288      if (timerFlags & IFX_LWIP_FLAG_DHCP_FINE)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   289      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   290          /* only if we have a link we will check the dhcp */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   291          if (g_Lwip.netif.flags & NETIF_FLAG_LINK_UP)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   292              dhcp_fine_tmr();
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   293      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   294  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   295  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   296      if (timerFlags & IFX_LWIP_FLAG_TCP_FAST)
	jz.t	d8:2,.L7
.L254:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   297      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   298          /* only if we have a link we will check the tcp */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   299          if (g_Lwip.netif.flags & NETIF_FLAG_LINK_UP)
	ld.bu	d15,[a12]41
.L255:
	jz.t	d15:2,.L8
.L256:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   300              tcp_fasttmr();
	call	tcp_fasttmr
.L8:
.L7:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   301      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   302  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   303      if (timerFlags & IFX_LWIP_FLAG_TCP_SLOW)
	jz.t	d8:3,.L9
.L257:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   304      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   305          /* only if we have a link we will check the tcp */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   306          if (g_Lwip.netif.flags & NETIF_FLAG_LINK_UP)
	ld.bu	d15,[a12]41
.L258:
	jz.t	d15:2,.L10
.L259:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   307              tcp_slowtmr();
	call	tcp_slowtmr
.L10:
.L9:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   308      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   309  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   310      if (timerFlags & IFX_LWIP_FLAG_ARP)
	jz.t	d8:1,.L11
.L260:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   311      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   312          /* only if we have a link we will check the arp */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   313          if (g_Lwip.netif.flags & NETIF_FLAG_LINK_UP)
	ld.bu	d15,[a12]41
.L261:
	jz.t	d15:2,.L12
.L262:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   314              etharp_tmr();
	call	etharp_tmr
.L12:
.L11:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   315      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   316  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   317      if (timerFlags & IFX_LWIP_FLAG_LINK)
	jz.t	d8:4,.L13
.L148:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   318      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   319          Ifx_GETH_MAC_PHYIF_CONTROL_STATUS ctrl_status;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   320          ctrl_status.U = GETH_MAC_PHYIF_CONTROL_STATUS.U;
	movh.a	a15,#61442
	ld.w	d0,[a15]@los(0xf001d0f8)
.L179:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   321          if (ctrl_status.B.LNKSTS == 0)
	extr.u	d15,d0,#16,#8
.L263:
	jnz.t	d15:3,.L14
.L264:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   322              netif_set_link_down(&g_Lwip.netif);
	mov.aa	a4,a12
	j	netif_set_link_down
.L13:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   323          else {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   324              IfxGeth_Eth *ethernetif = g_Lwip.netif.state;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   325              // we set the correct duplexMode
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   326              if (ctrl_status.B.LNKMOD == 1)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   327                  IfxGeth_mac_setDuplexMode(ethernetif->gethSFR, IfxGeth_DuplexMode_fullDuplex);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   328              else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   329                  IfxGeth_mac_setDuplexMode(ethernetif->gethSFR, IfxGeth_DuplexMode_halfDuplex);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   330              // we set the correct speed
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   331              if (ctrl_status.B.LNKSPEED == 0)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   332                  // 10MBit speed
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   333                  IfxGeth_mac_setLineSpeed(ethernetif->gethSFR, IfxGeth_LineSpeed_10Mbps);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   334              else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   335                  if (ctrl_status.B.LNKSPEED == 1)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   336                      // 100MBit speed
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   337                      IfxGeth_mac_setLineSpeed(ethernetif->gethSFR, IfxGeth_LineSpeed_100Mbps);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   338                  else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   339                      // 1000MBit speed
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   340                      IfxGeth_mac_setLineSpeed(ethernetif->gethSFR, IfxGeth_LineSpeed_1000Mbps);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   341              netif_set_link_up(&g_Lwip.netif);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   342          }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   343      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   344  }
	ret
.L14:
	ld.a	a2,[a12]28
.L181:
	ld.a	a15,[a2]
.L265:
	jz.t	d15:0,.L16
.L154:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     2   * \file IfxGeth.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     3   * \brief GETH  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     4   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    25   * Standard layer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    27   * \defgroup IfxLld_Geth_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    28   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    29   * \defgroup IfxLld_Geth_Std_MAC_Functions MAC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    30   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    31   * \defgroup IfxLld_Geth_Std_Module_Functions Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    32   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    33   * \defgroup IfxLld_Geth_Std_MTL_Functions MTL Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    34   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    35   * \defgroup IfxLld_Geth_Std_DMA_Functions DMA Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    36   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    37   * \defgroup IfxLld_Geth_Std_DataStructures DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    38   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    39   * \defgroup IfxLld_Geth_Std_Unions Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    40   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    41   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    43  #ifndef IFXGET_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    44  #define IFXGET_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    50  #include "_Impl/IfxGeth_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    51  #include "IfxGeth_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    52  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    53  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    54  #include "IfxGeth_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    57  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    60  /** \brief Max number of TX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    62  #ifndef IFXGETH_MAX_TX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    63  #define IFXGETH_MAX_TX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    64  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    66  /** \brief Max number of RX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    67   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    68  #ifndef IFXGETH_MAX_RX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    69  #define IFXGETH_MAX_RX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    70  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    72  /** \brief Waits until GMII is busy
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    73   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    74  #define IFXGETH_PHY_WAIT_GMII_READY() while (GETH_MAC_MDIO_ADDRESS.B.GB) {}
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    77  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    80  /** \addtogroup IfxLld_Geth_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    81   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    82  /** \brief Programmable burst length of DMA channels\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    83   * Definition in DMA_CHi_TX_CONTROL.B.PBL and DMA_CHi_RX_CONTROL.B.PBL
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    84   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    87      IfxGeth_DmaBurstLength_0  = 0,   /**< \brief maximum burst length 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    88      IfxGeth_DmaBurstLength_1  = 1,   /**< \brief maximum burst length 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    89      IfxGeth_DmaBurstLength_2  = 2,   /**< \brief maximum burst length 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    90      IfxGeth_DmaBurstLength_4  = 4,   /**< \brief maximum burst length 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    91      IfxGeth_DmaBurstLength_8  = 8,   /**< \brief maximum burst length 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    92      IfxGeth_DmaBurstLength_16 = 16,  /**< \brief maximum burst length 16 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    93      IfxGeth_DmaBurstLength_32 = 32   /**< \brief maximum burst length 32 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    94  } IfxGeth_DmaBurstLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    95  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    96  /** \brief DMA channel Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    98  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   100      IfxGeth_DmaChannel_0,     /**< \brief Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   101      IfxGeth_DmaChannel_1,     /**< \brief Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   102      IfxGeth_DmaChannel_2,     /**< \brief Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   103      IfxGeth_DmaChannel_3      /**< \brief Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   104  } IfxGeth_DmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   106  /** \brief DMA interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   110      IfxGeth_DmaInterruptFlag_transmitInterrupt         = 0,  /**< \brief Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   111      IfxGeth_DmaInterruptFlag_transmitStopped           = 1,  /**< \brief Transmit Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   112      IfxGeth_DmaInterruptFlag_transmitBufferUnavailable = 2,  /**< \brief Trasmit Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   113      IfxGeth_DmaInterruptFlag_receiveInterrupt          = 6,  /**< \brief Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   114      IfxGeth_DmaInterruptFlag_receiveBufferUnavailable  = 7,  /**< \brief Receive Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   115      IfxGeth_DmaInterruptFlag_receiveStopped            = 8,  /**< \brief Receive Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   116      IfxGeth_DmaInterruptFlag_receiveWatchdogTimeout    = 9,  /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   117      IfxGeth_DmaInterruptFlag_earlyTransmitInterrupt    = 10, /**< \brief Early Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   118      IfxGeth_DmaInterruptFlag_earlyReceiveInterrupt     = 11, /**< \brief Early Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   119      IfxGeth_DmaInterruptFlag_fatalBusError             = 12, /**< \brief Fatal Bus Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   120      IfxGeth_DmaInterruptFlag_contextDescriptorError    = 13, /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   121      IfxGeth_DmaInterruptFlag_abnormalInterruptSummary  = 14, /**< \brief Abnormal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   122      IfxGeth_DmaInterruptFlag_normalInterruptSummary    = 15  /**< \brief Normal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   123  } IfxGeth_DmaInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   125  /** \brief Ethernet line speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   127  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   128  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   129      IfxGeth_LineSpeed_10Mbps,    /**< \brief 10 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   130      IfxGeth_LineSpeed_100Mbps,   /**< \brief 100 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   131      IfxGeth_LineSpeed_1000Mbps,  /**< \brief 1000 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   132      IfxGeth_LineSpeed_2500Mbps   /**< \brief 2500 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   133  } IfxGeth_LineSpeed;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   135  /** \brief MTL interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   137  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   138  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   139      IfxGeth_MtlInterruptFlag_txQueueUnderflow   = 0,  /**< \brief Transmit Queue Underflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   140      IfxGeth_MtlInterruptFlag_averageBitsPerSlot = 1,  /**< \brief Average Bits Per Slot */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   141      IfxGeth_MtlInterruptFlag_rxQueueOverflow    = 16  /**< \brief Receive Queue Overflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   142  } IfxGeth_MtlInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   144  /** \brief MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   146  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   147  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   148      IfxGeth_MtlQueue_0,     /**< \brief Mtl Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   149      IfxGeth_MtlQueue_1,     /**< \brief Mtl Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   150      IfxGeth_MtlQueue_2,     /**< \brief Mtl Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   151      IfxGeth_MtlQueue_3      /**< \brief Mtl Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   152  } IfxGeth_MtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   154  /** \brief External Phy Interface RMII Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   158      IfxGeth_PhyInterfaceMode_mii   = 0,  /**< \brief MII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   159      IfxGeth_PhyInterfaceMode_rgmii = 1,  /**< \brief RGMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   160      IfxGeth_PhyInterfaceMode_rmii  = 4   /**< \brief RMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   161  } IfxGeth_PhyInterfaceMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   163  /** \brief Preamble Length for Transmit packets\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   164   * Definition in MAC_CONFIGURATION.B.PRELEN
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   166  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   167  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   168      IfxGeth_PreambleLength_7Bytes,  /**< \brief 7 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   169      IfxGeth_PreambleLength_5Bytes,  /**< \brief 5 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   170      IfxGeth_PreambleLength_3Bytes   /**< \brief 3 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   171  } IfxGeth_PreambleLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   173  /** \brief Tx/RX Queue size in blocks of 256 bytes\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   174   * Definition in MTL_TXQi_OPERATION_MODE.B.TQS and MTL_RXQi_OPERATION_MODE.B.RQS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   178      IfxGeth_QueueSize_256Bytes,     /**< \brief 256Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   179      IfxGeth_QueueSize_512Bytes,     /**< \brief 512Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   180      IfxGeth_QueueSize_768Bytes,     /**< \brief 768Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   181      IfxGeth_QueueSize_1024Bytes,    /**< \brief 1024Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   182      IfxGeth_QueueSize_1280Bytes,    /**< \brief 1280Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   183      IfxGeth_QueueSize_1536Bytes,    /**< \brief 1536Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   184      IfxGeth_QueueSize_1792Bytes,    /**< \brief 1792Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   185      IfxGeth_QueueSize_2048Bytes,    /**< \brief 2048Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   186      IfxGeth_QueueSize_2304Bytes,    /**< \brief 2304Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   187      IfxGeth_QueueSize_2560Bytes,    /**< \brief 2560Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   188      IfxGeth_QueueSize_2816Bytes,    /**< \brief 2816Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   189      IfxGeth_QueueSize_3072Bytes,    /**< \brief 3072Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   190      IfxGeth_QueueSize_3328Bytes,    /**< \brief 3328Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   191      IfxGeth_QueueSize_3584Bytes,    /**< \brief 3584Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   192      IfxGeth_QueueSize_3840Bytes,    /**< \brief 3840Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   193      IfxGeth_QueueSize_4096Bytes,    /**< \brief 4096Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   194      IfxGeth_QueueSize_4352Bytes,    /**< \brief 4352Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   195      IfxGeth_QueueSize_4608Bytes,    /**< \brief 4608Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   196      IfxGeth_QueueSize_4864Bytes,    /**< \brief 4864Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   197      IfxGeth_QueueSize_5120Bytes,    /**< \brief 5120Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   198      IfxGeth_QueueSize_5376Bytes,    /**< \brief 5376Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   199      IfxGeth_QueueSize_5632Bytes,    /**< \brief 5632Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   200      IfxGeth_QueueSize_5888Bytes,    /**< \brief 5888Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   201      IfxGeth_QueueSize_6144Bytes,    /**< \brief 6144Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   202      IfxGeth_QueueSize_6400Bytes,    /**< \brief 6400Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   203      IfxGeth_QueueSize_6656Bytes,    /**< \brief 6656Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   204      IfxGeth_QueueSize_6912Bytes,    /**< \brief 6912Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   205      IfxGeth_QueueSize_7168Bytes,    /**< \brief 7168Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   206      IfxGeth_QueueSize_7424Bytes,    /**< \brief 7424Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   207      IfxGeth_QueueSize_7680Bytes,    /**< \brief 7680Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   208      IfxGeth_QueueSize_7936Bytes,    /**< \brief 7936Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   209      IfxGeth_QueueSize_8192Bytes     /**< \brief 8192Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   210  } IfxGeth_QueueSize;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   212  /** \brief Receive Arbitration Algorithm for Rx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   213   * Definition in MTL_OPERATION_MODE.B.RAA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   217      IfxGeth_RxArbitrationAlgorithm_sp  = 0, /**< \brief Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   218      IfxGeth_RxArbitrationAlgorithm_wsp = 1  /**< \brief Weighted Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   219  } IfxGeth_RxArbitrationAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   221  /** \brief Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   225      IfxGeth_RxDmaChannel_0,     /**< \brief Rx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   226      IfxGeth_RxDmaChannel_1,     /**< \brief Rx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   227      IfxGeth_RxDmaChannel_2,     /**< \brief Rx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   228      IfxGeth_RxDmaChannel_3      /**< \brief Rx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   229  } IfxGeth_RxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   230  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   231  /** \brief Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   235      IfxGeth_RxMtlQueue_0,     /**< \brief Rx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   236      IfxGeth_RxMtlQueue_1,     /**< \brief Rx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   237      IfxGeth_RxMtlQueue_2,     /**< \brief Rx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   238      IfxGeth_RxMtlQueue_3      /**< \brief Rx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   239  } IfxGeth_RxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   241  /** \brief Geth service request index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   242   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   243  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   244  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   245      IfxGeth_ServiceRequest_0,     /**< \brief Service Request SR0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   246      IfxGeth_ServiceRequest_1,     /**< \brief Service Request SR1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   247      IfxGeth_ServiceRequest_2,     /**< \brief Service Request SR2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   248      IfxGeth_ServiceRequest_3,     /**< \brief Service Request SR3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   249      IfxGeth_ServiceRequest_4,     /**< \brief Service Request SR4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   250      IfxGeth_ServiceRequest_5,     /**< \brief Service Request SR5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   251      IfxGeth_ServiceRequest_6,     /**< \brief Service Request SR6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   252      IfxGeth_ServiceRequest_7,     /**< \brief Service Request SR7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   253      IfxGeth_ServiceRequest_8,     /**< \brief Service Request SR8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   254      IfxGeth_ServiceRequest_9      /**< \brief Service Request SR9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   255  } IfxGeth_ServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   257  /** \brief Tx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   261      IfxGeth_TxDmaChannel_0,     /**< \brief Tx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   262      IfxGeth_TxDmaChannel_1,     /**< \brief Tx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   263      IfxGeth_TxDmaChannel_2,     /**< \brief Tx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   264      IfxGeth_TxDmaChannel_3      /**< \brief Tx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   265  } IfxGeth_TxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   267  /** \brief Tx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   268   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   269  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   270  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   271      IfxGeth_TxMtlQueue_0,     /**< \brief Tx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   272      IfxGeth_TxMtlQueue_1,     /**< \brief Tx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   273      IfxGeth_TxMtlQueue_2,     /**< \brief Tx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   274      IfxGeth_TxMtlQueue_3      /**< \brief Tx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   275  } IfxGeth_TxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   277  /** \brief Tx Scheduling Algorithm for Tx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   278   * Definition in MTL_OPERATION_MODE.B.SCHALG
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   280  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   281  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   282      IfxGeth_TxSchedulingAlgorithm_wrr = 0,  /**< \brief WRR Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   283      IfxGeth_TxSchedulingAlgorithm_sp  = 3   /**< \brief Strict Priority Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   284  } IfxGeth_TxSchedulingAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   288  /** \brief Duplex Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   289   * Definintion in MAC_CONFIGURATION.B.DM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   291  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   292  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   293      IfxGeth_DuplexMode_halfDuplex,  /**< \brief Half Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   294      IfxGeth_DuplexMode_fullDuplex   /**< \brief Full Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   295  } IfxGeth_DuplexMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   297  /** \brief Loopback Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   298   * Definition in MAC_CONFIGURATION.B.LM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   302      IfxGeth_LoopbackMode_disable,  /**< \brief Disable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   303      IfxGeth_LoopbackMode_enable    /**< \brief Enable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   304  } IfxGeth_LoopbackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   306  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   307  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   308  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   310  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   311   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   312  /** \brief Bit Fields of RDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   314  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   316      uint32 RTSL : 32;     /**< \brief Receive Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   317  } IfxGeth_RxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   319  /** \brief Bit Fields of RDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   321  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   323      uint32 RTSH : 32;     /**< \brief Receive Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   324  } IfxGeth_RxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   326  /** \brief Bit Fields of RDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   328  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   330      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   331  } IfxGeth_RxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   333  /** \brief Bit Fields of RDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   334   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   335  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   337      uint32 reserved_0 : 29;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   338      uint32 DE : 1;              /**< \brief Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   339      uint32 CTXT : 1;            /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   340      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   341  } IfxGeth_RxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   343  /** \brief Bit Fields of RDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   344   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   345  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   346  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   347      uint32 BUF1AP : 32;     /**< \brief Header or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   348  } IfxGeth_RxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   349  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   350  /** \brief Bit Fields of RDES0 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   352  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   354      uint32 OVT : 16;     /**< \brief Outer VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   355      uint32 IVT : 16;     /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   356  } IfxGeth_RxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   358  /** \brief Bit Fields of RDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   359   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   360  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   361  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   362      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   363  } IfxGeth_RxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   365  /** \brief Bit Fields of RDES1 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   367  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   369      uint32 PT : 3;       /**< \brief Payload Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   370      uint32 IPHE : 1;     /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   371      uint32 IP4 : 1;      /**< \brief IPV4 Header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   372      uint32 IP6 : 1;      /**< \brief IPv6 header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   373      uint32 IPCB : 1;     /**< \brief IP Checksum Bypassed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   374      uint32 IPCE : 1;     /**< \brief IP Payload Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   375      uint32 PMT : 4;      /**< \brief PTP Message Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   376      uint32 PFT : 1;      /**< \brief PTP Packet Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   377      uint32 PV : 1;       /**< \brief PTP Version */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   378      uint32 TSA : 1;      /**< \brief Timestamp Available */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   379      uint32 TD : 1;       /**< \brief Timestamp Dropped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   380      uint32 OPC : 16;     /**< \brief OAM Sub-Type Code, or MAC Control Packet opcode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   381  } IfxGeth_RxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   383  /** \brief Bit Fields of RDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   384   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   385  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   386  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   387      uint32 BUF2AP : 32;     /**< \brief Buffer 2 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   388  } IfxGeth_RxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   390  /** \brief Bit Fields of RDES2 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   392  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   394      uint32 HL : 10;             /**< \brief L3/L4 Header Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   395      uint32 ARPNR : 1;           /**< \brief ARP Reply Not Generated */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   396      uint32 reserved_11 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   397      uint32 ITS : 1;             /**< \brief Inner VLAN Tag Filter Status (ITS) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   398      uint32 OTS : 1;             /**< \brief VLAN Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   399      uint32 SAF : 1;             /**< \brief SA Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   400      uint32 DAF : 1;             /**< \brief Destination Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   401      uint32 HF : 1;              /**< \brief Hash Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   402      uint32 MADRM : 8;           /**< \brief MAC Address Match or Hash Value */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   403      uint32 L3FM : 1;            /**< \brief Layer 3 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   404      uint32 L4FM : 1;            /**< \brief Layer 4 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   405      uint32 L3L4FM : 3;          /**< \brief Layer 3 and Layer 4 Filter Number Matched */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   406  } IfxGeth_RxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   408  /** \brief Bit Fields of RDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   409   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   410  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   412      uint32 reserved_0 : 24;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   413      uint32 BUF1V : 1;           /**< \brief Buffer 1 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   414      uint32 BUF2V : 1;           /**< \brief Buffer 2 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   415      uint32 reserved_27 : 4;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   416      uint32 IOC : 1;             /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   417      uint32 OWN : 1;             /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   418  } IfxGeth_RxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   420  /** \brief Bit Fields of RDES3 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   422  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   424      uint32 PL : 15;      /**< \brief Packet Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   425      uint32 ES : 1;       /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   426      uint32 LT : 3;       /**< \brief Length/Type Field */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   427      uint32 DE : 1;       /**< \brief Dribble Bit Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   428      uint32 RE : 1;       /**< \brief Receive Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   429      uint32 OE : 1;       /**< \brief Overflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   430      uint32 RWT : 1;      /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   431      uint32 GP : 1;       /**< \brief Giant Packet */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   432      uint32 CE : 1;       /**< \brief CRC Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   433      uint32 RS0V : 1;     /**< \brief Receive Status RDES0 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   434      uint32 RS1V : 1;     /**< \brief Receive Status RDES1 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   435      uint32 RS2V : 1;     /**< \brief Receive Status RDES2 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   436      uint32 LD : 1;       /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   437      uint32 FD : 1;       /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   438      uint32 CTXT : 1;     /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   439      uint32 OWN : 1;      /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   440  } IfxGeth_RxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   442  /** \brief Bit Fields of TDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   443   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   444  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   445  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   446      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   447  } IfxGeth_TxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   448  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   449  /** \brief Bit Fields of TDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   450   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   451  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   452  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   453      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   454  } IfxGeth_TxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   456  /** \brief Bit Fields of TDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   458  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   460      uint32 MSS : 14;            /**< \brief Maximum Segment Size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   461      uint32 reserved_14 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   462      uint32 IVT : 16;            /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   463  } IfxGeth_TxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   465  /** \brief Bit Fields of TDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   466   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   467  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   468  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   469      uint32 VT : 16;             /**< \brief VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   470      uint32 VLTV : 1;            /**< \brief VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   471      uint32 IVLTV : 1;           /**< \brief Inner VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   472      uint32 IVTIR : 2;           /**< \brief Inner VLAN Tag Insert or Replace */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   473      uint32 reserved_20 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   474      uint32 CDE : 1;             /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   475      uint32 reserved_24 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   476      uint32 TCMSSV : 1;          /**< \brief One-Step Timestamp Correction Input or MSS Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   477      uint32 OSTC : 1;            /**< \brief One-Step Timestamp Correction Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   478      uint32 reserved_28 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   479      uint32 CTXT : 1;            /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   480      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   481  } IfxGeth_TxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   483  /** \brief Bit Fields of TDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   484   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   485  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   486  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   487      uint32 BUF1AP : 32;     /**< \brief Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   488  } IfxGeth_TxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   490  /** \brief Bit Fields of TDES0 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   491   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   492  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   493  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   494      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   495  } IfxGeth_TxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   496  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   497  /** \brief Bit Fields of TDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   499  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   500  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   501      uint32 BUF2AP : 32;     /**< \brief Buffer 2 or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   502  } IfxGeth_TxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   503  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   504  /** \brief Bit Fields of TDES1 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   505   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   506  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   507  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   508      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   509  } IfxGeth_TxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   511  /** \brief Bit Fields of TDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   512   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   513  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   514  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   515      uint32 B1L : 14;          /**< \brief Header Length or Buffer 1 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   516      uint32 VTIR : 2;          /**< \brief VLAN Tag Insertion or Replacement */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   517      uint32 B2L : 14;          /**< \brief Buffer 2 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   518      uint32 TTSE_TMWD : 1;     /**< \brief Transmit Timestamp Enable or External TSO Memory Write Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   519      uint32 IOC : 1;           /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   520  } IfxGeth_TxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   522  /** \brief Bit Fields of TDES2 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   524  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   526      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   527  } IfxGeth_TxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   529  /** \brief Bit Fields of TDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   530   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   531  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   532  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   533      uint32 FL_TPL : 15;         /**< \brief Packet Length or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   534      uint32 TPL : 1;             /**< \brief Reserved or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   535      uint32 CIC_TPL : 2;         /**< \brief Checksum Insertion Control or TCP Payload LengthThese bits control the checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   536      uint32 TSE : 1;             /**< \brief TCP Segmentation Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   537      uint32 SLOTNUM_THL : 4;     /**< \brief SLOTNUM: Slot Number Control Bits in AV Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   538      uint32 SAIC : 3;            /**< \brief SA Insertion Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   539      uint32 CPC : 2;             /**< \brief CRC Pad Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   540      uint32 LD : 1;              /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   541      uint32 FD : 1;              /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   542      uint32 CTXT : 1;            /**< \brief Context TypeThis bit should be set to 1'b0 for normal descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   543      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   544  } IfxGeth_TxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   546  /** \brief Bit Fields of TDES3 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   548  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   550      uint32 IHE : 1;              /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   551      uint32 DB : 1;               /**< \brief Deferred Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   552      uint32 UF : 1;               /**< \brief Underflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   553      uint32 ED : 1;               /**< \brief Excessive Deferral */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   554      uint32 CC : 4;               /**< \brief Collision Count */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   555      uint32 EC : 1;               /**< \brief Excessive Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   556      uint32 LC : 1;               /**< \brief Late Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   557      uint32 NC : 1;               /**< \brief No Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   558      uint32 LOC : 1;              /**< \brief Loss of Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   559      uint32 PCE : 1;              /**< \brief Payload Checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   560      uint32 FF : 1;               /**< \brief Packet Flushed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   561      uint32 JT : 1;               /**< \brief Jabber Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   562      uint32 ES : 1;               /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   563      uint32 reserved_16 : 1;      /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   564      uint32 TTSS : 1;             /**< \brief Tx Timestamp Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   565      uint32 reserved_18 : 10;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   566      uint32 LD : 1;               /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   567      uint32 FD : 1;               /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   568      uint32 CTXT : 1;             /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   569      uint32 OWN : 1;              /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   570  } IfxGeth_TxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   572  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   574  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   575   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   576  /** \brief RDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   577   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   578  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   580      IfxGeth_RxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   581      IfxGeth_RxDescr0_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   582      IfxGeth_RxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   583      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   584  } IfxGeth_RxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   586  /** \brief RDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   588  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   589  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   590      IfxGeth_RxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   591      IfxGeth_RxDescr1_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   592      IfxGeth_RxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   593      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   594  } IfxGeth_RxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   596  /** \brief RDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   597   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   598  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   599  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   600      IfxGeth_RxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   601      IfxGeth_RxDescr2_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   602      IfxGeth_RxContextDescr2_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   603      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   604  } IfxGeth_RxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   605  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   606  /** \brief RDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   607   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   608  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   610      IfxGeth_RxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   611      IfxGeth_RxDescr3_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   612      IfxGeth_RxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   613      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   614  } IfxGeth_RxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   616  /** \brief TDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   617   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   618  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   619  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   620      IfxGeth_TxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   621      IfxGeth_TxDescr0_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   622      IfxGeth_TxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   623      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   624  } IfxGeth_TxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   626  /** \brief TDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   628  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   630      IfxGeth_TxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   631      IfxGeth_TxDescr1_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   632      IfxGeth_TxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   633      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   634  } IfxGeth_TxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   636  /** \brief TDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   637   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   638  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   640      IfxGeth_TxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   641      IfxGeth_TxDescr2_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   642      IfxGeth_TxContextDescr2_Bits C;       /**< \brief COntext Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   643      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   644  } IfxGeth_TxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   646  /** \brief TDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   647   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   648  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   649  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   650      IfxGeth_TxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   651      IfxGeth_TxDescr3_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   652      IfxGeth_TxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   653      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   654  } IfxGeth_TxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   656  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   657  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   658  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   659   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   660  /** \brief Rx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   661   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   662  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   663  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   664      IfxGeth_RxDescr0 RDES0;       /**< \brief Rx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   665      IfxGeth_RxDescr1 RDES1;       /**< \brief Rx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   666      IfxGeth_RxDescr2 RDES2;       /**< \brief Rx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   667      IfxGeth_RxDescr3 RDES3;       /**< \brief Rx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   668  } IfxGeth_RxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   670  /** \brief Tx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   671   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   672  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   673  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   674      IfxGeth_TxDescr0 TDES0;       /**< \brief Tx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   675      IfxGeth_TxDescr1 TDES1;       /**< \brief Tx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   676      IfxGeth_TxDescr2 TDES2;       /**< \brief Tx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   677      IfxGeth_TxDescr3 TDES3;       /**< \brief Tx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   678  } IfxGeth_TxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   680  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   681  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   682  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   683   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   684  /** \brief Rx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   685   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   686  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   687  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   688      volatile IfxGeth_RxDescr descr[IFXGETH_MAX_RX_DESCRIPTORS];       /**< \brief list of RX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   689  } IfxGeth_RxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   691  /** \brief Tx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   692   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   693  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   694  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   695      volatile IfxGeth_TxDescr descr[IFXGETH_MAX_TX_DESCRIPTORS];       /**< \brief list of TX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   696  } IfxGeth_TxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   697  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   698  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   700  /** \addtogroup IfxLld_Geth_Std_MAC_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   701   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   703  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   704  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   705  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   706  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   707  /** \brief Disables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   708   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   709   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   710   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   711  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   713  /** \brief Disables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   714   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   715   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   716   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   717  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   719  /** \brief Enables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   720   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   721   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   722   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   723  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   725  /** \brief Enables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   726   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   727   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   728   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   729  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   731  /** \brief Enables / Disables Passing of All Multicast packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   732   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   733   * \param enabled Pass All Multicast enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   734   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   735   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   736  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   737  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   738  /** \brief Enables / Disables CRC Checking for Received Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   739   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   740   * \param enabled CRC Checking for Received Packets enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   741   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   742   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   743  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   745  /** \brief Enables/Disables the Automatic Pad or CRC Stripping for frames less than 1536 bytes and \n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   746   *     CRC stripping for Type packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   747   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   748   * \param acsEnabled Automatic Pad or CRC Stripping enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   749   * \param cstEnabled CRC Stripping for Type packets enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   750   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   751   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   752  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   754  /** \brief Sets the Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   755   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   756   * \param mode Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   757   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   758   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   759  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   761  /** \brief Sets the Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   762   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   763   * \param length Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   764   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   765   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   766  IFX_INLINE void IfxGeth_mac_setPreambleLength(Ifx_GETH *gethSFR, IfxGeth_PreambleLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   768  /** \brief Enables / Disables Promiscuous Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   769   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   770   * \param enabled Promiscuous Mode enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   771   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   772   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   773  IFX_INLINE void IfxGeth_mac_setPromiscuousMode(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   775  /** \brief Set the priorities for Rx queues for mapping tagged packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   776   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   777   * \param channel Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   778   * \param priorities Rx queue priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   779   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   780   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   781  IFX_INLINE void IfxGeth_mac_setVlanPriorityQueueRouting(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint8 priorities);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   782  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   783  /** \brief Enable / Disable Queue Insertion
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   784   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   785   * \param enable config parameter TRUE: enabled/ FALSE: disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   786   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   787   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   788  IFX_INLINE void IfxGeth_mac_setQueueVlanInsertion(Ifx_GETH *gethSFR, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   789  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   790  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   791  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   792  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   793  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   794  /** \brief Sets the Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   795   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   796   * \param speed Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   797   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   798   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   799  IFX_EXTERN void IfxGeth_mac_setLineSpeed(Ifx_GETH *gethSFR, IfxGeth_LineSpeed speed);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   801  /** \brief Sets the MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   802   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   803   * \param macAddress MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   804   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   805   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   806  IFX_EXTERN void IfxGeth_mac_setMacAddress(Ifx_GETH *gethSFR, uint8 *macAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   807  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   808  /** \brief Writes to Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   809   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   810   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   811   * \param vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   812   * \return TRUE if write was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   813   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   814  IFX_EXTERN boolean IfxGeth_mac_writeQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   816  /** \brief Reads from Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   817   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   818   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   819   * \param const vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   820   * \return TRUE if read was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   821   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   822  IFX_EXTERN boolean IfxGeth_mac_readQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 *const vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   823  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   824  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   825  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   826  /** \addtogroup IfxLld_Geth_Std_Module_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   827   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   829  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   830  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   831  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   833  /** \brief Returns the status of whether clock for GETH module is enabled or diabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   834   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   835   * \return Status:\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   836   * TRUE : if module is enabled\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   837   * FALSE : if module is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   838   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   839  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   841  /** \brief Sets the External Phy Interface mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   842   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   843   * \param mode PHY Interface Mode (MII/RGMII/RMII)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   844   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   845   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   846  IFX_INLINE void IfxGeth_setPhyInterfaceMode(Ifx_GETH *gethSFR, IfxGeth_PhyInterfaceMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   847  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   848  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   849  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   850  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   851  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   852  /** \brief Disables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   853   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   854   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   855   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   856  IFX_EXTERN void IfxGeth_disableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   858  /** \brief Enables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   859   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   860   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   861   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   862  IFX_EXTERN void IfxGeth_enableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   863  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   864  /** \brief Returns the Src Pointer of the selected GETH service request node
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   865   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   866   * \param serviceRequest Service Request number
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   867   * \return pointer to Src register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   868   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   869  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGeth_getSrcPointer(Ifx_GETH *gethSFR, IfxGeth_ServiceRequest serviceRequest);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   870  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   871  /** \brief resets Ethernet kernel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   872   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   873   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   874   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   875  IFX_EXTERN void IfxGeth_resetModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   876  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   877  /** \brief API to get the resource index of the GETH specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   878   * \param geth Pointer to Geth register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   879   * \return geth resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   881  IFX_EXTERN IfxGeth_Index IfxGeth_getIndex(Ifx_GETH *geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   883  /** \brief Get the address of the specified GETH resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   884   * \param geth Module index of the GETH
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   885   * \return GETH module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   887  IFX_EXTERN Ifx_GETH *IfxGeth_getAddress(IfxGeth_Index geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   889  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   890  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   891  /** \addtogroup IfxLld_Geth_Std_MTL_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   892   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   894  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   895  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   896  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   897  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   898  /** \brief Enables the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   899   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   900   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   901   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   902   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   903  IFX_INLINE void IfxGeth_mtl_enableRxQueue(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   904  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   905  /** \brief sets the Rx Arbitration algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   906   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   907   * \param arbitrationAlgorithm Rx Arbitration Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   908   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   909   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   910  IFX_INLINE void IfxGeth_mtl_setRxArbitrationAlgorithm(Ifx_GETH *gethSFR, IfxGeth_RxArbitrationAlgorithm arbitrationAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   911  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   912  /** \brief Sets the selected DMA Channel mapping for the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   913   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   914   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   915   * \param dmaChannel DMA channel for selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   916   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   917   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   918  IFX_INLINE void IfxGeth_mtl_setRxQueueDmaChannelMapping(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_RxDmaChannel dmaChannel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   920  /** \brief Sets the selected Rx Queue for DA based DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   921   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   922   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   923   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   924   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   925   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   926  IFX_INLINE void IfxGeth_mtl_setRxQueueForDaBasedDmaChannel(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   928  /** \brief sets the Tx Scheduling algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   929   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   930   * \param schedulingAlgorithm Tx Scheduling Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   931   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   932   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   933  IFX_INLINE void IfxGeth_mtl_setTxSchedulingAlgorithm(Ifx_GETH *gethSFR, IfxGeth_TxSchedulingAlgorithm schedulingAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   934  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   935  /** \brief Enable and set queue ID to route packets failing unicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   936   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   937   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   938   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   939   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   940  IFX_INLINE void IfxGeth_mtl_enableUnicastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   941  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   942  /** \brief Disable queuing of packets failing unicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   943   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   944   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   945   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   946  IFX_INLINE void IfxGeth_mtl_disableUnicastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   947  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   948  /** \brief Enable and set queue ID to route packets failing multicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   949   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   950   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   951   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   952   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   953  IFX_INLINE void IfxGeth_mtl_enableMulticastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   954  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   955  /** \brief Disable queuing of packets failing multicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   956   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   957   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   958   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   959  IFX_INLINE void IfxGeth_mtl_disableMulticastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   961  /** \brief Enable and set queue ID to route packets failing VLAN tag filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   962   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   963   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   964   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   965   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   966  IFX_INLINE void IfxGeth_mtl_enableVlanFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   967  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   968  /** \brief Disable queuing of packets failing VLAN tag filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   969   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   970   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   971   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   972  IFX_INLINE void IfxGeth_mtl_disableVlanFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   974  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   975  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   976  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   977  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   978  /** \brief Clears all the Mtl interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   979   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   980   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   981   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   982   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   983  IFX_EXTERN void IfxGeth_mtl_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   984  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   985  /** \brief Clears the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   986   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   987   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   988   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   989   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   990   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   991  IFX_EXTERN void IfxGeth_mtl_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   992  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   993  /** \brief Disables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   994   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   995   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   996   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   997   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   998   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   999  IFX_EXTERN void IfxGeth_mtl_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1001  /** \brief Enables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1002   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1003   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1004   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1005   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1007  IFX_EXTERN void IfxGeth_mtl_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1009  /** \brief Enables the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1010   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1011   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1012   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1013   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1014  IFX_EXTERN void IfxGeth_mtl_enableTxQueue(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1016  /** \brief Returns the status of selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1017   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1018   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1019   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1020   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1021   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1022   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1023  IFX_EXTERN boolean IfxGeth_mtl_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1024  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1025  /** \brief Sets the Receive Forward Error Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1026   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1027   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1028   * \param enabled Enable/Disable Receive Forward Error Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1029   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1031  IFX_EXTERN void IfxGeth_mtl_setRxForwardErrorPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1033  /** \brief Sets the Receive Forward Undersized Good Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1034   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1035   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1036   * \param enabled Enable/Disable Receive Forward Undersized Good Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1037   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1038   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1039  IFX_EXTERN void IfxGeth_mtl_setRxForwardUndersizedGoodPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1040  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1041  /** \brief Sets the size of the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1042   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1043   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1044   * \param queueSize Rx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1045   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1046   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1047  IFX_EXTERN void IfxGeth_mtl_setRxQueueSize(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1048  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1049  /** \brief Sets the Receive Store And Forward for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1050   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1051   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1052   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1053   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1054   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1055  IFX_EXTERN void IfxGeth_mtl_setRxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1056  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1057  /** \brief Sets the size of the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1058   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1059   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1060   * \param queueSize Tx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1061   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1062   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1063  IFX_EXTERN void IfxGeth_mtl_setTxQueueSize(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1065  /** \brief Sets the Transmit Store And Forward for teh selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1066   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1067   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1068   * \param enabled Enable/Disable Transmit Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1069   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1070   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1071  IFX_EXTERN void IfxGeth_mtl_setTxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1072  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1073  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1074  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1075  /** \addtogroup IfxLld_Geth_Std_DMA_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1076   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1077  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1078  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1079  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1080  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1081  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1082  /** \brief Applies a software reset of MAC and DMA controller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1083   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1084   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1085   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1086  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1087  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1088  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1089   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1090   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1091   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1092   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1093  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1094  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1095  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1096   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1097   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1098   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1099   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1101  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1102  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1103  /** \brief Disables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1104   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1105   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1106   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1107   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1108   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1109  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1110  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1111  /** \brief Enables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1112   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1113   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1114   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1115   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1116   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1117  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1118  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1119  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1120   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1121   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1122   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1123   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1124   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1125   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1126  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1127  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1128  /** \brief Wiats until software reset of MAC and DMA controller is done or until timout.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1129   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1130   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1131  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1132  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1133  /** \brief Enables/Disables Address aligned beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1134   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1135   * \param enabled Enable/Disable Address Aligned Beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1136   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1137   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1138  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1139  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1140  /** \brief Enables/Disables Fixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1141   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1142   * \param enabled Enable/Disable Fixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1144   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1145  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1146  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1147  /** \brief Enables/Disables Mixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1148   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1149   * \param enabled Enable/Disable Mixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1151   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1152  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1154  /** \brief sets the size of the rx buffers in descriptors for selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1155   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1156   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1157   * \param size Rx Buffers size (applies for both buffers)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1159   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1160  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1161  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1162  /** \brief sets the base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1163   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1164   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1165   * \param address base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1166   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1167   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1168  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1169  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1170  /** \brief sets the Length of the Rx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1171   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1172   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1173   * \param length Length of the ring (no of total Rx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1174   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1176  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1177  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1178  /** \brief sets the address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1179   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1180   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1181   * \param address address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1182   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1183   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1184  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1185  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1186  /** \brief sets the programmable burst length of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1187   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1188   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1189   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1190   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1191   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1192  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1193  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1194  /** \brief sets the base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1195   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1196   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1197   * \param address base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1198   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1199   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1200  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1201  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1202  /** \brief sets the Length of the Tx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1203   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1204   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1205   * \param length Length of the ring (no of total Tx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1206   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1207   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1208  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1209  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1210  /** \brief sets the address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1211   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1212   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1213   * \param address address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1214   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1215   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1216  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1217  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1218  /** \brief sets the programmable burst length of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1219   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1220   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1221   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1222   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1223   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1224  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1225  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1226  /** \brief starts the receiver of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1227   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1228   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1229   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1230   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1231  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1232  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1233  /** \brief starts the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1234   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1235   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1236   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1237   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1238  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1239  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1240  /** \brief Stops the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1241   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1242   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1244   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1245  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1246  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1247  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1248  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1249  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1251  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1252  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1253  /** \brief Enables/Disables the MAC operation in the loopback mode at GMII or MII
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1254   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1255   * \param mode Loopback Mode Enable / Disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1257   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1258  IFX_INLINE void IfxGeth_mac_setLoopbackMode(Ifx_GETH *gethSFR, IfxGeth_LoopbackMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1259  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1260  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1261  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1262  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1263  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1264  /** \brief Reads a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1265   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1266   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1267   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1268   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1269   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1270  IFX_EXTERN void IfxGeth_phy_Clause22_readMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1271  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1272  /** \brief Writes to a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1273   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1274   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1275   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1277   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1278  IFX_EXTERN void IfxGeth_Phy_Clause22_writeMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1279  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1280  /** \brief Reads a MDIO register of Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1281   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1282   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1283   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1284   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1285   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1286   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1287  IFX_EXTERN void IfxGeth_phy_Clause45_readMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1288  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1289  /** \brief Writes to a MDIO register for Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1290   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1291   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1292   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1293   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1294   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1295   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1296  IFX_EXTERN void IfxGeth_Phy_Clause45_writeMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1297  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1298  /** \brief Sets the maximum size of the packet
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1299   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1300   * \param maxPacketSize Minimum size of the frame beyond which giant packet status is set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1301   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1302   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1303  IFX_EXTERN void IfxGeth_mac_setMaxPacketSize(Ifx_GETH *gethSFR, uint16 maxPacketSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1304  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1305  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1306  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1307  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1308  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1309  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1310  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1311      gethSFR->DMA_MODE.B.SWR = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1312  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1313  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1314  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1315  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1316  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1317      gethSFR->DMA_CH[channelId].STATUS.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1318  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1319  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1320  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1321  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1323      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1324      gethSFR->DMA_CH[channelId].STATUS.U = value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1325  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1326  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1327  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1328  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1330      uint32 value = ~(1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1331      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U &= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1332  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1333  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1334  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1335  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1337      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1338      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U |= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1339  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1340  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1341  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1342  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1343  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1344      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1345      return gethSFR->DMA_CH[channelId].STATUS.U & (Ifx_UReg_32Bit)value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1346  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1347  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1348  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1349  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1350  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1351      return gethSFR->DMA_MODE.B.SWR == 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1352  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1353  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1354  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1355  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1356  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1357      gethSFR->DMA_SYSBUS_MODE.B.AAL = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1358  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1359  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1360  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1361  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1362  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1363      gethSFR->DMA_SYSBUS_MODE.B.FB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1364  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1365  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1366  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1367  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1369      gethSFR->DMA_SYSBUS_MODE.B.MB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1370  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1371  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1372  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1373  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1374  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1375      /* [RBSZ_13_Y:RBSZ_X_0] represents the size of the Rx buffer*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1376      gethSFR->DMA_CH[channel].RX_CONTROL.B.RBSZ_13_Y = (uint32)((size >> 2) & IFX_GETH_DMA_CH_RX_CONTROL_RBSZ_13_Y_MSK);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1377  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1378  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1379  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1380  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1381  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1382      gethSFR->DMA_CH[channel].RXDESC_LIST_ADDRESS.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1383  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1384  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1385  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1386  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1387  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1388      gethSFR->DMA_CH[channel].RXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1389  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1390  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1391  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1392  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1394      gethSFR->DMA_CH[channel].RXDESC_TAIL_POINTER.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1395  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1396  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1397  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1398  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1399  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1400      gethSFR->DMA_CH[channel].RX_CONTROL.B.RXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1401  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1402  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1403  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1404  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1405  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1406      gethSFR->DMA_CH[channel].TXDESC_LIST_ADDRESS.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1407  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1409  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1410  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1412      gethSFR->DMA_CH[channel].TXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1413  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1414  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1415  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1416  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1417  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1418      gethSFR->DMA_CH[channel].TXDESC_TAIL_POINTER.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1419  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1420  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1421  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1422  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1424      gethSFR->DMA_CH[channel].TX_CONTROL.B.TXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1425  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1426  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1427  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1428  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1429  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1430      gethSFR->DMA_CH[channel].RX_CONTROL.B.SR = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1431  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1432  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1433  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1434  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1435  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1436      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1437  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1438  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1439  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1440  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1441  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1442      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1443  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1444  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1445  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1446  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1447  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1448      return (gethSFR->CLC.B.DISS == 0) ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1449  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1450  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1451  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1452  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1453  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1454      gethSFR->MAC_CONFIGURATION.B.RE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1455  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1456  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1457  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1458  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1460      gethSFR->MAC_CONFIGURATION.B.TE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1461  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1462  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1463  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1464  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1465  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1466      gethSFR->MAC_CONFIGURATION.B.RE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1467  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1468  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1469  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1470  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1471  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1472      gethSFR->MAC_CONFIGURATION.B.TE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1473  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1474  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1475  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1476  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1477  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1478      gethSFR->MAC_PACKET_FILTER.B.PM = ((enabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1479  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1480  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1481  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1482  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1483  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1484      gethSFR->MAC_EXT_CONFIGURATION.B.DCRCC = ((enabled == 1) ? 0 : 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1485  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1487  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1488  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1489  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1490      gethSFR->MAC_CONFIGURATION.B.ACS = ((acsEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1491      gethSFR->MAC_CONFIGURATION.B.CST = ((cstEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1492  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1494  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1495  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1496  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1497      gethSFR->MAC_CONFIGURATION.B.DM = mode;
	ld.bu	d15,[a15]1
.L266:
	or	d15,#32
	j	.L17
.L16:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     2   * \file IfxGeth.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     3   * \brief GETH  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     4   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    25   * Standard layer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    27   * \defgroup IfxLld_Geth_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    28   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    29   * \defgroup IfxLld_Geth_Std_MAC_Functions MAC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    30   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    31   * \defgroup IfxLld_Geth_Std_Module_Functions Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    32   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    33   * \defgroup IfxLld_Geth_Std_MTL_Functions MTL Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    34   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    35   * \defgroup IfxLld_Geth_Std_DMA_Functions DMA Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    36   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    37   * \defgroup IfxLld_Geth_Std_DataStructures DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    38   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    39   * \defgroup IfxLld_Geth_Std_Unions Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    40   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    41   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    43  #ifndef IFXGET_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    44  #define IFXGET_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    50  #include "_Impl/IfxGeth_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    51  #include "IfxGeth_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    52  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    53  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    54  #include "IfxGeth_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    57  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    60  /** \brief Max number of TX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    62  #ifndef IFXGETH_MAX_TX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    63  #define IFXGETH_MAX_TX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    64  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    66  /** \brief Max number of RX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    67   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    68  #ifndef IFXGETH_MAX_RX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    69  #define IFXGETH_MAX_RX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    70  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    72  /** \brief Waits until GMII is busy
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    73   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    74  #define IFXGETH_PHY_WAIT_GMII_READY() while (GETH_MAC_MDIO_ADDRESS.B.GB) {}
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    77  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    80  /** \addtogroup IfxLld_Geth_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    81   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    82  /** \brief Programmable burst length of DMA channels\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    83   * Definition in DMA_CHi_TX_CONTROL.B.PBL and DMA_CHi_RX_CONTROL.B.PBL
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    84   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    87      IfxGeth_DmaBurstLength_0  = 0,   /**< \brief maximum burst length 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    88      IfxGeth_DmaBurstLength_1  = 1,   /**< \brief maximum burst length 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    89      IfxGeth_DmaBurstLength_2  = 2,   /**< \brief maximum burst length 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    90      IfxGeth_DmaBurstLength_4  = 4,   /**< \brief maximum burst length 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    91      IfxGeth_DmaBurstLength_8  = 8,   /**< \brief maximum burst length 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    92      IfxGeth_DmaBurstLength_16 = 16,  /**< \brief maximum burst length 16 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    93      IfxGeth_DmaBurstLength_32 = 32   /**< \brief maximum burst length 32 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    94  } IfxGeth_DmaBurstLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    95  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    96  /** \brief DMA channel Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    98  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   100      IfxGeth_DmaChannel_0,     /**< \brief Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   101      IfxGeth_DmaChannel_1,     /**< \brief Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   102      IfxGeth_DmaChannel_2,     /**< \brief Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   103      IfxGeth_DmaChannel_3      /**< \brief Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   104  } IfxGeth_DmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   106  /** \brief DMA interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   110      IfxGeth_DmaInterruptFlag_transmitInterrupt         = 0,  /**< \brief Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   111      IfxGeth_DmaInterruptFlag_transmitStopped           = 1,  /**< \brief Transmit Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   112      IfxGeth_DmaInterruptFlag_transmitBufferUnavailable = 2,  /**< \brief Trasmit Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   113      IfxGeth_DmaInterruptFlag_receiveInterrupt          = 6,  /**< \brief Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   114      IfxGeth_DmaInterruptFlag_receiveBufferUnavailable  = 7,  /**< \brief Receive Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   115      IfxGeth_DmaInterruptFlag_receiveStopped            = 8,  /**< \brief Receive Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   116      IfxGeth_DmaInterruptFlag_receiveWatchdogTimeout    = 9,  /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   117      IfxGeth_DmaInterruptFlag_earlyTransmitInterrupt    = 10, /**< \brief Early Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   118      IfxGeth_DmaInterruptFlag_earlyReceiveInterrupt     = 11, /**< \brief Early Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   119      IfxGeth_DmaInterruptFlag_fatalBusError             = 12, /**< \brief Fatal Bus Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   120      IfxGeth_DmaInterruptFlag_contextDescriptorError    = 13, /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   121      IfxGeth_DmaInterruptFlag_abnormalInterruptSummary  = 14, /**< \brief Abnormal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   122      IfxGeth_DmaInterruptFlag_normalInterruptSummary    = 15  /**< \brief Normal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   123  } IfxGeth_DmaInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   125  /** \brief Ethernet line speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   127  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   128  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   129      IfxGeth_LineSpeed_10Mbps,    /**< \brief 10 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   130      IfxGeth_LineSpeed_100Mbps,   /**< \brief 100 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   131      IfxGeth_LineSpeed_1000Mbps,  /**< \brief 1000 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   132      IfxGeth_LineSpeed_2500Mbps   /**< \brief 2500 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   133  } IfxGeth_LineSpeed;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   135  /** \brief MTL interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   137  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   138  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   139      IfxGeth_MtlInterruptFlag_txQueueUnderflow   = 0,  /**< \brief Transmit Queue Underflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   140      IfxGeth_MtlInterruptFlag_averageBitsPerSlot = 1,  /**< \brief Average Bits Per Slot */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   141      IfxGeth_MtlInterruptFlag_rxQueueOverflow    = 16  /**< \brief Receive Queue Overflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   142  } IfxGeth_MtlInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   144  /** \brief MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   146  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   147  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   148      IfxGeth_MtlQueue_0,     /**< \brief Mtl Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   149      IfxGeth_MtlQueue_1,     /**< \brief Mtl Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   150      IfxGeth_MtlQueue_2,     /**< \brief Mtl Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   151      IfxGeth_MtlQueue_3      /**< \brief Mtl Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   152  } IfxGeth_MtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   154  /** \brief External Phy Interface RMII Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   158      IfxGeth_PhyInterfaceMode_mii   = 0,  /**< \brief MII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   159      IfxGeth_PhyInterfaceMode_rgmii = 1,  /**< \brief RGMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   160      IfxGeth_PhyInterfaceMode_rmii  = 4   /**< \brief RMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   161  } IfxGeth_PhyInterfaceMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   163  /** \brief Preamble Length for Transmit packets\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   164   * Definition in MAC_CONFIGURATION.B.PRELEN
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   166  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   167  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   168      IfxGeth_PreambleLength_7Bytes,  /**< \brief 7 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   169      IfxGeth_PreambleLength_5Bytes,  /**< \brief 5 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   170      IfxGeth_PreambleLength_3Bytes   /**< \brief 3 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   171  } IfxGeth_PreambleLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   173  /** \brief Tx/RX Queue size in blocks of 256 bytes\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   174   * Definition in MTL_TXQi_OPERATION_MODE.B.TQS and MTL_RXQi_OPERATION_MODE.B.RQS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   178      IfxGeth_QueueSize_256Bytes,     /**< \brief 256Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   179      IfxGeth_QueueSize_512Bytes,     /**< \brief 512Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   180      IfxGeth_QueueSize_768Bytes,     /**< \brief 768Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   181      IfxGeth_QueueSize_1024Bytes,    /**< \brief 1024Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   182      IfxGeth_QueueSize_1280Bytes,    /**< \brief 1280Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   183      IfxGeth_QueueSize_1536Bytes,    /**< \brief 1536Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   184      IfxGeth_QueueSize_1792Bytes,    /**< \brief 1792Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   185      IfxGeth_QueueSize_2048Bytes,    /**< \brief 2048Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   186      IfxGeth_QueueSize_2304Bytes,    /**< \brief 2304Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   187      IfxGeth_QueueSize_2560Bytes,    /**< \brief 2560Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   188      IfxGeth_QueueSize_2816Bytes,    /**< \brief 2816Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   189      IfxGeth_QueueSize_3072Bytes,    /**< \brief 3072Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   190      IfxGeth_QueueSize_3328Bytes,    /**< \brief 3328Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   191      IfxGeth_QueueSize_3584Bytes,    /**< \brief 3584Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   192      IfxGeth_QueueSize_3840Bytes,    /**< \brief 3840Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   193      IfxGeth_QueueSize_4096Bytes,    /**< \brief 4096Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   194      IfxGeth_QueueSize_4352Bytes,    /**< \brief 4352Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   195      IfxGeth_QueueSize_4608Bytes,    /**< \brief 4608Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   196      IfxGeth_QueueSize_4864Bytes,    /**< \brief 4864Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   197      IfxGeth_QueueSize_5120Bytes,    /**< \brief 5120Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   198      IfxGeth_QueueSize_5376Bytes,    /**< \brief 5376Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   199      IfxGeth_QueueSize_5632Bytes,    /**< \brief 5632Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   200      IfxGeth_QueueSize_5888Bytes,    /**< \brief 5888Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   201      IfxGeth_QueueSize_6144Bytes,    /**< \brief 6144Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   202      IfxGeth_QueueSize_6400Bytes,    /**< \brief 6400Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   203      IfxGeth_QueueSize_6656Bytes,    /**< \brief 6656Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   204      IfxGeth_QueueSize_6912Bytes,    /**< \brief 6912Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   205      IfxGeth_QueueSize_7168Bytes,    /**< \brief 7168Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   206      IfxGeth_QueueSize_7424Bytes,    /**< \brief 7424Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   207      IfxGeth_QueueSize_7680Bytes,    /**< \brief 7680Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   208      IfxGeth_QueueSize_7936Bytes,    /**< \brief 7936Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   209      IfxGeth_QueueSize_8192Bytes     /**< \brief 8192Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   210  } IfxGeth_QueueSize;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   212  /** \brief Receive Arbitration Algorithm for Rx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   213   * Definition in MTL_OPERATION_MODE.B.RAA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   217      IfxGeth_RxArbitrationAlgorithm_sp  = 0, /**< \brief Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   218      IfxGeth_RxArbitrationAlgorithm_wsp = 1  /**< \brief Weighted Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   219  } IfxGeth_RxArbitrationAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   221  /** \brief Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   225      IfxGeth_RxDmaChannel_0,     /**< \brief Rx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   226      IfxGeth_RxDmaChannel_1,     /**< \brief Rx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   227      IfxGeth_RxDmaChannel_2,     /**< \brief Rx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   228      IfxGeth_RxDmaChannel_3      /**< \brief Rx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   229  } IfxGeth_RxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   230  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   231  /** \brief Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   235      IfxGeth_RxMtlQueue_0,     /**< \brief Rx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   236      IfxGeth_RxMtlQueue_1,     /**< \brief Rx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   237      IfxGeth_RxMtlQueue_2,     /**< \brief Rx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   238      IfxGeth_RxMtlQueue_3      /**< \brief Rx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   239  } IfxGeth_RxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   241  /** \brief Geth service request index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   242   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   243  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   244  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   245      IfxGeth_ServiceRequest_0,     /**< \brief Service Request SR0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   246      IfxGeth_ServiceRequest_1,     /**< \brief Service Request SR1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   247      IfxGeth_ServiceRequest_2,     /**< \brief Service Request SR2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   248      IfxGeth_ServiceRequest_3,     /**< \brief Service Request SR3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   249      IfxGeth_ServiceRequest_4,     /**< \brief Service Request SR4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   250      IfxGeth_ServiceRequest_5,     /**< \brief Service Request SR5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   251      IfxGeth_ServiceRequest_6,     /**< \brief Service Request SR6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   252      IfxGeth_ServiceRequest_7,     /**< \brief Service Request SR7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   253      IfxGeth_ServiceRequest_8,     /**< \brief Service Request SR8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   254      IfxGeth_ServiceRequest_9      /**< \brief Service Request SR9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   255  } IfxGeth_ServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   257  /** \brief Tx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   261      IfxGeth_TxDmaChannel_0,     /**< \brief Tx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   262      IfxGeth_TxDmaChannel_1,     /**< \brief Tx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   263      IfxGeth_TxDmaChannel_2,     /**< \brief Tx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   264      IfxGeth_TxDmaChannel_3      /**< \brief Tx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   265  } IfxGeth_TxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   267  /** \brief Tx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   268   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   269  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   270  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   271      IfxGeth_TxMtlQueue_0,     /**< \brief Tx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   272      IfxGeth_TxMtlQueue_1,     /**< \brief Tx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   273      IfxGeth_TxMtlQueue_2,     /**< \brief Tx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   274      IfxGeth_TxMtlQueue_3      /**< \brief Tx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   275  } IfxGeth_TxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   277  /** \brief Tx Scheduling Algorithm for Tx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   278   * Definition in MTL_OPERATION_MODE.B.SCHALG
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   280  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   281  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   282      IfxGeth_TxSchedulingAlgorithm_wrr = 0,  /**< \brief WRR Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   283      IfxGeth_TxSchedulingAlgorithm_sp  = 3   /**< \brief Strict Priority Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   284  } IfxGeth_TxSchedulingAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   288  /** \brief Duplex Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   289   * Definintion in MAC_CONFIGURATION.B.DM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   291  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   292  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   293      IfxGeth_DuplexMode_halfDuplex,  /**< \brief Half Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   294      IfxGeth_DuplexMode_fullDuplex   /**< \brief Full Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   295  } IfxGeth_DuplexMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   297  /** \brief Loopback Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   298   * Definition in MAC_CONFIGURATION.B.LM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   302      IfxGeth_LoopbackMode_disable,  /**< \brief Disable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   303      IfxGeth_LoopbackMode_enable    /**< \brief Enable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   304  } IfxGeth_LoopbackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   306  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   307  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   308  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   310  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   311   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   312  /** \brief Bit Fields of RDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   314  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   316      uint32 RTSL : 32;     /**< \brief Receive Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   317  } IfxGeth_RxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   319  /** \brief Bit Fields of RDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   321  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   323      uint32 RTSH : 32;     /**< \brief Receive Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   324  } IfxGeth_RxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   326  /** \brief Bit Fields of RDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   328  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   330      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   331  } IfxGeth_RxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   333  /** \brief Bit Fields of RDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   334   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   335  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   337      uint32 reserved_0 : 29;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   338      uint32 DE : 1;              /**< \brief Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   339      uint32 CTXT : 1;            /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   340      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   341  } IfxGeth_RxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   343  /** \brief Bit Fields of RDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   344   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   345  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   346  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   347      uint32 BUF1AP : 32;     /**< \brief Header or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   348  } IfxGeth_RxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   349  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   350  /** \brief Bit Fields of RDES0 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   352  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   354      uint32 OVT : 16;     /**< \brief Outer VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   355      uint32 IVT : 16;     /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   356  } IfxGeth_RxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   358  /** \brief Bit Fields of RDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   359   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   360  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   361  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   362      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   363  } IfxGeth_RxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   365  /** \brief Bit Fields of RDES1 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   367  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   369      uint32 PT : 3;       /**< \brief Payload Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   370      uint32 IPHE : 1;     /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   371      uint32 IP4 : 1;      /**< \brief IPV4 Header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   372      uint32 IP6 : 1;      /**< \brief IPv6 header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   373      uint32 IPCB : 1;     /**< \brief IP Checksum Bypassed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   374      uint32 IPCE : 1;     /**< \brief IP Payload Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   375      uint32 PMT : 4;      /**< \brief PTP Message Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   376      uint32 PFT : 1;      /**< \brief PTP Packet Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   377      uint32 PV : 1;       /**< \brief PTP Version */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   378      uint32 TSA : 1;      /**< \brief Timestamp Available */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   379      uint32 TD : 1;       /**< \brief Timestamp Dropped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   380      uint32 OPC : 16;     /**< \brief OAM Sub-Type Code, or MAC Control Packet opcode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   381  } IfxGeth_RxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   383  /** \brief Bit Fields of RDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   384   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   385  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   386  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   387      uint32 BUF2AP : 32;     /**< \brief Buffer 2 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   388  } IfxGeth_RxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   390  /** \brief Bit Fields of RDES2 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   392  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   394      uint32 HL : 10;             /**< \brief L3/L4 Header Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   395      uint32 ARPNR : 1;           /**< \brief ARP Reply Not Generated */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   396      uint32 reserved_11 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   397      uint32 ITS : 1;             /**< \brief Inner VLAN Tag Filter Status (ITS) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   398      uint32 OTS : 1;             /**< \brief VLAN Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   399      uint32 SAF : 1;             /**< \brief SA Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   400      uint32 DAF : 1;             /**< \brief Destination Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   401      uint32 HF : 1;              /**< \brief Hash Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   402      uint32 MADRM : 8;           /**< \brief MAC Address Match or Hash Value */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   403      uint32 L3FM : 1;            /**< \brief Layer 3 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   404      uint32 L4FM : 1;            /**< \brief Layer 4 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   405      uint32 L3L4FM : 3;          /**< \brief Layer 3 and Layer 4 Filter Number Matched */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   406  } IfxGeth_RxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   408  /** \brief Bit Fields of RDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   409   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   410  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   412      uint32 reserved_0 : 24;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   413      uint32 BUF1V : 1;           /**< \brief Buffer 1 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   414      uint32 BUF2V : 1;           /**< \brief Buffer 2 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   415      uint32 reserved_27 : 4;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   416      uint32 IOC : 1;             /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   417      uint32 OWN : 1;             /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   418  } IfxGeth_RxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   420  /** \brief Bit Fields of RDES3 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   422  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   424      uint32 PL : 15;      /**< \brief Packet Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   425      uint32 ES : 1;       /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   426      uint32 LT : 3;       /**< \brief Length/Type Field */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   427      uint32 DE : 1;       /**< \brief Dribble Bit Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   428      uint32 RE : 1;       /**< \brief Receive Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   429      uint32 OE : 1;       /**< \brief Overflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   430      uint32 RWT : 1;      /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   431      uint32 GP : 1;       /**< \brief Giant Packet */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   432      uint32 CE : 1;       /**< \brief CRC Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   433      uint32 RS0V : 1;     /**< \brief Receive Status RDES0 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   434      uint32 RS1V : 1;     /**< \brief Receive Status RDES1 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   435      uint32 RS2V : 1;     /**< \brief Receive Status RDES2 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   436      uint32 LD : 1;       /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   437      uint32 FD : 1;       /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   438      uint32 CTXT : 1;     /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   439      uint32 OWN : 1;      /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   440  } IfxGeth_RxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   442  /** \brief Bit Fields of TDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   443   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   444  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   445  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   446      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   447  } IfxGeth_TxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   448  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   449  /** \brief Bit Fields of TDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   450   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   451  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   452  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   453      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   454  } IfxGeth_TxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   456  /** \brief Bit Fields of TDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   458  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   460      uint32 MSS : 14;            /**< \brief Maximum Segment Size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   461      uint32 reserved_14 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   462      uint32 IVT : 16;            /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   463  } IfxGeth_TxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   465  /** \brief Bit Fields of TDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   466   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   467  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   468  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   469      uint32 VT : 16;             /**< \brief VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   470      uint32 VLTV : 1;            /**< \brief VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   471      uint32 IVLTV : 1;           /**< \brief Inner VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   472      uint32 IVTIR : 2;           /**< \brief Inner VLAN Tag Insert or Replace */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   473      uint32 reserved_20 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   474      uint32 CDE : 1;             /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   475      uint32 reserved_24 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   476      uint32 TCMSSV : 1;          /**< \brief One-Step Timestamp Correction Input or MSS Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   477      uint32 OSTC : 1;            /**< \brief One-Step Timestamp Correction Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   478      uint32 reserved_28 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   479      uint32 CTXT : 1;            /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   480      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   481  } IfxGeth_TxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   483  /** \brief Bit Fields of TDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   484   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   485  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   486  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   487      uint32 BUF1AP : 32;     /**< \brief Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   488  } IfxGeth_TxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   490  /** \brief Bit Fields of TDES0 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   491   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   492  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   493  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   494      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   495  } IfxGeth_TxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   496  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   497  /** \brief Bit Fields of TDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   499  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   500  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   501      uint32 BUF2AP : 32;     /**< \brief Buffer 2 or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   502  } IfxGeth_TxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   503  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   504  /** \brief Bit Fields of TDES1 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   505   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   506  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   507  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   508      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   509  } IfxGeth_TxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   511  /** \brief Bit Fields of TDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   512   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   513  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   514  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   515      uint32 B1L : 14;          /**< \brief Header Length or Buffer 1 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   516      uint32 VTIR : 2;          /**< \brief VLAN Tag Insertion or Replacement */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   517      uint32 B2L : 14;          /**< \brief Buffer 2 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   518      uint32 TTSE_TMWD : 1;     /**< \brief Transmit Timestamp Enable or External TSO Memory Write Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   519      uint32 IOC : 1;           /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   520  } IfxGeth_TxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   522  /** \brief Bit Fields of TDES2 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   524  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   526      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   527  } IfxGeth_TxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   529  /** \brief Bit Fields of TDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   530   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   531  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   532  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   533      uint32 FL_TPL : 15;         /**< \brief Packet Length or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   534      uint32 TPL : 1;             /**< \brief Reserved or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   535      uint32 CIC_TPL : 2;         /**< \brief Checksum Insertion Control or TCP Payload LengthThese bits control the checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   536      uint32 TSE : 1;             /**< \brief TCP Segmentation Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   537      uint32 SLOTNUM_THL : 4;     /**< \brief SLOTNUM: Slot Number Control Bits in AV Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   538      uint32 SAIC : 3;            /**< \brief SA Insertion Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   539      uint32 CPC : 2;             /**< \brief CRC Pad Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   540      uint32 LD : 1;              /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   541      uint32 FD : 1;              /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   542      uint32 CTXT : 1;            /**< \brief Context TypeThis bit should be set to 1'b0 for normal descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   543      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   544  } IfxGeth_TxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   546  /** \brief Bit Fields of TDES3 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   548  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   550      uint32 IHE : 1;              /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   551      uint32 DB : 1;               /**< \brief Deferred Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   552      uint32 UF : 1;               /**< \brief Underflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   553      uint32 ED : 1;               /**< \brief Excessive Deferral */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   554      uint32 CC : 4;               /**< \brief Collision Count */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   555      uint32 EC : 1;               /**< \brief Excessive Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   556      uint32 LC : 1;               /**< \brief Late Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   557      uint32 NC : 1;               /**< \brief No Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   558      uint32 LOC : 1;              /**< \brief Loss of Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   559      uint32 PCE : 1;              /**< \brief Payload Checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   560      uint32 FF : 1;               /**< \brief Packet Flushed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   561      uint32 JT : 1;               /**< \brief Jabber Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   562      uint32 ES : 1;               /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   563      uint32 reserved_16 : 1;      /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   564      uint32 TTSS : 1;             /**< \brief Tx Timestamp Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   565      uint32 reserved_18 : 10;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   566      uint32 LD : 1;               /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   567      uint32 FD : 1;               /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   568      uint32 CTXT : 1;             /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   569      uint32 OWN : 1;              /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   570  } IfxGeth_TxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   572  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   574  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   575   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   576  /** \brief RDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   577   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   578  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   580      IfxGeth_RxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   581      IfxGeth_RxDescr0_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   582      IfxGeth_RxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   583      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   584  } IfxGeth_RxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   586  /** \brief RDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   588  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   589  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   590      IfxGeth_RxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   591      IfxGeth_RxDescr1_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   592      IfxGeth_RxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   593      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   594  } IfxGeth_RxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   596  /** \brief RDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   597   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   598  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   599  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   600      IfxGeth_RxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   601      IfxGeth_RxDescr2_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   602      IfxGeth_RxContextDescr2_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   603      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   604  } IfxGeth_RxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   605  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   606  /** \brief RDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   607   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   608  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   610      IfxGeth_RxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   611      IfxGeth_RxDescr3_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   612      IfxGeth_RxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   613      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   614  } IfxGeth_RxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   616  /** \brief TDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   617   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   618  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   619  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   620      IfxGeth_TxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   621      IfxGeth_TxDescr0_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   622      IfxGeth_TxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   623      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   624  } IfxGeth_TxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   626  /** \brief TDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   628  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   630      IfxGeth_TxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   631      IfxGeth_TxDescr1_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   632      IfxGeth_TxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   633      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   634  } IfxGeth_TxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   636  /** \brief TDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   637   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   638  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   640      IfxGeth_TxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   641      IfxGeth_TxDescr2_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   642      IfxGeth_TxContextDescr2_Bits C;       /**< \brief COntext Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   643      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   644  } IfxGeth_TxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   646  /** \brief TDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   647   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   648  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   649  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   650      IfxGeth_TxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   651      IfxGeth_TxDescr3_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   652      IfxGeth_TxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   653      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   654  } IfxGeth_TxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   656  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   657  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   658  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   659   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   660  /** \brief Rx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   661   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   662  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   663  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   664      IfxGeth_RxDescr0 RDES0;       /**< \brief Rx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   665      IfxGeth_RxDescr1 RDES1;       /**< \brief Rx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   666      IfxGeth_RxDescr2 RDES2;       /**< \brief Rx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   667      IfxGeth_RxDescr3 RDES3;       /**< \brief Rx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   668  } IfxGeth_RxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   670  /** \brief Tx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   671   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   672  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   673  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   674      IfxGeth_TxDescr0 TDES0;       /**< \brief Tx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   675      IfxGeth_TxDescr1 TDES1;       /**< \brief Tx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   676      IfxGeth_TxDescr2 TDES2;       /**< \brief Tx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   677      IfxGeth_TxDescr3 TDES3;       /**< \brief Tx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   678  } IfxGeth_TxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   680  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   681  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   682  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   683   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   684  /** \brief Rx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   685   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   686  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   687  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   688      volatile IfxGeth_RxDescr descr[IFXGETH_MAX_RX_DESCRIPTORS];       /**< \brief list of RX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   689  } IfxGeth_RxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   691  /** \brief Tx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   692   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   693  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   694  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   695      volatile IfxGeth_TxDescr descr[IFXGETH_MAX_TX_DESCRIPTORS];       /**< \brief list of TX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   696  } IfxGeth_TxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   697  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   698  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   700  /** \addtogroup IfxLld_Geth_Std_MAC_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   701   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   703  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   704  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   705  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   706  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   707  /** \brief Disables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   708   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   709   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   710   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   711  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   713  /** \brief Disables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   714   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   715   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   716   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   717  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   719  /** \brief Enables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   720   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   721   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   722   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   723  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   725  /** \brief Enables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   726   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   727   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   728   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   729  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   731  /** \brief Enables / Disables Passing of All Multicast packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   732   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   733   * \param enabled Pass All Multicast enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   734   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   735   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   736  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   737  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   738  /** \brief Enables / Disables CRC Checking for Received Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   739   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   740   * \param enabled CRC Checking for Received Packets enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   741   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   742   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   743  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   745  /** \brief Enables/Disables the Automatic Pad or CRC Stripping for frames less than 1536 bytes and \n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   746   *     CRC stripping for Type packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   747   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   748   * \param acsEnabled Automatic Pad or CRC Stripping enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   749   * \param cstEnabled CRC Stripping for Type packets enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   750   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   751   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   752  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   754  /** \brief Sets the Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   755   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   756   * \param mode Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   757   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   758   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   759  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   761  /** \brief Sets the Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   762   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   763   * \param length Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   764   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   765   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   766  IFX_INLINE void IfxGeth_mac_setPreambleLength(Ifx_GETH *gethSFR, IfxGeth_PreambleLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   768  /** \brief Enables / Disables Promiscuous Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   769   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   770   * \param enabled Promiscuous Mode enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   771   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   772   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   773  IFX_INLINE void IfxGeth_mac_setPromiscuousMode(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   775  /** \brief Set the priorities for Rx queues for mapping tagged packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   776   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   777   * \param channel Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   778   * \param priorities Rx queue priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   779   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   780   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   781  IFX_INLINE void IfxGeth_mac_setVlanPriorityQueueRouting(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint8 priorities);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   782  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   783  /** \brief Enable / Disable Queue Insertion
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   784   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   785   * \param enable config parameter TRUE: enabled/ FALSE: disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   786   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   787   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   788  IFX_INLINE void IfxGeth_mac_setQueueVlanInsertion(Ifx_GETH *gethSFR, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   789  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   790  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   791  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   792  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   793  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   794  /** \brief Sets the Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   795   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   796   * \param speed Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   797   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   798   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   799  IFX_EXTERN void IfxGeth_mac_setLineSpeed(Ifx_GETH *gethSFR, IfxGeth_LineSpeed speed);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   801  /** \brief Sets the MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   802   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   803   * \param macAddress MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   804   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   805   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   806  IFX_EXTERN void IfxGeth_mac_setMacAddress(Ifx_GETH *gethSFR, uint8 *macAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   807  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   808  /** \brief Writes to Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   809   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   810   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   811   * \param vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   812   * \return TRUE if write was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   813   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   814  IFX_EXTERN boolean IfxGeth_mac_writeQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   816  /** \brief Reads from Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   817   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   818   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   819   * \param const vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   820   * \return TRUE if read was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   821   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   822  IFX_EXTERN boolean IfxGeth_mac_readQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 *const vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   823  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   824  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   825  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   826  /** \addtogroup IfxLld_Geth_Std_Module_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   827   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   829  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   830  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   831  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   833  /** \brief Returns the status of whether clock for GETH module is enabled or diabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   834   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   835   * \return Status:\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   836   * TRUE : if module is enabled\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   837   * FALSE : if module is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   838   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   839  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   841  /** \brief Sets the External Phy Interface mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   842   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   843   * \param mode PHY Interface Mode (MII/RGMII/RMII)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   844   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   845   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   846  IFX_INLINE void IfxGeth_setPhyInterfaceMode(Ifx_GETH *gethSFR, IfxGeth_PhyInterfaceMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   847  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   848  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   849  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   850  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   851  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   852  /** \brief Disables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   853   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   854   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   855   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   856  IFX_EXTERN void IfxGeth_disableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   858  /** \brief Enables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   859   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   860   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   861   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   862  IFX_EXTERN void IfxGeth_enableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   863  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   864  /** \brief Returns the Src Pointer of the selected GETH service request node
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   865   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   866   * \param serviceRequest Service Request number
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   867   * \return pointer to Src register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   868   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   869  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGeth_getSrcPointer(Ifx_GETH *gethSFR, IfxGeth_ServiceRequest serviceRequest);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   870  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   871  /** \brief resets Ethernet kernel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   872   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   873   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   874   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   875  IFX_EXTERN void IfxGeth_resetModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   876  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   877  /** \brief API to get the resource index of the GETH specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   878   * \param geth Pointer to Geth register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   879   * \return geth resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   881  IFX_EXTERN IfxGeth_Index IfxGeth_getIndex(Ifx_GETH *geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   883  /** \brief Get the address of the specified GETH resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   884   * \param geth Module index of the GETH
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   885   * \return GETH module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   887  IFX_EXTERN Ifx_GETH *IfxGeth_getAddress(IfxGeth_Index geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   889  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   890  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   891  /** \addtogroup IfxLld_Geth_Std_MTL_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   892   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   894  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   895  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   896  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   897  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   898  /** \brief Enables the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   899   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   900   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   901   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   902   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   903  IFX_INLINE void IfxGeth_mtl_enableRxQueue(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   904  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   905  /** \brief sets the Rx Arbitration algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   906   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   907   * \param arbitrationAlgorithm Rx Arbitration Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   908   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   909   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   910  IFX_INLINE void IfxGeth_mtl_setRxArbitrationAlgorithm(Ifx_GETH *gethSFR, IfxGeth_RxArbitrationAlgorithm arbitrationAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   911  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   912  /** \brief Sets the selected DMA Channel mapping for the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   913   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   914   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   915   * \param dmaChannel DMA channel for selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   916   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   917   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   918  IFX_INLINE void IfxGeth_mtl_setRxQueueDmaChannelMapping(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_RxDmaChannel dmaChannel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   920  /** \brief Sets the selected Rx Queue for DA based DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   921   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   922   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   923   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   924   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   925   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   926  IFX_INLINE void IfxGeth_mtl_setRxQueueForDaBasedDmaChannel(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   928  /** \brief sets the Tx Scheduling algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   929   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   930   * \param schedulingAlgorithm Tx Scheduling Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   931   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   932   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   933  IFX_INLINE void IfxGeth_mtl_setTxSchedulingAlgorithm(Ifx_GETH *gethSFR, IfxGeth_TxSchedulingAlgorithm schedulingAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   934  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   935  /** \brief Enable and set queue ID to route packets failing unicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   936   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   937   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   938   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   939   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   940  IFX_INLINE void IfxGeth_mtl_enableUnicastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   941  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   942  /** \brief Disable queuing of packets failing unicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   943   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   944   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   945   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   946  IFX_INLINE void IfxGeth_mtl_disableUnicastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   947  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   948  /** \brief Enable and set queue ID to route packets failing multicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   949   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   950   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   951   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   952   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   953  IFX_INLINE void IfxGeth_mtl_enableMulticastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   954  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   955  /** \brief Disable queuing of packets failing multicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   956   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   957   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   958   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   959  IFX_INLINE void IfxGeth_mtl_disableMulticastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   961  /** \brief Enable and set queue ID to route packets failing VLAN tag filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   962   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   963   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   964   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   965   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   966  IFX_INLINE void IfxGeth_mtl_enableVlanFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   967  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   968  /** \brief Disable queuing of packets failing VLAN tag filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   969   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   970   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   971   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   972  IFX_INLINE void IfxGeth_mtl_disableVlanFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   974  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   975  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   976  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   977  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   978  /** \brief Clears all the Mtl interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   979   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   980   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   981   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   982   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   983  IFX_EXTERN void IfxGeth_mtl_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   984  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   985  /** \brief Clears the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   986   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   987   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   988   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   989   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   990   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   991  IFX_EXTERN void IfxGeth_mtl_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   992  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   993  /** \brief Disables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   994   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   995   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   996   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   997   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   998   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   999  IFX_EXTERN void IfxGeth_mtl_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1001  /** \brief Enables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1002   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1003   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1004   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1005   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1007  IFX_EXTERN void IfxGeth_mtl_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1009  /** \brief Enables the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1010   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1011   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1012   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1013   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1014  IFX_EXTERN void IfxGeth_mtl_enableTxQueue(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1016  /** \brief Returns the status of selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1017   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1018   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1019   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1020   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1021   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1022   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1023  IFX_EXTERN boolean IfxGeth_mtl_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1024  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1025  /** \brief Sets the Receive Forward Error Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1026   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1027   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1028   * \param enabled Enable/Disable Receive Forward Error Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1029   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1031  IFX_EXTERN void IfxGeth_mtl_setRxForwardErrorPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1033  /** \brief Sets the Receive Forward Undersized Good Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1034   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1035   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1036   * \param enabled Enable/Disable Receive Forward Undersized Good Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1037   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1038   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1039  IFX_EXTERN void IfxGeth_mtl_setRxForwardUndersizedGoodPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1040  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1041  /** \brief Sets the size of the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1042   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1043   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1044   * \param queueSize Rx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1045   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1046   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1047  IFX_EXTERN void IfxGeth_mtl_setRxQueueSize(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1048  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1049  /** \brief Sets the Receive Store And Forward for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1050   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1051   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1052   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1053   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1054   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1055  IFX_EXTERN void IfxGeth_mtl_setRxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1056  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1057  /** \brief Sets the size of the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1058   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1059   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1060   * \param queueSize Tx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1061   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1062   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1063  IFX_EXTERN void IfxGeth_mtl_setTxQueueSize(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1065  /** \brief Sets the Transmit Store And Forward for teh selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1066   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1067   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1068   * \param enabled Enable/Disable Transmit Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1069   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1070   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1071  IFX_EXTERN void IfxGeth_mtl_setTxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1072  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1073  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1074  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1075  /** \addtogroup IfxLld_Geth_Std_DMA_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1076   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1077  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1078  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1079  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1080  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1081  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1082  /** \brief Applies a software reset of MAC and DMA controller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1083   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1084   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1085   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1086  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1087  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1088  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1089   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1090   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1091   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1092   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1093  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1094  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1095  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1096   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1097   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1098   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1099   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1101  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1102  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1103  /** \brief Disables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1104   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1105   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1106   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1107   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1108   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1109  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1110  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1111  /** \brief Enables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1112   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1113   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1114   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1115   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1116   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1117  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1118  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1119  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1120   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1121   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1122   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1123   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1124   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1125   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1126  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1127  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1128  /** \brief Wiats until software reset of MAC and DMA controller is done or until timout.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1129   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1130   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1131  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1132  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1133  /** \brief Enables/Disables Address aligned beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1134   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1135   * \param enabled Enable/Disable Address Aligned Beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1136   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1137   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1138  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1139  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1140  /** \brief Enables/Disables Fixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1141   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1142   * \param enabled Enable/Disable Fixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1144   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1145  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1146  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1147  /** \brief Enables/Disables Mixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1148   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1149   * \param enabled Enable/Disable Mixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1151   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1152  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1154  /** \brief sets the size of the rx buffers in descriptors for selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1155   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1156   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1157   * \param size Rx Buffers size (applies for both buffers)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1159   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1160  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1161  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1162  /** \brief sets the base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1163   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1164   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1165   * \param address base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1166   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1167   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1168  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1169  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1170  /** \brief sets the Length of the Rx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1171   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1172   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1173   * \param length Length of the ring (no of total Rx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1174   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1176  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1177  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1178  /** \brief sets the address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1179   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1180   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1181   * \param address address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1182   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1183   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1184  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1185  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1186  /** \brief sets the programmable burst length of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1187   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1188   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1189   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1190   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1191   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1192  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1193  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1194  /** \brief sets the base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1195   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1196   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1197   * \param address base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1198   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1199   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1200  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1201  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1202  /** \brief sets the Length of the Tx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1203   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1204   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1205   * \param length Length of the ring (no of total Tx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1206   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1207   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1208  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1209  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1210  /** \brief sets the address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1211   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1212   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1213   * \param address address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1214   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1215   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1216  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1217  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1218  /** \brief sets the programmable burst length of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1219   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1220   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1221   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1222   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1223   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1224  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1225  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1226  /** \brief starts the receiver of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1227   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1228   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1229   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1230   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1231  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1232  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1233  /** \brief starts the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1234   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1235   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1236   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1237   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1238  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1239  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1240  /** \brief Stops the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1241   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1242   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1244   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1245  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1246  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1247  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1248  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1249  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1251  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1252  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1253  /** \brief Enables/Disables the MAC operation in the loopback mode at GMII or MII
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1254   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1255   * \param mode Loopback Mode Enable / Disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1257   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1258  IFX_INLINE void IfxGeth_mac_setLoopbackMode(Ifx_GETH *gethSFR, IfxGeth_LoopbackMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1259  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1260  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1261  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1262  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1263  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1264  /** \brief Reads a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1265   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1266   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1267   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1268   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1269   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1270  IFX_EXTERN void IfxGeth_phy_Clause22_readMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1271  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1272  /** \brief Writes to a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1273   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1274   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1275   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1277   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1278  IFX_EXTERN void IfxGeth_Phy_Clause22_writeMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1279  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1280  /** \brief Reads a MDIO register of Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1281   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1282   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1283   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1284   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1285   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1286   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1287  IFX_EXTERN void IfxGeth_phy_Clause45_readMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1288  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1289  /** \brief Writes to a MDIO register for Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1290   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1291   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1292   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1293   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1294   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1295   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1296  IFX_EXTERN void IfxGeth_Phy_Clause45_writeMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1297  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1298  /** \brief Sets the maximum size of the packet
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1299   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1300   * \param maxPacketSize Minimum size of the frame beyond which giant packet status is set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1301   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1302   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1303  IFX_EXTERN void IfxGeth_mac_setMaxPacketSize(Ifx_GETH *gethSFR, uint16 maxPacketSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1304  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1305  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1306  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1307  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1308  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1309  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1310  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1311      gethSFR->DMA_MODE.B.SWR = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1312  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1313  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1314  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1315  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1316  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1317      gethSFR->DMA_CH[channelId].STATUS.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1318  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1319  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1320  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1321  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1323      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1324      gethSFR->DMA_CH[channelId].STATUS.U = value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1325  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1326  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1327  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1328  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1330      uint32 value = ~(1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1331      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U &= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1332  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1333  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1334  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1335  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1337      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1338      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U |= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1339  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1340  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1341  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1342  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1343  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1344      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1345      return gethSFR->DMA_CH[channelId].STATUS.U & (Ifx_UReg_32Bit)value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1346  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1347  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1348  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1349  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1350  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1351      return gethSFR->DMA_MODE.B.SWR == 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1352  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1353  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1354  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1355  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1356  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1357      gethSFR->DMA_SYSBUS_MODE.B.AAL = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1358  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1359  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1360  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1361  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1362  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1363      gethSFR->DMA_SYSBUS_MODE.B.FB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1364  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1365  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1366  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1367  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1369      gethSFR->DMA_SYSBUS_MODE.B.MB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1370  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1371  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1372  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1373  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1374  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1375      /* [RBSZ_13_Y:RBSZ_X_0] represents the size of the Rx buffer*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1376      gethSFR->DMA_CH[channel].RX_CONTROL.B.RBSZ_13_Y = (uint32)((size >> 2) & IFX_GETH_DMA_CH_RX_CONTROL_RBSZ_13_Y_MSK);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1377  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1378  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1379  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1380  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1381  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1382      gethSFR->DMA_CH[channel].RXDESC_LIST_ADDRESS.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1383  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1384  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1385  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1386  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1387  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1388      gethSFR->DMA_CH[channel].RXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1389  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1390  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1391  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1392  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1394      gethSFR->DMA_CH[channel].RXDESC_TAIL_POINTER.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1395  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1396  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1397  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1398  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1399  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1400      gethSFR->DMA_CH[channel].RX_CONTROL.B.RXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1401  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1402  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1403  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1404  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1405  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1406      gethSFR->DMA_CH[channel].TXDESC_LIST_ADDRESS.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1407  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1409  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1410  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1412      gethSFR->DMA_CH[channel].TXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1413  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1414  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1415  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1416  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1417  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1418      gethSFR->DMA_CH[channel].TXDESC_TAIL_POINTER.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1419  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1420  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1421  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1422  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1424      gethSFR->DMA_CH[channel].TX_CONTROL.B.TXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1425  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1426  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1427  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1428  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1429  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1430      gethSFR->DMA_CH[channel].RX_CONTROL.B.SR = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1431  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1432  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1433  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1434  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1435  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1436      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1437  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1438  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1439  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1440  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1441  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1442      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1443  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1444  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1445  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1446  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1447  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1448      return (gethSFR->CLC.B.DISS == 0) ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1449  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1450  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1451  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1452  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1453  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1454      gethSFR->MAC_CONFIGURATION.B.RE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1455  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1456  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1457  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1458  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1460      gethSFR->MAC_CONFIGURATION.B.TE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1461  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1462  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1463  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1464  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1465  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1466      gethSFR->MAC_CONFIGURATION.B.RE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1467  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1468  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1469  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1470  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1471  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1472      gethSFR->MAC_CONFIGURATION.B.TE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1473  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1474  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1475  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1476  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1477  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1478      gethSFR->MAC_PACKET_FILTER.B.PM = ((enabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1479  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1480  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1481  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1482  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1483  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1484      gethSFR->MAC_EXT_CONFIGURATION.B.DCRCC = ((enabled == 1) ? 0 : 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1485  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1487  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1488  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1489  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1490      gethSFR->MAC_CONFIGURATION.B.ACS = ((acsEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1491      gethSFR->MAC_CONFIGURATION.B.CST = ((cstEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1492  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1494  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1495  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1496  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1497      gethSFR->MAC_CONFIGURATION.B.DM = mode;
	ld.bu	d15,[a15]1
.L267:
	insert	d15,d15,#0,#5,#1
.L17:

; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     2   * \file IfxGeth.h
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     3   * \brief GETH  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     4   * \ingroup IfxLld_Geth
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    25   * Standard layer
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    27   * \defgroup IfxLld_Geth_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    28   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    29   * \defgroup IfxLld_Geth_Std_MAC_Functions MAC Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    30   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    31   * \defgroup IfxLld_Geth_Std_Module_Functions Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    32   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    33   * \defgroup IfxLld_Geth_Std_MTL_Functions MTL Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    34   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    35   * \defgroup IfxLld_Geth_Std_DMA_Functions DMA Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    36   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    37   * \defgroup IfxLld_Geth_Std_DataStructures DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    38   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    39   * \defgroup IfxLld_Geth_Std_Unions Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    40   * \ingroup IfxLld_Geth_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    41   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    43  #ifndef IFXGET_H
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    44  #define IFXGET_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    50  #include "_Impl/IfxGeth_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    51  #include "IfxGeth_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    52  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    53  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    54  #include "IfxGeth_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    57  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    60  /** \brief Max number of TX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    62  #ifndef IFXGETH_MAX_TX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    63  #define IFXGETH_MAX_TX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    64  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    66  /** \brief Max number of RX descriptors per list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    67   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    68  #ifndef IFXGETH_MAX_RX_DESCRIPTORS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    69  #define IFXGETH_MAX_RX_DESCRIPTORS (8)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    70  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    72  /** \brief Waits until GMII is busy
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    73   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    74  #define IFXGETH_PHY_WAIT_GMII_READY() while (GETH_MAC_MDIO_ADDRESS.B.GB) {}
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    77  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    80  /** \addtogroup IfxLld_Geth_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    81   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    82  /** \brief Programmable burst length of DMA channels\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    83   * Definition in DMA_CHi_TX_CONTROL.B.PBL and DMA_CHi_RX_CONTROL.B.PBL
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    84   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    87      IfxGeth_DmaBurstLength_0  = 0,   /**< \brief maximum burst length 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    88      IfxGeth_DmaBurstLength_1  = 1,   /**< \brief maximum burst length 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    89      IfxGeth_DmaBurstLength_2  = 2,   /**< \brief maximum burst length 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    90      IfxGeth_DmaBurstLength_4  = 4,   /**< \brief maximum burst length 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    91      IfxGeth_DmaBurstLength_8  = 8,   /**< \brief maximum burst length 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    92      IfxGeth_DmaBurstLength_16 = 16,  /**< \brief maximum burst length 16 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    93      IfxGeth_DmaBurstLength_32 = 32   /**< \brief maximum burst length 32 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    94  } IfxGeth_DmaBurstLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    95  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    96  /** \brief DMA channel Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    98  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	    99  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   100      IfxGeth_DmaChannel_0,     /**< \brief Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   101      IfxGeth_DmaChannel_1,     /**< \brief Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   102      IfxGeth_DmaChannel_2,     /**< \brief Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   103      IfxGeth_DmaChannel_3      /**< \brief Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   104  } IfxGeth_DmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   106  /** \brief DMA interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   110      IfxGeth_DmaInterruptFlag_transmitInterrupt         = 0,  /**< \brief Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   111      IfxGeth_DmaInterruptFlag_transmitStopped           = 1,  /**< \brief Transmit Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   112      IfxGeth_DmaInterruptFlag_transmitBufferUnavailable = 2,  /**< \brief Trasmit Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   113      IfxGeth_DmaInterruptFlag_receiveInterrupt          = 6,  /**< \brief Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   114      IfxGeth_DmaInterruptFlag_receiveBufferUnavailable  = 7,  /**< \brief Receive Buffer Unavailable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   115      IfxGeth_DmaInterruptFlag_receiveStopped            = 8,  /**< \brief Receive Stopped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   116      IfxGeth_DmaInterruptFlag_receiveWatchdogTimeout    = 9,  /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   117      IfxGeth_DmaInterruptFlag_earlyTransmitInterrupt    = 10, /**< \brief Early Transmit Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   118      IfxGeth_DmaInterruptFlag_earlyReceiveInterrupt     = 11, /**< \brief Early Receive Interrupt */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   119      IfxGeth_DmaInterruptFlag_fatalBusError             = 12, /**< \brief Fatal Bus Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   120      IfxGeth_DmaInterruptFlag_contextDescriptorError    = 13, /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   121      IfxGeth_DmaInterruptFlag_abnormalInterruptSummary  = 14, /**< \brief Abnormal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   122      IfxGeth_DmaInterruptFlag_normalInterruptSummary    = 15  /**< \brief Normal Interrupt Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   123  } IfxGeth_DmaInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   125  /** \brief Ethernet line speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   127  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   128  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   129      IfxGeth_LineSpeed_10Mbps,    /**< \brief 10 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   130      IfxGeth_LineSpeed_100Mbps,   /**< \brief 100 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   131      IfxGeth_LineSpeed_1000Mbps,  /**< \brief 1000 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   132      IfxGeth_LineSpeed_2500Mbps   /**< \brief 2500 Mbps */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   133  } IfxGeth_LineSpeed;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   135  /** \brief MTL interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   137  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   138  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   139      IfxGeth_MtlInterruptFlag_txQueueUnderflow   = 0,  /**< \brief Transmit Queue Underflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   140      IfxGeth_MtlInterruptFlag_averageBitsPerSlot = 1,  /**< \brief Average Bits Per Slot */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   141      IfxGeth_MtlInterruptFlag_rxQueueOverflow    = 16  /**< \brief Receive Queue Overflow */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   142  } IfxGeth_MtlInterruptFlag;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   144  /** \brief MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   146  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   147  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   148      IfxGeth_MtlQueue_0,     /**< \brief Mtl Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   149      IfxGeth_MtlQueue_1,     /**< \brief Mtl Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   150      IfxGeth_MtlQueue_2,     /**< \brief Mtl Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   151      IfxGeth_MtlQueue_3      /**< \brief Mtl Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   152  } IfxGeth_MtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   154  /** \brief External Phy Interface RMII Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   155   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   156  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   157  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   158      IfxGeth_PhyInterfaceMode_mii   = 0,  /**< \brief MII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   159      IfxGeth_PhyInterfaceMode_rgmii = 1,  /**< \brief RGMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   160      IfxGeth_PhyInterfaceMode_rmii  = 4   /**< \brief RMII mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   161  } IfxGeth_PhyInterfaceMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   163  /** \brief Preamble Length for Transmit packets\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   164   * Definition in MAC_CONFIGURATION.B.PRELEN
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   166  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   167  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   168      IfxGeth_PreambleLength_7Bytes,  /**< \brief 7 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   169      IfxGeth_PreambleLength_5Bytes,  /**< \brief 5 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   170      IfxGeth_PreambleLength_3Bytes   /**< \brief 3 bytes of preamble */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   171  } IfxGeth_PreambleLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   173  /** \brief Tx/RX Queue size in blocks of 256 bytes\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   174   * Definition in MTL_TXQi_OPERATION_MODE.B.TQS and MTL_RXQi_OPERATION_MODE.B.RQS
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   176  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   177  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   178      IfxGeth_QueueSize_256Bytes,     /**< \brief 256Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   179      IfxGeth_QueueSize_512Bytes,     /**< \brief 512Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   180      IfxGeth_QueueSize_768Bytes,     /**< \brief 768Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   181      IfxGeth_QueueSize_1024Bytes,    /**< \brief 1024Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   182      IfxGeth_QueueSize_1280Bytes,    /**< \brief 1280Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   183      IfxGeth_QueueSize_1536Bytes,    /**< \brief 1536Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   184      IfxGeth_QueueSize_1792Bytes,    /**< \brief 1792Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   185      IfxGeth_QueueSize_2048Bytes,    /**< \brief 2048Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   186      IfxGeth_QueueSize_2304Bytes,    /**< \brief 2304Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   187      IfxGeth_QueueSize_2560Bytes,    /**< \brief 2560Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   188      IfxGeth_QueueSize_2816Bytes,    /**< \brief 2816Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   189      IfxGeth_QueueSize_3072Bytes,    /**< \brief 3072Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   190      IfxGeth_QueueSize_3328Bytes,    /**< \brief 3328Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   191      IfxGeth_QueueSize_3584Bytes,    /**< \brief 3584Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   192      IfxGeth_QueueSize_3840Bytes,    /**< \brief 3840Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   193      IfxGeth_QueueSize_4096Bytes,    /**< \brief 4096Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   194      IfxGeth_QueueSize_4352Bytes,    /**< \brief 4352Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   195      IfxGeth_QueueSize_4608Bytes,    /**< \brief 4608Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   196      IfxGeth_QueueSize_4864Bytes,    /**< \brief 4864Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   197      IfxGeth_QueueSize_5120Bytes,    /**< \brief 5120Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   198      IfxGeth_QueueSize_5376Bytes,    /**< \brief 5376Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   199      IfxGeth_QueueSize_5632Bytes,    /**< \brief 5632Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   200      IfxGeth_QueueSize_5888Bytes,    /**< \brief 5888Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   201      IfxGeth_QueueSize_6144Bytes,    /**< \brief 6144Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   202      IfxGeth_QueueSize_6400Bytes,    /**< \brief 6400Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   203      IfxGeth_QueueSize_6656Bytes,    /**< \brief 6656Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   204      IfxGeth_QueueSize_6912Bytes,    /**< \brief 6912Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   205      IfxGeth_QueueSize_7168Bytes,    /**< \brief 7168Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   206      IfxGeth_QueueSize_7424Bytes,    /**< \brief 7424Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   207      IfxGeth_QueueSize_7680Bytes,    /**< \brief 7680Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   208      IfxGeth_QueueSize_7936Bytes,    /**< \brief 7936Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   209      IfxGeth_QueueSize_8192Bytes     /**< \brief 8192Bytes  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   210  } IfxGeth_QueueSize;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   212  /** \brief Receive Arbitration Algorithm for Rx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   213   * Definition in MTL_OPERATION_MODE.B.RAA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   217      IfxGeth_RxArbitrationAlgorithm_sp  = 0, /**< \brief Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   218      IfxGeth_RxArbitrationAlgorithm_wsp = 1  /**< \brief Weighted Strict Priority */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   219  } IfxGeth_RxArbitrationAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   221  /** \brief Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   225      IfxGeth_RxDmaChannel_0,     /**< \brief Rx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   226      IfxGeth_RxDmaChannel_1,     /**< \brief Rx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   227      IfxGeth_RxDmaChannel_2,     /**< \brief Rx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   228      IfxGeth_RxDmaChannel_3      /**< \brief Rx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   229  } IfxGeth_RxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   230  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   231  /** \brief Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   233  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   234  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   235      IfxGeth_RxMtlQueue_0,     /**< \brief Rx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   236      IfxGeth_RxMtlQueue_1,     /**< \brief Rx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   237      IfxGeth_RxMtlQueue_2,     /**< \brief Rx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   238      IfxGeth_RxMtlQueue_3      /**< \brief Rx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   239  } IfxGeth_RxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   241  /** \brief Geth service request index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   242   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   243  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   244  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   245      IfxGeth_ServiceRequest_0,     /**< \brief Service Request SR0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   246      IfxGeth_ServiceRequest_1,     /**< \brief Service Request SR1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   247      IfxGeth_ServiceRequest_2,     /**< \brief Service Request SR2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   248      IfxGeth_ServiceRequest_3,     /**< \brief Service Request SR3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   249      IfxGeth_ServiceRequest_4,     /**< \brief Service Request SR4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   250      IfxGeth_ServiceRequest_5,     /**< \brief Service Request SR5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   251      IfxGeth_ServiceRequest_6,     /**< \brief Service Request SR6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   252      IfxGeth_ServiceRequest_7,     /**< \brief Service Request SR7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   253      IfxGeth_ServiceRequest_8,     /**< \brief Service Request SR8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   254      IfxGeth_ServiceRequest_9      /**< \brief Service Request SR9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   255  } IfxGeth_ServiceRequest;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   257  /** \brief Tx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   259  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   261      IfxGeth_TxDmaChannel_0,     /**< \brief Tx Dma Channel 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   262      IfxGeth_TxDmaChannel_1,     /**< \brief Tx Dma Channel 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   263      IfxGeth_TxDmaChannel_2,     /**< \brief Tx Dma Channel 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   264      IfxGeth_TxDmaChannel_3      /**< \brief Tx Dma Channel 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   265  } IfxGeth_TxDmaChannel;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   267  /** \brief Tx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   268   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   269  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   270  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   271      IfxGeth_TxMtlQueue_0,     /**< \brief Tx Queue 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   272      IfxGeth_TxMtlQueue_1,     /**< \brief Tx Queue 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   273      IfxGeth_TxMtlQueue_2,     /**< \brief Tx Queue 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   274      IfxGeth_TxMtlQueue_3      /**< \brief Tx Queue 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   275  } IfxGeth_TxMtlQueue;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   277  /** \brief Tx Scheduling Algorithm for Tx Queues\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   278   * Definition in MTL_OPERATION_MODE.B.SCHALG
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   280  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   281  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   282      IfxGeth_TxSchedulingAlgorithm_wrr = 0,  /**< \brief WRR Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   283      IfxGeth_TxSchedulingAlgorithm_sp  = 3   /**< \brief Strict Priority Algorithm */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   284  } IfxGeth_TxSchedulingAlgorithm;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   288  /** \brief Duplex Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   289   * Definintion in MAC_CONFIGURATION.B.DM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   291  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   292  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   293      IfxGeth_DuplexMode_halfDuplex,  /**< \brief Half Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   294      IfxGeth_DuplexMode_fullDuplex   /**< \brief Full Duplex Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   295  } IfxGeth_DuplexMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   297  /** \brief Loopback Mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   298   * Definition in MAC_CONFIGURATION.B.LM
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   300  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   301  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   302      IfxGeth_LoopbackMode_disable,  /**< \brief Disable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   303      IfxGeth_LoopbackMode_enable    /**< \brief Enable loopback */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   304  } IfxGeth_LoopbackMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   306  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   307  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   308  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   310  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   311   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   312  /** \brief Bit Fields of RDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   314  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   316      uint32 RTSL : 32;     /**< \brief Receive Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   317  } IfxGeth_RxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   319  /** \brief Bit Fields of RDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   321  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   323      uint32 RTSH : 32;     /**< \brief Receive Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   324  } IfxGeth_RxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   325  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   326  /** \brief Bit Fields of RDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   328  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   330      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   331  } IfxGeth_RxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   333  /** \brief Bit Fields of RDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   334   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   335  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   337      uint32 reserved_0 : 29;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   338      uint32 DE : 1;              /**< \brief Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   339      uint32 CTXT : 1;            /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   340      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   341  } IfxGeth_RxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   342  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   343  /** \brief Bit Fields of RDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   344   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   345  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   346  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   347      uint32 BUF1AP : 32;     /**< \brief Header or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   348  } IfxGeth_RxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   349  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   350  /** \brief Bit Fields of RDES0 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   352  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   354      uint32 OVT : 16;     /**< \brief Outer VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   355      uint32 IVT : 16;     /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   356  } IfxGeth_RxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   358  /** \brief Bit Fields of RDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   359   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   360  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   361  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   362      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   363  } IfxGeth_RxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   365  /** \brief Bit Fields of RDES1 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   367  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   369      uint32 PT : 3;       /**< \brief Payload Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   370      uint32 IPHE : 1;     /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   371      uint32 IP4 : 1;      /**< \brief IPV4 Header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   372      uint32 IP6 : 1;      /**< \brief IPv6 header Present */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   373      uint32 IPCB : 1;     /**< \brief IP Checksum Bypassed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   374      uint32 IPCE : 1;     /**< \brief IP Payload Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   375      uint32 PMT : 4;      /**< \brief PTP Message Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   376      uint32 PFT : 1;      /**< \brief PTP Packet Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   377      uint32 PV : 1;       /**< \brief PTP Version */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   378      uint32 TSA : 1;      /**< \brief Timestamp Available */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   379      uint32 TD : 1;       /**< \brief Timestamp Dropped */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   380      uint32 OPC : 16;     /**< \brief OAM Sub-Type Code, or MAC Control Packet opcode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   381  } IfxGeth_RxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   382  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   383  /** \brief Bit Fields of RDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   384   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   385  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   386  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   387      uint32 BUF2AP : 32;     /**< \brief Buffer 2 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   388  } IfxGeth_RxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   389  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   390  /** \brief Bit Fields of RDES2 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   391   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   392  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   394      uint32 HL : 10;             /**< \brief L3/L4 Header Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   395      uint32 ARPNR : 1;           /**< \brief ARP Reply Not Generated */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   396      uint32 reserved_11 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   397      uint32 ITS : 1;             /**< \brief Inner VLAN Tag Filter Status (ITS) */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   398      uint32 OTS : 1;             /**< \brief VLAN Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   399      uint32 SAF : 1;             /**< \brief SA Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   400      uint32 DAF : 1;             /**< \brief Destination Address Filter Fail */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   401      uint32 HF : 1;              /**< \brief Hash Filter Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   402      uint32 MADRM : 8;           /**< \brief MAC Address Match or Hash Value */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   403      uint32 L3FM : 1;            /**< \brief Layer 3 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   404      uint32 L4FM : 1;            /**< \brief Layer 4 Filter Match */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   405      uint32 L3L4FM : 3;          /**< \brief Layer 3 and Layer 4 Filter Number Matched */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   406  } IfxGeth_RxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   408  /** \brief Bit Fields of RDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   409   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   410  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   412      uint32 reserved_0 : 24;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   413      uint32 BUF1V : 1;           /**< \brief Buffer 1 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   414      uint32 BUF2V : 1;           /**< \brief Buffer 2 Address Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   415      uint32 reserved_27 : 4;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   416      uint32 IOC : 1;             /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   417      uint32 OWN : 1;             /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   418  } IfxGeth_RxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   420  /** \brief Bit Fields of RDES3 in Write back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   422  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   424      uint32 PL : 15;      /**< \brief Packet Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   425      uint32 ES : 1;       /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   426      uint32 LT : 3;       /**< \brief Length/Type Field */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   427      uint32 DE : 1;       /**< \brief Dribble Bit Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   428      uint32 RE : 1;       /**< \brief Receive Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   429      uint32 OE : 1;       /**< \brief Overflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   430      uint32 RWT : 1;      /**< \brief Receive Watchdog Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   431      uint32 GP : 1;       /**< \brief Giant Packet */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   432      uint32 CE : 1;       /**< \brief CRC Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   433      uint32 RS0V : 1;     /**< \brief Receive Status RDES0 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   434      uint32 RS1V : 1;     /**< \brief Receive Status RDES1 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   435      uint32 RS2V : 1;     /**< \brief Receive Status RDES2 Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   436      uint32 LD : 1;       /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   437      uint32 FD : 1;       /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   438      uint32 CTXT : 1;     /**< \brief Receive Context Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   439      uint32 OWN : 1;      /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   440  } IfxGeth_RxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   442  /** \brief Bit Fields of TDES0 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   443   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   444  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   445  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   446      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   447  } IfxGeth_TxContextDescr0_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   448  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   449  /** \brief Bit Fields of TDES1 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   450   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   451  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   452  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   453      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   454  } IfxGeth_TxContextDescr1_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   456  /** \brief Bit Fields of TDES2 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   458  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   460      uint32 MSS : 14;            /**< \brief Maximum Segment Size */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   461      uint32 reserved_14 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   462      uint32 IVT : 16;            /**< \brief Inner VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   463  } IfxGeth_TxContextDescr2_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   465  /** \brief Bit Fields of TDES3 Context Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   466   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   467  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   468  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   469      uint32 VT : 16;             /**< \brief VLAN Tag */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   470      uint32 VLTV : 1;            /**< \brief VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   471      uint32 IVLTV : 1;           /**< \brief Inner VLAN Tag Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   472      uint32 IVTIR : 2;           /**< \brief Inner VLAN Tag Insert or Replace */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   473      uint32 reserved_20 : 3;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   474      uint32 CDE : 1;             /**< \brief Context Descriptor Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   475      uint32 reserved_24 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   476      uint32 TCMSSV : 1;          /**< \brief One-Step Timestamp Correction Input or MSS Valid */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   477      uint32 OSTC : 1;            /**< \brief One-Step Timestamp Correction Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   478      uint32 reserved_28 : 2;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   479      uint32 CTXT : 1;            /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   480      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   481  } IfxGeth_TxContextDescr3_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   483  /** \brief Bit Fields of TDES0 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   484   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   485  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   486  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   487      uint32 BUF1AP : 32;     /**< \brief Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   488  } IfxGeth_TxDescr0_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   490  /** \brief Bit Fields of TDES0 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   491   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   492  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   493  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   494      uint32 TTSL : 32;     /**< \brief Transmit Packet Timestamp Low */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   495  } IfxGeth_TxDescr0_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   496  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   497  /** \brief Bit Fields of TDES1 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   499  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   500  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   501      uint32 BUF2AP : 32;     /**< \brief Buffer 2 or Buffer 1 Address Pointer */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   502  } IfxGeth_TxDescr1_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   503  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   504  /** \brief Bit Fields of TDES1 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   505   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   506  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   507  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   508      uint32 TTSH : 32;     /**< \brief Transmit Packet Timestamp High */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   509  } IfxGeth_TxDescr1_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   510  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   511  /** \brief Bit Fields of TDES2 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   512   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   513  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   514  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   515      uint32 B1L : 14;          /**< \brief Header Length or Buffer 1 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   516      uint32 VTIR : 2;          /**< \brief VLAN Tag Insertion or Replacement */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   517      uint32 B2L : 14;          /**< \brief Buffer 2 Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   518      uint32 TTSE_TMWD : 1;     /**< \brief Transmit Timestamp Enable or External TSO Memory Write Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   519      uint32 IOC : 1;           /**< \brief Interrupt on Completion */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   520  } IfxGeth_TxDescr2_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   522  /** \brief Bit Fields of TDES2 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   524  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   526      uint32 reserved_0 : 32;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   527  } IfxGeth_TxDescr2_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   529  /** \brief Bit Fields of TDES3 in Read Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   530   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   531  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   532  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   533      uint32 FL_TPL : 15;         /**< \brief Packet Length or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   534      uint32 TPL : 1;             /**< \brief Reserved or TCP Payload Length */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   535      uint32 CIC_TPL : 2;         /**< \brief Checksum Insertion Control or TCP Payload LengthThese bits control the checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   536      uint32 TSE : 1;             /**< \brief TCP Segmentation Enable */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   537      uint32 SLOTNUM_THL : 4;     /**< \brief SLOTNUM: Slot Number Control Bits in AV Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   538      uint32 SAIC : 3;            /**< \brief SA Insertion Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   539      uint32 CPC : 2;             /**< \brief CRC Pad Control */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   540      uint32 LD : 1;              /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   541      uint32 FD : 1;              /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   542      uint32 CTXT : 1;            /**< \brief Context TypeThis bit should be set to 1'b0 for normal descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   543      uint32 OWN : 1;             /**< \brief Own Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   544  } IfxGeth_TxDescr3_RF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   546  /** \brief Bit Fields of TDES3 in Write-back Format
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   548  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   550      uint32 IHE : 1;              /**< \brief IP Header Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   551      uint32 DB : 1;               /**< \brief Deferred Bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   552      uint32 UF : 1;               /**< \brief Underflow Error */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   553      uint32 ED : 1;               /**< \brief Excessive Deferral */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   554      uint32 CC : 4;               /**< \brief Collision Count */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   555      uint32 EC : 1;               /**< \brief Excessive Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   556      uint32 LC : 1;               /**< \brief Late Collision */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   557      uint32 NC : 1;               /**< \brief No Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   558      uint32 LOC : 1;              /**< \brief Loss of Carrier */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   559      uint32 PCE : 1;              /**< \brief Payload Checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   560      uint32 FF : 1;               /**< \brief Packet Flushed */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   561      uint32 JT : 1;               /**< \brief Jabber Timeout */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   562      uint32 ES : 1;               /**< \brief Error Summary */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   563      uint32 reserved_16 : 1;      /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   564      uint32 TTSS : 1;             /**< \brief Tx Timestamp Status */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   565      uint32 reserved_18 : 10;     /**< \brief Reserved */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   566      uint32 LD : 1;               /**< \brief Last Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   567      uint32 FD : 1;               /**< \brief First Descriptor */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   568      uint32 CTXT : 1;             /**< \brief Context Type */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   569      uint32 OWN : 1;              /**< \brief Own bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   570  } IfxGeth_TxDescr3_WF_Bits;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   572  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   573  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   574  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   575   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   576  /** \brief RDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   577   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   578  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   580      IfxGeth_RxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   581      IfxGeth_RxDescr0_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   582      IfxGeth_RxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   583      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   584  } IfxGeth_RxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   586  /** \brief RDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   588  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   589  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   590      IfxGeth_RxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   591      IfxGeth_RxDescr1_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   592      IfxGeth_RxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   593      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   594  } IfxGeth_RxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   596  /** \brief RDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   597   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   598  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   599  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   600      IfxGeth_RxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   601      IfxGeth_RxDescr2_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   602      IfxGeth_RxContextDescr2_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   603      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   604  } IfxGeth_RxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   605  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   606  /** \brief RDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   607   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   608  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   610      IfxGeth_RxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   611      IfxGeth_RxDescr3_WF_Bits     W;       /**< \brief Write back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   612      IfxGeth_RxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   613      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   614  } IfxGeth_RxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   616  /** \brief TDES0
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   617   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   618  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   619  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   620      IfxGeth_TxDescr0_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   621      IfxGeth_TxDescr0_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   622      IfxGeth_TxContextDescr0_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   623      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   624  } IfxGeth_TxDescr0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   626  /** \brief TDES1
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   627   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   628  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   630      IfxGeth_TxDescr1_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   631      IfxGeth_TxDescr1_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   632      IfxGeth_TxContextDescr1_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   633      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   634  } IfxGeth_TxDescr1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   636  /** \brief TDES2
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   637   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   638  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   640      IfxGeth_TxDescr2_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   641      IfxGeth_TxDescr2_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   642      IfxGeth_TxContextDescr2_Bits C;       /**< \brief COntext Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   643      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   644  } IfxGeth_TxDescr2;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   646  /** \brief TDES3
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   647   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   648  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   649  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   650      IfxGeth_TxDescr3_RF_Bits     R;       /**< \brief Read Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   651      IfxGeth_TxDescr3_WF_Bits     W;       /**< \brief Write-back Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   652      IfxGeth_TxContextDescr3_Bits C;       /**< \brief Context Descriptor Format Bitfiled Access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   653      uint32                       U;       /**< \brief Unsigned access */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   654  } IfxGeth_TxDescr3;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   656  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   657  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   658  /** \addtogroup IfxLld_Geth_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   659   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   660  /** \brief Rx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   661   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   662  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   663  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   664      IfxGeth_RxDescr0 RDES0;       /**< \brief Rx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   665      IfxGeth_RxDescr1 RDES1;       /**< \brief Rx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   666      IfxGeth_RxDescr2 RDES2;       /**< \brief Rx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   667      IfxGeth_RxDescr3 RDES3;       /**< \brief Rx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   668  } IfxGeth_RxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   670  /** \brief Tx Descriptor
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   671   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   672  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   673  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   674      IfxGeth_TxDescr0 TDES0;       /**< \brief Tx Descriptor DWORD 0 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   675      IfxGeth_TxDescr1 TDES1;       /**< \brief Tx Descriptor DWORD 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   676      IfxGeth_TxDescr2 TDES2;       /**< \brief Tx Descriptor DWORD 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   677      IfxGeth_TxDescr3 TDES3;       /**< \brief Tx Descriptor DWORD 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   678  } IfxGeth_TxDescr;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   680  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   681  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   682  /** \addtogroup IfxLld_Geth_Std_Unions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   683   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   684  /** \brief Rx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   685   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   686  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   687  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   688      volatile IfxGeth_RxDescr descr[IFXGETH_MAX_RX_DESCRIPTORS];       /**< \brief list of RX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   689  } IfxGeth_RxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   691  /** \brief Tx Descriptor List
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   692   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   693  typedef union
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   694  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   695      volatile IfxGeth_TxDescr descr[IFXGETH_MAX_TX_DESCRIPTORS];       /**< \brief list of TX descriptors */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   696  } IfxGeth_TxDescrList;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   697  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   698  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   700  /** \addtogroup IfxLld_Geth_Std_MAC_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   701   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   702  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   703  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   704  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   705  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   706  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   707  /** \brief Disables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   708   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   709   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   710   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   711  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   713  /** \brief Disables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   714   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   715   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   716   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   717  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   719  /** \brief Enables the Receiver of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   720   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   721   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   722   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   723  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   725  /** \brief Enables the Trasnmitter of MAC Core
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   726   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   727   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   728   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   729  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   731  /** \brief Enables / Disables Passing of All Multicast packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   732   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   733   * \param enabled Pass All Multicast enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   734   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   735   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   736  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   737  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   738  /** \brief Enables / Disables CRC Checking for Received Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   739   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   740   * \param enabled CRC Checking for Received Packets enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   741   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   742   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   743  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   745  /** \brief Enables/Disables the Automatic Pad or CRC Stripping for frames less than 1536 bytes and \n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   746   *     CRC stripping for Type packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   747   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   748   * \param acsEnabled Automatic Pad or CRC Stripping enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   749   * \param cstEnabled CRC Stripping for Type packets enable/disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   750   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   751   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   752  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   754  /** \brief Sets the Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   755   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   756   * \param mode Duplex Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   757   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   758   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   759  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   761  /** \brief Sets the Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   762   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   763   * \param length Preamble Length for Transmit packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   764   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   765   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   766  IFX_INLINE void IfxGeth_mac_setPreambleLength(Ifx_GETH *gethSFR, IfxGeth_PreambleLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   768  /** \brief Enables / Disables Promiscuous Mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   769   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   770   * \param enabled Promiscuous Mode enable / disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   771   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   772   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   773  IFX_INLINE void IfxGeth_mac_setPromiscuousMode(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   774  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   775  /** \brief Set the priorities for Rx queues for mapping tagged packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   776   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   777   * \param channel Rx DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   778   * \param priorities Rx queue priority
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   779   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   780   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   781  IFX_INLINE void IfxGeth_mac_setVlanPriorityQueueRouting(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint8 priorities);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   782  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   783  /** \brief Enable / Disable Queue Insertion
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   784   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   785   * \param enable config parameter TRUE: enabled/ FALSE: disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   786   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   787   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   788  IFX_INLINE void IfxGeth_mac_setQueueVlanInsertion(Ifx_GETH *gethSFR, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   789  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   790  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   791  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   792  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   793  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   794  /** \brief Sets the Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   795   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   796   * \param speed Ethernet Line Speed
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   797   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   798   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   799  IFX_EXTERN void IfxGeth_mac_setLineSpeed(Ifx_GETH *gethSFR, IfxGeth_LineSpeed speed);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   800  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   801  /** \brief Sets the MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   802   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   803   * \param macAddress MAC Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   804   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   805   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   806  IFX_EXTERN void IfxGeth_mac_setMacAddress(Ifx_GETH *gethSFR, uint8 *macAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   807  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   808  /** \brief Writes to Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   809   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   810   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   811   * \param vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   812   * \return TRUE if write was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   813   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   814  IFX_EXTERN boolean IfxGeth_mac_writeQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   816  /** \brief Reads from Queue Vlan tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   817   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   818   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   819   * \param const vLanTag VLAN Tag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   820   * \return TRUE if read was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   821   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   822  IFX_EXTERN boolean IfxGeth_mac_readQueueVlanTag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, uint16 *const vLanTag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   823  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   824  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   825  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   826  /** \addtogroup IfxLld_Geth_Std_Module_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   827   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   829  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   830  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   831  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   833  /** \brief Returns the status of whether clock for GETH module is enabled or diabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   834   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   835   * \return Status:\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   836   * TRUE : if module is enabled\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   837   * FALSE : if module is disabled
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   838   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   839  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   840  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   841  /** \brief Sets the External Phy Interface mode
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   842   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   843   * \param mode PHY Interface Mode (MII/RGMII/RMII)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   844   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   845   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   846  IFX_INLINE void IfxGeth_setPhyInterfaceMode(Ifx_GETH *gethSFR, IfxGeth_PhyInterfaceMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   847  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   848  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   849  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   850  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   851  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   852  /** \brief Disables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   853   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   854   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   855   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   856  IFX_EXTERN void IfxGeth_disableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   857  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   858  /** \brief Enables the clock for GETH module
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   859   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   860   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   861   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   862  IFX_EXTERN void IfxGeth_enableModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   863  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   864  /** \brief Returns the Src Pointer of the selected GETH service request node
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   865   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   866   * \param serviceRequest Service Request number
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   867   * \return pointer to Src register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   868   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   869  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGeth_getSrcPointer(Ifx_GETH *gethSFR, IfxGeth_ServiceRequest serviceRequest);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   870  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   871  /** \brief resets Ethernet kernel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   872   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   873   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   874   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   875  IFX_EXTERN void IfxGeth_resetModule(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   876  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   877  /** \brief API to get the resource index of the GETH specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   878   * \param geth Pointer to Geth register
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   879   * \return geth resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   881  IFX_EXTERN IfxGeth_Index IfxGeth_getIndex(Ifx_GETH *geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   883  /** \brief Get the address of the specified GETH resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   884   * \param geth Module index of the GETH
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   885   * \return GETH module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   887  IFX_EXTERN Ifx_GETH *IfxGeth_getAddress(IfxGeth_Index geth);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   889  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   890  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   891  /** \addtogroup IfxLld_Geth_Std_MTL_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   892   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   894  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   895  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   896  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   897  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   898  /** \brief Enables the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   899   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   900   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   901   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   902   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   903  IFX_INLINE void IfxGeth_mtl_enableRxQueue(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   904  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   905  /** \brief sets the Rx Arbitration algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   906   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   907   * \param arbitrationAlgorithm Rx Arbitration Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   908   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   909   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   910  IFX_INLINE void IfxGeth_mtl_setRxArbitrationAlgorithm(Ifx_GETH *gethSFR, IfxGeth_RxArbitrationAlgorithm arbitrationAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   911  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   912  /** \brief Sets the selected DMA Channel mapping for the selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   913   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   914   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   915   * \param dmaChannel DMA channel for selected Rx Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   916   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   917   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   918  IFX_INLINE void IfxGeth_mtl_setRxQueueDmaChannelMapping(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_RxDmaChannel dmaChannel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   920  /** \brief Sets the selected Rx Queue for DA based DMA channel
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   921   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   922   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   923   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   924   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   925   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   926  IFX_INLINE void IfxGeth_mtl_setRxQueueForDaBasedDmaChannel(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   928  /** \brief sets the Tx Scheduling algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   929   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   930   * \param schedulingAlgorithm Tx Scheduling Algorithm
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   931   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   932   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   933  IFX_INLINE void IfxGeth_mtl_setTxSchedulingAlgorithm(Ifx_GETH *gethSFR, IfxGeth_TxSchedulingAlgorithm schedulingAlgorithm);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   934  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   935  /** \brief Enable and set queue ID to route packets failing unicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   936   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   937   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   938   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   939   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   940  IFX_INLINE void IfxGeth_mtl_enableUnicastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   941  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   942  /** \brief Disable queuing of packets failing unicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   943   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   944   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   945   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   946  IFX_INLINE void IfxGeth_mtl_disableUnicastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   947  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   948  /** \brief Enable and set queue ID to route packets failing multicast filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   949   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   950   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   951   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   952   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   953  IFX_INLINE void IfxGeth_mtl_enableMulticastFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   954  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   955  /** \brief Disable queuing of packets failing multicast filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   956   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   957   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   958   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   959  IFX_INLINE void IfxGeth_mtl_disableMulticastFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   961  /** \brief Enable and set queue ID to route packets failing VLAN tag filter
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   962   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   963   * \param queueId Rx MTL Queue ID
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   964   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   965   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   966  IFX_INLINE void IfxGeth_mtl_enableVlanFilterFailQueuing(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   967  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   968  /** \brief Disable queuing of packets failing VLAN tag filtering
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   969   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   970   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   971   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   972  IFX_INLINE void IfxGeth_mtl_disableVlanFilterFailQueuing(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   974  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   975  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   976  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   977  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   978  /** \brief Clears all the Mtl interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   979   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   980   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   981   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   982   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   983  IFX_EXTERN void IfxGeth_mtl_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   984  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   985  /** \brief Clears the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   986   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   987   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   988   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   989   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   990   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   991  IFX_EXTERN void IfxGeth_mtl_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   992  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   993  /** \brief Disables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   994   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   995   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   996   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   997   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   998   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	   999  IFX_EXTERN void IfxGeth_mtl_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1001  /** \brief Enables the selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1002   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1003   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1004   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1005   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1007  IFX_EXTERN void IfxGeth_mtl_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1009  /** \brief Enables the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1010   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1011   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1012   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1013   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1014  IFX_EXTERN void IfxGeth_mtl_enableTxQueue(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1016  /** \brief Returns the status of selected Mtl interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1017   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1018   * \param queueId Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1019   * \param flag MTL interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1020   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1021   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1022   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1023  IFX_EXTERN boolean IfxGeth_mtl_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_MtlQueue queueId, IfxGeth_MtlInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1024  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1025  /** \brief Sets the Receive Forward Error Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1026   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1027   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1028   * \param enabled Enable/Disable Receive Forward Error Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1029   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1031  IFX_EXTERN void IfxGeth_mtl_setRxForwardErrorPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1033  /** \brief Sets the Receive Forward Undersized Good Packets for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1034   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1035   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1036   * \param enabled Enable/Disable Receive Forward Undersized Good Packets
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1037   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1038   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1039  IFX_EXTERN void IfxGeth_mtl_setRxForwardUndersizedGoodPacket(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1040  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1041  /** \brief Sets the size of the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1042   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1043   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1044   * \param queueSize Rx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1045   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1046   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1047  IFX_EXTERN void IfxGeth_mtl_setRxQueueSize(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1048  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1049  /** \brief Sets the Receive Store And Forward for the selected RX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1050   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1051   * \param queueId Rx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1052   * \param enabled Enable/Disable Receive Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1053   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1054   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1055  IFX_EXTERN void IfxGeth_mtl_setRxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_RxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1056  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1057  /** \brief Sets the size of the selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1058   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1059   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1060   * \param queueSize Tx Queue Size
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1061   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1062   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1063  IFX_EXTERN void IfxGeth_mtl_setTxQueueSize(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, IfxGeth_QueueSize queueSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1065  /** \brief Sets the Transmit Store And Forward for teh selected TX Queue
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1066   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1067   * \param queueId Tx Queue Index
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1068   * \param enabled Enable/Disable Transmit Store and Forward
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1069   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1070   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1071  IFX_EXTERN void IfxGeth_mtl_setTxStoreAndForward(Ifx_GETH *gethSFR, IfxGeth_TxMtlQueue queueId, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1072  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1073  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1074  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1075  /** \addtogroup IfxLld_Geth_Std_DMA_Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1076   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1077  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1078  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1079  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1080  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1081  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1082  /** \brief Applies a software reset of MAC and DMA controller
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1083   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1084   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1085   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1086  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1087  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1088  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1089   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1090   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1091   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1092   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1093  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1094  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1095  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1096   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1097   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1098   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1099   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1101  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1102  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1103  /** \brief Disables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1104   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1105   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1106   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1107   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1108   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1109  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1110  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1111  /** \brief Enables the selected DMA interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1112   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1113   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1114   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1115   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1116   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1117  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1118  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1119  /** \brief Returns the status of selected DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1120   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1121   * \param channelId DMA channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1122   * \param flag DMA interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1123   * \return TRUE: if set\n
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1124   * FLASE : if not set
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1125   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1126  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1127  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1128  /** \brief Wiats until software reset of MAC and DMA controller is done or until timout.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1129   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1130   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1131  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1132  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1133  /** \brief Enables/Disables Address aligned beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1134   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1135   * \param enabled Enable/Disable Address Aligned Beats
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1136   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1137   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1138  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1139  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1140  /** \brief Enables/Disables Fixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1141   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1142   * \param enabled Enable/Disable Fixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1144   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1145  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1146  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1147  /** \brief Enables/Disables Mixed Burst Length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1148   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1149   * \param enabled Enable/Disable Mixed Burst
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1151   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1152  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1153  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1154  /** \brief sets the size of the rx buffers in descriptors for selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1155   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1156   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1157   * \param size Rx Buffers size (applies for both buffers)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1159   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1160  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1161  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1162  /** \brief sets the base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1163   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1164   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1165   * \param address base address of the first descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1166   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1167   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1168  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1169  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1170  /** \brief sets the Length of the Rx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1171   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1172   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1173   * \param length Length of the ring (no of total Rx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1174   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1175   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1176  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1177  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1178  /** \brief sets the address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1179   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1180   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1181   * \param address address of the last valid descriptor in the Receive descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1182   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1183   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1184  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1185  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1186  /** \brief sets the programmable burst length of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1187   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1188   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1189   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1190   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1191   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1192  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1193  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1194  /** \brief sets the base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1195   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1196   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1197   * \param address base address of the first descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1198   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1199   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1200  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1201  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1202  /** \brief sets the Length of the Tx descriptors ring
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1203   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1204   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1205   * \param length Length of the ring (no of total Tx descriptors)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1206   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1207   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1208  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1209  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1210  /** \brief sets the address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1211   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1212   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1213   * \param address address of the last valid descriptor in the Transmit descriptor list
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1214   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1215   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1216  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1217  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1218  /** \brief sets the programmable burst length of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1219   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1220   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1221   * \param length Programmable burst length
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1222   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1223   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1224  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1225  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1226  /** \brief starts the receiver of selected Rx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1227   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1228   * \param channel Rx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1229   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1230   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1231  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1232  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1233  /** \brief starts the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1234   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1235   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1236   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1237   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1238  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1239  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1240  /** \brief Stops the tramsimitter of selected Tx channel of DMA
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1241   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1242   * \param channel Tx channel Id
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1244   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1245  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1246  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1247  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1248  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1249  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1251  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1252  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1253  /** \brief Enables/Disables the MAC operation in the loopback mode at GMII or MII
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1254   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1255   * \param mode Loopback Mode Enable / Disable
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1257   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1258  IFX_INLINE void IfxGeth_mac_setLoopbackMode(Ifx_GETH *gethSFR, IfxGeth_LoopbackMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1259  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1260  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1261  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1262  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1263  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1264  /** \brief Reads a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1265   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1266   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1267   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1268   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1269   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1270  IFX_EXTERN void IfxGeth_phy_Clause22_readMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1271  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1272  /** \brief Writes to a MDIO register of Clause 22 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1273   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1274   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1275   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1277   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1278  IFX_EXTERN void IfxGeth_Phy_Clause22_writeMDIORegister(uint32 layerAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1279  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1280  /** \brief Reads a MDIO register of Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1281   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1282   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1283   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1284   * \param pData Pointer to Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1285   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1286   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1287  IFX_EXTERN void IfxGeth_phy_Clause45_readMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 *pData);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1288  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1289  /** \brief Writes to a MDIO register for Clause 45 PHY
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1290   * \param layerAddr Layer Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1291   * \param deviceAddr Device Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1292   * \param regAddr Register Address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1293   * \param data Data
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1294   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1295   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1296  IFX_EXTERN void IfxGeth_Phy_Clause45_writeMDIORegister(uint32 layerAddr, uint32 deviceAddr, uint32 regAddr, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1297  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1298  /** \brief Sets the maximum size of the packet
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1299   * \param gethSFR Pointer to GETH register base address
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1300   * \param maxPacketSize Minimum size of the frame beyond which giant packet status is set.
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1301   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1302   */
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1303  IFX_EXTERN void IfxGeth_mac_setMaxPacketSize(Ifx_GETH *gethSFR, uint16 maxPacketSize);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1304  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1305  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1306  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1307  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1308  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1309  IFX_INLINE void IfxGeth_dma_applySoftwareReset(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1310  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1311      gethSFR->DMA_MODE.B.SWR = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1312  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1313  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1314  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1315  IFX_INLINE void IfxGeth_dma_clearAllInterruptFlags(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1316  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1317      gethSFR->DMA_CH[channelId].STATUS.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1318  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1319  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1320  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1321  IFX_INLINE void IfxGeth_dma_clearInterruptFlag(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1322  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1323      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1324      gethSFR->DMA_CH[channelId].STATUS.U = value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1325  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1326  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1327  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1328  IFX_INLINE void IfxGeth_dma_disableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1329  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1330      uint32 value = ~(1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1331      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U &= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1332  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1333  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1334  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1335  IFX_INLINE void IfxGeth_dma_enableInterrupt(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1336  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1337      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1338      gethSFR->DMA_CH[channelId].INTERRUPT_ENABLE.U |= value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1339  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1340  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1341  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1342  IFX_INLINE boolean IfxGeth_dma_isInterruptFlagSet(Ifx_GETH *gethSFR, IfxGeth_DmaChannel channelId, IfxGeth_DmaInterruptFlag flag)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1343  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1344      uint32 value = (1 << flag);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1345      return gethSFR->DMA_CH[channelId].STATUS.U & (Ifx_UReg_32Bit)value;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1346  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1347  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1348  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1349  IFX_INLINE boolean IfxGeth_dma_isSoftwareResetDone(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1350  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1351      return gethSFR->DMA_MODE.B.SWR == 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1352  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1353  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1354  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1355  IFX_INLINE void IfxGeth_dma_setAddressAlignedBeats(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1356  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1357      gethSFR->DMA_SYSBUS_MODE.B.AAL = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1358  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1359  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1360  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1361  IFX_INLINE void IfxGeth_dma_setFixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1362  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1363      gethSFR->DMA_SYSBUS_MODE.B.FB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1364  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1365  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1366  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1367  IFX_INLINE void IfxGeth_dma_setMixedBurst(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1368  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1369      gethSFR->DMA_SYSBUS_MODE.B.MB = enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1370  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1371  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1372  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1373  IFX_INLINE void IfxGeth_dma_setRxBufferSize(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint16 size)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1374  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1375      /* [RBSZ_13_Y:RBSZ_X_0] represents the size of the Rx buffer*/
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1376      gethSFR->DMA_CH[channel].RX_CONTROL.B.RBSZ_13_Y = (uint32)((size >> 2) & IFX_GETH_DMA_CH_RX_CONTROL_RBSZ_13_Y_MSK);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1377  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1378  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1379  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1380  IFX_INLINE void IfxGeth_dma_setRxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1381  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1382      gethSFR->DMA_CH[channel].RXDESC_LIST_ADDRESS.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1383  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1384  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1385  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1386  IFX_INLINE void IfxGeth_dma_setRxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1387  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1388      gethSFR->DMA_CH[channel].RXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1389  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1390  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1391  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1392  IFX_INLINE void IfxGeth_dma_setRxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1393  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1394      gethSFR->DMA_CH[channel].RXDESC_TAIL_POINTER.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1395  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1396  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1397  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1398  IFX_INLINE void IfxGeth_dma_setRxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1399  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1400      gethSFR->DMA_CH[channel].RX_CONTROL.B.RXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1401  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1402  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1403  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1404  IFX_INLINE void IfxGeth_dma_setTxDescriptorListAddress(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1405  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1406      gethSFR->DMA_CH[channel].TXDESC_LIST_ADDRESS.U = address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1407  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1409  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1410  IFX_INLINE void IfxGeth_dma_setTxDescriptorRingLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1411  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1412      gethSFR->DMA_CH[channel].TXDESC_RING_LENGTH.U = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1413  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1414  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1415  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1416  IFX_INLINE void IfxGeth_dma_setTxDescriptorTailPointer(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1417  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1418      gethSFR->DMA_CH[channel].TXDESC_TAIL_POINTER.U = (uint32)address;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1419  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1420  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1421  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1422  IFX_INLINE void IfxGeth_dma_setTxMaxBurstLength(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel, IfxGeth_DmaBurstLength length)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1424      gethSFR->DMA_CH[channel].TX_CONTROL.B.TXPBL = length;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1425  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1426  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1427  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1428  IFX_INLINE void IfxGeth_dma_startReceiver(Ifx_GETH *gethSFR, IfxGeth_RxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1429  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1430      gethSFR->DMA_CH[channel].RX_CONTROL.B.SR = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1431  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1432  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1433  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1434  IFX_INLINE void IfxGeth_dma_startTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1435  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1436      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1437  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1438  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1439  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1440  IFX_INLINE void IfxGeth_dma_stopTransmitter(Ifx_GETH *gethSFR, IfxGeth_TxDmaChannel channel)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1441  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1442      gethSFR->DMA_CH[channel].TX_CONTROL.B.ST = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1443  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1444  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1445  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1446  IFX_INLINE boolean IfxGeth_isModuleEnabled(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1447  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1448      return (gethSFR->CLC.B.DISS == 0) ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1449  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1450  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1451  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1452  IFX_INLINE void IfxGeth_mac_disableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1453  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1454      gethSFR->MAC_CONFIGURATION.B.RE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1455  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1456  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1457  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1458  IFX_INLINE void IfxGeth_mac_disableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1459  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1460      gethSFR->MAC_CONFIGURATION.B.TE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1461  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1462  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1463  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1464  IFX_INLINE void IfxGeth_mac_enableReceiver(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1465  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1466      gethSFR->MAC_CONFIGURATION.B.RE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1467  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1468  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1469  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1470  IFX_INLINE void IfxGeth_mac_enableTransmitter(Ifx_GETH *gethSFR)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1471  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1472      gethSFR->MAC_CONFIGURATION.B.TE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1473  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1474  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1475  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1476  IFX_INLINE void IfxGeth_mac_setAllMulticastPassing(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1477  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1478      gethSFR->MAC_PACKET_FILTER.B.PM = ((enabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1479  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1480  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1481  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1482  IFX_INLINE void IfxGeth_mac_setCrcChecking(Ifx_GETH *gethSFR, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1483  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1484      gethSFR->MAC_EXT_CONFIGURATION.B.DCRCC = ((enabled == 1) ? 0 : 1);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1485  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1487  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1488  IFX_INLINE void IfxGeth_mac_setCrcStripping(Ifx_GETH *gethSFR, boolean acsEnabled, boolean cstEnabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1489  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1490      gethSFR->MAC_CONFIGURATION.B.ACS = ((acsEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1491      gethSFR->MAC_CONFIGURATION.B.CST = ((cstEnabled == 1) ? 1 : 0);
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1492  }
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1494  
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1495  IFX_INLINE void IfxGeth_mac_setDuplexMode(Ifx_GETH *gethSFR, IfxGeth_DuplexMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1496  {
; D:\WorkSpace\Tasking\Tasking_TC397_Client_Ethernet\0_Src\4_McHal\Tricore\Geth\Std\IfxGeth.h	  1497      gethSFR->MAC_CONFIGURATION.B.DM = mode;
	st.b	[a15]1,d15
.L160:
	extr.u	d15,d0,#17,#2
.L268:
	ld.a	a4,[a2]
.L269:
	jne	d15,#0,.L18
.L270:
	mov	d4,#0
	j	.L19
.L18:
	jne	d15,#1,.L20
.L271:
	mov	d4,#1
	j	.L21
.L20:
	mov	d4,#2
.L19:
.L21:
	call	IfxGeth_mac_setLineSpeed
.L180:
	mov.aa	a4,a12
	j	netif_set_link_up
.L132:
	
__Ifx_Lwip_pollTimerFlags_function_end:
	.size	Ifx_Lwip_pollTimerFlags,__Ifx_Lwip_pollTimerFlags_function_end-Ifx_Lwip_pollTimerFlags
.L72:
	; End of function
	
	.sdecl	'.text.text_cpu0',code,cluster('Ifx_Lwip_pollReceiveFlags')
	.sect	'.text.text_cpu0'
	.align	2
	
	.global	Ifx_Lwip_pollReceiveFlags

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   345  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   346  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   347  /** \brief Polling the ETH receive event flags */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   348  void Ifx_Lwip_pollReceiveFlags(void)
; Function Ifx_Lwip_pollReceiveFlags
.L31:
Ifx_Lwip_pollReceiveFlags:	.type	func

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   349  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   350      /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   351       * We are assuming that the only interrupt source is an incoming packet
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   352       */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   353      //while (ethernetif_tc29x_timerFlags_interrupt())
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   354      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   355          ifx_netif_input(&g_Lwip.netif);
	movh.a	a4,#@his(g_Lwip)
	lea	a4,[a4]@los(g_Lwip)
.L276:
	j	ifx_netif_input
.L161:
	
__Ifx_Lwip_pollReceiveFlags_function_end:
	.size	Ifx_Lwip_pollReceiveFlags,__Ifx_Lwip_pollReceiveFlags_function_end-Ifx_Lwip_pollReceiveFlags
.L77:
	; End of function
	
	.sdecl	'.text.text_cpu0',code,cluster('netif_state_changed')
	.sect	'.text.text_cpu0'
	.align	2
	
	.global	netif_state_changed

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   356      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   357  }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   358  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   359  #if LWIP_NETIF_EXT_STATUS_CALLBACK
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   360  static netif_ext_callback_t g_extCallback;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   361  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   362  void netif_state_changed(struct netif* netif, netif_nsc_reason_t reason, const netif_ext_callback_args_t* args) {
; Function netif_state_changed
.L33:
netif_state_changed:	.type	func
	sub.a	a10,#16
.L182:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   363      if(reason | LWIP_NSC_IPV4_ADDRESS_CHANGED) {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   364          LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: new ip address assigned: %"U16_F".%"U16_F".%"U16_F".%"U16_F"\n",
	ld.bu	d15,[a4]4
	st.w	[a10],d15
	ld.bu	d15,[a4]5
	st.w	[a10]4,d15
	ld.bu	d15,[a4]6
	st.w	[a10]8,d15
	ld.bu	d15,[a4]7
	st.w	[a10]12,d15
	movh.a	a4,#@his(.2.str)
.L183:
	lea	a4,[a4]@los(.2.str)
	j	Ifx_Lwip_printf
.L162:
	
__netif_state_changed_function_end:
	.size	netif_state_changed,__netif_state_changed_function_end-netif_state_changed
.L82:
	; End of function
	
	.sdecl	'.text.text_cpu0',code,cluster('Ifx_Lwip_init')
	.sect	'.text.text_cpu0'
	.align	2
	
	.global	Ifx_Lwip_init

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   365                          ip4_addr1_16(netif_ip4_addr(netif)),
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   366                          ip4_addr2_16(netif_ip4_addr(netif)),
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   367                          ip4_addr3_16(netif_ip4_addr(netif)),
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   368                          ip4_addr4_16(netif_ip4_addr(netif))));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   369      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   370  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   371  }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   372  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   373  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   374  //________________________________________________________________________________________
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   375  // INITIALIZATION FUNCTION
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   376  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   377  /** \brief LWIP initialization function
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   378   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   379   * The followings are executed: */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   380  void Ifx_Lwip_init(eth_addr_t ethAddr)
; Function Ifx_Lwip_init
.L35:
Ifx_Lwip_init:	.type	func
	sub.a	a10,#24
.L184:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   381  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   382  #ifdef __LWIP_DEBUG__
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   383      //Init uart for debugging
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   384      initUART();
	mov	e8,d5,d4
	call	initUART
.L124:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   385  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   386      ip_addr_t default_ipaddr, default_netmask, default_gw;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   387      IP4_ADDR(&default_gw, 192,168,0,1);
	ld.w	d15,.6.cnt
	st.w	[a10]20,d15
.L221:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   388      IP4_ADDR(&default_ipaddr, 192,168,0,10);
	ld.w	d15,.7.cnt
	st.w	[a10]12,d15
.L222:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   389      IP4_ADDR(&default_netmask, 255,255,255,0);
	ld.w	d15,.8.cnt
	st.w	[a10]16,d15
.L223:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   390  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   391      LWIP_DEBUGF(IFX_LWIP_DEBUG, ("Ifx_Lwip_init start!\n"));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   392  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   393      /** - initialise LWIP (lwip_init()) */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   394      lwip_init();
	call	lwip_init
.L224:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   395  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   396      /** - initialise and add a \ref netif */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   397      g_Lwip.eth_addr = ethAddr;
	movh.a	a12,#@his(g_Lwip)
	lea	a12,[a12]@los(g_Lwip)
.L225:
	st.h	[a12]52,d9
	st.w	[a12]48,d8
.L226:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   398      netif_add(&g_Lwip.netif, &default_ipaddr, &default_netmask, &default_gw,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   399          (void *)0, ifx_netif_init, ethernet_input);
	mov	d15,#0
	st.w	[a10],d15
.L227:
	movh.a	a15,#@his(ifx_netif_init)
	lea	a15,[a15]@los(ifx_netif_init)
	st.a	[a10]4,a15
.L228:
	movh.a	a15,#@his(ethernet_input)
	lea	a15,[a15]@los(ethernet_input)
	st.a	[a10]8,a15
.L229:
	lea	a5,[a10]12
.L230:
	lea	a6,[a10]16
.L231:
	lea	a7,[a10]20
	mov.aa	a4,a12
	call	netif_add
.L232:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   400      netif_set_default(&g_Lwip.netif);
	mov.aa	a4,a12
	call	netif_set_default
.L233:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   401      netif_set_up(&g_Lwip.netif);
	mov.aa	a4,a12
	call	netif_set_up
.L234:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   402      /* 确保Linkup */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   403      // while (netif_is_link_up(&g_Lwip.netif) != 0x01)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   404      // {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   405  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   406      // }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   407      // else
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   408      // {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   409      //     /* When the netif link is down this function must be called */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   410      //     netif_set_down(&g_Lwip.netif);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   411      // }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   412      // netif_set_up(&g_Lwip.netif);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   413  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   414  #if LWIP_NETIF_HOSTNAME
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   415      g_Lwip.netif.hostname = BOARDNAME;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   416  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   417  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   418  #if LWIP_DHCP
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   419      /** - assign \ref dhcp to \ref netif */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   420      dhcp_set_struct(&g_Lwip.netif, &g_Lwip.dhcp);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   421  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   422      /* we start the dhcp always here also when we don't have a link here */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   423      dhcp_start(&g_Lwip.netif);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   424  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   425  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   426  #if LWIP_NETIF_EXT_STATUS_CALLBACK
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   427      netif_add_ext_callback(&g_extCallback, netif_state_changed);
	lea	a4,g_extCallback
.L235:
	movh.a	a5,#@his(netif_state_changed)
	lea	a5,[a5]@los(netif_state_changed)
	j	netif_add_ext_callback
.L121:
	
__Ifx_Lwip_init_function_end:
	.size	Ifx_Lwip_init,__Ifx_Lwip_init_function_end-Ifx_Lwip_init
.L62:
	; End of function
	
	.sdecl	'.text.text_cpu0',code,cluster('sys_now')
	.sect	'.text.text_cpu0'
	.align	2
	
	.global	sys_now

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   428  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   429      LWIP_DEBUGF(IFX_LWIP_DEBUG, ("Ifx_Lwip_init end!\n"));
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   430  }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   431  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   432  /** Returns the current time in milliseconds,
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   433   * may be the same as sys_jiffies or at least based on it. */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   434  inline u32_t sys_now(void)
; Function sys_now
.L37:
sys_now:	.type	func

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   435  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   436      return g_TickCount_1ms;
	ld.w	d2,g_TickCount_1ms
.L216:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   437  }
	ret
.L120:
	
__sys_now_function_end:
	.size	sys_now,__sys_now_function_end-sys_now
.L57:
	; End of function
	
	.sdecl	'.text.inttab0.intvec.064',code
	.sect	'.text.inttab0.intvec.064'

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   438  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   439  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   440   * This interrupt is raised by the ethernet tx. The initialization is done by IfxGeth_Eth_init().
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   441   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   442   * \isrProvider \ref ISR_PROVIDER_ETH
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   443   * \isrPriority \ref ISR_PRIORITY_GETH_TX
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   444   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   445   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   446  IFX_INTERRUPT(ISR_Geth_Tx, CPU_WHICH_SERVICE_ETHERNET, ISR_PRIORITY_GETH_TX)
	movh.a	a14,#@his(ISR_Geth_Tx)
	lea	a14,[a14]@los(ISR_Geth_Tx)
	ji	a14
	.sdecl	'.text.text_cpu0',code,cluster('ISR_Geth_Tx')
	.sect	'.text.text_cpu0'
	.align	2
	
	.global	ISR_Geth_Tx
; Function ISR_Geth_Tx
.L39:
ISR_Geth_Tx:	.type	func

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   447  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   448      isrTxCount++;
	ld.w	d15,isrTxCount
.L285:
	add	d15,#1
	st.w	isrTxCount,d15
.L286:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   449  }
	rfe
.L168:
	
__ISR_Geth_Tx_function_end:
	.size	ISR_Geth_Tx,__ISR_Geth_Tx_function_end-ISR_Geth_Tx
.L87:
	; End of function
	
	.sdecl	'.text.inttab0.intvec.065',code
	.sect	'.text.inttab0.intvec.065'

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   450  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   451  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   452   * This interrupt is raised by the ethernet rx. The initialization is done by IfxGeth_Eth_init().
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   453   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   454   * \isrProvider \ref ISR_PROVIDER_ETH
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   455   * \isrPriority \ref ISR_PRIORITY_GETH_RX
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   456   *
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   457   */
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   458  IFX_INTERRUPT(ISR_Geth_Rx, CPU_WHICH_SERVICE_ETHERNET, ISR_PRIORITY_GETH_RX)
	movh.a	a14,#@his(ISR_Geth_Rx)
	lea	a14,[a14]@los(ISR_Geth_Rx)
	ji	a14
	.sdecl	'.text.text_cpu0',code,cluster('ISR_Geth_Rx')
	.sect	'.text.text_cpu0'
	.align	2
	
	.global	ISR_Geth_Rx
; Function ISR_Geth_Rx
.L41:
ISR_Geth_Rx:	.type	func

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   459  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   460      isrRxCount++;
	ld.w	d15,isrRxCount
.L291:
	add	d15,#1
	st.w	isrRxCount,d15
.L292:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   461  }
	rfe
.L169:
	
__ISR_Geth_Rx_function_end:
	.size	ISR_Geth_Rx,__ISR_Geth_Rx_function_end-ISR_Geth_Rx
.L92:
	; End of function
	
	.sdecl	'.text.text_cpu0',code,cluster('Ifx_Lwip_printf')
	.sect	'.text.text_cpu0'
	.align	2
	
	.global	Ifx_Lwip_printf

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   462  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   463  //________________________________________________________________________________________
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   464  // DEBUGGING FUNCTIONS
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   465  #include "Configuration.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   466  #include <stdio.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   467  #include <string.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   468  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   469  #define MAXCHARS 256
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   470  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   471  s8_t Ifx_Lwip_printf(const char *format, ...)
; Function Ifx_Lwip_printf
.L43:
Ifx_Lwip_printf:	.type	func
	lea	a10,[a10]-264
.L185:
	mov.aa	a5,a4
.L187:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   472  {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   473  #ifdef __LWIP_DEBUG__
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   474      char    str[MAXCHARS + 4];
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   475      s8_t    result = ERR_CONN;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   476  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   477      va_list args;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   478      va_start(args, format);
	lea	a6,[a10]264
.L208:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   479      vsnprintf(str, MAXCHARS, format, args);
	mov.aa	a4,a10
.L186:
	mov	d4,#256
	call	vsnprintf
.L115:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   480      va_end(args);
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   481      {
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   482          Ifx_SizeT cnt = 0;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   483          while(str[cnt]!=0)
	mov	d4,#0
	ld.bu	d15,[a10]
.L188:
	mov.aa	a15,a10
.L209:
	jeq	d15,#0,.L23
.L24:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   484              cnt++;
	add	d4,#1
	ld.b	d15,[+a15]1
.L189:
	extr	d4,d4,#0,#16
.L190:
	jne	d15,#0,.L24
.L23:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   485          sendUARTMessage(str, cnt);
	mov.aa	a4,a10
.L210:
	call	sendUARTMessage
.L191:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   486          sendUARTMessage("\r\n", 2);
	lea	a4,.5.str
.L211:
	mov	d4,#2
	call	sendUARTMessage
.L116:

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   487      }
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   488  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   489      return result;
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   490  }
	mov	d2,#-11
	ret
.L110:
	
__Ifx_Lwip_printf_function_end:
	.size	Ifx_Lwip_printf,__Ifx_Lwip_printf_function_end-Ifx_Lwip_printf
.L52:
	; End of function
	
	.sdecl	'.zbss.Ifx_Lwip.g_TickCount_1ms',data,cluster('g_TickCount_1ms')
	.sect	'.zbss.Ifx_Lwip.g_TickCount_1ms'
	.global	g_TickCount_1ms
	.align	2
g_TickCount_1ms:	.type	object
	.size	g_TickCount_1ms,4
	.space	4
	.sdecl	'.bss.bss_cpu0',data,cluster('g_Lwip')
	.sect	'.bss.bss_cpu0'
	.global	g_Lwip
	.align	4
g_Lwip:	.type	object
	.size	g_Lwip,68
	.space	68
	.sdecl	'.bss.bss_cpu0',data,cluster('g_IfxGeth')
	.sect	'.bss.bss_cpu0'
	.global	g_IfxGeth
	.align	4
g_IfxGeth:	.type	object
	.size	g_IfxGeth,156
	.space	156
	.sdecl	'.zdata.Ifx_Lwip.isrTxCount',data,cluster('isrTxCount')
	.sect	'.zdata.Ifx_Lwip.isrTxCount'
	.global	isrTxCount
	.align	2
isrTxCount:	.type	object
	.size	isrTxCount,4
	.space	4
	.sdecl	'.zdata.Ifx_Lwip.isrRxCount',data,cluster('isrRxCount')
	.sect	'.zdata.Ifx_Lwip.isrRxCount'
	.global	isrRxCount
	.align	2
isrRxCount:	.type	object
	.size	isrRxCount,4
	.space	4
	.sdecl	'.bss.bss_cpu0',data,cluster('channel0TxBuffer1')
	.sect	'.bss.bss_cpu0'
	.global	channel0TxBuffer1
channel0TxBuffer1:	.type	object
	.size	channel0TxBuffer1,20608
	.space	20608
	.sdecl	'.bss.bss_cpu0',data,cluster('channel0RxBuffer1')
	.sect	'.bss.bss_cpu0'
	.global	channel0RxBuffer1
channel0RxBuffer1:	.type	object
	.size	channel0RxBuffer1,20608
	.space	20608
	.sdecl	'.zbss.Ifx_Lwip.g_extCallback',data,cluster('g_extCallback')
	.sect	'.zbss.Ifx_Lwip.g_extCallback'
	.align	4
g_extCallback:	.type	object
	.size	g_extCallback,8
	.space	8
	.sdecl	'.rodata.Ifx_Lwip..2.str',data,rom
	.sect	'.rodata.Ifx_Lwip..2.str'
.2.str:	.type	object
	.size	.2.str,45
	.byte	110,101,116,105
	.byte	102,58,32,110
	.byte	101,119,32,105
	.byte	112,32,97,100
	.byte	100,114,101,115
	.byte	115,32,97,115
	.byte	115,105,103,110
	.byte	101,100,58,32
	.byte	37,117,46,37
	.byte	117,46,37,117
	.byte	46,37,117,10
	.space	1
	.sdecl	'.zrodata.Ifx_Lwip..5.str',data,rom
	.sect	'.zrodata.Ifx_Lwip..5.str'
.5.str:	.type	object
	.size	.5.str,3
	.byte	13,10
	.space	1
	.calls	'__INDIRECT__','ethernet_input'
	.calls	'__INDIRECT__','ifx_netif_init'
	.calls	'__INDIRECT__','netif_state_changed'
	.calls	'Ifx_Lwip_pollTimerFlags','tcp_fasttmr'
	.calls	'Ifx_Lwip_pollTimerFlags','tcp_slowtmr'
	.calls	'Ifx_Lwip_pollTimerFlags','etharp_tmr'
	.calls	'Ifx_Lwip_pollTimerFlags','netif_set_link_down'
	.calls	'Ifx_Lwip_pollTimerFlags','IfxGeth_mac_setLineSpeed'
	.calls	'Ifx_Lwip_pollTimerFlags','netif_set_link_up'
	.calls	'Ifx_Lwip_pollReceiveFlags','ifx_netif_input'
	.calls	'netif_state_changed','Ifx_Lwip_printf'
	.calls	'Ifx_Lwip_init','initUART'
	.calls	'Ifx_Lwip_init','lwip_init'
	.calls	'Ifx_Lwip_init','netif_add'
	.calls	'Ifx_Lwip_init','netif_set_default'
	.calls	'Ifx_Lwip_init','netif_set_up'
	.calls	'Ifx_Lwip_init','netif_add_ext_callback'
	.calls	'Ifx_Lwip_printf','vsnprintf'
	.calls	'Ifx_Lwip_printf','sendUARTMessage'
	.calls	'Ifx_Lwip_onTimerTick','',0
	.calls	'Ifx_Lwip_pollTimerFlags','',0
	.calls	'Ifx_Lwip_pollReceiveFlags','',0
	.calls	'netif_state_changed','',16
	.calls	'Ifx_Lwip_init','',24
	.calls	'sys_now','',0
	.calls	'ISR_Geth_Tx','',0
	.calls	'ISR_Geth_Rx','',0
	.extern	IfxGeth_mac_setLineSpeed
	.extern	netif_add
	.extern	netif_set_default
	.extern	netif_set_up
	.extern	netif_set_link_up
	.extern	netif_set_link_down
	.extern	netif_add_ext_callback
	.extern	tcp_slowtmr
	.extern	tcp_fasttmr
	.extern	lwip_init
	.extern	etharp_tmr
	.extern	ethernet_input
	.extern	ifx_netif_init
	.extern	ifx_netif_input
	.extern	initUART
	.extern	sendUARTMessage
	.extern	vsnprintf
	.extern	__printf_float
	.extern	__printf_llong
	.extern	__INDIRECT__
	.calls	'Ifx_Lwip_printf','',264
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L45:
	.word	186045
	.half	3
	.word	.L46
	.byte	4
.L44:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L47
	.byte	2,1,1,3
	.word	170
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	173
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	218
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	230
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,169,2,17,1,1,6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	342
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	316
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	348
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	348
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	316
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	457
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	457
	.byte	16,0,2,35,0,0,12,4,189,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	473
	.byte	4,2,35,0,0,7
	.byte	'unsigned char',0,1,8
.L130:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,4,197,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	648
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,135,10,16,4,11
	.byte	'AE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,4,205,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	914
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,136,17,25,12,13
	.byte	'CON0',0
	.word	569
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	874
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1105
	.byte	4,2,35,8,0,14
	.word	1145
	.byte	3
	.word	1208
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,164,4,17,1,1,5
	.byte	'watchdog',0,3,164,4,65
	.word	1213
	.byte	5
	.byte	'password',0,3,164,4,82
	.word	626
	.byte	6,0,4
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,3,197,4,17,1,1,5
	.byte	'password',0,3,197,4,59
	.word	626
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,144,5,17,1,1,5
	.byte	'watchdog',0,3,144,5,63
	.word	1213
	.byte	5
	.byte	'password',0,3,144,5,80
	.word	626
	.byte	6,0,4
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,3,177,5,17,1,1,5
	.byte	'password',0,3,177,5,57
	.word	626
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,220,4,19
	.word	626
	.byte	1,1,5
	.byte	'watchdog',0,3,220,4,74
	.word	1213
	.byte	6,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,3,129,5,19
	.word	626
	.byte	1,1,6,0,10
	.byte	'_Ifx_P_OUT_Bits',0,6,145,3,16,4,11
	.byte	'P0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,6,171,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1623
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,6,171,2,16,4,11
	.byte	'PS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,6,251,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1939
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,6,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,6,155,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2510
	.byte	4,2,35,0,0,15,4
	.word	609
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,6,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	609
	.byte	5,0,2,35,3,0,12,6,171,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2639
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,6,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	609
	.byte	5,0,2,35,3,0,12,6,187,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2854
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,6,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	609
	.byte	5,0,2,35,3,0,12,6,195,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3069
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,6,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	609
	.byte	5,0,2,35,3,0,12,6,179,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3286
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,6,141,1,16,4,11
	.byte	'P0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,6,163,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3506
	.byte	4,2,35,0,0,15,24
	.word	609
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,6,212,3,16,4,11
	.byte	'PD0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	609
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	609
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	609
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,6,195,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3830
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,6,233,3,16,4,11
	.byte	'PD8',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	609
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	609
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	609
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,6,203,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4134
	.byte	4,2,35,0,0,15,8
	.word	609
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,6,111,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,6,147,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4459
	.byte	4,2,35,0,0,15,12
	.word	609
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,6,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,6,187,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4799
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,6,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,6,179,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5165
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,6,230,2,16,4,11
	.byte	'PS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,12,6,139,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5529
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,6,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,12,6,155,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5676
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,6,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,12,6,163,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5845
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,6,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,6,147,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6017
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,6,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	12,0,2,35,2,0,12,6,219,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6192
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,6,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	8,0,2,35,3,0,12,6,235,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6366
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,6,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,6,243,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6540
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,6,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,6,227,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6716
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,6,208,2,16,4,11
	.byte	'PS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,6,131,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6872
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,6,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,6,211,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7205
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,6,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	609
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,6,203,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7553
	.byte	4,2,35,0,0,15,32
	.word	7833
	.byte	16,7,0,15,56
	.word	609
	.byte	16,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,105,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,6,139,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7891
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,68,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,6,131,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7978
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,6,220,5,25,128,2,13
	.byte	'OUT',0
	.word	1899
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2470
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2590
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2630
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2814
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3029
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3246
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3466
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2630
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3781
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3821
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4094
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4410
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4450
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4750
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4790
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5125
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5489
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4450
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5636
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5805
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5977
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6152
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6326
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6500
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6676
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6832
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7165
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7513
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4450
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	7873
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	7882
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	7938
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8505
	.byte	4,3,35,252,1,0,14
	.word	8545
	.byte	3
	.word	9115
	.byte	17,5,187,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,5,169,5,17,1,1,5
	.byte	'port',0,5,169,5,44
	.word	9120
	.byte	5
	.byte	'pinIndex',0,5,169,5,56
	.word	609
	.byte	5
	.byte	'action',0,5,169,5,80
	.word	9125
	.byte	6,0,4
	.byte	'IfxScuCcu_wait',0,3,7,157,14,17,1,1,5
	.byte	'timeSec',0,7,157,14,40
	.word	230
	.byte	19,6,0,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,7,188,13,20
	.word	230
	.byte	1,1,6,0,17,9,161,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_2',0,2,18
	.byte	'IfxCpu_ResourceCpu_3',0,3,18
	.byte	'IfxCpu_ResourceCpu_4',0,4,18
	.byte	'IfxCpu_ResourceCpu_5',0,5,18
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,8,235,6,31
	.word	9390
	.byte	1,1,6,0
.L137:
	.byte	8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,8,233,5,20
	.word	609
	.byte	1,1
.L139:
	.byte	6,0
.L134:
	.byte	8
	.byte	'IfxCpu_disableInterrupts',0,3,8,241,5,20
	.word	609
	.byte	1,1
.L136:
	.byte	19,6,0,0
.L142:
	.byte	4
	.byte	'IfxCpu_restoreInterrupts',0,3,8,134,8,17,1,1
.L144:
	.byte	5
	.byte	'enabled',0,8,134,8,50
	.word	609
.L146:
	.byte	6,0
.L119:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,8,255,6,19
	.word	9730
	.byte	1,1,5
	.byte	'address',0,8,255,6,55
	.word	626
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,8,156,7,20
	.word	609
	.byte	1,1,5
	.byte	'address',0,8,156,7,70
	.word	626
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,8,138,9,17,1,1,5
	.byte	'address',0,8,138,9,56
	.word	9730
	.byte	5
	.byte	'count',0,8,138,9,72
	.word	9730
	.byte	19,6,0,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,11,68,16,4,11
	.byte	'SRPN',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	609
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	609
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,11,93,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9961
	.byte	4,2,35,0,0,14
	.word	10251
	.byte	3
	.word	10290
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,10,247,1,17,1,1,5
	.byte	'src',0,10,247,1,60
	.word	10295
	.byte	6,0,10
	.byte	'_Ifx_GETH_MAC_CONFIGURATION_Bits',0,13,249,3,16,4,11
	.byte	'RE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PRELEN',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'DC',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'BL',0,1
	.word	609
	.byte	2,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'DR',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'DCRS',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'DO',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'ECRSFD',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'LM',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'DM',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'FES',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'PS',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'JE',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'JD',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'BE',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'WD',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'ACS',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'CST',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'S2KP',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'GPSLCE',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'IPG',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'IPC',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'SARC',0,1
	.word	609
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,235,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10343
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_EXT_CONFIGURATION_Bits',0,13,181,4,16,4,11
	.byte	'GPSL',0,2
	.word	626
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'DCRCC',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'SPEN',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'USP',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'HDSMS',0,1
	.word	609
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EIPGEN',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EIPG',0,1
	.word	609
	.byte	5,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'FHE',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,139,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10827
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PACKET_FILTER_Bits',0,13,133,6,16,4,11
	.byte	'PR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	2,5,2,35,0,11
	.byte	'DAIF',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PM',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'DBF',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PCF',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'SAIF',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'SAF',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'VTFE',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	3,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	609
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	626
	.byte	9,1,2,35,2,11
	.byte	'RA',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,243,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11133
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_WATCHDOG_TIMEOUT_Bits',0,13,186,9,16,4,11
	.byte	'WTO',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'PWE',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	434
	.byte	23,0,2,35,0,0,12,13,179,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11485
	.byte	4,2,35,0,0,15,64
	.word	609
	.byte	16,63,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_TAG_CTRL_Bits',0,13,135,9,16,4,11
	.byte	'OB',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CT',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'OFS',0,1
	.word	609
	.byte	5,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	434
	.byte	10,15,2,35,0,11
	.byte	'VTIM',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'ESVL',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	2,3,2,35,2,11
	.byte	'EVLS',0,1
	.word	609
	.byte	2,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EVLRXS',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'VTHM',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EDVLP',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'RES_27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EIVLS',0,1
	.word	609
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EIVLRXS',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,155,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11651
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_TAG_DATA_Bits',0,13,156,9,16,4,11
	.byte	'VID',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'VEN',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'ETV',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'DOVLTC',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'ERSVLM',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'ERIVLT',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	3,0,2,35,2,11
	.byte	'DMACHEN',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'DMACHN',0,1
	.word	609
	.byte	2,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	5,0,2,35,3,0,12,13,163,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12018
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_TAG_FILTER_Bits',0,13,171,9,16,4,11
	.byte	'VID',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'VEN',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'ETV',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'DOVLTC',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'ERSVLM',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'ERIVLT',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	3,0,2,35,2,11
	.byte	'DMACHEN',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'DMACHN',0,1
	.word	609
	.byte	2,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	5,0,2,35,3,0,12,13,171,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12280
	.byte	4,2,35,0,0,12,13,226,33,8,4,13
	.byte	'MAC_VLAN_TAG_DATA',0
	.word	12240
	.byte	4,2,35,0,13
	.byte	'MAC_VLAN_TAG_FILTER',0
	.word	12504
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_HASH_TABLE_Bits',0,13,231,8,16,4,11
	.byte	'VLHT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,131,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12607
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_INCL_Bits',0,13,238,8,16,4,11
	.byte	'VLT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'VLC',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'VLP',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'CSVL',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'VLTI',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'CBTI',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'ADDR',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	4,2,2,35,3,11
	.byte	'RDWR',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'BUSY',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,139,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12728
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_VLAN_INCL_Q_Bits',0,13,254,8,16,4,11
	.byte	'VLT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'CSVL',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	12,0,2,35,2,0,12,13,147,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12991
	.byte	4,2,35,0,0,12,13,233,33,8,4,13
	.byte	'MAC_VLAN_INCL',0
	.word	12951
	.byte	4,2,35,0,13
	.byte	'MAC_VLAN_INCL_Q',0
	.word	13106
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_INNER_VLAN_INCL_Bits',0,13,150,5,16,4,11
	.byte	'VLT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'VLC',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'VLP',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'CSVL',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'VLTI',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,2
	.word	626
	.byte	11,0,2,35,2,0,12,13,179,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13201
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_Q0_TX_FLOW_CTRL_Bits',0,13,233,6,16,4,11
	.byte	'FCB_BPA',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TFE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'PLT',0,1
	.word	609
	.byte	3,1,2,35,0,11
	.byte	'DZPQ',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'PT',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,179,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13383
	.byte	4,2,35,0,0,15,28
	.word	609
	.byte	16,27,0,10
	.byte	'_Ifx_GETH_MAC_RX_FLOW_CTRL_Bits',0,13,176,7,16,4,11
	.byte	'RFE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'UP',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	434
	.byte	23,0,2,35,0,0,12,13,227,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13597
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RXQ_CTRL4_Bits',0,13,162,7,16,4,11
	.byte	'UFFQE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'UFFQ',0,1
	.word	609
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'MFFQE',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'MFFQ',0,1
	.word	609
	.byte	2,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'VFFQE',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'VFFQ',0,1
	.word	609
	.byte	2,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	626
	.byte	13,0,2,35,2,0,12,13,219,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13771
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RXQ_CTRL0_Bits',0,13,251,6,16,4,11
	.byte	'RXQ0EN',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'RXQ1EN',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'RXQ2EN',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'RXQ3EN',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,195,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14014
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RXQ_CTRL1_Bits',0,13,134,7,16,4,11
	.byte	'AVCPQ',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PTPQ',0,1
	.word	609
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'UPQ',0,1
	.word	609
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'MCBCQ',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'MCBCQEN',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'TACPQE',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'TPQC',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	8,0,2,35,3,0,12,13,203,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14207
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RXQ_CTRL2_Bits',0,13,153,7,16,4,11
	.byte	'PSRQ0',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'PSRQ1',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'PSRQ2',0,1
	.word	609
	.byte	8,0,2,35,2,11
	.byte	'PSRQ3',0,1
	.word	609
	.byte	8,0,2,35,3,0,12,13,211,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14559
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_INTERRUPT_STATUS_Bits',0,13,178,5,16,4,11
	.byte	'RGSMIIIS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	2,5,2,35,0,11
	.byte	'PHYIS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PMTIS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'LPIIS',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'MMCIS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'MMCRXIS',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'MMCTXIS',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'MMCRXIPIS',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'TSIS',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'TXSTSIS',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'RXSTSIS',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	434
	.byte	3,14,2,35,0,11
	.byte	'MDIOIS',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	626
	.byte	13,0,2,35,2,0,12,13,195,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14703
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_INTERRUPT_ENABLE_Bits',0,13,161,5,16,4,11
	.byte	'RGSMIIIE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	2,5,2,35,0,11
	.byte	'PHYIE',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PMTIE',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'LPIIE',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	6,4,2,35,0,11
	.byte	'TSIE',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'TXSTSIE',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'RXSTSIE',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	434
	.byte	3,14,2,35,0,11
	.byte	'MDIOIE',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	626
	.byte	13,0,2,35,2,0,12,13,187,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15095
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RX_TX_STATUS_Bits',0,13,186,7,16,4,11
	.byte	'TJT',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'NCARR',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'LCARR',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EXDEF',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'LCOL',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EXCOL',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'RWT',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	434
	.byte	23,0,2,35,0,0,12,13,235,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15411
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PMT_CONTROL_STATUS_Bits',0,13,169,6,16,4,11
	.byte	'PWRDWN',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'MGKPKTEN',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'RWKPKTEN',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	2,3,2,35,0,11
	.byte	'MGKPRCVD',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'RWKPRCVD',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	626
	.byte	2,7,2,35,0,11
	.byte	'GLBLUCAST',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'RWKPFE',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	13,8,2,35,0,11
	.byte	'RWKPTR',0,1
	.word	609
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	2,1,2,35,3,11
	.byte	'RWKFILTRST',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,131,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15648
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_RWK_PACKET_FILTER_Bits',0,13,245,6,16,4,11
	.byte	'WKUPFRMFTR',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,187,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16000
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RWK_FILTER_COMMAND_0_Bits',0,13,214,13,16,4,11
	.byte	'FILTER0_COMMAND',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'FILTER1_COMMAND',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'FILTER2_COMMAND',0,1
	.word	609
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	609
	.byte	4,0,2,35,2,11
	.byte	'FILTER3_COMMAND',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,13,211,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16106
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RWK_FILTER_OFFSET_0_Bits',0,13,234,13,16,4,11
	.byte	'FILTER0_OFFSET',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'FILTER1_OFFSET',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'FILTER2_OFFSET',0,1
	.word	609
	.byte	8,0,2,35,2,11
	.byte	'FILTER3_OFFSET',0,1
	.word	609
	.byte	8,0,2,35,3,0,12,13,227,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16388
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RWK_FILTER_CRC_Bits',0,13,227,13,16,4,11
	.byte	'FILTER0_CRC',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'FILTER1_CRC',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,219,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16574
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RWK_FILTER_BYTE_MASK_Bits',0,13,208,13,16,4,11
	.byte	'FILTERI_BYTE_MASK',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,203,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16697
	.byte	4,2,35,0,0,12,13,254,33,8,4,13
	.byte	'MAC_RWK_PACKET_FILTER',0
	.word	16066
	.byte	4,2,35,0,13
	.byte	'RWK_FILTER_COMMAND_0',0
	.word	16348
	.byte	4,2,35,0,13
	.byte	'RWK_FILTER_OFFSET_0',0
	.word	16534
	.byte	4,2,35,0,13
	.byte	'RWK_FILTER_CRC',0
	.word	16657
	.byte	4,2,35,0,13
	.byte	'RWK_FILTER_BYTE_MASK',0
	.word	16769
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_LPI_CONTROL_STATUS_Bits',0,13,199,5,16,4,11
	.byte	'TLPIEN',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TLPIEX',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'RLPIEN',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'RLPIEX',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'TLPIST',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'RLPIST',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	6,0,2,35,1,11
	.byte	'LPIEN',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PLS',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'PLSEN',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'LPITXA',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'LPIATE',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'LPITCSE',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	626
	.byte	10,0,2,35,2,0,12,13,203,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16960
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_LPI_TIMERS_CONTROL_Bits',0,13,227,5,16,4,11
	.byte	'TWT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'LST',0,2
	.word	626
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	6,0,2,35,3,0,12,13,219,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17325
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_LPI_ENTRY_TIMER_Bits',0,13,219,5,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'LPIET',0,4
	.word	434
	.byte	17,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	12,0,2,35,2,0,12,13,211,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17463
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_1US_TIC_COUNTER_Bits',0,13,210,3,16,4,11
	.byte	'TIC_1US_CNTR',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,12,13,195,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17607
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PHYIF_CONTROL_STATUS_Bits',0,13,153,6,16,4,11
	.byte	'TC',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'LUD',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	626
	.byte	11,0,2,35,0,11
	.byte	'LNKMOD',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'LNKSPEED',0,1
	.word	609
	.byte	2,5,2,35,2,11
	.byte	'LNKSTS',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	10,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0
.L149:
	.byte	12,13,251,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17736
	.byte	4,2,35,0,0,15,20
	.word	609
	.byte	16,19,0,10
	.byte	'_Ifx_GETH_MAC_VERSION_Bits',0,13,223,8,16,4,11
	.byte	'SNPSVER',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'USERVER',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,251,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18051
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_DEBUG_Bits',0,13,161,4,16,4,11
	.byte	'RPESTS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RFCFCSTS',0,1
	.word	609
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	626
	.byte	13,0,2,35,0,11
	.byte	'TPESTS',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'TFCSTS',0,1
	.word	609
	.byte	2,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	626
	.byte	13,0,2,35,2,0,12,13,251,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18186
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_HW_FEATURE0_Bits',0,13,198,4,16,4,11
	.byte	'MIISEL',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'GMIISEL',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'HDSEL',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PCSSEL',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'VLHASH',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'SMASEL',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'RWKSEL',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'MGKSEL',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'MMCSEL',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'ARPOFFSEL',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'TSSEL',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EEESEL',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'TXCOESEL',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'RXCOESEL',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'ADDMACADRSEL',0,1
	.word	609
	.byte	5,1,2,35,2,11
	.byte	'MACADR32SEL',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'MACADR64SEL',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'TSSTSSEL',0,1
	.word	609
	.byte	2,5,2,35,3,11
	.byte	'SAVLANINS',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'ACTPHYSEL',0,1
	.word	609
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,147,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18377
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_HW_FEATURE1_Bits',0,13,227,4,16,4,11
	.byte	'RXFIFOSIZE',0,1
	.word	609
	.byte	5,3,2,35,0,11
	.byte	'SPRAM',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'TXFIFOSIZE',0,2
	.word	626
	.byte	5,5,2,35,0,11
	.byte	'OSTEN',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'PTOEN',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'ADVTHWORD',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'ADDR64',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'DCBEN',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'SPHEN',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'TSOEN',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'DBGMEMA',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'AVSEL',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'RAVSEL',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'POUOST',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'HASHTBLSZ',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'L3L4FNUM',0,1
	.word	609
	.byte	4,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,155,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18937
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_HW_FEATURE2_Bits',0,13,251,4,16,4,11
	.byte	'RXQCNT',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'TXQCNT',0,2
	.word	626
	.byte	4,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'RXCHCNT',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'TXCHCNT',0,1
	.word	609
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'PPSOUTNUM',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'AUXSNAPNUM',0,1
	.word	609
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,163,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19382
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_HW_FEATURE3_Bits',0,13,140,5,16,4,11
	.byte	'NRVF',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'CBTISEL',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'DVLAN',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,12,13,171,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19714
	.byte	4,2,35,0,0,15,212,1
	.word	609
	.byte	16,211,1,0,10
	.byte	'_Ifx_GETH_MAC_MDIO_ADDRESS_Bits',0,13,235,5,16,4,11
	.byte	'GB',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'C45E',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'GOC_0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'GOC_1',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'SKAP',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	609
	.byte	3,0,2,35,0,11
	.byte	'CR',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'NTC',0,1
	.word	609
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'RDA',0,1
	.word	609
	.byte	5,3,2,35,2,11
	.byte	'PA',0,2
	.word	626
	.byte	5,6,2,35,2,11
	.byte	'BTB',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'PSE',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,13,227,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19899
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_MDIO_DATA_Bits',0,13,254,5,16,4,11
	.byte	'GD',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'RA',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,235,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20214
	.byte	4,2,35,0,0,15,40
	.word	609
	.byte	16,39,0,10
	.byte	'_Ifx_GETH_MAC_CSR_SW_CTRL_Bits',0,13,152,4,16,4,11
	.byte	'RCWE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	7,0,2,35,0,11
	.byte	'SEEN',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	434
	.byte	23,0,2,35,0,0,12,13,243,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20327
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_EXT_CFG1_Bits',0,13,172,4,16,4,11
	.byte	'SPLOFST',0,1
	.word	609
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'SPLM',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	434
	.byte	22,0,2,35,0,0,12,13,131,21,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20481
	.byte	4,2,35,0,0,15,196,1
	.word	609
	.byte	16,195,1,0,10
	.byte	'_Ifx_GETH_MAC_ADDRESS_HIGH0_Bits',0,13,228,3,16,4,11
	.byte	'ADDRHI',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'DCS',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	626
	.byte	13,1,2,35,2,11
	.byte	'AE',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,211,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20647
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_ADDRESS_LOW0_Bits',0,13,243,3,16,4,11
	.byte	'ADDRLO',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,227,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20797
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_ADDRESS_HIGH_Bits',0,13,217,3,16,4,11
	.byte	'ADDRHI',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'DCS',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	609
	.byte	6,0,2,35,2,11
	.byte	'MBC',0,1
	.word	609
	.byte	6,2,2,35,3,11
	.byte	'SA',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'AE',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,203,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20894
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_ADDRESS_LOW_Bits',0,13,237,3,16,4,11
	.byte	'ADDRLO',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,219,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21072
	.byte	4,2,35,0,0,15,128,6
	.word	609
	.byte	16,255,5,0,10
	.byte	'_Ifx_GETH_MMC_CONTROL_Bits',0,13,195,9,16,4,11
	.byte	'CNTRST',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CNTSTOPRO',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'RSTONRD',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CNTFREEZ',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'CNTPRST',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'CNTPRSTLVL',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'UCDBC',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	434
	.byte	23,0,2,35,0,0,12,13,187,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21179
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_RX_INTERRUPT_Bits',0,13,151,10,16,4,11
	.byte	'RXGBPKTIS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RXGBOCTIS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'RXGOCTIS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'RXBCGPIS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'RXMCGPIS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'RXCRCERPIS',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'RXALGNERPIS',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'RXRUNTPIS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'RXJABERPIS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'RXUSIZEGPIS',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'RXOSIZEGPIS',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'RX64OCTGBPIS',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'RX65T127OCTGBPIS',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'RX128T255OCTGBPIS',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'RX256T511OCTGBPIS',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'RX512T1023OCTGBPIS',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'RX1024TMAXOCTGBPIS',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'RXUCGPIS',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'RXLENERPIS',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'RXORANGEPIS',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'RXPAUSPIS',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'RXFOVPIS',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'RXVLANGBPIS',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'RXWDOGPIS',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'RXRCVERRPIS',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'RXCTRLPIS',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'RXLPIUSCIS',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'RXLPITRCIS',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,13,211,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21433
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_TX_INTERRUPT_Bits',0,13,219,10,16,4,11
	.byte	'TXGBOCTIS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TXGBPKTIS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TXBCGPIS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'TXMCGPIS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TX64OCTGBPIS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TX65T127OCTGBPIS',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'TX128T255OCTGBPIS',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'TX256T511OCTGBPIS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TX512T1023OCTGBPIS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TX1024TMAXOCTGBPIS',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'TXUCGBPIS',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'TXMCGBPIS',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'TXBCGBPIS',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'TXUFLOWERPIS',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'TXSCOLGPIS',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'TXMCOLGPIS',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'TXDEFPIS',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'TXLATCOLPIS',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'TXEXCOLPIS',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'TXCARERPIS',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'TXGOCTIS',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'TXGPKTIS',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'TXEXDEFPIS',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'TXPAUSPIS',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'TXVLANGPIS',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'TXOSIZEGPIS',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'TXLPIUSCIS',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'TXLPITRCIS',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,13,227,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22179
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_RX_INTERRUPT_MASK_Bits',0,13,185,10,16,4,11
	.byte	'RXGBPKTIM',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RXGBOCTIM',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'RXGOCTIM',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'RXBCGPIM',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'RXMCGPIM',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'RXCRCERPIM',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'RXALGNERPIM',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'RXRUNTPIM',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'RXJABERPIM',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'RXUSIZEGPIM',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'RXOSIZEGPIM',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'RX64OCTGBPIM',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'RX65T127OCTGBPIM',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'RX128T255OCTGBPIM',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'RX256T511OCTGBPIM',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'RX512T1023OCTGBPIM',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'RX1024TMAXOCTGBPIM',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'RXUCGPIM',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'RXLENERPIM',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'RXORANGEPIM',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'RXPAUSPIM',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'RXFOVPIM',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'RXVLANGBPIM',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'RXWDOGPIM',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'RXRCVERRPIM',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'RXCTRLPIM',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'RXLPIUSCIM',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'RXLPITRCIM',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,13,219,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22923
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_TX_INTERRUPT_MASK_Bits',0,13,253,10,16,4,11
	.byte	'TXGBOCTIM',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TXGBPKTIM',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TXBCGPIM',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'TXMCGPIM',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TX64OCTGBPIM',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TX65T127OCTGBPIM',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'TX128T255OCTGBPIM',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'TX256T511OCTGBPIM',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TX512T1023OCTGBPIM',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TX1024TMAXOCTGBPIM',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'TXUCGBPIM',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'TXMCGBPIM',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'TXBCGBPIM',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'TXUFLOWERPIM',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'TXSCOLGPIM',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'TXMCOLGPIM',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'TXDEFPIM',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'TXLATCOLPIM',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'TXEXCOLPIM',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'TXCARERPIM',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'TXGOCTIM',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'TXGPKTIM',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'TXEXDEFPIM',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'TXPAUSPIM',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'TXVLANGPIM',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'TXOSIZEGPIM',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'TXLPIUSCIM',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'TXLPITRCIM',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,13,235,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23674
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_OCTET_COUNT_GOOD_BAD_Bits',0,13,248,17,16,4,11
	.byte	'TXOCTGB',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,203,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24423
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_PACKET_COUNT_GOOD_BAD_Bits',0,13,140,18,16,4,11
	.byte	'TXPKTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,227,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24528
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_BROADCAST_PACKETS_GOOD_Bits',0,13,158,17,16,4,11
	.byte	'TXBCASTG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,227,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24657
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_MULTICAST_PACKETS_GOOD_Bits',0,13,221,17,16,4,11
	.byte	'TXMCASTG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,171,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24788
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_64OCTETS_PACKETS_GOOD_BAD_Bits',0,13,144,17,16,4,11
	.byte	'TX64OCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,211,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24919
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_65TO127OCTETS_PACKETS_GOOD_BAD_Bits',0,13,151,17,16,4,11
	.byte	'TX65_127OCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,219,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25054
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_128TO255OCTETS_PACKETS_GOOD_BAD_Bits',0,13,251,16,16,4,11
	.byte	'TX128_255OCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,187,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25198
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_256TO511OCTETS_PACKETS_GOOD_BAD_Bits',0,13,130,17,16,4,11
	.byte	'TX256_511OCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,195,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25344
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_Bits',0,13,137,17,16,4,11
	.byte	'TX512_1023OCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,203,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25490
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_Bits',0,13,244,16,16,4,11
	.byte	'TX1024_MAXOCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,179,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25638
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_UNICAST_PACKETS_GOOD_BAD_Bits',0,13,168,18,16,4,11
	.byte	'TXUCASTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,131,32,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25786
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_MULTICAST_PACKETS_GOOD_BAD_Bits',0,13,228,17,16,4,11
	.byte	'TXMCASTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,179,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25920
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_BROADCAST_PACKETS_GOOD_BAD_Bits',0,13,165,17,16,4,11
	.byte	'TXBCASTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,235,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26056
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_UNDERFLOW_ERROR_PACKETS_Bits',0,13,161,18,16,4,11
	.byte	'TXUNDRFLW',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,251,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26192
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_SINGLE_COLLISION_GOOD_PACKETS_Bits',0,13,154,18,16,4,11
	.byte	'TXSNGLCOLG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,243,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26325
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_MULTIPLE_COLLISION_GOOD_PACKETS_Bits',0,13,235,17,16,4,11
	.byte	'TXMULTCOLG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,187,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26465
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_DEFERRED_PACKETS_Bits',0,13,179,17,16,4,11
	.byte	'TXDEFRD',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,251,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26607
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_LATE_COLLISION_PACKETS_Bits',0,13,200,17,16,4,11
	.byte	'TXLATECOL',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,147,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26731
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_EXCESSIVE_COLLISION_PACKETS_Bits',0,13,186,17,16,4,11
	.byte	'TXEXSCOL',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,131,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26863
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_CARRIER_ERROR_PACKETS_Bits',0,13,172,17,16,4,11
	.byte	'TXCARR',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,243,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26999
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_OCTET_COUNT_GOOD_Bits',0,13,242,17,16,4,11
	.byte	'TXOCTG',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,195,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27127
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_PACKET_COUNT_GOOD_Bits',0,13,133,18,16,4,11
	.byte	'TXPKTG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,219,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27227
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_EXCESSIVE_DEFERRAL_ERROR_Bits',0,13,193,17,16,4,11
	.byte	'TXEXSDEF',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,139,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27351
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_PAUSE_PACKETS_Bits',0,13,147,18,16,4,11
	.byte	'TXPAUSE',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,235,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27484
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_VLAN_PACKETS_GOOD_Bits',0,13,175,18,16,4,11
	.byte	'TXVLANG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,139,32,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27605
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_OSIZE_PACKETS_GOOD_Bits',0,13,254,17,16,4,11
	.byte	'TXOSIZG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,211,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27730
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_PACKETS_COUNT_GOOD_BAD_Bits',0,13,179,16,16,4,11
	.byte	'RXPKTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,235,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27856
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_OCTET_COUNT_GOOD_BAD_Bits',0,13,159,16,16,4,11
	.byte	'RXOCTGB',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,211,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27986
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_OCTET_COUNT_GOOD_Bits',0,13,153,16,16,4,11
	.byte	'RXOCTG',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,203,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28091
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_BROADCAST_PACKETS_GOOD_Bits',0,13,218,15,16,4,11
	.byte	'RXBCASTG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,131,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28191
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_MULTICAST_PACKETS_GOOD_Bits',0,13,146,16,16,4,11
	.byte	'RXMCASTG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,195,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28322
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_CRC_ERROR_PACKETS_Bits',0,13,232,15,16,4,11
	.byte	'RXCRCERR',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,147,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28453
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_ALIGNMENT_ERROR_PACKETS_Bits',0,13,211,15,16,4,11
	.byte	'RXALGNERR',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,251,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28579
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_RUNT_ERROR_PACKETS_Bits',0,13,200,16,16,4,11
	.byte	'RXRUNTERR',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,131,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28712
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_JABBER_ERROR_PACKETS_Bits',0,13,246,15,16,4,11
	.byte	'RXJABERR',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,163,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28840
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_UNDERSIZE_PACKETS_GOOD_Bits',0,13,207,16,16,4,11
	.byte	'RXUNDERSZG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,139,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28969
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_OVERSIZE_PACKETS_GOOD_Bits',0,13,172,16,16,4,11
	.byte	'RXOVERSZG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,227,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29102
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_64OCTETS_PACKETS_GOOD_BAD_Bits',0,13,197,15,16,4,11
	.byte	'RX64OCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,235,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29233
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_65TO127OCTETS_PACKETS_GOOD_BAD_Bits',0,13,204,15,16,4,11
	.byte	'RX65_127OCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,243,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29368
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_128TO255OCTETS_PACKETS_GOOD_BAD_Bits',0,13,176,15,16,4,11
	.byte	'RX128_255OCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,211,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29512
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_256TO511OCTETS_PACKETS_GOOD_BAD_Bits',0,13,183,15,16,4,11
	.byte	'RX256_511OCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,219,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29658
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_Bits',0,13,190,15,16,4,11
	.byte	'RX512_1023OCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,227,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29804
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_Bits',0,13,169,15,16,4,11
	.byte	'RX1024_MAXOCTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,203,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29952
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_UNICAST_PACKETS_GOOD_Bits',0,13,214,16,16,4,11
	.byte	'RXUCASTG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,147,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30100
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_LENGTH_ERROR_PACKETS_Bits',0,13,253,15,16,4,11
	.byte	'RXLENERR',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,171,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30229
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_OUT_OF_RANGE_TYPE_PACKETS_Bits',0,13,165,16,16,4,11
	.byte	'RXOUTOFRNG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,219,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30358
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_PAUSE_PACKETS_Bits',0,13,186,16,16,4,11
	.byte	'RXPAUSEPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,243,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30494
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_FIFO_OVERFLOW_PACKETS_Bits',0,13,239,15,16,4,11
	.byte	'RXFIFOOVFL',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,155,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30618
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_VLAN_PACKETS_GOOD_BAD_Bits',0,13,221,16,16,4,11
	.byte	'RXVLANPKTGB',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,155,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30750
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_WATCHDOG_ERROR_PACKETS_Bits',0,13,228,16,16,4,11
	.byte	'RXWDGERR',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,163,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30883
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_RECEIVE_ERROR_PACKETS_Bits',0,13,193,16,16,4,11
	.byte	'RXRCVERR',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,251,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31014
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_CONTROL_PACKETS_GOOD_Bits',0,13,225,15,16,4,11
	.byte	'RXCTRLG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,139,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31144
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_LPI_USEC_CNTR_Bits',0,13,214,17,16,4,11
	.byte	'TXLPIUSC',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,163,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31272
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_TX_LPI_TRAN_CNTR_Bits',0,13,207,17,16,4,11
	.byte	'TXLPITRC',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,155,31,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31394
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_LPI_USEC_CNTR_Bits',0,13,139,16,16,4,11
	.byte	'RXLPIUSC',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,187,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31516
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RX_LPI_TRAN_CNTR_Bits',0,13,132,16,16,4,11
	.byte	'RXLPITRC',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,179,29,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31638
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_IPC_RX_INTERRUPT_MASK_Bits',0,13,244,9,16,4,11
	.byte	'RXIPV4GPIM',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RXIPV4HERPIM',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'RXIPV4NOPAYPIM',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'RXIPV4FRAGPIM',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'RXIPV4UDSBLPIM',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'RXIPV6GPIM',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'RXIPV6HERPIM',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'RXIPV6NOPAYPIM',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'RXUDPGPIM',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'RXUDPERPIM',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'RXTCPGPIM',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'RXTCPERPIM',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'RXICMPGPIM',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'RXICMPERPIM',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'RXIPV4GOIM',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'RXIPV4HEROIM',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'RXIPV4NOPAYOIM',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'RXIPV4FRAGOIM',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'RXIPV4UDSBLOIM',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'RXIPV6GOIM',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'RXIPV6HEROIM',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'RXIPV6NOPAYOIM',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'RXUDPGOIM',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'RXUDPEROIM',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'RXTCPGOIM',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'RXTCPEROIM',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'RXICMPGOIM',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'RXICMPEROIM',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,13,203,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31760
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MMC_IPC_RX_INTERRUPT_Bits',0,13,209,9,16,4,11
	.byte	'RXIPV4GPIS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RXIPV4HERPIS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'RXIPV4NOPAYPIS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'RXIPV4FRAGPIS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'RXIPV4UDSBLPIS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'RXIPV6GPIS',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'RXIPV6HERPIS',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'RXIPV6NOPAYPIS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'RXUDPGPIS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'RXUDPERPIS',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'RXTCPGPIS',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'RXTCPERPIS',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'RXICMPGPIS',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'RXICMPERPIS',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'RXIPV4GOIS',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'RXIPV4HEROIS',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'RXIPV4NOPAYOIS',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'RXIPV4FRAGOIS',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'RXIPV4UDSBLOIS',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'RXIPV6GOIS',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'RXIPV6HEROIS',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'RXIPV6NOPAYOIS',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'RXUDPGOIS',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'RXUDPEROIS',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'RXTCPGOIS',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'RXTCPEROIS',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'RXICMPGOIS',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'RXICMPEROIS',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,13,195,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32546
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_GOOD_PACKETS_Bits',0,13,160,14,16,4,11
	.byte	'RXIPV4GDPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,163,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33327
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_HEADER_ERROR_PACKETS_Bits',0,13,173,14,16,4,11
	.byte	'RXIPV4HDRERRPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,179,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33455
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_NO_PAYLOAD_PACKETS_Bits',0,13,186,14,16,4,11
	.byte	'RXIPV4NOPAYPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,195,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33595
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_FRAGMENTED_PACKETS_Bits',0,13,147,14,16,4,11
	.byte	'RXIPV4FRAGPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,147,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33732
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS_Bits',0,13,193,14,16,4,11
	.byte	'RXIPV4UDSBLPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,203,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33868
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_GOOD_PACKETS_Bits',0,13,212,14,16,4,11
	.byte	'RXIPV6GDPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,227,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34016
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_HEADER_ERROR_PACKETS_Bits',0,13,225,14,16,4,11
	.byte	'RXIPV6HDRERRPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,243,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34144
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_NO_PAYLOAD_PACKETS_Bits',0,13,238,14,16,4,11
	.byte	'RXIPV6NOPAYPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,131,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34284
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXUDP_GOOD_PACKETS_Bits',0,13,162,15,16,4,11
	.byte	'RXUDPGDPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,195,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34421
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXUDP_ERROR_PACKETS_Bits',0,13,149,15,16,4,11
	.byte	'RXUDPERRPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,179,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34547
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXTCP_GOOD_PACKETS_Bits',0,13,136,15,16,4,11
	.byte	'RXTCPGDPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,163,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34675
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXTCP_ERROR_PACKETS_Bits',0,13,251,14,16,4,11
	.byte	'RXTCPERRPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,147,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34801
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXICMP_GOOD_PACKETS_Bits',0,13,134,14,16,4,11
	.byte	'RXICMPGDPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,131,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34929
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXICMP_ERROR_PACKETS_Bits',0,13,249,13,16,4,11
	.byte	'RXICMPERRPKT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,243,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35057
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_GOOD_OCTETS_Bits',0,13,154,14,16,4,11
	.byte	'RXIPV4GDOCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,155,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35187
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_HEADER_ERROR_OCTETS_Bits',0,13,167,14,16,4,11
	.byte	'RXIPV4HDRERROCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,171,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35291
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_NO_PAYLOAD_OCTETS_Bits',0,13,180,14,16,4,11
	.byte	'RXIPV4NOPAYOCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,187,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35407
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_FRAGMENTED_OCTETS_Bits',0,13,141,14,16,4,11
	.byte	'RXIPV4FRAGOCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,139,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35520
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_Bits',0,13,200,14,16,4,11
	.byte	'RXIPV4UDSBLOCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,211,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35632
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_GOOD_OCTETS_Bits',0,13,206,14,16,4,11
	.byte	'RXIPV6GDOCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,219,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35755
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_HEADER_ERROR_OCTETS_Bits',0,13,219,14,16,4,11
	.byte	'RXIPV6HDRERROCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,235,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35859
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXIPV6_NO_PAYLOAD_OCTETS_Bits',0,13,232,14,16,4,11
	.byte	'RXIPV6NOPAYOCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,251,27,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35975
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXUDP_GOOD_OCTETS_Bits',0,13,156,15,16,4,11
	.byte	'RXUDPGDOCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,187,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36088
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXUDP_ERROR_OCTETS_Bits',0,13,143,15,16,4,11
	.byte	'RXUDPERROCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,171,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36190
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXTCP_GOOD_OCTETS_Bits',0,13,130,15,16,4,11
	.byte	'RXTCPGDOCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,155,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36294
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXTCP_ERROR_OCTETS_Bits',0,13,245,14,16,4,11
	.byte	'RXTCPERROCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,139,28,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36396
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXICMP_GOOD_OCTETS_Bits',0,13,128,14,16,4,11
	.byte	'RXICMPGDOCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,251,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36500
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_RXICMP_ERROR_OCTETS_Bits',0,13,243,13,16,4,11
	.byte	'RXICMPERROCT',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,235,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36604
	.byte	4,2,35,0,0,15,248,4
	.word	609
	.byte	16,247,4,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_CONTROL_Bits',0,13,248,7,16,4,11
	.byte	'TSENA',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TSCFUPDT',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TSINIT',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'TSUPDT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TSADDREG',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'TSENALL',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TSCTRLSSR',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'TSVER2ENA',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'TSIPENA',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'TSIPV6ENA',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'TSIPV4ENA',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'TSEVNTENA',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'TSMSTRENA',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'SNAPTYPSEL',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'TSENMACADDR',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'CSC',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	3,0,2,35,2,11
	.byte	'TXTSSTSM',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	609
	.byte	3,4,2,35,3,11
	.byte	'AV8021ASMEN',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	3,0,2,35,3,0,12,13,171,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36721
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SUB_SECOND_INCREMENT_Bits',0,13,200,7,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'SNSINC',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'SSINC',0,1
	.word	609
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	8,0,2,35,3,0,12,13,243,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37301
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SYSTEM_TIME_SECONDS_Bits',0,13,230,7,16,4,11
	.byte	'TSS',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,147,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37468
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS_Bits',0,13,216,7,16,4,11
	.byte	'TSSS',0,4
	.word	434
	.byte	31,1,2,35,0,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,131,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37569
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SYSTEM_TIME_SECONDS_UPDATE_Bits',0,13,236,7,16,4,11
	.byte	'TSS',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,155,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37698
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_Bits',0,13,223,7,16,4,11
	.byte	'TSSS',0,4
	.word	434
	.byte	31,1,2,35,0,11
	.byte	'ADDSUB',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,139,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37806
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_ADDEND_Bits',0,13,242,7,16,4,11
	.byte	'TSAR',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,163,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37937
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_Bits',0,13,209,7,16,4,11
	.byte	'TSHWR',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,251,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38036
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_STATUS_Bits',0,13,189,8,16,4,11
	.byte	'TSSOVF',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TSTARGT0',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'TSTRGTERR0',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TSTARGT1',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TSTRGTERR1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'TSTARGT2',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'TSTRGTERR2',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TSTARGT3',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TSTRGTERR3',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	5,1,2,35,1,11
	.byte	'TXTSSIS',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	609
	.byte	4,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,13,227,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38174
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_Bits',0,13,210,8,16,4,11
	.byte	'TXTSSLO',0,4
	.word	434
	.byte	31,1,2,35,0,11
	.byte	'TXTSSMIS',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,235,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38599
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_SECONDS_Bits',0,13,217,8,16,4,11
	.byte	'TXTSSHI',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,243,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38736
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_INGRESS_ASYM_CORR_Bits',0,13,169,8,16,4,11
	.byte	'OSTIAC',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,203,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38849
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_EGRESS_ASYM_CORR_Bits',0,13,149,8,16,4,11
	.byte	'OSTEAC',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,179,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38961
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_Bits',0,13,175,8,16,4,11
	.byte	'TSIC',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,211,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39072
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_Bits',0,13,155,8,16,4,11
	.byte	'TSEC',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,187,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39188
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_Bits',0,13,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'TSICSNS',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,219,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39303
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_Bits',0,13,161,8,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'TSECSNS',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,195,23,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39467
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PPS_CONTROL_Bits',0,13,212,6,16,4,11
	.byte	'PPSCTRL_PPSCMD',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'PPSEN0',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TRGTMODSEL0',0,1
	.word	609
	.byte	2,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	609
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	2,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	2,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	2,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	2,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	2,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,171,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39630
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PPS0_TARGET_TIME_SECONDS_Bits',0,13,200,6,16,4,11
	.byte	'TSTRH0',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,155,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40072
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PPS0_TARGET_TIME_NANOSECONDS_Bits',0,13,193,6,16,4,11
	.byte	'TTSL0',0,4
	.word	434
	.byte	31,1,2,35,0,11
	.byte	'TRGTBUSY0',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,147,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40181
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PPS0_INTERVAL_Bits',0,13,187,6,16,4,11
	.byte	'PPSINT0',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,139,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40314
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MAC_PPS0_WIDTH_Bits',0,13,206,6,16,4,11
	.byte	'PPSWIDTH0',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,163,22,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40413
	.byte	4,2,35,0,0,15,112
	.word	609
	.byte	16,111,0,10
	.byte	'_Ifx_GETH_MTL_OPERATION_MODE_Bits',0,13,172,11,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DTXSTS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'RAA',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	2,3,2,35,0,11
	.byte	'SCHALG',0,1
	.word	609
	.byte	2,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'CNTPRST',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'CNTCLR',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	434
	.byte	22,0,2,35,0,0,12,13,251,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40520
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_INTERRUPT_STATUS_Bits',0,13,159,11,16,4,11
	.byte	'Q0IS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'Q1IS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'Q2IS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'Q3IS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	626
	.byte	14,0,2,35,2,0,12,13,243,24,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40778
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ_DMA_MAP0_Bits',0,13,157,12,16,4,11
	.byte	'Q0MDMACH',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'Q0DDMACH',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	609
	.byte	3,0,2,35,0,11
	.byte	'Q1MDMACH',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'Q1DDMACH',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	3,0,2,35,1,11
	.byte	'Q2MDMACH',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'Q2DDMACH',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	3,0,2,35,2,11
	.byte	'Q3MDMACH',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	2,4,2,35,3,11
	.byte	'Q3DDMACH',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	3,0,2,35,3,0,12,13,195,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41015
	.byte	4,2,35,0,0,15,204,1
	.word	609
	.byte	16,203,1,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0_OPERATION_MODE_Bits',0,13,229,12,16,4,11
	.byte	'FTQ',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TSF',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TXQEN',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'TTC',0,1
	.word	609
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	626
	.byte	9,0,2,35,0,11
	.byte	'TQS',0,1
	.word	609
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	12,0,2,35,2,0,12,13,235,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41447
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0_UNDERFLOW_Bits',0,13,248,12,16,4,11
	.byte	'UFFRMCNT',0,2
	.word	626
	.byte	11,5,2,35,0,11
	.byte	'UFCNTOVF',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,12,13,251,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41655
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0_DEBUG_Bits',0,13,207,12,16,4,11
	.byte	'TXQPAUSED',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TRCSTS',0,1
	.word	609
	.byte	2,5,2,35,0,11
	.byte	'TWCSTS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TXQSTS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TXSTSFSTS',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'PTXQ',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'STXSTSF',0,1
	.word	609
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	626
	.byte	9,0,2,35,2,0,12,13,219,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41799
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0_ETS_STATUS_Bits',0,13,222,12,16,4,11
	.byte	'ABS',0,4
	.word	434
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	8,0,2,35,3,0,12,13,227,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42075
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0_QUANTUM_WEIGHT_Bits',0,13,241,12,16,4,11
	.byte	'ISCQW',0,4
	.word	434
	.byte	21,11,2,35,0,11
	.byte	'reserved_21',0,2
	.word	626
	.byte	11,0,2,35,2,0,12,13,243,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42195
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ0',0,13,156,32,25,28,13
	.byte	'OPERATION_MODE',0
	.word	41615
	.byte	4,2,35,0,13
	.byte	'UNDERFLOW',0
	.word	41759
	.byte	4,2,35,4,13
	.byte	'DEBUG',0
	.word	42035
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	4450
	.byte	8,2,35,12,13
	.byte	'ETS_STATUS',0
	.word	42155
	.byte	4,2,35,20,13
	.byte	'QUANTUM_WEIGHT',0
	.word	42281
	.byte	4,2,35,24,0,14
	.word	42321
	.byte	15,16
	.word	609
	.byte	16,15,0,10
	.byte	'_Ifx_GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS_Bits',0,13,186,11,16,4,11
	.byte	'TXUNFIS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ABPSIS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'TXUIE',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'ABPSIE',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	6,0,2,35,1,11
	.byte	'RXOVFIS',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	7,0,2,35,2,11
	.byte	'RXOIE',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	609
	.byte	7,0,2,35,3,0,12,13,131,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42483
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_Q0',0,13,179,32,25,4,13
	.byte	'INTERRUPT_CONTROL_STATUS',0
	.word	42736
	.byte	4,2,35,0,0,14
	.word	42776
	.byte	10
	.byte	'_Ifx_GETH_MTL_RXQ0_OPERATION_MODE_Bits',0,13,247,11,16,4,11
	.byte	'RTC',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'FUP',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'FEP',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'RSF',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'DIS_TCP_EF',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EHFC',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'RFA',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'RFD',0,4
	.word	434
	.byte	4,14,2,35,0,11
	.byte	'reserved_18',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'RQS',0,2
	.word	626
	.byte	5,7,2,35,2,11
	.byte	'reserved_25',0,1
	.word	609
	.byte	7,0,2,35,3,0,12,13,171,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42839
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_Bits',0,13,236,11,16,4,11
	.byte	'OVFPKTCNT',0,2
	.word	626
	.byte	11,5,2,35,0,11
	.byte	'OVFCNTOVF',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'MISPKTCNT',0,2
	.word	626
	.byte	11,5,2,35,2,11
	.byte	'MISCNTOVF',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,13,163,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43159
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ0_DEBUG_Bits',0,13,224,11,16,4,11
	.byte	'RWCSTS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RRCSTS',0,1
	.word	609
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'RXQSTS',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'PRXQ',0,2
	.word	626
	.byte	14,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,13,155,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43387
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ0_CONTROL_Bits',0,13,216,11,16,4,11
	.byte	'RXQ_WEGT',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'RXQ_FRM_ARBIT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,12,13,147,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43601
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ0',0,13,197,32,25,16,13
	.byte	'OPERATION_MODE',0
	.word	43119
	.byte	4,2,35,0,13
	.byte	'MISSED_PACKET_OVERFLOW_CNT',0
	.word	43347
	.byte	4,2,35,4,13
	.byte	'DEBUG',0
	.word	43561
	.byte	4,2,35,8,13
	.byte	'CONTROL',0
	.word	43707
	.byte	4,2,35,12,0,14
	.word	43747
	.byte	10
	.byte	'_Ifx_GETH_MTL_TXQ_OPERATION_MODE_Bits',0,13,174,13,16,4,11
	.byte	'FTQ',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TSF',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TXQEN',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'TTC',0,1
	.word	609
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	626
	.byte	9,0,2,35,0,11
	.byte	'TQS',0,1
	.word	609
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	12,0,2,35,2,0,12,13,171,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43870
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_UNDERFLOW_Bits',0,13,200,13,16,4,11
	.byte	'UFFRMCNT',0,2
	.word	626
	.byte	11,5,2,35,0,11
	.byte	'UFCNTOVF',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,12,13,195,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44077
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_DEBUG_Bits',0,13,128,13,16,4,11
	.byte	'TXQPAUSED',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TRCSTS',0,1
	.word	609
	.byte	2,5,2,35,0,11
	.byte	'TWCSTS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TXQSTS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TXSTSFSTS',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'PTXQ',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'STXSTSF',0,1
	.word	609
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	626
	.byte	9,0,2,35,2,0,12,13,131,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44220
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_ETS_CONTROL_Bits',0,13,143,13,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'AVALG',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CC',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'SLC',0,1
	.word	609
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	434
	.byte	25,0,2,35,0,0,12,13,139,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44495
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_ETS_STATUS_Bits',0,13,153,13,16,4,11
	.byte	'ABS',0,4
	.word	434
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	8,0,2,35,3,0,12,13,147,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44667
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_QUANTUM_WEIGHT_Bits',0,13,186,13,16,4,11
	.byte	'ISCQW',0,4
	.word	434
	.byte	21,11,2,35,0,11
	.byte	'reserved_21',0,2
	.word	626
	.byte	11,0,2,35,2,0,12,13,179,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44786
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_SENDSLOPECREDIT_Bits',0,13,193,13,16,4,11
	.byte	'SSC',0,2
	.word	626
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,4
	.word	434
	.byte	18,0,2,35,0,0,12,13,187,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44911
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_HICREDIT_Bits',0,13,160,13,16,4,11
	.byte	'HC',0,4
	.word	434
	.byte	29,3,2,35,0,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	3,0,2,35,3,0,12,13,155,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45035
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ_LOCREDIT_Bits',0,13,167,13,16,4,11
	.byte	'LC',0,4
	.word	434
	.byte	29,3,2,35,0,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	3,0,2,35,3,0,12,13,163,26,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45151
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_TXQ',0,13,218,32,25,40,13
	.byte	'OPERATION_MODE',0
	.word	44037
	.byte	4,2,35,0,13
	.byte	'UNDERFLOW',0
	.word	44180
	.byte	4,2,35,4,13
	.byte	'DEBUG',0
	.word	44455
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2630
	.byte	4,2,35,12,13
	.byte	'ETS_CONTROL',0
	.word	44627
	.byte	4,2,35,16,13
	.byte	'ETS_STATUS',0
	.word	44746
	.byte	4,2,35,20,13
	.byte	'QUANTUM_WEIGHT',0
	.word	44871
	.byte	4,2,35,24,13
	.byte	'SENDSLOPECREDIT',0
	.word	44995
	.byte	4,2,35,28,13
	.byte	'HICREDIT',0
	.word	45111
	.byte	4,2,35,32,13
	.byte	'LOCREDIT',0
	.word	45227
	.byte	4,2,35,36,0,14
	.word	45267
	.byte	10
	.byte	'_Ifx_GETH_MTL_Q_INTERRUPT_CONTROL_STATUS_Bits',0,13,201,11,16,4,11
	.byte	'TXUNFIS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ABPSIS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'TXUIE',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'ABPSIE',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	6,0,2,35,1,11
	.byte	'RXOVFIS',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	7,0,2,35,2,11
	.byte	'RXOIE',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	609
	.byte	7,0,2,35,3,0,12,13,139,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45501
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_Q',0,13,245,32,25,4,13
	.byte	'INTERRUPT_CONTROL_STATUS',0
	.word	45753
	.byte	4,2,35,0,0,14
	.word	45793
	.byte	10
	.byte	'_Ifx_GETH_MTL_RXQ_OPERATION_MODE_Bits',0,13,189,12,16,4,11
	.byte	'RTC',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'FUP',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'FEP',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'RSF',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'DIS_TCP_EF',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EHFC',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'RFA',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'RFD',0,4
	.word	434
	.byte	4,14,2,35,0,11
	.byte	'reserved_18',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'RQS',0,2
	.word	626
	.byte	5,7,2,35,2,11
	.byte	'reserved_25',0,1
	.word	609
	.byte	7,0,2,35,3,0,12,13,211,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45855
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ_MISSED_PACKET_OVERFLOW_CNT_Bits',0,13,178,12,16,4,11
	.byte	'OVFPKTCNT',0,2
	.word	626
	.byte	11,5,2,35,0,11
	.byte	'OVFCNTOVF',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'MISPKTCNT',0,2
	.word	626
	.byte	11,5,2,35,2,11
	.byte	'MISCNTOVF',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,13,203,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46174
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ_DEBUG_Bits',0,13,145,12,16,4,11
	.byte	'RWCSTS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RRCSTS',0,1
	.word	609
	.byte	2,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'RXQSTS',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'PRXQ',0,2
	.word	626
	.byte	14,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,13,187,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46401
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ_CONTROL_Bits',0,13,137,12,16,4,11
	.byte	'RXQ_WEGT',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'RXQ_FRM_ARBIT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,12,13,179,25,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46614
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_MTL_RXQ',0,13,135,33,25,16,13
	.byte	'OPERATION_MODE',0
	.word	46134
	.byte	4,2,35,0,13
	.byte	'MISSED_PACKET_OVERFLOW_CNT',0
	.word	46361
	.byte	4,2,35,4,13
	.byte	'DEBUG',0
	.word	46574
	.byte	4,2,35,8,13
	.byte	'CONTROL',0
	.word	46719
	.byte	4,2,35,12,0,14
	.word	46759
	.byte	14
	.word	45267
	.byte	14
	.word	45793
	.byte	14
	.word	46759
	.byte	14
	.word	45267
	.byte	14
	.word	45793
	.byte	14
	.word	46759
	.byte	15,128,4
	.word	609
	.byte	16,255,3,0,10
	.byte	'_Ifx_GETH_DMA_MODE_Bits',0,13,255,2,16,4,11
	.byte	'SWR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DA',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TAA',0,1
	.word	609
	.byte	3,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	626
	.byte	4,7,2,35,0,11
	.byte	'ARBC',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'TXPR',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'PR',0,1
	.word	609
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'INTM',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	626
	.byte	14,0,2,35,2,0,12,13,139,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46922
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_SYSBUS_MODE_Bits',0,13,143,3,16,4,11
	.byte	'FB',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	7,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'AAL',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'MB',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'RB',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	3,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,13,147,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47190
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_INTERRUPT_STATUS_Bits',0,13,241,2,16,4,11
	.byte	'DC0IS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DC1IS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'DC2IS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DC3IS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MTLIS',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'MACIS',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	626
	.byte	14,0,2,35,2,0,12,13,131,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47530
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_DEBUG_STATUS0_Bits',0,13,219,2,16,4,11
	.byte	'AXWHSTS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'RPS0',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'TPS0',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'RPS1',0,1
	.word	609
	.byte	4,4,2,35,2,11
	.byte	'TPS1',0,1
	.word	609
	.byte	4,0,2,35,2,11
	.byte	'RPS2',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'TPS2',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,13,243,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47782
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_DEBUG_STATUS1_Bits',0,13,233,2,16,4,11
	.byte	'RPS3',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'TPS3',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,12,13,251,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48021
	.byte	4,2,35,0,0,15,236,1
	.word	609
	.byte	16,235,1,0,10
	.byte	'_Ifx_GETH_DMA_CH_CONTROL_Bits',0,13,167,1,16,4,11
	.byte	'reserved_0',0,2
	.word	626
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'PBLX8',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'DSL',0,1
	.word	609
	.byte	3,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	3,0,2,35,2,11
	.byte	'SPH',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	609
	.byte	7,0,2,35,3,0,12,13,227,18,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48166
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_TX_CONTROL_Bits',0,13,203,2,16,4,11
	.byte	'ST',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TCW',0,1
	.word	609
	.byte	3,4,2,35,0,11
	.byte	'OSF',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	626
	.byte	7,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	2,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'TXPBL',0,1
	.word	609
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,13,235,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48404
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_RX_CONTROL_Bits',0,13,254,1,16,4,11
	.byte	'SR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RBSZ_X_0',0,1
	.word	609
	.byte	2,5,2,35,0,11
	.byte	'RBSZ_13_Y',0,2
	.word	626
	.byte	12,1,2,35,0,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'RXPBL',0,1
	.word	609
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	3,1,2,35,3,11
	.byte	'RPF',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,179,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48705
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_TXDESC_LIST_ADDRESS_Bits',0,13,182,2,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'TDESLA',0,4
	.word	434
	.byte	30,0,2,35,0,0,12,13,211,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48964
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_RXDESC_LIST_ADDRESS_Bits',0,13,233,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'RDESLA',0,4
	.word	434
	.byte	30,0,2,35,0,0,12,13,155,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49093
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_TXDESC_TAIL_POINTER_Bits',0,13,196,2,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'TDTP',0,4
	.word	434
	.byte	30,0,2,35,0,0,12,13,227,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49222
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_RXDESC_TAIL_POINTER_Bits',0,13,247,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'RDTP',0,4
	.word	434
	.byte	30,0,2,35,0,0,12,13,171,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49349
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_TXDESC_RING_LENGTH_Bits',0,13,189,2,16,4,11
	.byte	'TDRL',0,2
	.word	626
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,4
	.word	434
	.byte	22,0,2,35,0,0,12,13,219,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49476
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_RXDESC_RING_LENGTH_Bits',0,13,240,1,16,4,11
	.byte	'RDRL',0,2
	.word	626
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,4
	.word	434
	.byte	22,0,2,35,0,0,12,13,163,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49603
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_INTERRUPT_ENABLE_Bits',0,13,204,1,16,4,11
	.byte	'TIE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TXSE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TBUE',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	3,2,2,35,0,11
	.byte	'RIE',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'RBUE',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'RSE',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'RWTE',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'ETIE',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'ERIE',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'FBEE',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'CDEE',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'AIE',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'NIE',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,139,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49730
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_RX_INTERRUPT_WATCHDOG_TIMER_Bits',0,13,140,2,16,4,11
	.byte	'RWT',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'RWTU',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	626
	.byte	14,0,2,35,2,0,12,13,187,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50064
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_SLOT_FUNCTION_CONTROL_STATUS_Bits',0,13,149,2,16,4,11
	.byte	'ESC',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ASC',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'SIV',0,2
	.word	626
	.byte	12,0,2,35,0,11
	.byte	'RSN',0,1
	.word	609
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	12,0,2,35,2,0,12,13,195,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50237
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_CURRENT_APP_TXDESC_Bits',0,13,198,1,16,4,11
	.byte	'CURTDESAPTR',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,131,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50440
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_CURRENT_APP_RXDESC_Bits',0,13,186,1,16,4,11
	.byte	'CURRDESAPTR',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,243,18,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50551
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_CURRENT_APP_TXBUFFER_Bits',0,13,192,1,16,4,11
	.byte	'CURTBUFAPTR',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,251,18,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50662
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_CURRENT_APP_RXBUFFER_Bits',0,13,180,1,16,4,11
	.byte	'CURRBUFAPTR',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,235,18,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50775
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_STATUS_Bits',0,13,160,2,16,4,11
	.byte	'TI',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TPS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TBU',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	3,2,2,35,0,11
	.byte	'RI',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'RBU',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'RPS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'RWT',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'ETI',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'ERI',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'FBE',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'CDE',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'AIS',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'NIS',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'TEB',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'REB',0,1
	.word	609
	.byte	3,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	626
	.byte	10,0,2,35,2,0,12,13,203,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50888
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH_MISS_FRAME_CNT_Bits',0,13,224,1,16,4,11
	.byte	'MFC',0,2
	.word	626
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	609
	.byte	4,1,2,35,1,11
	.byte	'MFCO',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,147,19,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51232
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_DMA_CH',0,13,156,33,25,128,1,13
	.byte	'CONTROL',0
	.word	48364
	.byte	4,2,35,0,13
	.byte	'TX_CONTROL',0
	.word	48665
	.byte	4,2,35,4,13
	.byte	'RX_CONTROL',0
	.word	48924
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	4450
	.byte	8,2,35,12,13
	.byte	'TXDESC_LIST_ADDRESS',0
	.word	49053
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	2630
	.byte	4,2,35,24,13
	.byte	'RXDESC_LIST_ADDRESS',0
	.word	49182
	.byte	4,2,35,28,13
	.byte	'TXDESC_TAIL_POINTER',0
	.word	49309
	.byte	4,2,35,32,13
	.byte	'reserved_24',0
	.word	2630
	.byte	4,2,35,36,13
	.byte	'RXDESC_TAIL_POINTER',0
	.word	49436
	.byte	4,2,35,40,13
	.byte	'TXDESC_RING_LENGTH',0
	.word	49563
	.byte	4,2,35,44,13
	.byte	'RXDESC_RING_LENGTH',0
	.word	49690
	.byte	4,2,35,48,13
	.byte	'INTERRUPT_ENABLE',0
	.word	50024
	.byte	4,2,35,52,13
	.byte	'RX_INTERRUPT_WATCHDOG_TIMER',0
	.word	50197
	.byte	4,2,35,56,13
	.byte	'SLOT_FUNCTION_CONTROL_STATUS',0
	.word	50400
	.byte	4,2,35,60,13
	.byte	'reserved_40',0
	.word	2630
	.byte	4,2,35,64,13
	.byte	'CURRENT_APP_TXDESC',0
	.word	50511
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	2630
	.byte	4,2,35,72,13
	.byte	'CURRENT_APP_RXDESC',0
	.word	50622
	.byte	4,2,35,76,13
	.byte	'reserved_50',0
	.word	2630
	.byte	4,2,35,80,13
	.byte	'CURRENT_APP_TXBUFFER',0
	.word	50735
	.byte	4,2,35,84,13
	.byte	'reserved_58',0
	.word	2630
	.byte	4,2,35,88,13
	.byte	'CURRENT_APP_RXBUFFER',0
	.word	50848
	.byte	4,2,35,92,13
	.byte	'STATUS',0
	.word	51192
	.byte	4,2,35,96,13
	.byte	'MISS_FRAME_CNT',0
	.word	51353
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3821
	.byte	24,2,35,104,0,15,128,4
	.word	51393
	.byte	16,3,0,14
	.word	52071
	.byte	15,128,26
	.word	609
	.byte	16,255,25,0,10
	.byte	'_Ifx_GETH_CLC_Bits',0,13,159,1,16,4,11
	.byte	'DISR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,12,13,219,18,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52097
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ID_Bits',0,13,180,3,16,4,11
	.byte	'MODREV',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,163,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52217
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_GPCTL_Bits',0,13,161,3,16,4,11
	.byte	'ALTI0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'ALTI1',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'ALTI2',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'ALTI3',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'ALTI4',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'ALTI5',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'ALTI6',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'ALTI7',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'ALTI8',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'ALTI9',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'ALTI10',0,1
	.word	609
	.byte	2,2,2,35,2,11
	.byte	'EPR',0,2
	.word	626
	.byte	3,7,2,35,2,11
	.byte	'reserved_25',0,1
	.word	609
	.byte	6,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,155,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52337
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ACCEN0_Bits',0,13,73,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,187,18,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52654
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ACCEN1_Bits',0,13,110,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,195,18,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53224
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_KRST0_Bits',0,13,188,3,16,4,11
	.byte	'RST',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,12,13,171,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53314
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_KRST1_Bits',0,13,196,3,16,4,11
	.byte	'RST',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	434
	.byte	31,0,2,35,0,0,12,13,179,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53438
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_KRSTCLR_Bits',0,13,203,3,16,4,11
	.byte	'CLR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	434
	.byte	31,0,2,35,0,0,12,13,187,20,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53543
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ACCEND_ACCEN0D_Bits',0,13,116,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,203,18,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53650
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ACCEND_ACCEN1D_Bits',0,13,153,1,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,211,18,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54228
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_GETH_ACCEND',0,13,199,33,25,8,13
	.byte	'ACCEN0D',0
	.word	54188
	.byte	4,2,35,0,13
	.byte	'ACCEN1D',0
	.word	54287
	.byte	4,2,35,4,0,15,32
	.word	54327
	.byte	16,3,0,14
	.word	54385
	.byte	10
	.byte	'_Ifx_GETH_SKEWCTL_Bits',0,13,235,16,16,4,11
	.byte	'TXCFG',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'RXCFG',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,12,13,171,30,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54399
	.byte	4,2,35,0,0,15,188,1
	.word	609
	.byte	16,187,1,0,10
	.byte	'_Ifx_GETH',0,13,218,33,25,128,66,13
	.byte	'MAC_CONFIGURATION',0
	.word	10787
	.byte	4,2,35,0,13
	.byte	'MAC_EXT_CONFIGURATION',0
	.word	11093
	.byte	4,2,35,4,13
	.byte	'MAC_PACKET_FILTER',0
	.word	11445
	.byte	4,2,35,8,13
	.byte	'MAC_WATCHDOG_TIMEOUT',0
	.word	11602
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	11642
	.byte	64,2,35,16,13
	.byte	'MAC_VLAN_TAG_CTRL',0
	.word	11978
	.byte	4,2,35,80,20
	.word	12544
	.byte	4,2,35,84,13
	.byte	'MAC_VLAN_HASH_TABLE',0
	.word	12688
	.byte	4,2,35,88,13
	.byte	'reserved_5C',0
	.word	2630
	.byte	4,2,35,92,20
	.word	13146
	.byte	4,2,35,96,13
	.byte	'MAC_INNER_VLAN_INCL',0
	.word	13343
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4450
	.byte	8,2,35,104,13
	.byte	'MAC_Q0_TX_FLOW_CTRL',0
	.word	13548
	.byte	4,2,35,112,13
	.byte	'reserved_74',0
	.word	13588
	.byte	28,2,35,116,13
	.byte	'MAC_RX_FLOW_CTRL',0
	.word	13731
	.byte	4,3,35,144,1,13
	.byte	'MAC_RXQ_CTRL4',0
	.word	13974
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4450
	.byte	8,3,35,152,1,13
	.byte	'MAC_RXQ_CTRL0',0
	.word	14167
	.byte	4,3,35,160,1,13
	.byte	'MAC_RXQ_CTRL1',0
	.word	14519
	.byte	4,3,35,164,1,13
	.byte	'MAC_RXQ_CTRL2',0
	.word	14663
	.byte	4,3,35,168,1,13
	.byte	'reserved_AC',0
	.word	2630
	.byte	4,3,35,172,1,13
	.byte	'MAC_INTERRUPT_STATUS',0
	.word	15055
	.byte	4,3,35,176,1,13
	.byte	'MAC_INTERRUPT_ENABLE',0
	.word	15371
	.byte	4,3,35,180,1,13
	.byte	'MAC_RX_TX_STATUS',0
	.word	15608
	.byte	4,3,35,184,1,13
	.byte	'reserved_BC',0
	.word	2630
	.byte	4,3,35,188,1,13
	.byte	'MAC_PMT_CONTROL_STATUS',0
	.word	15960
	.byte	4,3,35,192,1,20
	.word	16809
	.byte	4,3,35,196,1,13
	.byte	'reserved_C8',0
	.word	4450
	.byte	8,3,35,200,1,13
	.byte	'MAC_LPI_CONTROL_STATUS',0
	.word	17285
	.byte	4,3,35,208,1,13
	.byte	'MAC_LPI_TIMERS_CONTROL',0
	.word	17423
	.byte	4,3,35,212,1,13
	.byte	'MAC_LPI_ENTRY_TIMER',0
	.word	17567
	.byte	4,3,35,216,1,13
	.byte	'MAC_1US_TIC_COUNTER',0
	.word	17696
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	3821
	.byte	24,3,35,224,1,13
	.byte	'MAC_PHYIF_CONTROL_STATUS',0
	.word	18002
	.byte	4,3,35,248,1,13
	.byte	'reserved_FC',0
	.word	18042
	.byte	20,3,35,252,1,13
	.byte	'MAC_VERSION',0
	.word	18146
	.byte	4,3,35,144,2,13
	.byte	'MAC_DEBUG',0
	.word	18337
	.byte	4,3,35,148,2,13
	.byte	'reserved_118',0
	.word	2630
	.byte	4,3,35,152,2,13
	.byte	'MAC_HW_FEATURE0',0
	.word	18897
	.byte	4,3,35,156,2,13
	.byte	'MAC_HW_FEATURE1',0
	.word	19342
	.byte	4,3,35,160,2,13
	.byte	'MAC_HW_FEATURE2',0
	.word	19674
	.byte	4,3,35,164,2,13
	.byte	'MAC_HW_FEATURE3',0
	.word	19848
	.byte	4,3,35,168,2,13
	.byte	'reserved_12C',0
	.word	19888
	.byte	212,1,3,35,172,2,13
	.byte	'MAC_MDIO_ADDRESS',0
	.word	20174
	.byte	4,3,35,128,4,13
	.byte	'MAC_MDIO_DATA',0
	.word	20278
	.byte	4,3,35,132,4,13
	.byte	'reserved_208',0
	.word	20318
	.byte	40,3,35,136,4,13
	.byte	'MAC_CSR_SW_CTRL',0
	.word	20441
	.byte	4,3,35,176,4,13
	.byte	'reserved_234',0
	.word	2630
	.byte	4,3,35,180,4,13
	.byte	'MAC_EXT_CFG1',0
	.word	20596
	.byte	4,3,35,184,4,13
	.byte	'reserved_23C',0
	.word	20636
	.byte	196,1,3,35,188,4,13
	.byte	'MAC_ADDRESS_HIGH0',0
	.word	20757
	.byte	4,3,35,128,6,13
	.byte	'MAC_ADDRESS_LOW0',0
	.word	20854
	.byte	4,3,35,132,6,13
	.byte	'MAC_ADDRESS_HIGH1',0
	.word	21032
	.byte	4,3,35,136,6,13
	.byte	'MAC_ADDRESS_LOW1',0
	.word	21128
	.byte	4,3,35,140,6,13
	.byte	'MAC_ADDRESS_HIGH2',0
	.word	21032
	.byte	4,3,35,144,6,13
	.byte	'MAC_ADDRESS_LOW2',0
	.word	21128
	.byte	4,3,35,148,6,13
	.byte	'MAC_ADDRESS_HIGH3',0
	.word	21032
	.byte	4,3,35,152,6,13
	.byte	'MAC_ADDRESS_LOW3',0
	.word	21128
	.byte	4,3,35,156,6,13
	.byte	'MAC_ADDRESS_HIGH4',0
	.word	21032
	.byte	4,3,35,160,6,13
	.byte	'MAC_ADDRESS_LOW4',0
	.word	21128
	.byte	4,3,35,164,6,13
	.byte	'MAC_ADDRESS_HIGH5',0
	.word	21032
	.byte	4,3,35,168,6,13
	.byte	'MAC_ADDRESS_LOW5',0
	.word	21128
	.byte	4,3,35,172,6,13
	.byte	'MAC_ADDRESS_HIGH6',0
	.word	21032
	.byte	4,3,35,176,6,13
	.byte	'MAC_ADDRESS_LOW6',0
	.word	21128
	.byte	4,3,35,180,6,13
	.byte	'MAC_ADDRESS_HIGH7',0
	.word	21032
	.byte	4,3,35,184,6,13
	.byte	'MAC_ADDRESS_LOW7',0
	.word	21128
	.byte	4,3,35,188,6,13
	.byte	'MAC_ADDRESS_HIGH8',0
	.word	21032
	.byte	4,3,35,192,6,13
	.byte	'MAC_ADDRESS_LOW8',0
	.word	21128
	.byte	4,3,35,196,6,13
	.byte	'MAC_ADDRESS_HIGH9',0
	.word	21032
	.byte	4,3,35,200,6,13
	.byte	'MAC_ADDRESS_LOW9',0
	.word	21128
	.byte	4,3,35,204,6,13
	.byte	'MAC_ADDRESS_HIGH10',0
	.word	21032
	.byte	4,3,35,208,6,13
	.byte	'MAC_ADDRESS_LOW10',0
	.word	21128
	.byte	4,3,35,212,6,13
	.byte	'MAC_ADDRESS_HIGH11',0
	.word	21032
	.byte	4,3,35,216,6,13
	.byte	'MAC_ADDRESS_LOW11',0
	.word	21128
	.byte	4,3,35,220,6,13
	.byte	'MAC_ADDRESS_HIGH12',0
	.word	21032
	.byte	4,3,35,224,6,13
	.byte	'MAC_ADDRESS_LOW12',0
	.word	21128
	.byte	4,3,35,228,6,13
	.byte	'MAC_ADDRESS_HIGH13',0
	.word	21032
	.byte	4,3,35,232,6,13
	.byte	'MAC_ADDRESS_LOW13',0
	.word	21128
	.byte	4,3,35,236,6,13
	.byte	'MAC_ADDRESS_HIGH14',0
	.word	21032
	.byte	4,3,35,240,6,13
	.byte	'MAC_ADDRESS_LOW14',0
	.word	21128
	.byte	4,3,35,244,6,13
	.byte	'MAC_ADDRESS_HIGH15',0
	.word	21032
	.byte	4,3,35,248,6,13
	.byte	'MAC_ADDRESS_LOW15',0
	.word	21128
	.byte	4,3,35,252,6,13
	.byte	'MAC_ADDRESS_HIGH16',0
	.word	21032
	.byte	4,3,35,128,7,13
	.byte	'MAC_ADDRESS_LOW16',0
	.word	21128
	.byte	4,3,35,132,7,13
	.byte	'MAC_ADDRESS_HIGH17',0
	.word	21032
	.byte	4,3,35,136,7,13
	.byte	'MAC_ADDRESS_LOW17',0
	.word	21128
	.byte	4,3,35,140,7,13
	.byte	'MAC_ADDRESS_HIGH18',0
	.word	21032
	.byte	4,3,35,144,7,13
	.byte	'MAC_ADDRESS_LOW18',0
	.word	21128
	.byte	4,3,35,148,7,13
	.byte	'MAC_ADDRESS_HIGH19',0
	.word	21032
	.byte	4,3,35,152,7,13
	.byte	'MAC_ADDRESS_LOW19',0
	.word	21128
	.byte	4,3,35,156,7,13
	.byte	'MAC_ADDRESS_HIGH20',0
	.word	21032
	.byte	4,3,35,160,7,13
	.byte	'MAC_ADDRESS_LOW20',0
	.word	21128
	.byte	4,3,35,164,7,13
	.byte	'MAC_ADDRESS_HIGH21',0
	.word	21032
	.byte	4,3,35,168,7,13
	.byte	'MAC_ADDRESS_LOW21',0
	.word	21128
	.byte	4,3,35,172,7,13
	.byte	'MAC_ADDRESS_HIGH22',0
	.word	21032
	.byte	4,3,35,176,7,13
	.byte	'MAC_ADDRESS_LOW22',0
	.word	21128
	.byte	4,3,35,180,7,13
	.byte	'MAC_ADDRESS_HIGH23',0
	.word	21032
	.byte	4,3,35,184,7,13
	.byte	'MAC_ADDRESS_LOW23',0
	.word	21128
	.byte	4,3,35,188,7,13
	.byte	'MAC_ADDRESS_HIGH24',0
	.word	21032
	.byte	4,3,35,192,7,13
	.byte	'MAC_ADDRESS_LOW24',0
	.word	21128
	.byte	4,3,35,196,7,13
	.byte	'MAC_ADDRESS_HIGH25',0
	.word	21032
	.byte	4,3,35,200,7,13
	.byte	'MAC_ADDRESS_LOW25',0
	.word	21128
	.byte	4,3,35,204,7,13
	.byte	'MAC_ADDRESS_HIGH26',0
	.word	21032
	.byte	4,3,35,208,7,13
	.byte	'MAC_ADDRESS_LOW26',0
	.word	21128
	.byte	4,3,35,212,7,13
	.byte	'MAC_ADDRESS_HIGH27',0
	.word	21032
	.byte	4,3,35,216,7,13
	.byte	'MAC_ADDRESS_LOW27',0
	.word	21128
	.byte	4,3,35,220,7,13
	.byte	'MAC_ADDRESS_HIGH28',0
	.word	21032
	.byte	4,3,35,224,7,13
	.byte	'MAC_ADDRESS_LOW28',0
	.word	21128
	.byte	4,3,35,228,7,13
	.byte	'MAC_ADDRESS_HIGH29',0
	.word	21032
	.byte	4,3,35,232,7,13
	.byte	'MAC_ADDRESS_LOW29',0
	.word	21128
	.byte	4,3,35,236,7,13
	.byte	'MAC_ADDRESS_HIGH30',0
	.word	21032
	.byte	4,3,35,240,7,13
	.byte	'MAC_ADDRESS_LOW30',0
	.word	21128
	.byte	4,3,35,244,7,13
	.byte	'MAC_ADDRESS_HIGH31',0
	.word	21032
	.byte	4,3,35,248,7,13
	.byte	'MAC_ADDRESS_LOW31',0
	.word	21128
	.byte	4,3,35,252,7,13
	.byte	'reserved_400',0
	.word	21168
	.byte	128,6,3,35,128,8,13
	.byte	'MMC_CONTROL',0
	.word	21393
	.byte	4,3,35,128,14,13
	.byte	'MMC_RX_INTERRUPT',0
	.word	22139
	.byte	4,3,35,132,14,13
	.byte	'MMC_TX_INTERRUPT',0
	.word	22883
	.byte	4,3,35,136,14,13
	.byte	'MMC_RX_INTERRUPT_MASK',0
	.word	23634
	.byte	4,3,35,140,14,13
	.byte	'MMC_TX_INTERRUPT_MASK',0
	.word	24383
	.byte	4,3,35,144,14,13
	.byte	'TX_OCTET_COUNT_GOOD_BAD',0
	.word	24488
	.byte	4,3,35,148,14,13
	.byte	'TX_PACKET_COUNT_GOOD_BAD',0
	.word	24617
	.byte	4,3,35,152,14,13
	.byte	'TX_BROADCAST_PACKETS_GOOD',0
	.word	24748
	.byte	4,3,35,156,14,13
	.byte	'TX_MULTICAST_PACKETS_GOOD',0
	.word	24879
	.byte	4,3,35,160,14,13
	.byte	'TX_64OCTETS_PACKETS_GOOD_BAD',0
	.word	25014
	.byte	4,3,35,164,14,13
	.byte	'TX_65TO127OCTETS_PACKETS_GOOD_BAD',0
	.word	25158
	.byte	4,3,35,168,14,13
	.byte	'TX_128TO255OCTETS_PACKETS_GOOD_BAD',0
	.word	25304
	.byte	4,3,35,172,14,13
	.byte	'TX_256TO511OCTETS_PACKETS_GOOD_BAD',0
	.word	25450
	.byte	4,3,35,176,14,13
	.byte	'TX_512TO1023OCTETS_PACKETS_GOOD_BAD',0
	.word	25598
	.byte	4,3,35,180,14,13
	.byte	'TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD',0
	.word	25746
	.byte	4,3,35,184,14,13
	.byte	'TX_UNICAST_PACKETS_GOOD_BAD',0
	.word	25880
	.byte	4,3,35,188,14,13
	.byte	'TX_MULTICAST_PACKETS_GOOD_BAD',0
	.word	26016
	.byte	4,3,35,192,14,13
	.byte	'TX_BROADCAST_PACKETS_GOOD_BAD',0
	.word	26152
	.byte	4,3,35,196,14,13
	.byte	'TX_UNDERFLOW_ERROR_PACKETS',0
	.word	26285
	.byte	4,3,35,200,14,13
	.byte	'TX_SINGLE_COLLISION_GOOD_PACKETS',0
	.word	26425
	.byte	4,3,35,204,14,13
	.byte	'TX_MULTIPLE_COLLISION_GOOD_PACKETS',0
	.word	26567
	.byte	4,3,35,208,14,13
	.byte	'TX_DEFERRED_PACKETS',0
	.word	26691
	.byte	4,3,35,212,14,13
	.byte	'TX_LATE_COLLISION_PACKETS',0
	.word	26823
	.byte	4,3,35,216,14,13
	.byte	'TX_EXCESSIVE_COLLISION_PACKETS',0
	.word	26959
	.byte	4,3,35,220,14,13
	.byte	'TX_CARRIER_ERROR_PACKETS',0
	.word	27087
	.byte	4,3,35,224,14,13
	.byte	'TX_OCTET_COUNT_GOOD',0
	.word	27187
	.byte	4,3,35,228,14,13
	.byte	'TX_PACKET_COUNT_GOOD',0
	.word	27311
	.byte	4,3,35,232,14,13
	.byte	'TX_EXCESSIVE_DEFERRAL_ERROR',0
	.word	27444
	.byte	4,3,35,236,14,13
	.byte	'TX_PAUSE_PACKETS',0
	.word	27565
	.byte	4,3,35,240,14,13
	.byte	'TX_VLAN_PACKETS_GOOD',0
	.word	27690
	.byte	4,3,35,244,14,13
	.byte	'TX_OSIZE_PACKETS_GOOD',0
	.word	27816
	.byte	4,3,35,248,14,13
	.byte	'reserved_77C',0
	.word	2630
	.byte	4,3,35,252,14,13
	.byte	'RX_PACKETS_COUNT_GOOD_BAD',0
	.word	27946
	.byte	4,3,35,128,15,13
	.byte	'RX_OCTET_COUNT_GOOD_BAD',0
	.word	28051
	.byte	4,3,35,132,15,13
	.byte	'RX_OCTET_COUNT_GOOD',0
	.word	28151
	.byte	4,3,35,136,15,13
	.byte	'RX_BROADCAST_PACKETS_GOOD',0
	.word	28282
	.byte	4,3,35,140,15,13
	.byte	'RX_MULTICAST_PACKETS_GOOD',0
	.word	28413
	.byte	4,3,35,144,15,13
	.byte	'RX_CRC_ERROR_PACKETS',0
	.word	28539
	.byte	4,3,35,148,15,13
	.byte	'RX_ALIGNMENT_ERROR_PACKETS',0
	.word	28672
	.byte	4,3,35,152,15,13
	.byte	'RX_RUNT_ERROR_PACKETS',0
	.word	28800
	.byte	4,3,35,156,15,13
	.byte	'RX_JABBER_ERROR_PACKETS',0
	.word	28929
	.byte	4,3,35,160,15,13
	.byte	'RX_UNDERSIZE_PACKETS_GOOD',0
	.word	29062
	.byte	4,3,35,164,15,13
	.byte	'RX_OVERSIZE_PACKETS_GOOD',0
	.word	29193
	.byte	4,3,35,168,15,13
	.byte	'RX_64OCTETS_PACKETS_GOOD_BAD',0
	.word	29328
	.byte	4,3,35,172,15,13
	.byte	'RX_65TO127OCTETS_PACKETS_GOOD_BAD',0
	.word	29472
	.byte	4,3,35,176,15,13
	.byte	'RX_128TO255OCTETS_PACKETS_GOOD_BAD',0
	.word	29618
	.byte	4,3,35,180,15,13
	.byte	'RX_256TO511OCTETS_PACKETS_GOOD_BAD',0
	.word	29764
	.byte	4,3,35,184,15,13
	.byte	'RX_512TO1023OCTETS_PACKETS_GOOD_BAD',0
	.word	29912
	.byte	4,3,35,188,15,13
	.byte	'RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD',0
	.word	30060
	.byte	4,3,35,192,15,13
	.byte	'RX_UNICAST_PACKETS_GOOD',0
	.word	30189
	.byte	4,3,35,196,15,13
	.byte	'RX_LENGTH_ERROR_PACKETS',0
	.word	30318
	.byte	4,3,35,200,15,13
	.byte	'RX_OUT_OF_RANGE_TYPE_PACKETS',0
	.word	30454
	.byte	4,3,35,204,15,13
	.byte	'RX_PAUSE_PACKETS',0
	.word	30578
	.byte	4,3,35,208,15,13
	.byte	'RX_FIFO_OVERFLOW_PACKETS',0
	.word	30710
	.byte	4,3,35,212,15,13
	.byte	'RX_VLAN_PACKETS_GOOD_BAD',0
	.word	30843
	.byte	4,3,35,216,15,13
	.byte	'RX_WATCHDOG_ERROR_PACKETS',0
	.word	30974
	.byte	4,3,35,220,15,13
	.byte	'RX_RECEIVE_ERROR_PACKETS',0
	.word	31104
	.byte	4,3,35,224,15,13
	.byte	'RX_CONTROL_PACKETS_GOOD',0
	.word	31232
	.byte	4,3,35,228,15,13
	.byte	'reserved_7E8',0
	.word	2630
	.byte	4,3,35,232,15,13
	.byte	'TX_LPI_USEC_CNTR',0
	.word	31354
	.byte	4,3,35,236,15,13
	.byte	'TX_LPI_TRAN_CNTR',0
	.word	31476
	.byte	4,3,35,240,15,13
	.byte	'RX_LPI_USEC_CNTR',0
	.word	31598
	.byte	4,3,35,244,15,13
	.byte	'RX_LPI_TRAN_CNTR',0
	.word	31720
	.byte	4,3,35,248,15,13
	.byte	'reserved_7FC',0
	.word	2630
	.byte	4,3,35,252,15,13
	.byte	'MMC_IPC_RX_INTERRUPT_MASK',0
	.word	32506
	.byte	4,3,35,128,16,13
	.byte	'reserved_804',0
	.word	2630
	.byte	4,3,35,132,16,13
	.byte	'MMC_IPC_RX_INTERRUPT',0
	.word	33287
	.byte	4,3,35,136,16,13
	.byte	'reserved_80C',0
	.word	2630
	.byte	4,3,35,140,16,13
	.byte	'RXIPV4_GOOD_PACKETS',0
	.word	33415
	.byte	4,3,35,144,16,13
	.byte	'RXIPV4_HEADER_ERROR_PACKETS',0
	.word	33555
	.byte	4,3,35,148,16,13
	.byte	'RXIPV4_NO_PAYLOAD_PACKETS',0
	.word	33692
	.byte	4,3,35,152,16,13
	.byte	'RXIPV4_FRAGMENTED_PACKETS',0
	.word	33828
	.byte	4,3,35,156,16,13
	.byte	'RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS',0
	.word	33976
	.byte	4,3,35,160,16,13
	.byte	'RXIPV6_GOOD_PACKETS',0
	.word	34104
	.byte	4,3,35,164,16,13
	.byte	'RXIPV6_HEADER_ERROR_PACKETS',0
	.word	34244
	.byte	4,3,35,168,16,13
	.byte	'RXIPV6_NO_PAYLOAD_PACKETS',0
	.word	34381
	.byte	4,3,35,172,16,13
	.byte	'RXUDP_GOOD_PACKETS',0
	.word	34507
	.byte	4,3,35,176,16,13
	.byte	'RXUDP_ERROR_PACKETS',0
	.word	34635
	.byte	4,3,35,180,16,13
	.byte	'RXTCP_GOOD_PACKETS',0
	.word	34761
	.byte	4,3,35,184,16,13
	.byte	'RXTCP_ERROR_PACKETS',0
	.word	34889
	.byte	4,3,35,188,16,13
	.byte	'RXICMP_GOOD_PACKETS',0
	.word	35017
	.byte	4,3,35,192,16,13
	.byte	'RXICMP_ERROR_PACKETS',0
	.word	35147
	.byte	4,3,35,196,16,13
	.byte	'reserved_848',0
	.word	4450
	.byte	8,3,35,200,16,13
	.byte	'RXIPV4_GOOD_OCTETS',0
	.word	35251
	.byte	4,3,35,208,16,13
	.byte	'RXIPV4_HEADER_ERROR_OCTETS',0
	.word	35367
	.byte	4,3,35,212,16,13
	.byte	'RXIPV4_NO_PAYLOAD_OCTETS',0
	.word	35480
	.byte	4,3,35,216,16,13
	.byte	'RXIPV4_FRAGMENTED_OCTETS',0
	.word	35592
	.byte	4,3,35,220,16,13
	.byte	'RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS',0
	.word	35715
	.byte	4,3,35,224,16,13
	.byte	'RXIPV6_GOOD_OCTETS',0
	.word	35819
	.byte	4,3,35,228,16,13
	.byte	'RXIPV6_HEADER_ERROR_OCTETS',0
	.word	35935
	.byte	4,3,35,232,16,13
	.byte	'RXIPV6_NO_PAYLOAD_OCTETS',0
	.word	36048
	.byte	4,3,35,236,16,13
	.byte	'RXUDP_GOOD_OCTETS',0
	.word	36150
	.byte	4,3,35,240,16,13
	.byte	'RXUDP_ERROR_OCTETS',0
	.word	36254
	.byte	4,3,35,244,16,13
	.byte	'RXTCP_GOOD_OCTETS',0
	.word	36356
	.byte	4,3,35,248,16,13
	.byte	'RXTCP_ERROR_OCTETS',0
	.word	36460
	.byte	4,3,35,252,16,13
	.byte	'RXICMP_GOOD_OCTETS',0
	.word	36564
	.byte	4,3,35,128,17,13
	.byte	'RXICMP_ERROR_OCTETS',0
	.word	36670
	.byte	4,3,35,132,17,13
	.byte	'reserved_888',0
	.word	36710
	.byte	248,4,3,35,136,17,13
	.byte	'MAC_TIMESTAMP_CONTROL',0
	.word	37261
	.byte	4,3,35,128,22,13
	.byte	'MAC_SUB_SECOND_INCREMENT',0
	.word	37428
	.byte	4,3,35,132,22,13
	.byte	'MAC_SYSTEM_TIME_SECONDS',0
	.word	37529
	.byte	4,3,35,136,22,13
	.byte	'MAC_SYSTEM_TIME_NANOSECONDS',0
	.word	37658
	.byte	4,3,35,140,22,13
	.byte	'MAC_SYSTEM_TIME_SECONDS_UPDATE',0
	.word	37766
	.byte	4,3,35,144,22,13
	.byte	'MAC_SYSTEM_TIME_NANOSECONDS_UPDATE',0
	.word	37897
	.byte	4,3,35,148,22,13
	.byte	'MAC_TIMESTAMP_ADDEND',0
	.word	37996
	.byte	4,3,35,152,22,13
	.byte	'MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS',0
	.word	38134
	.byte	4,3,35,156,22,13
	.byte	'MAC_TIMESTAMP_STATUS',0
	.word	38559
	.byte	4,3,35,160,22,13
	.byte	'reserved_B24',0
	.word	4790
	.byte	12,3,35,164,22,13
	.byte	'MAC_TX_TIMESTAMP_STATUS_NANOSECONDS',0
	.word	38696
	.byte	4,3,35,176,22,13
	.byte	'MAC_TX_TIMESTAMP_STATUS_SECONDS',0
	.word	38809
	.byte	4,3,35,180,22,13
	.byte	'reserved_B38',0
	.word	3821
	.byte	24,3,35,184,22,13
	.byte	'MAC_TIMESTAMP_INGRESS_ASYM_CORR',0
	.word	38921
	.byte	4,3,35,208,22,13
	.byte	'MAC_TIMESTAMP_EGRESS_ASYM_CORR',0
	.word	39032
	.byte	4,3,35,212,22,13
	.byte	'MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND',0
	.word	39148
	.byte	4,3,35,216,22,13
	.byte	'MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND',0
	.word	39263
	.byte	4,3,35,220,22,13
	.byte	'MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC',0
	.word	39427
	.byte	4,3,35,224,22,13
	.byte	'MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC',0
	.word	39590
	.byte	4,3,35,228,22,13
	.byte	'reserved_B68',0
	.word	4450
	.byte	8,3,35,232,22,13
	.byte	'MAC_PPS_CONTROL',0
	.word	40032
	.byte	4,3,35,240,22,13
	.byte	'reserved_B74',0
	.word	4790
	.byte	12,3,35,244,22,13
	.byte	'MAC_PPS0_TARGET_TIME_SECONDS',0
	.word	40141
	.byte	4,3,35,128,23,13
	.byte	'MAC_PPS0_TARGET_TIME_NANOSECONDS',0
	.word	40274
	.byte	4,3,35,132,23,13
	.byte	'MAC_PPS0_INTERVAL',0
	.word	40373
	.byte	4,3,35,136,23,13
	.byte	'MAC_PPS0_WIDTH',0
	.word	40471
	.byte	4,3,35,140,23,13
	.byte	'reserved_B90',0
	.word	40511
	.byte	112,3,35,144,23,13
	.byte	'MTL_OPERATION_MODE',0
	.word	40738
	.byte	4,3,35,128,24,13
	.byte	'reserved_C04',0
	.word	13588
	.byte	28,3,35,132,24,13
	.byte	'MTL_INTERRUPT_STATUS',0
	.word	40975
	.byte	4,3,35,160,24,13
	.byte	'reserved_C24',0
	.word	4790
	.byte	12,3,35,164,24,13
	.byte	'MTL_RXQ_DMA_MAP0',0
	.word	41396
	.byte	4,3,35,176,24,13
	.byte	'reserved_C34',0
	.word	41436
	.byte	204,1,3,35,180,24,13
	.byte	'MTL_TXQ0',0
	.word	42469
	.byte	28,3,35,128,26,13
	.byte	'reserved_D1C',0
	.word	42474
	.byte	16,3,35,156,26,13
	.byte	'MTL_Q0',0
	.word	42834
	.byte	4,3,35,172,26,13
	.byte	'MTL_RXQ0',0
	.word	43865
	.byte	16,3,35,176,26,13
	.byte	'MTL_TXQ1',0
	.word	45496
	.byte	40,3,35,192,26,13
	.byte	'reserved_D68',0
	.word	2630
	.byte	4,3,35,232,26,13
	.byte	'MTL_Q1',0
	.word	45850
	.byte	4,3,35,236,26,13
	.byte	'MTL_RXQ1',0
	.word	46876
	.byte	16,3,35,240,26,13
	.byte	'MTL_TXQ2',0
	.word	46881
	.byte	40,3,35,128,27,13
	.byte	'reserved_DA8',0
	.word	2630
	.byte	4,3,35,168,27,13
	.byte	'MTL_Q2',0
	.word	46886
	.byte	4,3,35,172,27,13
	.byte	'MTL_RXQ2',0
	.word	46891
	.byte	16,3,35,176,27,13
	.byte	'MTL_TXQ3',0
	.word	46896
	.byte	40,3,35,192,27,13
	.byte	'reserved_DE8',0
	.word	2630
	.byte	4,3,35,232,27,13
	.byte	'MTL_Q3',0
	.word	46901
	.byte	4,3,35,236,27,13
	.byte	'MTL_RXQ3',0
	.word	46906
	.byte	16,3,35,240,27,13
	.byte	'reserved_E00',0
	.word	46911
	.byte	128,4,3,35,128,28,13
	.byte	'DMA_MODE',0
	.word	47150
	.byte	4,3,35,128,32,13
	.byte	'DMA_SYSBUS_MODE',0
	.word	47490
	.byte	4,3,35,132,32,13
	.byte	'DMA_INTERRUPT_STATUS',0
	.word	47742
	.byte	4,3,35,136,32,13
	.byte	'DMA_DEBUG_STATUS0',0
	.word	47981
	.byte	4,3,35,140,32,13
	.byte	'DMA_DEBUG_STATUS1',0
	.word	48115
	.byte	4,3,35,144,32,13
	.byte	'reserved_1014',0
	.word	48155
	.byte	236,1,3,35,148,32,13
	.byte	'DMA_CH',0
	.word	52081
	.byte	128,4,3,35,128,34,13
	.byte	'reserved_1300',0
	.word	52086
	.byte	128,26,3,35,128,38,13
	.byte	'CLC',0
	.word	52177
	.byte	4,3,35,128,64,13
	.byte	'ID',0
	.word	52297
	.byte	4,3,35,132,64,13
	.byte	'GPCTL',0
	.word	52614
	.byte	4,3,35,136,64,13
	.byte	'ACCEN0',0
	.word	53184
	.byte	4,3,35,140,64,13
	.byte	'ACCEN1',0
	.word	53274
	.byte	4,3,35,144,64,13
	.byte	'KRST0',0
	.word	53398
	.byte	4,3,35,148,64,13
	.byte	'KRST1',0
	.word	53503
	.byte	4,3,35,152,64,13
	.byte	'KRSTCLR',0
	.word	53610
	.byte	4,3,35,156,64,13
	.byte	'ACCEND',0
	.word	54394
	.byte	32,3,35,160,64,13
	.byte	'SKEWCTL',0
	.word	54508
	.byte	4,3,35,192,64,13
	.byte	'reserved_2044',0
	.word	54548
	.byte	188,1,3,35,196,64,0,14
	.word	54559
	.byte	3
	.word	62830
	.byte	17,12,163,2,9,1,18
	.byte	'IfxGeth_DuplexMode_halfDuplex',0,0,18
	.byte	'IfxGeth_DuplexMode_fullDuplex',0,1,0
.L153:
	.byte	4
	.byte	'IfxGeth_mac_setDuplexMode',0,3,12,215,11,17,1,1
.L155:
	.byte	5
	.byte	'gethSFR',0,12,215,11,53
	.word	62835
.L157:
	.byte	5
	.byte	'mode',0,12,215,11,81
	.word	62840
.L159:
	.byte	6,0,21,12,217,2,9,4,11
	.byte	'BUF1AP',0,4
	.word	9730
	.byte	32,0,2,35,0,0,21,12,224,2,9,4,11
	.byte	'OVT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'IVT',0,2
	.word	626
	.byte	16,0,2,35,2,0,21,12,186,2,9,4,11
	.byte	'RTSL',0,4
	.word	9730
	.byte	32,0,2,35,0,0,12,12,194,4,9,4,13
	.byte	'R',0
	.word	62978
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	63003
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	63040
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	9730
	.byte	4,2,35,0,0,21,12,232,2,9,4,11
	.byte	'reserved_0',0,4
	.word	9730
	.byte	32,0,2,35,0,0,21,12,239,2,9,4,11
	.byte	'PT',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'IPHE',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'IP4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IP6',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'IPCB',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'IPCE',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'PMT',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'PFT',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'PV',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'TSA',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'TD',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'OPC',0,2
	.word	626
	.byte	16,0,2,35,2,0,21,12,193,2,9,4,11
	.byte	'RTSH',0,4
	.word	9730
	.byte	32,0,2,35,0,0,12,12,204,4,9,4,13
	.byte	'R',0
	.word	63114
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	63143
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	63330
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	9730
	.byte	4,2,35,0,0,21,12,129,3,9,4,11
	.byte	'BUF2AP',0,4
	.word	9730
	.byte	32,0,2,35,0,0,21,12,136,3,9,4,11
	.byte	'HL',0,2
	.word	626
	.byte	10,6,2,35,0,11
	.byte	'ARPNR',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	609
	.byte	3,2,2,35,1,11
	.byte	'ITS',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'OTS',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'SAF',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'DAF',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'HF',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'MADRM',0,2
	.word	626
	.byte	8,5,2,35,2,11
	.byte	'L3FM',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'L4FM',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'L3L4FM',0,1
	.word	609
	.byte	3,0,2,35,3,0,21,12,200,2,9,4,11
	.byte	'reserved_0',0,4
	.word	9730
	.byte	32,0,2,35,0,0,12,12,214,4,9,4,13
	.byte	'R',0
	.word	63404
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	63429
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	63631
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	9730
	.byte	4,2,35,0,0,21,12,154,3,9,4,11
	.byte	'reserved_0',0,4
	.word	9730
	.byte	24,8,2,35,0,11
	.byte	'BUF1V',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'BUF2V',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	4,2,2,35,3,11
	.byte	'IOC',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	609
	.byte	1,0,2,35,3,0,21,12,166,3,9,4,11
	.byte	'PL',0,2
	.word	626
	.byte	15,1,2,35,0,11
	.byte	'ES',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'LT',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'DE',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'RE',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'OE',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'RWT',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'GP',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'CE',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'RS0V',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'RS1V',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'RS2V',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'LD',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'FD',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'CTXT',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	609
	.byte	1,0,2,35,3,0,21,12,207,2,9,4,11
	.byte	'reserved_0',0,4
	.word	9730
	.byte	29,3,2,35,0,11
	.byte	'DE',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'CTXT',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,12,224,4,9,4,13
	.byte	'R',0
	.word	63711
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	63827
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	64068
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	9730
	.byte	4,2,35,0,0,21,12,150,5,9,16,13
	.byte	'RDES0',0
	.word	63063
	.byte	4,2,35,0,13
	.byte	'RDES1',0
	.word	63353
	.byte	4,2,35,4,13
	.byte	'RDES2',0
	.word	63660
	.byte	4,2,35,8,13
	.byte	'RDES3',0
	.word	64142
	.byte	4,2,35,12,0,14
	.word	64193
	.byte	3
	.word	64260
	.byte	17,12,131,2,9,1,18
	.byte	'IfxGeth_TxDmaChannel_0',0,0,18
	.byte	'IfxGeth_TxDmaChannel_1',0,1,18
	.byte	'IfxGeth_TxDmaChannel_2',0,2,18
	.byte	'IfxGeth_TxDmaChannel_3',0,3,0,21,12,229,3,9,4,11
	.byte	'BUF1AP',0,4
	.word	9730
	.byte	32,0,2,35,0,0,21,12,236,3,9,4,11
	.byte	'TTSL',0,4
	.word	9730
	.byte	32,0,2,35,0,0,21,12,188,3,9,4,11
	.byte	'TTSL',0,4
	.word	9730
	.byte	32,0,2,35,0,0,12,12,234,4,9,4,13
	.byte	'R',0
	.word	64377
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	64402
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	64425
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	9730
	.byte	4,2,35,0,0,21,12,243,3,9,4,11
	.byte	'BUF2AP',0,4
	.word	9730
	.byte	32,0,2,35,0,0,21,12,250,3,9,4,11
	.byte	'TTSH',0,4
	.word	9730
	.byte	32,0,2,35,0,0,21,12,195,3,9,4,11
	.byte	'TTSH',0,4
	.word	9730
	.byte	32,0,2,35,0,0,12,12,244,4,9,4,13
	.byte	'R',0
	.word	64499
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	64524
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	64547
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	9730
	.byte	4,2,35,0,0,21,12,129,4,9,4,11
	.byte	'B1L',0,2
	.word	626
	.byte	14,2,2,35,0,11
	.byte	'VTIR',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'B2L',0,2
	.word	626
	.byte	14,2,2,35,2,11
	.byte	'TTSE_TMWD',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'IOC',0,1
	.word	609
	.byte	1,0,2,35,3,0,21,12,140,4,9,4,11
	.byte	'reserved_0',0,4
	.word	9730
	.byte	32,0,2,35,0,0,21,12,202,3,9,4,11
	.byte	'MSS',0,2
	.word	626
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'IVT',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,12,254,4,9,4,13
	.byte	'R',0
	.word	64621
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	64710
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	64739
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	9730
	.byte	4,2,35,0,0,21,12,147,4,9,4,11
	.byte	'FL_TPL',0,2
	.word	626
	.byte	15,1,2,35,0,11
	.byte	'TPL',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'CIC_TPL',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'TSE',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'SLOTNUM_THL',0,1
	.word	609
	.byte	4,1,2,35,2,11
	.byte	'SAIC',0,2
	.word	626
	.byte	3,6,2,35,2,11
	.byte	'CPC',0,1
	.word	609
	.byte	2,4,2,35,3,11
	.byte	'LD',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'FD',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'CTXT',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	609
	.byte	1,0,2,35,3,0,21,12,164,4,9,4,11
	.byte	'IHE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DB',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'UF',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'ED',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'CC',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'EC',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'LC',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'NC',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'LOC',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'PCE',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'FF',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'JT',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'ES',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'TTSS',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	626
	.byte	10,4,2,35,2,11
	.byte	'LD',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'FD',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'CTXT',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	609
	.byte	1,0,2,35,3,0,21,12,211,3,9,4,11
	.byte	'VT',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'VLTV',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'IVLTV',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'IVTIR',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	609
	.byte	3,1,2,35,2,11
	.byte	'CDE',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'TCMSSV',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'OSTC',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	2,2,2,35,3,11
	.byte	'CTXT',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'OWN',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,12,136,5,9,4,13
	.byte	'R',0
	.word	64850
	.byte	4,2,35,0,13
	.byte	'W',0
	.word	65037
	.byte	4,2,35,0,13
	.byte	'C',0
	.word	65350
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	9730
	.byte	4,2,35,0,0,21,12,160,5,9,16,13
	.byte	'TDES0',0
	.word	64448
	.byte	4,2,35,0,13
	.byte	'TDES1',0
	.word	64570
	.byte	4,2,35,4,13
	.byte	'TDES2',0
	.word	64799
	.byte	4,2,35,8,13
	.byte	'TDES3',0
	.word	65570
	.byte	4,2,35,12,0,15,128,1
	.word	65621
	.byte	16,7,0,14
	.word	65688
	.byte	12,12,181,5,9,128,1,13
	.byte	'descr',0
	.word	65698
	.byte	128,1,2,35,0,0,3
	.word	65703
	.byte	14
	.word	65621
	.byte	3
	.word	65732
	.byte	21,14,192,3,9,20,13
	.byte	'channelId',0
	.word	64270
	.byte	1,2,35,0,13
	.byte	'txDescrList',0
	.word	65727
	.byte	4,2,35,4,13
	.byte	'txDescrPtr',0
	.word	65737
	.byte	4,2,35,8,13
	.byte	'txCount',0
	.word	9730
	.byte	4,2,35,12,13
	.byte	'txBuf1Size',0
	.word	626
	.byte	2,2,35,16,0,15,80
	.word	65742
	.byte	16,3,0,17,12,223,1,9,1,18
	.byte	'IfxGeth_RxDmaChannel_0',0,0,18
	.byte	'IfxGeth_RxDmaChannel_1',0,1,18
	.byte	'IfxGeth_RxDmaChannel_2',0,2,18
	.byte	'IfxGeth_RxDmaChannel_3',0,3,0,15,128,1
	.word	64193
	.byte	16,7,0,14
	.word	65962
	.byte	12,12,174,5,9,128,1,13
	.byte	'descr',0
	.word	65972
	.byte	128,1,2,35,0,0,3
	.word	65977
	.byte	21,14,182,3,9,16,13
	.byte	'channelId',0
	.word	65855
	.byte	1,2,35,0,13
	.byte	'rxDescrList',0
	.word	66001
	.byte	4,2,35,4,13
	.byte	'rxDescrPtr',0
	.word	64265
	.byte	4,2,35,8,13
	.byte	'rxCount',0
	.word	9730
	.byte	4,2,35,12,0,15,64
	.word	66006
	.byte	16,3,0
.L172:
	.byte	21,14,207,3,9,156,1,13
	.byte	'gethSFR',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'numOfTxChannels',0
	.word	9730
	.byte	4,2,35,4,13
	.byte	'numOfRxChannels',0
	.word	9730
	.byte	4,2,35,8,13
	.byte	'txChannel',0
	.word	65846
	.byte	80,2,35,12,13
	.byte	'rxChannel',0
	.word	66090
	.byte	64,2,35,92,0
.L151:
	.byte	3
	.word	66099
	.byte	8
	.byte	'IfxGeth_Eth_getActualRxDescriptor',0,3,14,185,8,38
	.word	64265
	.byte	1,1,5
	.byte	'geth',0,14,185,8,85
	.word	66212
	.byte	5
	.byte	'channelId',0,14,185,8,112
	.word	65855
	.byte	6,0,22
	.word	450
	.byte	23
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,24
	.word	66298
	.byte	0,14
	.word	434
	.byte	3
	.word	434
	.byte	25
	.byte	'__cmpswapw',0
	.word	66340
	.byte	1,1,1,1,26
	.byte	'p',0
	.word	66345
	.byte	26
	.byte	'value',0
	.word	434
	.byte	26
	.byte	'compare',0
	.word	434
	.byte	0,14
	.word	450
	.byte	25
	.byte	'__mfcr',0
	.word	66402
	.byte	1,1,1,1,24
	.word	450
	.byte	0,27
	.byte	'__nop',0,1,1,1,1,27
	.byte	'__disable',0,1,1,1,1,27
	.byte	'__enable',0,1,1,1,1,28
	.byte	'__dotdotdot__',0
	.word	348
	.byte	1,1,1,1,29
	.word	178
	.byte	30
	.word	204
	.byte	6,0,29
	.word	239
	.byte	30
	.word	271
	.byte	6,0,29
	.word	284
	.byte	6,0,29
	.word	353
	.byte	30
	.word	372
	.byte	6,0,29
	.word	388
	.byte	30
	.word	403
	.byte	30
	.word	417
	.byte	6,0,29
	.word	1218
	.byte	30
	.word	1258
	.byte	30
	.word	1276
	.byte	6,0,29
	.word	1296
	.byte	30
	.word	1339
	.byte	6,0,29
	.word	1359
	.byte	30
	.word	1397
	.byte	30
	.word	1415
	.byte	6,0,29
	.word	1435
	.byte	30
	.word	1476
	.byte	6,0,29
	.word	1496
	.byte	30
	.word	1547
	.byte	6,0,29
	.word	1567
	.byte	6,0,29
	.word	9228
	.byte	30
	.word	9256
	.byte	30
	.word	9270
	.byte	30
	.word	9288
	.byte	6,0,29
	.word	9306
	.byte	30
	.word	9329
	.byte	19,31
	.word	9350
	.byte	32
	.word	9388
	.byte	0,6,0,0,29
	.word	9350
	.byte	6,0,29
	.word	9561
	.byte	6,0,29
	.word	9595
	.byte	6,0,29
	.word	9637
	.byte	19,31
	.word	9595
	.byte	32
	.word	9635
	.byte	0,6,0,0,29
	.word	9678
	.byte	30
	.word	9711
	.byte	6,0,29
	.word	9751
	.byte	30
	.word	9792
	.byte	6,0,29
	.word	9811
	.byte	30
	.word	9866
	.byte	6,0,29
	.word	9885
	.byte	30
	.word	9925
	.byte	30
	.word	9942
	.byte	19,6,0,0,29
	.word	10300
	.byte	30
	.word	10328
	.byte	6,0,29
	.word	62911
	.byte	30
	.word	62945
	.byte	30
	.word	62962
	.byte	6,0,17,12,127,9,1,18
	.byte	'IfxGeth_LineSpeed_10Mbps',0,0,18
	.byte	'IfxGeth_LineSpeed_100Mbps',0,1,18
	.byte	'IfxGeth_LineSpeed_1000Mbps',0,2,18
	.byte	'IfxGeth_LineSpeed_2500Mbps',0,3,0,33
	.byte	'IfxGeth_mac_setLineSpeed',0,12,159,6,17,1,1,1,1,5
	.byte	'gethSFR',0,12,159,6,52
	.word	62835
	.byte	5
	.byte	'speed',0,12,159,6,79
	.word	66801
	.byte	0,29
	.word	66217
	.byte	30
	.word	66263
	.byte	30
	.word	66277
	.byte	6,0
.L109:
	.byte	7
	.byte	'char',0,1,6,7
	.byte	'char',0,1,6,22
	.word	67012
.L111:
	.byte	3
	.word	67020
.L113:
	.byte	15,132,2
	.word	67012
	.byte	16,131,2,0
.L117:
	.byte	7
	.byte	'short int',0,2,5
.L125:
	.byte	10
	.byte	'ip4_addr',0,16,51,8,4,13
	.byte	'addr',0
	.word	9730
	.byte	4,2,35,0,0,10
	.byte	'pbuf',0,17,186,1,8,16,13
	.byte	'next',0
	.word	.L192-.L45
	.byte	4,2,35,0,13
	.byte	'payload',0
	.word	348
	.byte	4,2,35,4,13
	.byte	'tot_len',0
	.word	626
	.byte	2,2,35,8,13
	.byte	'len',0
	.word	626
	.byte	2,2,35,10,13
	.byte	'type_internal',0
	.word	609
	.byte	1,2,35,12,13
	.byte	'flags',0
	.word	609
	.byte	1,2,35,13,13
	.byte	'ref',0
	.word	609
	.byte	1,2,35,14,13
	.byte	'if_idx',0
	.word	609
	.byte	1,2,35,15,0
.L192:
	.byte	3
	.word	67083
	.byte	34
	.word	67004
	.byte	1,1,24
	.word	67223
	.byte	24
	.word	.L163-.L45
	.byte	0,3
	.word	67228
	.byte	35
	.byte	'netif_input_fn',0,15,178,1,17
	.word	67246
	.byte	22
	.word	67054
	.byte	3
	.word	67275
	.byte	34
	.word	67004
	.byte	1,1,24
	.word	.L163-.L45
	.byte	24
	.word	67223
	.byte	24
	.word	67280
	.byte	0,3
	.word	67285
	.byte	35
	.byte	'netif_output_fn',0,15,189,1,17
	.word	67308
	.byte	34
	.word	67004
	.byte	1,1,24
	.word	.L163-.L45
	.byte	24
	.word	67223
	.byte	0,3
	.word	67338
	.byte	35
	.byte	'netif_linkoutput_fn',0,15,212,1,17
	.word	67356
	.byte	15,6
	.word	609
	.byte	16,5,0,15,2
	.word	67012
	.byte	16,1,0,10
	.byte	'netif',0,15,132,2,8,48,13
	.byte	'next',0
	.word	.L163-.L45
	.byte	4,2,35,0,13
	.byte	'ip_addr',0
	.word	67054
	.byte	4,2,35,4,13
	.byte	'netmask',0
	.word	67054
	.byte	4,2,35,8,13
	.byte	'gw',0
	.word	67054
	.byte	4,2,35,12,13
	.byte	'input',0
	.word	67251
	.byte	4,2,35,16,13
	.byte	'output',0
	.word	67313
	.byte	4,2,35,20,13
	.byte	'linkoutput',0
	.word	67361
	.byte	4,2,35,24,13
	.byte	'state',0
	.word	348
	.byte	4,2,35,28,13
	.byte	'mtu',0
	.word	626
	.byte	2,2,35,32,13
	.byte	'hwaddr',0
	.word	67390
	.byte	6,2,35,34,13
	.byte	'hwaddr_len',0
	.word	609
	.byte	1,2,35,40,13
	.byte	'flags',0
	.word	609
	.byte	1,2,35,41,13
	.byte	'name',0
	.word	67399
	.byte	2,2,35,42,13
	.byte	'num',0
	.word	609
	.byte	1,2,35,44,13
	.byte	'rs_count',0
	.word	609
	.byte	1,2,35,45,0
.L163:
	.byte	3
	.word	67408
	.byte	22
	.word	67054
	.byte	3
	.word	67661
	.byte	34
	.word	67004
	.byte	1,1,24
	.word	67656
	.byte	0,3
	.word	67671
	.byte	35
	.byte	'netif_init_fn',0,15,168,1,17
	.word	67684
	.byte	36
	.byte	'netif_add',0,15,160,3,15
	.word	67656
	.byte	1,1,1,1,5
	.byte	'netif',0,15,160,3,39
	.word	67656
	.byte	5
	.byte	'ipaddr',0,15,161,3,47
	.word	67666
	.byte	5
	.byte	'netmask',0,15,161,3,73
	.word	67666
	.byte	5
	.byte	'gw',0,15,161,3,100
	.word	67666
	.byte	5
	.byte	'state',0,15,162,3,35
	.word	348
	.byte	5
	.byte	'init',0,15,162,3,56
	.word	67689
	.byte	5
	.byte	'input',0,15,162,3,77
	.word	67251
	.byte	0,3
	.word	67228
	.byte	3
	.word	67285
	.byte	3
	.word	67338
	.byte	3
	.word	67671
	.byte	33
	.byte	'netif_set_default',0,15,176,3,6,1,1,1,1,5
	.byte	'netif',0,15,176,3,38
	.word	67656
	.byte	0,33
	.byte	'netif_set_up',0,15,200,3,6,1,1,1,1,5
	.byte	'netif',0,15,200,3,33
	.word	67656
	.byte	0,33
	.byte	'netif_set_link_up',0,15,214,3,6,1,1,1,1,5
	.byte	'netif',0,15,214,3,38
	.word	67656
	.byte	0,33
	.byte	'netif_set_link_down',0,15,215,3,6,1,1,1,1,5
	.byte	'netif',0,15,215,3,40
	.word	67656
	.byte	0,10
	.byte	'link_changed_s',0,15,213,4,10,1,13
	.byte	'state',0
	.word	609
	.byte	1,2,35,0,0,10
	.byte	'status_changed_s',0,15,219,4,10,1,13
	.byte	'state',0
	.word	609
	.byte	1,2,35,0,0,22
	.word	67054
	.byte	3
	.word	68105
	.byte	10
	.byte	'ipv4_changed_s',0,15,225,4,10,12,13
	.byte	'old_address',0
	.word	68110
	.byte	4,2,35,0,13
	.byte	'old_netmask',0
	.word	68110
	.byte	4,2,35,4,13
	.byte	'old_gw',0
	.word	68110
	.byte	4,2,35,8,0,10
	.byte	'ipv6_set_s',0,15,233,4,10,8,13
	.byte	'addr_index',0
	.word	67004
	.byte	1,2,35,0,13
	.byte	'old_address',0
	.word	68110
	.byte	4,2,35,4,0,10
	.byte	'ipv6_addr_state_changed_s',0,15,241,4,10,8,13
	.byte	'addr_index',0
	.word	67004
	.byte	1,2,35,0,13
	.byte	'old_state',0
	.word	609
	.byte	1,2,35,1,13
	.byte	'address',0
	.word	68110
	.byte	4,2,35,4,0,12,15,210,4,9,12,13
	.byte	'link_changed',0
	.word	68029
	.byte	1,2,35,0,13
	.byte	'status_changed',0
	.word	68066
	.byte	1,2,35,0,13
	.byte	'ipv4_changed',0
	.word	68115
	.byte	12,2,35,0,13
	.byte	'ipv6_set',0
	.word	68195
	.byte	8,2,35,0,13
	.byte	'ipv6_addr_state_changed',0
	.word	68254
	.byte	8,2,35,0,0,22
	.word	68343
	.byte	3
	.word	68469
	.byte	37,1,1,24
	.word	67656
	.byte	24
	.word	626
	.byte	24
	.word	68474
	.byte	0,3
	.word	68479
	.byte	35
	.byte	'netif_ext_callback_fn',0,15,132,5,16
	.word	68498
	.byte	3
	.word	.L174-.L45
.L174:
	.byte	10
	.byte	'netif_ext_callback',0,15,136,5,16,8,13
	.byte	'callback_fn',0
	.word	68503
	.byte	4,2,35,0,13
	.byte	'next',0
	.word	68534
	.byte	4,2,35,4,0,3
	.word	68539
	.byte	33
	.byte	'netif_add_ext_callback',0,15,143,5,6,1,1,1,1,5
	.byte	'callback',0,15,143,5,51
	.word	68600
	.byte	5
	.byte	'fn',0,15,143,5,83
	.word	68503
	.byte	0,3
	.word	68479
	.byte	38
	.byte	'tcp_slowtmr',0,18,67,18,1,1,1,1,38
	.byte	'tcp_fasttmr',0,18,68,18,1,1,1,1,38
	.byte	'lwip_init',0,19,94,6,1,1,1,1,38
	.byte	'etharp_tmr',0,20,77,6,1,1,1,1,36
	.byte	'ethernet_input',0,21,66,7
	.word	67004
	.byte	1,1,1,1,5
	.byte	'p',0,21,66,35
	.word	67223
	.byte	5
	.byte	'netif',0,21,66,52
	.word	67656
	.byte	0
.L122:
	.byte	10
	.byte	'eth_addr',0,22,60,8,6,13
	.byte	'addr',0
	.word	67390
	.byte	6,2,35,0,0,10
	.byte	'_Ifx_CPU_ICR_Bits',0,23,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	457
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	8,0,2,35,0,0
.L140:
	.byte	12,23,204,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68831
	.byte	4,2,35,0,0,36
	.byte	'ifx_netif_init',0,24,48,7
	.word	67004
	.byte	1,1,1,1,5
	.byte	'netif',0,24,48,36
	.word	67656
	.byte	0,36
	.byte	'ifx_netif_input',0,24,49,7
	.word	67004
	.byte	1,1,1,1,5
	.byte	'netif',0,24,49,37
	.word	67656
	.byte	0,38
	.byte	'initUART',0,25,39,6,1,1,1,1,3
	.word	67012
	.byte	33
	.byte	'sendUARTMessage',0,25,40,6,1,1,1,1,5
	.byte	'msg',0,25,40,29
	.word	69089
	.byte	5
	.byte	'count',0,25,40,44
	.word	67041
	.byte	0,22
	.word	68343
.L166:
	.byte	3
	.word	69145
	.byte	39
	.word	69089
	.byte	39
	.word	67025
	.byte	35
	.byte	'va_list',0,27,24,16
	.word	69089
	.byte	36
	.byte	'vsnprintf',0,26,150,1,16
	.word	450
	.byte	1,1,1,1,40,26,150,1,32
	.word	69155
	.byte	40,26,150,1,44
	.word	434
	.byte	40,26,150,1,63
	.word	69160
	.byte	40,26,150,1,75
	.word	69165
	.byte	0,3
	.word	67012
	.byte	41
	.byte	'__INDIRECT__',0,28,1,1,1,1,1,35
	.byte	'__wchar_t',0,28,1,1
	.word	67041
	.byte	35
	.byte	'__size_t',0,28,1,1
	.word	434
	.byte	35
	.byte	'__ptrdiff_t',0,28,1,1
	.word	450
	.byte	42,1,3
	.word	69321
	.byte	35
	.byte	'__codeptr',0,28,1,1
	.word	69323
	.byte	35
	.byte	'__intptr_t',0,28,1,1
	.word	450
	.byte	35
	.byte	'__uintptr_t',0,28,1,1
	.word	434
	.byte	35
	.byte	'size_t',0,29,24,25
	.word	434
	.byte	35
	.byte	'boolean',0,30,104,29
	.word	609
	.byte	35
	.byte	'uint8',0,30,108,29
	.word	609
	.byte	35
	.byte	'uint16',0,30,112,29
	.word	626
	.byte	35
	.byte	'uint32',0,30,116,29
	.word	9730
	.byte	35
	.byte	'uint64',0,30,121,29
	.word	316
	.byte	35
	.byte	'sint8',0,30,125,29
	.word	67004
	.byte	35
	.byte	'sint16',0,30,129,1,29
	.word	67041
	.byte	7
	.byte	'long int',0,4,5,35
	.byte	'sint32',0,30,134,1,29
	.word	69505
	.byte	7
	.byte	'long long int',0,8,5,35
	.byte	'sint64',0,30,141,1,29
	.word	69533
	.byte	35
	.byte	'float32',0,30,170,1,29
	.word	230
	.byte	35
	.byte	'pvoid',0,31,54,28
	.word	348
	.byte	35
	.byte	'Ifx_TickTime',0,31,76,28
	.word	69533
	.byte	35
	.byte	'Ifx_SizeT',0,31,89,16
	.word	67041
	.byte	35
	.byte	'Ifx_Priority',0,31,100,16
	.word	626
	.byte	17,31,127,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,35
	.byte	'Ifx_RxSel',0,31,137,1,3
	.word	69657
	.byte	35
	.byte	'Ifx_UReg_8Bit',0,32,96,24
	.word	609
	.byte	35
	.byte	'Ifx_UReg_32Bit',0,32,98,24
	.word	434
	.byte	35
	.byte	'Ifx_SReg_32Bit',0,32,101,24
	.word	450
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,23,68,16,4,11
	.byte	'ADDR',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_A_Bits',0,23,71,3
	.word	69862
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,23,74,16,4,11
	.byte	'VSS',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	457
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_CPU_BIV_Bits',0,23,78,3
	.word	69923
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,23,81,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	457
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	457
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	4,0,2,35,0,0,35
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,23,87,3
	.word	70002
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,23,90,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	457
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	4,0,2,35,0,0,35
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,23,95,3
	.word	70140
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,23,98,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	457
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,23,106,3
	.word	70261
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,23,109,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	457
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_CPU_BTV_Bits',0,23,113,3
	.word	70437
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,23,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	457
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_CCNT_Bits',0,23,120,3
	.word	70523
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,23,123,16,4,11
	.byte	'CM',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	457
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	457
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	457
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_CPU_CCTRL_Bits',0,23,131,1,3
	.word	70612
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,23,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	457
	.byte	27,0,2,35,0,0,35
	.byte	'Ifx_CPU_COMPAT_Bits',0,23,140,1,3
	.word	70759
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,23,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	29,0,2,35,0,0,35
	.byte	'Ifx_CPU_CORE_ID_Bits',0,23,147,1,3
	.word	70888
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,23,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	457
	.byte	27,0,2,35,0,0,35
	.byte	'Ifx_CPU_CPR_L_Bits',0,23,154,1,3
	.word	70988
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,23,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	457
	.byte	27,0,2,35,0,0,35
	.byte	'Ifx_CPU_CPR_U_Bits',0,23,161,1,3
	.word	71083
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,23,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	457
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_CPU_CPU_ID_Bits',0,23,169,1,3
	.word	71178
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,23,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	457
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	22,0,2,35,0,0,35
	.byte	'Ifx_CPU_CPXE_Bits',0,23,176,1,3
	.word	71288
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,23,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_CPU_CREVT_Bits',0,23,187,1,3
	.word	71380
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,23,190,1,16,4,11
	.byte	'CID',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	29,0,2,35,0,0,35
	.byte	'Ifx_CPU_CUS_ID_Bits',0,23,194,1,3
	.word	71534
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,23,197,1,16,4,11
	.byte	'DATA',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_D_Bits',0,23,200,1,3
	.word	71628
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,23,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_CPU_DATR_Bits',0,23,214,1,3
	.word	71691
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,23,217,1,16,4,11
	.byte	'DE',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	457
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	457
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	19,0,2,35,0,0,35
	.byte	'Ifx_CPU_DBGSR_Bits',0,23,228,1,3
	.word	71917
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,23,231,1,16,4,11
	.byte	'DTA',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_CPU_DBGTCR_Bits',0,23,235,1,3
	.word	72132
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,23,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_CPU_DCON0_Bits',0,23,243,1,3
	.word	72226
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,23,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_CPU_DCON2_Bits',0,23,250,1,3
	.word	72342
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,23,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	457
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_CPU_DCX_Bits',0,23,129,2,3
	.word	72443
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,23,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_DEADD_Bits',0,23,135,2,3
	.word	72536
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,23,138,2,16,4,11
	.byte	'TA',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_DIEAR_Bits',0,23,141,2,3
	.word	72616
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,23,144,2,16,4,11
	.byte	'IED',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	457
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	15,0,2,35,0,0,35
	.byte	'Ifx_CPU_DIETR_Bits',0,23,159,2,3
	.word	72685
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,23,162,2,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,23,196,2,3
	.word	72969
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,23,199,2,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,23,233,2,3
	.word	73560
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,23,236,2,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,23,142,3,3
	.word	74151
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,23,145,3,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,23,179,3,3
	.word	74752
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,23,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	457
	.byte	27,0,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,23,186,3,3
	.word	75353
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,23,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	457
	.byte	27,0,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,23,193,3,3
	.word	75468
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,23,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	457
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_CPU_DMS_Bits',0,23,200,3,3
	.word	75583
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,23,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	457
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	14,0,2,35,0,0,35
	.byte	'Ifx_CPU_DPRE_Bits',0,23,207,3,3
	.word	75676
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,23,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	457
	.byte	29,0,2,35,0,0,35
	.byte	'Ifx_CPU_DPR_L_Bits',0,23,214,3,3
	.word	75768
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,23,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	457
	.byte	29,0,2,35,0,0,35
	.byte	'Ifx_CPU_DPR_U_Bits',0,23,221,3,3
	.word	75863
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,23,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	457
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	14,0,2,35,0,0,35
	.byte	'Ifx_CPU_DPWE_Bits',0,23,228,3,3
	.word	75958
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,23,231,3,16,4,11
	.byte	'SRE',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	457
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	457
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_CPU_DSTR_Bits',0,23,250,3,3
	.word	76050
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,23,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_CPU_EXEVT_Bits',0,23,133,4,3
	.word	76389
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,23,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,35
	.byte	'Ifx_CPU_FCX_Bits',0,23,141,4,3
	.word	76543
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,23,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	457
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	457
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	457
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	457
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	2,0,2,35,0,0,35
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,23,154,4,3
	.word	76649
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,23,157,4,16,4,11
	.byte	'STALL',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	457
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	6,0,2,35,0,0,35
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,23,165,4,3
	.word	76867
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,23,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	457
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	457
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	457
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	457
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	457
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	457
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	457
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	457
	.byte	2,0,2,35,0,0,35
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,23,182,4,3
	.word	77058
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,23,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	22,0,2,35,0,0,35
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,23,198,4,3
	.word	77358
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,23,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,23,205,4,3
	.word	77663
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,23,208,4,16,4,11
	.byte	'TST',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	457
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,23,227,4,3
	.word	77764
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,23,230,4,16,4,11
	.byte	'OPC',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,23,237,4,3
	.word	78113
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,23,240,4,16,4,11
	.byte	'PC',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,23,243,4,3
	.word	78273
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,23,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,23,249,4,3
	.word	78354
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,23,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,23,255,4,3
	.word	78441
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,23,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,23,133,5,3
	.word	78528
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,23,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	457
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_ICNT_Bits',0,23,140,5,3
	.word	78615
	.byte	35
	.byte	'Ifx_CPU_ICR_Bits',0,23,150,5,3
	.word	68831
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,23,153,5,16,4,11
	.byte	'ISP',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_ISP_Bits',0,23,156,5,3
	.word	78732
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,23,159,5,16,4,11
	.byte	'RST',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	457
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	29,0,2,35,0,0,35
	.byte	'Ifx_CPU_KRST0_Bits',0,23,164,5,3
	.word	78798
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,23,167,5,16,4,11
	.byte	'RST',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_CPU_KRST1_Bits',0,23,171,5,3
	.word	78909
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,23,174,5,16,4,11
	.byte	'CLR',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,23,178,5,3
	.word	79001
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,23,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,35
	.byte	'Ifx_CPU_LCX_Bits',0,23,186,5,3
	.word	79097
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,23,189,5,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,23,223,5,3
	.word	79203
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,23,226,5,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,23,132,6,3
	.word	79786
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,23,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	457
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_M1CNT_Bits',0,23,139,6,3
	.word	80379
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,23,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	457
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_M2CNT_Bits',0,23,146,6,3
	.word	80472
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,23,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	457
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_M3CNT_Bits',0,23,153,6,3
	.word	80565
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,23,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_OSEL_Bits',0,23,159,6,3
	.word	80658
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,23,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	457
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_CPU_PC_Bits',0,23,166,6,3
	.word	80731
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,23,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_CPU_PCON0_Bits',0,23,174,6,3
	.word	80816
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,23,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_CPU_PCON1_Bits',0,23,182,6,3
	.word	80932
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,23,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_CPU_PCON2_Bits',0,23,189,6,3
	.word	81043
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,23,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	457
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	2,0,2,35,0,0,35
	.byte	'Ifx_CPU_PCXI_Bits',0,23,200,6,3
	.word	81144
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,23,203,6,16,4,11
	.byte	'TA',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_PIEAR_Bits',0,23,206,6,3
	.word	81297
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,23,209,6,16,4,11
	.byte	'IED',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	457
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	15,0,2,35,0,0,35
	.byte	'Ifx_CPU_PIETR_Bits',0,23,224,6,3
	.word	81366
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,23,227,6,16,4,11
	.byte	'DAC',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_CPU_PMA0_Bits',0,23,231,6,3
	.word	81650
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,23,234,6,16,4,11
	.byte	'CAC',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_CPU_PMA1_Bits',0,23,238,6,3
	.word	81741
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,23,241,6,16,4,11
	.byte	'PSI',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_CPU_PMA2_Bits',0,23,245,6,3
	.word	81832
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,23,248,6,16,4,11
	.byte	'FRE',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	17,0,2,35,0,0,35
	.byte	'Ifx_CPU_PSTR_Bits',0,23,130,7,3
	.word	81923
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,23,133,7,16,4,11
	.byte	'CDC',0,4
	.word	457
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	457
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	457
	.byte	8,0,2,35,0,0,35
	.byte	'Ifx_CPU_PSW_Bits',0,23,145,7,3
	.word	82126
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,23,148,7,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,23,182,7,3
	.word	82331
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,23,185,7,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,23,219,7,3
	.word	82898
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,23,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	457
	.byte	27,0,2,35,0,0,35
	.byte	'Ifx_CPU_RGN_LA_Bits',0,23,226,7,3
	.word	83475
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,23,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	457
	.byte	27,0,2,35,0,0,35
	.byte	'Ifx_CPU_RGN_UA_Bits',0,23,233,7,3
	.word	83570
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,23,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	457
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_SEGEN_Bits',0,23,242,7,3
	.word	83665
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,23,245,7,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,23,151,8,3
	.word	83793
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,23,154,8,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,23,188,8,3
	.word	84376
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,23,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_CPU_SMACON_Bits',0,23,196,8,3
	.word	84969
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,23,199,8,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,23,233,8,3
	.word	85087
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,23,236,8,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,23,142,9,3
	.word	85676
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,23,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_CPU_SWEVT_Bits',0,23,153,9,3
	.word	86275
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,23,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	457
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_CPU_SYSCON_Bits',0,23,171,9,3
	.word	86429
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,23,174,9,16,4,11
	.byte	'ASI',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	457
	.byte	27,0,2,35,0,0,35
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,23,178,9,3
	.word	86728
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,23,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	15,0,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_CON_Bits',0,23,189,9,3
	.word	86826
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,23,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,23,196,9,3
	.word	86998
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,23,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	457
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	20,0,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,23,203,9,3
	.word	87127
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,23,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	457
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	20,0,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,23,211,9,3
	.word	87257
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,23,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	457
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	8,0,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,23,218,9,3
	.word	87409
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,23,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	457
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	8,0,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,23,226,9,3
	.word	87536
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,23,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	457
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,23,233,9,3
	.word	87685
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,23,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	457
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	457
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	457
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	457
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,23,246,9,3
	.word	87799
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,23,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,23,252,9,3
	.word	88043
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,23,255,9,16,4,11
	.byte	'T0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,23,138,10,3
	.word	88123
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,23,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	457
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_CPU_TR_ADR_Bits',0,23,144,10,3
	.word	88318
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,23,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	457
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	457
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	457
	.byte	3,0,2,35,0,0,35
	.byte	'Ifx_CPU_TR_EVT_Bits',0,23,164,10,3
	.word	88391
	.byte	12,23,172,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69862
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_A',0,23,177,10,3
	.word	88709
	.byte	12,23,180,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69923
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_BIV',0,23,185,10,3
	.word	88768
	.byte	12,23,188,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70002
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_BLK_OMASK',0,23,193,10,3
	.word	88829
	.byte	12,23,196,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70140
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_BLK_OTAR',0,23,201,10,3
	.word	88896
	.byte	12,23,204,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70261
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_BLK_RABR',0,23,209,10,3
	.word	88962
	.byte	12,23,212,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70437
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_BTV',0,23,217,10,3
	.word	89028
	.byte	12,23,220,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70523
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_CCNT',0,23,225,10,3
	.word	89089
	.byte	12,23,228,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70612
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_CCTRL',0,23,233,10,3
	.word	89151
	.byte	12,23,236,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70759
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_COMPAT',0,23,241,10,3
	.word	89214
	.byte	12,23,244,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70888
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_CORE_ID',0,23,249,10,3
	.word	89278
	.byte	12,23,252,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70988
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_CPR_L',0,23,129,11,3
	.word	89343
	.byte	12,23,132,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71083
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_CPR_U',0,23,137,11,3
	.word	89406
	.byte	12,23,140,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71178
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_CPU_ID',0,23,145,11,3
	.word	89469
	.byte	12,23,148,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71288
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_CPXE',0,23,153,11,3
	.word	89533
	.byte	12,23,156,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71380
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_CREVT',0,23,161,11,3
	.word	89595
	.byte	12,23,164,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71534
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_CUS_ID',0,23,169,11,3
	.word	89658
	.byte	12,23,172,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71628
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_D',0,23,177,11,3
	.word	89722
	.byte	12,23,180,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71691
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DATR',0,23,185,11,3
	.word	89781
	.byte	12,23,188,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71917
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DBGSR',0,23,193,11,3
	.word	89843
	.byte	12,23,196,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72132
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DBGTCR',0,23,201,11,3
	.word	89906
	.byte	12,23,204,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72226
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DCON0',0,23,209,11,3
	.word	89970
	.byte	12,23,212,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72342
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DCON2',0,23,217,11,3
	.word	90033
	.byte	12,23,220,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72443
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DCX',0,23,225,11,3
	.word	90096
	.byte	12,23,228,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72536
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DEADD',0,23,233,11,3
	.word	90157
	.byte	12,23,236,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72616
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DIEAR',0,23,241,11,3
	.word	90220
	.byte	12,23,244,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72685
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DIETR',0,23,249,11,3
	.word	90283
	.byte	12,23,252,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72969
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,23,129,12,3
	.word	90346
	.byte	12,23,132,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73560
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,23,137,12,3
	.word	90426
	.byte	12,23,140,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74151
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,23,145,12,3
	.word	90506
	.byte	12,23,148,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74752
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,23,153,12,3
	.word	90586
	.byte	12,23,156,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75353
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,23,161,12,3
	.word	90666
	.byte	12,23,164,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75468
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,23,169,12,3
	.word	90740
	.byte	12,23,172,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75583
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DMS',0,23,177,12,3
	.word	90814
	.byte	12,23,180,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75676
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DPRE',0,23,185,12,3
	.word	90875
	.byte	12,23,188,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75768
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DPR_L',0,23,193,12,3
	.word	90937
	.byte	12,23,196,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75863
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DPR_U',0,23,201,12,3
	.word	91000
	.byte	12,23,204,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75958
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DPWE',0,23,209,12,3
	.word	91063
	.byte	12,23,212,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76050
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_DSTR',0,23,217,12,3
	.word	91125
	.byte	12,23,220,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76389
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_EXEVT',0,23,225,12,3
	.word	91187
	.byte	12,23,228,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76543
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FCX',0,23,233,12,3
	.word	91250
	.byte	12,23,236,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76649
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FLASHCON0',0,23,241,12,3
	.word	91311
	.byte	12,23,244,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76867
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FLASHCON1',0,23,249,12,3
	.word	91378
	.byte	12,23,252,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77058
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FLASHCON2',0,23,129,13,3
	.word	91445
	.byte	12,23,132,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77358
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FLASHCON3',0,23,137,13,3
	.word	91512
	.byte	12,23,140,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77663
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FLASHCON4',0,23,145,13,3
	.word	91579
	.byte	12,23,148,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77764
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,23,153,13,3
	.word	91646
	.byte	12,23,156,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78113
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,23,161,13,3
	.word	91716
	.byte	12,23,164,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78273
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,23,169,13,3
	.word	91786
	.byte	12,23,172,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78354
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,23,177,13,3
	.word	91855
	.byte	12,23,180,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78441
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,23,185,13,3
	.word	91926
	.byte	12,23,188,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78528
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,23,193,13,3
	.word	91997
	.byte	12,23,196,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78615
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_ICNT',0,23,201,13,3
	.word	92068
	.byte	35
	.byte	'Ifx_CPU_ICR',0,23,209,13,3
	.word	68947
	.byte	12,23,212,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78732
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_ISP',0,23,217,13,3
	.word	92151
	.byte	12,23,220,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78798
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_KRST0',0,23,225,13,3
	.word	92212
	.byte	12,23,228,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78909
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_KRST1',0,23,233,13,3
	.word	92275
	.byte	12,23,236,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79001
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_KRSTCLR',0,23,241,13,3
	.word	92338
	.byte	12,23,244,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79097
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_LCX',0,23,249,13,3
	.word	92403
	.byte	12,23,252,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79203
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,23,129,14,3
	.word	92464
	.byte	12,23,132,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79786
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,23,137,14,3
	.word	92540
	.byte	12,23,140,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80379
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_M1CNT',0,23,145,14,3
	.word	92616
	.byte	12,23,148,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80472
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_M2CNT',0,23,153,14,3
	.word	92679
	.byte	12,23,156,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80565
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_M3CNT',0,23,161,14,3
	.word	92742
	.byte	12,23,164,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80658
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_OSEL',0,23,169,14,3
	.word	92805
	.byte	12,23,172,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80731
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PC',0,23,177,14,3
	.word	92867
	.byte	12,23,180,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80816
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PCON0',0,23,185,14,3
	.word	92927
	.byte	12,23,188,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80932
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PCON1',0,23,193,14,3
	.word	92990
	.byte	12,23,196,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81043
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PCON2',0,23,201,14,3
	.word	93053
	.byte	12,23,204,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81144
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PCXI',0,23,209,14,3
	.word	93116
	.byte	12,23,212,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81297
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PIEAR',0,23,217,14,3
	.word	93178
	.byte	12,23,220,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81366
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PIETR',0,23,225,14,3
	.word	93241
	.byte	12,23,228,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81650
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PMA0',0,23,233,14,3
	.word	93304
	.byte	12,23,236,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81741
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PMA1',0,23,241,14,3
	.word	93366
	.byte	12,23,244,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81832
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PMA2',0,23,249,14,3
	.word	93428
	.byte	12,23,252,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81923
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PSTR',0,23,129,15,3
	.word	93490
	.byte	12,23,132,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82126
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_PSW',0,23,137,15,3
	.word	93552
	.byte	12,23,140,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82331
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_RGN_ACCENA',0,23,145,15,3
	.word	93613
	.byte	12,23,148,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82898
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_RGN_ACCENB',0,23,153,15,3
	.word	93681
	.byte	12,23,156,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83475
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_RGN_LA',0,23,161,15,3
	.word	93749
	.byte	12,23,164,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83570
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_RGN_UA',0,23,169,15,3
	.word	93813
	.byte	12,23,172,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83665
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_SEGEN',0,23,177,15,3
	.word	93877
	.byte	12,23,180,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83793
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,23,185,15,3
	.word	93940
	.byte	12,23,188,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84376
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,23,193,15,3
	.word	94016
	.byte	12,23,196,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84969
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_SMACON',0,23,201,15,3
	.word	94092
	.byte	12,23,204,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85087
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,23,209,15,3
	.word	94156
	.byte	12,23,212,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85676
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,23,217,15,3
	.word	94235
	.byte	12,23,220,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86275
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_SWEVT',0,23,225,15,3
	.word	94314
	.byte	12,23,228,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86429
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_SYSCON',0,23,233,15,3
	.word	94377
	.byte	12,23,236,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86728
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TASK_ASI',0,23,241,15,3
	.word	94441
	.byte	12,23,244,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86826
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_CON',0,23,249,15,3
	.word	94507
	.byte	12,23,252,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86998
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,23,129,16,3
	.word	94572
	.byte	12,23,132,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87127
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,23,137,16,3
	.word	94648
	.byte	12,23,140,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87257
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,23,145,16,3
	.word	94726
	.byte	12,23,148,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87409
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,23,153,16,3
	.word	94804
	.byte	12,23,156,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87536
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,23,161,16,3
	.word	94881
	.byte	12,23,164,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87685
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,23,169,16,3
	.word	94958
	.byte	12,23,172,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87799
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,23,177,16,3
	.word	95029
	.byte	12,23,180,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88043
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TPS_TIMER',0,23,185,16,3
	.word	95101
	.byte	12,23,188,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88123
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TRIG_ACC',0,23,193,16,3
	.word	95168
	.byte	12,23,196,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88318
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TR_ADR',0,23,201,16,3
	.word	95234
	.byte	12,23,204,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88391
	.byte	4,2,35,0,0,35
	.byte	'Ifx_CPU_TR_EVT',0,23,209,16,3
	.word	95298
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,23,221,16,25,16,13
	.byte	'LA',0
	.word	93749
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	93813
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	93613
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	93681
	.byte	4,2,35,12,0,14
	.word	95362
	.byte	35
	.byte	'Ifx_CPU_RGN',0,23,227,16,3
	.word	95438
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,23,242,16,25,12,13
	.byte	'RABR',0
	.word	88962
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	88896
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	88829
	.byte	4,2,35,8,0,14
	.word	95464
	.byte	35
	.byte	'Ifx_CPU_BLK',0,23,247,16,3
	.word	95527
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,23,134,17,25,28,13
	.byte	'CON',0
	.word	91646
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	91786
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	91716
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2630
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	91855
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	91926
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	91997
	.byte	4,2,35,24,0,14
	.word	95553
	.byte	35
	.byte	'Ifx_CPU_FPU_TRAP',0,23,143,17,3
	.word	95678
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,23,158,17,25,8,13
	.byte	'L',0
	.word	90937
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	91000
	.byte	4,2,35,4,0,14
	.word	95709
	.byte	35
	.byte	'Ifx_CPU_DPR',0,23,162,17,3
	.word	95751
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,23,177,17,25,8,13
	.byte	'L',0
	.word	89343
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	89406
	.byte	4,2,35,4,0,14
	.word	95777
	.byte	35
	.byte	'Ifx_CPU_CPR',0,23,181,17,3
	.word	95819
	.byte	15,12
	.word	95101
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,23,196,17,25,16,13
	.byte	'CON',0
	.word	94507
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	95845
	.byte	12,2,35,4,0,14
	.word	95854
	.byte	35
	.byte	'Ifx_CPU_TPS',0,23,200,17,3
	.word	95902
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,23,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	94726
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	94648
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	94881
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	94804
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	94572
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	95029
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	94958
	.byte	4,2,35,24,0,14
	.word	95928
	.byte	35
	.byte	'Ifx_CPU_TPS_EXTIM',0,23,224,17,3
	.word	96077
	.byte	10
	.byte	'_Ifx_CPU_TR',0,23,239,17,25,8,13
	.byte	'EVT',0
	.word	95298
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	95234
	.byte	4,2,35,4,0,14
	.word	96109
	.byte	35
	.byte	'Ifx_CPU_TR',0,23,243,17,3
	.word	96154
	.byte	15,128,34
	.word	609
	.byte	16,255,33,0,15,236,253,2
	.word	609
	.byte	16,235,253,2,0,15,244,31
	.word	609
	.byte	16,243,31,0,15,128,1
	.word	95362
	.byte	16,7,0,14
	.word	96214
	.byte	15,232,1
	.word	609
	.byte	16,231,1,0,15,128,48
	.word	609
	.byte	16,255,47,0,15,128,3
	.word	95464
	.byte	16,31,0,14
	.word	96251
	.byte	15,160,39
	.word	609
	.byte	16,159,39,0,15,208,223,1
	.word	609
	.byte	16,207,223,1,0,15,248,1
	.word	609
	.byte	16,247,1,0,15,244,29
	.word	609
	.byte	16,243,29,0,15,188,3
	.word	609
	.byte	16,187,3,0,15,232,3
	.word	609
	.byte	16,231,3,0,15,252,23
	.word	609
	.byte	16,251,23,0,14
	.word	95553
	.byte	15,228,63
	.word	609
	.byte	16,227,63,0,15,144,1
	.word	95709
	.byte	16,17,0,14
	.word	96361
	.byte	15,240,30
	.word	609
	.byte	16,239,30,0,15,80
	.word	95777
	.byte	16,9,0,14
	.word	96387
	.byte	15,176,31
	.word	609
	.byte	16,175,31,0,15,152,7
	.word	609
	.byte	16,151,7,0,14
	.word	95854
	.byte	15,48
	.word	609
	.byte	16,47,0,14
	.word	95928
	.byte	15,164,23
	.word	609
	.byte	16,163,23,0,15,64
	.word	96109
	.byte	16,7,0,14
	.word	96453
	.byte	15,192,23
	.word	609
	.byte	16,191,23,0,15,180,1
	.word	609
	.byte	16,179,1,0,15,172,1
	.word	609
	.byte	16,171,1,0,15,64
	.word	89722
	.byte	16,15,0,15,64
	.word	88709
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,23,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	96179
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	91311
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	91378
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	91445
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	91512
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	91579
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	96190
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	92212
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	92275
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	92338
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	96203
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	96224
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	4450
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	94156
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	94235
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	4450
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	94156
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	94235
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	4450
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	94156
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	94235
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	4450
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	94156
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	94235
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	4450
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	94156
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	94235
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	4450
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	94156
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	94235
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	4450
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	94156
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	94235
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	4450
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	94156
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	94235
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	93940
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	94016
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	4450
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	92464
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	92540
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	96229
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	90666
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	90740
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	90426
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	90586
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	90666
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	90740
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	90426
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	90586
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	90666
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	90740
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	90426
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	90586
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	90666
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	90740
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	90426
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	90586
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	90666
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	90740
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	90426
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	90586
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	90666
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	90740
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	90426
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	90586
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	90666
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	90740
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	90426
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	90586
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	90666
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	90740
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	90426
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	90586
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	4450
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	90346
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	90506
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	4450
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	90346
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	90506
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	4450
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	90346
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	90506
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	4450
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	90346
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	90506
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	4450
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	90346
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	90506
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	4450
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	90346
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	90506
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	4450
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	90346
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	90506
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	4450
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	90346
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	90506
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	96240
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	92805
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	4790
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	96261
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	96266
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	93877
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	96277
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	94441
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	96290
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	93304
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	93366
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	93428
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	96301
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	90033
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	4450
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	94092
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	91125
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	2630
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	89781
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	90157
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	90220
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	90283
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	3821
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	89970
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	96312
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	93490
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	92990
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	93053
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	92927
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	93178
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	93241
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	96323
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	89214
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	96334
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	96345
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	96350
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	96371
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	96376
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	96396
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	96401
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	89533
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	89533
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	89533
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	89533
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	90875
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	90875
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	90875
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	90875
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	91063
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	91063
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	91063
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	91063
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	42474
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	89533
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	89533
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	4450
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	90875
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	90875
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	4450
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	91063
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	91063
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	96412
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	96423
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	96428
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	96437
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	96442
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	96462
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	96467
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	89151
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	89089
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	92068
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	92616
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	92679
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	92742
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	96229
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	89843
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	2630
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	91187
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	89595
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	94314
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	13588
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	95168
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	4790
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	90814
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	90096
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	89906
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	96478
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	93116
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	93552
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	92867
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	4450
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	94377
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	89469
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	89278
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	88768
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	89028
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	92151
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	68947
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	4450
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	91250
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	92403
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	42474
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	89658
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	96489
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	96500
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	11642
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	96509
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	11642
	.byte	64,4,35,192,255,7,0,14
	.word	96518
	.byte	35
	.byte	'Ifx_CPU',0,23,210,19,3
	.word	101616
	.byte	17,9,124,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_2',0,2,18
	.byte	'IfxCpu_Id_3',0,3,18
	.byte	'IfxCpu_Id_4',0,4,18
	.byte	'IfxCpu_Id_6',0,6,18
	.byte	'IfxCpu_Id_none',0,7,0,35
	.byte	'IfxCpu_Id',0,9,133,1,3
	.word	101638
	.byte	35
	.byte	'IfxCpu_ResourceCpu',0,9,170,1,3
	.word	9390
	.byte	35
	.byte	'Ifx_SRC_SRCR_Bits',0,11,85,3
	.word	9961
	.byte	35
	.byte	'Ifx_SRC_SRCR',0,11,98,3
	.word	10251
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,11,110,25,4,13
	.byte	'SB',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	101839
	.byte	35
	.byte	'Ifx_SRC_CPU_CPU',0,11,113,3
	.word	101874
	.byte	15,24
	.word	101839
	.byte	16,5,0,14
	.word	101903
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,11,128,1,25,24,13
	.byte	'CPU',0
	.word	101912
	.byte	24,2,35,0,0,14
	.word	101917
	.byte	35
	.byte	'Ifx_SRC_CPU',0,11,131,1,3
	.word	101950
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,11,146,1,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	101976
	.byte	35
	.byte	'Ifx_SRC_AGBT_AGBT',0,11,149,1,3
	.word	102014
	.byte	15,4
	.word	101976
	.byte	16,0,0,14
	.word	102046
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,11,164,1,25,4,13
	.byte	'AGBT',0
	.word	102055
	.byte	4,2,35,0,0,14
	.word	102060
	.byte	35
	.byte	'Ifx_SRC_AGBT',0,11,167,1,3
	.word	102095
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,11,182,1,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	102122
	.byte	35
	.byte	'Ifx_SRC_XBAR_XBAR',0,11,185,1,3
	.word	102160
	.byte	15,12
	.word	102122
	.byte	16,2,0,14
	.word	102192
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,11,200,1,25,12,13
	.byte	'XBAR',0
	.word	102201
	.byte	12,2,35,0,0,14
	.word	102206
	.byte	35
	.byte	'Ifx_SRC_XBAR',0,11,203,1,3
	.word	102241
	.byte	15,8
	.word	10251
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,11,218,1,25,8,13
	.byte	'SR',0
	.word	102268
	.byte	8,2,35,0,0,14
	.word	102277
	.byte	35
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,11,221,1,3
	.word	102323
	.byte	14
	.word	102277
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,11,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	102363
	.byte	8,2,35,0,0,14
	.word	102368
	.byte	35
	.byte	'Ifx_SRC_CERBERUS',0,11,239,1,3
	.word	102411
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,11,254,1,25,12,13
	.byte	'TX',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,8,0,14
	.word	102442
	.byte	35
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,11,131,2,3
	.word	102509
	.byte	15,144,1
	.word	102442
	.byte	16,11,0,14
	.word	102545
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,11,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	102555
	.byte	144,1,2,35,0,0,14
	.word	102560
	.byte	35
	.byte	'Ifx_SRC_ASCLIN',0,11,149,2,3
	.word	102601
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,11,164,2,25,20,13
	.byte	'TX',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	10251
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	10251
	.byte	4,2,35,16,0,14
	.word	102630
	.byte	35
	.byte	'Ifx_SRC_QSPI_QSPI',0,11,171,2,3
	.word	102716
	.byte	15,120
	.word	102630
	.byte	16,5,0,14
	.word	102748
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,11,186,2,25,120,13
	.byte	'QSPI',0
	.word	102757
	.byte	120,2,35,0,0,14
	.word	102762
	.byte	35
	.byte	'Ifx_SRC_QSPI',0,11,189,2,3
	.word	102797
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,11,204,2,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	102824
	.byte	35
	.byte	'Ifx_SRC_HSCT_HSCT',0,11,207,2,3
	.word	102862
	.byte	15,8
	.word	102824
	.byte	16,1,0,14
	.word	102894
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,11,222,2,25,8,13
	.byte	'HSCT',0
	.word	102903
	.byte	8,2,35,0,0,14
	.word	102908
	.byte	35
	.byte	'Ifx_SRC_HSCT',0,11,225,2,3
	.word	102943
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,11,240,2,25,16,13
	.byte	'COK',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	10251
	.byte	4,2,35,12,0,14
	.word	102970
	.byte	35
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,11,246,2,3
	.word	103051
	.byte	15,64
	.word	102970
	.byte	16,3,0,14
	.word	103086
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,11,133,3,25,68,13
	.byte	'CH',0
	.word	103095
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	10251
	.byte	4,2,35,64,0,14
	.word	103100
	.byte	35
	.byte	'Ifx_SRC_HSSL_HSSL',0,11,137,3,3
	.word	103151
	.byte	15,136,1
	.word	103100
	.byte	16,1,0,14
	.word	103183
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,11,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	103193
	.byte	136,1,2,35,0,0,14
	.word	103198
	.byte	35
	.byte	'Ifx_SRC_HSSL',0,11,155,3,3
	.word	103235
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,11,170,3,25,16,13
	.byte	'DTR',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2630
	.byte	4,2,35,12,0,14
	.word	103262
	.byte	35
	.byte	'Ifx_SRC_I2C_I2C',0,11,176,3,3
	.word	103343
	.byte	15,32
	.word	103262
	.byte	16,1,0,14
	.word	103373
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,11,191,3,25,32,13
	.byte	'I2C',0
	.word	103382
	.byte	32,2,35,0,0,14
	.word	103387
	.byte	35
	.byte	'Ifx_SRC_I2C',0,11,194,3,3
	.word	103420
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,11,209,3,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	103446
	.byte	35
	.byte	'Ifx_SRC_SENT_SENT',0,11,212,3,3
	.word	103484
	.byte	15,40
	.word	103446
	.byte	16,9,0,14
	.word	103516
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,11,227,3,25,40,13
	.byte	'SENT',0
	.word	103525
	.byte	40,2,35,0,0,14
	.word	103530
	.byte	35
	.byte	'Ifx_SRC_SENT',0,11,230,3,3
	.word	103565
	.byte	15,20
	.word	10251
	.byte	16,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,11,245,3,25,20,13
	.byte	'SR',0
	.word	103592
	.byte	20,2,35,0,0,14
	.word	103601
	.byte	35
	.byte	'Ifx_SRC_MSC_MSC',0,11,248,3,3
	.word	103637
	.byte	15,80
	.word	103601
	.byte	16,3,0,14
	.word	103667
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,11,135,4,25,80,13
	.byte	'MSC',0
	.word	103676
	.byte	80,2,35,0,0,14
	.word	103681
	.byte	35
	.byte	'Ifx_SRC_MSC',0,11,138,4,3
	.word	103714
	.byte	15,16
	.word	10251
	.byte	16,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,11,153,4,25,16,13
	.byte	'SR',0
	.word	103740
	.byte	16,2,35,0,0,14
	.word	103749
	.byte	35
	.byte	'Ifx_SRC_CCU6_CCU',0,11,156,4,3
	.word	103786
	.byte	15,32
	.word	103749
	.byte	16,1,0,14
	.word	103817
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,11,171,4,25,32,13
	.byte	'CCU',0
	.word	103826
	.byte	32,2,35,0,0,14
	.word	103831
	.byte	35
	.byte	'Ifx_SRC_CCU6',0,11,174,4,3
	.word	103865
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,11,189,4,25,24,13
	.byte	'CIRQ',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	10251
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	10251
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	10251
	.byte	4,2,35,20,0,14
	.word	103892
	.byte	35
	.byte	'Ifx_SRC_GPT12_GPT12',0,11,197,4,3
	.word	103994
	.byte	15,24
	.word	103892
	.byte	16,0,0,14
	.word	104028
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,11,212,4,25,24,13
	.byte	'GPT12',0
	.word	104037
	.byte	24,2,35,0,0,14
	.word	104042
	.byte	35
	.byte	'Ifx_SRC_GPT12',0,11,215,4,3
	.word	104079
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,11,230,4,25,8,13
	.byte	'SR',0
	.word	102268
	.byte	8,2,35,0,0,14
	.word	104107
	.byte	35
	.byte	'Ifx_SRC_STM_STM',0,11,233,4,3
	.word	104143
	.byte	15,48
	.word	104107
	.byte	16,5,0,14
	.word	104173
	.byte	10
	.byte	'_Ifx_SRC_STM',0,11,248,4,25,48,13
	.byte	'STM',0
	.word	104182
	.byte	48,2,35,0,0,14
	.word	104187
	.byte	35
	.byte	'Ifx_SRC_STM',0,11,251,4,3
	.word	104220
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,11,138,5,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	104246
	.byte	35
	.byte	'Ifx_SRC_FCE_FCE0',0,11,141,5,3
	.word	104283
	.byte	14
	.word	104246
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,11,156,5,25,4,13
	.byte	'FCE0',0
	.word	104314
	.byte	4,2,35,0,0,14
	.word	104319
	.byte	35
	.byte	'Ifx_SRC_FCE',0,11,159,5,3
	.word	104353
	.byte	15,32
	.word	609
	.byte	16,31,0,15,128,4
	.word	10251
	.byte	16,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,11,174,5,25,176,4,13
	.byte	'ERR',0
	.word	103740
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	104379
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	104388
	.byte	128,4,2,35,48,0,14
	.word	104398
	.byte	35
	.byte	'Ifx_SRC_DMA_DMA',0,11,179,5,3
	.word	104470
	.byte	15,176,4
	.word	104398
	.byte	16,0,0,14
	.word	104500
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,11,194,5,25,176,4,13
	.byte	'DMA',0
	.word	104510
	.byte	176,4,2,35,0,0,14
	.word	104515
	.byte	35
	.byte	'Ifx_SRC_DMA',0,11,197,5,3
	.word	104550
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,11,212,5,25,8,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	10251
	.byte	4,2,35,4,0,14
	.word	104576
	.byte	35
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,11,216,5,3
	.word	104630
	.byte	15,8
	.word	104576
	.byte	16,0,0,14
	.word	104664
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,11,231,5,25,8,13
	.byte	'SDMMC',0
	.word	104673
	.byte	8,2,35,0,0,14
	.word	104678
	.byte	35
	.byte	'Ifx_SRC_SDMMC',0,11,234,5,3
	.word	104715
	.byte	15,40
	.word	10251
	.byte	16,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,11,249,5,25,40,13
	.byte	'SR',0
	.word	104743
	.byte	40,2,35,0,0,14
	.word	104752
	.byte	35
	.byte	'Ifx_SRC_GETH_GETH',0,11,252,5,3
	.word	104790
	.byte	15,40
	.word	104752
	.byte	16,0,0,14
	.word	104822
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,11,139,6,25,40,13
	.byte	'GETH',0
	.word	104831
	.byte	40,2,35,0,0,14
	.word	104836
	.byte	35
	.byte	'Ifx_SRC_GETH',0,11,142,6,3
	.word	104871
	.byte	15,64
	.word	10251
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,11,157,6,25,64,13
	.byte	'INT',0
	.word	104898
	.byte	64,2,35,0,0,14
	.word	104907
	.byte	35
	.byte	'Ifx_SRC_CAN_CAN',0,11,160,6,3
	.word	104944
	.byte	15,192,1
	.word	104907
	.byte	16,2,0,14
	.word	104974
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,11,175,6,25,192,1,13
	.byte	'CAN',0
	.word	104984
	.byte	192,1,2,35,0,0,14
	.word	104989
	.byte	35
	.byte	'Ifx_SRC_CAN',0,11,178,6,3
	.word	105024
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,11,193,6,25,16,13
	.byte	'SR0',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10251
	.byte	4,2,35,12,0,14
	.word	105050
	.byte	35
	.byte	'Ifx_SRC_VADC_G',0,11,199,6,3
	.word	105125
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,11,214,6,25,4,13
	.byte	'SR0',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	105154
	.byte	35
	.byte	'Ifx_SRC_VADC_FC',0,11,217,6,3
	.word	105191
	.byte	15,192,1
	.word	105050
	.byte	16,11,0,14
	.word	105221
	.byte	15,32
	.word	105154
	.byte	16,7,0,14
	.word	105236
	.byte	15,32
	.word	105050
	.byte	16,1,0,14
	.word	105250
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,11,233,6,25,128,2,13
	.byte	'G',0
	.word	105231
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	105245
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	105259
	.byte	32,3,35,224,1,0,14
	.word	105264
	.byte	35
	.byte	'Ifx_SRC_VADC',0,11,238,6,3
	.word	105324
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,11,253,6,25,8,13
	.byte	'SRM',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	10251
	.byte	4,2,35,4,0,14
	.word	105351
	.byte	35
	.byte	'Ifx_SRC_DSADC_DSADC',0,11,129,7,3
	.word	105405
	.byte	15,112
	.word	105351
	.byte	16,13,0,14
	.word	105439
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,11,144,7,25,112,13
	.byte	'DSADC',0
	.word	105448
	.byte	112,2,35,0,0,14
	.word	105453
	.byte	35
	.byte	'Ifx_SRC_DSADC',0,11,147,7,3
	.word	105490
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,11,162,7,25,48,13
	.byte	'INT0',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	10251
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	10251
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	10251
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	10251
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	10251
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	10251
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	10251
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4450
	.byte	8,2,35,40,0,14
	.word	105518
	.byte	35
	.byte	'Ifx_SRC_ERAY_ERAY',0,11,175,7,3
	.word	105713
	.byte	15,96
	.word	105518
	.byte	16,1,0,14
	.word	105745
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,11,190,7,25,96,13
	.byte	'ERAY',0
	.word	105754
	.byte	96,2,35,0,0,14
	.word	105759
	.byte	35
	.byte	'Ifx_SRC_ERAY',0,11,193,7,3
	.word	105794
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,11,208,7,25,8,13
	.byte	'HSM',0
	.word	102268
	.byte	8,2,35,0,0,14
	.word	105821
	.byte	35
	.byte	'Ifx_SRC_HSM_HSM',0,11,211,7,3
	.word	105858
	.byte	15,8
	.word	105821
	.byte	16,0,0,14
	.word	105888
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,11,226,7,25,8,13
	.byte	'HSM',0
	.word	105897
	.byte	8,2,35,0,0,14
	.word	105902
	.byte	35
	.byte	'Ifx_SRC_HSM',0,11,229,7,3
	.word	105935
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,11,244,7,25,16,13
	.byte	'SCUERU',0
	.word	103740
	.byte	16,2,35,0,0,14
	.word	105961
	.byte	35
	.byte	'Ifx_SRC_SCU',0,11,247,7,3
	.word	105997
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,11,134,8,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	106023
	.byte	35
	.byte	'Ifx_SRC_PMS_PMS',0,11,137,8,3
	.word	106059
	.byte	15,16
	.word	106023
	.byte	16,3,0,14
	.word	106089
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,11,152,8,25,16,13
	.byte	'PMS',0
	.word	106098
	.byte	16,2,35,0,0,14
	.word	106103
	.byte	35
	.byte	'Ifx_SRC_PMS',0,11,155,8,3
	.word	106136
	.byte	15,12
	.word	10251
	.byte	16,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,11,170,8,25,12,13
	.byte	'SR',0
	.word	106162
	.byte	12,2,35,0,0,14
	.word	106171
	.byte	35
	.byte	'Ifx_SRC_SMU_SMU',0,11,173,8,3
	.word	106207
	.byte	15,12
	.word	106171
	.byte	16,0,0,14
	.word	106237
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,11,188,8,25,12,13
	.byte	'SMU',0
	.word	106246
	.byte	12,2,35,0,0,14
	.word	106251
	.byte	35
	.byte	'Ifx_SRC_SMU',0,11,191,8,3
	.word	106284
	.byte	15,32
	.word	10251
	.byte	16,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,11,206,8,25,32,13
	.byte	'SR',0
	.word	106310
	.byte	32,2,35,0,0,14
	.word	106319
	.byte	35
	.byte	'Ifx_SRC_PSI5_PSI5',0,11,209,8,3
	.word	106357
	.byte	15,32
	.word	106319
	.byte	16,0,0,14
	.word	106389
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,11,224,8,25,32,13
	.byte	'PSI5',0
	.word	106398
	.byte	32,2,35,0,0,14
	.word	106403
	.byte	35
	.byte	'Ifx_SRC_PSI5',0,11,227,8,3
	.word	106438
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,11,242,8,25,12,13
	.byte	'BFR',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,8,0,14
	.word	106465
	.byte	35
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,11,247,8,3
	.word	106534
	.byte	14
	.word	106465
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,11,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	106569
	.byte	12,2,35,0,0,14
	.word	106574
	.byte	35
	.byte	'Ifx_SRC_HSPDM',0,11,137,9,3
	.word	106612
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,11,152,9,25,24,13
	.byte	'LI0',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	10251
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	10251
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,20,0,14
	.word	106640
	.byte	35
	.byte	'Ifx_SRC_DAM_DAM',0,11,160,9,3
	.word	106741
	.byte	15,48
	.word	106640
	.byte	16,1,0,14
	.word	106771
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,11,175,9,25,48,13
	.byte	'DAM',0
	.word	106780
	.byte	48,2,35,0,0,14
	.word	106785
	.byte	35
	.byte	'Ifx_SRC_DAM',0,11,178,9,3
	.word	106818
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,11,193,9,25,32,13
	.byte	'SR',0
	.word	106310
	.byte	32,2,35,0,0,14
	.word	106844
	.byte	35
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,11,196,9,3
	.word	106884
	.byte	15,32
	.word	106844
	.byte	16,0,0,14
	.word	106918
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,11,211,9,25,32,13
	.byte	'PSI5S',0
	.word	106927
	.byte	32,2,35,0,0,14
	.word	106932
	.byte	35
	.byte	'Ifx_SRC_PSI5S',0,11,214,9,3
	.word	106969
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,11,229,9,25,8,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	10251
	.byte	4,2,35,4,0,14
	.word	106997
	.byte	35
	.byte	'Ifx_SRC_RIF_RIF',0,11,233,9,3
	.word	107047
	.byte	15,16
	.word	106997
	.byte	16,1,0,14
	.word	107077
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,11,248,9,25,16,13
	.byte	'RIF',0
	.word	107086
	.byte	16,2,35,0,0,14
	.word	107091
	.byte	35
	.byte	'Ifx_SRC_RIF',0,11,251,9,3
	.word	107124
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,11,138,10,25,8,13
	.byte	'INT',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,4,0,14
	.word	107150
	.byte	35
	.byte	'Ifx_SRC_SPU_SPU',0,11,142,10,3
	.word	107200
	.byte	15,16
	.word	107150
	.byte	16,1,0,14
	.word	107230
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,11,157,10,25,16,13
	.byte	'SPU',0
	.word	107239
	.byte	16,2,35,0,0,14
	.word	107244
	.byte	35
	.byte	'Ifx_SRC_SPU',0,11,160,10,3
	.word	107277
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,11,175,10,25,32,13
	.byte	'SR',0
	.word	106310
	.byte	32,2,35,0,0,14
	.word	107303
	.byte	35
	.byte	'Ifx_SRC_GPSR_GPSR',0,11,178,10,3
	.word	107341
	.byte	15,192,1
	.word	107303
	.byte	16,5,0,14
	.word	107373
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,11,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	107383
	.byte	192,1,2,35,0,0,14
	.word	107388
	.byte	35
	.byte	'Ifx_SRC_GPSR',0,11,196,10,3
	.word	107425
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,4,68,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_ACCEN00_Bits',0,4,102,3
	.word	107452
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,4,105,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN01_Bits',0,4,108,3
	.word	108011
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,4,111,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_ACCEN10_Bits',0,4,145,1,3
	.word	108090
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,4,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN11_Bits',0,4,151,1,3
	.word	108650
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,164,1,3
	.word	108731
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	609
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	609
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	609
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	609
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	609
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,181,1,3
	.word	108948
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	609
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	609
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	609
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,199,1,3
	.word	109221
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,4,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON10_Bits',0,4,206,1,3
	.word	109547
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,4,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON11_Bits',0,4,213,1,3
	.word	109649
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	434
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,228,1,3
	.word	109751
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	609
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	434
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,248,1,3
	.word	110025
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	434
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,132,2,3
	.word	110394
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,143,2,3
	.word	110574
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,150,2,3
	.word	110743
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,157,2,3
	.word	110843
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,4,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON8_Bits',0,4,164,2,3
	.word	110943
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,4,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON9_Bits',0,4,171,2,3
	.word	111043
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	609
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	609
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,185,2,3
	.word	111143
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,4,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	626
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,4,200,2,3
	.word	111346
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,4,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,35
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,4,207,2,3
	.word	111578
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,4,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	457
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_SCU_EICON0_Bits',0,4,216,2,3
	.word	111680
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,4,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_EICON1_Bits',0,4,228,2,3
	.word	111808
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	609
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	609
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	434
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	609
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	609
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_EICR_Bits',0,4,250,2,3
	.word	111997
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,4,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	609
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_EIFILT_Bits',0,4,147,3,3
	.word	112361
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SCU_EIFR_Bits',0,4,161,3,3
	.word	112800
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,4,164,3,16,4,11
	.byte	'AE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_EISR_Bits',0,4,174,3,3
	.word	113011
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,177,3,16,4,11
	.byte	'POL',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	626
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	626
	.byte	14,0,2,35,2,0,35
	.byte	'Ifx_SCU_EMSR_Bits',0,4,187,3,3
	.word	113187
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,4,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	609
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_EMSSW_Bits',0,4,196,3,3
	.word	113381
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	626
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	434
	.byte	23,0,2,35,0,0,35
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,204,3,3
	.word	113516
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,207,3,16,4,11
	.byte	'ARI',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,212,3,3
	.word	113652
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,215,3,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	609
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	609
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	609
	.byte	8,0,2,35,3,0,35
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,226,3,3
	.word	113763
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,229,3,16,4,11
	.byte	'STEP',0,2
	.word	626
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	626
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_FDR_Bits',0,4,237,3,3
	.word	113981
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,240,3,16,4,11
	.byte	'FS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	8,0,2,35,3,0,35
	.byte	'Ifx_SCU_FMR_Bits',0,4,132,4,3
	.word	114144
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_ID_Bits',0,4,140,4,3
	.word	114480
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	609
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_SCU_IGCR_Bits',0,4,167,4,3
	.word	114587
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,170,4,16,4,11
	.byte	'P0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_SCU_IN_Bits',0,4,175,4,3
	.word	115039
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_IOCR_Bits',0,4,185,4,3
	.word	115138
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	434
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,198,4,3
	.word	115288
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,201,4,16,4,11
	.byte	'SEED',0,4
	.word	434
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	609
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,208,4,3
	.word	115526
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,215,4,3
	.word	115687
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,4,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,4,221,4,3
	.word	115793
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,4,224,4,16,4,11
	.byte	'LS2',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	626
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	626
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_LCLCON0_Bits',0,4,232,4,3
	.word	115879
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,4,235,4,16,4,11
	.byte	'LS3',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	626
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	626
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_LCLCON1_Bits',0,4,243,4,3
	.word	116047
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	626
	.byte	10,0,2,35,2,0,35
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,134,5,3
	.word	116215
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	609
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	626
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_MANID_Bits',0,4,142,5,3
	.word	116529
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,145,5,16,4,11
	.byte	'PS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	626
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	626
	.byte	14,0,2,35,2,0,35
	.byte	'Ifx_SCU_OMR_Bits',0,4,153,5,3
	.word	116640
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	609
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	609
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	609
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,177,5,3
	.word	116798
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,180,5,16,4,11
	.byte	'P0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_SCU_OUT_Bits',0,4,185,5,3
	.word	117209
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	6,0,2,35,3,0,35
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,204,5,3
	.word	117310
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,216,5,3
	.word	117628
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_SCU_PDISC_Bits',0,4,224,5,3
	.word	117815
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,227,5,16,4,11
	.byte	'PD0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SCU_PDR_Bits',0,4,234,5,3
	.word	117926
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SCU_PDRR_Bits',0,4,248,5,3
	.word	118059
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,4,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	626
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	5,0,2,35,3,0,35
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,4,134,6,3
	.word	118262
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,4,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,4,143,6,3
	.word	118502
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,4,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	434
	.byte	25,0,2,35,0,0,35
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,4,156,6,3
	.word	118646
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,4,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR0_Bits',0,4,165,6,3
	.word	118868
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,4,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR1_Bits',0,4,174,6,3
	.word	119004
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,4,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR2_Bits',0,4,183,6,3
	.word	119140
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,4,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR3_Bits',0,4,192,6,3
	.word	119276
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,4,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR4_Bits',0,4,201,6,3
	.word	119412
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,4,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR5_Bits',0,4,210,6,3
	.word	119548
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,4,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	12,0,2,35,2,0,35
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,4,227,6,3
	.word	119684
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	434
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	609
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,241,6,3
	.word	119956
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,4,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	626
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,4,135,7,3
	.word	120201
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,4,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	626
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	6,0,2,35,3,0,35
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,4,143,7,3
	.word	120589
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,4,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	609
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,4,157,7,3
	.word	120707
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,4,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	609
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	626
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	6,0,2,35,3,0,35
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,4,172,7,3
	.word	120950
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	609
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	626
	.byte	10,0,2,35,2,0,35
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,189,7,3
	.word	121217
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	626
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,206,7,3
	.word	121476
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,4,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_RSTCON3_Bits',0,4,212,7,3
	.word	121781
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,245,7,3
	.word	121862
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,4,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	457
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_SCU_SEICON0_Bits',0,4,254,7,3
	.word	122411
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,4,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,35
	.byte	'Ifx_SCU_SEICON1_Bits',0,4,138,8,3
	.word	122541
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,4,141,8,16,4,11
	.byte	'AE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_SEISR_Bits',0,4,151,8,3
	.word	122732
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,4,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	626
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_STCON_Bits',0,4,161,8,3
	.word	122910
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,4,164,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM1_Bits',0,4,167,8,3
	.word	123061
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,4,170,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM2_Bits',0,4,173,8,3
	.word	123133
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,4,176,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM3_Bits',0,4,179,8,3
	.word	123205
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,4,182,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM4_Bits',0,4,185,8,3
	.word	123277
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,4,188,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM5_Bits',0,4,191,8,3
	.word	123349
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,4,194,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM6_Bits',0,4,197,8,3
	.word	123421
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	609
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	609
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,216,8,3
	.word	123493
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,4,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	626
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,4,224,8,3
	.word	123822
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,234,8,3
	.word	123942
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,249,8,3
	.word	124112
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,4,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	626
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	609
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,4,137,9,3
	.word	124375
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,4,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	434
	.byte	29,0,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,4,144,9,3
	.word	124654
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,4,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,4,151,9,3
	.word	124758
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,4,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,4,164,9,3
	.word	124864
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,174,9,3
	.word	125087
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,4,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	609
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,4,199,9,3
	.word	125235
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,4,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,4,215,9,3
	.word	125723
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,225,9,3
	.word	126020
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,235,9,3
	.word	126168
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,244,9,3
	.word	473
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,132,10,3
	.word	648
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,148,10,3
	.word	914
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	457
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,157,10,3
	.word	126418
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,173,10,3
	.word	126544
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,176,10,16,4,11
	.byte	'AE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,189,10,3
	.word	126796
	.byte	12,4,197,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107452
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN00',0,4,202,10,3
	.word	127015
	.byte	12,4,205,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108011
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN01',0,4,210,10,3
	.word	127080
	.byte	12,4,213,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108090
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN10',0,4,218,10,3
	.word	127145
	.byte	12,4,221,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108650
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ACCEN11',0,4,226,10,3
	.word	127210
	.byte	12,4,229,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108731
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ARSTDIS',0,4,234,10,3
	.word	127275
	.byte	12,4,237,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108948
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON0',0,4,242,10,3
	.word	127340
	.byte	12,4,245,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109221
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON1',0,4,250,10,3
	.word	127405
	.byte	12,4,253,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109547
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON10',0,4,130,11,3
	.word	127470
	.byte	12,4,133,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109649
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON11',0,4,138,11,3
	.word	127536
	.byte	12,4,141,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109751
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON2',0,4,146,11,3
	.word	127602
	.byte	12,4,149,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110025
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON3',0,4,154,11,3
	.word	127667
	.byte	12,4,157,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110394
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON4',0,4,162,11,3
	.word	127732
	.byte	12,4,165,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110574
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON5',0,4,170,11,3
	.word	127797
	.byte	12,4,173,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110743
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON6',0,4,178,11,3
	.word	127862
	.byte	12,4,181,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110843
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON7',0,4,186,11,3
	.word	127927
	.byte	12,4,189,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	110943
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON8',0,4,194,11,3
	.word	127992
	.byte	12,4,197,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111043
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CCUCON9',0,4,202,11,3
	.word	128057
	.byte	12,4,205,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111143
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_CHIPID',0,4,210,11,3
	.word	128122
	.byte	12,4,213,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111346
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_DTSCLIM',0,4,218,11,3
	.word	128186
	.byte	12,4,221,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111578
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_DTSCSTAT',0,4,226,11,3
	.word	128251
	.byte	12,4,229,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111680
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EICON0',0,4,234,11,3
	.word	128317
	.byte	12,4,237,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111808
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EICON1',0,4,242,11,3
	.word	128381
	.byte	12,4,245,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	111997
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EICR',0,4,250,11,3
	.word	128445
	.byte	12,4,253,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112361
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EIFILT',0,4,130,12,3
	.word	128507
	.byte	12,4,133,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112800
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EIFR',0,4,138,12,3
	.word	128571
	.byte	12,4,141,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113011
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EISR',0,4,146,12,3
	.word	128633
	.byte	12,4,149,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113187
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EMSR',0,4,154,12,3
	.word	128695
	.byte	12,4,157,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113381
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EMSSW',0,4,162,12,3
	.word	128757
	.byte	12,4,165,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113516
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,4,170,12,3
	.word	128820
	.byte	12,4,173,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113652
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ESROCFG',0,4,178,12,3
	.word	128893
	.byte	12,4,181,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113763
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_EXTCON',0,4,186,12,3
	.word	128958
	.byte	12,4,189,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113981
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_FDR',0,4,194,12,3
	.word	129022
	.byte	12,4,197,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114144
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_FMR',0,4,202,12,3
	.word	129083
	.byte	12,4,205,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114480
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_ID',0,4,210,12,3
	.word	129144
	.byte	12,4,213,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114587
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_IGCR',0,4,218,12,3
	.word	129204
	.byte	12,4,221,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115039
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_IN',0,4,226,12,3
	.word	129266
	.byte	12,4,229,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115138
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_IOCR',0,4,234,12,3
	.word	129326
	.byte	12,4,237,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115288
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,242,12,3
	.word	129388
	.byte	12,4,245,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115526
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,250,12,3
	.word	129456
	.byte	12,4,253,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115687
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,130,13,3
	.word	129524
	.byte	12,4,133,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115793
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LBISTCTRL3',0,4,138,13,3
	.word	129592
	.byte	12,4,141,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115879
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LCLCON0',0,4,146,13,3
	.word	129660
	.byte	12,4,149,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116047
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LCLCON1',0,4,154,13,3
	.word	129725
	.byte	12,4,157,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116215
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_LCLTEST',0,4,162,13,3
	.word	129790
	.byte	12,4,165,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116529
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_MANID',0,4,170,13,3
	.word	129855
	.byte	12,4,173,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116640
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_OMR',0,4,178,13,3
	.word	129918
	.byte	12,4,181,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116798
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_OSCCON',0,4,186,13,3
	.word	129979
	.byte	12,4,189,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117209
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_OUT',0,4,194,13,3
	.word	130043
	.byte	12,4,197,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117310
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_OVCCON',0,4,202,13,3
	.word	130104
	.byte	12,4,205,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117628
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_OVCENABLE',0,4,210,13,3
	.word	130168
	.byte	12,4,213,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117815
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PDISC',0,4,218,13,3
	.word	130235
	.byte	12,4,221,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117926
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PDR',0,4,226,13,3
	.word	130298
	.byte	12,4,229,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118059
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PDRR',0,4,234,13,3
	.word	130359
	.byte	12,4,237,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118262
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PERPLLCON0',0,4,242,13,3
	.word	130421
	.byte	12,4,245,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118502
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PERPLLCON1',0,4,250,13,3
	.word	130489
	.byte	12,4,253,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118646
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PERPLLSTAT',0,4,130,14,3
	.word	130557
	.byte	12,4,133,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118868
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR0',0,4,138,14,3
	.word	130625
	.byte	12,4,141,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119004
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR1',0,4,146,14,3
	.word	130689
	.byte	12,4,149,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119140
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR2',0,4,154,14,3
	.word	130753
	.byte	12,4,157,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119276
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR3',0,4,162,14,3
	.word	130817
	.byte	12,4,165,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119412
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR4',0,4,170,14,3
	.word	130881
	.byte	12,4,173,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119548
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMCSR5',0,4,178,14,3
	.word	130945
	.byte	12,4,181,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119684
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMSTAT0',0,4,186,14,3
	.word	131009
	.byte	12,4,189,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119956
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMSWCR1',0,4,194,14,3
	.word	131074
	.byte	12,4,197,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	120201
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMTRCSR0',0,4,202,14,3
	.word	131139
	.byte	12,4,205,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	120589
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMTRCSR1',0,4,210,14,3
	.word	131205
	.byte	12,4,213,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	120707
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMTRCSR2',0,4,218,14,3
	.word	131271
	.byte	12,4,221,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	120950
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_PMTRCSR3',0,4,226,14,3
	.word	131337
	.byte	12,4,229,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	121217
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_RSTCON',0,4,234,14,3
	.word	131403
	.byte	12,4,237,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	121476
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_RSTCON2',0,4,242,14,3
	.word	131467
	.byte	12,4,245,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	121781
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_RSTCON3',0,4,250,14,3
	.word	131532
	.byte	12,4,253,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	121862
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_RSTSTAT',0,4,130,15,3
	.word	131597
	.byte	12,4,133,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	122411
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SEICON0',0,4,138,15,3
	.word	131662
	.byte	12,4,141,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	122541
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SEICON1',0,4,146,15,3
	.word	131727
	.byte	12,4,149,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	122732
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SEISR',0,4,154,15,3
	.word	131792
	.byte	12,4,157,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	122910
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STCON',0,4,162,15,3
	.word	131855
	.byte	12,4,165,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	123061
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM1',0,4,170,15,3
	.word	131918
	.byte	12,4,173,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	123133
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM2',0,4,178,15,3
	.word	131982
	.byte	12,4,181,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	123205
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM3',0,4,186,15,3
	.word	132046
	.byte	12,4,189,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	123277
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM4',0,4,194,15,3
	.word	132110
	.byte	12,4,197,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	123349
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM5',0,4,202,15,3
	.word	132174
	.byte	12,4,205,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	123421
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STMEM6',0,4,210,15,3
	.word	132238
	.byte	12,4,213,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	123493
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_STSTAT',0,4,218,15,3
	.word	132302
	.byte	12,4,221,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	123822
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SWAPCTRL',0,4,226,15,3
	.word	132366
	.byte	12,4,229,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	123942
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SWRSTCON',0,4,234,15,3
	.word	132432
	.byte	12,4,237,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	124112
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SYSCON',0,4,242,15,3
	.word	132498
	.byte	12,4,245,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	124375
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLCON0',0,4,250,15,3
	.word	132562
	.byte	12,4,253,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	124654
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLCON1',0,4,130,16,3
	.word	132630
	.byte	12,4,133,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	124758
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLCON2',0,4,138,16,3
	.word	132698
	.byte	12,4,141,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	124864
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_SYSPLLSTAT',0,4,146,16,3
	.word	132766
	.byte	12,4,149,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	125087
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPCLR',0,4,154,16,3
	.word	132834
	.byte	12,4,157,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	125235
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPDIS0',0,4,162,16,3
	.word	132899
	.byte	12,4,165,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	125723
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPDIS1',0,4,170,16,3
	.word	132965
	.byte	12,4,173,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	126020
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPSET',0,4,178,16,3
	.word	133031
	.byte	12,4,181,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	126168
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_TRAPSTAT',0,4,186,16,3
	.word	133096
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,194,16,3
	.word	569
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,202,16,3
	.word	874
	.byte	35
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,210,16,3
	.word	1105
	.byte	12,4,213,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	126418
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_WDTS_CON0',0,4,218,16,3
	.word	133247
	.byte	12,4,221,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	126544
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_WDTS_CON1',0,4,226,16,3
	.word	133314
	.byte	12,4,229,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	126796
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SCU_WDTS_SR',0,4,234,16,3
	.word	133381
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,4,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	128820
	.byte	4,2,35,0,0,14
	.word	133446
	.byte	35
	.byte	'Ifx_SCU_ESRCFGX',0,4,249,16,3
	.word	133487
	.byte	14
	.word	1145
	.byte	35
	.byte	'Ifx_SCU_WDTCPU',0,4,141,17,3
	.word	133517
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,156,17,25,12,13
	.byte	'CON0',0
	.word	133247
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	133314
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	133381
	.byte	4,2,35,8,0,14
	.word	133546
	.byte	35
	.byte	'Ifx_SCU_WDTS',0,4,161,17,3
	.word	133607
	.byte	15,8
	.word	133446
	.byte	16,1,0,14
	.word	133634
	.byte	15,36
	.word	609
	.byte	16,35,0,15,16
	.word	128445
	.byte	16,3,0,15,16
	.word	129204
	.byte	16,3,0,15,72
	.word	1145
	.byte	16,5,0,14
	.word	133675
	.byte	14
	.word	133546
	.byte	15,176,2
	.word	609
	.byte	16,175,2,0,10
	.byte	'_Ifx_SCU',0,4,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	4450
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	129144
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2630
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	129979
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	132766
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	132562
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	132630
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	132698
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	130557
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	130421
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	130489
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	127340
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	127405
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	129022
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	128958
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	127602
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	127667
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	127732
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	127797
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	131597
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2630
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	131403
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	127275
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	132432
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	131467
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	131532
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	2630
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	133643
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	128893
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	132498
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	127862
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	127927
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	127992
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	128057
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	127470
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	127536
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	2630
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	130298
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	129326
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	130043
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	129918
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	129266
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	42474
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	132302
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	131855
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	130625
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	130689
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	130753
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	130817
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	130881
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	130945
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	2630
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	131009
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	131074
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	42474
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	128695
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	128757
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	128251
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	128186
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	18042
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	132965
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	133096
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	133031
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	132834
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	132899
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	129660
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	129725
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	129790
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	128122
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	129855
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	2630
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	132366
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	18042
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	129388
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	129456
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	129524
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	129592
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	42474
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	131918
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	131982
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	130235
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4450
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	131139
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	131205
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	131271
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	131337
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	3821
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	132046
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	132110
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	132174
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	132238
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	42474
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	130168
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	130104
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	133648
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	128507
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	133657
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	128571
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	129083
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	130359
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	133666
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	42474
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	133684
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	4450
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	128317
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	128381
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	128633
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	133689
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	131662
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	131727
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	131792
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	133694
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	127210
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	127145
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	127080
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	127015
	.byte	4,3,35,252,7,0,14
	.word	133705
	.byte	35
	.byte	'Ifx_SCU',0,4,166,18,3
	.word	135826
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,33,68,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_STM_ACCEN0_Bits',0,33,102,3
	.word	135848
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,33,105,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_ACCEN1_Bits',0,33,108,3
	.word	136405
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,33,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_CAP_Bits',0,33,114,3
	.word	136482
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,33,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_CAPSV_Bits',0,33,120,3
	.word	136555
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,33,123,16,4,11
	.byte	'DISR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_STM_CLC_Bits',0,33,130,1,3
	.word	136632
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,33,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	609
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	609
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	609
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	609
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	609
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	3,0,2,35,3,0,35
	.byte	'Ifx_STM_CMCON_Bits',0,33,143,1,3
	.word	136774
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,33,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_CMP_Bits',0,33,149,1,3
	.word	136994
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,33,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	434
	.byte	25,0,2,35,0,0,35
	.byte	'Ifx_STM_ICR_Bits',0,33,162,1,3
	.word	137063
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,33,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_STM_ID_Bits',0,33,170,1,3
	.word	137266
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,33,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_STM_ISCR_Bits',0,33,180,1,3
	.word	137370
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,33,183,1,16,4,11
	.byte	'RST',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_STM_KRST0_Bits',0,33,188,1,3
	.word	137521
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,33,191,1,16,4,11
	.byte	'RST',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	434
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_STM_KRST1_Bits',0,33,195,1,3
	.word	137632
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,33,198,1,16,4,11
	.byte	'CLR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	434
	.byte	31,0,2,35,0,0,35
	.byte	'Ifx_STM_KRSTCLR_Bits',0,33,202,1,3
	.word	137724
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,33,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	434
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_STM_OCS_Bits',0,33,213,1,3
	.word	137820
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,33,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM0_Bits',0,33,219,1,3
	.word	137988
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,33,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM0SV_Bits',0,33,225,1,3
	.word	138061
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,33,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM1_Bits',0,33,231,1,3
	.word	138138
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,33,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM2_Bits',0,33,237,1,3
	.word	138211
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,33,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM3_Bits',0,33,243,1,3
	.word	138284
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,33,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM4_Bits',0,33,249,1,3
	.word	138358
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,33,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM5_Bits',0,33,255,1,3
	.word	138432
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,33,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_STM_TIM6_Bits',0,33,133,2,3
	.word	138506
	.byte	12,33,141,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	135848
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_ACCEN0',0,33,146,2,3
	.word	138580
	.byte	12,33,149,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136405
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_ACCEN1',0,33,154,2,3
	.word	138644
	.byte	12,33,157,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136482
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_CAP',0,33,162,2,3
	.word	138708
	.byte	12,33,165,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136555
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_CAPSV',0,33,170,2,3
	.word	138769
	.byte	12,33,173,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136632
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_CLC',0,33,178,2,3
	.word	138832
	.byte	12,33,181,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136774
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_CMCON',0,33,186,2,3
	.word	138893
	.byte	12,33,189,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	136994
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_CMP',0,33,194,2,3
	.word	138956
	.byte	12,33,197,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137063
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_ICR',0,33,202,2,3
	.word	139017
	.byte	12,33,205,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137266
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_ID',0,33,210,2,3
	.word	139078
	.byte	12,33,213,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137370
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_ISCR',0,33,218,2,3
	.word	139138
	.byte	12,33,221,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137521
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_KRST0',0,33,226,2,3
	.word	139200
	.byte	12,33,229,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137632
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_KRST1',0,33,234,2,3
	.word	139263
	.byte	12,33,237,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137724
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_KRSTCLR',0,33,242,2,3
	.word	139326
	.byte	12,33,245,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137820
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_OCS',0,33,250,2,3
	.word	139391
	.byte	12,33,253,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	137988
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM0',0,33,130,3,3
	.word	139452
	.byte	12,33,133,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138061
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM0SV',0,33,138,3,3
	.word	139514
	.byte	12,33,141,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138138
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM1',0,33,146,3,3
	.word	139578
	.byte	12,33,149,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138211
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM2',0,33,154,3,3
	.word	139640
	.byte	12,33,157,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138284
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM3',0,33,162,3,3
	.word	139702
	.byte	12,33,165,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138358
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM4',0,33,170,3,3
	.word	139764
	.byte	12,33,173,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138432
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM5',0,33,178,3,3
	.word	139826
	.byte	12,33,181,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	138506
	.byte	4,2,35,0,0,35
	.byte	'Ifx_STM_TIM6',0,33,186,3,3
	.word	139888
	.byte	17,34,162,11,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,35
	.byte	'IfxScu_WDTCON1_IR',0,34,167,11,3
	.word	139950
	.byte	35
	.byte	'Ifx_P_ACCEN0_Bits',0,6,102,3
	.word	7978
	.byte	35
	.byte	'Ifx_P_ACCEN1_Bits',0,6,108,3
	.word	7891
	.byte	35
	.byte	'Ifx_P_ESR_Bits',0,6,130,1,3
	.word	4459
	.byte	35
	.byte	'Ifx_P_ID_Bits',0,6,138,1,3
	.word	2510
	.byte	35
	.byte	'Ifx_P_IN_Bits',0,6,160,1,3
	.word	3506
	.byte	35
	.byte	'Ifx_P_IOCR0_Bits',0,6,173,1,3
	.word	2639
	.byte	35
	.byte	'Ifx_P_IOCR12_Bits',0,6,186,1,3
	.word	3286
	.byte	35
	.byte	'Ifx_P_IOCR4_Bits',0,6,199,1,3
	.word	2854
	.byte	35
	.byte	'Ifx_P_IOCR8_Bits',0,6,212,1,3
	.word	3069
	.byte	35
	.byte	'Ifx_P_LPCR_Bits',0,6,231,1,3
	.word	7553
	.byte	35
	.byte	'Ifx_P_OMCR_Bits',0,6,253,1,3
	.word	7205
	.byte	35
	.byte	'Ifx_P_OMCR0_Bits',0,6,136,2,3
	.word	6192
	.byte	35
	.byte	'Ifx_P_OMCR12_Bits',0,6,146,2,3
	.word	6716
	.byte	35
	.byte	'Ifx_P_OMCR4_Bits',0,6,157,2,3
	.word	6366
	.byte	35
	.byte	'Ifx_P_OMCR8_Bits',0,6,168,2,3
	.word	6540
	.byte	35
	.byte	'Ifx_P_OMR_Bits',0,6,205,2,3
	.word	1939
	.byte	35
	.byte	'Ifx_P_OMSR_Bits',0,6,227,2,3
	.word	6872
	.byte	35
	.byte	'Ifx_P_OMSR0_Bits',0,6,237,2,3
	.word	5529
	.byte	35
	.byte	'Ifx_P_OMSR12_Bits',0,6,248,2,3
	.word	6017
	.byte	35
	.byte	'Ifx_P_OMSR4_Bits',0,6,131,3,3
	.word	5676
	.byte	35
	.byte	'Ifx_P_OMSR8_Bits',0,6,142,3,3
	.word	5845
	.byte	35
	.byte	'Ifx_P_OUT_Bits',0,6,164,3,3
	.word	1623
	.byte	35
	.byte	'Ifx_P_PCSR_Bits',0,6,187,3,3
	.word	5165
	.byte	35
	.byte	'Ifx_P_PDISC_Bits',0,6,209,3,3
	.word	4799
	.byte	35
	.byte	'Ifx_P_PDR0_Bits',0,6,230,3,3
	.word	3830
	.byte	35
	.byte	'Ifx_P_PDR1_Bits',0,6,251,3,3
	.word	4134
	.byte	35
	.byte	'Ifx_P_ACCEN0',0,6,136,4,3
	.word	8505
	.byte	35
	.byte	'Ifx_P_ACCEN1',0,6,144,4,3
	.word	7938
	.byte	35
	.byte	'Ifx_P_ESR',0,6,152,4,3
	.word	4750
	.byte	35
	.byte	'Ifx_P_ID',0,6,160,4,3
	.word	2590
	.byte	35
	.byte	'Ifx_P_IN',0,6,168,4,3
	.word	3781
	.byte	35
	.byte	'Ifx_P_IOCR0',0,6,176,4,3
	.word	2814
	.byte	35
	.byte	'Ifx_P_IOCR12',0,6,184,4,3
	.word	3466
	.byte	35
	.byte	'Ifx_P_IOCR4',0,6,192,4,3
	.word	3029
	.byte	35
	.byte	'Ifx_P_IOCR8',0,6,200,4,3
	.word	3246
	.byte	35
	.byte	'Ifx_P_LPCR',0,6,208,4,3
	.word	7833
	.byte	35
	.byte	'Ifx_P_OMCR',0,6,216,4,3
	.word	7513
	.byte	35
	.byte	'Ifx_P_OMCR0',0,6,224,4,3
	.word	6326
	.byte	35
	.byte	'Ifx_P_OMCR12',0,6,232,4,3
	.word	6832
	.byte	35
	.byte	'Ifx_P_OMCR4',0,6,240,4,3
	.word	6500
	.byte	35
	.byte	'Ifx_P_OMCR8',0,6,248,4,3
	.word	6676
	.byte	35
	.byte	'Ifx_P_OMR',0,6,128,5,3
	.word	2470
	.byte	35
	.byte	'Ifx_P_OMSR',0,6,136,5,3
	.word	7165
	.byte	35
	.byte	'Ifx_P_OMSR0',0,6,144,5,3
	.word	5636
	.byte	35
	.byte	'Ifx_P_OMSR12',0,6,152,5,3
	.word	6152
	.byte	35
	.byte	'Ifx_P_OMSR4',0,6,160,5,3
	.word	5805
	.byte	35
	.byte	'Ifx_P_OMSR8',0,6,168,5,3
	.word	5977
	.byte	35
	.byte	'Ifx_P_OUT',0,6,176,5,3
	.word	1899
	.byte	35
	.byte	'Ifx_P_PCSR',0,6,184,5,3
	.word	5489
	.byte	35
	.byte	'Ifx_P_PDISC',0,6,192,5,3
	.word	5125
	.byte	35
	.byte	'Ifx_P_PDR0',0,6,200,5,3
	.word	4094
	.byte	35
	.byte	'Ifx_P_PDR1',0,6,208,5,3
	.word	4410
	.byte	14
	.word	8545
	.byte	35
	.byte	'Ifx_P',0,6,128,6,3
	.word	141266
	.byte	17,5,73,9,1,18
	.byte	'IfxPort_ControlledBy_port',0,0,18
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,35
	.byte	'IfxPort_ControlledBy',0,5,77,3
	.word	141286
	.byte	17,5,81,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,35
	.byte	'IfxPort_InputMode',0,5,87,3
	.word	141377
	.byte	17,5,91,9,1,18
	.byte	'IfxPort_LvdsMode_high',0,0,18
	.byte	'IfxPort_LvdsMode_medium',0,1,0,35
	.byte	'IfxPort_LvdsMode',0,5,95,3
	.word	141528
	.byte	17,5,126,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,35
	.byte	'IfxPort_OutputIdx',0,5,136,1,3
	.word	141609
	.byte	17,5,140,1,9,1,18
	.byte	'IfxPort_OutputMode_none',0,0,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,35
	.byte	'IfxPort_OutputMode',0,5,145,1,3
	.word	141853
	.byte	17,5,151,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,35
	.byte	'IfxPort_PadDriver',0,5,165,1,3
	.word	141977
	.byte	17,5,169,1,9,1,18
	.byte	'IfxPort_PadSupply_3v',0,0,18
	.byte	'IfxPort_PadSupply_5v',0,1,0,35
	.byte	'IfxPort_PadSupply',0,5,173,1,3
	.word	142427
	.byte	17,5,177,1,9,1,18
	.byte	'IfxPort_PinFunctionMode_digital',0,0,18
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,35
	.byte	'IfxPort_PinFunctionMode',0,5,181,1,3
	.word	142507
	.byte	35
	.byte	'IfxPort_State',0,5,193,1,3
	.word	9125
	.byte	21,5,246,1,9,8,13
	.byte	'port',0
	.word	9120
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	609
	.byte	1,2,35,4,0,35
	.byte	'IfxPort_Pin',0,5,250,1,3
	.word	142637
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,35,68,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SMU_ACCEN0_Bits',0,35,102,3
	.word	142697
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,35,105,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,35
	.byte	'Ifx_SMU_ACCEN1_Bits',0,35,108,3
	.word	143254
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,35,111,16,4,11
	.byte	'DF0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SMU_AD_Bits',0,35,145,1,3
	.word	143331
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,35,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,35
	.byte	'Ifx_SMU_AEX_Bits',0,35,176,1,3
	.word	143881
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,35,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	4,0,2,35,0,0,35
	.byte	'Ifx_SMU_AEXCLR_Bits',0,35,207,1,3
	.word	144438
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,35,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	626
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	609
	.byte	1,0,2,35,3,0,35
	.byte	'Ifx_SMU_AFCNT_Bits',0,35,217,1,3
	.word	145034
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,35,220,1,16,4,11
	.byte	'SF0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_AG_Bits',0,35,254,1,3
	.word	145174
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,35,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	457
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	457
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	457
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	457
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	2,0,2,35,0,0,35
	.byte	'Ifx_SMU_AGC_Bits',0,35,142,2,3
	.word	145725
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,35,145,2,16,4,11
	.byte	'CF0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_AGCF_Bits',0,35,179,2,3
	.word	145987
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,35,182,2,16,4,11
	.byte	'FE0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_AGFSP_Bits',0,35,216,2,3
	.word	146542
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,35,219,2,16,4,11
	.byte	'DISR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,35
	.byte	'Ifx_SMU_CLC_Bits',0,35,226,2,3
	.word	147099
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,35,229,2,16,4,11
	.byte	'CMD',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SMU_CMD_Bits',0,35,234,2,3
	.word	147242
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,35,237,2,16,4,11
	.byte	'SSM',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,35
	.byte	'Ifx_SMU_DBG_Bits',0,35,241,2,3
	.word	147345
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,35,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	457
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	457
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	457
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	457
	.byte	10,0,2,35,0,0,35
	.byte	'Ifx_SMU_FSP_Bits',0,35,252,2,3
	.word	147433
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,35,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	626
	.byte	16,0,2,35,2,0,35
	.byte	'Ifx_SMU_ID_Bits',0,35,132,3,3
	.word	147588
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,35,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	457
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,35
	.byte	'Ifx_SMU_KEYS_Bits',0,35,140,3,3
	.word	147698
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,35,143,3,16,4,11
	.byte	'TGS',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,35
	.byte	'Ifx_SMU_OCS_Bits',0,35,153,3,3
	.word	147810
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,35,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	457
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	457
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	9,0,2,35,0,0,35
	.byte	'Ifx_SMU_PCTL_Bits',0,35,167,3,3
	.word	148002
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,35,170,3,16,4,11
	.byte	'TE0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_RMCTL_Bits',0,35,204,3,3
	.word	148233
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,35,207,3,16,4,11
	.byte	'EF0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_RMEF_Bits',0,35,241,3,3
	.word	148937
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,35,244,3,16,4,11
	.byte	'STS0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	457
	.byte	1,0,2,35,0,0,35
	.byte	'Ifx_SMU_RMSTS_Bits',0,35,150,4,3
	.word	149639
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,35,153,4,16,4,11
	.byte	'GID0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	457
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	457
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC00_Bits',0,35,161,4,3
	.word	150354
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,35,164,4,16,4,11
	.byte	'GID2',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	457
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	457
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC01_Bits',0,35,172,4,3
	.word	150522
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,35,175,4,16,4,11
	.byte	'GID0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	457
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	457
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC10_Bits',0,35,183,4,3
	.word	150690
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,35,186,4,16,4,11
	.byte	'GID2',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	457
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	457
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC11_Bits',0,35,194,4,3
	.word	150858
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,35,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	457
	.byte	24,0,2,35,0,0,35
	.byte	'Ifx_SMU_RTC_Bits',0,35,203,4,3
	.word	151026
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,35,206,4,16,4,11
	.byte	'CMD',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,35
	.byte	'Ifx_SMU_STS_Bits',0,35,220,4,3
	.word	151146
	.byte	12,35,228,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	142697
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_ACCEN0',0,35,233,4,3
	.word	151401
	.byte	12,35,236,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	143254
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_ACCEN1',0,35,241,4,3
	.word	151465
	.byte	12,35,244,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	143331
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AD',0,35,249,4,3
	.word	151529
	.byte	12,35,252,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	143881
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AEX',0,35,129,5,3
	.word	151589
	.byte	12,35,132,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	144438
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AEXCLR',0,35,137,5,3
	.word	151650
	.byte	12,35,140,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145034
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AFCNT',0,35,145,5,3
	.word	151714
	.byte	12,35,148,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145174
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AG',0,35,153,5,3
	.word	151777
	.byte	12,35,156,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145725
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AGC',0,35,161,5,3
	.word	151837
	.byte	12,35,164,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	145987
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AGCF',0,35,169,5,3
	.word	151898
	.byte	12,35,172,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	146542
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_AGFSP',0,35,177,5,3
	.word	151960
	.byte	12,35,180,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147099
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_CLC',0,35,185,5,3
	.word	152023
	.byte	12,35,188,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147242
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_CMD',0,35,193,5,3
	.word	152084
	.byte	12,35,196,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147345
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_DBG',0,35,201,5,3
	.word	152145
	.byte	12,35,204,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147433
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_FSP',0,35,209,5,3
	.word	152206
	.byte	12,35,212,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147588
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_ID',0,35,217,5,3
	.word	152267
	.byte	12,35,220,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147698
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_KEYS',0,35,225,5,3
	.word	152327
	.byte	12,35,228,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	147810
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_OCS',0,35,233,5,3
	.word	152389
	.byte	12,35,236,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	148002
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_PCTL',0,35,241,5,3
	.word	152450
	.byte	12,35,244,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	148233
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RMCTL',0,35,249,5,3
	.word	152512
	.byte	12,35,252,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	148937
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RMEF',0,35,129,6,3
	.word	152575
	.byte	12,35,132,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	149639
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RMSTS',0,35,137,6,3
	.word	152637
	.byte	12,35,140,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	150354
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC00',0,35,145,6,3
	.word	152700
	.byte	12,35,148,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	150522
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC01',0,35,153,6,3
	.word	152764
	.byte	12,35,156,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	150690
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC10',0,35,161,6,3
	.word	152828
	.byte	12,35,164,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	150858
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RTAC11',0,35,169,6,3
	.word	152892
	.byte	12,35,172,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	151026
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_RTC',0,35,177,6,3
	.word	152956
	.byte	12,35,180,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	151146
	.byte	4,2,35,0,0,35
	.byte	'Ifx_SMU_STS',0,35,185,6,3
	.word	153017
	.byte	17,7,210,2,9,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,35
	.byte	'IfxScuCcu_LowPowerDivRatio',0,7,216,2,3
	.word	153078
	.byte	17,7,220,2,9,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,18
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,35
	.byte	'IfxScuCcu_ModulationAmplitude',0,7,229,2,3
	.word	153271
	.byte	17,7,254,3,9,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,35
	.byte	'IfxScuCcu_PllInputClockSelection',0,7,131,4,3
	.word	153572
	.byte	17,7,135,4,9,1,18
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,18
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,18
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,18
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,35
	.byte	'IfxScuCcu_Traprequest',0,7,141,4,3
	.word	153746
	.byte	17,7,147,4,9,1,18
	.byte	'IfxScuCcu_ModEn_disabled',0,0,18
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,35
	.byte	'IfxScuCcu_ModEn',0,7,151,4,3
	.word	153900
	.byte	21,7,162,4,9,6,13
	.byte	'pDivider',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	609
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	609
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	609
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	609
	.byte	1,2,35,4,0,35
	.byte	'IfxScuCcu_PerPllConfig',0,7,171,4,3
	.word	153985
	.byte	21,7,176,4,9,4,13
	.byte	'pDivider',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	609
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	609
	.byte	1,2,35,2,0,35
	.byte	'IfxScuCcu_SysPllConfig',0,7,181,4,3
	.word	154123
	.byte	21,7,189,4,9,8,13
	.byte	'value',0
	.word	9730
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9730
	.byte	4,2,35,4,0,35
	.byte	'IfxScuCcu_CcuconRegConfig',0,7,193,4,3
	.word	154217
	.byte	21,7,197,4,9,6,13
	.byte	'k2Step',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	230
	.byte	4,2,35,2,0,35
	.byte	'IfxScuCcu_PllStepConfig',0,7,201,4,3
	.word	154288
	.byte	21,7,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	9730
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	153572
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	154123
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	153985
	.byte	6,2,35,10,0,35
	.byte	'IfxScuCcu_pllsParameterConfig',0,7,211,4,3
	.word	154362
	.byte	21,7,219,4,9,8,13
	.byte	'value',0
	.word	9730
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9730
	.byte	4,2,35,4,0,35
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,7,223,4,3
	.word	154507
	.byte	21,7,231,4,9,80,13
	.byte	'ccucon0',0
	.word	154217
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	154217
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	154217
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	154217
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	154217
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	154217
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	154217
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	154217
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	154217
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	154217
	.byte	8,2,35,72,0,35
	.byte	'IfxScuCcu_ClockDistributionConfig',0,7,243,4,3
	.word	154583
	.byte	21,7,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	154362
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	230
	.byte	4,2,35,16,0,35
	.byte	'IfxScuCcu_InitialStepConfig',0,7,251,4,3
	.word	154805
	.byte	22
	.word	154288
	.byte	3
	.word	154891
	.byte	21,7,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	154896
	.byte	4,2,35,4,0,35
	.byte	'IfxScuCcu_PllThrottleConfig',0,7,131,5,3
	.word	154901
	.byte	21,7,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	153900
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	153271
	.byte	1,2,35,1,0,35
	.byte	'IfxScuCcu_Mod_Config',0,7,141,5,3
	.word	154983
	.byte	17,8,141,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,35
	.byte	'IfxCpu_CounterMode',0,8,145,1,3
	.word	155057
	.byte	21,8,198,1,9,6,13
	.byte	'counter',0
	.word	9730
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	609
	.byte	1,2,35,4,0,35
	.byte	'IfxCpu_Counter',0,8,202,1,3
	.word	155146
	.byte	21,8,210,1,9,32,13
	.byte	'instruction',0
	.word	155146
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	155146
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	155146
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	155146
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	155146
	.byte	6,2,35,24,0,35
	.byte	'IfxCpu_Perf',0,8,217,1,3
	.word	155212
	.byte	35
	.byte	'Ifx_GETH_ACCEN0_Bits',0,13,107,3
	.word	52654
	.byte	35
	.byte	'Ifx_GETH_ACCEN1_Bits',0,13,113,3
	.word	53224
	.byte	35
	.byte	'Ifx_GETH_ACCEND_ACCEN0D_Bits',0,13,150,1,3
	.word	53650
	.byte	35
	.byte	'Ifx_GETH_ACCEND_ACCEN1D_Bits',0,13,156,1,3
	.word	54228
	.byte	35
	.byte	'Ifx_GETH_CLC_Bits',0,13,164,1,3
	.word	52097
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_CONTROL_Bits',0,13,177,1,3
	.word	48166
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_RXBUFFER_Bits',0,13,183,1,3
	.word	50775
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_RXDESC_Bits',0,13,189,1,3
	.word	50551
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_TXBUFFER_Bits',0,13,195,1,3
	.word	50662
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_TXDESC_Bits',0,13,201,1,3
	.word	50440
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_INTERRUPT_ENABLE_Bits',0,13,221,1,3
	.word	49730
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_MISS_FRAME_CNT_Bits',0,13,230,1,3
	.word	51232
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_RXDESC_LIST_ADDRESS_Bits',0,13,237,1,3
	.word	49093
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_RXDESC_RING_LENGTH_Bits',0,13,244,1,3
	.word	49603
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_RXDESC_TAIL_POINTER_Bits',0,13,251,1,3
	.word	49349
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_RX_CONTROL_Bits',0,13,137,2,3
	.word	48705
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_RX_INTERRUPT_WATCHDOG_TIMER_Bits',0,13,146,2,3
	.word	50064
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_SLOT_FUNCTION_CONTROL_STATUS_Bits',0,13,157,2,3
	.word	50237
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_STATUS_Bits',0,13,179,2,3
	.word	50888
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_TXDESC_LIST_ADDRESS_Bits',0,13,186,2,3
	.word	48964
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_TXDESC_RING_LENGTH_Bits',0,13,193,2,3
	.word	49476
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_TXDESC_TAIL_POINTER_Bits',0,13,200,2,3
	.word	49222
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_TX_CONTROL_Bits',0,13,216,2,3
	.word	48404
	.byte	35
	.byte	'Ifx_GETH_DMA_DEBUG_STATUS0_Bits',0,13,230,2,3
	.word	47782
	.byte	35
	.byte	'Ifx_GETH_DMA_DEBUG_STATUS1_Bits',0,13,238,2,3
	.word	48021
	.byte	35
	.byte	'Ifx_GETH_DMA_INTERRUPT_STATUS_Bits',0,13,252,2,3
	.word	47530
	.byte	35
	.byte	'Ifx_GETH_DMA_MODE_Bits',0,13,140,3,3
	.word	46922
	.byte	35
	.byte	'Ifx_GETH_DMA_SYSBUS_MODE_Bits',0,13,158,3,3
	.word	47190
	.byte	35
	.byte	'Ifx_GETH_GPCTL_Bits',0,13,177,3,3
	.word	52337
	.byte	35
	.byte	'Ifx_GETH_ID_Bits',0,13,185,3,3
	.word	52217
	.byte	35
	.byte	'Ifx_GETH_KRST0_Bits',0,13,193,3,3
	.word	53314
	.byte	35
	.byte	'Ifx_GETH_KRST1_Bits',0,13,200,3,3
	.word	53438
	.byte	35
	.byte	'Ifx_GETH_KRSTCLR_Bits',0,13,207,3,3
	.word	53543
	.byte	35
	.byte	'Ifx_GETH_MAC_1US_TIC_COUNTER_Bits',0,13,214,3,3
	.word	17607
	.byte	35
	.byte	'Ifx_GETH_MAC_ADDRESS_HIGH_Bits',0,13,225,3,3
	.word	20894
	.byte	35
	.byte	'Ifx_GETH_MAC_ADDRESS_HIGH0_Bits',0,13,234,3,3
	.word	20647
	.byte	35
	.byte	'Ifx_GETH_MAC_ADDRESS_LOW_Bits',0,13,240,3,3
	.word	21072
	.byte	35
	.byte	'Ifx_GETH_MAC_ADDRESS_LOW0_Bits',0,13,246,3,3
	.word	20797
	.byte	35
	.byte	'Ifx_GETH_MAC_CONFIGURATION_Bits',0,13,149,4,3
	.word	10343
	.byte	35
	.byte	'Ifx_GETH_MAC_CSR_SW_CTRL_Bits',0,13,158,4,3
	.word	20327
	.byte	35
	.byte	'Ifx_GETH_MAC_DEBUG_Bits',0,13,169,4,3
	.word	18186
	.byte	35
	.byte	'Ifx_GETH_MAC_EXT_CFG1_Bits',0,13,178,4,3
	.word	20481
	.byte	35
	.byte	'Ifx_GETH_MAC_EXT_CONFIGURATION_Bits',0,13,195,4,3
	.word	10827
	.byte	35
	.byte	'Ifx_GETH_MAC_HW_FEATURE0_Bits',0,13,224,4,3
	.word	18377
	.byte	35
	.byte	'Ifx_GETH_MAC_HW_FEATURE1_Bits',0,13,248,4,3
	.word	18937
	.byte	35
	.byte	'Ifx_GETH_MAC_HW_FEATURE2_Bits',0,13,137,5,3
	.word	19382
	.byte	35
	.byte	'Ifx_GETH_MAC_HW_FEATURE3_Bits',0,13,147,5,3
	.word	19714
	.byte	35
	.byte	'Ifx_GETH_MAC_INNER_VLAN_INCL_Bits',0,13,158,5,3
	.word	13201
	.byte	35
	.byte	'Ifx_GETH_MAC_INTERRUPT_ENABLE_Bits',0,13,175,5,3
	.word	15095
	.byte	35
	.byte	'Ifx_GETH_MAC_INTERRUPT_STATUS_Bits',0,13,196,5,3
	.word	14703
	.byte	35
	.byte	'Ifx_GETH_MAC_LPI_CONTROL_STATUS_Bits',0,13,216,5,3
	.word	16960
	.byte	35
	.byte	'Ifx_GETH_MAC_LPI_ENTRY_TIMER_Bits',0,13,224,5,3
	.word	17463
	.byte	35
	.byte	'Ifx_GETH_MAC_LPI_TIMERS_CONTROL_Bits',0,13,232,5,3
	.word	17325
	.byte	35
	.byte	'Ifx_GETH_MAC_MDIO_ADDRESS_Bits',0,13,251,5,3
	.word	19899
	.byte	35
	.byte	'Ifx_GETH_MAC_MDIO_DATA_Bits',0,13,130,6,3
	.word	20214
	.byte	35
	.byte	'Ifx_GETH_MAC_PACKET_FILTER_Bits',0,13,150,6,3
	.word	11133
	.byte	35
	.byte	'Ifx_GETH_MAC_PHYIF_CONTROL_STATUS_Bits',0,13,166,6,3
	.word	17736
	.byte	35
	.byte	'Ifx_GETH_MAC_PMT_CONTROL_STATUS_Bits',0,13,184,6,3
	.word	15648
	.byte	35
	.byte	'Ifx_GETH_MAC_PPS0_INTERVAL_Bits',0,13,190,6,3
	.word	40314
	.byte	35
	.byte	'Ifx_GETH_MAC_PPS0_TARGET_TIME_NANOSECONDS_Bits',0,13,197,6,3
	.word	40181
	.byte	35
	.byte	'Ifx_GETH_MAC_PPS0_TARGET_TIME_SECONDS_Bits',0,13,203,6,3
	.word	40072
	.byte	35
	.byte	'Ifx_GETH_MAC_PPS0_WIDTH_Bits',0,13,209,6,3
	.word	40413
	.byte	35
	.byte	'Ifx_GETH_MAC_PPS_CONTROL_Bits',0,13,230,6,3
	.word	39630
	.byte	35
	.byte	'Ifx_GETH_MAC_Q0_TX_FLOW_CTRL_Bits',0,13,242,6,3
	.word	13383
	.byte	35
	.byte	'Ifx_GETH_MAC_RWK_PACKET_FILTER_Bits',0,13,248,6,3
	.word	16000
	.byte	35
	.byte	'Ifx_GETH_MAC_RXQ_CTRL0_Bits',0,13,131,7,3
	.word	14014
	.byte	35
	.byte	'Ifx_GETH_MAC_RXQ_CTRL1_Bits',0,13,150,7,3
	.word	14207
	.byte	35
	.byte	'Ifx_GETH_MAC_RXQ_CTRL2_Bits',0,13,159,7,3
	.word	14559
	.byte	35
	.byte	'Ifx_GETH_MAC_RXQ_CTRL4_Bits',0,13,173,7,3
	.word	13771
	.byte	35
	.byte	'Ifx_GETH_MAC_RX_FLOW_CTRL_Bits',0,13,183,7,3
	.word	13597
	.byte	35
	.byte	'Ifx_GETH_MAC_RX_TX_STATUS_Bits',0,13,197,7,3
	.word	15411
	.byte	35
	.byte	'Ifx_GETH_MAC_SUB_SECOND_INCREMENT_Bits',0,13,206,7,3
	.word	37301
	.byte	35
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_Bits',0,13,213,7,3
	.word	38036
	.byte	35
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS_Bits',0,13,220,7,3
	.word	37569
	.byte	35
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_Bits',0,13,227,7,3
	.word	37806
	.byte	35
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_SECONDS_Bits',0,13,233,7,3
	.word	37468
	.byte	35
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_SECONDS_UPDATE_Bits',0,13,239,7,3
	.word	37698
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_ADDEND_Bits',0,13,245,7,3
	.word	37937
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_CONTROL_Bits',0,13,146,8,3
	.word	36721
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_ASYM_CORR_Bits',0,13,152,8,3
	.word	38961
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_Bits',0,13,158,8,3
	.word	39188
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_Bits',0,13,166,8,3
	.word	39467
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_ASYM_CORR_Bits',0,13,172,8,3
	.word	38849
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_Bits',0,13,178,8,3
	.word	39072
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_Bits',0,13,186,8,3
	.word	39303
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_STATUS_Bits',0,13,207,8,3
	.word	38174
	.byte	35
	.byte	'Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_Bits',0,13,214,8,3
	.word	38599
	.byte	35
	.byte	'Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_SECONDS_Bits',0,13,220,8,3
	.word	38736
	.byte	35
	.byte	'Ifx_GETH_MAC_VERSION_Bits',0,13,228,8,3
	.word	18051
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_HASH_TABLE_Bits',0,13,235,8,3
	.word	12607
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_INCL_Bits',0,13,251,8,3
	.word	12728
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_INCL_Q_Bits',0,13,132,9,3
	.word	12991
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_TAG_CTRL_Bits',0,13,153,9,3
	.word	11651
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_TAG_DATA_Bits',0,13,168,9,3
	.word	12018
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_TAG_FILTER_Bits',0,13,183,9,3
	.word	12280
	.byte	35
	.byte	'Ifx_GETH_MAC_WATCHDOG_TIMEOUT_Bits',0,13,192,9,3
	.word	11485
	.byte	35
	.byte	'Ifx_GETH_MMC_CONTROL_Bits',0,13,206,9,3
	.word	21179
	.byte	35
	.byte	'Ifx_GETH_MMC_IPC_RX_INTERRUPT_Bits',0,13,241,9,3
	.word	32546
	.byte	35
	.byte	'Ifx_GETH_MMC_IPC_RX_INTERRUPT_MASK_Bits',0,13,148,10,3
	.word	31760
	.byte	35
	.byte	'Ifx_GETH_MMC_RX_INTERRUPT_Bits',0,13,182,10,3
	.word	21433
	.byte	35
	.byte	'Ifx_GETH_MMC_RX_INTERRUPT_MASK_Bits',0,13,216,10,3
	.word	22923
	.byte	35
	.byte	'Ifx_GETH_MMC_TX_INTERRUPT_Bits',0,13,250,10,3
	.word	22179
	.byte	35
	.byte	'Ifx_GETH_MMC_TX_INTERRUPT_MASK_Bits',0,13,156,11,3
	.word	23674
	.byte	35
	.byte	'Ifx_GETH_MTL_INTERRUPT_STATUS_Bits',0,13,169,11,3
	.word	40778
	.byte	35
	.byte	'Ifx_GETH_MTL_OPERATION_MODE_Bits',0,13,183,11,3
	.word	40520
	.byte	35
	.byte	'Ifx_GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS_Bits',0,13,198,11,3
	.word	42483
	.byte	35
	.byte	'Ifx_GETH_MTL_Q_INTERRUPT_CONTROL_STATUS_Bits',0,13,213,11,3
	.word	45501
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ0_CONTROL_Bits',0,13,221,11,3
	.word	43601
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ0_DEBUG_Bits',0,13,233,11,3
	.word	43387
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_Bits',0,13,244,11,3
	.word	43159
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ0_OPERATION_MODE_Bits',0,13,134,12,3
	.word	42839
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ_CONTROL_Bits',0,13,142,12,3
	.word	46614
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ_DEBUG_Bits',0,13,154,12,3
	.word	46401
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ_DMA_MAP0_Bits',0,13,175,12,3
	.word	41015
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ_MISSED_PACKET_OVERFLOW_CNT_Bits',0,13,186,12,3
	.word	46174
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ_OPERATION_MODE_Bits',0,13,204,12,3
	.word	45855
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0_DEBUG_Bits',0,13,219,12,3
	.word	41799
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0_ETS_STATUS_Bits',0,13,226,12,3
	.word	42075
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0_OPERATION_MODE_Bits',0,13,238,12,3
	.word	41447
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0_QUANTUM_WEIGHT_Bits',0,13,245,12,3
	.word	42195
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0_UNDERFLOW_Bits',0,13,253,12,3
	.word	41655
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_DEBUG_Bits',0,13,140,13,3
	.word	44220
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_ETS_CONTROL_Bits',0,13,150,13,3
	.word	44495
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_ETS_STATUS_Bits',0,13,157,13,3
	.word	44667
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_HICREDIT_Bits',0,13,164,13,3
	.word	45035
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_LOCREDIT_Bits',0,13,171,13,3
	.word	45151
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_OPERATION_MODE_Bits',0,13,183,13,3
	.word	43870
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_QUANTUM_WEIGHT_Bits',0,13,190,13,3
	.word	44786
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_SENDSLOPECREDIT_Bits',0,13,197,13,3
	.word	44911
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_UNDERFLOW_Bits',0,13,205,13,3
	.word	44077
	.byte	35
	.byte	'Ifx_GETH_RWK_FILTER_BYTE_MASK_Bits',0,13,211,13,3
	.word	16697
	.byte	35
	.byte	'Ifx_GETH_RWK_FILTER_COMMAND_0_Bits',0,13,224,13,3
	.word	16106
	.byte	35
	.byte	'Ifx_GETH_RWK_FILTER_CRC_Bits',0,13,231,13,3
	.word	16574
	.byte	35
	.byte	'Ifx_GETH_RWK_FILTER_OFFSET_0_Bits',0,13,240,13,3
	.word	16388
	.byte	35
	.byte	'Ifx_GETH_RXICMP_ERROR_OCTETS_Bits',0,13,246,13,3
	.word	36604
	.byte	35
	.byte	'Ifx_GETH_RXICMP_ERROR_PACKETS_Bits',0,13,253,13,3
	.word	35057
	.byte	35
	.byte	'Ifx_GETH_RXICMP_GOOD_OCTETS_Bits',0,13,131,14,3
	.word	36500
	.byte	35
	.byte	'Ifx_GETH_RXICMP_GOOD_PACKETS_Bits',0,13,138,14,3
	.word	34929
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_FRAGMENTED_OCTETS_Bits',0,13,144,14,3
	.word	35520
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_FRAGMENTED_PACKETS_Bits',0,13,151,14,3
	.word	33732
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_GOOD_OCTETS_Bits',0,13,157,14,3
	.word	35187
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_GOOD_PACKETS_Bits',0,13,164,14,3
	.word	33327
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_HEADER_ERROR_OCTETS_Bits',0,13,170,14,3
	.word	35291
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_HEADER_ERROR_PACKETS_Bits',0,13,177,14,3
	.word	33455
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_NO_PAYLOAD_OCTETS_Bits',0,13,183,14,3
	.word	35407
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_NO_PAYLOAD_PACKETS_Bits',0,13,190,14,3
	.word	33595
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS_Bits',0,13,197,14,3
	.word	33868
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_Bits',0,13,203,14,3
	.word	35632
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_GOOD_OCTETS_Bits',0,13,209,14,3
	.word	35755
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_GOOD_PACKETS_Bits',0,13,216,14,3
	.word	34016
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_HEADER_ERROR_OCTETS_Bits',0,13,222,14,3
	.word	35859
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_HEADER_ERROR_PACKETS_Bits',0,13,229,14,3
	.word	34144
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_NO_PAYLOAD_OCTETS_Bits',0,13,235,14,3
	.word	35975
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_NO_PAYLOAD_PACKETS_Bits',0,13,242,14,3
	.word	34284
	.byte	35
	.byte	'Ifx_GETH_RXTCP_ERROR_OCTETS_Bits',0,13,248,14,3
	.word	36396
	.byte	35
	.byte	'Ifx_GETH_RXTCP_ERROR_PACKETS_Bits',0,13,255,14,3
	.word	34801
	.byte	35
	.byte	'Ifx_GETH_RXTCP_GOOD_OCTETS_Bits',0,13,133,15,3
	.word	36294
	.byte	35
	.byte	'Ifx_GETH_RXTCP_GOOD_PACKETS_Bits',0,13,140,15,3
	.word	34675
	.byte	35
	.byte	'Ifx_GETH_RXUDP_ERROR_OCTETS_Bits',0,13,146,15,3
	.word	36190
	.byte	35
	.byte	'Ifx_GETH_RXUDP_ERROR_PACKETS_Bits',0,13,153,15,3
	.word	34547
	.byte	35
	.byte	'Ifx_GETH_RXUDP_GOOD_OCTETS_Bits',0,13,159,15,3
	.word	36088
	.byte	35
	.byte	'Ifx_GETH_RXUDP_GOOD_PACKETS_Bits',0,13,166,15,3
	.word	34421
	.byte	35
	.byte	'Ifx_GETH_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_Bits',0,13,173,15,3
	.word	29952
	.byte	35
	.byte	'Ifx_GETH_RX_128TO255OCTETS_PACKETS_GOOD_BAD_Bits',0,13,180,15,3
	.word	29512
	.byte	35
	.byte	'Ifx_GETH_RX_256TO511OCTETS_PACKETS_GOOD_BAD_Bits',0,13,187,15,3
	.word	29658
	.byte	35
	.byte	'Ifx_GETH_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_Bits',0,13,194,15,3
	.word	29804
	.byte	35
	.byte	'Ifx_GETH_RX_64OCTETS_PACKETS_GOOD_BAD_Bits',0,13,201,15,3
	.word	29233
	.byte	35
	.byte	'Ifx_GETH_RX_65TO127OCTETS_PACKETS_GOOD_BAD_Bits',0,13,208,15,3
	.word	29368
	.byte	35
	.byte	'Ifx_GETH_RX_ALIGNMENT_ERROR_PACKETS_Bits',0,13,215,15,3
	.word	28579
	.byte	35
	.byte	'Ifx_GETH_RX_BROADCAST_PACKETS_GOOD_Bits',0,13,222,15,3
	.word	28191
	.byte	35
	.byte	'Ifx_GETH_RX_CONTROL_PACKETS_GOOD_Bits',0,13,229,15,3
	.word	31144
	.byte	35
	.byte	'Ifx_GETH_RX_CRC_ERROR_PACKETS_Bits',0,13,236,15,3
	.word	28453
	.byte	35
	.byte	'Ifx_GETH_RX_FIFO_OVERFLOW_PACKETS_Bits',0,13,243,15,3
	.word	30618
	.byte	35
	.byte	'Ifx_GETH_RX_JABBER_ERROR_PACKETS_Bits',0,13,250,15,3
	.word	28840
	.byte	35
	.byte	'Ifx_GETH_RX_LENGTH_ERROR_PACKETS_Bits',0,13,129,16,3
	.word	30229
	.byte	35
	.byte	'Ifx_GETH_RX_LPI_TRAN_CNTR_Bits',0,13,136,16,3
	.word	31638
	.byte	35
	.byte	'Ifx_GETH_RX_LPI_USEC_CNTR_Bits',0,13,143,16,3
	.word	31516
	.byte	35
	.byte	'Ifx_GETH_RX_MULTICAST_PACKETS_GOOD_Bits',0,13,150,16,3
	.word	28322
	.byte	35
	.byte	'Ifx_GETH_RX_OCTET_COUNT_GOOD_Bits',0,13,156,16,3
	.word	28091
	.byte	35
	.byte	'Ifx_GETH_RX_OCTET_COUNT_GOOD_BAD_Bits',0,13,162,16,3
	.word	27986
	.byte	35
	.byte	'Ifx_GETH_RX_OUT_OF_RANGE_TYPE_PACKETS_Bits',0,13,169,16,3
	.word	30358
	.byte	35
	.byte	'Ifx_GETH_RX_OVERSIZE_PACKETS_GOOD_Bits',0,13,176,16,3
	.word	29102
	.byte	35
	.byte	'Ifx_GETH_RX_PACKETS_COUNT_GOOD_BAD_Bits',0,13,183,16,3
	.word	27856
	.byte	35
	.byte	'Ifx_GETH_RX_PAUSE_PACKETS_Bits',0,13,190,16,3
	.word	30494
	.byte	35
	.byte	'Ifx_GETH_RX_RECEIVE_ERROR_PACKETS_Bits',0,13,197,16,3
	.word	31014
	.byte	35
	.byte	'Ifx_GETH_RX_RUNT_ERROR_PACKETS_Bits',0,13,204,16,3
	.word	28712
	.byte	35
	.byte	'Ifx_GETH_RX_UNDERSIZE_PACKETS_GOOD_Bits',0,13,211,16,3
	.word	28969
	.byte	35
	.byte	'Ifx_GETH_RX_UNICAST_PACKETS_GOOD_Bits',0,13,218,16,3
	.word	30100
	.byte	35
	.byte	'Ifx_GETH_RX_VLAN_PACKETS_GOOD_BAD_Bits',0,13,225,16,3
	.word	30750
	.byte	35
	.byte	'Ifx_GETH_RX_WATCHDOG_ERROR_PACKETS_Bits',0,13,232,16,3
	.word	30883
	.byte	35
	.byte	'Ifx_GETH_SKEWCTL_Bits',0,13,241,16,3
	.word	54399
	.byte	35
	.byte	'Ifx_GETH_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_Bits',0,13,248,16,3
	.word	25638
	.byte	35
	.byte	'Ifx_GETH_TX_128TO255OCTETS_PACKETS_GOOD_BAD_Bits',0,13,255,16,3
	.word	25198
	.byte	35
	.byte	'Ifx_GETH_TX_256TO511OCTETS_PACKETS_GOOD_BAD_Bits',0,13,134,17,3
	.word	25344
	.byte	35
	.byte	'Ifx_GETH_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_Bits',0,13,141,17,3
	.word	25490
	.byte	35
	.byte	'Ifx_GETH_TX_64OCTETS_PACKETS_GOOD_BAD_Bits',0,13,148,17,3
	.word	24919
	.byte	35
	.byte	'Ifx_GETH_TX_65TO127OCTETS_PACKETS_GOOD_BAD_Bits',0,13,155,17,3
	.word	25054
	.byte	35
	.byte	'Ifx_GETH_TX_BROADCAST_PACKETS_GOOD_Bits',0,13,162,17,3
	.word	24657
	.byte	35
	.byte	'Ifx_GETH_TX_BROADCAST_PACKETS_GOOD_BAD_Bits',0,13,169,17,3
	.word	26056
	.byte	35
	.byte	'Ifx_GETH_TX_CARRIER_ERROR_PACKETS_Bits',0,13,176,17,3
	.word	26999
	.byte	35
	.byte	'Ifx_GETH_TX_DEFERRED_PACKETS_Bits',0,13,183,17,3
	.word	26607
	.byte	35
	.byte	'Ifx_GETH_TX_EXCESSIVE_COLLISION_PACKETS_Bits',0,13,190,17,3
	.word	26863
	.byte	35
	.byte	'Ifx_GETH_TX_EXCESSIVE_DEFERRAL_ERROR_Bits',0,13,197,17,3
	.word	27351
	.byte	35
	.byte	'Ifx_GETH_TX_LATE_COLLISION_PACKETS_Bits',0,13,204,17,3
	.word	26731
	.byte	35
	.byte	'Ifx_GETH_TX_LPI_TRAN_CNTR_Bits',0,13,211,17,3
	.word	31394
	.byte	35
	.byte	'Ifx_GETH_TX_LPI_USEC_CNTR_Bits',0,13,218,17,3
	.word	31272
	.byte	35
	.byte	'Ifx_GETH_TX_MULTICAST_PACKETS_GOOD_Bits',0,13,225,17,3
	.word	24788
	.byte	35
	.byte	'Ifx_GETH_TX_MULTICAST_PACKETS_GOOD_BAD_Bits',0,13,232,17,3
	.word	25920
	.byte	35
	.byte	'Ifx_GETH_TX_MULTIPLE_COLLISION_GOOD_PACKETS_Bits',0,13,239,17,3
	.word	26465
	.byte	35
	.byte	'Ifx_GETH_TX_OCTET_COUNT_GOOD_Bits',0,13,245,17,3
	.word	27127
	.byte	35
	.byte	'Ifx_GETH_TX_OCTET_COUNT_GOOD_BAD_Bits',0,13,251,17,3
	.word	24423
	.byte	35
	.byte	'Ifx_GETH_TX_OSIZE_PACKETS_GOOD_Bits',0,13,130,18,3
	.word	27730
	.byte	35
	.byte	'Ifx_GETH_TX_PACKET_COUNT_GOOD_Bits',0,13,137,18,3
	.word	27227
	.byte	35
	.byte	'Ifx_GETH_TX_PACKET_COUNT_GOOD_BAD_Bits',0,13,144,18,3
	.word	24528
	.byte	35
	.byte	'Ifx_GETH_TX_PAUSE_PACKETS_Bits',0,13,151,18,3
	.word	27484
	.byte	35
	.byte	'Ifx_GETH_TX_SINGLE_COLLISION_GOOD_PACKETS_Bits',0,13,158,18,3
	.word	26325
	.byte	35
	.byte	'Ifx_GETH_TX_UNDERFLOW_ERROR_PACKETS_Bits',0,13,165,18,3
	.word	26192
	.byte	35
	.byte	'Ifx_GETH_TX_UNICAST_PACKETS_GOOD_BAD_Bits',0,13,172,18,3
	.word	25786
	.byte	35
	.byte	'Ifx_GETH_TX_VLAN_PACKETS_GOOD_Bits',0,13,179,18,3
	.word	27605
	.byte	35
	.byte	'Ifx_GETH_ACCEN0',0,13,192,18,3
	.word	53184
	.byte	35
	.byte	'Ifx_GETH_ACCEN1',0,13,200,18,3
	.word	53274
	.byte	35
	.byte	'Ifx_GETH_ACCEND_ACCEN0D',0,13,208,18,3
	.word	54188
	.byte	35
	.byte	'Ifx_GETH_ACCEND_ACCEN1D',0,13,216,18,3
	.word	54287
	.byte	35
	.byte	'Ifx_GETH_CLC',0,13,224,18,3
	.word	52177
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_CONTROL',0,13,232,18,3
	.word	48364
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_RXBUFFER',0,13,240,18,3
	.word	50848
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_RXDESC',0,13,248,18,3
	.word	50622
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_TXBUFFER',0,13,128,19,3
	.word	50735
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_CURRENT_APP_TXDESC',0,13,136,19,3
	.word	50511
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_INTERRUPT_ENABLE',0,13,144,19,3
	.word	50024
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_MISS_FRAME_CNT',0,13,152,19,3
	.word	51353
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_RXDESC_LIST_ADDRESS',0,13,160,19,3
	.word	49182
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_RXDESC_RING_LENGTH',0,13,168,19,3
	.word	49690
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_RXDESC_TAIL_POINTER',0,13,176,19,3
	.word	49436
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_RX_CONTROL',0,13,184,19,3
	.word	48924
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_RX_INTERRUPT_WATCHDOG_TIMER',0,13,192,19,3
	.word	50197
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_SLOT_FUNCTION_CONTROL_STATUS',0,13,200,19,3
	.word	50400
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_STATUS',0,13,208,19,3
	.word	51192
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_TXDESC_LIST_ADDRESS',0,13,216,19,3
	.word	49053
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_TXDESC_RING_LENGTH',0,13,224,19,3
	.word	49563
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_TXDESC_TAIL_POINTER',0,13,232,19,3
	.word	49309
	.byte	35
	.byte	'Ifx_GETH_DMA_CH_TX_CONTROL',0,13,240,19,3
	.word	48665
	.byte	35
	.byte	'Ifx_GETH_DMA_DEBUG_STATUS0',0,13,248,19,3
	.word	47981
	.byte	35
	.byte	'Ifx_GETH_DMA_DEBUG_STATUS1',0,13,128,20,3
	.word	48115
	.byte	35
	.byte	'Ifx_GETH_DMA_INTERRUPT_STATUS',0,13,136,20,3
	.word	47742
	.byte	35
	.byte	'Ifx_GETH_DMA_MODE',0,13,144,20,3
	.word	47150
	.byte	35
	.byte	'Ifx_GETH_DMA_SYSBUS_MODE',0,13,152,20,3
	.word	47490
	.byte	35
	.byte	'Ifx_GETH_GPCTL',0,13,160,20,3
	.word	52614
	.byte	35
	.byte	'Ifx_GETH_ID',0,13,168,20,3
	.word	52297
	.byte	35
	.byte	'Ifx_GETH_KRST0',0,13,176,20,3
	.word	53398
	.byte	35
	.byte	'Ifx_GETH_KRST1',0,13,184,20,3
	.word	53503
	.byte	35
	.byte	'Ifx_GETH_KRSTCLR',0,13,192,20,3
	.word	53610
	.byte	35
	.byte	'Ifx_GETH_MAC_1US_TIC_COUNTER',0,13,200,20,3
	.word	17696
	.byte	35
	.byte	'Ifx_GETH_MAC_ADDRESS_HIGH',0,13,208,20,3
	.word	21032
	.byte	35
	.byte	'Ifx_GETH_MAC_ADDRESS_HIGH0',0,13,216,20,3
	.word	20757
	.byte	35
	.byte	'Ifx_GETH_MAC_ADDRESS_LOW',0,13,224,20,3
	.word	21128
	.byte	35
	.byte	'Ifx_GETH_MAC_ADDRESS_LOW0',0,13,232,20,3
	.word	20854
	.byte	35
	.byte	'Ifx_GETH_MAC_CONFIGURATION',0,13,240,20,3
	.word	10787
	.byte	35
	.byte	'Ifx_GETH_MAC_CSR_SW_CTRL',0,13,248,20,3
	.word	20441
	.byte	35
	.byte	'Ifx_GETH_MAC_DEBUG',0,13,128,21,3
	.word	18337
	.byte	35
	.byte	'Ifx_GETH_MAC_EXT_CFG1',0,13,136,21,3
	.word	20596
	.byte	35
	.byte	'Ifx_GETH_MAC_EXT_CONFIGURATION',0,13,144,21,3
	.word	11093
	.byte	35
	.byte	'Ifx_GETH_MAC_HW_FEATURE0',0,13,152,21,3
	.word	18897
	.byte	35
	.byte	'Ifx_GETH_MAC_HW_FEATURE1',0,13,160,21,3
	.word	19342
	.byte	35
	.byte	'Ifx_GETH_MAC_HW_FEATURE2',0,13,168,21,3
	.word	19674
	.byte	35
	.byte	'Ifx_GETH_MAC_HW_FEATURE3',0,13,176,21,3
	.word	19848
	.byte	35
	.byte	'Ifx_GETH_MAC_INNER_VLAN_INCL',0,13,184,21,3
	.word	13343
	.byte	35
	.byte	'Ifx_GETH_MAC_INTERRUPT_ENABLE',0,13,192,21,3
	.word	15371
	.byte	35
	.byte	'Ifx_GETH_MAC_INTERRUPT_STATUS',0,13,200,21,3
	.word	15055
	.byte	35
	.byte	'Ifx_GETH_MAC_LPI_CONTROL_STATUS',0,13,208,21,3
	.word	17285
	.byte	35
	.byte	'Ifx_GETH_MAC_LPI_ENTRY_TIMER',0,13,216,21,3
	.word	17567
	.byte	35
	.byte	'Ifx_GETH_MAC_LPI_TIMERS_CONTROL',0,13,224,21,3
	.word	17423
	.byte	35
	.byte	'Ifx_GETH_MAC_MDIO_ADDRESS',0,13,232,21,3
	.word	20174
	.byte	35
	.byte	'Ifx_GETH_MAC_MDIO_DATA',0,13,240,21,3
	.word	20278
	.byte	35
	.byte	'Ifx_GETH_MAC_PACKET_FILTER',0,13,248,21,3
	.word	11445
	.byte	35
	.byte	'Ifx_GETH_MAC_PHYIF_CONTROL_STATUS',0,13,128,22,3
	.word	18002
	.byte	35
	.byte	'Ifx_GETH_MAC_PMT_CONTROL_STATUS',0,13,136,22,3
	.word	15960
	.byte	35
	.byte	'Ifx_GETH_MAC_PPS0_INTERVAL',0,13,144,22,3
	.word	40373
	.byte	35
	.byte	'Ifx_GETH_MAC_PPS0_TARGET_TIME_NANOSECONDS',0,13,152,22,3
	.word	40274
	.byte	35
	.byte	'Ifx_GETH_MAC_PPS0_TARGET_TIME_SECONDS',0,13,160,22,3
	.word	40141
	.byte	35
	.byte	'Ifx_GETH_MAC_PPS0_WIDTH',0,13,168,22,3
	.word	40471
	.byte	35
	.byte	'Ifx_GETH_MAC_PPS_CONTROL',0,13,176,22,3
	.word	40032
	.byte	35
	.byte	'Ifx_GETH_MAC_Q0_TX_FLOW_CTRL',0,13,184,22,3
	.word	13548
	.byte	35
	.byte	'Ifx_GETH_MAC_RWK_PACKET_FILTER',0,13,192,22,3
	.word	16066
	.byte	35
	.byte	'Ifx_GETH_MAC_RXQ_CTRL0',0,13,200,22,3
	.word	14167
	.byte	35
	.byte	'Ifx_GETH_MAC_RXQ_CTRL1',0,13,208,22,3
	.word	14519
	.byte	35
	.byte	'Ifx_GETH_MAC_RXQ_CTRL2',0,13,216,22,3
	.word	14663
	.byte	35
	.byte	'Ifx_GETH_MAC_RXQ_CTRL4',0,13,224,22,3
	.word	13974
	.byte	35
	.byte	'Ifx_GETH_MAC_RX_FLOW_CTRL',0,13,232,22,3
	.word	13731
	.byte	35
	.byte	'Ifx_GETH_MAC_RX_TX_STATUS',0,13,240,22,3
	.word	15608
	.byte	35
	.byte	'Ifx_GETH_MAC_SUB_SECOND_INCREMENT',0,13,248,22,3
	.word	37428
	.byte	35
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS',0,13,128,23,3
	.word	38134
	.byte	35
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS',0,13,136,23,3
	.word	37658
	.byte	35
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE',0,13,144,23,3
	.word	37897
	.byte	35
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_SECONDS',0,13,152,23,3
	.word	37529
	.byte	35
	.byte	'Ifx_GETH_MAC_SYSTEM_TIME_SECONDS_UPDATE',0,13,160,23,3
	.word	37766
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_ADDEND',0,13,168,23,3
	.word	37996
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_CONTROL',0,13,176,23,3
	.word	37261
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_ASYM_CORR',0,13,184,23,3
	.word	39032
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND',0,13,192,23,3
	.word	39263
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC',0,13,200,23,3
	.word	39590
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_ASYM_CORR',0,13,208,23,3
	.word	38921
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND',0,13,216,23,3
	.word	39148
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC',0,13,224,23,3
	.word	39427
	.byte	35
	.byte	'Ifx_GETH_MAC_TIMESTAMP_STATUS',0,13,232,23,3
	.word	38559
	.byte	35
	.byte	'Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS',0,13,240,23,3
	.word	38696
	.byte	35
	.byte	'Ifx_GETH_MAC_TX_TIMESTAMP_STATUS_SECONDS',0,13,248,23,3
	.word	38809
	.byte	35
	.byte	'Ifx_GETH_MAC_VERSION',0,13,128,24,3
	.word	18146
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_HASH_TABLE',0,13,136,24,3
	.word	12688
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_INCL',0,13,144,24,3
	.word	12951
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_INCL_Q',0,13,152,24,3
	.word	13106
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_TAG_CTRL',0,13,160,24,3
	.word	11978
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_TAG_DATA',0,13,168,24,3
	.word	12240
	.byte	35
	.byte	'Ifx_GETH_MAC_VLAN_TAG_FILTER',0,13,176,24,3
	.word	12504
	.byte	35
	.byte	'Ifx_GETH_MAC_WATCHDOG_TIMEOUT',0,13,184,24,3
	.word	11602
	.byte	35
	.byte	'Ifx_GETH_MMC_CONTROL',0,13,192,24,3
	.word	21393
	.byte	35
	.byte	'Ifx_GETH_MMC_IPC_RX_INTERRUPT',0,13,200,24,3
	.word	33287
	.byte	35
	.byte	'Ifx_GETH_MMC_IPC_RX_INTERRUPT_MASK',0,13,208,24,3
	.word	32506
	.byte	35
	.byte	'Ifx_GETH_MMC_RX_INTERRUPT',0,13,216,24,3
	.word	22139
	.byte	35
	.byte	'Ifx_GETH_MMC_RX_INTERRUPT_MASK',0,13,224,24,3
	.word	23634
	.byte	35
	.byte	'Ifx_GETH_MMC_TX_INTERRUPT',0,13,232,24,3
	.word	22883
	.byte	35
	.byte	'Ifx_GETH_MMC_TX_INTERRUPT_MASK',0,13,240,24,3
	.word	24383
	.byte	35
	.byte	'Ifx_GETH_MTL_INTERRUPT_STATUS',0,13,248,24,3
	.word	40975
	.byte	35
	.byte	'Ifx_GETH_MTL_OPERATION_MODE',0,13,128,25,3
	.word	40738
	.byte	35
	.byte	'Ifx_GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS',0,13,136,25,3
	.word	42736
	.byte	35
	.byte	'Ifx_GETH_MTL_Q_INTERRUPT_CONTROL_STATUS',0,13,144,25,3
	.word	45753
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ0_CONTROL',0,13,152,25,3
	.word	43707
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ0_DEBUG',0,13,160,25,3
	.word	43561
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT',0,13,168,25,3
	.word	43347
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ0_OPERATION_MODE',0,13,176,25,3
	.word	43119
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ_CONTROL',0,13,184,25,3
	.word	46719
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ_DEBUG',0,13,192,25,3
	.word	46574
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ_DMA_MAP0',0,13,200,25,3
	.word	41396
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ_MISSED_PACKET_OVERFLOW_CNT',0,13,208,25,3
	.word	46361
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ_OPERATION_MODE',0,13,216,25,3
	.word	46134
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0_DEBUG',0,13,224,25,3
	.word	42035
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0_ETS_STATUS',0,13,232,25,3
	.word	42155
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0_OPERATION_MODE',0,13,240,25,3
	.word	41615
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0_QUANTUM_WEIGHT',0,13,248,25,3
	.word	42281
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0_UNDERFLOW',0,13,128,26,3
	.word	41759
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_DEBUG',0,13,136,26,3
	.word	44455
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_ETS_CONTROL',0,13,144,26,3
	.word	44627
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_ETS_STATUS',0,13,152,26,3
	.word	44746
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_HICREDIT',0,13,160,26,3
	.word	45111
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_LOCREDIT',0,13,168,26,3
	.word	45227
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_OPERATION_MODE',0,13,176,26,3
	.word	44037
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_QUANTUM_WEIGHT',0,13,184,26,3
	.word	44871
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_SENDSLOPECREDIT',0,13,192,26,3
	.word	44995
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ_UNDERFLOW',0,13,200,26,3
	.word	44180
	.byte	35
	.byte	'Ifx_GETH_RWK_FILTER_BYTE_MASK',0,13,208,26,3
	.word	16769
	.byte	35
	.byte	'Ifx_GETH_RWK_FILTER_COMMAND_0',0,13,216,26,3
	.word	16348
	.byte	35
	.byte	'Ifx_GETH_RWK_FILTER_CRC',0,13,224,26,3
	.word	16657
	.byte	35
	.byte	'Ifx_GETH_RWK_FILTER_OFFSET_0',0,13,232,26,3
	.word	16534
	.byte	35
	.byte	'Ifx_GETH_RXICMP_ERROR_OCTETS',0,13,240,26,3
	.word	36670
	.byte	35
	.byte	'Ifx_GETH_RXICMP_ERROR_PACKETS',0,13,248,26,3
	.word	35147
	.byte	35
	.byte	'Ifx_GETH_RXICMP_GOOD_OCTETS',0,13,128,27,3
	.word	36564
	.byte	35
	.byte	'Ifx_GETH_RXICMP_GOOD_PACKETS',0,13,136,27,3
	.word	35017
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_FRAGMENTED_OCTETS',0,13,144,27,3
	.word	35592
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_FRAGMENTED_PACKETS',0,13,152,27,3
	.word	33828
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_GOOD_OCTETS',0,13,160,27,3
	.word	35251
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_GOOD_PACKETS',0,13,168,27,3
	.word	33415
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_HEADER_ERROR_OCTETS',0,13,176,27,3
	.word	35367
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_HEADER_ERROR_PACKETS',0,13,184,27,3
	.word	33555
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_NO_PAYLOAD_OCTETS',0,13,192,27,3
	.word	35480
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_NO_PAYLOAD_PACKETS',0,13,200,27,3
	.word	33692
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS',0,13,208,27,3
	.word	33976
	.byte	35
	.byte	'Ifx_GETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS',0,13,216,27,3
	.word	35715
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_GOOD_OCTETS',0,13,224,27,3
	.word	35819
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_GOOD_PACKETS',0,13,232,27,3
	.word	34104
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_HEADER_ERROR_OCTETS',0,13,240,27,3
	.word	35935
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_HEADER_ERROR_PACKETS',0,13,248,27,3
	.word	34244
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_NO_PAYLOAD_OCTETS',0,13,128,28,3
	.word	36048
	.byte	35
	.byte	'Ifx_GETH_RXIPV6_NO_PAYLOAD_PACKETS',0,13,136,28,3
	.word	34381
	.byte	35
	.byte	'Ifx_GETH_RXTCP_ERROR_OCTETS',0,13,144,28,3
	.word	36460
	.byte	35
	.byte	'Ifx_GETH_RXTCP_ERROR_PACKETS',0,13,152,28,3
	.word	34889
	.byte	35
	.byte	'Ifx_GETH_RXTCP_GOOD_OCTETS',0,13,160,28,3
	.word	36356
	.byte	35
	.byte	'Ifx_GETH_RXTCP_GOOD_PACKETS',0,13,168,28,3
	.word	34761
	.byte	35
	.byte	'Ifx_GETH_RXUDP_ERROR_OCTETS',0,13,176,28,3
	.word	36254
	.byte	35
	.byte	'Ifx_GETH_RXUDP_ERROR_PACKETS',0,13,184,28,3
	.word	34635
	.byte	35
	.byte	'Ifx_GETH_RXUDP_GOOD_OCTETS',0,13,192,28,3
	.word	36150
	.byte	35
	.byte	'Ifx_GETH_RXUDP_GOOD_PACKETS',0,13,200,28,3
	.word	34507
	.byte	35
	.byte	'Ifx_GETH_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD',0,13,208,28,3
	.word	30060
	.byte	35
	.byte	'Ifx_GETH_RX_128TO255OCTETS_PACKETS_GOOD_BAD',0,13,216,28,3
	.word	29618
	.byte	35
	.byte	'Ifx_GETH_RX_256TO511OCTETS_PACKETS_GOOD_BAD',0,13,224,28,3
	.word	29764
	.byte	35
	.byte	'Ifx_GETH_RX_512TO1023OCTETS_PACKETS_GOOD_BAD',0,13,232,28,3
	.word	29912
	.byte	35
	.byte	'Ifx_GETH_RX_64OCTETS_PACKETS_GOOD_BAD',0,13,240,28,3
	.word	29328
	.byte	35
	.byte	'Ifx_GETH_RX_65TO127OCTETS_PACKETS_GOOD_BAD',0,13,248,28,3
	.word	29472
	.byte	35
	.byte	'Ifx_GETH_RX_ALIGNMENT_ERROR_PACKETS',0,13,128,29,3
	.word	28672
	.byte	35
	.byte	'Ifx_GETH_RX_BROADCAST_PACKETS_GOOD',0,13,136,29,3
	.word	28282
	.byte	35
	.byte	'Ifx_GETH_RX_CONTROL_PACKETS_GOOD',0,13,144,29,3
	.word	31232
	.byte	35
	.byte	'Ifx_GETH_RX_CRC_ERROR_PACKETS',0,13,152,29,3
	.word	28539
	.byte	35
	.byte	'Ifx_GETH_RX_FIFO_OVERFLOW_PACKETS',0,13,160,29,3
	.word	30710
	.byte	35
	.byte	'Ifx_GETH_RX_JABBER_ERROR_PACKETS',0,13,168,29,3
	.word	28929
	.byte	35
	.byte	'Ifx_GETH_RX_LENGTH_ERROR_PACKETS',0,13,176,29,3
	.word	30318
	.byte	35
	.byte	'Ifx_GETH_RX_LPI_TRAN_CNTR',0,13,184,29,3
	.word	31720
	.byte	35
	.byte	'Ifx_GETH_RX_LPI_USEC_CNTR',0,13,192,29,3
	.word	31598
	.byte	35
	.byte	'Ifx_GETH_RX_MULTICAST_PACKETS_GOOD',0,13,200,29,3
	.word	28413
	.byte	35
	.byte	'Ifx_GETH_RX_OCTET_COUNT_GOOD',0,13,208,29,3
	.word	28151
	.byte	35
	.byte	'Ifx_GETH_RX_OCTET_COUNT_GOOD_BAD',0,13,216,29,3
	.word	28051
	.byte	35
	.byte	'Ifx_GETH_RX_OUT_OF_RANGE_TYPE_PACKETS',0,13,224,29,3
	.word	30454
	.byte	35
	.byte	'Ifx_GETH_RX_OVERSIZE_PACKETS_GOOD',0,13,232,29,3
	.word	29193
	.byte	35
	.byte	'Ifx_GETH_RX_PACKETS_COUNT_GOOD_BAD',0,13,240,29,3
	.word	27946
	.byte	35
	.byte	'Ifx_GETH_RX_PAUSE_PACKETS',0,13,248,29,3
	.word	30578
	.byte	35
	.byte	'Ifx_GETH_RX_RECEIVE_ERROR_PACKETS',0,13,128,30,3
	.word	31104
	.byte	35
	.byte	'Ifx_GETH_RX_RUNT_ERROR_PACKETS',0,13,136,30,3
	.word	28800
	.byte	35
	.byte	'Ifx_GETH_RX_UNDERSIZE_PACKETS_GOOD',0,13,144,30,3
	.word	29062
	.byte	35
	.byte	'Ifx_GETH_RX_UNICAST_PACKETS_GOOD',0,13,152,30,3
	.word	30189
	.byte	35
	.byte	'Ifx_GETH_RX_VLAN_PACKETS_GOOD_BAD',0,13,160,30,3
	.word	30843
	.byte	35
	.byte	'Ifx_GETH_RX_WATCHDOG_ERROR_PACKETS',0,13,168,30,3
	.word	30974
	.byte	35
	.byte	'Ifx_GETH_SKEWCTL',0,13,176,30,3
	.word	54508
	.byte	35
	.byte	'Ifx_GETH_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD',0,13,184,30,3
	.word	25746
	.byte	35
	.byte	'Ifx_GETH_TX_128TO255OCTETS_PACKETS_GOOD_BAD',0,13,192,30,3
	.word	25304
	.byte	35
	.byte	'Ifx_GETH_TX_256TO511OCTETS_PACKETS_GOOD_BAD',0,13,200,30,3
	.word	25450
	.byte	35
	.byte	'Ifx_GETH_TX_512TO1023OCTETS_PACKETS_GOOD_BAD',0,13,208,30,3
	.word	25598
	.byte	35
	.byte	'Ifx_GETH_TX_64OCTETS_PACKETS_GOOD_BAD',0,13,216,30,3
	.word	25014
	.byte	35
	.byte	'Ifx_GETH_TX_65TO127OCTETS_PACKETS_GOOD_BAD',0,13,224,30,3
	.word	25158
	.byte	35
	.byte	'Ifx_GETH_TX_BROADCAST_PACKETS_GOOD',0,13,232,30,3
	.word	24748
	.byte	35
	.byte	'Ifx_GETH_TX_BROADCAST_PACKETS_GOOD_BAD',0,13,240,30,3
	.word	26152
	.byte	35
	.byte	'Ifx_GETH_TX_CARRIER_ERROR_PACKETS',0,13,248,30,3
	.word	27087
	.byte	35
	.byte	'Ifx_GETH_TX_DEFERRED_PACKETS',0,13,128,31,3
	.word	26691
	.byte	35
	.byte	'Ifx_GETH_TX_EXCESSIVE_COLLISION_PACKETS',0,13,136,31,3
	.word	26959
	.byte	35
	.byte	'Ifx_GETH_TX_EXCESSIVE_DEFERRAL_ERROR',0,13,144,31,3
	.word	27444
	.byte	35
	.byte	'Ifx_GETH_TX_LATE_COLLISION_PACKETS',0,13,152,31,3
	.word	26823
	.byte	35
	.byte	'Ifx_GETH_TX_LPI_TRAN_CNTR',0,13,160,31,3
	.word	31476
	.byte	35
	.byte	'Ifx_GETH_TX_LPI_USEC_CNTR',0,13,168,31,3
	.word	31354
	.byte	35
	.byte	'Ifx_GETH_TX_MULTICAST_PACKETS_GOOD',0,13,176,31,3
	.word	24879
	.byte	35
	.byte	'Ifx_GETH_TX_MULTICAST_PACKETS_GOOD_BAD',0,13,184,31,3
	.word	26016
	.byte	35
	.byte	'Ifx_GETH_TX_MULTIPLE_COLLISION_GOOD_PACKETS',0,13,192,31,3
	.word	26567
	.byte	35
	.byte	'Ifx_GETH_TX_OCTET_COUNT_GOOD',0,13,200,31,3
	.word	27187
	.byte	35
	.byte	'Ifx_GETH_TX_OCTET_COUNT_GOOD_BAD',0,13,208,31,3
	.word	24488
	.byte	35
	.byte	'Ifx_GETH_TX_OSIZE_PACKETS_GOOD',0,13,216,31,3
	.word	27816
	.byte	35
	.byte	'Ifx_GETH_TX_PACKET_COUNT_GOOD',0,13,224,31,3
	.word	27311
	.byte	35
	.byte	'Ifx_GETH_TX_PACKET_COUNT_GOOD_BAD',0,13,232,31,3
	.word	24617
	.byte	35
	.byte	'Ifx_GETH_TX_PAUSE_PACKETS',0,13,240,31,3
	.word	27565
	.byte	35
	.byte	'Ifx_GETH_TX_SINGLE_COLLISION_GOOD_PACKETS',0,13,248,31,3
	.word	26425
	.byte	35
	.byte	'Ifx_GETH_TX_UNDERFLOW_ERROR_PACKETS',0,13,128,32,3
	.word	26285
	.byte	35
	.byte	'Ifx_GETH_TX_UNICAST_PACKETS_GOOD_BAD',0,13,136,32,3
	.word	25880
	.byte	35
	.byte	'Ifx_GETH_TX_VLAN_PACKETS_GOOD',0,13,144,32,3
	.word	27690
	.byte	14
	.word	42321
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ0',0,13,164,32,3
	.word	174095
	.byte	14
	.word	42776
	.byte	35
	.byte	'Ifx_GETH_MTL_Q0',0,13,182,32,3
	.word	174127
	.byte	14
	.word	43747
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ0',0,13,203,32,3
	.word	174157
	.byte	14
	.word	45267
	.byte	35
	.byte	'Ifx_GETH_MTL_TXQ',0,13,230,32,3
	.word	174189
	.byte	14
	.word	45793
	.byte	35
	.byte	'Ifx_GETH_MTL_Q',0,13,248,32,3
	.word	174220
	.byte	14
	.word	46759
	.byte	35
	.byte	'Ifx_GETH_MTL_RXQ',0,13,141,33,3
	.word	174249
	.byte	14
	.word	51393
	.byte	35
	.byte	'Ifx_GETH_DMA_CH',0,13,184,33,3
	.word	174280
	.byte	14
	.word	54327
	.byte	35
	.byte	'Ifx_GETH_ACCEND',0,13,203,33,3
	.word	174310
	.byte	14
	.word	54559
	.byte	35
	.byte	'Ifx_GETH',0,13,133,36,3
	.word	174340
	.byte	17,36,66,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_dma',0,1,18
	.byte	'IfxSrc_Tos_cpu1',0,2,18
	.byte	'IfxSrc_Tos_cpu2',0,3,18
	.byte	'IfxSrc_Tos_cpu3',0,4,18
	.byte	'IfxSrc_Tos_cpu4',0,5,18
	.byte	'IfxSrc_Tos_cpu5',0,6,0,35
	.byte	'IfxSrc_Tos',0,36,75,3
	.word	174363
	.byte	17,12,85,9,1,18
	.byte	'IfxGeth_DmaBurstLength_0',0,0,18
	.byte	'IfxGeth_DmaBurstLength_1',0,1,18
	.byte	'IfxGeth_DmaBurstLength_2',0,2,18
	.byte	'IfxGeth_DmaBurstLength_4',0,4,18
	.byte	'IfxGeth_DmaBurstLength_8',0,8,18
	.byte	'IfxGeth_DmaBurstLength_16',0,16,18
	.byte	'IfxGeth_DmaBurstLength_32',0,32,0,35
	.byte	'IfxGeth_DmaBurstLength',0,12,94,3
	.word	174513
	.byte	17,12,98,9,1,18
	.byte	'IfxGeth_DmaChannel_0',0,0,18
	.byte	'IfxGeth_DmaChannel_1',0,1,18
	.byte	'IfxGeth_DmaChannel_2',0,2,18
	.byte	'IfxGeth_DmaChannel_3',0,3,0,35
	.byte	'IfxGeth_DmaChannel',0,12,104,3
	.word	174741
	.byte	17,12,108,9,1,18
	.byte	'IfxGeth_DmaInterruptFlag_transmitInterrupt',0,0,18
	.byte	'IfxGeth_DmaInterruptFlag_transmitStopped',0,1,18
	.byte	'IfxGeth_DmaInterruptFlag_transmitBufferUnavailable',0,2,18
	.byte	'IfxGeth_DmaInterruptFlag_receiveInterrupt',0,6,18
	.byte	'IfxGeth_DmaInterruptFlag_receiveBufferUnavailable',0,7,18
	.byte	'IfxGeth_DmaInterruptFlag_receiveStopped',0,8,18
	.byte	'IfxGeth_DmaInterruptFlag_receiveWatchdogTimeout',0,9,18
	.byte	'IfxGeth_DmaInterruptFlag_earlyTransmitInterrupt',0,10,18
	.byte	'IfxGeth_DmaInterruptFlag_earlyReceiveInterrupt',0,11,18
	.byte	'IfxGeth_DmaInterruptFlag_fatalBusError',0,12,18
	.byte	'IfxGeth_DmaInterruptFlag_contextDescriptorError',0,13,18
	.byte	'IfxGeth_DmaInterruptFlag_abnormalInterruptSummary',0,14,18
	.byte	'IfxGeth_DmaInterruptFlag_normalInterruptSummary',0,15,0,35
	.byte	'IfxGeth_DmaInterruptFlag',0,12,123,3
	.word	174866
	.byte	35
	.byte	'IfxGeth_LineSpeed',0,12,133,1,3
	.word	66801
	.byte	17,12,156,1,9,1,18
	.byte	'IfxGeth_PhyInterfaceMode_mii',0,0,18
	.byte	'IfxGeth_PhyInterfaceMode_rgmii',0,1,18
	.byte	'IfxGeth_PhyInterfaceMode_rmii',0,4,0,35
	.byte	'IfxGeth_PhyInterfaceMode',0,12,161,1,3
	.word	175553
	.byte	17,12,166,1,9,1,18
	.byte	'IfxGeth_PreambleLength_7Bytes',0,0,18
	.byte	'IfxGeth_PreambleLength_5Bytes',0,1,18
	.byte	'IfxGeth_PreambleLength_3Bytes',0,2,0,35
	.byte	'IfxGeth_PreambleLength',0,12,171,1,3
	.word	175690
	.byte	17,12,176,1,9,1,18
	.byte	'IfxGeth_QueueSize_256Bytes',0,0,18
	.byte	'IfxGeth_QueueSize_512Bytes',0,1,18
	.byte	'IfxGeth_QueueSize_768Bytes',0,2,18
	.byte	'IfxGeth_QueueSize_1024Bytes',0,3,18
	.byte	'IfxGeth_QueueSize_1280Bytes',0,4,18
	.byte	'IfxGeth_QueueSize_1536Bytes',0,5,18
	.byte	'IfxGeth_QueueSize_1792Bytes',0,6,18
	.byte	'IfxGeth_QueueSize_2048Bytes',0,7,18
	.byte	'IfxGeth_QueueSize_2304Bytes',0,8,18
	.byte	'IfxGeth_QueueSize_2560Bytes',0,9,18
	.byte	'IfxGeth_QueueSize_2816Bytes',0,10,18
	.byte	'IfxGeth_QueueSize_3072Bytes',0,11,18
	.byte	'IfxGeth_QueueSize_3328Bytes',0,12,18
	.byte	'IfxGeth_QueueSize_3584Bytes',0,13,18
	.byte	'IfxGeth_QueueSize_3840Bytes',0,14,18
	.byte	'IfxGeth_QueueSize_4096Bytes',0,15,18
	.byte	'IfxGeth_QueueSize_4352Bytes',0,16,18
	.byte	'IfxGeth_QueueSize_4608Bytes',0,17,18
	.byte	'IfxGeth_QueueSize_4864Bytes',0,18,18
	.byte	'IfxGeth_QueueSize_5120Bytes',0,19,18
	.byte	'IfxGeth_QueueSize_5376Bytes',0,20,18
	.byte	'IfxGeth_QueueSize_5632Bytes',0,21,18
	.byte	'IfxGeth_QueueSize_5888Bytes',0,22,18
	.byte	'IfxGeth_QueueSize_6144Bytes',0,23,18
	.byte	'IfxGeth_QueueSize_6400Bytes',0,24,18
	.byte	'IfxGeth_QueueSize_6656Bytes',0,25,18
	.byte	'IfxGeth_QueueSize_6912Bytes',0,26,18
	.byte	'IfxGeth_QueueSize_7168Bytes',0,27,18
	.byte	'IfxGeth_QueueSize_7424Bytes',0,28,18
	.byte	'IfxGeth_QueueSize_7680Bytes',0,29,18
	.byte	'IfxGeth_QueueSize_7936Bytes',0,30,18
	.byte	'IfxGeth_QueueSize_8192Bytes',0,31,0,35
	.byte	'IfxGeth_QueueSize',0,12,210,1,3
	.word	175825
	.byte	17,12,215,1,9,1,18
	.byte	'IfxGeth_RxArbitrationAlgorithm_sp',0,0,18
	.byte	'IfxGeth_RxArbitrationAlgorithm_wsp',0,1,0,35
	.byte	'IfxGeth_RxArbitrationAlgorithm',0,12,219,1,3
	.word	176816
	.byte	35
	.byte	'IfxGeth_RxDmaChannel',0,12,229,1,3
	.word	65855
	.byte	17,12,233,1,9,1,18
	.byte	'IfxGeth_RxMtlQueue_0',0,0,18
	.byte	'IfxGeth_RxMtlQueue_1',0,1,18
	.byte	'IfxGeth_RxMtlQueue_2',0,2,18
	.byte	'IfxGeth_RxMtlQueue_3',0,3,0,35
	.byte	'IfxGeth_RxMtlQueue',0,12,239,1,3
	.word	176966
	.byte	17,12,243,1,9,1,18
	.byte	'IfxGeth_ServiceRequest_0',0,0,18
	.byte	'IfxGeth_ServiceRequest_1',0,1,18
	.byte	'IfxGeth_ServiceRequest_2',0,2,18
	.byte	'IfxGeth_ServiceRequest_3',0,3,18
	.byte	'IfxGeth_ServiceRequest_4',0,4,18
	.byte	'IfxGeth_ServiceRequest_5',0,5,18
	.byte	'IfxGeth_ServiceRequest_6',0,6,18
	.byte	'IfxGeth_ServiceRequest_7',0,7,18
	.byte	'IfxGeth_ServiceRequest_8',0,8,18
	.byte	'IfxGeth_ServiceRequest_9',0,9,0,35
	.byte	'IfxGeth_ServiceRequest',0,12,255,1,3
	.word	177093
	.byte	35
	.byte	'IfxGeth_TxDmaChannel',0,12,137,2,3
	.word	64270
	.byte	17,12,152,2,9,1,18
	.byte	'IfxGeth_TxSchedulingAlgorithm_wrr',0,0,18
	.byte	'IfxGeth_TxSchedulingAlgorithm_sp',0,3,0,35
	.byte	'IfxGeth_TxSchedulingAlgorithm',0,12,156,2,3
	.word	177432
	.byte	35
	.byte	'IfxGeth_DuplexMode',0,12,167,2,3
	.word	62840
	.byte	17,12,172,2,9,1,18
	.byte	'IfxGeth_LoopbackMode_disable',0,0,18
	.byte	'IfxGeth_LoopbackMode_enable',0,1,0,35
	.byte	'IfxGeth_LoopbackMode',0,12,176,2,3
	.word	177577
	.byte	35
	.byte	'IfxGeth_RxContextDescr0_Bits',0,12,189,2,3
	.word	63040
	.byte	35
	.byte	'IfxGeth_RxContextDescr1_Bits',0,12,196,2,3
	.word	63330
	.byte	35
	.byte	'IfxGeth_RxContextDescr2_Bits',0,12,203,2,3
	.word	63631
	.byte	35
	.byte	'IfxGeth_RxContextDescr3_Bits',0,12,213,2,3
	.word	64068
	.byte	35
	.byte	'IfxGeth_RxDescr0_RF_Bits',0,12,220,2,3
	.word	62978
	.byte	35
	.byte	'IfxGeth_RxDescr0_WF_Bits',0,12,228,2,3
	.word	63003
	.byte	35
	.byte	'IfxGeth_RxDescr1_RF_Bits',0,12,235,2,3
	.word	63114
	.byte	35
	.byte	'IfxGeth_RxDescr1_WF_Bits',0,12,253,2,3
	.word	63143
	.byte	35
	.byte	'IfxGeth_RxDescr2_RF_Bits',0,12,132,3,3
	.word	63404
	.byte	35
	.byte	'IfxGeth_RxDescr2_WF_Bits',0,12,150,3,3
	.word	63429
	.byte	35
	.byte	'IfxGeth_RxDescr3_RF_Bits',0,12,162,3,3
	.word	63711
	.byte	35
	.byte	'IfxGeth_RxDescr3_WF_Bits',0,12,184,3,3
	.word	63827
	.byte	35
	.byte	'IfxGeth_TxContextDescr0_Bits',0,12,191,3,3
	.word	64425
	.byte	35
	.byte	'IfxGeth_TxContextDescr1_Bits',0,12,198,3,3
	.word	64547
	.byte	35
	.byte	'IfxGeth_TxContextDescr2_Bits',0,12,207,3,3
	.word	64739
	.byte	35
	.byte	'IfxGeth_TxContextDescr3_Bits',0,12,225,3,3
	.word	65350
	.byte	35
	.byte	'IfxGeth_TxDescr0_RF_Bits',0,12,232,3,3
	.word	64377
	.byte	35
	.byte	'IfxGeth_TxDescr0_WF_Bits',0,12,239,3,3
	.word	64402
	.byte	35
	.byte	'IfxGeth_TxDescr1_RF_Bits',0,12,246,3,3
	.word	64499
	.byte	35
	.byte	'IfxGeth_TxDescr1_WF_Bits',0,12,253,3,3
	.word	64524
	.byte	35
	.byte	'IfxGeth_TxDescr2_RF_Bits',0,12,136,4,3
	.word	64621
	.byte	35
	.byte	'IfxGeth_TxDescr2_WF_Bits',0,12,143,4,3
	.word	64710
	.byte	35
	.byte	'IfxGeth_TxDescr3_RF_Bits',0,12,160,4,3
	.word	64850
	.byte	35
	.byte	'IfxGeth_TxDescr3_WF_Bits',0,12,186,4,3
	.word	65037
	.byte	35
	.byte	'IfxGeth_RxDescr0',0,12,200,4,3
	.word	63063
	.byte	35
	.byte	'IfxGeth_RxDescr1',0,12,210,4,3
	.word	63353
	.byte	35
	.byte	'IfxGeth_RxDescr2',0,12,220,4,3
	.word	63660
	.byte	35
	.byte	'IfxGeth_RxDescr3',0,12,230,4,3
	.word	64142
	.byte	35
	.byte	'IfxGeth_TxDescr0',0,12,240,4,3
	.word	64448
	.byte	35
	.byte	'IfxGeth_TxDescr1',0,12,250,4,3
	.word	64570
	.byte	35
	.byte	'IfxGeth_TxDescr2',0,12,132,5,3
	.word	64799
	.byte	35
	.byte	'IfxGeth_TxDescr3',0,12,142,5,3
	.word	65570
	.byte	35
	.byte	'IfxGeth_RxDescr',0,12,156,5,3
	.word	64193
	.byte	35
	.byte	'IfxGeth_TxDescr',0,12,166,5,3
	.word	65621
	.byte	35
	.byte	'IfxGeth_RxDescrList',0,12,177,5,3
	.word	65977
	.byte	35
	.byte	'IfxGeth_TxDescrList',0,12,184,5,3
	.word	65703
	.byte	21,37,56,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	178839
	.byte	35
	.byte	'IfxGeth_Crs_In',0,37,61,3
	.word	178890
	.byte	21,37,64,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	178918
	.byte	35
	.byte	'IfxGeth_Crsdv_In',0,37,69,3
	.word	178969
	.byte	21,37,72,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	178999
	.byte	35
	.byte	'IfxGeth_Rxdv_In',0,37,77,3
	.word	179050
	.byte	21,37,80,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	179079
	.byte	35
	.byte	'IfxGeth_Rxctl_In',0,37,85,3
	.word	179130
	.byte	21,37,88,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	179160
	.byte	35
	.byte	'IfxGeth_Grefclk_In',0,37,93,3
	.word	179211
	.byte	21,37,96,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	179243
	.byte	35
	.byte	'IfxGeth_Refclk_In',0,37,101,3
	.word	179294
	.byte	21,37,104,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	179325
	.byte	35
	.byte	'IfxGeth_Rxclk_In',0,37,109,3
	.word	179376
	.byte	21,37,112,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	179406
	.byte	35
	.byte	'IfxGeth_Txclk_In',0,37,117,3
	.word	179457
	.byte	21,37,120,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	179487
	.byte	35
	.byte	'IfxGeth_Rxd_In',0,37,125,3
	.word	179538
	.byte	21,37,128,1,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	179566
	.byte	35
	.byte	'IfxGeth_Col_In',0,37,133,1,3
	.word	179618
	.byte	21,37,136,1,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	141609
	.byte	1,2,35,12,0,22
	.word	179647
	.byte	35
	.byte	'IfxGeth_Mdc_Out',0,37,141,1,3
	.word	179699
	.byte	21,37,144,1,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'inSelect',0
	.word	69657
	.byte	1,2,35,12,13
	.byte	'outSelect',0
	.word	141609
	.byte	1,2,35,13,0,22
	.word	179729
	.byte	35
	.byte	'IfxGeth_Mdio_InOut',0,37,150,1,3
	.word	179802
	.byte	21,37,153,1,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	141609
	.byte	1,2,35,12,0,22
	.word	179835
	.byte	35
	.byte	'IfxGeth_Txd_Out',0,37,158,1,3
	.word	179887
	.byte	21,37,161,1,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	141609
	.byte	1,2,35,12,0,22
	.word	179917
	.byte	35
	.byte	'IfxGeth_Txclk_Out',0,37,166,1,3
	.word	179969
	.byte	21,37,169,1,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	141609
	.byte	1,2,35,12,0,22
	.word	180001
	.byte	35
	.byte	'IfxGeth_Txen_Out',0,37,174,1,3
	.word	180053
	.byte	21,37,177,1,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	141609
	.byte	1,2,35,12,0,22
	.word	180084
	.byte	35
	.byte	'IfxGeth_Txer_Out',0,37,182,1,3
	.word	180136
	.byte	21,37,185,1,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	141609
	.byte	1,2,35,12,0,22
	.word	180167
	.byte	35
	.byte	'IfxGeth_Txctl_Out',0,37,190,1,3
	.word	180219
	.byte	21,37,193,1,15,16,13
	.byte	'module',0
	.word	62835
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	142637
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	69657
	.byte	1,2,35,12,0,22
	.word	180251
	.byte	35
	.byte	'IfxGeth_Rxer_In',0,37,198,1,3
	.word	180303
	.byte	21,14,136,2,9,6,13
	.byte	'channelId',0
	.word	174741
	.byte	1,2,35,0,13
	.byte	'priority',0
	.word	626
	.byte	2,2,35,2,13
	.byte	'provider',0
	.word	174363
	.byte	1,2,35,4,0,35
	.byte	'IfxGeth_Eth_DmaInterruptConfig',0,14,141,2,3
	.word	180333
	.byte	22
	.word	178839
	.byte	3
	.word	180435
	.byte	22
	.word	179566
	.byte	3
	.word	180445
	.byte	22
	.word	179406
	.byte	3
	.word	180455
	.byte	22
	.word	179325
	.byte	3
	.word	180465
	.byte	22
	.word	178999
	.byte	3
	.word	180475
	.byte	22
	.word	180251
	.byte	3
	.word	180485
	.byte	22
	.word	179487
	.byte	3
	.word	180495
	.byte	22
	.word	180001
	.byte	3
	.word	180505
	.byte	22
	.word	180084
	.byte	3
	.word	180515
	.byte	22
	.word	179835
	.byte	3
	.word	180525
	.byte	22
	.word	179647
	.byte	3
	.word	180535
	.byte	22
	.word	179729
	.byte	3
	.word	180545
	.byte	21,14,145,2,9,72,13
	.byte	'crs',0
	.word	180440
	.byte	4,2,35,0,13
	.byte	'col',0
	.word	180450
	.byte	4,2,35,4,13
	.byte	'txClk',0
	.word	180460
	.byte	4,2,35,8,13
	.byte	'rxClk',0
	.word	180470
	.byte	4,2,35,12,13
	.byte	'rxDv',0
	.word	180480
	.byte	4,2,35,16,13
	.byte	'rxEr',0
	.word	180490
	.byte	4,2,35,20,13
	.byte	'rxd0',0
	.word	180500
	.byte	4,2,35,24,13
	.byte	'rxd1',0
	.word	180500
	.byte	4,2,35,28,13
	.byte	'rxd2',0
	.word	180500
	.byte	4,2,35,32,13
	.byte	'rxd3',0
	.word	180500
	.byte	4,2,35,36,13
	.byte	'txEn',0
	.word	180510
	.byte	4,2,35,40,13
	.byte	'txEr',0
	.word	180520
	.byte	4,2,35,44,13
	.byte	'txd0',0
	.word	180530
	.byte	4,2,35,48,13
	.byte	'txd1',0
	.word	180530
	.byte	4,2,35,52,13
	.byte	'txd2',0
	.word	180530
	.byte	4,2,35,56,13
	.byte	'txd3',0
	.word	180530
	.byte	4,2,35,60,13
	.byte	'mdc',0
	.word	180540
	.byte	4,2,35,64,13
	.byte	'mdio',0
	.word	180550
	.byte	4,2,35,68,0,35
	.byte	'IfxGeth_Eth_MiiPins',0,14,165,2,3
	.word	180555
	.byte	21,14,169,2,9,6,13
	.byte	'serviceRequest',0
	.word	177093
	.byte	1,2,35,0,13
	.byte	'priority',0
	.word	626
	.byte	2,2,35,2,13
	.byte	'provider',0
	.word	174363
	.byte	1,2,35,4,0,35
	.byte	'IfxGeth_Eth_MtlInterruptConfig',0,14,174,2,3
	.word	180842
	.byte	22
	.word	179917
	.byte	3
	.word	180949
	.byte	22
	.word	180167
	.byte	3
	.word	180959
	.byte	22
	.word	179079
	.byte	3
	.word	180969
	.byte	22
	.word	179160
	.byte	3
	.word	180979
	.byte	21,14,178,2,9,60,13
	.byte	'txClk',0
	.word	180954
	.byte	4,2,35,0,13
	.byte	'txd0',0
	.word	180530
	.byte	4,2,35,4,13
	.byte	'txd1',0
	.word	180530
	.byte	4,2,35,8,13
	.byte	'txd2',0
	.word	180530
	.byte	4,2,35,12,13
	.byte	'txd3',0
	.word	180530
	.byte	4,2,35,16,13
	.byte	'txCtl',0
	.word	180964
	.byte	4,2,35,20,13
	.byte	'rxClk',0
	.word	180470
	.byte	4,2,35,24,13
	.byte	'rxd0',0
	.word	180500
	.byte	4,2,35,28,13
	.byte	'rxd1',0
	.word	180500
	.byte	4,2,35,32,13
	.byte	'rxd2',0
	.word	180500
	.byte	4,2,35,36,13
	.byte	'rxd3',0
	.word	180500
	.byte	4,2,35,40,13
	.byte	'rxCtl',0
	.word	180974
	.byte	4,2,35,44,13
	.byte	'mdc',0
	.word	180540
	.byte	4,2,35,48,13
	.byte	'mdio',0
	.word	180550
	.byte	4,2,35,52,13
	.byte	'grefClk',0
	.word	180984
	.byte	4,2,35,56,0,35
	.byte	'IfxGeth_Eth_RgmiiPins',0,14,195,2,3
	.word	180989
	.byte	22
	.word	178918
	.byte	3
	.word	181243
	.byte	22
	.word	179243
	.byte	3
	.word	181253
	.byte	21,14,199,2,9,36,13
	.byte	'crsDiv',0
	.word	181248
	.byte	4,2,35,0,13
	.byte	'refClk',0
	.word	181258
	.byte	4,2,35,4,13
	.byte	'rxd0',0
	.word	180500
	.byte	4,2,35,8,13
	.byte	'rxd1',0
	.word	180500
	.byte	4,2,35,12,13
	.byte	'mdio',0
	.word	180550
	.byte	4,2,35,16,13
	.byte	'txd0',0
	.word	180530
	.byte	4,2,35,20,13
	.byte	'mdc',0
	.word	180540
	.byte	4,2,35,24,13
	.byte	'txd1',0
	.word	180530
	.byte	4,2,35,28,13
	.byte	'txEn',0
	.word	180510
	.byte	4,2,35,32,0,35
	.byte	'IfxGeth_Eth_RmiiPins',0,14,210,2,3
	.word	181263
	.byte	3
	.word	9730
	.byte	21,14,214,2,9,16,13
	.byte	'channelId',0
	.word	65855
	.byte	1,2,35,0,13
	.byte	'maxBurstLength',0
	.word	174513
	.byte	1,2,35,1,13
	.byte	'rxDescrList',0
	.word	66001
	.byte	4,2,35,4,13
	.byte	'rxBuffer1StartAddress',0
	.word	181429
	.byte	4,2,35,8,13
	.byte	'rxBuffer1Size',0
	.word	626
	.byte	2,2,35,12,0,35
	.byte	'IfxGeth_Eth_RxChannelConfig',0,14,221,2,3
	.word	181434
	.byte	21,14,225,2,9,8,13
	.byte	'storeAndForward',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'rxQueueSize',0
	.word	175825
	.byte	1,2,35,1,13
	.byte	'forwardErrorPacket',0
	.word	609
	.byte	1,2,35,2,13
	.byte	'forwardUndersizedGoodPacket',0
	.word	609
	.byte	1,2,35,3,13
	.byte	'daBasedDmaChannelEnabled',0
	.word	609
	.byte	1,2,35,4,13
	.byte	'rxDmaChannelMap',0
	.word	65855
	.byte	1,2,35,5,13
	.byte	'rxQueueOverflowInterruptEnabled',0
	.word	609
	.byte	1,2,35,6,0,35
	.byte	'IfxGeth_Eth_RxQueueConfig',0,14,234,2,3
	.word	181596
	.byte	21,14,238,2,9,16,13
	.byte	'channelId',0
	.word	64270
	.byte	1,2,35,0,13
	.byte	'maxBurstLength',0
	.word	174513
	.byte	1,2,35,1,13
	.byte	'txDescrList',0
	.word	65727
	.byte	4,2,35,4,13
	.byte	'txBuffer1StartAddress',0
	.word	181429
	.byte	4,2,35,8,13
	.byte	'txBuffer1Size',0
	.word	626
	.byte	2,2,35,12,0,35
	.byte	'IfxGeth_Eth_TxChannelConfig',0,14,245,2,3
	.word	181849
	.byte	21,14,249,2,9,4,13
	.byte	'storeAndForward',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'txQueueSize',0
	.word	175825
	.byte	1,2,35,1,13
	.byte	'txQueueUnderflowInterruptEnabled',0
	.word	609
	.byte	1,2,35,2,0,35
	.byte	'IfxGeth_Eth_TxQueueConfig',0,14,254,2,3
	.word	182011
	.byte	15,64
	.word	181849
	.byte	16,3,0,15,64
	.word	181434
	.byte	16,3,0,15,24
	.word	180333
	.byte	16,3,0,21,14,134,3,9,188,1,13
	.byte	'numOfTxChannels',0
	.word	9730
	.byte	4,2,35,0,13
	.byte	'numOfRxChannels',0
	.word	9730
	.byte	4,2,35,4,13
	.byte	'addressAlignedBeatsEnabled',0
	.word	609
	.byte	1,2,35,8,13
	.byte	'fixedBurstEnabled',0
	.word	609
	.byte	1,2,35,9,13
	.byte	'mixedBurstEnabled',0
	.word	609
	.byte	1,2,35,10,13
	.byte	'txChannel',0
	.word	182141
	.byte	64,2,35,12,13
	.byte	'rxChannel',0
	.word	182150
	.byte	64,2,35,76,13
	.byte	'txInterrupt',0
	.word	182159
	.byte	24,3,35,140,1,13
	.byte	'rxInterrupt',0
	.word	182159
	.byte	24,3,35,164,1,0,35
	.byte	'IfxGeth_Eth_DmaConfig',0,14,145,3,3
	.word	182168
	.byte	15,6
	.word	609
	.byte	16,5,0,21,14,149,3,9,12,13
	.byte	'duplexMode',0
	.word	62840
	.byte	1,2,35,0,13
	.byte	'lineSpeed',0
	.word	66801
	.byte	1,2,35,1,13
	.byte	'loopbackMode',0
	.word	177577
	.byte	1,2,35,2,13
	.byte	'macAddress',0
	.word	182429
	.byte	6,2,35,3,13
	.byte	'maxPacketSize',0
	.word	626
	.byte	2,2,35,10,0,35
	.byte	'IfxGeth_Eth_MacConfig',0,14,156,3,3
	.word	182438
	.byte	15,16
	.word	182011
	.byte	16,3,0,15,32
	.word	181596
	.byte	16,3,0,21,14,160,3,9,68,13
	.byte	'numOfTxQueues',0
	.word	9730
	.byte	4,2,35,0,13
	.byte	'txSchedulingAlgorithm',0
	.word	177432
	.byte	1,2,35,4,13
	.byte	'numOfRxQueues',0
	.word	9730
	.byte	4,2,35,6,13
	.byte	'rxArbitrationAlgorithm',0
	.word	176816
	.byte	1,2,35,10,13
	.byte	'txQueue',0
	.word	182580
	.byte	16,2,35,12,13
	.byte	'rxQueue',0
	.word	182589
	.byte	32,2,35,28,13
	.byte	'interrupt',0
	.word	180842
	.byte	6,2,35,60,0,35
	.byte	'IfxGeth_Eth_MtlConfig',0,14,169,3,3
	.word	182598
	.byte	22
	.word	181263
	.byte	3
	.word	182798
	.byte	22
	.word	180989
	.byte	3
	.word	182808
	.byte	22
	.word	180555
	.byte	3
	.word	182818
	.byte	21,14,173,3,9,12,13
	.byte	'rmiiPins',0
	.word	182803
	.byte	4,2,35,0,13
	.byte	'rgmiiPins',0
	.word	182813
	.byte	4,2,35,4,13
	.byte	'miiPins',0
	.word	182823
	.byte	4,2,35,8,0,35
	.byte	'IfxGeth_Eth_PinConfig',0,14,178,3,3
	.word	182828
	.byte	35
	.byte	'IfxGeth_Eth_RxChannel',0,14,188,3,3
	.word	66006
	.byte	35
	.byte	'IfxGeth_Eth_TxChannel',0,14,199,3,3
	.word	65742
	.byte	35
	.byte	'IfxGeth_Eth',0,14,214,3,3
	.word	66099
	.byte	35
	.byte	'u8_t',0,38,85,16
	.word	609
	.byte	35
	.byte	'u16_t',0,38,86,16
	.word	626
	.byte	35
	.byte	'u32_t',0,38,87,16
	.word	9730
	.byte	35
	.byte	's8_t',0,38,88,16
	.word	67004
	.byte	35
	.byte	's16_t',0,38,89,16
	.word	67041
	.byte	35
	.byte	'intmax_t',0,39,198,2,41
	.word	69533
	.byte	35
	.byte	'mem_size_t',0,40,67,15
	.word	626
	.byte	35
	.byte	'err_t',0,41,96,14
	.word	67004
	.byte	37,1,1,24
	.word	67223
	.byte	0,3
	.word	183122
	.byte	35
	.byte	'pbuf_free_custom_fn',0,17,242,1,16
	.word	183131
	.byte	35
	.byte	'ip4_addr_t',0,16,57,25
	.word	67054
	.byte	35
	.byte	'ip_addr_t',0,42,142,2,20
	.word	67054
	.byte	35
	.byte	'netif_nsc_reason_t',0,15,180,4,15
	.word	626
	.byte	35
	.byte	'netif_ext_callback_args_t',0,15,250,4,3
	.word	68343
	.byte	35
	.byte	'netif_ext_callback_t',0,15,140,5,3
	.word	68539
	.byte	10
	.byte	'ip4_addr_packed',0,43,53,8,4,13
	.byte	'addr',0
	.word	9730
	.byte	4,2,35,0,0,35
	.byte	'ip4_addr_p_t',0,43,61,32
	.word	183296
	.byte	10
	.byte	'udp_pcb',0,44,81,8,32,13
	.byte	'local_ip',0
	.word	67054
	.byte	4,2,35,0,13
	.byte	'remote_ip',0
	.word	67054
	.byte	4,2,35,4,13
	.byte	'netif_idx',0
	.word	609
	.byte	1,2,35,8,13
	.byte	'so_options',0
	.word	609
	.byte	1,2,35,9,13
	.byte	'tos',0
	.word	609
	.byte	1,2,35,10,13
	.byte	'ttl',0
	.word	609
	.byte	1,2,35,11,13
	.byte	'next',0
	.word	.L193-.L45
	.byte	4,2,35,12,13
	.byte	'flags',0
	.word	609
	.byte	1,2,35,16,13
	.byte	'local_port',0
	.word	626
	.byte	2,2,35,18,13
	.byte	'remote_port',0
	.word	626
	.byte	2,2,35,20,13
	.byte	'recv',0
	.word	.L194-.L45
	.byte	4,2,35,24,13
	.byte	'recv_arg',0
	.word	348
	.byte	4,2,35,28,0
.L193:
	.byte	3
	.word	183353
	.byte	37,1,1,24
	.word	348
	.byte	24
	.word	183571
	.byte	24
	.word	67223
	.byte	24
	.word	67280
	.byte	24
	.word	626
	.byte	0,3
	.word	183576
.L194:
	.byte	35
	.byte	'udp_recv_fn',0,44,77,16
	.word	183605
	.byte	3
	.word	183576
	.byte	35
	.byte	'tcpwnd_size_t',0,45,53,15
	.word	626
	.byte	43
	.byte	'tcp_state',0,45,56,6,1,18
	.byte	'CLOSED',0,0,18
	.byte	'LISTEN',0,1,18
	.byte	'SYN_SENT',0,2,18
	.byte	'SYN_RCVD',0,3,18
	.byte	'ESTABLISHED',0,4,18
	.byte	'FIN_WAIT_1',0,5,18
	.byte	'FIN_WAIT_2',0,6,18
	.byte	'CLOSE_WAIT',0,7,18
	.byte	'CLOSING',0,8,18
	.byte	'LAST_ACK',0,9,18
	.byte	'TIME_WAIT',0,10,0,10
	.byte	'tcp_hdr',0,47,56,8,20,13
	.byte	'src',0
	.word	626
	.byte	2,2,35,0,13
	.byte	'dest',0
	.word	626
	.byte	2,2,35,2,13
	.byte	'seqno',0
	.word	9730
	.byte	4,2,35,4,13
	.byte	'ackno',0
	.word	9730
	.byte	4,2,35,8,13
	.byte	'_hdrlen_rsvd_flags',0
	.word	626
	.byte	2,2,35,12,13
	.byte	'wnd',0
	.word	626
	.byte	2,2,35,14,13
	.byte	'chksum',0
	.word	626
	.byte	2,2,35,16,13
	.byte	'urgp',0
	.word	626
	.byte	2,2,35,18,0,3
	.word	183799
	.byte	10
	.byte	'tcp_seg',0,18,253,1,8,20,13
	.byte	'next',0
	.word	.L195-.L45
	.byte	4,2,35,0,13
	.byte	'p',0
	.word	67223
	.byte	4,2,35,4,13
	.byte	'len',0
	.word	626
	.byte	2,2,35,8,13
	.byte	'oversize_left',0
	.word	626
	.byte	2,2,35,10,13
	.byte	'flags',0
	.word	609
	.byte	1,2,35,12,13
	.byte	'tcphdr',0
	.word	183941
	.byte	4,2,35,16,0
.L195:
	.byte	3
	.word	183946
	.byte	10
	.byte	'tcp_pcb_listen',0,46,223,1,8,28,13
	.byte	'local_ip',0
	.word	67054
	.byte	4,2,35,0,13
	.byte	'remote_ip',0
	.word	67054
	.byte	4,2,35,4,13
	.byte	'netif_idx',0
	.word	609
	.byte	1,2,35,8,13
	.byte	'so_options',0
	.word	609
	.byte	1,2,35,9,13
	.byte	'tos',0
	.word	609
	.byte	1,2,35,10,13
	.byte	'ttl',0
	.word	609
	.byte	1,2,35,11,13
	.byte	'next',0
	.word	.L196-.L45
	.byte	4,2,35,12,13
	.byte	'callback_arg',0
	.word	348
	.byte	4,2,35,16,13
	.byte	'state',0
	.word	183657
	.byte	1,2,35,20,13
	.byte	'prio',0
	.word	609
	.byte	1,2,35,21,13
	.byte	'local_port',0
	.word	626
	.byte	2,2,35,22,13
	.byte	'accept',0
	.word	.L197-.L45
	.byte	4,2,35,24,0
.L196:
	.byte	3
	.word	184058
	.byte	34
	.word	67004
	.byte	1,1,24
	.word	348
	.byte	24
	.word	.L198-.L45
	.byte	24
	.word	626
	.byte	0,3
	.word	184288
	.byte	35
	.byte	'tcp_sent_fn',0,46,96,17
	.word	184311
	.byte	34
	.word	67004
	.byte	1,1,24
	.word	348
	.byte	24
	.word	.L198-.L45
	.byte	24
	.word	67223
	.byte	24
	.word	67004
	.byte	0,3
	.word	184336
	.byte	35
	.byte	'tcp_recv_fn',0,46,82,17
	.word	184364
	.byte	35
	.byte	'tcp_connected_fn',0,46,134,1,17
	.word	.L199-.L45
	.byte	34
	.word	67004
	.byte	1,1,24
	.word	348
	.byte	24
	.word	.L198-.L45
	.byte	0,3
	.word	184415
	.byte	35
	.byte	'tcp_poll_fn',0,46,108,17
	.word	184433
	.byte	37,1,1,24
	.word	348
	.byte	24
	.word	67004
	.byte	0,3
	.word	184458
	.byte	35
	.byte	'tcp_err_fn',0,46,120,17
	.word	184472
	.byte	10
	.byte	'tcp_pcb',0,46,242,1,8,156,1,13
	.byte	'local_ip',0
	.word	67054
	.byte	4,2,35,0,13
	.byte	'remote_ip',0
	.word	67054
	.byte	4,2,35,4,13
	.byte	'netif_idx',0
	.word	609
	.byte	1,2,35,8,13
	.byte	'so_options',0
	.word	609
	.byte	1,2,35,9,13
	.byte	'tos',0
	.word	609
	.byte	1,2,35,10,13
	.byte	'ttl',0
	.word	609
	.byte	1,2,35,11,13
	.byte	'next',0
	.word	.L198-.L45
	.byte	4,2,35,12,13
	.byte	'callback_arg',0
	.word	348
	.byte	4,2,35,16,13
	.byte	'state',0
	.word	183657
	.byte	1,2,35,20,13
	.byte	'prio',0
	.word	609
	.byte	1,2,35,21,13
	.byte	'local_port',0
	.word	626
	.byte	2,2,35,22,13
	.byte	'remote_port',0
	.word	626
	.byte	2,2,35,24,13
	.byte	'flags',0
	.word	626
	.byte	2,2,35,26,13
	.byte	'polltmr',0
	.word	609
	.byte	1,2,35,28,13
	.byte	'pollinterval',0
	.word	609
	.byte	1,2,35,29,13
	.byte	'last_timer',0
	.word	609
	.byte	1,2,35,30,13
	.byte	'tmr',0
	.word	9730
	.byte	4,2,35,32,13
	.byte	'rcv_nxt',0
	.word	9730
	.byte	4,2,35,36,13
	.byte	'rcv_wnd',0
	.word	626
	.byte	2,2,35,40,13
	.byte	'rcv_ann_wnd',0
	.word	626
	.byte	2,2,35,42,13
	.byte	'rcv_ann_right_edge',0
	.word	9730
	.byte	4,2,35,44,13
	.byte	'rtime',0
	.word	67041
	.byte	2,2,35,48,13
	.byte	'mss',0
	.word	626
	.byte	2,2,35,50,13
	.byte	'rttest',0
	.word	9730
	.byte	4,2,35,52,13
	.byte	'rtseq',0
	.word	9730
	.byte	4,2,35,56,13
	.byte	'sa',0
	.word	67041
	.byte	2,2,35,60,13
	.byte	'sv',0
	.word	67041
	.byte	2,2,35,62,13
	.byte	'rto',0
	.word	67041
	.byte	2,2,35,64,13
	.byte	'nrtx',0
	.word	609
	.byte	1,2,35,66,13
	.byte	'dupacks',0
	.word	609
	.byte	1,2,35,67,13
	.byte	'lastack',0
	.word	9730
	.byte	4,2,35,68,13
	.byte	'cwnd',0
	.word	626
	.byte	2,2,35,72,13
	.byte	'ssthresh',0
	.word	626
	.byte	2,2,35,74,13
	.byte	'rto_end',0
	.word	9730
	.byte	4,2,35,76,13
	.byte	'snd_nxt',0
	.word	9730
	.byte	4,2,35,80,13
	.byte	'snd_wl1',0
	.word	9730
	.byte	4,2,35,84,13
	.byte	'snd_wl2',0
	.word	9730
	.byte	4,2,35,88,13
	.byte	'snd_lbb',0
	.word	9730
	.byte	4,2,35,92,13
	.byte	'snd_wnd',0
	.word	626
	.byte	2,2,35,96,13
	.byte	'snd_wnd_max',0
	.word	626
	.byte	2,2,35,98,13
	.byte	'snd_buf',0
	.word	626
	.byte	2,2,35,100,13
	.byte	'snd_queuelen',0
	.word	626
	.byte	2,2,35,102,13
	.byte	'unsent_oversize',0
	.word	626
	.byte	2,2,35,104,13
	.byte	'bytes_acked',0
	.word	626
	.byte	2,2,35,106,13
	.byte	'unsent',0
	.word	184053
	.byte	4,2,35,108,13
	.byte	'unacked',0
	.word	184053
	.byte	4,2,35,112,13
	.byte	'ooseq',0
	.word	184053
	.byte	4,2,35,116,13
	.byte	'refused_data',0
	.word	67223
	.byte	4,2,35,120,13
	.byte	'listener',0
	.word	184283
	.byte	4,2,35,124,13
	.byte	'sent',0
	.word	184316
	.byte	4,3,35,128,1,13
	.byte	'recv',0
	.word	184369
	.byte	4,3,35,132,1,13
	.byte	'connected',0
	.word	184389
	.byte	4,3,35,136,1,13
	.byte	'poll',0
	.word	184438
	.byte	4,3,35,140,1,13
	.byte	'errf',0
	.word	184477
	.byte	4,3,35,144,1,13
	.byte	'keep_idle',0
	.word	9730
	.byte	4,3,35,148,1,13
	.byte	'persist_cnt',0
	.word	609
	.byte	1,3,35,152,1,13
	.byte	'persist_backoff',0
	.word	609
	.byte	1,3,35,153,1,13
	.byte	'persist_probe',0
	.word	609
	.byte	1,3,35,154,1,13
	.byte	'keep_cnt_sent',0
	.word	609
	.byte	1,3,35,155,1,0
.L198:
	.byte	3
	.word	184496
	.byte	34
	.word	67004
	.byte	1,1,24
	.word	348
	.byte	24
	.word	185558
	.byte	24
	.word	67004
	.byte	0
.L199:
	.byte	3
	.word	185563
.L197:
	.byte	35
	.byte	'tcp_accept_fn',0,46,70,17
	.word	185586
	.byte	3
	.word	185563
	.byte	3
	.word	184288
	.byte	3
	.word	184336
	.byte	3
	.word	185563
	.byte	3
	.word	184415
	.byte	3
	.word	184458
	.byte	37,1,1,24
	.word	609
	.byte	24
	.word	348
	.byte	0,3
	.word	185643
	.byte	35
	.byte	'tcp_extarg_callback_pcb_destroyed_fn',0,46,173,1,16
	.word	185657
	.byte	34
	.word	67004
	.byte	1,1,24
	.word	609
	.byte	24
	.word	184283
	.byte	24
	.word	185558
	.byte	0,3
	.word	185708
	.byte	35
	.byte	'tcp_extarg_callback_passive_open_fn',0,46,182,1,17
	.word	185731
	.byte	35
	.byte	'tcpflags_t',0,46,206,1,15
	.word	626
	.byte	35
	.byte	'netif_t',0,48,83,25
	.word	67408
	.byte	35
	.byte	'eth_addr_t',0,48,86,25
	.word	68802
	.byte	21,48,103,5,8,13
	.byte	'arp',0
	.word	626
	.byte	2,2,35,0,13
	.byte	'tcp_fast',0
	.word	626
	.byte	2,2,35,2,13
	.byte	'tcp_slow',0
	.word	626
	.byte	2,2,35,4,13
	.byte	'link',0
	.word	626
	.byte	2,2,35,6,0,14
	.word	626
.L171:
	.byte	21,48,96,9,68,13
	.byte	'netif',0
	.word	67408
	.byte	48,2,35,0,13
	.byte	'eth_addr',0
	.word	68802
	.byte	6,2,35,48,13
	.byte	'timer',0
	.word	185836
	.byte	8,2,35,56,13
	.byte	'timerFlags',0
	.word	185905
	.byte	2,2,35,64,0,35
	.byte	'Ifx_Lwip',0,48,116,3
	.word	185910
.L170:
	.byte	14
	.word	9730
	.byte	15,144,20
	.word	609
	.byte	16,143,20,0
.L173:
	.byte	15,128,161,1
	.word	186006
	.byte	16,7,0,35
	.byte	'_iob_flag_t',0,26,82,25
	.word	626
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L46:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,13,0,73,19,11,15,56,9,0,0,21,19,1,58,15,59,15
	.byte	57,15,11,15,0,0,22,38,0,73,19,0,0,23,46,1,3,8,54,15,39,12,63,12,60,12,0,0,24,5,0,73,19,0,0,25,46,1,3,8
	.byte	73,19,54,15,39,12,63,12,60,12,0,0,26,5,0,3,8,73,19,0,0,27,46,0,3,8,54,15,39,12,63,12,60,12,0,0,28,46,0
	.byte	3,8,73,19,54,15,39,12,63,12,60,12,0,0,29,46,1,49,19,0,0,30,5,0,49,19,0,0,31,29,1,49,19,0,0,32,11,0,49
	.byte	19,0,0,33,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,34,21,1,73,19,54,15,39,12,0,0,35,22,0
	.byte	3,8,58,15,59,15,57,15,73,19,0,0,36,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,37,21
	.byte	1,54,15,39,12,0,0,38,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,39,55,0,73,19,0,0,40,5,0,58
	.byte	15,59,15,57,15,73,19,0,0,41,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,42,21,0,54,15,0,0,43,4,1
	.byte	3,8,58,15,59,15,57,15,11,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L47:
	.word	.L201-.L200
.L200:
	.half	3
	.word	.L203-.L202
.L202:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxSrc.h',0,6,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxGeth.h',0,7,0,0
	.byte	'IfxGeth_regdef.h',0,3,0,0
	.byte	'IfxGeth_Eth.h',0,8,0,0
	.byte	'netif.h',0,9,0,0
	.byte	'ip4_addr.h',0,9,0,0
	.byte	'pbuf.h',0,9,0,0
	.byte	'tcp_priv.h',0,10,0,0
	.byte	'init.h',0,9,0,0
	.byte	'etharp.h',0,9,0,0
	.byte	'ethernet.h',0,11,0,0
	.byte	'ethernet.h',0,12,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'Ifx_Netif.h',0,13,0,0
	.byte	'UART_Logging.h',0,14,0,0
	.byte	'stdio.h',0,15,0,0
	.byte	'stdarg.h',0,15,0,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0,0,0,0
	.byte	'stddef.h',0,15,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,5,0,0
	.byte	'IfxGeth_PinMap.h',0,16,0,0
	.byte	'cc.h',0,17,0,0
	.byte	'stdint.h',0,15,0,0
	.byte	'mem.h',0,9,0,0
	.byte	'err.h',0,9,0,0
	.byte	'ip_addr.h',0,9,0,0
	.byte	'ip4.h',0,12,0,0
	.byte	'udp.h',0,9,0,0
	.byte	'tcpbase.h',0,9,0,0
	.byte	'tcp.h',0,9,0,0
	.byte	'tcp.h',0,12,0,0
	.byte	'Ifx_Lwip.h',0,13,0,0,0
.L203:
.L201:
	.sdecl	'.debug_info',debug,cluster('Ifx_Lwip_printf')
	.sect	'.debug_info'
.L48:
	.word	296
	.half	3
	.word	.L49
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L51,.L50
	.byte	2
	.word	.L44
	.byte	3
	.byte	'Ifx_Lwip_printf',0,1,215,3,6
	.word	.L109
	.byte	1,1,1
	.word	.L43,.L110,.L42
	.byte	4
	.byte	'format',0,1,215,3,34
	.word	.L111,.L112
	.byte	5,1,215,3,42,6
	.word	.L43,.L110
	.byte	7
	.byte	'str',0,1,218,3,13
	.word	.L113,.L114
	.byte	6
	.word	.L115,.L116
	.byte	7
	.byte	'cnt',0,1,226,3,19
	.word	.L117,.L118
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Lwip_printf')
	.sect	'.debug_abbrev'
.L49:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,24,0,58,15,59,15,57,15
	.byte	0,0,6,11,1,17,1,18,1,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Lwip_printf')
	.sect	'.debug_line'
.L50:
	.word	.L205-.L204
.L204:
	.half	3
	.word	.L207-.L206
.L206:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0,0,0,0,0
.L207:
	.byte	5,6,7,0,5,2
	.word	.L43
	.byte	3,214,3,1,5,5,9
	.half	.L187-.L43
	.byte	3,7,1,5,15,9
	.half	.L208-.L187
	.byte	3,1,1,5,20,9
	.half	.L186-.L208
	.byte	1,5,5,3,127,1,5,23,9
	.half	.L115-.L186
	.byte	3,4,1,5,18,3,1,1,5,15,9
	.half	.L188-.L115
	.byte	1,5,26,9
	.half	.L209-.L188
	.byte	1,5,16,7,9
	.half	.L24-.L209
	.byte	3,1,1,5,18,3,127,1,5,16,9
	.half	.L189-.L24
	.byte	3,1,1,5,26,9
	.half	.L190-.L189
	.byte	3,127,1,5,25,7,9
	.half	.L23-.L190
	.byte	3,2,1,5,30,9
	.half	.L210-.L23
	.byte	1,5,25,9
	.half	.L191-.L210
	.byte	3,1,1,5,33,9
	.half	.L211-.L191
	.byte	1,5,12,9
	.half	.L116-.L211
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L52-.L116
	.byte	0,1,1
.L205:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Lwip_printf')
	.sect	'.debug_ranges'
.L51:
	.word	-1,.L43,0,.L52-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('sys_now')
	.sect	'.debug_info'
.L53:
	.word	219
	.half	3
	.word	.L54
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L56,.L55
	.byte	2
	.word	.L44
	.byte	3
	.byte	'sys_now',0,2,1,178,3,14
	.word	.L119
	.byte	1,1,1
	.word	.L37,.L120,.L36
	.byte	4
	.word	.L37,.L120
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('sys_now')
	.sect	'.debug_abbrev'
.L54:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,32,13,58,15,59,15,57,15
	.byte	73,16,54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('sys_now')
	.sect	'.debug_line'
.L55:
	.word	.L213-.L212
.L212:
	.half	3
	.word	.L215-.L214
.L214:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0,0,0,0,0
.L215:
	.byte	5,12,7,0,5,2
	.word	.L37
	.byte	3,179,3,1,5,1,9
	.half	.L216-.L37
	.byte	3,1,1,7,9
	.half	.L57-.L216
	.byte	0,1,1
.L213:
	.sdecl	'.debug_ranges',debug,cluster('sys_now')
	.sect	'.debug_ranges'
.L56:
	.word	-1,.L37,0,.L57-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Lwip_init')
	.sect	'.debug_info'
.L58:
	.word	333
	.half	3
	.word	.L59
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L61,.L60
	.byte	2
	.word	.L44
	.byte	3
	.byte	'Ifx_Lwip_init',0,1,252,2,6,1,1,1
	.word	.L35,.L121,.L34
	.byte	4
	.byte	'ethAddr',0,1,252,2,31
	.word	.L122,.L123
	.byte	5
	.word	.L35,.L121
	.byte	5
	.word	.L124,.L121
	.byte	6
	.byte	'default_ipaddr',0,1,130,3,15
	.word	.L125,.L126
	.byte	6
	.byte	'default_netmask',0,1,130,3,31
	.word	.L125,.L127
	.byte	6
	.byte	'default_gw',0,1,130,3,48
	.word	.L125,.L128
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Lwip_init')
	.sect	'.debug_abbrev'
.L59:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Lwip_init')
	.sect	'.debug_line'
.L60:
	.word	.L218-.L217
.L217:
	.half	3
	.word	.L220-.L219
.L219:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0,0,0,0,0
.L220:
	.byte	5,6,7,0,5,2
	.word	.L35
	.byte	3,251,2,1,5,13,9
	.half	.L184-.L35
	.byte	3,4,1,5,5,9
	.half	.L124-.L184
	.byte	3,3,1,9
	.half	.L221-.L124
	.byte	3,1,1,9
	.half	.L222-.L221
	.byte	3,1,1,5,14,9
	.half	.L223-.L222
	.byte	3,5,1,5,5,9
	.half	.L224-.L223
	.byte	3,3,1,5,21,9
	.half	.L225-.L224
	.byte	1,5,9,9
	.half	.L226-.L225
	.byte	3,2,1,5,20,9
	.half	.L227-.L226
	.byte	1,5,36,9
	.half	.L228-.L227
	.byte	1,5,31,9
	.half	.L229-.L228
	.byte	3,127,1,5,48,9
	.half	.L230-.L229
	.byte	1,5,66,9
	.half	.L231-.L230
	.byte	1,5,30,9
	.half	.L232-.L231
	.byte	3,2,1,5,25,9
	.half	.L233-.L232
	.byte	3,1,1,5,29,9
	.half	.L234-.L233
	.byte	3,26,1,5,44,9
	.half	.L235-.L234
	.byte	1,5,1,9
	.half	.L62-.L235
	.byte	3,3,0,1,1
.L218:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Lwip_init')
	.sect	'.debug_ranges'
.L61:
	.word	-1,.L35,0,.L62-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Lwip_onTimerTick')
	.sect	'.debug_info'
.L63:
	.word	252
	.half	3
	.word	.L64
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L66,.L65
	.byte	2
	.word	.L44
	.byte	3
	.byte	'Ifx_Lwip_onTimerTick',0,1,244,1,6,1,1,1
	.word	.L27,.L129,.L26
	.byte	4
	.word	.L27,.L129
	.byte	5
	.byte	'timerFlags',0,1,247,1,15
	.word	.L130,.L131
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Lwip_onTimerTick')
	.sect	'.debug_abbrev'
.L64:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Lwip_onTimerTick')
	.sect	'.debug_line'
.L65:
	.word	.L237-.L236
.L236:
	.half	3
	.word	.L239-.L238
.L238:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0,0,0,0,0
.L239:
	.byte	5,29,7,0,5,2
	.word	.L27
	.byte	3,245,1,1,5,5,9
	.half	.L240-.L27
	.byte	3,3,1,5,32,9
	.half	.L241-.L240
	.byte	3,126,1,5,5,9
	.half	.L242-.L241
	.byte	3,2,1,5,32,3,126,1,5,5,9
	.half	.L175-.L242
	.byte	3,2,1,3,2,1,9
	.half	.L243-.L175
	.byte	3,1,1,9
	.half	.L244-.L243
	.byte	3,7,1,9
	.half	.L245-.L244
	.byte	3,118,1,9
	.half	.L2-.L245
	.byte	3,2,1,9
	.half	.L3-.L2
	.byte	3,1,1,9
	.half	.L4-.L3
	.byte	3,7,1,5,22,9
	.half	.L5-.L4
	.byte	3,2,1,5,1,9
	.half	.L246-.L5
	.byte	3,1,1,9
	.half	.L67-.L246
	.byte	0,1,1
.L237:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Lwip_onTimerTick')
	.sect	'.debug_ranges'
.L66:
	.word	-1,.L27,0,.L67-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Lwip_pollTimerFlags')
	.sect	'.debug_info'
.L68:
	.word	519
	.half	3
	.word	.L69
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L71,.L70
	.byte	2
	.word	.L44
	.byte	3
	.byte	'Ifx_Lwip_pollTimerFlags',0,1,138,2,6,1,1,1
	.word	.L29,.L132,.L28
	.byte	4
	.word	.L29,.L132
	.byte	5
	.byte	'timerFlags',0,1,141,2,15
	.word	.L130,.L133
	.byte	6
	.word	.L134,.L29,.L135
	.byte	7
	.word	.L136,.L29,.L135
	.byte	6
	.word	.L137,.L29,.L138
	.byte	7
	.word	.L139,.L29,.L138
	.byte	5
	.byte	'reg',0,2,235,5,17
	.word	.L140,.L141
	.byte	0,0,0,0,6
	.word	.L142,.L143,.L6
	.byte	8
	.word	.L144,.L145
	.byte	9
	.word	.L146,.L143,.L6
	.byte	0,10
	.word	.L147
	.byte	5
	.byte	'ctrl_status',0,1,191,2,43
	.word	.L149,.L150
	.byte	4
	.word	.L14,.L132
	.byte	5
	.byte	'ethernetif',0,1,196,2,26
	.word	.L151,.L152
	.byte	6
	.word	.L153,.L154,.L16
	.byte	8
	.word	.L155,.L156
	.byte	8
	.word	.L157,.L158
	.byte	9
	.word	.L159,.L154,.L16
	.byte	0,6
	.word	.L153,.L16,.L160
	.byte	8
	.word	.L155,.L156
	.byte	8
	.word	.L157,.L158
	.byte	9
	.word	.L159,.L16,.L160
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Lwip_pollTimerFlags')
	.sect	'.debug_abbrev'
.L69:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,10,11,1
	.byte	85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Lwip_pollTimerFlags')
	.sect	'.debug_line'
.L70:
	.word	.L248-.L247
.L247:
	.half	3
	.word	.L250-.L249
.L249:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std',0,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0,0,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxGeth.h',0,2,0,0,0
.L250:
	.byte	4,2,5,19,7,0,5,2
	.word	.L29
	.byte	3,235,5,1,5,17,9
	.half	.L176-.L29
	.byte	3,1,1,5,21,9
	.half	.L177-.L176
	.byte	1,5,14,9
	.half	.L138-.L177
	.byte	3,8,1,5,10,9
	.half	.L251-.L138
	.byte	3,1,1,4,1,5,23,9
	.half	.L135-.L251
	.byte	3,150,124,1,5,28,9
	.half	.L252-.L135
	.byte	3,6,1,5,24,9
	.half	.L178-.L252
	.byte	3,1,1,5,22,1,4,2,5,5,9
	.half	.L143-.L178
	.byte	3,245,5,1,5,17,7,9
	.half	.L253-.L143
	.byte	3,2,1,4,1,5,5,9
	.half	.L6-.L253
	.byte	3,158,122,1,5,25,7,9
	.half	.L254-.L6
	.byte	3,3,1,5,9,9
	.half	.L255-.L254
	.byte	1,5,24,7,9
	.half	.L256-.L255
	.byte	3,1,1,5,5,9
	.half	.L7-.L256
	.byte	3,3,1,5,25,7,9
	.half	.L257-.L7
	.byte	3,3,1,5,9,9
	.half	.L258-.L257
	.byte	1,5,24,7,9
	.half	.L259-.L258
	.byte	3,1,1,5,5,9
	.half	.L9-.L259
	.byte	3,3,1,5,25,7,9
	.half	.L260-.L9
	.byte	3,3,1,5,9,9
	.half	.L261-.L260
	.byte	1,5,23,7,9
	.half	.L262-.L261
	.byte	3,1,1,5,5,9
	.half	.L11-.L262
	.byte	3,3,1,5,54,7,9
	.half	.L148-.L11
	.byte	3,3,1,5,26,9
	.half	.L179-.L148
	.byte	3,1,1,5,9,9
	.half	.L263-.L179
	.byte	1,5,40,7,9
	.half	.L264-.L263
	.byte	3,1,1,5,1,9
	.half	.L13-.L264
	.byte	3,22,1,5,51,7,9
	.half	.L14-.L13
	.byte	3,108,1,5,53,9
	.half	.L181-.L14
	.byte	3,3,1,5,13,9
	.half	.L265-.L181
	.byte	3,127,1,4,3,5,33,7,9
	.half	.L154-.L265
	.byte	3,147,9,1,5,37,9
	.half	.L266-.L154
	.byte	1,4,1,5,94,3,238,118,1,4,3,5,33,9
	.half	.L16-.L266
	.byte	3,146,9,1,5,37,9
	.half	.L267-.L16
	.byte	1,4,1,5,30,9
	.half	.L160-.L267
	.byte	3,242,118,1,5,52,9
	.half	.L268-.L160
	.byte	3,2,1,5,13,9
	.half	.L269-.L268
	.byte	3,126,1,5,63,7,9
	.half	.L270-.L269
	.byte	3,2,1,5,88,1,5,17,9
	.half	.L18-.L270
	.byte	3,2,1,5,67,7,9
	.half	.L271-.L18
	.byte	3,2,1,5,93,1,5,67,9
	.half	.L20-.L271
	.byte	3,3,1,5,38,9
	.half	.L180-.L20
	.byte	3,1,1,5,1,9
	.half	.L72-.L180
	.byte	3,3,0,1,1
.L248:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Lwip_pollTimerFlags')
	.sect	'.debug_ranges'
.L71:
	.word	-1,.L29,0,.L72-.L29,0,0
.L147:
	.word	-1,.L29,.L148-.L29,.L13-.L29,.L14-.L29,.L132-.L29,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Lwip_pollReceiveFlags')
	.sect	'.debug_info'
.L73:
	.word	232
	.half	3
	.word	.L74
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L76,.L75
	.byte	2
	.word	.L44
	.byte	3
	.byte	'Ifx_Lwip_pollReceiveFlags',0,1,220,2,6,1,1,1
	.word	.L31,.L161,.L30
	.byte	4
	.word	.L31,.L161
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Lwip_pollReceiveFlags')
	.sect	'.debug_abbrev'
.L74:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Lwip_pollReceiveFlags')
	.sect	'.debug_line'
.L75:
	.word	.L273-.L272
.L272:
	.half	3
	.word	.L275-.L274
.L274:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0,0,0,0,0
.L275:
	.byte	5,26,7,0,5,2
	.word	.L31
	.byte	3,226,2,1,5,32,9
	.half	.L276-.L31
	.byte	1,5,1,7,9
	.half	.L77-.L276
	.byte	3,2,0,1,1
.L273:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Lwip_pollReceiveFlags')
	.sect	'.debug_ranges'
.L76:
	.word	-1,.L31,0,.L77-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('netif_state_changed')
	.sect	'.debug_info'
.L78:
	.word	283
	.half	3
	.word	.L79
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L81,.L80
	.byte	2
	.word	.L44
	.byte	3
	.byte	'netif_state_changed',0,1,234,2,6,1,1,1
	.word	.L33,.L162,.L32
	.byte	4
	.byte	'netif',0,1,234,2,40
	.word	.L163,.L164
	.byte	4
	.byte	'reason',0,1,234,2,66
	.word	.L130,.L165
	.byte	4
	.byte	'args',0,1,234,2,107
	.word	.L166,.L167
	.byte	5
	.word	.L33,.L162
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('netif_state_changed')
	.sect	'.debug_abbrev'
.L79:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('netif_state_changed')
	.sect	'.debug_line'
.L80:
	.word	.L278-.L277
.L277:
	.half	3
	.word	.L280-.L279
.L279:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0,0,0,0,0
.L280:
	.byte	5,6,7,0,5,2
	.word	.L33
	.byte	3,233,2,1,5,9,9
	.half	.L182-.L33
	.byte	3,2,1,5,1,9
	.half	.L82-.L182
	.byte	3,7,0,1,1
.L278:
	.sdecl	'.debug_ranges',debug,cluster('netif_state_changed')
	.sect	'.debug_ranges'
.L81:
	.word	-1,.L33,0,.L82-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('ISR_Geth_Tx')
	.sect	'.debug_info'
.L83:
	.word	218
	.half	3
	.word	.L84
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L86,.L85
	.byte	2
	.word	.L44
	.byte	3
	.byte	'ISR_Geth_Tx',0,1,190,3,1,1,1,1
	.word	.L39,.L168,.L38
	.byte	4
	.word	.L39,.L168
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('ISR_Geth_Tx')
	.sect	'.debug_abbrev'
.L84:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('ISR_Geth_Tx')
	.sect	'.debug_line'
.L85:
	.word	.L282-.L281
.L281:
	.half	3
	.word	.L284-.L283
.L283:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0,0,0,0,0
.L284:
	.byte	5,5,7,0,5,2
	.word	.L39
	.byte	3,191,3,1,5,15,9
	.half	.L285-.L39
	.byte	1,5,1,9
	.half	.L286-.L285
	.byte	3,1,1,7,9
	.half	.L87-.L286
	.byte	0,1,1
.L282:
	.sdecl	'.debug_ranges',debug,cluster('ISR_Geth_Tx')
	.sect	'.debug_ranges'
.L86:
	.word	-1,.L39,0,.L87-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('ISR_Geth_Rx')
	.sect	'.debug_info'
.L88:
	.word	218
	.half	3
	.word	.L89
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L91,.L90
	.byte	2
	.word	.L44
	.byte	3
	.byte	'ISR_Geth_Rx',0,1,202,3,1,1,1,1
	.word	.L41,.L169,.L40
	.byte	4
	.word	.L41,.L169
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('ISR_Geth_Rx')
	.sect	'.debug_abbrev'
.L89:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('ISR_Geth_Rx')
	.sect	'.debug_line'
.L90:
	.word	.L288-.L287
.L287:
	.half	3
	.word	.L290-.L289
.L289:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0,0,0,0,0
.L290:
	.byte	5,5,7,0,5,2
	.word	.L41
	.byte	3,203,3,1,5,15,9
	.half	.L291-.L41
	.byte	1,5,1,9
	.half	.L292-.L291
	.byte	3,1,1,7,9
	.half	.L92-.L292
	.byte	0,1,1
.L288:
	.sdecl	'.debug_ranges',debug,cluster('ISR_Geth_Rx')
	.sect	'.debug_ranges'
.L91:
	.word	-1,.L41,0,.L92-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('g_TickCount_1ms')
	.sect	'.debug_info'
.L93:
	.word	200
	.half	3
	.word	.L94
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'g_TickCount_1ms',0,28,209,1,17
	.word	.L170
	.byte	1,5,3
	.word	g_TickCount_1ms
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_TickCount_1ms')
	.sect	'.debug_abbrev'
.L94:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('g_Lwip')
	.sect	'.debug_info'
.L95:
	.word	191
	.half	3
	.word	.L96
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'g_Lwip',0,28,210,1,13
	.word	.L171
	.byte	1,5,3
	.word	g_Lwip
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_Lwip')
	.sect	'.debug_abbrev'
.L96:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('g_IfxGeth')
	.sect	'.debug_info'
.L97:
	.word	194
	.half	3
	.word	.L98
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'g_IfxGeth',0,28,211,1,13
	.word	.L172
	.byte	1,5,3
	.word	g_IfxGeth
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_IfxGeth')
	.sect	'.debug_abbrev'
.L98:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('channel0TxBuffer1')
	.sect	'.debug_info'
.L99:
	.word	202
	.half	3
	.word	.L100
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'channel0TxBuffer1',0,28,214,1,7
	.word	.L173
	.byte	1,5,3
	.word	channel0TxBuffer1
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('channel0TxBuffer1')
	.sect	'.debug_abbrev'
.L100:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('channel0RxBuffer1')
	.sect	'.debug_info'
.L101:
	.word	202
	.half	3
	.word	.L102
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'channel0RxBuffer1',0,28,215,1,7
	.word	.L173
	.byte	1,5,3
	.word	channel0RxBuffer1
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('channel0RxBuffer1')
	.sect	'.debug_abbrev'
.L102:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('isrTxCount')
	.sect	'.debug_info'
.L103:
	.word	195
	.half	3
	.word	.L104
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'isrTxCount',0,28,212,1,8
	.word	.L119
	.byte	1,5,3
	.word	isrTxCount
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('isrTxCount')
	.sect	'.debug_abbrev'
.L104:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('isrRxCount')
	.sect	'.debug_info'
.L105:
	.word	195
	.half	3
	.word	.L106
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'isrRxCount',0,28,213,1,8
	.word	.L119
	.byte	1,5,3
	.word	isrRxCount
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('isrRxCount')
	.sect	'.debug_abbrev'
.L106:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('g_extCallback')
	.sect	'.debug_info'
.L107:
	.word	197
	.half	3
	.word	.L108
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src\\Ifx_Lwip.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'g_extCallback',0,28,232,2,29
	.word	.L174
	.byte	5,3
	.word	g_extCallback
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_extCallback')
	.sect	'.debug_abbrev'
.L108:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('ISR_Geth_Rx')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L41,0,.L169-.L41
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('ISR_Geth_Tx')
	.sect	'.debug_loc'
.L38:
	.word	-1,.L39,0,.L168-.L39
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Lwip_init')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L184-.L35
	.half	2
	.byte	138,0
	.word	.L184-.L35,.L121-.L35
	.half	2
	.byte	138,24
	.word	.L121-.L35,.L121-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L128:
	.word	-1,.L35,0,.L121-.L35
	.half	2
	.byte	145,124
	.word	0,0
.L126:
	.word	-1,.L35,0,.L121-.L35
	.half	2
	.byte	145,116
	.word	0,0
.L127:
	.word	-1,.L35,0,.L121-.L35
	.half	2
	.byte	145,120
	.word	0,0
.L123:
	.word	-1,.L35,0,.L124-.L35
	.half	2
	.byte	144,34
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Lwip_onTimerTick')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L129-.L27
	.half	2
	.byte	138,0
	.word	0,0
.L131:
	.word	-1,.L27,.L175-.L27,.L129-.L27
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Lwip_pollReceiveFlags')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L161-.L31
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Lwip_pollTimerFlags')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L132-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L150:
	.word	-1,.L29,.L179-.L29,.L13-.L29
	.half	5
	.byte	144,32,157,32,0
	.word	.L14-.L29,.L180-.L29
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L145:
	.word	0,0
.L152:
	.word	-1,.L29,.L181-.L29,.L180-.L29
	.half	1
	.byte	98
	.word	0,0
.L156:
	.word	0,0
.L158:
	.word	0,0
.L141:
	.word	-1,.L29,.L176-.L29,.L177-.L29
	.half	1
	.byte	95
	.word	0,0
.L133:
	.word	-1,.L29,.L178-.L29,.L132-.L29
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Lwip_printf')
	.sect	'.debug_loc'
.L42:
	.word	-1,.L43,0,.L185-.L43
	.half	2
	.byte	138,0
	.word	.L185-.L43,.L110-.L43
	.half	3
	.byte	138,136,2
	.word	.L110-.L43,.L110-.L43
	.half	2
	.byte	138,0
	.word	0,0
.L118:
	.word	-1,.L43,.L188-.L43,.L189-.L43
	.half	1
	.byte	84
	.word	.L190-.L43,.L191-.L43
	.half	1
	.byte	84
	.word	0,0
.L112:
	.word	-1,.L43,0,.L186-.L43
	.half	1
	.byte	100
	.word	.L187-.L43,.L115-.L43
	.half	1
	.byte	101
	.word	0,0
.L114:
	.word	-1,.L43,0,.L110-.L43
	.half	3
	.byte	145,248,125
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('netif_state_changed')
	.sect	'.debug_loc'
.L167:
	.word	-1,.L33,0,.L162-.L33
	.half	1
	.byte	101
	.word	0,0
.L164:
	.word	-1,.L33,0,.L183-.L33
	.half	1
	.byte	100
	.word	0,0
.L32:
	.word	-1,.L33,0,.L182-.L33
	.half	2
	.byte	138,0
	.word	.L182-.L33,.L162-.L33
	.half	2
	.byte	138,16
	.word	.L162-.L33,.L162-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L165:
	.word	-1,.L33,0,.L162-.L33
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('sys_now')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L120-.L37
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L293:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Ifx_Lwip_onTimerTick')
	.sect	'.debug_frame'
	.word	16
	.word	.L293,.L27,.L129-.L27
	.byte	8,19,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Lwip_pollTimerFlags')
	.sect	'.debug_frame'
	.word	12
	.word	.L293,.L29,.L132-.L29
	.sdecl	'.debug_frame',debug,cluster('Ifx_Lwip_pollReceiveFlags')
	.sect	'.debug_frame'
	.word	12
	.word	.L293,.L31,.L161-.L31
	.sdecl	'.debug_frame',debug,cluster('netif_state_changed')
	.sect	'.debug_frame'
	.word	36
	.word	.L293,.L33,.L162-.L33
	.byte	4
	.word	(.L182-.L33)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L162-.L182)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Lwip_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L293,.L35,.L121-.L35
	.byte	4
	.word	(.L184-.L35)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L121-.L184)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('sys_now')
	.sect	'.debug_frame'
	.word	24
	.word	.L293,.L37,.L120-.L37
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('ISR_Geth_Tx')
	.sect	'.debug_frame'
	.word	12
	.word	.L293,.L39,.L168-.L39
	.sdecl	'.debug_frame',debug,cluster('ISR_Geth_Rx')
	.sect	'.debug_frame'
	.word	12
	.word	.L293,.L41,.L169-.L41
	.sdecl	'.debug_frame',debug,cluster('Ifx_Lwip_printf')
	.sect	'.debug_frame'
	.word	36
	.word	.L293,.L43,.L110-.L43
	.byte	4
	.word	(.L185-.L43)/2
	.byte	19,136,2,22,26,4,19,138,136,2,4
	.word	(.L110-.L185)/2
	.byte	19,0,8,26

; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   491  
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   492  #if defined(__GNUC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   493  #pragma section // end text section
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   494  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   495  #if defined(__TASKING__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   496  #pragma section code restore
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   497  #pragma section fardata restore
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   498  #pragma section farbss restore
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   499  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   500  #if defined(__DCC__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   501  #pragma section CODE
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   502  #pragma section DATA RW
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   503  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   504  #if defined(__ghs__)
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   505  #pragma ghs section text=default
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   506  #pragma ghs section data=default
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   507  #pragma ghs section bss=default
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   508  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\port\src\Ifx_Lwip.c	   509  

	; Module end
