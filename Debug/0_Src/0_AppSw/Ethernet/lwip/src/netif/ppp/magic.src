	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\.magic.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Rtl8211f -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\magic.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\magic.src ..\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\magic.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\magic.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	735
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\magic.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'int',0,4,5,3
	.word	172
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	179
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.word	221
	.byte	7
	.word	221
	.byte	8
	.byte	'__cmpswapw',0
	.word	237
	.byte	1,1,1,1,9
	.byte	'p',0
	.word	242
	.byte	9
	.byte	'value',0
	.word	221
	.byte	9
	.byte	'compare',0
	.word	221
	.byte	0,2
	.byte	'short int',0,2,5,10
	.byte	'__wchar_t',0,1,1,1
	.word	299
	.byte	10
	.byte	'__size_t',0,1,1,1
	.word	221
	.byte	10
	.byte	'__ptrdiff_t',0,1,1,1
	.word	172
	.byte	11,1,7
	.word	367
	.byte	10
	.byte	'__codeptr',0,1,1,1
	.word	369
	.byte	10
	.byte	'__intptr_t',0,1,1,1
	.word	172
	.byte	10
	.byte	'__uintptr_t',0,1,1,1
	.word	221
	.byte	2
	.byte	'unsigned char',0,1,8,10
	.byte	'uint8',0,2,108,29
	.word	431
	.byte	2
	.byte	'unsigned short int',0,2,7,10
	.byte	'uint16',0,2,112,29
	.word	462
	.byte	2
	.byte	'unsigned long int',0,4,7,10
	.byte	'uint32',0,2,116,29
	.word	499
	.byte	2
	.byte	'char',0,1,6,10
	.byte	'sint8',0,2,125,29
	.word	535
	.byte	10
	.byte	'sint16',0,2,129,1,29
	.word	299
	.byte	2
	.byte	'long int',0,4,5,10
	.byte	'sint32',0,2,134,1,29
	.word	573
	.byte	2
	.byte	'long long int',0,8,5,10
	.byte	'sint64',0,2,141,1,29
	.word	601
	.byte	2
	.byte	'float',0,4,4,10
	.byte	'float32',0,2,170,1,29
	.word	634
	.byte	12
	.byte	'void',0,7
	.word	660
	.byte	10
	.byte	'pvoid',0,3,54,28
	.word	666
	.byte	10
	.byte	'Ifx_TickTime',0,3,76,28
	.word	601
	.byte	10
	.byte	'u32_t',0,4,87,16
	.word	499
	.byte	10
	.byte	'intmax_t',0,5,198,2,41
	.word	601
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,46,1,3,8,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,9,5,0,3,8,73,19,0,0,10,22,0,3,8,58,15,59,15,57,15,73,19,0,0,11,21,0,54,15,0,0,12,59,0
	.byte	3,8,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\magic.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'cc.h',0,2,0,0
	.byte	'stdint.h',0,3,0,0,0
.L9:
.L7:

; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	     1  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	     2   * magic.c - PPP Magic Number routines.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	     3   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	     4   * Copyright (c) 1984-2000 Carnegie Mellon University. All rights reserved.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	     5   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	     6   * Redistribution and use in source and binary forms, with or without
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	     7   * modification, are permitted provided that the following conditions
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	     8   * are met:
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	     9   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    10   * 1. Redistributions of source code must retain the above copyright
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    11   *    notice, this list of conditions and the following disclaimer.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    12   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    13   * 2. Redistributions in binary form must reproduce the above copyright
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    14   *    notice, this list of conditions and the following disclaimer in
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    15   *    the documentation and/or other materials provided with the
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    16   *    distribution.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    17   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    18   * 3. The name "Carnegie Mellon University" must not be used to
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    19   *    endorse or promote products derived from this software without
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    20   *    prior written permission. For permission or any legal
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    21   *    details, please contact
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    22   *      Office of Technology Transfer
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    23   *      Carnegie Mellon University
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    24   *      5000 Forbes Avenue
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    25   *      Pittsburgh, PA  15213-3890
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    26   *      (412) 268-4387, fax: (412) 268-7395
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    27   *      tech-transfer@andrew.cmu.edu
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    28   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    29   * 4. Redistributions of any form whatsoever must retain the following
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    30   *    acknowledgment:
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    31   *    "This product includes software developed by Computing Services
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    32   *     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    33   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    34   * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    35   * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    36   * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    37   * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    38   * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    39   * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    40   * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    41   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    42  /*****************************************************************************
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    43  * randm.c - Random number generator program file.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    44  *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    45  * Copyright (c) 2003 by Marc Boucher, Services Informatiques (MBSI) inc.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    46  * Copyright (c) 1998 by Global Election Systems Inc.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    47  *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    48  * The authors hereby grant permission to use, copy, modify, distribute,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    49  * and license this software and its documentation for any purpose, provided
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    50  * that existing copyright notices are retained in all copies and that this
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    51  * notice and the following disclaimer are included verbatim in any
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    52  * distributions. No written agreement, license, or royalty fee is required
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    53  * for any of the authorized uses.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    54  *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    55  * THIS SOFTWARE IS PROVIDED BY THE CONTRIBUTORS *AS IS* AND ANY EXPRESS OR
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    56  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    57  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    58  * IN NO EVENT SHALL THE CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    59  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    60  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    61  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    62  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    63  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    64  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    65  *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    66  ******************************************************************************
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    67  * REVISION HISTORY
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    68  *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    69  * 03-01-01 Marc Boucher <marc@mbsi.ca>
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    70  *   Ported to lwIP.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    71  * 98-06-03 Guy Lancaster <lancasterg@acm.org>, Global Election Systems Inc.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    72  *   Extracted from avos.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    73  *****************************************************************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    74  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    75  #include "netif/ppp/ppp_opts.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    76  #if PPP_SUPPORT /* don't build if not configured for use in lwipopts.h */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    77  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    78  #include "netif/ppp/ppp_impl.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    79  #include "netif/ppp/magic.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    80  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    81  #if PPP_MD5_RANDM /* Using MD5 for better randomness if enabled */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    82  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    83  #include "netif/ppp/pppcrypt.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    84  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    85  #define MD5_HASH_SIZE 16
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    86  static char magic_randpool[MD5_HASH_SIZE];   /* Pool of randomness. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    87  static long magic_randcount;      /* Pseudo-random incrementer */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    88  static u32_t magic_randomseed;    /* Seed used for random number generation. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    89  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    90  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    91   * Churn the randomness pool on a random event.  Call this early and often
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    92   *  on random and semi-random system events to build randomness in time for
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    93   *  usage.  For randomly timed events, pass a null pointer and a zero length
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    94   *  and this will use the system timer and other sources to add randomness.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    95   *  If new random data is available, pass a pointer to that and it will be
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    96   *  included.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    97   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    98   * Ref: Applied Cryptography 2nd Ed. by Bruce Schneier p. 427
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	    99   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   100  static void magic_churnrand(char *rand_data, u32_t rand_len) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   101    lwip_md5_context md5_ctx;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   102  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   103    /* LWIP_DEBUGF(LOG_INFO, ("magic_churnrand: %u@%P\n", rand_len, rand_data)); */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   104    lwip_md5_init(&md5_ctx);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   105    lwip_md5_starts(&md5_ctx);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   106    lwip_md5_update(&md5_ctx, (u_char *)magic_randpool, sizeof(magic_randpool));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   107    if (rand_data) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   108      lwip_md5_update(&md5_ctx, (u_char *)rand_data, rand_len);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   109    } else {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   110      struct {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   111        /* INCLUDE fields for any system sources of randomness */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   112        u32_t jiffies;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   113  #ifdef LWIP_RAND
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   114        u32_t rand;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   115  #endif /* LWIP_RAND */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   116      } sys_data;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   117      magic_randomseed += sys_jiffies();
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   118      sys_data.jiffies = magic_randomseed;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   119  #ifdef LWIP_RAND
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   120      sys_data.rand = LWIP_RAND();
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   121  #endif /* LWIP_RAND */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   122      /* Load sys_data fields here. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   123      lwip_md5_update(&md5_ctx, (u_char *)&sys_data, sizeof(sys_data));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   124    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   125    lwip_md5_finish(&md5_ctx, (u_char *)magic_randpool);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   126    lwip_md5_free(&md5_ctx);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   127  /*  LWIP_DEBUGF(LOG_INFO, ("magic_churnrand: -> 0\n")); */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   128  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   129  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   130  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   131   * Initialize the random number generator.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   132   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   133  void magic_init(void) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   134    magic_churnrand(NULL, 0);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   135  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   136  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   137  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   138   * Randomize our random seed value.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   139   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   140  void magic_randomize(void) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   141    magic_churnrand(NULL, 0);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   142  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   143  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   144  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   145   * magic_random_bytes - Fill a buffer with random bytes.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   146   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   147   * Use the random pool to generate random data.  This degrades to pseudo
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   148   *  random when used faster than randomness is supplied using magic_churnrand().
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   149   * Note: It's important that there be sufficient randomness in magic_randpool
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   150   *  before this is called for otherwise the range of the result may be
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   151   *  narrow enough to make a search feasible.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   152   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   153   * Ref: Applied Cryptography 2nd Ed. by Bruce Schneier p. 427
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   154   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   155   * XXX Why does he not just call magic_churnrand() for each block?  Probably
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   156   *  so that you don't ever publish the seed which could possibly help
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   157   *  predict future values.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   158   * XXX Why don't we preserve md5 between blocks and just update it with
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   159   *  magic_randcount each time?  Probably there is a weakness but I wish that
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   160   *  it was documented.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   161   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   162  void magic_random_bytes(unsigned char *buf, u32_t buf_len) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   163    lwip_md5_context md5_ctx;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   164    u_char tmp[MD5_HASH_SIZE];
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   165    u32_t n;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   166  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   167    while (buf_len > 0) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   168      lwip_md5_init(&md5_ctx);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   169      lwip_md5_starts(&md5_ctx);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   170      lwip_md5_update(&md5_ctx, (u_char *)magic_randpool, sizeof(magic_randpool));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   171      lwip_md5_update(&md5_ctx, (u_char *)&magic_randcount, sizeof(magic_randcount));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   172      lwip_md5_finish(&md5_ctx, tmp);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   173      lwip_md5_free(&md5_ctx);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   174      magic_randcount++;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   175      n = LWIP_MIN(buf_len, MD5_HASH_SIZE);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   176      MEMCPY(buf, tmp, n);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   177      buf += n;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   178      buf_len -= n;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   179    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   180  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   181  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   182  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   183   * Return a new random number.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   184   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   185  u32_t magic(void) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   186    u32_t new_rand;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   187  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   188    magic_random_bytes((unsigned char *)&new_rand, sizeof(new_rand));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   189  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   190    return new_rand;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   191  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   192  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   193  #else /* PPP_MD5_RANDM */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   194  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   195  /*****************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   196  /*** LOCAL DATA STRUCTURES ***/
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   197  /*****************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   198  #ifndef LWIP_RAND
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   199  static int  magic_randomized;       /* Set when truely randomized. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   200  #endif /* LWIP_RAND */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   201  static u32_t magic_randomseed;      /* Seed used for random number generation. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   202  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   203  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   204  /***********************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   205  /*** PUBLIC FUNCTION DEFINITIONS ***/
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   206  /***********************************/
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   207  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   208  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   209   * Initialize the random number generator.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   210   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   211   * Here we attempt to compute a random number seed but even if
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   212   * it isn't random, we'll randomize it later.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   213   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   214   * The current method uses the fields from the real time clock,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   215   * the idle process counter, the millisecond counter, and the
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   216   * hardware timer tick counter.  When this is invoked
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   217   * in startup(), then the idle counter and timer values may
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   218   * repeat after each boot and the real time clock may not be
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   219   * operational.  Thus we call it again on the first random
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   220   * event.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   221   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   222  void magic_init(void) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   223    magic_randomseed += sys_jiffies();
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   224  #ifndef LWIP_RAND
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   225    /* Initialize the Borland random number generator. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   226    srand((unsigned)magic_randomseed);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   227  #endif /* LWIP_RAND */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   228  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   229  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   230  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   231   * magic_init - Initialize the magic number generator.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   232   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   233   * Randomize our random seed value.  Here we use the fact that
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   234   * this function is called at *truely random* times by the polling
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   235   * and network functions.  Here we only get 16 bits of new random
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   236   * value but we use the previous value to randomize the other 16
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   237   * bits.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   238   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   239  void magic_randomize(void) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   240  #ifndef LWIP_RAND
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   241    if (!magic_randomized) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   242      magic_randomized = !0;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   243      magic_init();
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   244      /* The initialization function also updates the seed. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   245    } else {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   246  #endif /* LWIP_RAND */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   247      magic_randomseed += sys_jiffies();
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   248  #ifndef LWIP_RAND
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   249    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   250  #endif /* LWIP_RAND */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   251  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   252  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   253  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   254   * Return a new random number.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   255   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   256   * Here we use the Borland rand() function to supply a pseudo random
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   257   * number which we make truely random by combining it with our own
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   258   * seed which is randomized by truely random events.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   259   * Thus the numbers will be truely random unless there have been no
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   260   * operator or network events in which case it will be pseudo random
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   261   * seeded by the real time clock.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   262   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   263  u32_t magic(void) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   264  #ifdef LWIP_RAND
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   265    return LWIP_RAND() + magic_randomseed;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   266  #else /* LWIP_RAND */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   267    return ((u32_t)rand() << 16) + (u32_t)rand() + magic_randomseed;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   268  #endif /* LWIP_RAND */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   269  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   270  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   271  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   272   * magic_random_bytes - Fill a buffer with random bytes.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   273   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   274  void magic_random_bytes(unsigned char *buf, u32_t buf_len) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   275    u32_t new_rand, n;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   276  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   277    while (buf_len > 0) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   278      new_rand = magic();
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   279      n = LWIP_MIN(buf_len, sizeof(new_rand));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   280      MEMCPY(buf, &new_rand, n);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   281      buf += n;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   282      buf_len -= n;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   283    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   284  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   285  #endif /* PPP_MD5_RANDM */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   286  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   287  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   288   * Return a new random number between 0 and (2^pow)-1 included.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   289   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   290  u32_t magic_pow(u8_t pow) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   291    return magic() & ~(~0UL<<pow);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   292  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   293  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\ppp\magic.c	   294  #endif /* PPP_SUPPORT */

	; Module end
