	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\.lowpan6_ble.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Rtl8211f -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\lowpan6_ble.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\lowpan6_ble.src ..\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\lowpan6_ble.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\lowpan6_ble.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	737
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\lowpan6_ble.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\Debug\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'int',0,4,5,3
	.word	174
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	181
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.word	223
	.byte	7
	.word	223
	.byte	8
	.byte	'__cmpswapw',0
	.word	239
	.byte	1,1,1,1,9
	.byte	'p',0
	.word	244
	.byte	9
	.byte	'value',0
	.word	223
	.byte	9
	.byte	'compare',0
	.word	223
	.byte	0,2
	.byte	'short int',0,2,5,10
	.byte	'__wchar_t',0,1,1,1
	.word	301
	.byte	10
	.byte	'__size_t',0,1,1,1
	.word	223
	.byte	10
	.byte	'__ptrdiff_t',0,1,1,1
	.word	174
	.byte	11,1,7
	.word	369
	.byte	10
	.byte	'__codeptr',0,1,1,1
	.word	371
	.byte	10
	.byte	'__intptr_t',0,1,1,1
	.word	174
	.byte	10
	.byte	'__uintptr_t',0,1,1,1
	.word	223
	.byte	2
	.byte	'unsigned char',0,1,8,10
	.byte	'uint8',0,2,108,29
	.word	433
	.byte	2
	.byte	'unsigned short int',0,2,7,10
	.byte	'uint16',0,2,112,29
	.word	464
	.byte	2
	.byte	'unsigned long int',0,4,7,10
	.byte	'uint32',0,2,116,29
	.word	501
	.byte	2
	.byte	'char',0,1,6,10
	.byte	'sint8',0,2,125,29
	.word	537
	.byte	10
	.byte	'sint16',0,2,129,1,29
	.word	301
	.byte	2
	.byte	'long int',0,4,5,10
	.byte	'sint32',0,2,134,1,29
	.word	575
	.byte	2
	.byte	'long long int',0,8,5,10
	.byte	'sint64',0,2,141,1,29
	.word	603
	.byte	2
	.byte	'float',0,4,4,10
	.byte	'float32',0,2,170,1,29
	.word	636
	.byte	12
	.byte	'void',0,7
	.word	662
	.byte	10
	.byte	'pvoid',0,3,54,28
	.word	668
	.byte	10
	.byte	'Ifx_TickTime',0,3,76,28
	.word	603
	.byte	10
	.byte	'u32_t',0,4,87,16
	.word	501
	.byte	10
	.byte	'intmax_t',0,5,198,2,41
	.word	603
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,46,1,3,8,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,9,5,0,3,8,73,19,0,0,10,22,0,3,8,58,15,59,15,57,15,73,19,0,0,11,21,0,54,15,0,0,12,59,0
	.byte	3,8,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Client_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0,0
	.byte	'..\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\lowpan6_ble.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'cc.h',0,2,0,0
	.byte	'stdint.h',0,3,0,0,0
.L9:
.L7:

; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	     1  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	     2   * @file
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	     3   * 6LowPAN over BLE output for IPv6 (RFC7668).
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	     4  */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	     5  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	     6  /*
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	     7   * Copyright (c) 2017 Benjamin Aigner
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	     8   * Copyright (c) 2015 Inico Technologies Ltd. , Author: Ivan Delamer <delamer@inicotech.com>
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	     9   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    10   * All rights reserved.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    11   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    12   * Redistribution and use in source and binary forms, with or without modification,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    13   * are permitted provided that the following conditions are met:
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    14   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    15   * 1. Redistributions of source code must retain the above copyright notice,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    16   *    this list of conditions and the following disclaimer.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    17   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    18   *    this list of conditions and the following disclaimer in the documentation
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    19   *    and/or other materials provided with the distribution.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    20   * 3. The name of the author may not be used to endorse or promote products
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    21   *    derived from this software without specific prior written permission.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    22   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    23   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    24   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    25   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    26   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    27   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    28   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    29   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    30   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    31   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    32   * OF SUCH DAMAGE.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    33   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    34   * Author: Benjamin Aigner <aignerb@technikum-wien.at>
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    35   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    36   * Based on the original 6lowpan implementation of lwIP ( @see 6lowpan.c)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    37   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    38  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    39  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    40  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    41   * @defgroup rfc7668if 6LoWPAN over BLE (RFC7668)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    42   * @ingroup netifs
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    43   * This file implements a RFC7668 implementation for 6LoWPAN over
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    44   * Bluetooth Low Energy. The specification is very similar to 6LoWPAN,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    45   * so most of the code is re-used.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    46   * Compared to 6LoWPAN, much functionality is already implemented in
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    47   * lower BLE layers (fragmenting, session management,...).
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    48   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    49   * Usage:
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    50   * - add this netif
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    51   *   - don't add IPv4 addresses (no IPv4 support in RFC7668), pass 'NULL','NULL','NULL'
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    52   *   - use the BLE to EUI64 conversation util to create an IPv6 link-local address from the BLE MAC (@ref ble_addr_to_eui64)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    53   *   - input function: @ref rfc7668_input
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    54   * - set the link output function, which transmits output data to an established L2CAP channel
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    55   * - If data arrives (HCI event "L2CAP_DATA_PACKET"):
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    56   *   - allocate a @ref PBUF_RAW buffer
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    57   *   - let the pbuf struct point to the incoming data or copy it to the buffer
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    58   *   - call netif->input
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    59   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    60   * @todo:
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    61   * - further testing
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    62   * - support compression contexts
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    63   * - support multiple addresses
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    64   * - support multicast
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    65   * - support neighbor discovery
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    66   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    67  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    68  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    69  #include "netif/lowpan6_ble.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    70  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    71  #if LWIP_IPV6
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    72  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    73  #include "lwip/ip.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    74  #include "lwip/pbuf.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    75  #include "lwip/ip_addr.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    76  #include "lwip/netif.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    77  #include "lwip/nd6.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    78  #include "lwip/mem.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    79  #include "lwip/udp.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    80  #include "lwip/tcpip.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    81  #include "lwip/snmp.h"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    82  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    83  #include <string.h>
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    84  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    85  #if LWIP_6LOWPAN_NUM_CONTEXTS > 0
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    86  /** context memory, containing IPv6 addresses */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    87  static ip6_addr_t rfc7668_context[LWIP_6LOWPAN_NUM_CONTEXTS];
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    88  #else
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    89  #define rfc7668_context NULL
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    90  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    91  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    92  static struct lowpan6_link_addr rfc7668_local_addr;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    93  static struct lowpan6_link_addr rfc7668_peer_addr;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    94  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    95  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    96   * @ingroup rfc7668if
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    97   *  convert BT address to EUI64 addr
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    98   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	    99   * This method converts a Bluetooth MAC address to an EUI64 address,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   100   * which is used within IPv6 communication
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   101   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   102   * @param dst IPv6 destination space
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   103   * @param src BLE MAC address source
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   104   * @param public_addr If the LWIP_RFC7668_LINUX_WORKAROUND_PUBLIC_ADDRESS
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   105   * option is set, bit 0x02 will be set if param=0 (no public addr); cleared otherwise
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   106   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   107   * @see LWIP_RFC7668_LINUX_WORKAROUND_PUBLIC_ADDRESS
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   108   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   109  void
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   110  ble_addr_to_eui64(uint8_t *dst, const uint8_t *src, int public_addr)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   111  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   112    /* according to RFC7668 ch 3.2.2. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   113    memcpy(dst, src, 3);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   114    dst[3] = 0xFF;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   115    dst[4] = 0xFE;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   116    memcpy(&dst[5], &src[3], 3);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   117  #if LWIP_RFC7668_LINUX_WORKAROUND_PUBLIC_ADDRESS
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   118    if(public_addr) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   119      dst[0] &= ~0x02;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   120    } else {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   121      dst[0] |= 0x02;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   122    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   123  #else
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   124    LWIP_UNUSED_ARG(public_addr);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   125  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   126  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   127  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   128  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   129   * @ingroup rfc7668if
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   130   *  convert EUI64 address to Bluetooth MAC addr
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   131   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   132   * This method converts an EUI64 address to a Bluetooth MAC address,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   133   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   134   * @param dst BLE MAC address destination
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   135   * @param src IPv6 source
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   136   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   137   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   138  void
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   139  eui64_to_ble_addr(uint8_t *dst, const uint8_t *src)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   140  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   141    /* according to RFC7668 ch 3.2.2. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   142    memcpy(dst,src,3);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   143    memcpy(&dst[3],&src[5],3);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   144  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   145  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   146  /** Set an address used for stateful compression.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   147   * This expects an address of 6 or 8 bytes.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   148   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   149  static err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   150  rfc7668_set_addr(struct lowpan6_link_addr *addr, const u8_t *in_addr, size_t in_addr_len, int is_mac_48, int is_public_addr)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   151  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   152    if ((in_addr == NULL) || (addr == NULL)) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   153      return ERR_VAL;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   154    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   155    if (is_mac_48) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   156      if (in_addr_len != 6) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   157        return ERR_VAL;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   158      }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   159      addr->addr_len = 8;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   160      ble_addr_to_eui64(addr->addr, in_addr, is_public_addr);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   161    } else {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   162      if (in_addr_len != 8) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   163        return ERR_VAL;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   164      }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   165      addr->addr_len = 8;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   166      memcpy(addr->addr, in_addr, 8);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   167    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   168    return ERR_OK;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   169  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   170  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   171  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   172  /** Set the local address used for stateful compression.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   173   * This expects an address of 8 bytes.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   174   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   175  err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   176  rfc7668_set_local_addr_eui64(struct netif *netif, const u8_t *local_addr, size_t local_addr_len)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   177  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   178    /* netif not used for now, the address is stored globally... */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   179    LWIP_UNUSED_ARG(netif);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   180    return rfc7668_set_addr(&rfc7668_local_addr, local_addr, local_addr_len, 0, 0);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   181  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   182  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   183  /** Set the local address used for stateful compression.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   184   * This expects an address of 6 bytes.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   185   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   186  err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   187  rfc7668_set_local_addr_mac48(struct netif *netif, const u8_t *local_addr, size_t local_addr_len, int is_public_addr)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   188  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   189    /* netif not used for now, the address is stored globally... */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   190    LWIP_UNUSED_ARG(netif);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   191    return rfc7668_set_addr(&rfc7668_local_addr, local_addr, local_addr_len, 1, is_public_addr);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   192  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   193  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   194  /** Set the peer address used for stateful compression.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   195   * This expects an address of 8 bytes.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   196   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   197  err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   198  rfc7668_set_peer_addr_eui64(struct netif *netif, const u8_t *peer_addr, size_t peer_addr_len)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   199  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   200    /* netif not used for now, the address is stored globally... */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   201    LWIP_UNUSED_ARG(netif);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   202    return rfc7668_set_addr(&rfc7668_peer_addr, peer_addr, peer_addr_len, 0, 0);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   203  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   204  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   205  /** Set the peer address used for stateful compression.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   206   * This expects an address of 6 bytes.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   207   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   208  err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   209  rfc7668_set_peer_addr_mac48(struct netif *netif, const u8_t *peer_addr, size_t peer_addr_len, int is_public_addr)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   210  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   211    /* netif not used for now, the address is stored globally... */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   212    LWIP_UNUSED_ARG(netif);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   213    return rfc7668_set_addr(&rfc7668_peer_addr, peer_addr, peer_addr_len, 1, is_public_addr);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   214  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   215  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   216  /** Encapsulate IPv6 frames for BLE transmission
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   217   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   218   * This method implements the IPv6 header compression:
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   219   *  *) According to RFC6282
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   220   *  *) See Figure 2, contains base format of bit positions
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   221   *  *) Fragmentation not necessary (done at L2CAP layer of BLE)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   222   * @note Currently the pbuf allocation uses 256 bytes. If longer packets are used (possible due to MTU=1480Bytes), increase it here!
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   223   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   224   * @param p Pbuf struct, containing the payload data
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   225   * @param netif Output network interface. Should be of RFC7668 type
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   226   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   227   * @return Same as netif->output.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   228   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   229  static err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   230  rfc7668_compress(struct netif *netif, struct pbuf *p)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   231  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   232    struct pbuf *p_frag;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   233    u16_t remaining_len;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   234    u8_t *buffer;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   235    u8_t lowpan6_header_len;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   236    u8_t hidden_header_len;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   237    err_t err;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   238  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   239    LWIP_ASSERT("lowpan6_frag: netif->linkoutput not set", netif->linkoutput != NULL);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   240  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   241  #if LWIP_6LOWPAN_IPHC
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   242  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   243    /* We'll use a dedicated pbuf for building BLE fragments.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   244     * We'll over-allocate it by the bytes saved for header compression.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   245     */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   246    p_frag = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   247    if (p_frag == NULL) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   248      MIB2_STATS_NETIF_INC(netif, ifoutdiscards);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   249      return ERR_MEM;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   250    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   251    LWIP_ASSERT("this needs a pbuf in one piece", p_frag->len == p_frag->tot_len);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   252  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   253    /* Write IP6 header (with IPHC). */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   254    buffer = (u8_t*)p_frag->payload;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   255  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   256    err = lowpan6_compress_headers(netif, (u8_t *)p->payload, p->len, buffer, p_frag->len,
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   257      &lowpan6_header_len, &hidden_header_len, rfc7668_context, &rfc7668_local_addr, &rfc7668_peer_addr);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   258    if (err != ERR_OK) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   259      MIB2_STATS_NETIF_INC(netif, ifoutdiscards);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   260      pbuf_free(p_frag);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   261      return err;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   262    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   263    pbuf_remove_header(p, hidden_header_len);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   264  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   265    /* Calculate remaining packet length */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   266    remaining_len = p->tot_len;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   267  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   268    /* Copy IPv6 packet */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   269    pbuf_copy_partial(p, buffer + lowpan6_header_len, remaining_len, 0);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   270  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   271    /* Calculate frame length */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   272    p_frag->len = p_frag->tot_len = remaining_len + lowpan6_header_len;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   273  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   274    /* send the packet */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   275    MIB2_STATS_NETIF_ADD(netif, ifoutoctets, p_frag->tot_len);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   276    LWIP_DEBUGF(LWIP_LOWPAN6_DEBUG|LWIP_DBG_TRACE, ("rfc7668_output: sending packet %p\n", (void *)p));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   277    err = netif->linkoutput(netif, p_frag);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   278  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   279    pbuf_free(p_frag);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   280  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   281    return err;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   282  #else /* LWIP_6LOWPAN_IPHC */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   283    /* 6LoWPAN over BLE requires IPHC! */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   284    return ERR_IF;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   285  #endif/* LWIP_6LOWPAN_IPHC */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   286  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   287  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   288  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   289   * @ingroup rfc7668if
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   290   * Set context id IPv6 address
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   291   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   292   * Store one IPv6 address to a given context id.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   293   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   294   * @param idx Context id
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   295   * @param context IPv6 addr for this context
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   296   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   297   * @return ERR_OK (if everything is fine), ERR_ARG (if the context id is out of range), ERR_VAL (if contexts disabled)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   298   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   299  err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   300  rfc7668_set_context(u8_t idx, const ip6_addr_t *context)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   301  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   302  #if LWIP_6LOWPAN_NUM_CONTEXTS > 0
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   303    /* check if the ID is possible */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   304    if (idx >= LWIP_6LOWPAN_NUM_CONTEXTS) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   305      return ERR_ARG;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   306    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   307    /* copy IPv6 address to context storage */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   308    ip6_addr_set(&rfc7668_context[idx], context);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   309    return ERR_OK;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   310  #else
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   311    LWIP_UNUSED_ARG(idx);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   312    LWIP_UNUSED_ARG(context);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   313    return ERR_VAL;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   314  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   315  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   316  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   317  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   318   * @ingroup rfc7668if
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   319   * Compress outgoing IPv6 packet and pass it on to netif->linkoutput
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   320   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   321   * @param netif The lwIP network interface which the IP packet will be sent on.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   322   * @param q The pbuf(s) containing the IP packet to be sent.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   323   * @param ip6addr The IP address of the packet destination.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   324   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   325   * @return See rfc7668_compress
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   326   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   327  err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   328  rfc7668_output(struct netif *netif, struct pbuf *q, const ip6_addr_t *ip6addr)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   329  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   330    /* dst ip6addr is not used here, we only have one peer */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   331    LWIP_UNUSED_ARG(ip6addr);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   332  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   333    return rfc7668_compress(netif, q);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   334  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   335  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   336  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   337   * @ingroup rfc7668if
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   338   * Process a received raw payload from an L2CAP channel
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   339   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   340   * @param p the received packet, p->payload pointing to the
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   341   *        IPv6 header (maybe compressed)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   342   * @param netif the network interface on which the packet was received
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   343   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   344   * @return ERR_OK if everything was fine
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   345   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   346  err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   347  rfc7668_input(struct pbuf * p, struct netif *netif)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   348  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   349    u8_t * puc;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   350  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   351    MIB2_STATS_NETIF_ADD(netif, ifinoctets, p->tot_len);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   352  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   353    /* Load first header byte */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   354    puc = (u8_t*)p->payload;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   355    
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   356    /* no IP header compression */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   357    if (*puc == 0x41) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   358      LWIP_DEBUGF(LWIP_LOWPAN6_DECOMPRESSION_DEBUG, ("Completed packet, removing dispatch: 0x%2x \n", *puc));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   359      /* This is a complete IPv6 packet, just skip header byte. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   360      pbuf_remove_header(p, 1);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   361    /* IPHC header compression */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   362    } else if ((*puc & 0xe0 )== 0x60) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   363      LWIP_DEBUGF(LWIP_LOWPAN6_DECOMPRESSION_DEBUG, ("Completed packet, decompress dispatch: 0x%2x \n", *puc));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   364      /* IPv6 headers are compressed using IPHC. */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   365      p = lowpan6_decompress(p, 0, rfc7668_context, &rfc7668_peer_addr, &rfc7668_local_addr);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   366      /* if no pbuf is returned, handle as discarded packet */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   367      if (p == NULL) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   368        MIB2_STATS_NETIF_INC(netif, ifindiscards);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   369        return ERR_OK;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   370      }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   371    /* invalid header byte, discard */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   372    } else {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   373      LWIP_DEBUGF(LWIP_LOWPAN6_DECOMPRESSION_DEBUG, ("Completed packet, discarding: 0x%2x \n", *puc));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   374      MIB2_STATS_NETIF_INC(netif, ifindiscards);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   375      pbuf_free(p);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   376      return ERR_OK;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   377    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   378    /* @todo: distinguish unicast/multicast */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   379    MIB2_STATS_NETIF_INC(netif, ifinucastpkts);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   380  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   381  #if LWIP_RFC7668_IP_UNCOMPRESSED_DEBUG
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   382    {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   383      u16_t i;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   384      LWIP_DEBUGF(LWIP_RFC7668_IP_UNCOMPRESSED_DEBUG, ("IPv6 payload:\n"));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   385      for (i = 0; i < p->len; i++) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   386        if ((i%4)==0) {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   387          LWIP_DEBUGF(LWIP_RFC7668_IP_UNCOMPRESSED_DEBUG, ("\n"));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   388        }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   389        LWIP_DEBUGF(LWIP_RFC7668_IP_UNCOMPRESSED_DEBUG, ("%2X ", *((uint8_t *)p->payload+i)));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   390      }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   391      LWIP_DEBUGF(LWIP_RFC7668_IP_UNCOMPRESSED_DEBUG, ("\np->len: %d\n", p->len));
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   392    }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   393  #endif
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   394    /* pass data to ip6_input */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   395    return ip6_input(p, netif);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   396  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   397  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   398  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   399   * @ingroup rfc7668if
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   400   * Initialize the netif
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   401   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   402   * No flags are used (broadcast not possible, not ethernet, ...)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   403   * The shortname for this netif is "BT"
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   404   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   405   * @param netif the network interface to be initialized as RFC7668 netif
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   406   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   407   * @return ERR_OK if everything went fine
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   408   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   409  err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   410  rfc7668_if_init(struct netif *netif)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   411  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   412    netif->name[0] = 'b';
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   413    netif->name[1] = 't';
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   414    /* local function as IPv6 output */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   415    netif->output_ip6 = rfc7668_output;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   416  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   417    MIB2_INIT_NETIF(netif, snmp_ifType_other, 0);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   418  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   419    /* maximum transfer unit, set according to RFC7668 ch2.4 */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   420    netif->mtu = 1280;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   421  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   422    /* no flags set (no broadcast, ethernet,...)*/
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   423    netif->flags = 0;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   424  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   425    /* everything fine */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   426    return ERR_OK;
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   427  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   428  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   429  #if !NO_SYS
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   430  /**
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   431   * Pass a received packet to tcpip_thread for input processing
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   432   *
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   433   * @param p the received packet, p->payload pointing to the
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   434   *          IEEE 802.15.4 header.
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   435   * @param inp the network interface on which the packet was received
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   436   * 
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   437   * @return see @ref tcpip_inpkt, same return values
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   438   */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   439  err_t
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   440  tcpip_rfc7668_input(struct pbuf *p, struct netif *inp)
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   441  {
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   442    /* send data to upper layer, return the result */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   443    return tcpip_inpkt(p, inp, rfc7668_input);
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   444  }
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   445  #endif /* !NO_SYS */
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   446  
; ..\0_Src\0_AppSw\Ethernet\lwip\src\netif\lowpan6_ble.c	   447  #endif /* LWIP_IPV6 */

	; Module end
