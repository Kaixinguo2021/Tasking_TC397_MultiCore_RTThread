	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Qspi\\Std\\.IfxQspi.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.src ..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c'

	
$TC162
	.sdecl	'.zrodata.IfxQspi..2.cnt',data,rom
	.sect	'.zrodata.IfxQspi..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	1232348160
	.sdecl	'.zrodata.IfxQspi..3.cnt',data,rom
	.sect	'.zrodata.IfxQspi..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	1259902592
	
	.sdecl	'.text.IfxQspi.IfxQspi_calcRealBaudrate',code,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.text.IfxQspi.IfxQspi_calcRealBaudrate'
	.align	2
	
	.global	IfxQspi_calcRealBaudrate

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     2   * \file IfxQspi.c
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     4   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     7   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    11   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    13   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    15   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    16   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    18   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    19   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    20   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    21   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    22   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    23   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    24   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    25   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    26   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    27   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    28   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    29   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    30   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    31   * language processor.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    32   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    39   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    40   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    41   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    42   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    43  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    44  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    45  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    46  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    47  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    48  #include "IfxQspi.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    49  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    51  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    53  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    54  float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId)
; Function IfxQspi_calcRealBaudrate
.L71:
IfxQspi_calcRealBaudrate:	.type	func
	sub.a	a10,#32
.L375:
	mov.aa	a12,a4
.L377:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    55  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    56      int           cs    = channelId % 8;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    57      float         fQspi = IfxScuCcu_getQspiFrequency();
	and	d15,d4,#7
	call	IfxScuCcu_getQspiFrequency
.L376:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    58      Ifx_QSPI_ECON econ[8];
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    59      econ[cs].U = qspi->ECON[cs].U;
	addsc.a	a2,a12,d15,#2
.L510:
	addsc.a	a15,a10,d15,#2
.L511:
	ld.w	d15,[a2]32
.L378:
	st.w	[a15],d15
.L512:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    60      fQspi      = fQspi / (qspi->GLOBALCON.B.TQ + 1);
	ld.bu	d15,[a12]16
.L513:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    61      fQspi      = fQspi / (econ[cs].B.Q + 1);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    62      fQspi      = fQspi / ((econ[cs].B.A + 1) + econ[cs].B.B + econ[cs].B.C);
	ld.bu	d1,[a15]
.L514:
	add	d15,#1
	ld.bu	d0,[a15]1
.L515:
	itof	d15,d15
.L516:
	div.f	d2,d2,d15
.L379:
	and	d15,d1,#63
.L517:
	add	d15,#1
	itof	d15,d15
.L518:
	extr.u	d1,d1,#6,#2
.L519:
	div.f	d2,d2,d15
.L520:
	and	d15,d0,#3
.L521:
	add	d1,d15
.L522:
	extr.u	d15,d0,#2,#2
.L523:
	add	d1,d15
.L524:
	add	d1,#1
.L525:
	itof	d15,d1
.L526:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    63      return fQspi;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    64  }
	div.f	d2,d2,d15
	ret
.L251:
	
__IfxQspi_calcRealBaudrate_function_end:
	.size	IfxQspi_calcRealBaudrate,__IfxQspi_calcRealBaudrate_function_end-IfxQspi_calcRealBaudrate
.L149:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateBasicConfigurationValue',code,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.text.IfxQspi.IfxQspi_calculateBasicConfigurationValue'
	.align	2
	
	.global	IfxQspi_calculateBasicConfigurationValue

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    65  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    66  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    67  uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate)
; Function IfxQspi_calculateBasicConfigurationValue
.L73:
IfxQspi_calculateBasicConfigurationValue:	.type	func
	sub.a	a10,#8
.L380:
	mov	d8,d4
	mov.aa	a15,a5
.L267:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    68  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    69      IFX_UNUSED_PARAMETER(baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    70  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    71      Ifx_QSPI_BACON     bacon;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    72      IfxQspi_DelayConst delayConst[3];
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    73      bacon.U = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    74  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    75      IfxQspi_calculateDelayConstants(qspi, channelId, chMode, delayConst);
	mov	d9,#0
	mov.aa	a6,a10
.L382:
	call	IfxQspi_calculateDelayConstants
.L381:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    76  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    77      bacon.B.LAST   = 0;                   /* 1-bits Last Word in a Frame, will be set via recalcBasicConfiguration before transfer */
	extr.u	d15,d9,#0,#8
.L531:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    78  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    79      bacon.B.IPRE   = delayConst[0].pre;   /* 3-bits Prescaler for the Idle Delay */
	insert	d15,d15,#0,#0,#1
	ld.bu	d0,[a10]
.L532:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    80      bacon.B.IDLE   = delayConst[0].delay; /* 3-bits Idle Delay Length */
	insert	d0,d15,d0,#1,#3
	ld.bu	d15,[a10]1
.L533:
	insert	d15,d0,d15,#4,#3
.L534:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    81      bacon.B.LPRE   = delayConst[1].pre;   /* 3-bits Prescaler for the Leading Delay */
	insert	d9,d9,d15,#0,#8
	ld.bu	d15,[a10]2
.L535:
	insert	d9,d9,d15,#7,#3
.L536:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    82      bacon.B.LEAD   = delayConst[1].delay; /* 3-bits Leading Delay Length */
	extr.u	d0,d9,#8,#8
	ld.bu	d15,[a10]3
.L537:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    83      bacon.B.TPRE   = delayConst[2].pre;   /* 3-bits Prescaler for the Trailing Delay */
	insert	d0,d0,d15,#2,#3
	ld.bu	d15,[a10]4
.L538:
	insert	d15,d0,d15,#5,#3
.L539:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    84      bacon.B.TRAIL  = delayConst[2].delay; /* 2-bits Trailing Delay Length */
	insert	d9,d9,d15,#8,#8
	ld.bu	d15,[a10]5
.L540:
	insert	d9,d9,d15,#16,#3
.L541:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    85      bacon.B.PARTYP = (chMode->parityMode == Ifx_ParityMode_even) ? 0 : 1;
	extr.u	d0,d9,#16,#8
	ld.bu	d15,[a15]1
.L542:
	ins.t	d15,d0:3,d15:6
.L543:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    86      bacon.B.UINT   = 0;                   /* 1-bits User Interrupt at the PT1 Event in the Subsequent Frames */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    87      bacon.B.MSB    = (chMode->dataHeading == SpiIf_DataHeading_lsbFirst) ? 0 : 1;
	insert	d15,d15,#0,#4,#1
	ld.bu	d0,[a15]
.L544:
	ins.t	d15,d15:5,d0:5
.L545:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    88      bacon.B.BYTE   = 0;                   /* only support bitwise selection in B.DL */
	insert	d15,d15,#0,#6,#1
.L546:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    89      bacon.B.DL     = chMode->dataWidth - 1;
	insert	d9,d9,d15,#16,#8
	ld.hu	d15,[a15]0
	extr.u	d15,d15,#6,#6
.L547:
	add	d15,#-1
.L548:
	insert	d9,d9,d15,#23,#5
.L549:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    90      bacon.B.CS     = channelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    91  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    92      return bacon.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    93  }
	insert	d2,d9,d8,#28,#4
	ret
.L259:
	
__IfxQspi_calculateBasicConfigurationValue_function_end:
	.size	IfxQspi_calculateBasicConfigurationValue,__IfxQspi_calculateBasicConfigurationValue_function_end-IfxQspi_calculateBasicConfigurationValue
.L154:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateExtendedConfigurationValue',code,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.text.IfxQspi.IfxQspi_calculateExtendedConfigurationValue'
	.align	2
	
	.global	IfxQspi_calculateExtendedConfigurationValue

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    94  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    95  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    96  uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig)
; Function IfxQspi_calculateExtendedConfigurationValue
.L75:
IfxQspi_calculateExtendedConfigurationValue:	.type	func
	mov.aa	a12,a4
.L383:
	mov.aa	a15,a5
.L278:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    97  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    98      IFX_UNUSED_PARAMETER(cs);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    99  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   100      Ifx_QSPI_ECON econ;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   101      econ.U = 0;
	mov	d8,#0

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    10   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    11   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    14   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    16   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    17   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    19   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    25   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    26   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    27   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    31   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    32   * language processor.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    33   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    40   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    41   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    42   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    43   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    44   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    45   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    46   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    47   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    48   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    49   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    50   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    51   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    52   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    53   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    55  #ifndef IFXQSPI_H
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    56  #define IFXQSPI_H 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    57  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    58  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    59  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    60  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    61  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    62  #include "_Impl/IfxQspi_cfg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    63  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    64  #include "If/SpiIf.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    65  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    66  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    67  #include "_PinMap/IfxQspi_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    68  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    69  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    70  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    71  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    72  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    73  /** \brief Get Fifo size required for Long / Long continous mode interms 32-bit
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    74   * LONG MODE FIFO size (data size in bytes) = (size for Bacon) + (Datasize converted to 32-bit)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    75   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    76  #define IFXQSPI_BACONSIZE(Datasize)           (((((Datasize) % 16) == 0) ? ((uint8)((Datasize) / 16)) : ((uint8)((Datasize) / 16) + 1)))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    77  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    78  #define IFXQSPI_FIFO32BITSIZE(Datasize)       ((((Datasize) % 4) == 0) ? ((uint8)((Datasize) / 4)) : ((uint8)((Datasize) / 4) + 1))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    79  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    80  #define IFXQSPI_GETLONGMODEFIFOSIZE(Datasize) (IFXQSPI_BACONSIZE(Datasize) + IFXQSPI_FIFO32BITSIZE(Datasize))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    81  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    82  /** \brief Errors enable mask for ERRORENS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    83   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    84  #define IFXQSPI_ERRORENABLEMASK ((uint32)0x1FF)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    85  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    86  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    87  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    88  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    89  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    90  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    91   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    92  /** \brief CAPCON Register Edge Configuration (CAPCON.EDGECON)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    93   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    94  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    95  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    96      IfxQspi_CaptureControlEdgeConfiguration_rrMode = 0,  /**< \brief RR mode (rising edge to rising edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_CaptureControlEdgeConfiguration_rfMode = 1,  /**< \brief RF mode (rising edge to falling edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_CaptureControlEdgeConfiguration_frMode = 2,  /**< \brief FR mode (falling edge to rising edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_CaptureControlEdgeConfiguration_ffMode = 3   /**< \brief FF mode (falling edge to falling edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   100  } IfxQspi_CaptureControlEdgeConfiguration;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   101  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   102  /** \brief CAPCON Input Seletion line (CAPCON.INS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   103   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   104  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   105  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_CaptureControlInputSelection_inputA = 0,  /**< \brief INA selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_CaptureControlInputSelection_inputB = 1,  /**< \brief INB selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_CaptureControlInputSelection_inputC = 2,  /**< \brief INC selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_CaptureControlInputSelection_inputD = 3   /**< \brief IND selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   110  } IfxQspi_CaptureControlInputSelection;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   111  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   112  /** \brief QSPI channel Number (BACON.CS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   113   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   115  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   116      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   117      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   120      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   121      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   122      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   123      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   124      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   125      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   126      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   127      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   131  } IfxQspi_ChannelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   133  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   134   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   135  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   136  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   137      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   138      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   139  } IfxQspi_DataLengthUnit;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   140  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   141  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   142   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   143  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   144  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   154      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   155  } IfxQspi_Error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   156  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   157  /** \brief Frame Expect phase time out value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   158   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   159  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   160  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   161      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   162      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   163      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   167      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   168      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   169      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   170      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   171      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   172      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   173      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   175      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   176      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   177  } IfxQspi_ExpectTimeout;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   178  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   179  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   180   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   181  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   182  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   183      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   186  } IfxQspi_Mode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   187  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   188  /** \brief Request between pause and Run transition
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   189   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   190  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   191  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   192      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   193      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   194  } IfxQspi_PauseRunTransition;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   195  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   196  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   197   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   199  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   200      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   201      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   202      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   204      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   205      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   206      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   207      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   208      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   209  } IfxQspi_Phase;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   210  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   211  /** \brief Phase Transition Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   212   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   214  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   215      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   216      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   217      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   218      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   223  } IfxQspi_PhaseTransitionEvent;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   224  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   225  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   226   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   227  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   228  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   229      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_Reset_stateMachineAndFifo = 1,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_Reset_registers           = 2,  /**< \brief Registers Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   232      IfxQspi_Reset_kernel              = 3   /**< \brief Kernel / Module Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   233  } IfxQspi_Reset;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   234  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   235  /** \brief Receive Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   236   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   237  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   238  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   239      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   240      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   243  } IfxQspi_RxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   244  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   245  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   246   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   247   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   248  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   249  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   252  } IfxQspi_SleepMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   253  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   254  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   255   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   256  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   257  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   258      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   259      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   260      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   261      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   262      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   263      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   264      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   265      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   266      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   267      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   268      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   269      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   270      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   271      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   272      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   273      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   274      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   275      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   276      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   277      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   278      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   279      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   280      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   281      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   282      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   283      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   284      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   285      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   286      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   287      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   288      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   289      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   290  } IfxQspi_StrobeDelay;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   291  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   292  /** \brief Transmit Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   293   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   294  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   295  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   296      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   297      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   298      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   299      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   300  } IfxQspi_TxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   301  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   302  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   303  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   304  /** \brief Transmit FIFO mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   305   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   306  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   307  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   308      IfxQspi_FifoMode_combinedMove = 0,  /**< \brief Combined Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   309      IfxQspi_FifoMode_singleMove   = 1,  /**< \brief Single Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   310      IfxQspi_FifoMode_batchMove    = 2   /**< \brief Batch Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   311  } IfxQspi_FifoMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   312  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   313  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   314   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   315  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   316  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   317      IfxQspi_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   318      IfxQspi_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   319      IfxQspi_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   320  } IfxQspi_SuspendMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   321  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   322  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   323  /*-----------------------------Data Structures--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   324  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   325  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   326  /** \brief Structure holding the "pre" and "delay" values.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   327   * To be populated into BACON register after delay calculation.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   328   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   329  typedef struct
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   330  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   331      uint8 pre;         /**< \brief specifies the prescalar value */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   332      uint8 delay;       /**< \brief delay multiplier */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   333  } IfxQspi_DelayConst;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   334  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   335  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   336   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   337  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   338  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   339  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   340  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   341  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   342  /** \brief Clear ALL service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   343   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   344   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   345   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   346  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   347  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   348  /** \brief clear the interrupt after last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   349   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   350   * \param clearInterrupt clear the interrupt flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   351   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   352   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   353  IFX_INLINE void IfxQspi_clearMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   354  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   355  /** \brief Clear the Interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   356   * \param qspi handle to Module register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   357   * \param clearInterrupt clear the interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   358   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   359   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   360  IFX_INLINE void IfxQspi_clearMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   361  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   362  /** \brief Clear RX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   363   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   364   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   365   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   366  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   367  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   368  /** \brief Clear TX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   369   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   370   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   371   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   372  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   373  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   374  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   375   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   376   * \param pt1Config Phase Transition1 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   377   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   378   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   379  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   380  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   381  /** \brief Configure PT2 event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   382   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   383   * \param pt2Config Phase Transition2 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   384   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   385   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   386  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   387  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   388  /** \brief configure Capcon register (Edge Configuration, input selection and capture interrupt select bit)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   389   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   390   * \param inputSel Input port Selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   391   * \param edgeConfiguration edge configuration / capture mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   392   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   393   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   394  IFX_INLINE void IfxQspi_configureCapcon(Ifx_QSPI *qspi, IfxQspi_CaptureControlInputSelection inputSel, IfxQspi_CaptureControlEdgeConfiguration edgeConfiguration);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   395  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   396  /** \brief Enable/Disable Loopback mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   397   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   398   * \param enable Enable / Disable loopback
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   399   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   400   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   401  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   402  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   403  /** \brief enable Phase Transition1 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   404   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   405   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   407   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   408  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   409  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   410  /** \brief enable Phase Transition2 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   411   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   412   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   413   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   414   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   415  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   416  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   417  /** \brief enable User Event (Event selected by PT1)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   418   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   419   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   420   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   421   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   422  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   423  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   424  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   425   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   426   * \return Error Flags
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   427   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   428  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   429  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   430  /** \brief Request for Module in Pause state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   431   * no interrupts
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   432   * no communication
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   433   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   434   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   435   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   436  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   437  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   438  /** \brief Read the oldest data from RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   439   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   440   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   441  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   442  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   443  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   444   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   445   * \param reset reset type (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   446   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   447   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   448  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   449  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   450  /** \brief Request for QSPI in Run state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   451   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   453   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   454  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   455  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   456  /** \brief Enable/Disable the Interrupt After last Byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   457   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   458   * \param interruptEnabled Enable/Disable the interrupt after last byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   460   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   461  IFX_INLINE void IfxQspi_setMoveCounterInterruptAfterLastEnabled(Ifx_QSPI *qspi, boolean interruptEnabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   462  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   463  /** \brief Set the Interrupt after last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   464   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   465   * \param setInterrupt set the interrupt Flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   467   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   468  IFX_INLINE void IfxQspi_setMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean setInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   469  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   470  /** \brief Enable the interrupt before last byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   471   * \param qspi Pointer to Qspi Module Register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   472   * \param interruptEnabled Specifies Interrupt is enable or disable
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   474   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   475  IFX_INLINE void IfxQspi_setMoveCounterInterruptBeforeLastEnabled(Ifx_QSPI *qspi, boolean interruptEnabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   476  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   477  /** \brief set the interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   478   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   479   * \param setInterrupt set the interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   481   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   482  IFX_INLINE void IfxQspi_setMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean setInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   483  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   484  /** \brief Set the Trailing delay
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   485   * \param qspi handle of Module
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   486   * \param baudrate Baud rate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   488   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   489  IFX_INLINE void IfxQspi_setMoveCounterPrescalerTrailingDelay(Ifx_QSPI *qspi, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   490  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   491  /** \brief Set the threshold of RXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   492   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   493   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   495   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   496  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   497  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   498  /** \brief specifies whether to inject the trail2 from bacon configuration or mccon configuration registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   499   * \param qspi Module Register Handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   500   * \param trail2Enabled Enable/Disable Trail2 from MCCON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   502   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   503  IFX_INLINE void IfxQspi_trail2InjectionEnabled(Ifx_QSPI *qspi, boolean trail2Enabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   504  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   505  /** \brief Write Data into DATAENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   506   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   507   * \param data Data to be entered into TxFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   509   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   510  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   511  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   512  /** \brief Returns the module's suspend state.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   513   * TRUE :if module is suspended.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   514   * FALSE:if module is not yet suspended.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   515   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   516   * \return Suspend status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   517   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   518  IFX_INLINE boolean IfxQspi_isModuleSuspended(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   519  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   520  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   521   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   522   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   523   * \param mode Module suspend mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   524   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   525   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   526  IFX_INLINE void IfxQspi_setSuspendMode(Ifx_QSPI *qspi, IfxQspi_SuspendMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   527  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   528  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   529  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   530  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   531  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   532  /** \brief Reads 16bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   533   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   534   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   535   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   537   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   538  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   539  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   540  /** \brief Reads 32bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   541   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   542   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   543   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   544   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   545   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   546  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   547  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   548  /** \brief Reads 8bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   549   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   550   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   551   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   552   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   553   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   554  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   555  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   556  /** \brief resets QSPI kernel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   557   * \param qspi pointer to QSPI registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   558   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   559   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   560  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   561  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   562  /** \brief Writes 16bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   563   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   564   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   565   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   566   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   567   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   568   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   569  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   570  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   571  /** \brief Writes 32bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   572   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   573   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   574   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   575   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   576   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   577   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   578  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   579  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   580  /** \brief Writes 8bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   581   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   582   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   583   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   584   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   586   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   587  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   588  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   589  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   590  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   591  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   592   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   593  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   594  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   595  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   596  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   597  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   598  /** \brief Gets the current mode of QSPI
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   599   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   600   * \return The current mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   601   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   602  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   603  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   604  /** \brief Specifies function to get module frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   605   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   606   * \return Module frequency in Float value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   607   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   608  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   609  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   610  /** \brief Gets actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   611   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   612   * \return Actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   613   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   614  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   615  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   616  /** \brief Gets the filling level of RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   617   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   618   * \return RxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   619   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   620  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   621  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   622  /** \brief Gets Time Quanta frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   623   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   624   * \return TQ frequency in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   625   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   626  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   627  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   628  /** \brief Gets the filling level of TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   629   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   630   * \return TxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   631   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   632  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   633  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   634  /** \brief Specifies the Module enable or disable status
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   635   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   636   * \return TRUE if module is enabled otherwise FALSE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   637   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   638  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   639  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   640  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   641   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   642   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Sets the enable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   649   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   650  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   651  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   652  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   653   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   654   * \param mode Sleep mode selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   656   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   657  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   658  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   659  /** \brief Set the threshold of TXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   660   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   661   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   663   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   664  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   665  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   666  /** \brief Write configuration into BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   667   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   668   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   670   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   671  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   672  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   673  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   674   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   675   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   677   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   678  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   679  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   680  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   681   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   682   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   684   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   685  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   686  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   687  /** \brief Writes channel timing configuration into ECON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   688   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   689   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   690   * \param econVal Extended configuration value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   691   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   692   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   693  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   694  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   695  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   696   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   697   * \param mixEntryVal Data and configuration in mixed
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   698   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   699   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   700  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   701  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   702  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   703  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   704  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   705  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   706  /** \brief Function to calculate baudrate of specified channel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   707   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   708   * \param channelId QSPI channel number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   709   * \return Actual baudrate in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   710   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   711  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   712  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   713  /** \brief Function to calculate BACON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   714   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   715   * \param channelId QSPI Channel Number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   716   * \param chMode Frame configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   717   * \param baudrate The desired baudrate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   718   * \return Calculated BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   719   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   720  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   721  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   722  /** \brief Function to calculate ECON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   723   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   724   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   725   * \param chConfig SPI Channel Configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   726   * \return Calculated ECON[CS] value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   727   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   728  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   729  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   730  /** \brief Function to calculate prescaler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   731   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   732   * \param baudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   733   * \return Prescaler in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   734   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   735  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   736  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   737  /** \brief Specifies the function to calculate Time quantum length
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   738   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   739   * \param maxBaudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   740   * \return Time quantum length in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   741   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   742  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   743  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   744  /** \brief
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   745   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   746   * \return QSPI module register address
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   747   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   748  IFX_EXTERN Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   749  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   750  /** \brief Specifies the function to get Index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   751   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   752   * \return Index in Integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   753   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   754  IFX_EXTERN IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   755  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   756  /** \brief Re-calculated BACON from the oldBACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   757   * \param oldBACON Old BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   758   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   759   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   760   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   761   * \return Re-calculated BACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   762   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   763  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   764  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   765  /** \brief Configures a Slave Select Output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   766   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   767   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   768   * \param outputEnable chip select output will be enabled during transaction
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   769   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   770   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   771   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   772  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   773  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   774  /** \brief Calculates the Delay constants (pre and delay) from the user specified CS delays.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   775   * \param qspi pointer to QSPI SFR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   776   * \param channelId Channel ID no.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   777   * \param chMode Pointer to Channel Mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   778   * \param delayConst Pointer to the Delay Consant Array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   779   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   780   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   781  IFX_EXTERN void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   782  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   783  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   784  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   785  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   786   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   787  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   788  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   789  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   790  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   791  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   792  /** \brief Api to enable/disable CAPCON interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   793   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   794   * \param enable Enable Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   795   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   796   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   797  IFX_INLINE void IfxQspi_enableCapconInterrupt(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   798  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   799  /** \brief Gets the Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   800   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   801   * \return Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   802   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   803  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   804  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   805  /** \brief Gets the RXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   806   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   807   * \return Receive service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   808   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   809  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   810  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   811  /** \brief Gets the TXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   812   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   813   * \return Transmission service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   814   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   815  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   816  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   817  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   818  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   819  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   820   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   821  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   822  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   823  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   824  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   825  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   826  /** \brief Initializes a MRST input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   827   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   828   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   829   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   830   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   831  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   832  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   833  /** \brief Initializes a MRST output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   834   * \param mrstOut the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   835   * \param mrstOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   836   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   837   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   838   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   839  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   840  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   841  /** \brief Initializes a MTSR input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   842   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   843   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   844   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   845   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   846  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   847  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   848  /** \brief Initializes a MTSR output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   849   * \param mtsrOut the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   850   * \param mtsrOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   851   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   852   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   853   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   854  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   855  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   856  /** \brief Initializes a SCLK input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   857   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   858   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   859   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   860   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   861  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   862  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   863  /** \brief Initializes a SCLK output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   864   * \param sclkOut the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   865   * \param sclkOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   866   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   867   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   868   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   869  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   870  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   871  /** \brief Initializes a SLSI input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   872   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   873   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   874   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   875   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   876  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   877  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   878  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   879   * \param slso the SLSO Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   880   * \param slsoMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   881   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   882   * \param outIndex Pin Pad driver index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   883   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   884   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   885  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   886  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   887  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   888  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   889  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   890  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   891  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   892  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   893  /** \brief Get the Receive FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   894   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   895   * \return Receive FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   896   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   897  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   898  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   899  /** \brief Get the Transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   900   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   901   * \return Transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   902   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   903  IFX_INLINE IfxQspi_FifoMode IfxQspi_getTxFifoMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   904  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   905  /** \brief Permutate bytes to / from Big Endian
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   906   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   907   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   908   * \param bigEndian specifies to Permutate bytes to / from Big Endian
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   910   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   911  IFX_INLINE void IfxQspi_permutateBigEndian(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bigEndian);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   912  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   913  /** \brief Set the value of bit segment1 (A).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   914   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   915   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   916   * \param bitSegment1 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   918   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   919  IFX_INLINE void IfxQspi_setBitsegment1(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment1);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   920  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   921  /** \brief Set the value of bit segment2 (B).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   922   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   923   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   924   * \param bitSegment2 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   925   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   926   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   927  IFX_INLINE void IfxQspi_setBitsegment2(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment2);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   928  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   929  /** \brief Set the value of bit segment3 (C).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   930   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   931   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   932   * \param bitSegment3 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   933   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   934   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   935  IFX_INLINE void IfxQspi_setBitsegment3(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment3);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   936  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   937  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   938   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   939   * \param mode select the transfer fifo mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   940   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   941   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   942  IFX_INLINE void IfxQspi_setRxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   943  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   944  /** \brief Set the value of Time Quantum.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   945   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   946   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   947   * \param timeQuantum specifies the value of Time Quantum.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   948   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   949   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   950  IFX_INLINE void IfxQspi_setTimeQuantum(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 timeQuantum);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   951  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   952  /** \brief Set the transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   953   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   954   * \param mode select the transfer fifo mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   956   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   957  IFX_INLINE void IfxQspi_setTxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   958  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   959  /** \brief Provides functionality for both setting of MRSTIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   960   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   961   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   962   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   963   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   964   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   965  IFX_INLINE void IfxQspi_initMrstInPinWithPadLevel(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   966  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   967  /** \brief Provides functionality for both setting of MTSRIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   968   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   969   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   970   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   972   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   973  IFX_INLINE void IfxQspi_initMtsrInPinWithPadLevel(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   974  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   975  /** \brief Provides functionality for both setting of SCLKIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   976   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   977   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   978   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   979   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   980   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   981  IFX_INLINE void IfxQspi_initSclkInPinWithPadLevel(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   982  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   983  /** \brief Provides functionality for both setting of SLSI pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   984   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   985   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   986   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   987   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   988   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   989  IFX_INLINE void IfxQspi_initSlsiWithPadLevel(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   990  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   991  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   992  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   993  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   994  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   995  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   996  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   997      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   998  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   999  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1000  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1001  IFX_INLINE void IfxQspi_clearMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1003      qspi->MCCON.B.IALC = clearInterrupt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1005  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1006  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1007  IFX_INLINE void IfxQspi_clearMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1009      qspi->MCCON.B.IBLC = clearInterrupt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1010  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1011  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1012  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1013  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1014  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1015      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1016  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1017  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1018  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1019  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1020  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1021      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1022  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1023  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1024  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1025  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1026  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1027      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1028  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1029  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1030  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1031  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1032  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1033      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1034  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1035  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1036  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1037  IFX_INLINE void IfxQspi_configureCapcon(Ifx_QSPI *qspi, IfxQspi_CaptureControlInputSelection inputSel, IfxQspi_CaptureControlEdgeConfiguration edgeConfiguration)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1038  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1039      qspi->CAPCON.B.INS     = inputSel;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1040      qspi->CAPCON.B.EDGECON = edgeConfiguration;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1041      qspi->CAPCON.B.CAPSEL  = 1;     // capture-irq on HC-irq
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1042      qspi->CAPCON.B.CAPC    = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1043  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1044  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1045  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1046  IFX_INLINE void IfxQspi_enableCapconInterrupt(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1047  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1048      qspi->CAPCON.B.EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1049  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1050  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1051  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1052  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1053  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1054      IFX_UNUSED_PARAMETER(enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1055  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1056      qspi->GLOBALCON.B.LB = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1057  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1058  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1059  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1060  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1061  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1062      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1063  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1064  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1065  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1066  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1067  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1068      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1069  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1070  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1071  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1072  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1073  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1074      qspi->GLOBALCON1.B.USREN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1075  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1076  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1077  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1078  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1079  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1080      return qspi->STATUS.B.ERRORFLAGS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1081  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1082  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1083  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1084  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1085  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1086      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1087      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1088  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1089  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1090  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1091  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1092  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1093      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1094  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1095  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1096  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1097  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1098  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1099      IFX_UNUSED_PARAMETER(qspi->CLC.U != 0);
	ld.w	d15,[a12]
.L281:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1100  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1101      return IfxScuCcu_getQspiFrequency();
	call	IfxScuCcu_getQspiFrequency
.L305:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1102  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1103  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1104  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1105  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1106  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1107      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1108  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1109  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1110  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1111  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1112  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1113      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1114  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1115  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1116  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1117  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1118  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1119      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1120      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1122  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1123  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1124  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1126      return (IfxQspi_FifoMode)qspi->GLOBALCON1.B.RXFM;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1128  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1129  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1130  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1132      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	ld.bu	d15,[a12]16
.L295:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   102  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   103      const int     maxB   = 3;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   104      float32       tQspi  = 1.0 / IfxQspi_getTimeQuantaFrequency(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   105      float32       fBaud  = (chConfig->baudrate);
	ld.w	d1,[a15]4
.L300:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    10   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    11   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    14   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    16   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    17   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    19   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    25   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    26   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    27   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    31   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    32   * language processor.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    33   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    40   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    41   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    42   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    43   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    44   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    45   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    46   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    47   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    48   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    49   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    50   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    51   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    52   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    53   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    55  #ifndef IFXQSPI_H
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    56  #define IFXQSPI_H 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    57  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    58  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    59  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    60  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    61  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    62  #include "_Impl/IfxQspi_cfg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    63  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    64  #include "If/SpiIf.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    65  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    66  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    67  #include "_PinMap/IfxQspi_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    68  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    69  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    70  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    71  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    72  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    73  /** \brief Get Fifo size required for Long / Long continous mode interms 32-bit
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    74   * LONG MODE FIFO size (data size in bytes) = (size for Bacon) + (Datasize converted to 32-bit)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    75   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    76  #define IFXQSPI_BACONSIZE(Datasize)           (((((Datasize) % 16) == 0) ? ((uint8)((Datasize) / 16)) : ((uint8)((Datasize) / 16) + 1)))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    77  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    78  #define IFXQSPI_FIFO32BITSIZE(Datasize)       ((((Datasize) % 4) == 0) ? ((uint8)((Datasize) / 4)) : ((uint8)((Datasize) / 4) + 1))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    79  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    80  #define IFXQSPI_GETLONGMODEFIFOSIZE(Datasize) (IFXQSPI_BACONSIZE(Datasize) + IFXQSPI_FIFO32BITSIZE(Datasize))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    81  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    82  /** \brief Errors enable mask for ERRORENS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    83   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    84  #define IFXQSPI_ERRORENABLEMASK ((uint32)0x1FF)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    85  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    86  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    87  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    88  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    89  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    90  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    91   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    92  /** \brief CAPCON Register Edge Configuration (CAPCON.EDGECON)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    93   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    94  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    95  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    96      IfxQspi_CaptureControlEdgeConfiguration_rrMode = 0,  /**< \brief RR mode (rising edge to rising edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_CaptureControlEdgeConfiguration_rfMode = 1,  /**< \brief RF mode (rising edge to falling edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_CaptureControlEdgeConfiguration_frMode = 2,  /**< \brief FR mode (falling edge to rising edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_CaptureControlEdgeConfiguration_ffMode = 3   /**< \brief FF mode (falling edge to falling edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   100  } IfxQspi_CaptureControlEdgeConfiguration;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   101  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   102  /** \brief CAPCON Input Seletion line (CAPCON.INS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   103   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   104  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   105  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_CaptureControlInputSelection_inputA = 0,  /**< \brief INA selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_CaptureControlInputSelection_inputB = 1,  /**< \brief INB selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_CaptureControlInputSelection_inputC = 2,  /**< \brief INC selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_CaptureControlInputSelection_inputD = 3   /**< \brief IND selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   110  } IfxQspi_CaptureControlInputSelection;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   111  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   112  /** \brief QSPI channel Number (BACON.CS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   113   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   115  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   116      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   117      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   120      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   121      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   122      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   123      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   124      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   125      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   126      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   127      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   131  } IfxQspi_ChannelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   133  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   134   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   135  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   136  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   137      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   138      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   139  } IfxQspi_DataLengthUnit;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   140  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   141  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   142   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   143  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   144  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   154      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   155  } IfxQspi_Error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   156  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   157  /** \brief Frame Expect phase time out value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   158   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   159  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   160  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   161      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   162      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   163      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   167      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   168      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   169      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   170      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   171      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   172      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   173      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   175      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   176      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   177  } IfxQspi_ExpectTimeout;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   178  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   179  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   180   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   181  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   182  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   183      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   186  } IfxQspi_Mode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   187  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   188  /** \brief Request between pause and Run transition
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   189   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   190  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   191  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   192      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   193      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   194  } IfxQspi_PauseRunTransition;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   195  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   196  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   197   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   199  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   200      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   201      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   202      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   204      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   205      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   206      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   207      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   208      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   209  } IfxQspi_Phase;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   210  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   211  /** \brief Phase Transition Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   212   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   214  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   215      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   216      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   217      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   218      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   223  } IfxQspi_PhaseTransitionEvent;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   224  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   225  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   226   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   227  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   228  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   229      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_Reset_stateMachineAndFifo = 1,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_Reset_registers           = 2,  /**< \brief Registers Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   232      IfxQspi_Reset_kernel              = 3   /**< \brief Kernel / Module Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   233  } IfxQspi_Reset;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   234  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   235  /** \brief Receive Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   236   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   237  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   238  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   239      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   240      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   243  } IfxQspi_RxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   244  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   245  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   246   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   247   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   248  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   249  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   252  } IfxQspi_SleepMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   253  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   254  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   255   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   256  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   257  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   258      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   259      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   260      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   261      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   262      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   263      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   264      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   265      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   266      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   267      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   268      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   269      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   270      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   271      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   272      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   273      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   274      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   275      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   276      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   277      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   278      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   279      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   280      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   281      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   282      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   283      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   284      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   285      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   286      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   287      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   288      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   289      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   290  } IfxQspi_StrobeDelay;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   291  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   292  /** \brief Transmit Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   293   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   294  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   295  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   296      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   297      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   298      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   299      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   300  } IfxQspi_TxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   301  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   302  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   303  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   304  /** \brief Transmit FIFO mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   305   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   306  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   307  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   308      IfxQspi_FifoMode_combinedMove = 0,  /**< \brief Combined Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   309      IfxQspi_FifoMode_singleMove   = 1,  /**< \brief Single Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   310      IfxQspi_FifoMode_batchMove    = 2   /**< \brief Batch Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   311  } IfxQspi_FifoMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   312  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   313  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   314   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   315  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   316  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   317      IfxQspi_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   318      IfxQspi_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   319      IfxQspi_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   320  } IfxQspi_SuspendMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   321  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   322  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   323  /*-----------------------------Data Structures--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   324  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   325  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   326  /** \brief Structure holding the "pre" and "delay" values.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   327   * To be populated into BACON register after delay calculation.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   328   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   329  typedef struct
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   330  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   331      uint8 pre;         /**< \brief specifies the prescalar value */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   332      uint8 delay;       /**< \brief delay multiplier */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   333  } IfxQspi_DelayConst;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   334  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   335  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   336   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   337  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   338  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   339  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   340  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   341  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   342  /** \brief Clear ALL service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   343   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   344   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   345   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   346  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   347  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   348  /** \brief clear the interrupt after last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   349   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   350   * \param clearInterrupt clear the interrupt flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   351   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   352   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   353  IFX_INLINE void IfxQspi_clearMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   354  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   355  /** \brief Clear the Interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   356   * \param qspi handle to Module register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   357   * \param clearInterrupt clear the interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   358   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   359   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   360  IFX_INLINE void IfxQspi_clearMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   361  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   362  /** \brief Clear RX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   363   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   364   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   365   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   366  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   367  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   368  /** \brief Clear TX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   369   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   370   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   371   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   372  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   373  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   374  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   375   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   376   * \param pt1Config Phase Transition1 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   377   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   378   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   379  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   380  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   381  /** \brief Configure PT2 event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   382   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   383   * \param pt2Config Phase Transition2 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   384   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   385   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   386  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   387  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   388  /** \brief configure Capcon register (Edge Configuration, input selection and capture interrupt select bit)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   389   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   390   * \param inputSel Input port Selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   391   * \param edgeConfiguration edge configuration / capture mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   392   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   393   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   394  IFX_INLINE void IfxQspi_configureCapcon(Ifx_QSPI *qspi, IfxQspi_CaptureControlInputSelection inputSel, IfxQspi_CaptureControlEdgeConfiguration edgeConfiguration);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   395  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   396  /** \brief Enable/Disable Loopback mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   397   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   398   * \param enable Enable / Disable loopback
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   399   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   400   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   401  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   402  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   403  /** \brief enable Phase Transition1 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   404   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   405   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   407   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   408  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   409  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   410  /** \brief enable Phase Transition2 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   411   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   412   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   413   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   414   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   415  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   416  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   417  /** \brief enable User Event (Event selected by PT1)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   418   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   419   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   420   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   421   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   422  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   423  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   424  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   425   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   426   * \return Error Flags
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   427   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   428  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   429  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   430  /** \brief Request for Module in Pause state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   431   * no interrupts
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   432   * no communication
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   433   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   434   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   435   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   436  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   437  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   438  /** \brief Read the oldest data from RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   439   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   440   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   441  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   442  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   443  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   444   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   445   * \param reset reset type (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   446   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   447   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   448  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   449  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   450  /** \brief Request for QSPI in Run state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   451   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   453   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   454  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   455  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   456  /** \brief Enable/Disable the Interrupt After last Byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   457   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   458   * \param interruptEnabled Enable/Disable the interrupt after last byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   460   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   461  IFX_INLINE void IfxQspi_setMoveCounterInterruptAfterLastEnabled(Ifx_QSPI *qspi, boolean interruptEnabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   462  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   463  /** \brief Set the Interrupt after last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   464   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   465   * \param setInterrupt set the interrupt Flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   467   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   468  IFX_INLINE void IfxQspi_setMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean setInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   469  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   470  /** \brief Enable the interrupt before last byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   471   * \param qspi Pointer to Qspi Module Register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   472   * \param interruptEnabled Specifies Interrupt is enable or disable
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   474   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   475  IFX_INLINE void IfxQspi_setMoveCounterInterruptBeforeLastEnabled(Ifx_QSPI *qspi, boolean interruptEnabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   476  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   477  /** \brief set the interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   478   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   479   * \param setInterrupt set the interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   481   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   482  IFX_INLINE void IfxQspi_setMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean setInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   483  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   484  /** \brief Set the Trailing delay
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   485   * \param qspi handle of Module
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   486   * \param baudrate Baud rate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   488   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   489  IFX_INLINE void IfxQspi_setMoveCounterPrescalerTrailingDelay(Ifx_QSPI *qspi, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   490  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   491  /** \brief Set the threshold of RXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   492   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   493   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   495   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   496  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   497  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   498  /** \brief specifies whether to inject the trail2 from bacon configuration or mccon configuration registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   499   * \param qspi Module Register Handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   500   * \param trail2Enabled Enable/Disable Trail2 from MCCON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   502   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   503  IFX_INLINE void IfxQspi_trail2InjectionEnabled(Ifx_QSPI *qspi, boolean trail2Enabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   504  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   505  /** \brief Write Data into DATAENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   506   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   507   * \param data Data to be entered into TxFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   509   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   510  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   511  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   512  /** \brief Returns the module's suspend state.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   513   * TRUE :if module is suspended.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   514   * FALSE:if module is not yet suspended.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   515   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   516   * \return Suspend status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   517   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   518  IFX_INLINE boolean IfxQspi_isModuleSuspended(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   519  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   520  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   521   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   522   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   523   * \param mode Module suspend mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   524   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   525   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   526  IFX_INLINE void IfxQspi_setSuspendMode(Ifx_QSPI *qspi, IfxQspi_SuspendMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   527  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   528  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   529  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   530  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   531  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   532  /** \brief Reads 16bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   533   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   534   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   535   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   537   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   538  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   539  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   540  /** \brief Reads 32bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   541   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   542   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   543   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   544   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   545   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   546  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   547  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   548  /** \brief Reads 8bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   549   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   550   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   551   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   552   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   553   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   554  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   555  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   556  /** \brief resets QSPI kernel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   557   * \param qspi pointer to QSPI registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   558   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   559   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   560  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   561  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   562  /** \brief Writes 16bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   563   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   564   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   565   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   566   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   567   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   568   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   569  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   570  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   571  /** \brief Writes 32bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   572   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   573   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   574   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   575   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   576   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   577   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   578  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   579  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   580  /** \brief Writes 8bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   581   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   582   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   583   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   584   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   586   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   587  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   588  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   589  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   590  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   591  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   592   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   593  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   594  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   595  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   596  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   597  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   598  /** \brief Gets the current mode of QSPI
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   599   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   600   * \return The current mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   601   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   602  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   603  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   604  /** \brief Specifies function to get module frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   605   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   606   * \return Module frequency in Float value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   607   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   608  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   609  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   610  /** \brief Gets actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   611   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   612   * \return Actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   613   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   614  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   615  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   616  /** \brief Gets the filling level of RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   617   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   618   * \return RxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   619   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   620  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   621  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   622  /** \brief Gets Time Quanta frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   623   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   624   * \return TQ frequency in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   625   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   626  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   627  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   628  /** \brief Gets the filling level of TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   629   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   630   * \return TxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   631   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   632  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   633  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   634  /** \brief Specifies the Module enable or disable status
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   635   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   636   * \return TRUE if module is enabled otherwise FALSE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   637   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   638  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   639  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   640  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   641   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   642   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Sets the enable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   649   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   650  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   651  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   652  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   653   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   654   * \param mode Sleep mode selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   656   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   657  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   658  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   659  /** \brief Set the threshold of TXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   660   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   661   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   663   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   664  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   665  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   666  /** \brief Write configuration into BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   667   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   668   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   670   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   671  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   672  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   673  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   674   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   675   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   677   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   678  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   679  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   680  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   681   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   682   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   684   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   685  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   686  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   687  /** \brief Writes channel timing configuration into ECON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   688   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   689   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   690   * \param econVal Extended configuration value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   691   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   692   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   693  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   694  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   695  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   696   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   697   * \param mixEntryVal Data and configuration in mixed
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   698   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   699   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   700  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   701  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   702  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   703  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   704  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   705  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   706  /** \brief Function to calculate baudrate of specified channel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   707   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   708   * \param channelId QSPI channel number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   709   * \return Actual baudrate in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   710   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   711  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   712  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   713  /** \brief Function to calculate BACON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   714   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   715   * \param channelId QSPI Channel Number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   716   * \param chMode Frame configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   717   * \param baudrate The desired baudrate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   718   * \return Calculated BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   719   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   720  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   721  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   722  /** \brief Function to calculate ECON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   723   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   724   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   725   * \param chConfig SPI Channel Configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   726   * \return Calculated ECON[CS] value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   727   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   728  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   729  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   730  /** \brief Function to calculate prescaler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   731   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   732   * \param baudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   733   * \return Prescaler in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   734   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   735  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   736  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   737  /** \brief Specifies the function to calculate Time quantum length
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   738   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   739   * \param maxBaudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   740   * \return Time quantum length in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   741   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   742  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   743  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   744  /** \brief
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   745   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   746   * \return QSPI module register address
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   747   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   748  IFX_EXTERN Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   749  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   750  /** \brief Specifies the function to get Index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   751   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   752   * \return Index in Integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   753   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   754  IFX_EXTERN IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   755  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   756  /** \brief Re-calculated BACON from the oldBACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   757   * \param oldBACON Old BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   758   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   759   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   760   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   761   * \return Re-calculated BACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   762   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   763  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   764  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   765  /** \brief Configures a Slave Select Output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   766   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   767   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   768   * \param outputEnable chip select output will be enabled during transaction
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   769   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   770   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   771   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   772  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   773  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   774  /** \brief Calculates the Delay constants (pre and delay) from the user specified CS delays.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   775   * \param qspi pointer to QSPI SFR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   776   * \param channelId Channel ID no.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   777   * \param chMode Pointer to Channel Mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   778   * \param delayConst Pointer to the Delay Consant Array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   779   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   780   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   781  IFX_EXTERN void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   782  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   783  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   784  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   785  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   786   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   787  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   788  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   789  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   790  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   791  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   792  /** \brief Api to enable/disable CAPCON interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   793   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   794   * \param enable Enable Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   795   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   796   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   797  IFX_INLINE void IfxQspi_enableCapconInterrupt(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   798  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   799  /** \brief Gets the Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   800   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   801   * \return Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   802   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   803  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   804  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   805  /** \brief Gets the RXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   806   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   807   * \return Receive service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   808   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   809  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   810  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   811  /** \brief Gets the TXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   812   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   813   * \return Transmission service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   814   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   815  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   816  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   817  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   818  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   819  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   820   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   821  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   822  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   823  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   824  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   825  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   826  /** \brief Initializes a MRST input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   827   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   828   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   829   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   830   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   831  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   832  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   833  /** \brief Initializes a MRST output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   834   * \param mrstOut the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   835   * \param mrstOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   836   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   837   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   838   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   839  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   840  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   841  /** \brief Initializes a MTSR input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   842   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   843   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   844   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   845   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   846  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   847  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   848  /** \brief Initializes a MTSR output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   849   * \param mtsrOut the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   850   * \param mtsrOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   851   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   852   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   853   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   854  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   855  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   856  /** \brief Initializes a SCLK input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   857   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   858   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   859   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   860   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   861  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   862  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   863  /** \brief Initializes a SCLK output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   864   * \param sclkOut the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   865   * \param sclkOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   866   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   867   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   868   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   869  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   870  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   871  /** \brief Initializes a SLSI input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   872   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   873   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   874   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   875   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   876  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   877  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   878  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   879   * \param slso the SLSO Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   880   * \param slsoMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   881   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   882   * \param outIndex Pin Pad driver index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   883   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   884   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   885  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   886  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   887  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   888  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   889  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   890  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   891  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   892  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   893  /** \brief Get the Receive FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   894   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   895   * \return Receive FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   896   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   897  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   898  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   899  /** \brief Get the Transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   900   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   901   * \return Transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   902   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   903  IFX_INLINE IfxQspi_FifoMode IfxQspi_getTxFifoMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   904  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   905  /** \brief Permutate bytes to / from Big Endian
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   906   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   907   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   908   * \param bigEndian specifies to Permutate bytes to / from Big Endian
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   910   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   911  IFX_INLINE void IfxQspi_permutateBigEndian(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bigEndian);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   912  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   913  /** \brief Set the value of bit segment1 (A).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   914   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   915   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   916   * \param bitSegment1 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   918   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   919  IFX_INLINE void IfxQspi_setBitsegment1(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment1);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   920  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   921  /** \brief Set the value of bit segment2 (B).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   922   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   923   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   924   * \param bitSegment2 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   925   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   926   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   927  IFX_INLINE void IfxQspi_setBitsegment2(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment2);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   928  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   929  /** \brief Set the value of bit segment3 (C).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   930   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   931   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   932   * \param bitSegment3 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   933   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   934   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   935  IFX_INLINE void IfxQspi_setBitsegment3(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment3);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   936  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   937  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   938   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   939   * \param mode select the transfer fifo mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   940   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   941   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   942  IFX_INLINE void IfxQspi_setRxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   943  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   944  /** \brief Set the value of Time Quantum.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   945   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   946   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   947   * \param timeQuantum specifies the value of Time Quantum.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   948   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   949   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   950  IFX_INLINE void IfxQspi_setTimeQuantum(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 timeQuantum);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   951  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   952  /** \brief Set the transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   953   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   954   * \param mode select the transfer fifo mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   956   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   957  IFX_INLINE void IfxQspi_setTxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   958  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   959  /** \brief Provides functionality for both setting of MRSTIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   960   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   961   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   962   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   963   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   964   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   965  IFX_INLINE void IfxQspi_initMrstInPinWithPadLevel(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   966  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   967  /** \brief Provides functionality for both setting of MTSRIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   968   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   969   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   970   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   972   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   973  IFX_INLINE void IfxQspi_initMtsrInPinWithPadLevel(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   974  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   975  /** \brief Provides functionality for both setting of SCLKIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   976   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   977   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   978   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   979   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   980   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   981  IFX_INLINE void IfxQspi_initSclkInPinWithPadLevel(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   982  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   983  /** \brief Provides functionality for both setting of SLSI pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   984   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   985   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   986   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   987   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   988   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   989  IFX_INLINE void IfxQspi_initSlsiWithPadLevel(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   990  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   991  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   992  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   993  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   994  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   995  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   996  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   997      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   998  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   999  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1000  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1001  IFX_INLINE void IfxQspi_clearMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1003      qspi->MCCON.B.IALC = clearInterrupt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1005  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1006  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1007  IFX_INLINE void IfxQspi_clearMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1009      qspi->MCCON.B.IBLC = clearInterrupt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1010  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1011  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1012  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1013  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1014  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1015      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1016  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1017  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1018  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1019  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1020  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1021      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1022  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1023  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1024  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1025  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1026  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1027      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1028  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1029  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1030  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1031  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1032  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1033      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1034  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1035  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1036  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1037  IFX_INLINE void IfxQspi_configureCapcon(Ifx_QSPI *qspi, IfxQspi_CaptureControlInputSelection inputSel, IfxQspi_CaptureControlEdgeConfiguration edgeConfiguration)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1038  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1039      qspi->CAPCON.B.INS     = inputSel;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1040      qspi->CAPCON.B.EDGECON = edgeConfiguration;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1041      qspi->CAPCON.B.CAPSEL  = 1;     // capture-irq on HC-irq
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1042      qspi->CAPCON.B.CAPC    = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1043  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1044  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1045  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1046  IFX_INLINE void IfxQspi_enableCapconInterrupt(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1047  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1048      qspi->CAPCON.B.EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1049  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1050  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1051  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1052  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1053  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1054      IFX_UNUSED_PARAMETER(enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1055  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1056      qspi->GLOBALCON.B.LB = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1057  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1058  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1059  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1060  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1061  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1062      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1063  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1064  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1065  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1066  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1067  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1068      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1069  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1070  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1071  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1072  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1073  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1074      qspi->GLOBALCON1.B.USREN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1075  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1076  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1077  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1078  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1079  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1080      return qspi->STATUS.B.ERRORFLAGS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1081  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1082  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1083  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1084  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1085  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1086      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1087      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1088  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1089  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1090  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1091  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1092  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1093      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1094  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1095  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1096  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1097  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1098  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1099      IFX_UNUSED_PARAMETER(qspi->CLC.U != 0);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1100  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1101      return IfxScuCcu_getQspiFrequency();
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1102  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1103  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1104  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1105  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1106  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1107      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1108  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1109  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1110  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1111  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1112  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1113      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1114  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1115  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1116  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1117  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1118  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1119      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1120      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1122  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1123  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1124  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1126      return (IfxQspi_FifoMode)qspi->GLOBALCON1.B.RXFM;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1128  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1129  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1130  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1132      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	add	d15,#1

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   106      int           abcMin = (2);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   107      int           abcMax = (4 + 0 + 4);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   108      int           q, bestQ = 1, abc, bestAbc = abcMax, halfBaud = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   109      sint8         diffB  = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   110      float32       error, bestError;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   111      float32       tTmp, tBaudTmp;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   112      boolean       done = FALSE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   113  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   114      if (fBaud == 0.0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   115      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   116          IFX_ASSERT(IFX_VERBOSE_LEVEL_WARNING, FALSE);   /* chosen baud rate is 0 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   117          fBaud = 1.0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   118      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   119  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   120      float32 tBaud = 1.0 / fBaud;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   121  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   122      bestError = 1e6;
	ld.w	d9,.2.cnt
.L384:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    10   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    11   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    14   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    16   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    17   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    19   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    25   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    26   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    27   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    31   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    32   * language processor.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    33   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    40   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    41   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    42   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    43   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    44   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    45   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    46   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    47   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    48   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    49   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    50   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    51   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    52   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    53   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    55  #ifndef IFXQSPI_H
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    56  #define IFXQSPI_H 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    57  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    58  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    59  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    60  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    61  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    62  #include "_Impl/IfxQspi_cfg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    63  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    64  #include "If/SpiIf.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    65  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    66  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    67  #include "_PinMap/IfxQspi_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    68  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    69  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    70  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    71  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    72  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    73  /** \brief Get Fifo size required for Long / Long continous mode interms 32-bit
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    74   * LONG MODE FIFO size (data size in bytes) = (size for Bacon) + (Datasize converted to 32-bit)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    75   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    76  #define IFXQSPI_BACONSIZE(Datasize)           (((((Datasize) % 16) == 0) ? ((uint8)((Datasize) / 16)) : ((uint8)((Datasize) / 16) + 1)))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    77  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    78  #define IFXQSPI_FIFO32BITSIZE(Datasize)       ((((Datasize) % 4) == 0) ? ((uint8)((Datasize) / 4)) : ((uint8)((Datasize) / 4) + 1))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    79  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    80  #define IFXQSPI_GETLONGMODEFIFOSIZE(Datasize) (IFXQSPI_BACONSIZE(Datasize) + IFXQSPI_FIFO32BITSIZE(Datasize))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    81  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    82  /** \brief Errors enable mask for ERRORENS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    83   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    84  #define IFXQSPI_ERRORENABLEMASK ((uint32)0x1FF)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    85  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    86  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    87  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    88  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    89  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    90  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    91   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    92  /** \brief CAPCON Register Edge Configuration (CAPCON.EDGECON)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    93   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    94  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    95  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    96      IfxQspi_CaptureControlEdgeConfiguration_rrMode = 0,  /**< \brief RR mode (rising edge to rising edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_CaptureControlEdgeConfiguration_rfMode = 1,  /**< \brief RF mode (rising edge to falling edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_CaptureControlEdgeConfiguration_frMode = 2,  /**< \brief FR mode (falling edge to rising edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_CaptureControlEdgeConfiguration_ffMode = 3   /**< \brief FF mode (falling edge to falling edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   100  } IfxQspi_CaptureControlEdgeConfiguration;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   101  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   102  /** \brief CAPCON Input Seletion line (CAPCON.INS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   103   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   104  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   105  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_CaptureControlInputSelection_inputA = 0,  /**< \brief INA selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_CaptureControlInputSelection_inputB = 1,  /**< \brief INB selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_CaptureControlInputSelection_inputC = 2,  /**< \brief INC selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_CaptureControlInputSelection_inputD = 3   /**< \brief IND selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   110  } IfxQspi_CaptureControlInputSelection;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   111  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   112  /** \brief QSPI channel Number (BACON.CS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   113   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   115  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   116      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   117      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   120      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   121      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   122      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   123      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   124      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   125      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   126      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   127      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   131  } IfxQspi_ChannelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   133  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   134   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   135  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   136  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   137      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   138      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   139  } IfxQspi_DataLengthUnit;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   140  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   141  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   142   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   143  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   144  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   154      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   155  } IfxQspi_Error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   156  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   157  /** \brief Frame Expect phase time out value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   158   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   159  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   160  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   161      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   162      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   163      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   167      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   168      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   169      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   170      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   171      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   172      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   173      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   175      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   176      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   177  } IfxQspi_ExpectTimeout;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   178  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   179  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   180   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   181  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   182  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   183      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   186  } IfxQspi_Mode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   187  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   188  /** \brief Request between pause and Run transition
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   189   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   190  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   191  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   192      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   193      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   194  } IfxQspi_PauseRunTransition;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   195  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   196  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   197   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   199  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   200      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   201      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   202      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   204      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   205      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   206      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   207      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   208      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   209  } IfxQspi_Phase;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   210  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   211  /** \brief Phase Transition Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   212   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   214  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   215      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   216      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   217      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   218      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   223  } IfxQspi_PhaseTransitionEvent;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   224  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   225  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   226   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   227  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   228  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   229      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_Reset_stateMachineAndFifo = 1,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_Reset_registers           = 2,  /**< \brief Registers Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   232      IfxQspi_Reset_kernel              = 3   /**< \brief Kernel / Module Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   233  } IfxQspi_Reset;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   234  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   235  /** \brief Receive Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   236   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   237  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   238  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   239      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   240      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   243  } IfxQspi_RxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   244  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   245  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   246   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   247   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   248  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   249  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   252  } IfxQspi_SleepMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   253  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   254  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   255   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   256  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   257  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   258      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   259      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   260      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   261      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   262      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   263      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   264      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   265      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   266      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   267      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   268      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   269      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   270      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   271      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   272      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   273      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   274      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   275      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   276      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   277      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   278      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   279      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   280      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   281      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   282      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   283      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   284      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   285      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   286      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   287      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   288      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   289      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   290  } IfxQspi_StrobeDelay;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   291  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   292  /** \brief Transmit Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   293   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   294  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   295  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   296      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   297      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   298      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   299      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   300  } IfxQspi_TxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   301  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   302  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   303  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   304  /** \brief Transmit FIFO mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   305   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   306  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   307  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   308      IfxQspi_FifoMode_combinedMove = 0,  /**< \brief Combined Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   309      IfxQspi_FifoMode_singleMove   = 1,  /**< \brief Single Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   310      IfxQspi_FifoMode_batchMove    = 2   /**< \brief Batch Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   311  } IfxQspi_FifoMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   312  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   313  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   314   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   315  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   316  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   317      IfxQspi_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   318      IfxQspi_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   319      IfxQspi_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   320  } IfxQspi_SuspendMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   321  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   322  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   323  /*-----------------------------Data Structures--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   324  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   325  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   326  /** \brief Structure holding the "pre" and "delay" values.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   327   * To be populated into BACON register after delay calculation.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   328   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   329  typedef struct
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   330  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   331      uint8 pre;         /**< \brief specifies the prescalar value */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   332      uint8 delay;       /**< \brief delay multiplier */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   333  } IfxQspi_DelayConst;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   334  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   335  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   336   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   337  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   338  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   339  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   340  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   341  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   342  /** \brief Clear ALL service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   343   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   344   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   345   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   346  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   347  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   348  /** \brief clear the interrupt after last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   349   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   350   * \param clearInterrupt clear the interrupt flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   351   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   352   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   353  IFX_INLINE void IfxQspi_clearMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   354  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   355  /** \brief Clear the Interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   356   * \param qspi handle to Module register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   357   * \param clearInterrupt clear the interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   358   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   359   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   360  IFX_INLINE void IfxQspi_clearMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   361  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   362  /** \brief Clear RX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   363   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   364   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   365   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   366  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   367  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   368  /** \brief Clear TX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   369   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   370   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   371   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   372  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   373  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   374  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   375   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   376   * \param pt1Config Phase Transition1 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   377   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   378   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   379  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   380  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   381  /** \brief Configure PT2 event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   382   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   383   * \param pt2Config Phase Transition2 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   384   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   385   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   386  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   387  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   388  /** \brief configure Capcon register (Edge Configuration, input selection and capture interrupt select bit)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   389   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   390   * \param inputSel Input port Selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   391   * \param edgeConfiguration edge configuration / capture mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   392   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   393   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   394  IFX_INLINE void IfxQspi_configureCapcon(Ifx_QSPI *qspi, IfxQspi_CaptureControlInputSelection inputSel, IfxQspi_CaptureControlEdgeConfiguration edgeConfiguration);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   395  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   396  /** \brief Enable/Disable Loopback mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   397   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   398   * \param enable Enable / Disable loopback
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   399   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   400   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   401  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   402  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   403  /** \brief enable Phase Transition1 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   404   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   405   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   407   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   408  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   409  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   410  /** \brief enable Phase Transition2 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   411   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   412   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   413   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   414   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   415  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   416  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   417  /** \brief enable User Event (Event selected by PT1)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   418   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   419   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   420   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   421   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   422  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   423  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   424  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   425   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   426   * \return Error Flags
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   427   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   428  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   429  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   430  /** \brief Request for Module in Pause state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   431   * no interrupts
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   432   * no communication
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   433   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   434   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   435   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   436  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   437  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   438  /** \brief Read the oldest data from RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   439   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   440   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   441  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   442  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   443  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   444   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   445   * \param reset reset type (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   446   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   447   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   448  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   449  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   450  /** \brief Request for QSPI in Run state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   451   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   453   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   454  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   455  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   456  /** \brief Enable/Disable the Interrupt After last Byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   457   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   458   * \param interruptEnabled Enable/Disable the interrupt after last byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   460   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   461  IFX_INLINE void IfxQspi_setMoveCounterInterruptAfterLastEnabled(Ifx_QSPI *qspi, boolean interruptEnabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   462  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   463  /** \brief Set the Interrupt after last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   464   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   465   * \param setInterrupt set the interrupt Flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   467   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   468  IFX_INLINE void IfxQspi_setMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean setInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   469  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   470  /** \brief Enable the interrupt before last byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   471   * \param qspi Pointer to Qspi Module Register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   472   * \param interruptEnabled Specifies Interrupt is enable or disable
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   474   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   475  IFX_INLINE void IfxQspi_setMoveCounterInterruptBeforeLastEnabled(Ifx_QSPI *qspi, boolean interruptEnabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   476  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   477  /** \brief set the interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   478   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   479   * \param setInterrupt set the interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   481   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   482  IFX_INLINE void IfxQspi_setMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean setInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   483  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   484  /** \brief Set the Trailing delay
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   485   * \param qspi handle of Module
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   486   * \param baudrate Baud rate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   488   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   489  IFX_INLINE void IfxQspi_setMoveCounterPrescalerTrailingDelay(Ifx_QSPI *qspi, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   490  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   491  /** \brief Set the threshold of RXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   492   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   493   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   495   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   496  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   497  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   498  /** \brief specifies whether to inject the trail2 from bacon configuration or mccon configuration registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   499   * \param qspi Module Register Handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   500   * \param trail2Enabled Enable/Disable Trail2 from MCCON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   502   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   503  IFX_INLINE void IfxQspi_trail2InjectionEnabled(Ifx_QSPI *qspi, boolean trail2Enabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   504  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   505  /** \brief Write Data into DATAENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   506   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   507   * \param data Data to be entered into TxFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   509   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   510  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   511  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   512  /** \brief Returns the module's suspend state.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   513   * TRUE :if module is suspended.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   514   * FALSE:if module is not yet suspended.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   515   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   516   * \return Suspend status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   517   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   518  IFX_INLINE boolean IfxQspi_isModuleSuspended(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   519  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   520  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   521   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   522   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   523   * \param mode Module suspend mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   524   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   525   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   526  IFX_INLINE void IfxQspi_setSuspendMode(Ifx_QSPI *qspi, IfxQspi_SuspendMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   527  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   528  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   529  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   530  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   531  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   532  /** \brief Reads 16bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   533   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   534   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   535   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   537   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   538  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   539  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   540  /** \brief Reads 32bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   541   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   542   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   543   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   544   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   545   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   546  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   547  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   548  /** \brief Reads 8bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   549   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   550   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   551   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   552   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   553   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   554  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   555  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   556  /** \brief resets QSPI kernel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   557   * \param qspi pointer to QSPI registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   558   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   559   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   560  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   561  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   562  /** \brief Writes 16bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   563   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   564   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   565   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   566   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   567   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   568   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   569  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   570  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   571  /** \brief Writes 32bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   572   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   573   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   574   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   575   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   576   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   577   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   578  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   579  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   580  /** \brief Writes 8bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   581   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   582   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   583   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   584   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   586   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   587  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   588  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   589  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   590  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   591  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   592   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   593  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   594  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   595  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   596  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   597  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   598  /** \brief Gets the current mode of QSPI
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   599   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   600   * \return The current mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   601   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   602  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   603  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   604  /** \brief Specifies function to get module frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   605   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   606   * \return Module frequency in Float value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   607   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   608  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   609  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   610  /** \brief Gets actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   611   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   612   * \return Actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   613   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   614  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   615  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   616  /** \brief Gets the filling level of RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   617   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   618   * \return RxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   619   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   620  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   621  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   622  /** \brief Gets Time Quanta frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   623   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   624   * \return TQ frequency in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   625   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   626  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   627  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   628  /** \brief Gets the filling level of TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   629   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   630   * \return TxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   631   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   632  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   633  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   634  /** \brief Specifies the Module enable or disable status
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   635   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   636   * \return TRUE if module is enabled otherwise FALSE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   637   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   638  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   639  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   640  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   641   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   642   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Sets the enable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   649   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   650  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   651  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   652  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   653   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   654   * \param mode Sleep mode selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   656   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   657  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   658  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   659  /** \brief Set the threshold of TXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   660   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   661   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   663   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   664  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   665  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   666  /** \brief Write configuration into BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   667   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   668   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   670   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   671  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   672  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   673  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   674   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   675   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   677   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   678  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   679  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   680  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   681   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   682   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   684   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   685  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   686  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   687  /** \brief Writes channel timing configuration into ECON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   688   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   689   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   690   * \param econVal Extended configuration value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   691   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   692   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   693  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   694  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   695  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   696   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   697   * \param mixEntryVal Data and configuration in mixed
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   698   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   699   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   700  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   701  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   702  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   703  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   704  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   705  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   706  /** \brief Function to calculate baudrate of specified channel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   707   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   708   * \param channelId QSPI channel number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   709   * \return Actual baudrate in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   710   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   711  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   712  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   713  /** \brief Function to calculate BACON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   714   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   715   * \param channelId QSPI Channel Number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   716   * \param chMode Frame configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   717   * \param baudrate The desired baudrate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   718   * \return Calculated BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   719   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   720  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   721  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   722  /** \brief Function to calculate ECON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   723   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   724   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   725   * \param chConfig SPI Channel Configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   726   * \return Calculated ECON[CS] value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   727   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   728  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   729  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   730  /** \brief Function to calculate prescaler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   731   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   732   * \param baudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   733   * \return Prescaler in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   734   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   735  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   736  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   737  /** \brief Specifies the function to calculate Time quantum length
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   738   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   739   * \param maxBaudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   740   * \return Time quantum length in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   741   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   742  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   743  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   744  /** \brief
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   745   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   746   * \return QSPI module register address
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   747   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   748  IFX_EXTERN Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   749  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   750  /** \brief Specifies the function to get Index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   751   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   752   * \return Index in Integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   753   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   754  IFX_EXTERN IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   755  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   756  /** \brief Re-calculated BACON from the oldBACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   757   * \param oldBACON Old BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   758   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   759   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   760   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   761   * \return Re-calculated BACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   762   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   763  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   764  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   765  /** \brief Configures a Slave Select Output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   766   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   767   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   768   * \param outputEnable chip select output will be enabled during transaction
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   769   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   770   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   771   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   772  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   773  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   774  /** \brief Calculates the Delay constants (pre and delay) from the user specified CS delays.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   775   * \param qspi pointer to QSPI SFR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   776   * \param channelId Channel ID no.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   777   * \param chMode Pointer to Channel Mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   778   * \param delayConst Pointer to the Delay Consant Array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   779   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   780   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   781  IFX_EXTERN void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   782  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   783  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   784  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   785  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   786   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   787  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   788  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   789  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   790  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   791  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   792  /** \brief Api to enable/disable CAPCON interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   793   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   794   * \param enable Enable Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   795   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   796   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   797  IFX_INLINE void IfxQspi_enableCapconInterrupt(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   798  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   799  /** \brief Gets the Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   800   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   801   * \return Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   802   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   803  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   804  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   805  /** \brief Gets the RXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   806   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   807   * \return Receive service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   808   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   809  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   810  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   811  /** \brief Gets the TXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   812   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   813   * \return Transmission service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   814   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   815  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   816  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   817  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   818  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   819  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   820   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   821  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   822  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   823  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   824  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   825  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   826  /** \brief Initializes a MRST input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   827   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   828   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   829   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   830   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   831  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   832  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   833  /** \brief Initializes a MRST output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   834   * \param mrstOut the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   835   * \param mrstOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   836   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   837   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   838   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   839  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   840  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   841  /** \brief Initializes a MTSR input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   842   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   843   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   844   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   845   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   846  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   847  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   848  /** \brief Initializes a MTSR output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   849   * \param mtsrOut the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   850   * \param mtsrOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   851   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   852   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   853   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   854  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   855  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   856  /** \brief Initializes a SCLK input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   857   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   858   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   859   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   860   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   861  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   862  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   863  /** \brief Initializes a SCLK output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   864   * \param sclkOut the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   865   * \param sclkOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   866   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   867   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   868   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   869  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   870  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   871  /** \brief Initializes a SLSI input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   872   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   873   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   874   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   875   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   876  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   877  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   878  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   879   * \param slso the SLSO Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   880   * \param slsoMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   881   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   882   * \param outIndex Pin Pad driver index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   883   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   884   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   885  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   886  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   887  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   888  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   889  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   890  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   891  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   892  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   893  /** \brief Get the Receive FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   894   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   895   * \return Receive FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   896   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   897  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   898  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   899  /** \brief Get the Transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   900   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   901   * \return Transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   902   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   903  IFX_INLINE IfxQspi_FifoMode IfxQspi_getTxFifoMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   904  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   905  /** \brief Permutate bytes to / from Big Endian
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   906   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   907   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   908   * \param bigEndian specifies to Permutate bytes to / from Big Endian
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   910   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   911  IFX_INLINE void IfxQspi_permutateBigEndian(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bigEndian);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   912  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   913  /** \brief Set the value of bit segment1 (A).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   914   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   915   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   916   * \param bitSegment1 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   918   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   919  IFX_INLINE void IfxQspi_setBitsegment1(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment1);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   920  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   921  /** \brief Set the value of bit segment2 (B).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   922   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   923   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   924   * \param bitSegment2 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   925   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   926   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   927  IFX_INLINE void IfxQspi_setBitsegment2(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment2);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   928  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   929  /** \brief Set the value of bit segment3 (C).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   930   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   931   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   932   * \param bitSegment3 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   933   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   934   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   935  IFX_INLINE void IfxQspi_setBitsegment3(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment3);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   936  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   937  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   938   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   939   * \param mode select the transfer fifo mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   940   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   941   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   942  IFX_INLINE void IfxQspi_setRxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   943  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   944  /** \brief Set the value of Time Quantum.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   945   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   946   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   947   * \param timeQuantum specifies the value of Time Quantum.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   948   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   949   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   950  IFX_INLINE void IfxQspi_setTimeQuantum(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 timeQuantum);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   951  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   952  /** \brief Set the transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   953   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   954   * \param mode select the transfer fifo mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   956   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   957  IFX_INLINE void IfxQspi_setTxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   958  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   959  /** \brief Provides functionality for both setting of MRSTIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   960   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   961   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   962   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   963   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   964   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   965  IFX_INLINE void IfxQspi_initMrstInPinWithPadLevel(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   966  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   967  /** \brief Provides functionality for both setting of MTSRIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   968   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   969   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   970   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   972   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   973  IFX_INLINE void IfxQspi_initMtsrInPinWithPadLevel(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   974  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   975  /** \brief Provides functionality for both setting of SCLKIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   976   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   977   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   978   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   979   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   980   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   981  IFX_INLINE void IfxQspi_initSclkInPinWithPadLevel(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   982  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   983  /** \brief Provides functionality for both setting of SLSI pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   984   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   985   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   986   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   987   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   988   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   989  IFX_INLINE void IfxQspi_initSlsiWithPadLevel(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   990  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   991  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   992  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   993  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   994  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   995  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   996  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   997      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   998  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   999  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1000  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1001  IFX_INLINE void IfxQspi_clearMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1003      qspi->MCCON.B.IALC = clearInterrupt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1005  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1006  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1007  IFX_INLINE void IfxQspi_clearMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1009      qspi->MCCON.B.IBLC = clearInterrupt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1010  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1011  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1012  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1013  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1014  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1015      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1016  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1017  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1018  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1019  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1020  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1021      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1022  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1023  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1024  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1025  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1026  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1027      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1028  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1029  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1030  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1031  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1032  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1033      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1034  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1035  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1036  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1037  IFX_INLINE void IfxQspi_configureCapcon(Ifx_QSPI *qspi, IfxQspi_CaptureControlInputSelection inputSel, IfxQspi_CaptureControlEdgeConfiguration edgeConfiguration)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1038  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1039      qspi->CAPCON.B.INS     = inputSel;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1040      qspi->CAPCON.B.EDGECON = edgeConfiguration;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1041      qspi->CAPCON.B.CAPSEL  = 1;     // capture-irq on HC-irq
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1042      qspi->CAPCON.B.CAPC    = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1043  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1044  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1045  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1046  IFX_INLINE void IfxQspi_enableCapconInterrupt(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1047  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1048      qspi->CAPCON.B.EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1049  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1050  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1051  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1052  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1053  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1054      IFX_UNUSED_PARAMETER(enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1055  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1056      qspi->GLOBALCON.B.LB = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1057  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1058  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1059  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1060  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1061  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1062      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1063  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1064  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1065  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1066  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1067  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1068      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1069  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1070  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1071  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1072  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1073  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1074      qspi->GLOBALCON1.B.USREN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1075  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1076  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1077  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1078  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1079  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1080      return qspi->STATUS.B.ERRORFLAGS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1081  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1082  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1083  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1084  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1085  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1086      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1087      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1088  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1089  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1090  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1091  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1092  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1093      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1094  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1095  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1096  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1097  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1098  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1099      IFX_UNUSED_PARAMETER(qspi->CLC.U != 0);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1100  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1101      return IfxScuCcu_getQspiFrequency();
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1102  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1103  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1104  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1105  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1106  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1107      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1108  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1109  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1110  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1111  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1112  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1113      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1114  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1115  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1116  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1117  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1118  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1119      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1120      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1122  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1123  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1124  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1126      return (IfxQspi_FifoMode)qspi->GLOBALCON1.B.RXFM;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1128  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1129  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1130  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1132      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	itof	d15,d15

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   123  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   124      for (abc = abcMax; abc >= abcMin; abc--)
	mov.a	a2,#6
.L301:
	movh	d0,#16256
.L302:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    10   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    11   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    14   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    16   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    17   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    19   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    25   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    26   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    27   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    31   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    32   * language processor.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    33   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    40   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    41   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    42   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    43   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    44   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    45   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    46   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    47   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    48   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    49   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    50   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    51   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    52   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    53   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    55  #ifndef IFXQSPI_H
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    56  #define IFXQSPI_H 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    57  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    58  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    59  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    60  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    61  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    62  #include "_Impl/IfxQspi_cfg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    63  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    64  #include "If/SpiIf.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    65  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    66  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    67  #include "_PinMap/IfxQspi_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    68  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    69  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    70  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    71  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    72  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    73  /** \brief Get Fifo size required for Long / Long continous mode interms 32-bit
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    74   * LONG MODE FIFO size (data size in bytes) = (size for Bacon) + (Datasize converted to 32-bit)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    75   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    76  #define IFXQSPI_BACONSIZE(Datasize)           (((((Datasize) % 16) == 0) ? ((uint8)((Datasize) / 16)) : ((uint8)((Datasize) / 16) + 1)))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    77  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    78  #define IFXQSPI_FIFO32BITSIZE(Datasize)       ((((Datasize) % 4) == 0) ? ((uint8)((Datasize) / 4)) : ((uint8)((Datasize) / 4) + 1))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    79  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    80  #define IFXQSPI_GETLONGMODEFIFOSIZE(Datasize) (IFXQSPI_BACONSIZE(Datasize) + IFXQSPI_FIFO32BITSIZE(Datasize))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    81  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    82  /** \brief Errors enable mask for ERRORENS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    83   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    84  #define IFXQSPI_ERRORENABLEMASK ((uint32)0x1FF)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    85  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    86  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    87  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    88  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    89  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    90  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    91   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    92  /** \brief CAPCON Register Edge Configuration (CAPCON.EDGECON)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    93   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    94  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    95  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    96      IfxQspi_CaptureControlEdgeConfiguration_rrMode = 0,  /**< \brief RR mode (rising edge to rising edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_CaptureControlEdgeConfiguration_rfMode = 1,  /**< \brief RF mode (rising edge to falling edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_CaptureControlEdgeConfiguration_frMode = 2,  /**< \brief FR mode (falling edge to rising edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_CaptureControlEdgeConfiguration_ffMode = 3   /**< \brief FF mode (falling edge to falling edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   100  } IfxQspi_CaptureControlEdgeConfiguration;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   101  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   102  /** \brief CAPCON Input Seletion line (CAPCON.INS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   103   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   104  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   105  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_CaptureControlInputSelection_inputA = 0,  /**< \brief INA selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_CaptureControlInputSelection_inputB = 1,  /**< \brief INB selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_CaptureControlInputSelection_inputC = 2,  /**< \brief INC selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_CaptureControlInputSelection_inputD = 3   /**< \brief IND selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   110  } IfxQspi_CaptureControlInputSelection;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   111  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   112  /** \brief QSPI channel Number (BACON.CS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   113   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   115  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   116      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   117      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   120      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   121      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   122      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   123      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   124      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   125      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   126      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   127      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   131  } IfxQspi_ChannelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   133  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   134   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   135  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   136  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   137      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   138      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   139  } IfxQspi_DataLengthUnit;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   140  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   141  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   142   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   143  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   144  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   154      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   155  } IfxQspi_Error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   156  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   157  /** \brief Frame Expect phase time out value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   158   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   159  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   160  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   161      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   162      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   163      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   167      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   168      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   169      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   170      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   171      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   172      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   173      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   175      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   176      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   177  } IfxQspi_ExpectTimeout;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   178  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   179  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   180   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   181  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   182  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   183      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   186  } IfxQspi_Mode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   187  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   188  /** \brief Request between pause and Run transition
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   189   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   190  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   191  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   192      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   193      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   194  } IfxQspi_PauseRunTransition;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   195  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   196  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   197   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   199  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   200      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   201      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   202      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   204      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   205      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   206      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   207      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   208      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   209  } IfxQspi_Phase;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   210  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   211  /** \brief Phase Transition Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   212   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   214  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   215      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   216      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   217      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   218      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   223  } IfxQspi_PhaseTransitionEvent;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   224  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   225  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   226   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   227  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   228  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   229      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_Reset_stateMachineAndFifo = 1,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_Reset_registers           = 2,  /**< \brief Registers Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   232      IfxQspi_Reset_kernel              = 3   /**< \brief Kernel / Module Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   233  } IfxQspi_Reset;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   234  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   235  /** \brief Receive Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   236   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   237  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   238  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   239      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   240      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   243  } IfxQspi_RxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   244  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   245  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   246   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   247   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   248  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   249  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   252  } IfxQspi_SleepMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   253  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   254  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   255   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   256  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   257  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   258      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   259      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   260      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   261      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   262      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   263      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   264      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   265      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   266      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   267      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   268      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   269      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   270      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   271      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   272      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   273      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   274      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   275      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   276      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   277      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   278      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   279      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   280      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   281      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   282      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   283      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   284      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   285      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   286      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   287      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   288      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   289      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   290  } IfxQspi_StrobeDelay;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   291  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   292  /** \brief Transmit Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   293   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   294  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   295  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   296      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   297      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   298      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   299      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   300  } IfxQspi_TxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   301  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   302  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   303  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   304  /** \brief Transmit FIFO mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   305   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   306  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   307  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   308      IfxQspi_FifoMode_combinedMove = 0,  /**< \brief Combined Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   309      IfxQspi_FifoMode_singleMove   = 1,  /**< \brief Single Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   310      IfxQspi_FifoMode_batchMove    = 2   /**< \brief Batch Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   311  } IfxQspi_FifoMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   312  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   313  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   314   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   315  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   316  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   317      IfxQspi_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   318      IfxQspi_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   319      IfxQspi_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   320  } IfxQspi_SuspendMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   321  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   322  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   323  /*-----------------------------Data Structures--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   324  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   325  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   326  /** \brief Structure holding the "pre" and "delay" values.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   327   * To be populated into BACON register after delay calculation.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   328   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   329  typedef struct
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   330  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   331      uint8 pre;         /**< \brief specifies the prescalar value */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   332      uint8 delay;       /**< \brief delay multiplier */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   333  } IfxQspi_DelayConst;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   334  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   335  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   336   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   337  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   338  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   339  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   340  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   341  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   342  /** \brief Clear ALL service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   343   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   344   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   345   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   346  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   347  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   348  /** \brief clear the interrupt after last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   349   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   350   * \param clearInterrupt clear the interrupt flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   351   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   352   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   353  IFX_INLINE void IfxQspi_clearMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   354  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   355  /** \brief Clear the Interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   356   * \param qspi handle to Module register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   357   * \param clearInterrupt clear the interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   358   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   359   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   360  IFX_INLINE void IfxQspi_clearMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   361  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   362  /** \brief Clear RX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   363   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   364   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   365   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   366  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   367  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   368  /** \brief Clear TX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   369   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   370   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   371   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   372  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   373  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   374  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   375   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   376   * \param pt1Config Phase Transition1 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   377   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   378   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   379  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   380  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   381  /** \brief Configure PT2 event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   382   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   383   * \param pt2Config Phase Transition2 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   384   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   385   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   386  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   387  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   388  /** \brief configure Capcon register (Edge Configuration, input selection and capture interrupt select bit)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   389   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   390   * \param inputSel Input port Selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   391   * \param edgeConfiguration edge configuration / capture mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   392   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   393   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   394  IFX_INLINE void IfxQspi_configureCapcon(Ifx_QSPI *qspi, IfxQspi_CaptureControlInputSelection inputSel, IfxQspi_CaptureControlEdgeConfiguration edgeConfiguration);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   395  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   396  /** \brief Enable/Disable Loopback mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   397   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   398   * \param enable Enable / Disable loopback
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   399   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   400   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   401  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   402  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   403  /** \brief enable Phase Transition1 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   404   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   405   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   407   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   408  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   409  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   410  /** \brief enable Phase Transition2 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   411   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   412   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   413   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   414   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   415  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   416  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   417  /** \brief enable User Event (Event selected by PT1)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   418   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   419   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   420   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   421   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   422  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   423  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   424  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   425   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   426   * \return Error Flags
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   427   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   428  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   429  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   430  /** \brief Request for Module in Pause state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   431   * no interrupts
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   432   * no communication
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   433   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   434   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   435   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   436  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   437  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   438  /** \brief Read the oldest data from RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   439   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   440   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   441  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   442  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   443  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   444   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   445   * \param reset reset type (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   446   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   447   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   448  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   449  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   450  /** \brief Request for QSPI in Run state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   451   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   453   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   454  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   455  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   456  /** \brief Enable/Disable the Interrupt After last Byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   457   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   458   * \param interruptEnabled Enable/Disable the interrupt after last byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   460   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   461  IFX_INLINE void IfxQspi_setMoveCounterInterruptAfterLastEnabled(Ifx_QSPI *qspi, boolean interruptEnabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   462  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   463  /** \brief Set the Interrupt after last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   464   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   465   * \param setInterrupt set the interrupt Flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   467   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   468  IFX_INLINE void IfxQspi_setMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean setInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   469  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   470  /** \brief Enable the interrupt before last byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   471   * \param qspi Pointer to Qspi Module Register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   472   * \param interruptEnabled Specifies Interrupt is enable or disable
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   474   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   475  IFX_INLINE void IfxQspi_setMoveCounterInterruptBeforeLastEnabled(Ifx_QSPI *qspi, boolean interruptEnabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   476  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   477  /** \brief set the interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   478   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   479   * \param setInterrupt set the interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   481   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   482  IFX_INLINE void IfxQspi_setMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean setInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   483  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   484  /** \brief Set the Trailing delay
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   485   * \param qspi handle of Module
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   486   * \param baudrate Baud rate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   488   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   489  IFX_INLINE void IfxQspi_setMoveCounterPrescalerTrailingDelay(Ifx_QSPI *qspi, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   490  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   491  /** \brief Set the threshold of RXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   492   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   493   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   495   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   496  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   497  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   498  /** \brief specifies whether to inject the trail2 from bacon configuration or mccon configuration registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   499   * \param qspi Module Register Handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   500   * \param trail2Enabled Enable/Disable Trail2 from MCCON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   502   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   503  IFX_INLINE void IfxQspi_trail2InjectionEnabled(Ifx_QSPI *qspi, boolean trail2Enabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   504  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   505  /** \brief Write Data into DATAENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   506   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   507   * \param data Data to be entered into TxFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   509   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   510  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   511  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   512  /** \brief Returns the module's suspend state.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   513   * TRUE :if module is suspended.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   514   * FALSE:if module is not yet suspended.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   515   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   516   * \return Suspend status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   517   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   518  IFX_INLINE boolean IfxQspi_isModuleSuspended(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   519  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   520  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   521   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   522   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   523   * \param mode Module suspend mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   524   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   525   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   526  IFX_INLINE void IfxQspi_setSuspendMode(Ifx_QSPI *qspi, IfxQspi_SuspendMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   527  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   528  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   529  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   530  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   531  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   532  /** \brief Reads 16bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   533   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   534   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   535   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   537   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   538  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   539  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   540  /** \brief Reads 32bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   541   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   542   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   543   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   544   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   545   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   546  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   547  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   548  /** \brief Reads 8bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   549   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   550   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   551   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   552   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   553   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   554  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   555  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   556  /** \brief resets QSPI kernel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   557   * \param qspi pointer to QSPI registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   558   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   559   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   560  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   561  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   562  /** \brief Writes 16bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   563   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   564   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   565   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   566   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   567   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   568   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   569  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   570  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   571  /** \brief Writes 32bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   572   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   573   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   574   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   575   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   576   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   577   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   578  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   579  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   580  /** \brief Writes 8bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   581   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   582   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   583   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   584   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   586   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   587  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   588  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   589  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   590  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   591  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   592   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   593  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   594  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   595  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   596  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   597  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   598  /** \brief Gets the current mode of QSPI
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   599   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   600   * \return The current mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   601   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   602  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   603  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   604  /** \brief Specifies function to get module frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   605   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   606   * \return Module frequency in Float value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   607   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   608  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   609  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   610  /** \brief Gets actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   611   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   612   * \return Actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   613   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   614  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   615  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   616  /** \brief Gets the filling level of RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   617   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   618   * \return RxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   619   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   620  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   621  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   622  /** \brief Gets Time Quanta frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   623   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   624   * \return TQ frequency in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   625   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   626  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   627  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   628  /** \brief Gets the filling level of TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   629   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   630   * \return TxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   631   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   632  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   633  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   634  /** \brief Specifies the Module enable or disable status
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   635   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   636   * \return TRUE if module is enabled otherwise FALSE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   637   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   638  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   639  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   640  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   641   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   642   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Sets the enable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   649   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   650  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   651  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   652  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   653   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   654   * \param mode Sleep mode selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   656   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   657  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   658  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   659  /** \brief Set the threshold of TXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   660   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   661   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   663   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   664  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   665  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   666  /** \brief Write configuration into BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   667   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   668   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   670   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   671  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   672  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   673  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   674   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   675   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   677   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   678  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   679  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   680  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   681   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   682   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   684   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   685  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   686  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   687  /** \brief Writes channel timing configuration into ECON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   688   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   689   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   690   * \param econVal Extended configuration value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   691   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   692   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   693  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   694  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   695  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   696   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   697   * \param mixEntryVal Data and configuration in mixed
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   698   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   699   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   700  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   701  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   702  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   703  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   704  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   705  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   706  /** \brief Function to calculate baudrate of specified channel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   707   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   708   * \param channelId QSPI channel number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   709   * \return Actual baudrate in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   710   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   711  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   712  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   713  /** \brief Function to calculate BACON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   714   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   715   * \param channelId QSPI Channel Number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   716   * \param chMode Frame configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   717   * \param baudrate The desired baudrate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   718   * \return Calculated BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   719   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   720  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   721  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   722  /** \brief Function to calculate ECON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   723   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   724   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   725   * \param chConfig SPI Channel Configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   726   * \return Calculated ECON[CS] value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   727   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   728  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   729  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   730  /** \brief Function to calculate prescaler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   731   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   732   * \param baudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   733   * \return Prescaler in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   734   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   735  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   736  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   737  /** \brief Specifies the function to calculate Time quantum length
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   738   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   739   * \param maxBaudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   740   * \return Time quantum length in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   741   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   742  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   743  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   744  /** \brief
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   745   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   746   * \return QSPI module register address
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   747   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   748  IFX_EXTERN Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   749  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   750  /** \brief Specifies the function to get Index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   751   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   752   * \return Index in Integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   753   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   754  IFX_EXTERN IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   755  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   756  /** \brief Re-calculated BACON from the oldBACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   757   * \param oldBACON Old BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   758   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   759   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   760   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   761   * \return Re-calculated BACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   762   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   763  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   764  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   765  /** \brief Configures a Slave Select Output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   766   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   767   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   768   * \param outputEnable chip select output will be enabled during transaction
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   769   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   770   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   771   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   772  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   773  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   774  /** \brief Calculates the Delay constants (pre and delay) from the user specified CS delays.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   775   * \param qspi pointer to QSPI SFR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   776   * \param channelId Channel ID no.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   777   * \param chMode Pointer to Channel Mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   778   * \param delayConst Pointer to the Delay Consant Array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   779   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   780   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   781  IFX_EXTERN void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   782  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   783  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   784  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   785  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   786   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   787  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   788  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   789  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   790  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   791  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   792  /** \brief Api to enable/disable CAPCON interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   793   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   794   * \param enable Enable Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   795   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   796   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   797  IFX_INLINE void IfxQspi_enableCapconInterrupt(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   798  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   799  /** \brief Gets the Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   800   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   801   * \return Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   802   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   803  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   804  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   805  /** \brief Gets the RXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   806   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   807   * \return Receive service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   808   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   809  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   810  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   811  /** \brief Gets the TXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   812   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   813   * \return Transmission service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   814   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   815  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   816  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   817  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   818  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   819  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   820   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   821  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   822  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   823  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   824  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   825  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   826  /** \brief Initializes a MRST input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   827   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   828   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   829   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   830   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   831  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   832  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   833  /** \brief Initializes a MRST output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   834   * \param mrstOut the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   835   * \param mrstOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   836   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   837   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   838   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   839  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   840  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   841  /** \brief Initializes a MTSR input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   842   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   843   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   844   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   845   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   846  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   847  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   848  /** \brief Initializes a MTSR output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   849   * \param mtsrOut the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   850   * \param mtsrOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   851   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   852   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   853   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   854  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   855  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   856  /** \brief Initializes a SCLK input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   857   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   858   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   859   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   860   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   861  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   862  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   863  /** \brief Initializes a SCLK output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   864   * \param sclkOut the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   865   * \param sclkOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   866   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   867   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   868   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   869  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   870  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   871  /** \brief Initializes a SLSI input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   872   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   873   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   874   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   875   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   876  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   877  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   878  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   879   * \param slso the SLSO Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   880   * \param slsoMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   881   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   882   * \param outIndex Pin Pad driver index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   883   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   884   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   885  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   886  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   887  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   888  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   889  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   890  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   891  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   892  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   893  /** \brief Get the Receive FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   894   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   895   * \return Receive FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   896   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   897  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   898  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   899  /** \brief Get the Transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   900   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   901   * \return Transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   902   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   903  IFX_INLINE IfxQspi_FifoMode IfxQspi_getTxFifoMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   904  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   905  /** \brief Permutate bytes to / from Big Endian
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   906   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   907   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   908   * \param bigEndian specifies to Permutate bytes to / from Big Endian
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   910   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   911  IFX_INLINE void IfxQspi_permutateBigEndian(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bigEndian);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   912  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   913  /** \brief Set the value of bit segment1 (A).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   914   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   915   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   916   * \param bitSegment1 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   918   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   919  IFX_INLINE void IfxQspi_setBitsegment1(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment1);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   920  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   921  /** \brief Set the value of bit segment2 (B).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   922   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   923   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   924   * \param bitSegment2 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   925   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   926   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   927  IFX_INLINE void IfxQspi_setBitsegment2(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment2);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   928  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   929  /** \brief Set the value of bit segment3 (C).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   930   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   931   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   932   * \param bitSegment3 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   933   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   934   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   935  IFX_INLINE void IfxQspi_setBitsegment3(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment3);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   936  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   937  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   938   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   939   * \param mode select the transfer fifo mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   940   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   941   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   942  IFX_INLINE void IfxQspi_setRxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   943  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   944  /** \brief Set the value of Time Quantum.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   945   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   946   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   947   * \param timeQuantum specifies the value of Time Quantum.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   948   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   949   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   950  IFX_INLINE void IfxQspi_setTimeQuantum(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 timeQuantum);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   951  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   952  /** \brief Set the transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   953   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   954   * \param mode select the transfer fifo mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   956   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   957  IFX_INLINE void IfxQspi_setTxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   958  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   959  /** \brief Provides functionality for both setting of MRSTIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   960   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   961   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   962   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   963   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   964   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   965  IFX_INLINE void IfxQspi_initMrstInPinWithPadLevel(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   966  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   967  /** \brief Provides functionality for both setting of MTSRIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   968   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   969   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   970   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   972   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   973  IFX_INLINE void IfxQspi_initMtsrInPinWithPadLevel(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   974  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   975  /** \brief Provides functionality for both setting of SCLKIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   976   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   977   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   978   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   979   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   980   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   981  IFX_INLINE void IfxQspi_initSclkInPinWithPadLevel(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   982  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   983  /** \brief Provides functionality for both setting of SLSI pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   984   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   985   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   986   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   987   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   988   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   989  IFX_INLINE void IfxQspi_initSlsiWithPadLevel(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   990  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   991  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   992  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   993  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   994  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   995  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   996  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   997      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   998  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   999  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1000  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1001  IFX_INLINE void IfxQspi_clearMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1003      qspi->MCCON.B.IALC = clearInterrupt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1005  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1006  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1007  IFX_INLINE void IfxQspi_clearMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1009      qspi->MCCON.B.IBLC = clearInterrupt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1010  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1011  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1012  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1013  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1014  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1015      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1016  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1017  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1018  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1019  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1020  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1021      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1022  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1023  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1024  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1025  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1026  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1027      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1028  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1029  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1030  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1031  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1032  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1033      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1034  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1035  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1036  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1037  IFX_INLINE void IfxQspi_configureCapcon(Ifx_QSPI *qspi, IfxQspi_CaptureControlInputSelection inputSel, IfxQspi_CaptureControlEdgeConfiguration edgeConfiguration)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1038  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1039      qspi->CAPCON.B.INS     = inputSel;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1040      qspi->CAPCON.B.EDGECON = edgeConfiguration;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1041      qspi->CAPCON.B.CAPSEL  = 1;     // capture-irq on HC-irq
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1042      qspi->CAPCON.B.CAPC    = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1043  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1044  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1045  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1046  IFX_INLINE void IfxQspi_enableCapconInterrupt(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1047  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1048      qspi->CAPCON.B.EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1049  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1050  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1051  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1052  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1053  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1054      IFX_UNUSED_PARAMETER(enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1055  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1056      qspi->GLOBALCON.B.LB = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1057  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1058  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1059  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1060  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1061  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1062      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1063  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1064  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1065  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1066  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1067  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1068      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1069  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1070  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1071  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1072  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1073  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1074      qspi->GLOBALCON1.B.USREN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1075  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1076  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1077  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1078  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1079  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1080      return qspi->STATUS.B.ERRORFLAGS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1081  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1082  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1083  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1084  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1085  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1086      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1087      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1088  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1089  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1090  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1091  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1092  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1093      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1094  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1095  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1096  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1097  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1098  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1099      IFX_UNUSED_PARAMETER(qspi->CLC.U != 0);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1100  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1101      return IfxScuCcu_getQspiFrequency();
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1102  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1103  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1104  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1105  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1106  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1107      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1108  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1109  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1110  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1111  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1112  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1113      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1114  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1115  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1116  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1117  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1118  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1119      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1120      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1122  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1123  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1124  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1126      return (IfxQspi_FifoMode)qspi->GLOBALCON1.B.RXFM;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1128  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1129  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1130  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1132      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	div.f	d15,d2,d15
.L303:
	extr.u	d2,d1,#23,#8
.L554:
	mov	d5,#8
.L385:
	div.f	d3,d0,d15
.L386:
	eq	d15,d2,#0
.L555:
	cmov	d1,d15,d0
.L310:
	div.f	d7,d0,d1
.L387:
	mov	d10,d5
.L311:
	mov	d4,#1
.L388:
	mov	d6,#0
.L5:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   125      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   126          tTmp = tQspi * abc;
	itof	d0,d10
.L556:
	mul.f	d0,d3,d0
.L389:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   127          q    = (int)((tBaud / tTmp) + 0.5);
	div.f	d1,d7,d0
.L557:
	movh	d2,#16128
.L558:
	add.f	d1,d1,d2
.L559:
	ftoiz	d1,d1
.L391:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   128  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   129          if (q > 64)
	mov	d2,#64
.L393:
	jlt	d2,d1,.L7
.L560:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   130          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   131              q = 64;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   132          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   133  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   134          else if ((q * abc) < 4)
	mul	d2,d1,d10
.L392:
	jge	d2,#4,.L8
.L561:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   135          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   136              q = 2;
	mov	d2,#2
	j	.L9
.L8:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   137          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   138  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   139          else if (q < 1)
	max	d2,d1,#1
.L9:
.L7:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   140          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   141              q = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   142          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   143  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   144          tBaudTmp = tTmp * q;
	itof	d1,d2
.L562:
	mul.f	d0,d0,d1
.L390:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   145          error    = __absf(tBaudTmp - tBaud);
	sub.f	d0,d0,d7
.L395:
	cmp.f	d15,d0,d6
	jz.t	d15:0,.L11
	insn.t	d0,d0:31,d0:31
.L11:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   146  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   147          if (__leqf(error, bestError)) /* we have a equal/better error case */
	cmp.f	d1,d0,d9
	and	d15,d1,#4
	jne	d15,#0,.L12
.L563:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   148          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   149              /* process this case only if lesser error / or if ABC is even */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   150              if (__neqf(error, bestError) || (((uint32)bestAbc & (uint32)0x1) == 0))
	jne	d15,#0,.L13
.L564:
	jnz.t	d1:0,.L14
.L396:
	jnz.t	d5:0,.L15
.L14:
.L13:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   151              {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   152                  bestError = error;
	mov	d9,d0
.L565:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   153                  bestAbc   = abc;
	mov	e4,d10,d2
.L15:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   154                  bestQ     = q;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   155              }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   156  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   157              /* break out if ABC is even and error = 0 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   158              if (((uint32)bestAbc & (uint32)0x1) == 0)
	jnz.t	d5:0,.L16
.L397:
	cmp.f	d15,d0,d6
	and	d15,#3
.L566:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   159              {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   160                  done = (__neqf(error, 0.0)) ? FALSE : TRUE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   161  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   162                  if (done != FALSE)
	jne	d15,#0,.L17
.L16:
.L12:
	add	d10,#-1
	loop	a2,.L5

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   163                  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   164                      break;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   165                  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   166              }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   167          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   168      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   169  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   170      /* Exchange Q and ABC, if ABC is odd and Q is even.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   171       * This is because: A+1+B+C is ideally even for
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   172       * achieving 50% duty cycle of the clock.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   173       */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   174      if ((bestQ <= abcMax)
.L17:
	mov	d15,#8
.L398:
	jlt	d15,d4,.L18
.L399:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   175          && (((uint32)bestAbc & (uint32)0x1) != 0)
	jz.t	d5:0,.L19
.L400:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   176          && (((uint32)bestQ & (uint32)0x1) == 0))
	jnz.t	d4:0,.L20
.L567:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   177      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   178          q       = bestQ;
	mov	d15,d4
.L394:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   179          bestQ   = bestAbc;
	mov	d4,d5
.L401:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   180          bestAbc = q;
	mov	d5,d15
.L20:
.L19:
.L18:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   181      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   182  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   183      /* NOTE: In assigning values to A,B,C:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   184       *  the "sampling point" (which is A+B) has to be as far as possible
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   185       *  from the "shifting point" (end of A+B+C).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   186       * The duty cycle is calculated as the ratio of A : B+C
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   187       * Therefore, to keep 50% duty cycle: A = B+C
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   188       * Thus, we cannot influence the value of A, once A+B+C is found out
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   189       * (A+1 is always (A+B+C)/2).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   190       * However, in between B and C - we should try to maximize B (and minimize C).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   191       * The goal will be to do this - keep max value of B always and keep only any remaining value for C .
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   192       */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   193      halfBaud     = bestAbc / 2;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   194      diffB        = halfBaud - maxB;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   195  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   196      econ.B.Q     = bestQ - 1;
	add	d4,#-1
.L568:
	insert	d2,d8,d4,#0,#6
.L402:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   197      econ.B.A     = halfBaud + (bestAbc % 2) - 1;  /* A + 1 = Half of Baud count */
	and	d15,d5,#1
.L569:
	sha	d0,d5,#-1
.L403:
	add	d15,d0
.L570:
	add	d15,#-1
.L571:
	insert	d15,d2,d15,#6,#2
.L572:
	add	d1,d0,#-3
.L405:
	insert	d8,d8,d15,#0,#8
.L573:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   198      econ.B.C     = (diffB > 0) ? diffB : 0;
	max	d15,d1,#0
.L574:
	insert	d8,d8,d15,#10,#2
.L575:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   199      econ.B.B     = (diffB > 0) ? maxB : halfBaud;
	lt	d15,d1,#1
.L576:
	cmovn	d0,d15,#3
.L404:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   200  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   201      econ.B.CPH   = (chConfig->mode.shiftClock == SpiIf_ShiftClock_shiftTransmitDataOnLeadingEdge) ? 1 : 0;
	insert	d8,d8,d0,#8,#2
	ld.bu	d0,[a15]8
	extr.u	d15,d0,#4,#1
.L577:
	eq	d15,d15,#0
.L578:
	insert	d8,d8,d15,#12,#1
.L579:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   202      econ.B.CPOL  = (chConfig->mode.clockPolarity == SpiIf_ClockPolarity_idleLow) ? 0 : 1;
	extr.u	d15,d0,#3,#1
	ne	d15,d15,#0
.L580:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   203      econ.B.PAREN = chConfig->mode.parityCheck;
	insert	d8,d8,d15,#13,#1
	ld.bu	d15,[a15]9
	extr.u	d15,d15,#5,#1
.L581:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   204  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   205      return econ.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   206  }
	insert	d2,d8,d15,#14,#1
	ret
.L272:
	
__IfxQspi_calculateExtendedConfigurationValue_function_end:
	.size	IfxQspi_calculateExtendedConfigurationValue,__IfxQspi_calculateExtendedConfigurationValue_function_end-IfxQspi_calculateExtendedConfigurationValue
.L159:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculatePrescaler',code,cluster('IfxQspi_calculatePrescaler')
	.sect	'.text.IfxQspi.IfxQspi_calculatePrescaler'
	.align	2
	
	.global	IfxQspi_calculatePrescaler

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   207  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   208  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   209  uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate)
; Function IfxQspi_calculatePrescaler
.L77:
IfxQspi_calculatePrescaler:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   210  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   211      float  error, bestError;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   212      float  halfBaud = baudrate / 2;
	movh	d15,#16128
.L586:
	mul.f	d8,d4,d15

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    10   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    11   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    14   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    16   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    17   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    19   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    25   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    26   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    27   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    31   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    32   * language processor.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    33   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    40   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    41   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    42   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    43   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    44   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    45   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    46   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    47   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    48   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    49   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    50   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    51   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    52   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    53   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    55  #ifndef IFXQSPI_H
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    56  #define IFXQSPI_H 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    57  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    58  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    59  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    60  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    61  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    62  #include "_Impl/IfxQspi_cfg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    63  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    64  #include "If/SpiIf.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    65  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    66  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    67  #include "_PinMap/IfxQspi_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    68  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    69  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    70  /*-----------------------------------Macros-----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    71  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    72  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    73  /** \brief Get Fifo size required for Long / Long continous mode interms 32-bit
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    74   * LONG MODE FIFO size (data size in bytes) = (size for Bacon) + (Datasize converted to 32-bit)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    75   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    76  #define IFXQSPI_BACONSIZE(Datasize)           (((((Datasize) % 16) == 0) ? ((uint8)((Datasize) / 16)) : ((uint8)((Datasize) / 16) + 1)))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    77  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    78  #define IFXQSPI_FIFO32BITSIZE(Datasize)       ((((Datasize) % 4) == 0) ? ((uint8)((Datasize) / 4)) : ((uint8)((Datasize) / 4) + 1))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    79  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    80  #define IFXQSPI_GETLONGMODEFIFOSIZE(Datasize) (IFXQSPI_BACONSIZE(Datasize) + IFXQSPI_FIFO32BITSIZE(Datasize))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    81  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    82  /** \brief Errors enable mask for ERRORENS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    83   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    84  #define IFXQSPI_ERRORENABLEMASK ((uint32)0x1FF)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    85  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    86  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    87  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    88  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    89  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    90  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    91   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    92  /** \brief CAPCON Register Edge Configuration (CAPCON.EDGECON)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    93   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    94  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    95  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    96      IfxQspi_CaptureControlEdgeConfiguration_rrMode = 0,  /**< \brief RR mode (rising edge to rising edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_CaptureControlEdgeConfiguration_rfMode = 1,  /**< \brief RF mode (rising edge to falling edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_CaptureControlEdgeConfiguration_frMode = 2,  /**< \brief FR mode (falling edge to rising edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_CaptureControlEdgeConfiguration_ffMode = 3   /**< \brief FF mode (falling edge to falling edge) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   100  } IfxQspi_CaptureControlEdgeConfiguration;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   101  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   102  /** \brief CAPCON Input Seletion line (CAPCON.INS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   103   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   104  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   105  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_CaptureControlInputSelection_inputA = 0,  /**< \brief INA selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_CaptureControlInputSelection_inputB = 1,  /**< \brief INB selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_CaptureControlInputSelection_inputC = 2,  /**< \brief INC selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_CaptureControlInputSelection_inputD = 3   /**< \brief IND selected */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   110  } IfxQspi_CaptureControlInputSelection;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   111  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   112  /** \brief QSPI channel Number (BACON.CS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   113   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   115  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   116      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   117      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   120      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   121      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   122      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   123      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   124      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   125      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   126      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   127      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   131  } IfxQspi_ChannelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   133  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   134   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   135  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   136  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   137      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   138      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   139  } IfxQspi_DataLengthUnit;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   140  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   141  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   142   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   143  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   144  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   154      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   155  } IfxQspi_Error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   156  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   157  /** \brief Frame Expect phase time out value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   158   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   159  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   160  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   161      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   162      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   163      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   167      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   168      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   169      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   170      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   171      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   172      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   173      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   175      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   176      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   177  } IfxQspi_ExpectTimeout;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   178  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   179  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   180   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   181  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   182  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   183      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   186  } IfxQspi_Mode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   187  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   188  /** \brief Request between pause and Run transition
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   189   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   190  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   191  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   192      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   193      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   194  } IfxQspi_PauseRunTransition;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   195  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   196  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   197   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   199  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   200      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   201      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   202      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   204      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   205      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   206      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   207      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   208      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   209  } IfxQspi_Phase;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   210  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   211  /** \brief Phase Transition Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   212   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   214  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   215      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   216      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   217      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   218      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   223  } IfxQspi_PhaseTransitionEvent;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   224  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   225  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   226   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   227  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   228  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   229      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_Reset_stateMachineAndFifo = 1,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_Reset_registers           = 2,  /**< \brief Registers Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   232      IfxQspi_Reset_kernel              = 3   /**< \brief Kernel / Module Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   233  } IfxQspi_Reset;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   234  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   235  /** \brief Receive Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   236   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   237  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   238  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   239      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   240      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   243  } IfxQspi_RxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   244  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   245  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   246   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   247   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   248  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   249  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   252  } IfxQspi_SleepMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   253  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   254  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   255   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   256  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   257  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   258      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   259      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   260      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   261      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   262      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   263      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   264      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   265      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   266      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   267      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   268      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   269      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   270      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   271      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   272      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   273      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   274      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   275      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   276      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   277      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   278      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   279      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   280      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   281      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   282      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   283      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   284      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   285      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   286      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   287      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   288      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   289      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   290  } IfxQspi_StrobeDelay;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   291  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   292  /** \brief Transmit Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   293   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   294  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   295  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   296      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   297      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   298      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   299      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   300  } IfxQspi_TxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   301  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   302  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   303  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   304  /** \brief Transmit FIFO mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   305   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   306  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   307  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   308      IfxQspi_FifoMode_combinedMove = 0,  /**< \brief Combined Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   309      IfxQspi_FifoMode_singleMove   = 1,  /**< \brief Single Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   310      IfxQspi_FifoMode_batchMove    = 2   /**< \brief Batch Move Mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   311  } IfxQspi_FifoMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   312  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   313  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   314   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   315  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   316  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   317      IfxQspi_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   318      IfxQspi_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   319      IfxQspi_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   320  } IfxQspi_SuspendMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   321  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   322  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   323  /*-----------------------------Data Structures--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   324  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   325  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   326  /** \brief Structure holding the "pre" and "delay" values.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   327   * To be populated into BACON register after delay calculation.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   328   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   329  typedef struct
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   330  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   331      uint8 pre;         /**< \brief specifies the prescalar value */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   332      uint8 delay;       /**< \brief delay multiplier */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   333  } IfxQspi_DelayConst;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   334  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   335  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   336   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   337  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   338  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   339  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   340  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   341  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   342  /** \brief Clear ALL service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   343   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   344   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   345   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   346  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   347  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   348  /** \brief clear the interrupt after last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   349   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   350   * \param clearInterrupt clear the interrupt flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   351   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   352   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   353  IFX_INLINE void IfxQspi_clearMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   354  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   355  /** \brief Clear the Interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   356   * \param qspi handle to Module register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   357   * \param clearInterrupt clear the interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   358   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   359   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   360  IFX_INLINE void IfxQspi_clearMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   361  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   362  /** \brief Clear RX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   363   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   364   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   365   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   366  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   367  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   368  /** \brief Clear TX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   369   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   370   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   371   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   372  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   373  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   374  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   375   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   376   * \param pt1Config Phase Transition1 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   377   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   378   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   379  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   380  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   381  /** \brief Configure PT2 event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   382   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   383   * \param pt2Config Phase Transition2 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   384   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   385   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   386  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   387  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   388  /** \brief configure Capcon register (Edge Configuration, input selection and capture interrupt select bit)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   389   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   390   * \param inputSel Input port Selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   391   * \param edgeConfiguration edge configuration / capture mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   392   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   393   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   394  IFX_INLINE void IfxQspi_configureCapcon(Ifx_QSPI *qspi, IfxQspi_CaptureControlInputSelection inputSel, IfxQspi_CaptureControlEdgeConfiguration edgeConfiguration);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   395  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   396  /** \brief Enable/Disable Loopback mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   397   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   398   * \param enable Enable / Disable loopback
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   399   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   400   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   401  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   402  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   403  /** \brief enable Phase Transition1 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   404   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   405   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   407   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   408  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   409  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   410  /** \brief enable Phase Transition2 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   411   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   412   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   413   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   414   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   415  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   416  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   417  /** \brief enable User Event (Event selected by PT1)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   418   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   419   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   420   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   421   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   422  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   423  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   424  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   425   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   426   * \return Error Flags
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   427   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   428  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   429  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   430  /** \brief Request for Module in Pause state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   431   * no interrupts
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   432   * no communication
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   433   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   434   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   435   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   436  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   437  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   438  /** \brief Read the oldest data from RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   439   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   440   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   441  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   442  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   443  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   444   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   445   * \param reset reset type (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   446   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   447   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   448  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   449  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   450  /** \brief Request for QSPI in Run state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   451   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   453   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   454  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   455  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   456  /** \brief Enable/Disable the Interrupt After last Byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   457   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   458   * \param interruptEnabled Enable/Disable the interrupt after last byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   460   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   461  IFX_INLINE void IfxQspi_setMoveCounterInterruptAfterLastEnabled(Ifx_QSPI *qspi, boolean interruptEnabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   462  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   463  /** \brief Set the Interrupt after last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   464   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   465   * \param setInterrupt set the interrupt Flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   467   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   468  IFX_INLINE void IfxQspi_setMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean setInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   469  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   470  /** \brief Enable the interrupt before last byte
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   471   * \param qspi Pointer to Qspi Module Register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   472   * \param interruptEnabled Specifies Interrupt is enable or disable
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   474   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   475  IFX_INLINE void IfxQspi_setMoveCounterInterruptBeforeLastEnabled(Ifx_QSPI *qspi, boolean interruptEnabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   476  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   477  /** \brief set the interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   478   * \param qspi Module register handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   479   * \param setInterrupt set the interrupt before last flag
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   481   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   482  IFX_INLINE void IfxQspi_setMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean setInterrupt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   483  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   484  /** \brief Set the Trailing delay
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   485   * \param qspi handle of Module
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   486   * \param baudrate Baud rate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   488   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   489  IFX_INLINE void IfxQspi_setMoveCounterPrescalerTrailingDelay(Ifx_QSPI *qspi, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   490  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   491  /** \brief Set the threshold of RXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   492   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   493   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   495   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   496  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   497  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   498  /** \brief specifies whether to inject the trail2 from bacon configuration or mccon configuration registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   499   * \param qspi Module Register Handler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   500   * \param trail2Enabled Enable/Disable Trail2 from MCCON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   502   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   503  IFX_INLINE void IfxQspi_trail2InjectionEnabled(Ifx_QSPI *qspi, boolean trail2Enabled);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   504  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   505  /** \brief Write Data into DATAENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   506   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   507   * \param data Data to be entered into TxFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   509   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   510  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   511  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   512  /** \brief Returns the module's suspend state.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   513   * TRUE :if module is suspended.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   514   * FALSE:if module is not yet suspended.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   515   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   516   * \return Suspend status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   517   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   518  IFX_INLINE boolean IfxQspi_isModuleSuspended(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   519  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   520  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   521   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   522   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   523   * \param mode Module suspend mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   524   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   525   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   526  IFX_INLINE void IfxQspi_setSuspendMode(Ifx_QSPI *qspi, IfxQspi_SuspendMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   527  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   528  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   529  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   530  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   531  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   532  /** \brief Reads 16bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   533   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   534   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   535   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   537   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   538  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   539  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   540  /** \brief Reads 32bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   541   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   542   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   543   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   544   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   545   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   546  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   547  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   548  /** \brief Reads 8bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   549   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   550   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   551   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   552   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   553   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   554  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   555  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   556  /** \brief resets QSPI kernel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   557   * \param qspi pointer to QSPI registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   558   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   559   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   560  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   561  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   562  /** \brief Writes 16bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   563   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   564   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   565   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   566   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   567   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   568   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   569  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   570  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   571  /** \brief Writes 32bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   572   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   573   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   574   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   575   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   576   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   577   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   578  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   579  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   580  /** \brief Writes 8bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   581   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   582   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   583   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   584   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   586   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   587  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   588  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   589  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   590  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   591  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   592   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   593  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   594  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   595  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   596  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   597  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   598  /** \brief Gets the current mode of QSPI
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   599   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   600   * \return The current mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   601   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   602  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   603  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   604  /** \brief Specifies function to get module frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   605   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   606   * \return Module frequency in Float value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   607   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   608  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   609  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   610  /** \brief Gets actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   611   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   612   * \return Actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   613   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   614  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   615  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   616  /** \brief Gets the filling level of RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   617   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   618   * \return RxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   619   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   620  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   621  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   622  /** \brief Gets Time Quanta frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   623   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   624   * \return TQ frequency in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   625   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   626  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   627  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   628  /** \brief Gets the filling level of TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   629   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   630   * \return TxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   631   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   632  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   633  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   634  /** \brief Specifies the Module enable or disable status
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   635   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   636   * \return TRUE if module is enabled otherwise FALSE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   637   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   638  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   639  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   640  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   641   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   642   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Sets the enable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   649   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   650  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   651  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   652  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   653   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   654   * \param mode Sleep mode selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   656   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   657  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   658  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   659  /** \brief Set the threshold of TXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   660   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   661   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   663   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   664  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   665  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   666  /** \brief Write configuration into BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   667   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   668   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   670   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   671  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   672  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   673  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   674   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   675   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   677   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   678  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   679  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   680  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   681   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   682   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   684   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   685  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   686  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   687  /** \brief Writes channel timing configuration into ECON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   688   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   689   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   690   * \param econVal Extended configuration value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   691   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   692   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   693  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   694  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   695  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   696   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   697   * \param mixEntryVal Data and configuration in mixed
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   698   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   699   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   700  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   701  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   702  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   703  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   704  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   705  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   706  /** \brief Function to calculate baudrate of specified channel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   707   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   708   * \param channelId QSPI channel number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   709   * \return Actual baudrate in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   710   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   711  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   712  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   713  /** \brief Function to calculate BACON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   714   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   715   * \param channelId QSPI Channel Number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   716   * \param chMode Frame configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   717   * \param baudrate The desired baudrate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   718   * \return Calculated BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   719   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   720  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   721  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   722  /** \brief Function to calculate ECON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   723   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   724   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   725   * \param chConfig SPI Channel Configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   726   * \return Calculated ECON[CS] value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   727   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   728  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   729  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   730  /** \brief Function to calculate prescaler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   731   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   732   * \param baudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   733   * \return Prescaler in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   734   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   735  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   736  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   737  /** \brief Specifies the function to calculate Time quantum length
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   738   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   739   * \param maxBaudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   740   * \return Time quantum length in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   741   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   742  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   743  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   744  /** \brief
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   745   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   746   * \return QSPI module register address
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   747   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   748  IFX_EXTERN Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   749  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   750  /** \brief Specifies the function to get Index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   751   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   752   * \return Index in Integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   753   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   754  IFX_EXTERN IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   755  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   756  /** \brief Re-calculated BACON from the oldBACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   757   * \param oldBACON Old BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   758   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   759   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   760   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   761   * \return Re-calculated BACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   762   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   763  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   764  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   765  /** \brief Configures a Slave Select Output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   766   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   767   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   768   * \param outputEnable chip select output will be enabled during transaction
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   769   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   770   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   771   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   772  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   773  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   774  /** \brief Calculates the Delay constants (pre and delay) from the user specified CS delays.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   775   * \param qspi pointer to QSPI SFR
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   776   * \param channelId Channel ID no.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   777   * \param chMode Pointer to Channel Mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   778   * \param delayConst Pointer to the Delay Consant Array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   779   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   780   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   781  IFX_EXTERN void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   782  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   783  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   784  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   785  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   786   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   787  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   788  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   789  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   790  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   791  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   792  /** \brief Api to enable/disable CAPCON interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   793   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   794   * \param enable Enable Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   795   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   796   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   797  IFX_INLINE void IfxQspi_enableCapconInterrupt(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   798  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   799  /** \brief Gets the Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   800   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   801   * \return Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   802   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   803  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   804  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   805  /** \brief Gets the RXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   806   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   807   * \return Receive service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   808   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   809  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   810  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   811  /** \brief Gets the TXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   812   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   813   * \return Transmission service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   814   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   815  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   816  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   817  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   818  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   819  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   820   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   821  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   822  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   823  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   824  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   825  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   826  /** \brief Initializes a MRST input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   827   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   828   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   829   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   830   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   831  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   832  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   833  /** \brief Initializes a MRST output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   834   * \param mrstOut the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   835   * \param mrstOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   836   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   837   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   838   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   839  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   840  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   841  /** \brief Initializes a MTSR input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   842   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   843   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   844   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   845   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   846  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   847  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   848  /** \brief Initializes a MTSR output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   849   * \param mtsrOut the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   850   * \param mtsrOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   851   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   852   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   853   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   854  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   855  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   856  /** \brief Initializes a SCLK input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   857   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   858   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   859   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   860   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   861  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   862  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   863  /** \brief Initializes a SCLK output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   864   * \param sclkOut the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   865   * \param sclkOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   866   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   867   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   868   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   869  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   870  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   871  /** \brief Initializes a SLSI input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   872   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   873   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   874   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   875   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   876  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   877  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   878  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   879   * \param slso the SLSO Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   880   * \param slsoMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   881   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   882   * \param outIndex Pin Pad driver index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   883   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   884   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   885  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   886  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   887  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   888  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   889  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   890  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   891  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   892  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   893  /** \brief Get the Receive FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   894   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   895   * \return Receive FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   896   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   897  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   898  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   899  /** \brief Get the Transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   900   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   901   * \return Transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   902   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   903  IFX_INLINE IfxQspi_FifoMode IfxQspi_getTxFifoMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   904  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   905  /** \brief Permutate bytes to / from Big Endian
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   906   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   907   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   908   * \param bigEndian specifies to Permutate bytes to / from Big Endian
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   910   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   911  IFX_INLINE void IfxQspi_permutateBigEndian(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bigEndian);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   912  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   913  /** \brief Set the value of bit segment1 (A).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   914   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   915   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   916   * \param bitSegment1 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   918   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   919  IFX_INLINE void IfxQspi_setBitsegment1(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment1);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   920  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   921  /** \brief Set the value of bit segment2 (B).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   922   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   923   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   924   * \param bitSegment2 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   925   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   926   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   927  IFX_INLINE void IfxQspi_setBitsegment2(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment2);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   928  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   929  /** \brief Set the value of bit segment3 (C).
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   930   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   931   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   932   * \param bitSegment3 Length expressed in time quantums of ECONz.Q.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   933   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   934   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   935  IFX_INLINE void IfxQspi_setBitsegment3(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment3);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   936  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   937  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   938   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   939   * \param mode select the transfer fifo mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   940   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   941   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   942  IFX_INLINE void IfxQspi_setRxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   943  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   944  /** \brief Set the value of Time Quantum.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   945   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   946   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   947   * \param timeQuantum specifies the value of Time Quantum.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   948   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   949   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   950  IFX_INLINE void IfxQspi_setTimeQuantum(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 timeQuantum);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   951  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   952  /** \brief Set the transfer FIFO mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   953   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   954   * \param mode select the transfer fifo mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   956   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   957  IFX_INLINE void IfxQspi_setTxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   958  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   959  /** \brief Provides functionality for both setting of MRSTIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   960   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   961   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   962   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   963   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   964   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   965  IFX_INLINE void IfxQspi_initMrstInPinWithPadLevel(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   966  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   967  /** \brief Provides functionality for both setting of MTSRIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   968   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   969   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   970   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   972   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   973  IFX_INLINE void IfxQspi_initMtsrInPinWithPadLevel(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   974  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   975  /** \brief Provides functionality for both setting of SCLKIN pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   976   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   977   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   978   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   979   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   980   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   981  IFX_INLINE void IfxQspi_initSclkInPinWithPadLevel(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   982  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   983  /** \brief Provides functionality for both setting of SLSI pin direction as input and configuring pad driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   984   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   985   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   986   * \param padDriver Pad Driver
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   987   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   988   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   989  IFX_INLINE void IfxQspi_initSlsiWithPadLevel(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   990  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   991  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   992  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   993  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   994  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   995  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   996  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   997      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   998  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   999  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1000  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1001  IFX_INLINE void IfxQspi_clearMoveCounterInterruptAfterLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1003      qspi->MCCON.B.IALC = clearInterrupt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1005  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1006  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1007  IFX_INLINE void IfxQspi_clearMoveCounterInterruptBeforeLastFlag(Ifx_QSPI *qspi, boolean clearInterrupt)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1009      qspi->MCCON.B.IBLC = clearInterrupt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1010  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1011  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1012  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1013  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1014  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1015      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1016  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1017  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1018  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1019  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1020  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1021      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1022  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1023  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1024  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1025  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1026  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1027      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1028  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1029  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1030  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1031  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1032  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1033      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1034  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1035  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1036  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1037  IFX_INLINE void IfxQspi_configureCapcon(Ifx_QSPI *qspi, IfxQspi_CaptureControlInputSelection inputSel, IfxQspi_CaptureControlEdgeConfiguration edgeConfiguration)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1038  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1039      qspi->CAPCON.B.INS     = inputSel;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1040      qspi->CAPCON.B.EDGECON = edgeConfiguration;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1041      qspi->CAPCON.B.CAPSEL  = 1;     // capture-irq on HC-irq
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1042      qspi->CAPCON.B.CAPC    = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1043  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1044  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1045  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1046  IFX_INLINE void IfxQspi_enableCapconInterrupt(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1047  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1048      qspi->CAPCON.B.EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1049  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1050  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1051  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1052  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1053  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1054      IFX_UNUSED_PARAMETER(enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1055  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1056      qspi->GLOBALCON.B.LB = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1057  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1058  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1059  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1060  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1061  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1062      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1063  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1064  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1065  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1066  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1067  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1068      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1069  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1070  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1071  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1072  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1073  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1074      qspi->GLOBALCON1.B.USREN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1075  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1076  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1077  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1078  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1079  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1080      return qspi->STATUS.B.ERRORFLAGS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1081  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1082  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1083  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1084  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1085  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1086      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1087      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1088  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1089  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1090  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1091  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1092  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1093      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1094  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1095  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1096  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1097  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1098  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1099      IFX_UNUSED_PARAMETER(qspi->CLC.U != 0);
	ld.w	d15,[a4]
.L318:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1100  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	  1101      return IfxScuCcu_getQspiFrequency();
	call	IfxScuCcu_getQspiFrequency
.L319:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   213      float  fQspiIn  = IfxQspi_getModuleFrequency(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   214      bestError = 10e6;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   215      uint32 i, bestPre = 0;
	mov	d1,#0
	ld.w	d0,.3.cnt
.L406:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   216  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   217      for (i = 0; i < 8; i++)
	mov	d3,d1
	mov.a	a15,#7
.L24:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   218      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   219          float tempHalfBaud = fQspiIn / (1U << (4 * i));
	mov	d15,#1
.L587:
	sh	d4,d3,#2
.L588:
	sh	d15,d15,d4
	utof	d15,d15
.L589:
	div.f	d15,d2,d15
.L407:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   220          error = __absf(tempHalfBaud - halfBaud);
	sub.f	d15,d15,d8
.L408:
	insert	d4,d15,#0,#31,#1
.L409:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   221  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   222          if (__leqf(error, bestError))
	cmp.f	d15,d4,d0
.L410:
	jnz.t	d15:2,.L25
.L590:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   223          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   224              bestError = error;
	mov	e0,d3,d4
.L25:
	add	d3,#1
	loop	a15,.L24
.L411:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   225              bestPre   = i;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   226          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   227      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   228  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   229      return bestPre;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   230  }
	mov	d2,d1
	ret
.L313:
	
__IfxQspi_calculatePrescaler_function_end:
	.size	IfxQspi_calculatePrescaler,__IfxQspi_calculatePrescaler_function_end-IfxQspi_calculatePrescaler
.L164:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateTimeQuantumLength',code,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.text.IfxQspi.IfxQspi_calculateTimeQuantumLength'
	.align	2
	
	.global	IfxQspi_calculateTimeQuantumLength

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   231  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   232  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   233  uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate)
; Function IfxQspi_calculateTimeQuantumLength
.L79:
IfxQspi_calculateTimeQuantumLength:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   234  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   235  #define ABCQMIN (4)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   236  #define ABCQMAX (8 * 63)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   237  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   238      IFX_UNUSED_PARAMETER(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   239  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   240      uint32 abcq  = ABCQMIN, tq, bestTq;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   241      float  realTQ, deltaMax, bestDelta, achievedMax;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   242      float  fQspi = IfxScuCcu_getQspiFrequency();
	mov	d8,d4
	call	IfxScuCcu_getQspiFrequency
.L327:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   243  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   244      if (__leqf(maxBaudrate, 0.0))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   245      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   246          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, FALSE); /* Max baud rate is 0!! */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   247      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   248  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   249      realTQ    = fQspi / (4.0 * maxBaudrate);
	movh	d15,#16512
.L595:
	mul.f	d15,d8,d15
.L596:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   250      bestTq    = __max((uint32)__roundf(realTQ), 1);
	movh	d3,#16128
.L597:
	div.f	d0,d2,d15
.L412:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   251      bestDelta = __absf(maxBaudrate - (fQspi / bestTq));
	mov	d4,#0
.L598:
	ftoiz	d15,d0
	itof	d1,d15
	sub.f	d0,d0,d1
.L413:
	cmp.f	d0,d0,d3
	extr.u	d0,d0,#2,#1
	add	d15,d0
.L599:
	max	d1,d15,#1
.L414:
	utof	d15,d1
	div.f	d15,d2,d15
	sub.f	d6,d8,d15
.L416:
	cmp.f	d15,d6,d4
	jz.t	d15:0,.L28
	insn.t	d6,d6:31,d6:31
.L28:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   252  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   253      for (abcq = ABCQMIN; abcq <= ABCQMAX; abcq++)
	mov	d7,#4
	lea	a15,500
.L29:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   254      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   255          realTQ      = fQspi / (maxBaudrate * abcq);
	utof	d15,d7
.L600:
	mul.f	d15,d8,d15
.L601:
	div.f	d15,d2,d15
.L417:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   256          tq          = (uint32)(realTQ + 0.5);
	add.f	d15,d15,d3
.L418:
	ftouz	d0,d15
.L419:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   257          achievedMax = fQspi / (tq * abcq);
	mul	d15,d0,d7
	utof	d15,d15
.L602:
	div.f	d15,d2,d15
.L420:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   258          deltaMax    = __absf(maxBaudrate - achievedMax);
	sub.f	d5,d8,d15
	cmp.f	d15,d5,d4
.L421:
	jz.t	d15:0,.L31
	insn.t	d5,d5:31,d5:31
.L31:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   259  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   260          if (__leqf(deltaMax, bestDelta) && (tq >= 1))
	cmp.f	d15,d5,d6
	jnz.t	d15:2,.L32
.L603:
	jeq	d0,#0,.L33
.L604:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   261          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   262              bestDelta = deltaMax;
	mov	d6,d5
.L605:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   263              bestTq    = tq;
	mov	d1,d0
.L33:
.L32:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   264          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   265  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   266          if ((bestDelta == 0) || (tq < 1))
	extr.u	d15,d6,#23,#8
	jeq	d15,#0,.L34
.L606:
	jeq	d0,#0,.L35
.L607:
	add	d7,#1
	loop	a15,.L29

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   267          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   268              break; //exit the for loop
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   269          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   270      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   271  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   272      return __max(bestTq - 1, 0);
.L35:
.L34:
	add	d1,#-1
.L415:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   273  }
	max	d2,d1,#0
	ret
.L324:
	
__IfxQspi_calculateTimeQuantumLength_function_end:
	.size	IfxQspi_calculateTimeQuantumLength,__IfxQspi_calculateTimeQuantumLength_function_end-IfxQspi_calculateTimeQuantumLength
.L169:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_getAddress',code,cluster('IfxQspi_getAddress')
	.sect	'.text.IfxQspi.IfxQspi_getAddress'
	.align	2
	
	.global	IfxQspi_getAddress

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   274  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   275  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   276  Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi)
; Function IfxQspi_getAddress
.L81:
IfxQspi_getAddress:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   277  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   278      Ifx_QSPI *module;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   279  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   280      if (qspi < IFXQSPI_NUM_MODULES)
	jge	d4,#6,.L37
.L612:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   281      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   282          module = (Ifx_QSPI *)IfxQspi_cfg_indexMap[qspi].module;
	movh.a	a15,#@his(IfxQspi_cfg_indexMap)
	lea	a15,[a15]@los(IfxQspi_cfg_indexMap)
.L613:
	addsc.a	a15,a15,d4,#3
.L614:
	ld.a	a2,[a15]
.L422:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   283      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   284      else
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   285      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   286          module = NULL_PTR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   287      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   288  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   289      return module;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   290  }
	ret
.L37:
	mov.a	a2,#0
.L423:
	ret
.L335:
	
__IfxQspi_getAddress_function_end:
	.size	IfxQspi_getAddress,__IfxQspi_getAddress_function_end-IfxQspi_getAddress
.L174:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_getIndex',code,cluster('IfxQspi_getIndex')
	.sect	'.text.IfxQspi.IfxQspi_getIndex'
	.align	2
	
	.global	IfxQspi_getIndex

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   291  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   292  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   293  IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi)
; Function IfxQspi_getIndex
.L83:
IfxQspi_getIndex:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   294  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   295      uint32        index;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   296      IfxQspi_Index result;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   297  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   298      result = IfxQspi_Index_none;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   299  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   300      for (index = 0; index < IFXQSPI_NUM_MODULES; index++)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   301      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   302          if (IfxQspi_cfg_indexMap[index].module == qspi)
	mov	d2,#-1
	movh.a	a15,#@his(IfxQspi_cfg_indexMap)
.L424:
	lea	a15,[a15]@los(IfxQspi_cfg_indexMap)
.L619:
	mov.a	a2,#5
.L40:
	ld.a	a5,[a15]
.L620:
	jne.a	a5,a4,.L41
.L621:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   303          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   304              result = (IfxQspi_Index)IfxQspi_cfg_indexMap[index].index;
	ld.w	d15,[a15]4
.L622:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   305              break;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   306          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   307      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   308  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   309      return result;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   310  }
	extr	d2,d15,#0,#8
	ret
.L41:
	lea	a15,[a15]8
	loop	a2,.L40
.L623:
	ret
.L339:
	
__IfxQspi_getIndex_function_end:
	.size	IfxQspi_getIndex,__IfxQspi_getIndex_function_end-IfxQspi_getIndex
.L179:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_read16',code,cluster('IfxQspi_read16')
	.sect	'.text.IfxQspi.IfxQspi_read16'
	.align	2
	
	.global	IfxQspi_read16

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   311  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   312  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   313  void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count)
; Function IfxQspi_read16
.L85:
IfxQspi_read16:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   314  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   315      volatile Ifx_QSPI_RXEXIT *rxFifo = &qspi->RXEXIT;
	lea	a15,[a4]144
.L425:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   316  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   317      while (count > 0)
	j	.L44
.L45:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   318      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   319          *(data++) = (uint16)rxFifo->U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   320          count--;
	add	d4,#-1
	ld.w	d15,[a15]
.L462:
	st.h	[a5+],d15
.L44:
	jge	d4,#1,.L45
.L463:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   321      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   322  }
	ret
.L200:
	
__IfxQspi_read16_function_end:
	.size	IfxQspi_read16,__IfxQspi_read16_function_end-IfxQspi_read16
.L114:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_read32',code,cluster('IfxQspi_read32')
	.sect	'.text.IfxQspi.IfxQspi_read32'
	.align	2
	
	.global	IfxQspi_read32

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   323  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   324  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   325  void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count)
; Function IfxQspi_read32
.L87:
IfxQspi_read32:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   326  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   327      volatile Ifx_QSPI_RXEXIT *rxFifo = &qspi->RXEXIT;
	lea	a15,[a4]144
.L426:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   328  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   329      while (count > 0)
	j	.L46
.L47:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   330      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   331          *(data++) = rxFifo->U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   332          count--;
	add	d4,#-1
	ld.w	d15,[a15]
.L468:
	st.w	[a5+],d15
.L46:
	jge	d4,#1,.L47
.L469:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   333      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   334  }
	ret
.L209:
	
__IfxQspi_read32_function_end:
	.size	IfxQspi_read32,__IfxQspi_read32_function_end-IfxQspi_read32
.L119:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_read8',code,cluster('IfxQspi_read8')
	.sect	'.text.IfxQspi.IfxQspi_read8'
	.align	2
	
	.global	IfxQspi_read8

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   335  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   336  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   337  void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count)
; Function IfxQspi_read8
.L89:
IfxQspi_read8:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   338  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   339      volatile Ifx_QSPI_RXEXIT *rxFifo = &qspi->RXEXIT;
	lea	a15,[a4]144
.L427:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   340  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   341      while (count > 0)
	j	.L48
.L49:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   342      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   343          *(data++) = (uint8)rxFifo->U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   344          count--;
	add	d4,#-1
	ld.w	d15,[a15]
.L474:
	st.b	[a5+],d15
.L48:
	jge	d4,#1,.L49
.L475:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   345      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   346  }
	ret
.L215:
	
__IfxQspi_read8_function_end:
	.size	IfxQspi_read8,__IfxQspi_read8_function_end-IfxQspi_read8
.L124:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_recalcBasicConfiguration',code,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.text.IfxQspi.IfxQspi_recalcBasicConfiguration'
	.align	2
	
	.global	IfxQspi_recalcBasicConfiguration

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   347  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   348  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   349  uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData)
; Function IfxQspi_recalcBasicConfiguration
.L91:
IfxQspi_recalcBasicConfiguration:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   350  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   351      Ifx_QSPI_BACON bacon;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   352      bacon.U = oldBACON;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   353  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   354      if (shortData == FALSE)
	jne	d6,#0,.L50
.L628:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   355      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   356          bacon.B.DL   = numOfData;
	insert	d4,d4,d5,#23,#5
.L629:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   357          bacon.B.BYTE = 1;
	insert	d4,d4,#1,#22,#1
.L50:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   358      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   359  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   360      bacon.B.LAST = lastData;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   361      return bacon.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   362  }
	insert	d2,d4,d7,#0,#1
	ret
.L343:
	
__IfxQspi_recalcBasicConfiguration_function_end:
	.size	IfxQspi_recalcBasicConfiguration,__IfxQspi_recalcBasicConfiguration_function_end-IfxQspi_recalcBasicConfiguration
.L184:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_resetModule',code,cluster('IfxQspi_resetModule')
	.sect	'.text.IfxQspi.IfxQspi_resetModule'
	.align	2
	
	.global	IfxQspi_resetModule

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   363  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   364  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   365  void IfxQspi_resetModule(Ifx_QSPI *qspi)
; Function IfxQspi_resetModule
.L93:
IfxQspi_resetModule:	.type	func
	mov.aa	a15,a4
.L429:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   366  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   367      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L428:
	mov	d8,d2
.L431:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   368      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L430:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   369      qspi->KRST0.B.RST = 1;          /* Only if both Kernel reset bits are set a reset is executed */
	ld.bu	d15,[a15]244
.L480:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   370      qspi->KRST1.B.RST = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   371      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
.L432:
	or	d15,#1
	st.b	[a15]244,d15
.L481:
	ld.bu	d15,[a15]240
.L482:
	or	d15,#1
	st.b	[a15]240,d15
.L483:
	call	IfxScuWdt_setCpuEndinit

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   372  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   373      while (0 == qspi->KRST0.B.RSTSTAT)  /* Wait until reset is executed */
.L52:
	ld.bu	d15,[a15]244
.L484:
	jz.t	d15:1,.L52
.L485:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   374  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   375      {}
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   376  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   377      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L486:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   378      qspi->KRSTCLR.B.CLR = 1;            /* Clear Kernel reset status bit */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   379      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
	ld.bu	d15,[a15]236
.L433:
	or	d15,#1
	st.b	[a15]236,d15
.L487:
	j	IfxScuWdt_setCpuEndinit
.L221:
	
__IfxQspi_resetModule_function_end:
	.size	IfxQspi_resetModule,__IfxQspi_resetModule_function_end-IfxQspi_resetModule
.L129:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_setSlaveSelectOutputControl',code,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.text.IfxQspi.IfxQspi_setSlaveSelectOutputControl'
	.align	2
	
	.global	IfxQspi_setSlaveSelectOutputControl

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   380  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   381  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   382  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   383  void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel)
; Function IfxQspi_setSlaveSelectOutputControl
.L95:
IfxQspi_setSlaveSelectOutputControl:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   384  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   385      uint16        mask = 1 << channelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   386  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   387      Ifx_QSPI_SSOC ssoc;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   388      ssoc.U = qspi->SSOC.U;
	mov	d15,#1
	ld.w	d1,[a4]72
.L434:
	sha	d15,d15,d4
	extr.u	d15,d15,#0,#16
.L435:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   389  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   390      if (outputEnable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   391      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   392          ssoc.B.OEN |= mask;
	extr.u	d0,d1,#16,#16
.L634:
	jeq	d5,#0,.L53
.L635:
	or	d0,d15
	j	.L54
.L53:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   393      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   394      else
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   395      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   396          ssoc.B.OEN &= ~mask;
	mov.u	d2,#65535
	xor	d2,d15
.L636:
	and	d0,d2
.L54:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   397      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   398  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   399      if (activeLevel)
	insert	d1,d1,d0,#16,#16
.L637:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   400      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   401          ssoc.B.AOL |= mask;
	extr.u	d0,d1,#0,#16
.L638:
	jeq	d6,#0,.L55
.L639:
	or	d0,d15
	j	.L56
.L55:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   402      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   403      else
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   404      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   405          ssoc.B.AOL &= ~mask;
	mov.u	d2,#65535
	xor	d15,d2
.L436:
	and	d0,d15
.L56:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   406      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   407  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   408      qspi->SSOC.U = ssoc.U;
	insert	d1,d1,d0,#0,#16
	st.w	[a4]72,d1
.L640:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   409  }
	ret
.L350:
	
__IfxQspi_setSlaveSelectOutputControl_function_end:
	.size	IfxQspi_setSlaveSelectOutputControl,__IfxQspi_setSlaveSelectOutputControl_function_end-IfxQspi_setSlaveSelectOutputControl
.L189:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_write16',code,cluster('IfxQspi_write16')
	.sect	'.text.IfxQspi.IfxQspi_write16'
	.align	2
	
	.global	IfxQspi_write16

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   410  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   411  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   412  void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count)
; Function IfxQspi_write16
.L97:
IfxQspi_write16:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   413  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   414      int                          cs        = channelId % 8;
	fcall	.cocofun_4
.L438:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   415      volatile Ifx_QSPI_DATAENTRY *dataEntry = &qspi->DATAENTRY[cs];
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   416  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   417      while (count > 0)
	j	.L57
.L58:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   418      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   419          dataEntry->U = *(data++);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   420          count--;
	add	d5,#-1
	ld.hu	d15,[a5+]2
.L492:
	st.w	[a15],d15
.L57:
	jge	d5,#1,.L58
.L493:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   421      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   422  }
	ret
.L225:
	
__IfxQspi_write16_function_end:
	.size	IfxQspi_write16,__IfxQspi_write16_function_end-IfxQspi_write16
.L134:
	; End of function
	
	.sdecl	'.text.IfxQspi..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.IfxQspi..cocofun_4'
	.align	2
; Function .cocofun_4
.L99:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	and	d15,d4,#7
.L437:
	addsc.a	a15,a4,d15,#2
	lea	a15,[a15]100
.L439:
	fret
.L199:
	; End of function
	.sdecl	'.text.IfxQspi.IfxQspi_write32',code,cluster('IfxQspi_write32')
	.sect	'.text.IfxQspi.IfxQspi_write32'
	.align	2
	
	.global	IfxQspi_write32

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   423  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   424  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   425  void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count)
; Function IfxQspi_write32
.L101:
IfxQspi_write32:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   426  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   427      int                          cs        = channelId % 8;
	fcall	.cocofun_4
.L440:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   428      volatile Ifx_QSPI_DATAENTRY *dataEntry = &qspi->DATAENTRY[cs];
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   429  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   430      while (count > 0)
	j	.L59
.L60:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   431      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   432          dataEntry->U = *(data++);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   433          count--;
	add	d5,#-1
	ld.w	d15,[a5+]
.L498:
	st.w	[a15],d15
.L59:
	jge	d5,#1,.L60
.L499:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   434      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   435  }
	ret
.L236:
	
__IfxQspi_write32_function_end:
	.size	IfxQspi_write32,__IfxQspi_write32_function_end-IfxQspi_write32
.L139:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_write8',code,cluster('IfxQspi_write8')
	.sect	'.text.IfxQspi.IfxQspi_write8'
	.align	2
	
	.global	IfxQspi_write8

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   436  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   437  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   438  void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count)
; Function IfxQspi_write8
.L103:
IfxQspi_write8:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   439  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   440      int                          cs        = channelId % 8;
	fcall	.cocofun_4
.L441:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   441      volatile Ifx_QSPI_DATAENTRY *dataEntry = &qspi->DATAENTRY[cs];
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   442  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   443      while (count > 0)
	j	.L61
.L62:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   444      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   445          dataEntry->U = *(data++);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   446          count--;
	add	d5,#-1
	ld.bu	d15,[a5+]
.L504:
	st.w	[a15],d15
.L61:
	jge	d5,#1,.L62
.L505:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   447      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   448  }
	ret
.L243:
	
__IfxQspi_write8_function_end:
	.size	IfxQspi_write8,__IfxQspi_write8_function_end-IfxQspi_write8
.L144:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateDelayConstants',code,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.text.IfxQspi.IfxQspi_calculateDelayConstants'
	.align	2
	
	.global	IfxQspi_calculateDelayConstants

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   449  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   450  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   451  void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst)
; Function IfxQspi_calculateDelayConstants
.L105:
IfxQspi_calculateDelayConstants:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   452  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   453      uint32                            divFactor;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   454      const SpiIf_SlsoTiming_HalfTsclk *dlyFactorPtr;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   455      float32                           scaleTemp;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   456      uint8                             preTemp;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   457      uint8                             preFinal   = 0U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   458      uint8                             delayTemp;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   459      uint8                             delayFinal = 0U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   460      boolean                           matchFound;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   461      uint8                             index;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   462      uint8                             cs = channelId % 8;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   463  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   464      /* obtain the peripheral frequency / sclk frequency multiplication factor */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   465      divFactor = (qspi->GLOBALCON.B.TQ + 1) * (qspi->ECON[cs].B.Q + 1) * (qspi->ECON[cs].B.A + 1 + qspi->ECON[cs].B.B + qspi->ECON[cs].B.C);
	and	d15,d4,#7
	ld.bu	d0,[a4]16
.L442:
	addsc.a	a15,a4,d15,#2
.L645:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   466  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   467      /* The user defined delay factor is here - point to it */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   468      dlyFactorPtr = &(chMode->csInactiveDelay);
	add	d0,#1
	add.a	a5,#2
.L646:
	ld.bu	d15,[+a15]32
.L443:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   469  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   470      for (index = 0; index < 3; index++)
	mov	d8,#0
	mov.aa	a12,a5
.L444:
	and	d15,#63
	mov.a	a13,#2
.L647:
	add	d1,d15,#1
	ld.bu	d15,[a15]
.L648:
	mul	d0,d1
.L649:
	extr.u	d1,d15,#6,#2
	ld.bu	d15,[+a15]1
.L650:
	mov	d9,d8
.L445:
	and	d15,#3
.L651:
	add	d1,d15
	ld.bu	d15,[a15]
.L652:
	mov.aa	a15,a6
.L653:
	extr.u	d15,d15,#2,#2
.L654:
	add	d1,d15
.L655:
	add	d1,#1
.L656:
	mul	d10,d0,d1
.L63:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   471      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   472          /* multiply the div_factor and delay_factor and divide by 2 - this is product of (4^pre)*(delay_mult) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   473          scaleTemp = (dlyFactorPtr[index] * divFactor) / (float32)2.0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   474  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   475          /* loop through the possible pre values to find pre and delay */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   476          matchFound = FALSE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   477  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   478          for (preTemp = 0; preTemp < 8; preTemp++)
	movh	d1,#16128
	mov.a	a14,#7
.L657:
	ld.w	d15,[a12+]
.L658:
	mov	d12,#0
.L446:
	mul	d15,d10
.L659:
	mov	d13,d12
.L447:
	utof	d15,d15
	mul.f	d11,d15,d1
.L64:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   479          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   480              delayTemp = (uint8)((scaleTemp / (1 << (2 * preTemp))) + 0.5); /* divide the scale_temp by ( 4 ^ pre_temp) to find delay_temp */
	sha	d15,d13,#1
.L660:
	mov	d1,#1
.L661:
	sha	d1,d1,d15
	itof	d0,d1
.L662:
	div.f	d0,d11,d0
.L663:
	movh	d1,#16128
.L664:
	add.f	d4,d0,d1
	call	__f_ftouc
.L448:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   481  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   482              if (delayTemp <= 8)                                            /* if delay_temp is <= 8; we can get a good value pair */
	jge.u	d2,#9,.L65
.L665:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   483              {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   484                  if ((float32)(delayTemp << (2 * preTemp)) >= scaleTemp)    /* greater delays are tolerated. less is not */
	sha	d15,d2,d15
.L449:
	itof	d15,d15
.L666:
	cmp.f	d15,d15,d11
	and	d15,#6
.L667:
	jne	d15,#0,.L66
.L450:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   485                  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   486                      delayFinal = __max(delayTemp - 1, 0);                  /* subtract 1 to set to register */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   487                      preFinal   = preTemp;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   488                      matchFound = TRUE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   489                      break;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   490                  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   491                  else if (delayTemp < (uint8)8)            /* delay is less than 8 - add 1 and finalize parameters */
	jge.u	d2,#8,.L67
.L668:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   492                  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   493                      delayTemp += 1;
	add	d2,#1

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   494                      delayFinal = __max(delayTemp - 1, 0); /* subtract 1 to set to register */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   495                      preFinal   = preTemp;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   496                      matchFound = TRUE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   497                      break;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   498                  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   499                  else
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   500                  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   501                      /* do nothing - proceed to next pre_temp value */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   502                  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   503              }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   504          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   505  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   506          if (matchFound == FALSE)
.L66:
	add	d2,#-1
.L669:
	max	d15,d2,#0
	extr.u	d9,d15,#0,#8
.L670:
	mov	d8,d13
.L671:
	mov	d12,#1
	j	.L68
.L67:
.L65:
	add	d13,#1
	loop	a14,.L64
.L68:
	jne	d12,#0,.L69
.L672:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   507          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   508              /* max limit reached. set max values for pre and delay and exit */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   509              delayFinal = 7;
	mov	d9,#7
.L673:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   510              preFinal   = 7;
	mov	d8,d9
.L69:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   511          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   512  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   513          /* write back to delay const structure before looping to next factor */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   514          delayConst[index].delay = delayFinal;
	st.b	[a15]1,d9
.L674:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   515          delayConst[index].pre   = preFinal;
	st.b	[a15+]2,d8
	loop	a13,.L63
.L675:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   516      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   517  }
	ret
.L358:
	
__IfxQspi_calculateDelayConstants_function_end:
	.size	IfxQspi_calculateDelayConstants,__IfxQspi_calculateDelayConstants_function_end-IfxQspi_calculateDelayConstants
.L194:
	; End of function
	
	.calls	'IfxQspi_calculateDelayConstants','__f_ftouc'
	.calls	'IfxQspi_calcRealBaudrate','IfxScuCcu_getQspiFrequency'
	.calls	'IfxQspi_calculateBasicConfigurationValue','IfxQspi_calculateDelayConstants'
	.calls	'IfxQspi_calculateExtendedConfigurationValue','IfxScuCcu_getQspiFrequency'
	.calls	'IfxQspi_calculatePrescaler','IfxScuCcu_getQspiFrequency'
	.calls	'IfxQspi_calculateTimeQuantumLength','IfxScuCcu_getQspiFrequency'
	.calls	'IfxQspi_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxQspi_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxQspi_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxQspi_write16','.cocofun_4'
	.calls	'IfxQspi_write32','.cocofun_4'
	.calls	'IfxQspi_write8','.cocofun_4'
	.calls	'IfxQspi_calcRealBaudrate','',32
	.calls	'IfxQspi_calculateBasicConfigurationValue','',8
	.calls	'IfxQspi_calculateExtendedConfigurationValue','',0
	.calls	'IfxQspi_calculatePrescaler','',0
	.calls	'IfxQspi_calculateTimeQuantumLength','',0
	.calls	'IfxQspi_getAddress','',0
	.calls	'IfxQspi_getIndex','',0
	.calls	'IfxQspi_read16','',0
	.calls	'IfxQspi_read32','',0
	.calls	'IfxQspi_read8','',0
	.calls	'IfxQspi_recalcBasicConfiguration','',0
	.calls	'IfxQspi_resetModule','',0
	.calls	'IfxQspi_setSlaveSelectOutputControl','',0
	.calls	'IfxQspi_write16','',0
	.calls	'.cocofun_4','',0
	.calls	'IfxQspi_write32','',0
	.calls	'IfxQspi_write8','',0
	.extern	IfxQspi_cfg_indexMap
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuCcu_getQspiFrequency
	.extern	__f_ftouc
	.calls	'IfxQspi_calculateDelayConstants','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L107:
	.word	109683
	.half	3
	.word	.L108
	.byte	4
.L106:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L109
	.byte	2,1,1,3
	.word	166
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	169
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L250:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	214
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	226
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,169,2,17,1,1,6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	338
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	312
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	344
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	344
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	312
	.byte	6,0,7
	.byte	'unsigned int',0,4,7
.L232:
	.byte	7
	.byte	'int',0,4,5
.L346:
	.byte	7
	.byte	'unsigned char',0,1,8,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,68,16,4,11
	.byte	'SRPN',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	453
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	453
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	453
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	453
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	453
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,4,93,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	470
	.byte	4,2,35,0,0,14
	.word	760
	.byte	3
	.word	799
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,247,1,17,1,1,5
	.byte	'src',0,3,247,1,60
	.word	804
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	852
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	852
	.byte	16,0,2,35,0,0,12,6,189,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	868
	.byte	4,2,35,0,0
.L223:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	453
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,6,197,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1026
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,135,10,16,4,11
	.byte	'AE',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	453
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,6,205,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1292
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,6,136,17,25,12,13
	.byte	'CON0',0
	.word	964
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	1252
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1483
	.byte	4,2,35,8,0,14
	.word	1523
	.byte	3
	.word	1586
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,164,4,17,1,1,5
	.byte	'watchdog',0,5,164,4,65
	.word	1591
	.byte	5
	.byte	'password',0,5,164,4,82
	.word	1004
	.byte	6,0,4
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,5,197,4,17,1,1,5
	.byte	'password',0,5,197,4,59
	.word	1004
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,144,5,17,1,1,5
	.byte	'watchdog',0,5,144,5,63
	.word	1591
	.byte	5
	.byte	'password',0,5,144,5,80
	.word	1004
	.byte	6,0,4
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,5,177,5,17,1,1,5
	.byte	'password',0,5,177,5,57
	.word	1004
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,220,4,19
	.word	1004
	.byte	1,1,5
	.byte	'watchdog',0,5,220,4,74
	.word	1591
	.byte	6,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,5,129,5,19
	.word	1004
	.byte	1,1,6,0,15,8,161,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_2',0,2,16
	.byte	'IfxCpu_ResourceCpu_3',0,3,16
	.byte	'IfxCpu_ResourceCpu_4',0,4,16
	.byte	'IfxCpu_ResourceCpu_5',0,5,16
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,7,235,6,31
	.word	2001
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,233,5,20
	.word	453
	.byte	1,1,6,0
.L258:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,255,6,19
	.word	2248
	.byte	1,1,5
	.byte	'address',0,7,255,6,55
	.word	1004
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,156,7,20
	.word	453
	.byte	1,1,5
	.byte	'address',0,7,156,7,70
	.word	1004
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,138,9,17,1,1,5
	.byte	'address',0,7,138,9,56
	.word	2248
	.byte	5
	.byte	'count',0,7,138,9,72
	.word	2248
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,10,145,3,16,4,11
	.byte	'P0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,10,171,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2479
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,10,171,2,16,4,11
	.byte	'PS0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,10,251,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2795
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,10,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	453
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,10,155,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3366
	.byte	4,2,35,0,0,18,4
	.word	453
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,10,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	453
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	453
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	453
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	453
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	453
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	453
	.byte	5,0,2,35,3,0,12,10,171,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3495
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,10,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	453
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	453
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	453
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	453
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	453
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	453
	.byte	5,0,2,35,3,0,12,10,187,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3710
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,10,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	453
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	453
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	453
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	453
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	453
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	453
	.byte	5,0,2,35,3,0,12,10,195,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3925
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,10,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	453
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	453
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	453
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	453
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	453
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	453
	.byte	5,0,2,35,3,0,12,10,179,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4142
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,10,141,1,16,4,11
	.byte	'P0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,10,163,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4362
	.byte	4,2,35,0,0,18,24
	.word	453
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,10,212,3,16,4,11
	.byte	'PD0',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	453
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	453
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	453
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	453
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	453
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	453
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	453
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	453
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	453
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	453
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	453
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	453
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	453
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	453
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	453
	.byte	2,0,2,35,3,0,12,10,195,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4686
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,10,233,3,16,4,11
	.byte	'PD8',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	453
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	453
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	453
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	453
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	453
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	453
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	453
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	453
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	453
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	453
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	453
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	453
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	453
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	453
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	453
	.byte	2,0,2,35,3,0,12,10,203,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4990
	.byte	4,2,35,0,0,18,8
	.word	453
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,10,111,16,4,11
	.byte	'EN0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,10,147,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5315
	.byte	4,2,35,0,0,18,12
	.word	453
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,10,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,10,187,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5655
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,10,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,10,179,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6021
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,10,230,2,16,4,11
	.byte	'PS0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	430
	.byte	28,0,2,35,0,0,12,10,139,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6385
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,10,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	430
	.byte	24,0,2,35,0,0,12,10,155,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6532
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,10,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	430
	.byte	20,0,2,35,0,0,12,10,163,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6701
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,10,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	1004
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,10,147,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6873
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,10,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	1004
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1004
	.byte	12,0,2,35,2,0,12,10,219,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7048
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,10,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	453
	.byte	8,0,2,35,3,0,12,10,235,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7222
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,10,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	453
	.byte	4,0,2,35,3,0,12,10,243,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7396
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,10,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,10,227,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7572
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,10,208,2,16,4,11
	.byte	'PS0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,10,131,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7728
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,10,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	1004
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,10,211,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8061
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,10,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	453
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	453
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,10,203,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8409
	.byte	4,2,35,0,0,18,32
	.word	8689
	.byte	19,7,0,18,56
	.word	453
	.byte	19,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,10,105,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	32,0,2,35,0,0,12,10,139,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8747
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,10,68,16,4,11
	.byte	'EN0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,10,131,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8834
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,10,220,5,25,128,2,13
	.byte	'OUT',0
	.word	2755
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	3326
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	3446
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3486
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3670
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3885
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	4102
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	4322
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3486
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4637
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4677
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4950
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	5266
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	5306
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5606
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5646
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5981
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	6345
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	5306
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	6492
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6661
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6833
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	7008
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	7182
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	7356
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7532
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7688
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	8021
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	8369
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	5306
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	8729
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	8738
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	8794
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	9361
	.byte	4,3,35,252,1,0,14
	.word	9401
	.byte	3
	.word	9971
	.byte	15,9,81,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0,4
	.byte	'IfxPort_setPinModeInput',0,3,9,157,5,17,1,1,5
	.byte	'port',0,9,157,5,48
	.word	9976
	.byte	5
	.byte	'pinIndex',0,9,157,5,60
	.word	453
	.byte	5
	.byte	'mode',0,9,157,5,88
	.word	9981
	.byte	6,0,15,9,140,1,9,1,16
	.byte	'IfxPort_OutputMode_none',0,0,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,15,9,126,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,4
	.byte	'IfxPort_setPinModeOutput',0,3,9,163,5,17,1,1,5
	.byte	'port',0,9,163,5,49
	.word	9976
	.byte	5
	.byte	'pinIndex',0,9,163,5,61
	.word	453
	.byte	5
	.byte	'mode',0,9,163,5,90
	.word	10186
	.byte	5
	.byte	'index',0,9,163,5,114
	.word	10282
	.byte	6,0,15,9,187,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,9,169,5,17,1,1,5
	.byte	'port',0,9,169,5,44
	.word	9976
	.byte	5
	.byte	'pinIndex',0,9,169,5,56
	.word	453
	.byte	5
	.byte	'action',0,9,169,5,80
	.word	10595
	.byte	6,0,4
	.byte	'IfxScuCcu_wait',0,3,11,157,14,17,1,1,5
	.byte	'timeSec',0,11,157,14,40
	.word	226
	.byte	17,6,0,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,11,188,13,20
	.word	226
	.byte	1,1,6,0,10
	.byte	'_Ifx_QSPI_CLC_Bits',0,13,150,1,16,4,11
	.byte	'DISR',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	430
	.byte	28,0,2,35,0,0,12,13,169,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10860
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_PISEL_Bits',0,13,183,2,16,4,11
	.byte	'MRIS',0,1
	.word	453
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'SRIS',0,1
	.word	453
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'SCIS',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'SLSIS',0,1
	.word	453
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	430
	.byte	17,0,2,35,0,0,12,13,153,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11018
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_ID_Bits',0,13,236,1,16,4,11
	.byte	'MODREV',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	453
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,13,217,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11241
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_GLOBALCON_Bits',0,13,194,1,16,4,11
	.byte	'TQ',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'SI',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'EXPECT',0,1
	.word	453
	.byte	4,2,2,35,1,11
	.byte	'LB',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'DEL0',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'STROBE',0,1
	.word	453
	.byte	5,3,2,35,2,11
	.byte	'SRF',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'STIP',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'EN',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'MS',0,1
	.word	453
	.byte	2,5,2,35,3,11
	.byte	'AREN',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'RESETS',0,1
	.word	453
	.byte	2,0,2,35,3,0,12,13,201,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11364
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_GLOBALCON1_Bits',0,13,215,1,16,4,11
	.byte	'ERRORENS',0,2
	.word	1004
	.byte	9,7,2,35,0,11
	.byte	'TXEN',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'RXEN',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'PT1EN',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'PT2EN',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'USREN',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'TXFIFOINT',0,1
	.word	453
	.byte	2,6,2,35,2,11
	.byte	'RXFIFOINT',0,1
	.word	453
	.byte	2,4,2,35,2,11
	.byte	'PT1',0,1
	.word	453
	.byte	3,1,2,35,2,11
	.byte	'PT2',0,2
	.word	1004
	.byte	3,6,2,35,2,11
	.byte	'TXFM',0,1
	.word	453
	.byte	2,4,2,35,3,11
	.byte	'RXFM',0,1
	.word	453
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,13,209,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11709
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_BACON_Bits',0,13,111,16,4,11
	.byte	'LAST',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'IPRE',0,1
	.word	453
	.byte	3,4,2,35,0,11
	.byte	'IDLE',0,1
	.word	453
	.byte	3,1,2,35,0,11
	.byte	'LPRE',0,2
	.word	1004
	.byte	3,6,2,35,0,11
	.byte	'LEAD',0,1
	.word	453
	.byte	3,3,2,35,1,11
	.byte	'TPRE',0,1
	.word	453
	.byte	3,0,2,35,1,11
	.byte	'TRAIL',0,1
	.word	453
	.byte	3,5,2,35,2,11
	.byte	'PARTYP',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'UINT',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'MSB',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'BYTE',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'DL',0,2
	.word	1004
	.byte	5,4,2,35,2,11
	.byte	'CS',0,1
	.word	453
	.byte	4,0,2,35,3,0
.L268:
	.byte	12,13,145,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12081
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_ECON_Bits',0,13,166,1,16,4,11
	.byte	'Q',0,1
	.word	453
	.byte	6,2,2,35,0,11
	.byte	'A',0,1
	.word	453
	.byte	2,0,2,35,0,11
	.byte	'B',0,1
	.word	453
	.byte	2,6,2,35,1,11
	.byte	'C',0,1
	.word	453
	.byte	2,4,2,35,1,11
	.byte	'CPH',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'CPOL',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'PAREN',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	430
	.byte	15,2,2,35,0,11
	.byte	'BE',0,1
	.word	453
	.byte	2,0,2,35,3,0
.L279:
	.byte	12,13,185,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12354
	.byte	4,2,35,0,0
.L256:
	.byte	18,32
	.word	12518
	.byte	19,7,0,10
	.byte	'_Ifx_QSPI_STATUS_Bits',0,13,215,2,16,4,11
	.byte	'ERRORFLAGS',0,2
	.word	1004
	.byte	9,7,2,35,0,11
	.byte	'TXF',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'RXF',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'PT1F',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'PT2F',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'USRF',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'TXFIFOLEVEL',0,1
	.word	453
	.byte	3,5,2,35,2,11
	.byte	'RXFIFOLEVEL',0,1
	.word	453
	.byte	3,2,2,35,2,11
	.byte	'SLAVESEL',0,2
	.word	1004
	.byte	4,6,2,35,2,11
	.byte	'RPV',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'TPV',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'PHASE',0,1
	.word	453
	.byte	4,0,2,35,3,0,12,13,185,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12567
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_STATUS1_Bits',0,13,234,2,16,4,11
	.byte	'BITCOUNT',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	430
	.byte	20,4,2,35,0,11
	.byte	'BRDEN',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'BRD',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'SPDEN',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'SPD',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,13,193,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12895
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_SSOC_Bits',0,13,208,2,16,4,11
	.byte	'AOL',0,2
	.word	1004
	.byte	16,0,2,35,0,11
	.byte	'OEN',0,2
	.word	1004
	.byte	16,0,2,35,2,0
.L356:
	.byte	12,13,177,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13071
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_FLAGSCLEAR_Bits',0,13,180,1,16,4,11
	.byte	'ERRORCLEARS',0,2
	.word	1004
	.byte	9,7,2,35,0,11
	.byte	'TXC',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'RXC',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'PT1C',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'PT2C',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'USRC',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,13,193,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13168
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_XXLCON_Bits',0,13,245,2,16,4,11
	.byte	'XDL',0,2
	.word	1004
	.byte	16,0,2,35,0,11
	.byte	'BYTECOUNT',0,2
	.word	1004
	.byte	16,0,2,35,2,0,12,13,201,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13411
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_MIXENTRY_Bits',0,13,166,2,16,4,11
	.byte	'E',0,4
	.word	430
	.byte	32,0,2,35,0,0,12,13,137,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13516
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_BACONENTRY_Bits',0,13,129,1,16,4,11
	.byte	'E',0,4
	.word	430
	.byte	32,0,2,35,0,0,12,13,153,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13600
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_DATAENTRY_Bits',0,13,160,1,16,4,11
	.byte	'E',0,4
	.word	430
	.byte	32,0,2,35,0,0,12,13,177,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13686
	.byte	4,2,35,0,0,18,32
	.word	13731
	.byte	19,7,0,10
	.byte	'_Ifx_QSPI_RXEXIT_Bits',0,13,196,2,16,4,11
	.byte	'E',0,4
	.word	430
	.byte	32,0,2,35,0,0,12,13,161,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13780
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_RXEXITD_Bits',0,13,202,2,16,4,11
	.byte	'E',0,4
	.word	430
	.byte	32,0,2,35,0,0,12,13,169,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13862
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_CAPCON_Bits',0,13,135,1,16,4,11
	.byte	'CAP',0,2
	.word	1004
	.byte	15,1,2,35,0,11
	.byte	'OVF',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'EDGECON',0,1
	.word	453
	.byte	2,6,2,35,2,11
	.byte	'INS',0,1
	.word	453
	.byte	2,4,2,35,2,11
	.byte	'EN',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,2
	.word	1004
	.byte	7,4,2,35,2,11
	.byte	'CAPC',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'CAPS',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'CAPF',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'CAPSEL',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,13,161,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13945
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_MC_Bits',0,13,138,2,16,4,11
	.byte	'MCOUNT',0,2
	.word	1004
	.byte	13,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	453
	.byte	3,0,2,35,1,11
	.byte	'CURRENT',0,2
	.word	1004
	.byte	13,3,2,35,2,11
	.byte	'reserved_29',0,1
	.word	453
	.byte	3,0,2,35,3,0,12,13,249,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14181
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_MCCON_Bits',0,13,147,2,16,4,11
	.byte	'TPRE2',0,1
	.word	453
	.byte	3,5,2,35,0,11
	.byte	'TRAIL2',0,1
	.word	453
	.byte	3,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1004
	.byte	10,0,2,35,0,11
	.byte	'IBLEN',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'IBLF',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'IBLC',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'IBLS',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'IALEN',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'IALF',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'IALC',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'IALS',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	453
	.byte	6,2,2,35,3,11
	.byte	'T2EN',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'MCEN',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,13,129,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14329
	.byte	4,2,35,0,0,18,60
	.word	453
	.byte	19,59,0,10
	.byte	'_Ifx_QSPI_OCS_Bits',0,13,172,2,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	430
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	453
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	453
	.byte	2,0,2,35,3,0,12,13,145,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14648
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_KRSTCLR_Bits',0,13,131,2,16,4,11
	.byte	'CLR',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	430
	.byte	31,0,2,35,0,0,12,13,241,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14831
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_KRST1_Bits',0,13,252,1,16,4,11
	.byte	'RST',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	430
	.byte	31,0,2,35,0,0,12,13,233,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14938
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_KRST0_Bits',0,13,244,1,16,4,11
	.byte	'RST',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	430
	.byte	30,0,2,35,0,0,12,13,225,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15043
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_ACCEN1_Bits',0,13,105,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	32,0,2,35,0,0,12,13,137,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15167
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_ACCEN0_Bits',0,13,68,16,4,11
	.byte	'EN0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	453
	.byte	1,0,2,35,3,0,12,13,129,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15257
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI',0,13,218,4,25,128,2,13
	.byte	'CLC',0
	.word	10978
	.byte	4,2,35,0,13
	.byte	'PISEL',0
	.word	11201
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	11324
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3486
	.byte	4,2,35,12,13
	.byte	'GLOBALCON',0
	.word	11669
	.byte	4,2,35,16,13
	.byte	'GLOBALCON1',0
	.word	12041
	.byte	4,2,35,20,13
	.byte	'BACON',0
	.word	12314
	.byte	4,2,35,24,13
	.byte	'reserved_1C',0
	.word	3486
	.byte	4,2,35,28,13
	.byte	'ECON',0
	.word	12558
	.byte	32,2,35,32,13
	.byte	'STATUS',0
	.word	12855
	.byte	4,2,35,64,13
	.byte	'STATUS1',0
	.word	13031
	.byte	4,2,35,68,13
	.byte	'SSOC',0
	.word	13128
	.byte	4,2,35,72,13
	.byte	'reserved_4C',0
	.word	5306
	.byte	8,2,35,76,13
	.byte	'FLAGSCLEAR',0
	.word	13371
	.byte	4,2,35,84,13
	.byte	'XXLCON',0
	.word	13476
	.byte	4,2,35,88,13
	.byte	'MIXENTRY',0
	.word	13560
	.byte	4,2,35,92,13
	.byte	'BACONENTRY',0
	.word	13646
	.byte	4,2,35,96,13
	.byte	'DATAENTRY',0
	.word	13771
	.byte	32,2,35,100,13
	.byte	'reserved_84',0
	.word	5646
	.byte	12,3,35,132,1,13
	.byte	'RXEXIT',0
	.word	13822
	.byte	4,3,35,144,1,13
	.byte	'RXEXITD',0
	.word	13905
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	5306
	.byte	8,3,35,152,1,13
	.byte	'CAPCON',0
	.word	14141
	.byte	4,3,35,160,1,13
	.byte	'MC',0
	.word	14289
	.byte	4,3,35,164,1,13
	.byte	'MCCON',0
	.word	14599
	.byte	4,3,35,168,1,13
	.byte	'reserved_AC',0
	.word	14639
	.byte	60,3,35,172,1,13
	.byte	'OCS',0
	.word	14791
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	14898
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	15003
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	15127
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	15217
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	15787
	.byte	4,3,35,252,1,0,14
	.word	15827
.L201:
	.byte	3
	.word	16400
.L304:
	.byte	8
	.byte	'IfxQspi_getModuleFrequency',0,3,12,201,8,18
	.word	226
	.byte	1,1
.L306:
	.byte	5
	.byte	'qspi',0,12,201,8,55
	.word	16405
.L308:
	.byte	6,0,15,12,198,1,9,1,16
	.byte	'IfxQspi_Phase_wait',0,0,16
	.byte	'IfxQspi_Phase_idleA',0,1,16
	.byte	'IfxQspi_Phase_idleB',0,2,16
	.byte	'IfxQspi_Phase_lead',0,3,16
	.byte	'IfxQspi_Phase_data',0,4,16
	.byte	'IfxQspi_Phase_trail',0,5,16
	.byte	'IfxQspi_Phase_expect',0,6,16
	.byte	'IfxQspi_Phase_leadStrobe',0,7,16
	.byte	'IfxQspi_Phase_trailStrobe',0,8,0,8
	.byte	'IfxQspi_getPhase',0,3,12,209,8,26
	.word	16465
	.byte	1,1,5
	.byte	'qspi',0,12,209,8,53
	.word	16405
	.byte	6,0
.L294:
	.byte	8
	.byte	'IfxQspi_getTimeQuantaFrequency',0,3,12,234,8,18
	.word	226
	.byte	1,1
.L296:
	.byte	5
	.byte	'qspi',0,12,234,8,59
	.word	16405
.L298:
	.byte	17,6,0,0,20
	.word	446
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	16785
	.byte	0,14
	.word	430
	.byte	3
	.word	430
	.byte	23
	.byte	'__cmpswapw',0
	.word	16827
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	16832
	.byte	24
	.byte	'value',0
	.word	430
	.byte	24
	.byte	'compare',0
	.word	430
	.byte	0,23
	.byte	'__max',0
	.word	446
	.byte	1,1,1,1,22
	.word	446
	.byte	22
	.word	446
	.byte	0,25
	.word	174
	.byte	26
	.word	200
	.byte	6,0,25
	.word	235
	.byte	26
	.word	267
	.byte	6,0,25
	.word	280
	.byte	6,0,25
	.word	349
	.byte	26
	.word	368
	.byte	6,0,25
	.word	384
	.byte	26
	.word	399
	.byte	26
	.word	413
	.byte	6,0,25
	.word	809
	.byte	26
	.word	837
	.byte	6,0,25
	.word	1596
	.byte	26
	.word	1636
	.byte	26
	.word	1654
	.byte	6,0,25
	.word	1674
	.byte	26
	.word	1717
	.byte	6,0,25
	.word	1737
	.byte	26
	.word	1775
	.byte	26
	.word	1793
	.byte	6,0,25
	.word	1813
	.byte	26
	.word	1854
	.byte	6,0,27
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,237,1,17,1,1,1,1,5
	.byte	'password',0,5,237,1,50
	.word	1004
	.byte	0,27
	.byte	'IfxScuWdt_setCpuEndinit',0,5,157,2,17,1,1,1,1,5
	.byte	'password',0,5,157,2,48
	.word	1004
	.byte	0,25
	.word	1874
	.byte	26
	.word	1925
	.byte	6,0,25
	.word	1945
	.byte	6,0,28
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,215,3,19
	.word	1004
	.byte	1,1,1,1,25
	.word	2172
	.byte	6,0,25
	.word	2206
	.byte	6,0,25
	.word	2269
	.byte	26
	.word	2310
	.byte	6,0,25
	.word	2329
	.byte	26
	.word	2384
	.byte	6,0,25
	.word	2403
	.byte	26
	.word	2443
	.byte	26
	.word	2460
	.byte	17,6,0,0,25
	.word	10106
	.byte	26
	.word	10138
	.byte	26
	.word	10152
	.byte	26
	.word	10170
	.byte	6,0,25
	.word	10499
	.byte	26
	.word	10532
	.byte	26
	.word	10546
	.byte	26
	.word	10564
	.byte	26
	.word	10578
	.byte	6,0,25
	.word	10698
	.byte	26
	.word	10726
	.byte	26
	.word	10740
	.byte	26
	.word	10758
	.byte	6,0,25
	.word	10776
	.byte	26
	.word	10799
	.byte	17,29
	.word	10820
	.byte	30
	.word	10858
	.byte	0,6,0,0,25
	.word	10820
	.byte	6,0,28
	.byte	'IfxScuCcu_getQspiFrequency',0,11,131,7,20
	.word	226
	.byte	1,1,1,1
.L203:
	.byte	3
	.word	1004
.L205:
	.byte	7
	.byte	'short int',0,2,5,14
	.word	13822
.L207:
	.byte	3
	.word	17434
.L211:
	.byte	3
	.word	2248
.L217:
	.byte	3
	.word	453
.L227:
	.byte	15,12,114,9,1,16
	.byte	'IfxQspi_ChannelId_0',0,0,16
	.byte	'IfxQspi_ChannelId_1',0,1,16
	.byte	'IfxQspi_ChannelId_2',0,2,16
	.byte	'IfxQspi_ChannelId_3',0,3,16
	.byte	'IfxQspi_ChannelId_4',0,4,16
	.byte	'IfxQspi_ChannelId_5',0,5,16
	.byte	'IfxQspi_ChannelId_6',0,6,16
	.byte	'IfxQspi_ChannelId_7',0,7,16
	.byte	'IfxQspi_ChannelId_8',0,8,16
	.byte	'IfxQspi_ChannelId_9',0,9,16
	.byte	'IfxQspi_ChannelId_10',0,10,16
	.byte	'IfxQspi_ChannelId_11',0,11,16
	.byte	'IfxQspi_ChannelId_12',0,12,16
	.byte	'IfxQspi_ChannelId_13',0,13,16
	.byte	'IfxQspi_ChannelId_14',0,14,0,14
	.word	13731
.L234:
	.byte	3
	.word	17795
	.byte	25
	.word	16410
	.byte	26
	.word	16449
	.byte	6,0,25
	.word	16679
	.byte	26
	.word	16708
	.byte	6,0,25
	.word	16724
	.byte	26
	.word	16767
	.byte	17,29
	.word	16410
	.byte	26
	.word	16449
	.byte	30
	.word	16463
	.byte	0,6,0,0
.L261:
	.byte	20
	.word	17454
	.byte	31,14,186,1,9,16,11
	.byte	'enabled',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'autoCS',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'loopback',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'clockPolarity',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'shiftClock',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'dataHeading',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'dataWidth',0,2
	.word	1004
	.byte	6,4,2,35,0,11
	.byte	'csActiveLevel',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'parityCheck',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'parityMode',0,1
	.word	453
	.byte	1,1,2,35,1,13
	.byte	'csInactiveDelay',0
	.word	2248
	.byte	4,2,35,2,13
	.byte	'csLeadDelay',0
	.word	2248
	.byte	4,2,35,6,13
	.byte	'csTrailDelay',0
	.word	2248
	.byte	4,2,35,10,0,20
	.word	17864
.L263:
	.byte	3
	.word	18157
.L265:
	.byte	20
	.word	226
	.byte	31,12,201,2,9,2,13
	.byte	'pre',0
	.word	453
	.byte	1,2,35,0,13
	.byte	'delay',0
	.word	453
	.byte	1,2,35,1,0
.L270:
	.byte	18,6
	.word	18172
	.byte	19,2,0
.L274:
	.byte	20
	.word	453
	.byte	32
	.byte	'pvoid',0,15,54,28
	.word	344
	.byte	31,14,115,18,1,11
	.byte	'onTransfer',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'byteAccess',0,1
	.word	453
	.byte	1,6,2,35,0,0,14
	.word	18235
	.byte	31,14,176,1,9,4,11
	.byte	'baudrate',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'phase',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'receive',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'transmit',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved',0,4
	.word	2248
	.byte	28,0,2,35,0,0,7
	.byte	'long int',0,4,5,31,14,121,9,8,13
	.byte	'data',0
	.word	344
	.byte	4,2,35,0,13
	.byte	'remaining',0
	.word	17421
	.byte	2,2,35,4,0,33,1,1,22
	.word	344
	.byte	0,3
	.word	18444
	.byte	32
	.byte	'SpiIf_Cbk',0,14,208,1,16
	.word	18453
	.byte	3
	.word	.L451-.L107
	.byte	33,1,1,22
	.word	18477
	.byte	0,3
	.word	18482
	.byte	32
	.byte	'TxRxHandler',0,14,209,1,16
	.word	18491
.L451:
	.byte	10
	.byte	'SpiIf_Ch_',0,14,211,1,8,48,13
	.byte	'driver',0
	.word	.L452-.L107
	.byte	4,2,35,0,13
	.byte	'flags',0
	.word	18285
	.byte	1,2,35,4,13
	.byte	'errorChecks',0
	.word	18290
	.byte	4,2,35,6,13
	.byte	'baudrate',0
	.word	18393
	.byte	4,2,35,10,13
	.byte	'tx',0
	.word	18405
	.byte	8,2,35,16,13
	.byte	'rx',0
	.word	18405
	.byte	8,2,35,24,13
	.byte	'onExchangeEnd',0
	.word	18458
	.byte	4,2,35,32,13
	.byte	'callbackData',0
	.word	344
	.byte	4,2,35,36,13
	.byte	'txHandler',0
	.word	18496
	.byte	4,2,35,40,13
	.byte	'rxHandler',0
	.word	18496
	.byte	4,2,35,44,0,3
	.word	18517
	.byte	15,14,66,9,1,16
	.byte	'SpiIf_Status_ok',0,0,16
	.byte	'SpiIf_Status_busy',0,1,16
	.byte	'SpiIf_Status_unknown',0,2,0,20
	.word	338
	.byte	3
	.word	18783
	.byte	34
	.word	18716
	.byte	1,1,22
	.word	18477
	.byte	22
	.word	18788
	.byte	22
	.word	344
	.byte	22
	.word	17421
	.byte	0,3
	.word	18793
	.byte	32
	.byte	'SpiIf_Exchange',0,14,135,1,24
	.word	18821
	.byte	34
	.word	18716
	.byte	1,1,22
	.word	18477
	.byte	0,3
	.word	18850
	.byte	32
	.byte	'SpiIf_GetStatus',0,14,136,1,24
	.word	18863
	.byte	3
	.word	.L453-.L107
	.byte	33,1,1,22
	.word	18893
	.byte	0,3
	.word	18898
	.byte	32
	.byte	'SpiIf_OnEvent',0,14,137,1,24
	.word	18907
	.byte	31,14,141,1,9,20,13
	.byte	'exchange',0
	.word	18826
	.byte	4,2,35,0,13
	.byte	'getStatus',0
	.word	18868
	.byte	4,2,35,4,13
	.byte	'onTx',0
	.word	18912
	.byte	4,2,35,8,13
	.byte	'onRx',0
	.word	18912
	.byte	4,2,35,12,13
	.byte	'onError',0
	.word	18912
	.byte	4,2,35,16,0
.L453:
	.byte	10
	.byte	'SpiIf_',0,14,150,1,8,40,13
	.byte	'driver',0
	.word	18221
	.byte	4,2,35,0,13
	.byte	'sending',0
	.word	2248
	.byte	4,2,35,4,13
	.byte	'activeChannel',0
	.word	18711
	.byte	4,2,35,8,13
	.byte	'txCount',0
	.word	2248
	.byte	4,2,35,12,13
	.byte	'rxCount',0
	.word	2248
	.byte	4,2,35,16,13
	.byte	'functions',0
	.word	18935
	.byte	20,2,35,20,0
.L452:
	.byte	3
	.word	19024
	.byte	10
	.byte	'SpiIf_ChConfig_',0,14,225,1,8,28,13
	.byte	'driver',0
	.word	19147
	.byte	4,2,35,0,13
	.byte	'baudrate',0
	.word	226
	.byte	4,2,35,4,13
	.byte	'mode',0
	.word	17864
	.byte	16,2,35,8,13
	.byte	'errorChecks',0
	.word	18290
	.byte	4,2,35,24,0,20
	.word	19152
.L276:
	.byte	3
	.word	19244
	.byte	3
	.word	338
	.byte	3
	.word	18444
	.byte	3
	.word	18482
	.byte	3
	.word	18793
	.byte	3
	.word	18850
	.byte	3
	.word	18898
.L289:
	.byte	7
	.byte	'char',0,1,6
.L336:
	.byte	15,16,79,9,1,16
	.byte	'IfxQspi_Index_none',0,127,16
	.byte	'IfxQspi_Index_0',0,0,16
	.byte	'IfxQspi_Index_1',0,1,16
	.byte	'IfxQspi_Index_2',0,2,16
	.byte	'IfxQspi_Index_3',0,3,16
	.byte	'IfxQspi_Index_4',0,4,16
	.byte	'IfxQspi_Index_5',0,5,0,14
	.word	15827
	.byte	20
	.word	19427
.L359:
	.byte	3
	.word	19432
.L361:
	.byte	20
	.word	17454
.L364:
	.byte	3
	.word	18172
	.byte	32
	.byte	'__wchar_t',0,17,1,1
	.word	17421
	.byte	32
	.byte	'__size_t',0,17,1,1
	.word	430
	.byte	32
	.byte	'__ptrdiff_t',0,17,1,1
	.word	446
	.byte	35,1,3
	.word	19507
	.byte	32
	.byte	'__codeptr',0,17,1,1
	.word	19509
	.byte	32
	.byte	'boolean',0,18,104,29
	.word	453
	.byte	32
	.byte	'uint8',0,18,108,29
	.word	453
	.byte	32
	.byte	'uint16',0,18,112,29
	.word	1004
	.byte	32
	.byte	'uint32',0,18,116,29
	.word	2248
	.byte	32
	.byte	'uint64',0,18,121,29
	.word	312
	.byte	32
	.byte	'sint16',0,18,129,1,29
	.word	17421
	.byte	32
	.byte	'sint32',0,18,134,1,29
	.word	18393
	.byte	7
	.byte	'long long int',0,8,5,32
	.byte	'sint64',0,18,141,1,29
	.word	19639
	.byte	32
	.byte	'float32',0,18,170,1,29
	.word	226
	.byte	32
	.byte	'Ifx_TickTime',0,15,76,28
	.word	19639
	.byte	32
	.byte	'Ifx_SizeT',0,15,89,16
	.word	17421
	.byte	32
	.byte	'Ifx_Priority',0,15,100,16
	.word	1004
	.byte	15,15,127,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,32
	.byte	'Ifx_RxSel',0,15,137,1,3
	.word	19749
	.byte	14
	.word	338
	.byte	3
	.word	19886
	.byte	31,15,140,1,9,8,13
	.byte	'module',0
	.word	19891
	.byte	4,2,35,0,13
	.byte	'index',0
	.word	18393
	.byte	4,2,35,4,0,32
	.byte	'IfxModule_IndexMap',0,15,144,1,3
	.word	19896
	.byte	32
	.byte	'Ifx_UReg_8Bit',0,19,96,24
	.word	453
	.byte	32
	.byte	'Ifx_UReg_32Bit',0,19,98,24
	.word	430
	.byte	32
	.byte	'Ifx_SReg_32Bit',0,19,101,24
	.word	446
	.byte	32
	.byte	'Ifx_QSPI_ACCEN0_Bits',0,13,102,3
	.word	15257
	.byte	32
	.byte	'Ifx_QSPI_ACCEN1_Bits',0,13,108,3
	.word	15167
	.byte	32
	.byte	'Ifx_QSPI_BACON_Bits',0,13,126,3
	.word	12081
	.byte	32
	.byte	'Ifx_QSPI_BACONENTRY_Bits',0,13,132,1,3
	.word	13600
	.byte	32
	.byte	'Ifx_QSPI_CAPCON_Bits',0,13,147,1,3
	.word	13945
	.byte	32
	.byte	'Ifx_QSPI_CLC_Bits',0,13,157,1,3
	.word	10860
	.byte	32
	.byte	'Ifx_QSPI_DATAENTRY_Bits',0,13,163,1,3
	.word	13686
	.byte	32
	.byte	'Ifx_QSPI_ECON_Bits',0,13,177,1,3
	.word	12354
	.byte	32
	.byte	'Ifx_QSPI_FLAGSCLEAR_Bits',0,13,191,1,3
	.word	13168
	.byte	32
	.byte	'Ifx_QSPI_GLOBALCON_Bits',0,13,212,1,3
	.word	11364
	.byte	32
	.byte	'Ifx_QSPI_GLOBALCON1_Bits',0,13,233,1,3
	.word	11709
	.byte	32
	.byte	'Ifx_QSPI_ID_Bits',0,13,241,1,3
	.word	11241
	.byte	32
	.byte	'Ifx_QSPI_KRST0_Bits',0,13,249,1,3
	.word	15043
	.byte	32
	.byte	'Ifx_QSPI_KRST1_Bits',0,13,128,2,3
	.word	14938
	.byte	32
	.byte	'Ifx_QSPI_KRSTCLR_Bits',0,13,135,2,3
	.word	14831
	.byte	32
	.byte	'Ifx_QSPI_MC_Bits',0,13,144,2,3
	.word	14181
	.byte	32
	.byte	'Ifx_QSPI_MCCON_Bits',0,13,163,2,3
	.word	14329
	.byte	32
	.byte	'Ifx_QSPI_MIXENTRY_Bits',0,13,169,2,3
	.word	13516
	.byte	32
	.byte	'Ifx_QSPI_OCS_Bits',0,13,180,2,3
	.word	14648
	.byte	32
	.byte	'Ifx_QSPI_PISEL_Bits',0,13,193,2,3
	.word	11018
	.byte	32
	.byte	'Ifx_QSPI_RXEXIT_Bits',0,13,199,2,3
	.word	13780
	.byte	32
	.byte	'Ifx_QSPI_RXEXITD_Bits',0,13,205,2,3
	.word	13862
	.byte	32
	.byte	'Ifx_QSPI_SSOC_Bits',0,13,212,2,3
	.word	13071
	.byte	32
	.byte	'Ifx_QSPI_STATUS_Bits',0,13,231,2,3
	.word	12567
	.byte	32
	.byte	'Ifx_QSPI_STATUS1_Bits',0,13,242,2,3
	.word	12895
	.byte	32
	.byte	'Ifx_QSPI_XXLCON_Bits',0,13,249,2,3
	.word	13411
	.byte	32
	.byte	'Ifx_QSPI_ACCEN0',0,13,134,3,3
	.word	15787
	.byte	32
	.byte	'Ifx_QSPI_ACCEN1',0,13,142,3,3
	.word	15217
	.byte	32
	.byte	'Ifx_QSPI_BACON',0,13,150,3,3
	.word	12314
	.byte	32
	.byte	'Ifx_QSPI_BACONENTRY',0,13,158,3,3
	.word	13646
	.byte	32
	.byte	'Ifx_QSPI_CAPCON',0,13,166,3,3
	.word	14141
	.byte	32
	.byte	'Ifx_QSPI_CLC',0,13,174,3,3
	.word	10978
	.byte	32
	.byte	'Ifx_QSPI_DATAENTRY',0,13,182,3,3
	.word	13731
	.byte	32
	.byte	'Ifx_QSPI_ECON',0,13,190,3,3
	.word	12518
	.byte	32
	.byte	'Ifx_QSPI_FLAGSCLEAR',0,13,198,3,3
	.word	13371
	.byte	32
	.byte	'Ifx_QSPI_GLOBALCON',0,13,206,3,3
	.word	11669
	.byte	32
	.byte	'Ifx_QSPI_GLOBALCON1',0,13,214,3,3
	.word	12041
	.byte	32
	.byte	'Ifx_QSPI_ID',0,13,222,3,3
	.word	11324
	.byte	32
	.byte	'Ifx_QSPI_KRST0',0,13,230,3,3
	.word	15127
	.byte	32
	.byte	'Ifx_QSPI_KRST1',0,13,238,3,3
	.word	15003
	.byte	32
	.byte	'Ifx_QSPI_KRSTCLR',0,13,246,3,3
	.word	14898
	.byte	32
	.byte	'Ifx_QSPI_MC',0,13,254,3,3
	.word	14289
	.byte	32
	.byte	'Ifx_QSPI_MCCON',0,13,134,4,3
	.word	14599
	.byte	32
	.byte	'Ifx_QSPI_MIXENTRY',0,13,142,4,3
	.word	13560
	.byte	32
	.byte	'Ifx_QSPI_OCS',0,13,150,4,3
	.word	14791
	.byte	32
	.byte	'Ifx_QSPI_PISEL',0,13,158,4,3
	.word	11201
	.byte	32
	.byte	'Ifx_QSPI_RXEXIT',0,13,166,4,3
	.word	13822
	.byte	32
	.byte	'Ifx_QSPI_RXEXITD',0,13,174,4,3
	.word	13905
	.byte	32
	.byte	'Ifx_QSPI_SSOC',0,13,182,4,3
	.word	13128
	.byte	32
	.byte	'Ifx_QSPI_STATUS',0,13,190,4,3
	.word	12855
	.byte	32
	.byte	'Ifx_QSPI_STATUS1',0,13,198,4,3
	.word	13031
	.byte	32
	.byte	'Ifx_QSPI_XXLCON',0,13,206,4,3
	.word	13476
	.byte	14
	.word	15827
	.byte	32
	.byte	'Ifx_QSPI',0,13,252,4,3
	.word	21457
	.byte	32
	.byte	'IfxQspi_Index',0,16,88,3
	.word	19292
	.byte	18,48
	.word	19896
	.byte	19,5,0,20
	.word	21502
	.byte	36
	.byte	'IfxQspi_cfg_indexMap',0,16,93,41
	.word	21511
	.byte	1,1,15,20,66,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_dma',0,1,16
	.byte	'IfxSrc_Tos_cpu1',0,2,16
	.byte	'IfxSrc_Tos_cpu2',0,3,16
	.byte	'IfxSrc_Tos_cpu3',0,4,16
	.byte	'IfxSrc_Tos_cpu4',0,5,16
	.byte	'IfxSrc_Tos_cpu5',0,6,0,32
	.byte	'IfxSrc_Tos',0,20,75,3
	.word	21547
	.byte	32
	.byte	'Ifx_SRC_SRCR_Bits',0,4,85,3
	.word	470
	.byte	32
	.byte	'Ifx_SRC_SRCR',0,4,98,3
	.word	760
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,4,110,25,4,13
	.byte	'SB',0
	.word	760
	.byte	4,2,35,0,0,14
	.word	21744
	.byte	32
	.byte	'Ifx_SRC_CPU_CPU',0,4,113,3
	.word	21779
	.byte	18,24
	.word	21744
	.byte	19,5,0,14
	.word	21808
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,4,128,1,25,24,13
	.byte	'CPU',0
	.word	21817
	.byte	24,2,35,0,0,14
	.word	21822
	.byte	32
	.byte	'Ifx_SRC_CPU',0,4,131,1,3
	.word	21855
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,4,146,1,25,4,13
	.byte	'SR',0
	.word	760
	.byte	4,2,35,0,0,14
	.word	21881
	.byte	32
	.byte	'Ifx_SRC_AGBT_AGBT',0,4,149,1,3
	.word	21919
	.byte	18,4
	.word	21881
	.byte	19,0,0,14
	.word	21951
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,4,164,1,25,4,13
	.byte	'AGBT',0
	.word	21960
	.byte	4,2,35,0,0,14
	.word	21965
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,4,167,1,3
	.word	22000
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,4,182,1,25,4,13
	.byte	'SR',0
	.word	760
	.byte	4,2,35,0,0,14
	.word	22027
	.byte	32
	.byte	'Ifx_SRC_XBAR_XBAR',0,4,185,1,3
	.word	22065
	.byte	18,12
	.word	22027
	.byte	19,2,0,14
	.word	22097
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,4,200,1,25,12,13
	.byte	'XBAR',0
	.word	22106
	.byte	12,2,35,0,0,14
	.word	22111
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,4,203,1,3
	.word	22146
	.byte	18,8
	.word	760
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,4,218,1,25,8,13
	.byte	'SR',0
	.word	22173
	.byte	8,2,35,0,0,14
	.word	22182
	.byte	32
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,4,221,1,3
	.word	22228
	.byte	14
	.word	22182
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,4,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	22268
	.byte	8,2,35,0,0,14
	.word	22273
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,4,239,1,3
	.word	22316
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,4,254,1,25,12,13
	.byte	'TX',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	760
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	760
	.byte	4,2,35,8,0,14
	.word	22347
	.byte	32
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,4,131,2,3
	.word	22414
	.byte	18,144,1
	.word	22347
	.byte	19,11,0,14
	.word	22450
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,4,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	22460
	.byte	144,1,2,35,0,0,14
	.word	22465
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,4,149,2,3
	.word	22506
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,4,164,2,25,20,13
	.byte	'TX',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	760
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	760
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	760
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	760
	.byte	4,2,35,16,0,14
	.word	22535
	.byte	32
	.byte	'Ifx_SRC_QSPI_QSPI',0,4,171,2,3
	.word	22621
	.byte	18,120
	.word	22535
	.byte	19,5,0,14
	.word	22653
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,4,186,2,25,120,13
	.byte	'QSPI',0
	.word	22662
	.byte	120,2,35,0,0,14
	.word	22667
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,4,189,2,3
	.word	22702
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,4,204,2,25,4,13
	.byte	'SR',0
	.word	760
	.byte	4,2,35,0,0,14
	.word	22729
	.byte	32
	.byte	'Ifx_SRC_HSCT_HSCT',0,4,207,2,3
	.word	22767
	.byte	18,8
	.word	22729
	.byte	19,1,0,14
	.word	22799
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,4,222,2,25,8,13
	.byte	'HSCT',0
	.word	22808
	.byte	8,2,35,0,0,14
	.word	22813
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,4,225,2,3
	.word	22848
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,4,240,2,25,16,13
	.byte	'COK',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	760
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	760
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	760
	.byte	4,2,35,12,0,14
	.word	22875
	.byte	32
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,4,246,2,3
	.word	22956
	.byte	18,64
	.word	22875
	.byte	19,3,0,14
	.word	22991
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,4,133,3,25,68,13
	.byte	'CH',0
	.word	23000
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	760
	.byte	4,2,35,64,0,14
	.word	23005
	.byte	32
	.byte	'Ifx_SRC_HSSL_HSSL',0,4,137,3,3
	.word	23056
	.byte	18,136,1
	.word	23005
	.byte	19,1,0,14
	.word	23088
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,4,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	23098
	.byte	136,1,2,35,0,0,14
	.word	23103
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,4,155,3,3
	.word	23140
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,4,170,3,25,16,13
	.byte	'DTR',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	760
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	760
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3486
	.byte	4,2,35,12,0,14
	.word	23167
	.byte	32
	.byte	'Ifx_SRC_I2C_I2C',0,4,176,3,3
	.word	23248
	.byte	18,32
	.word	23167
	.byte	19,1,0,14
	.word	23278
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,4,191,3,25,32,13
	.byte	'I2C',0
	.word	23287
	.byte	32,2,35,0,0,14
	.word	23292
	.byte	32
	.byte	'Ifx_SRC_I2C',0,4,194,3,3
	.word	23325
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,4,209,3,25,4,13
	.byte	'SR',0
	.word	760
	.byte	4,2,35,0,0,14
	.word	23351
	.byte	32
	.byte	'Ifx_SRC_SENT_SENT',0,4,212,3,3
	.word	23389
	.byte	18,40
	.word	23351
	.byte	19,9,0,14
	.word	23421
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,4,227,3,25,40,13
	.byte	'SENT',0
	.word	23430
	.byte	40,2,35,0,0,14
	.word	23435
	.byte	32
	.byte	'Ifx_SRC_SENT',0,4,230,3,3
	.word	23470
	.byte	18,20
	.word	760
	.byte	19,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,4,245,3,25,20,13
	.byte	'SR',0
	.word	23497
	.byte	20,2,35,0,0,14
	.word	23506
	.byte	32
	.byte	'Ifx_SRC_MSC_MSC',0,4,248,3,3
	.word	23542
	.byte	18,80
	.word	23506
	.byte	19,3,0,14
	.word	23572
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,4,135,4,25,80,13
	.byte	'MSC',0
	.word	23581
	.byte	80,2,35,0,0,14
	.word	23586
	.byte	32
	.byte	'Ifx_SRC_MSC',0,4,138,4,3
	.word	23619
	.byte	18,16
	.word	760
	.byte	19,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,4,153,4,25,16,13
	.byte	'SR',0
	.word	23645
	.byte	16,2,35,0,0,14
	.word	23654
	.byte	32
	.byte	'Ifx_SRC_CCU6_CCU',0,4,156,4,3
	.word	23691
	.byte	18,32
	.word	23654
	.byte	19,1,0,14
	.word	23722
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,4,171,4,25,32,13
	.byte	'CCU',0
	.word	23731
	.byte	32,2,35,0,0,14
	.word	23736
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,4,174,4,3
	.word	23770
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,4,189,4,25,24,13
	.byte	'CIRQ',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	760
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	760
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	760
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	760
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	760
	.byte	4,2,35,20,0,14
	.word	23797
	.byte	32
	.byte	'Ifx_SRC_GPT12_GPT12',0,4,197,4,3
	.word	23899
	.byte	18,24
	.word	23797
	.byte	19,0,0,14
	.word	23933
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,4,212,4,25,24,13
	.byte	'GPT12',0
	.word	23942
	.byte	24,2,35,0,0,14
	.word	23947
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,4,215,4,3
	.word	23984
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,4,230,4,25,8,13
	.byte	'SR',0
	.word	22173
	.byte	8,2,35,0,0,14
	.word	24012
	.byte	32
	.byte	'Ifx_SRC_STM_STM',0,4,233,4,3
	.word	24048
	.byte	18,48
	.word	24012
	.byte	19,5,0,14
	.word	24078
	.byte	10
	.byte	'_Ifx_SRC_STM',0,4,248,4,25,48,13
	.byte	'STM',0
	.word	24087
	.byte	48,2,35,0,0,14
	.word	24092
	.byte	32
	.byte	'Ifx_SRC_STM',0,4,251,4,3
	.word	24125
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,4,138,5,25,4,13
	.byte	'SR',0
	.word	760
	.byte	4,2,35,0,0,14
	.word	24151
	.byte	32
	.byte	'Ifx_SRC_FCE_FCE0',0,4,141,5,3
	.word	24188
	.byte	14
	.word	24151
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,4,156,5,25,4,13
	.byte	'FCE0',0
	.word	24219
	.byte	4,2,35,0,0,14
	.word	24224
	.byte	32
	.byte	'Ifx_SRC_FCE',0,4,159,5,3
	.word	24258
	.byte	18,32
	.word	453
	.byte	19,31,0,18,128,4
	.word	760
	.byte	19,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,4,174,5,25,176,4,13
	.byte	'ERR',0
	.word	23645
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	24284
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	24293
	.byte	128,4,2,35,48,0,14
	.word	24303
	.byte	32
	.byte	'Ifx_SRC_DMA_DMA',0,4,179,5,3
	.word	24375
	.byte	18,176,4
	.word	24303
	.byte	19,0,0,14
	.word	24405
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,4,194,5,25,176,4,13
	.byte	'DMA',0
	.word	24415
	.byte	176,4,2,35,0,0,14
	.word	24420
	.byte	32
	.byte	'Ifx_SRC_DMA',0,4,197,5,3
	.word	24455
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,4,212,5,25,8,13
	.byte	'ERR',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	760
	.byte	4,2,35,4,0,14
	.word	24481
	.byte	32
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,4,216,5,3
	.word	24535
	.byte	18,8
	.word	24481
	.byte	19,0,0,14
	.word	24569
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,4,231,5,25,8,13
	.byte	'SDMMC',0
	.word	24578
	.byte	8,2,35,0,0,14
	.word	24583
	.byte	32
	.byte	'Ifx_SRC_SDMMC',0,4,234,5,3
	.word	24620
	.byte	18,40
	.word	760
	.byte	19,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,4,249,5,25,40,13
	.byte	'SR',0
	.word	24648
	.byte	40,2,35,0,0,14
	.word	24657
	.byte	32
	.byte	'Ifx_SRC_GETH_GETH',0,4,252,5,3
	.word	24695
	.byte	18,40
	.word	24657
	.byte	19,0,0,14
	.word	24727
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,4,139,6,25,40,13
	.byte	'GETH',0
	.word	24736
	.byte	40,2,35,0,0,14
	.word	24741
	.byte	32
	.byte	'Ifx_SRC_GETH',0,4,142,6,3
	.word	24776
	.byte	18,64
	.word	760
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,4,157,6,25,64,13
	.byte	'INT',0
	.word	24803
	.byte	64,2,35,0,0,14
	.word	24812
	.byte	32
	.byte	'Ifx_SRC_CAN_CAN',0,4,160,6,3
	.word	24849
	.byte	18,192,1
	.word	24812
	.byte	19,2,0,14
	.word	24879
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,4,175,6,25,192,1,13
	.byte	'CAN',0
	.word	24889
	.byte	192,1,2,35,0,0,14
	.word	24894
	.byte	32
	.byte	'Ifx_SRC_CAN',0,4,178,6,3
	.word	24929
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,4,193,6,25,16,13
	.byte	'SR0',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	760
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	760
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	760
	.byte	4,2,35,12,0,14
	.word	24955
	.byte	32
	.byte	'Ifx_SRC_VADC_G',0,4,199,6,3
	.word	25030
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,4,214,6,25,4,13
	.byte	'SR0',0
	.word	760
	.byte	4,2,35,0,0,14
	.word	25059
	.byte	32
	.byte	'Ifx_SRC_VADC_FC',0,4,217,6,3
	.word	25096
	.byte	18,192,1
	.word	24955
	.byte	19,11,0,14
	.word	25126
	.byte	18,32
	.word	25059
	.byte	19,7,0,14
	.word	25141
	.byte	18,32
	.word	24955
	.byte	19,1,0,14
	.word	25155
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,4,233,6,25,128,2,13
	.byte	'G',0
	.word	25136
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	25150
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	25164
	.byte	32,3,35,224,1,0,14
	.word	25169
	.byte	32
	.byte	'Ifx_SRC_VADC',0,4,238,6,3
	.word	25229
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,4,253,6,25,8,13
	.byte	'SRM',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	760
	.byte	4,2,35,4,0,14
	.word	25256
	.byte	32
	.byte	'Ifx_SRC_DSADC_DSADC',0,4,129,7,3
	.word	25310
	.byte	18,112
	.word	25256
	.byte	19,13,0,14
	.word	25344
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,4,144,7,25,112,13
	.byte	'DSADC',0
	.word	25353
	.byte	112,2,35,0,0,14
	.word	25358
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,4,147,7,3
	.word	25395
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,4,162,7,25,48,13
	.byte	'INT0',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	760
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	760
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	760
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	760
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	760
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	760
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	760
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	760
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	760
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	5306
	.byte	8,2,35,40,0,14
	.word	25423
	.byte	32
	.byte	'Ifx_SRC_ERAY_ERAY',0,4,175,7,3
	.word	25618
	.byte	18,96
	.word	25423
	.byte	19,1,0,14
	.word	25650
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,4,190,7,25,96,13
	.byte	'ERAY',0
	.word	25659
	.byte	96,2,35,0,0,14
	.word	25664
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,4,193,7,3
	.word	25699
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,4,208,7,25,8,13
	.byte	'HSM',0
	.word	22173
	.byte	8,2,35,0,0,14
	.word	25726
	.byte	32
	.byte	'Ifx_SRC_HSM_HSM',0,4,211,7,3
	.word	25763
	.byte	18,8
	.word	25726
	.byte	19,0,0,14
	.word	25793
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,4,226,7,25,8,13
	.byte	'HSM',0
	.word	25802
	.byte	8,2,35,0,0,14
	.word	25807
	.byte	32
	.byte	'Ifx_SRC_HSM',0,4,229,7,3
	.word	25840
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,4,244,7,25,16,13
	.byte	'SCUERU',0
	.word	23645
	.byte	16,2,35,0,0,14
	.word	25866
	.byte	32
	.byte	'Ifx_SRC_SCU',0,4,247,7,3
	.word	25902
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,4,134,8,25,4,13
	.byte	'SR',0
	.word	760
	.byte	4,2,35,0,0,14
	.word	25928
	.byte	32
	.byte	'Ifx_SRC_PMS_PMS',0,4,137,8,3
	.word	25964
	.byte	18,16
	.word	25928
	.byte	19,3,0,14
	.word	25994
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,4,152,8,25,16,13
	.byte	'PMS',0
	.word	26003
	.byte	16,2,35,0,0,14
	.word	26008
	.byte	32
	.byte	'Ifx_SRC_PMS',0,4,155,8,3
	.word	26041
	.byte	18,12
	.word	760
	.byte	19,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,4,170,8,25,12,13
	.byte	'SR',0
	.word	26067
	.byte	12,2,35,0,0,14
	.word	26076
	.byte	32
	.byte	'Ifx_SRC_SMU_SMU',0,4,173,8,3
	.word	26112
	.byte	18,12
	.word	26076
	.byte	19,0,0,14
	.word	26142
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,4,188,8,25,12,13
	.byte	'SMU',0
	.word	26151
	.byte	12,2,35,0,0,14
	.word	26156
	.byte	32
	.byte	'Ifx_SRC_SMU',0,4,191,8,3
	.word	26189
	.byte	18,32
	.word	760
	.byte	19,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,4,206,8,25,32,13
	.byte	'SR',0
	.word	26215
	.byte	32,2,35,0,0,14
	.word	26224
	.byte	32
	.byte	'Ifx_SRC_PSI5_PSI5',0,4,209,8,3
	.word	26262
	.byte	18,32
	.word	26224
	.byte	19,0,0,14
	.word	26294
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,4,224,8,25,32,13
	.byte	'PSI5',0
	.word	26303
	.byte	32,2,35,0,0,14
	.word	26308
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,4,227,8,3
	.word	26343
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,4,242,8,25,12,13
	.byte	'BFR',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	760
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	760
	.byte	4,2,35,8,0,14
	.word	26370
	.byte	32
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,4,247,8,3
	.word	26439
	.byte	14
	.word	26370
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,4,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	26474
	.byte	12,2,35,0,0,14
	.word	26479
	.byte	32
	.byte	'Ifx_SRC_HSPDM',0,4,137,9,3
	.word	26517
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,4,152,9,25,24,13
	.byte	'LI0',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	760
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	760
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	760
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	760
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	760
	.byte	4,2,35,20,0,14
	.word	26545
	.byte	32
	.byte	'Ifx_SRC_DAM_DAM',0,4,160,9,3
	.word	26646
	.byte	18,48
	.word	26545
	.byte	19,1,0,14
	.word	26676
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,4,175,9,25,48,13
	.byte	'DAM',0
	.word	26685
	.byte	48,2,35,0,0,14
	.word	26690
	.byte	32
	.byte	'Ifx_SRC_DAM',0,4,178,9,3
	.word	26723
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,4,193,9,25,32,13
	.byte	'SR',0
	.word	26215
	.byte	32,2,35,0,0,14
	.word	26749
	.byte	32
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,4,196,9,3
	.word	26789
	.byte	18,32
	.word	26749
	.byte	19,0,0,14
	.word	26823
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,4,211,9,25,32,13
	.byte	'PSI5S',0
	.word	26832
	.byte	32,2,35,0,0,14
	.word	26837
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,4,214,9,3
	.word	26874
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,4,229,9,25,8,13
	.byte	'ERR',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	760
	.byte	4,2,35,4,0,14
	.word	26902
	.byte	32
	.byte	'Ifx_SRC_RIF_RIF',0,4,233,9,3
	.word	26952
	.byte	18,16
	.word	26902
	.byte	19,1,0,14
	.word	26982
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,4,248,9,25,16,13
	.byte	'RIF',0
	.word	26991
	.byte	16,2,35,0,0,14
	.word	26996
	.byte	32
	.byte	'Ifx_SRC_RIF',0,4,251,9,3
	.word	27029
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,4,138,10,25,8,13
	.byte	'INT',0
	.word	760
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	760
	.byte	4,2,35,4,0,14
	.word	27055
	.byte	32
	.byte	'Ifx_SRC_SPU_SPU',0,4,142,10,3
	.word	27105
	.byte	18,16
	.word	27055
	.byte	19,1,0,14
	.word	27135
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,4,157,10,25,16,13
	.byte	'SPU',0
	.word	27144
	.byte	16,2,35,0,0,14
	.word	27149
	.byte	32
	.byte	'Ifx_SRC_SPU',0,4,160,10,3
	.word	27182
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,4,175,10,25,32,13
	.byte	'SR',0
	.word	26215
	.byte	32,2,35,0,0,14
	.word	27208
	.byte	32
	.byte	'Ifx_SRC_GPSR_GPSR',0,4,178,10,3
	.word	27246
	.byte	18,192,1
	.word	27208
	.byte	19,5,0,14
	.word	27278
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,4,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	27288
	.byte	192,1,2,35,0,0,14
	.word	27293
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,4,196,10,3
	.word	27330
	.byte	32
	.byte	'SpiIf_Status',0,14,71,3
	.word	18716
	.byte	32
	.byte	'SpiIf_Ch',0,14,111,32
	.word	18517
	.byte	32
	.byte	'SpiIf_ChConfig',0,14,112,32
	.word	19152
	.byte	32
	.byte	'SpiIf',0,14,113,32
	.word	19024
	.byte	14
	.word	18235
	.byte	32
	.byte	'SpiIf_Flags',0,14,119,3
	.word	27432
	.byte	32
	.byte	'SpiIf_Job',0,14,125,3
	.word	18405
	.byte	15,14,128,1,9,1,16
	.byte	'SpiIf_Mode_master',0,0,16
	.byte	'SpiIf_Mode_slave',0,1,16
	.byte	'SpiIf_Mode_undefined',0,2,0,32
	.byte	'SpiIf_Mode',0,14,133,1,3
	.word	27475
	.byte	32
	.byte	'SpiIf_SlsoTiming_HalfTsclk',0,14,138,1,16
	.word	2248
	.byte	32
	.byte	'SpiIf_funcs',0,14,148,1,3
	.word	18935
	.byte	32
	.byte	'Spi_ErrorChecks',0,14,183,1,3
	.word	18290
	.byte	32
	.byte	'SpiIf_ChMode',0,14,205,1,3
	.word	17864
	.byte	15,21,162,11,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,21,167,11,3
	.word	27668
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,6,68,16,4,11
	.byte	'EN0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN00_Bits',0,6,102,3
	.word	27790
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,6,105,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN01_Bits',0,6,108,3
	.word	28349
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,6,111,16,4,11
	.byte	'EN0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN10_Bits',0,6,145,1,3
	.word	28428
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,6,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN11_Bits',0,6,151,1,3
	.word	28988
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	453
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	430
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,164,1,3
	.word	29069
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	453
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	453
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	453
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	453
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	453
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	453
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	453
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	453
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	453
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,181,1,3
	.word	29286
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	453
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	453
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	453
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	453
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	453
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	453
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	453
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	453
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	453
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,199,1,3
	.word	29559
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,6,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	453
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	430
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON10_Bits',0,6,206,1,3
	.word	29885
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,6,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	453
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	430
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON11_Bits',0,6,213,1,3
	.word	29987
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	453
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	453
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	453
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	453
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	430
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	453
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,228,1,3
	.word	30089
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	453
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	430
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	453
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,248,1,3
	.word	30363
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	1004
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	430
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	453
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,132,2,3
	.word	30732
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	453
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	453
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	453
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	430
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,143,2,3
	.word	30912
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	453
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	430
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,150,2,3
	.word	31081
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,6,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	453
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	430
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,6,157,2,3
	.word	31181
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,6,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	453
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	430
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON8_Bits',0,6,164,2,3
	.word	31281
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,6,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	453
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	430
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON9_Bits',0,6,171,2,3
	.word	31381
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	453
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	453
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	453
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	453
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	453
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	453
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	453
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,185,2,3
	.word	31481
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,6,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	1004
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	1004
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,6,200,2,3
	.word	31684
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,6,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	1004
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	430
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,6,207,2,3
	.word	31916
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,6,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	852
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_EICON0_Bits',0,6,216,2,3
	.word	32018
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,6,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	430
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_EICON1_Bits',0,6,228,2,3
	.word	32146
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,6,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	453
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	453
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	430
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	453
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	453
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,6,250,2,3
	.word	32335
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,6,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	453
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	453
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	453
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EIFILT_Bits',0,6,147,3,3
	.word	32699
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	430
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,6,161,3,3
	.word	33138
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,6,164,3,16,4,11
	.byte	'AE',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1004
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_EISR_Bits',0,6,174,3,3
	.word	33349
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,177,3,16,4,11
	.byte	'POL',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	1004
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1004
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,6,187,3,3
	.word	33525
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,6,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	453
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	453
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	453
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSSW_Bits',0,6,196,3,3
	.word	33719
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,6,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	1004
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	430
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,6,204,3,3
	.word	33854
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,207,3,16,4,11
	.byte	'ARI',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	430
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,212,3,3
	.word	33990
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,215,3,16,4,11
	.byte	'EN0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	453
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1004
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	453
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	453
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	453
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,226,3,3
	.word	34101
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,6,229,3,16,4,11
	.byte	'STEP',0,2
	.word	1004
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	453
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	453
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	1004
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	453
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,6,237,3,3
	.word	34319
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,6,240,3,16,4,11
	.byte	'FS0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	453
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	453
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,6,132,4,3
	.word	34482
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,6,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	453
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,6,140,4,3
	.word	34818
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	453
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	453
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	453
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	453
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,6,167,4,3
	.word	34925
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,6,170,4,16,4,11
	.byte	'P0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	430
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,6,175,4,3
	.word	35377
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	453
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	453
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	453
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,6,185,4,3
	.word	35476
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	430
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	1004
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,198,4,3
	.word	35626
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,201,4,16,4,11
	.byte	'SEED',0,4
	.word	430
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	453
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	453
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	453
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,208,4,3
	.word	35864
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	1004
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	430
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,215,4,3
	.word	36025
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,6,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,6,221,4,3
	.word	36131
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,6,224,4,16,4,11
	.byte	'LS2',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	1004
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	1004
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON0_Bits',0,6,232,4,3
	.word	36217
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,6,235,4,16,4,11
	.byte	'LS3',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	1004
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	1004
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON1_Bits',0,6,243,4,3
	.word	36385
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1004
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1004
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,134,5,3
	.word	36553
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,6,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	453
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	1004
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,6,142,5,3
	.word	36867
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,6,145,5,16,4,11
	.byte	'PS0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	1004
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1004
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,6,153,5,3
	.word	36978
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	453
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	453
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	453
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	453
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	453
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	453
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	453
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	453
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,177,5,3
	.word	37136
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,6,180,5,16,4,11
	.byte	'P0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	430
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,6,185,5,3
	.word	37547
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1004
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	453
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	453
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,204,5,3
	.word	37648
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	430
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,216,5,3
	.word	37966
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	430
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,6,224,5,3
	.word	38153
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,6,227,5,16,4,11
	.byte	'PD0',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	453
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	453
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	453
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	430
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,6,234,5,3
	.word	38264
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	430
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,6,248,5,3
	.word	38397
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,6,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	1004
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	453
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	453
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	453
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	453
	.byte	5,0,2,35,3,0,32
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,6,134,6,3
	.word	38600
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,6,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	453
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	453
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	430
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,6,143,6,3
	.word	38840
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,6,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	430
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,6,156,6,3
	.word	38984
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,6,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	430
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR0_Bits',0,6,165,6,3
	.word	39206
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,6,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	430
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR1_Bits',0,6,174,6,3
	.word	39342
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,6,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	430
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR2_Bits',0,6,183,6,3
	.word	39478
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,6,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	430
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR3_Bits',0,6,192,6,3
	.word	39614
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,6,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	430
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR4_Bits',0,6,201,6,3
	.word	39750
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,6,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	430
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR5_Bits',0,6,210,6,3
	.word	39886
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,6,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1004
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1004
	.byte	12,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,6,227,6,3
	.word	40022
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	453
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	430
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	453
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	453
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,241,6,3
	.word	40294
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,6,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1004
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	453
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1004
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	453
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,6,135,7,3
	.word	40539
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,6,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	1004
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	1004
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	453
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,6,143,7,3
	.word	40927
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,6,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	453
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	453
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	453
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	453
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,6,157,7,3
	.word	41045
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,6,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	453
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	453
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	453
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	453
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	1004
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	453
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,6,172,7,3
	.word	41288
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	453
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	453
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	453
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	453
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	453
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	453
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	453
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	453
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	453
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	453
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1004
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,189,7,3
	.word	41555
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	1004
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,206,7,3
	.word	41814
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,6,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON3_Bits',0,6,212,7,3
	.word	42119
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	453
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,245,7,3
	.word	42200
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,6,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	852
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON0_Bits',0,6,254,7,3
	.word	42749
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,6,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	430
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON1_Bits',0,6,138,8,3
	.word	42879
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,6,141,8,16,4,11
	.byte	'AE',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1004
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SEISR_Bits',0,6,151,8,3
	.word	43070
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,6,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	1004
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_STCON_Bits',0,6,161,8,3
	.word	43248
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,6,164,8,16,4,11
	.byte	'MEM',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM1_Bits',0,6,167,8,3
	.word	43399
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,6,170,8,16,4,11
	.byte	'MEM',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM2_Bits',0,6,173,8,3
	.word	43471
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,6,176,8,16,4,11
	.byte	'MEM',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM3_Bits',0,6,179,8,3
	.word	43543
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,6,182,8,16,4,11
	.byte	'MEM',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM4_Bits',0,6,185,8,3
	.word	43615
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,6,188,8,16,4,11
	.byte	'MEM',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM5_Bits',0,6,191,8,3
	.word	43687
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,6,194,8,16,4,11
	.byte	'MEM',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM6_Bits',0,6,197,8,3
	.word	43759
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	453
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	453
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	453
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,216,8,3
	.word	43831
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,6,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	1004
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,6,224,8,3
	.word	44160
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	453
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,234,8,3
	.word	44280
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	453
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	453
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,249,8,3
	.word	44450
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,6,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	1004
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	453
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	453
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	453
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	453
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	453
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,6,137,9,3
	.word	44713
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,6,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	453
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	430
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,6,144,9,3
	.word	44992
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,6,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	1004
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,6,151,9,3
	.word	45096
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,6,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	453
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	430
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,6,164,9,3
	.word	45202
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	430
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,174,9,3
	.word	45425
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,6,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	453
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	453
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	453
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	453
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,6,199,9,3
	.word	45573
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,6,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	453
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	453
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,6,215,9,3
	.word	46061
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	430
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,225,9,3
	.word	46358
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	430
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,235,9,3
	.word	46506
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,244,9,3
	.word	868
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,132,10,3
	.word	1026
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,148,10,3
	.word	1292
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	852
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,157,10,3
	.word	46756
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	453
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,173,10,3
	.word	46882
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,176,10,16,4,11
	.byte	'AE',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	453
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,189,10,3
	.word	47134
	.byte	12,6,197,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27790
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN00',0,6,202,10,3
	.word	47353
	.byte	12,6,205,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28349
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN01',0,6,210,10,3
	.word	47418
	.byte	12,6,213,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28428
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN10',0,6,218,10,3
	.word	47483
	.byte	12,6,221,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28988
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN11',0,6,226,10,3
	.word	47548
	.byte	12,6,229,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29069
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,6,234,10,3
	.word	47613
	.byte	12,6,237,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29286
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,6,242,10,3
	.word	47678
	.byte	12,6,245,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29559
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,6,250,10,3
	.word	47743
	.byte	12,6,253,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29885
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON10',0,6,130,11,3
	.word	47808
	.byte	12,6,133,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29987
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON11',0,6,138,11,3
	.word	47874
	.byte	12,6,141,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30089
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,6,146,11,3
	.word	47940
	.byte	12,6,149,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30363
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,6,154,11,3
	.word	48005
	.byte	12,6,157,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30732
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,6,162,11,3
	.word	48070
	.byte	12,6,165,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30912
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,6,170,11,3
	.word	48135
	.byte	12,6,173,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31081
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,6,178,11,3
	.word	48200
	.byte	12,6,181,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31181
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,6,186,11,3
	.word	48265
	.byte	12,6,189,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31281
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON8',0,6,194,11,3
	.word	48330
	.byte	12,6,197,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31381
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON9',0,6,202,11,3
	.word	48395
	.byte	12,6,205,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31481
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,6,210,11,3
	.word	48460
	.byte	12,6,213,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31684
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCLIM',0,6,218,11,3
	.word	48524
	.byte	12,6,221,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31916
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCSTAT',0,6,226,11,3
	.word	48589
	.byte	12,6,229,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32018
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICON0',0,6,234,11,3
	.word	48655
	.byte	12,6,237,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32146
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICON1',0,6,242,11,3
	.word	48719
	.byte	12,6,245,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32335
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,6,250,11,3
	.word	48783
	.byte	12,6,253,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32699
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFILT',0,6,130,12,3
	.word	48845
	.byte	12,6,133,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33138
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,6,138,12,3
	.word	48909
	.byte	12,6,141,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33349
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EISR',0,6,146,12,3
	.word	48971
	.byte	12,6,149,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33525
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,6,154,12,3
	.word	49033
	.byte	12,6,157,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33719
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSSW',0,6,162,12,3
	.word	49095
	.byte	12,6,165,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33854
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,6,170,12,3
	.word	49158
	.byte	12,6,173,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33990
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,6,178,12,3
	.word	49231
	.byte	12,6,181,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34101
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,6,186,12,3
	.word	49296
	.byte	12,6,189,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34319
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,6,194,12,3
	.word	49360
	.byte	12,6,197,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34482
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,6,202,12,3
	.word	49421
	.byte	12,6,205,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34818
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,6,210,12,3
	.word	49482
	.byte	12,6,213,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34925
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,6,218,12,3
	.word	49542
	.byte	12,6,221,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35377
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,6,226,12,3
	.word	49604
	.byte	12,6,229,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35476
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,6,234,12,3
	.word	49664
	.byte	12,6,237,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35626
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,242,12,3
	.word	49726
	.byte	12,6,245,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35864
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,250,12,3
	.word	49794
	.byte	12,6,253,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36025
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,130,13,3
	.word	49862
	.byte	12,6,133,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36131
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL3',0,6,138,13,3
	.word	49930
	.byte	12,6,141,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36217
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON0',0,6,146,13,3
	.word	49998
	.byte	12,6,149,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36385
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON1',0,6,154,13,3
	.word	50063
	.byte	12,6,157,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36553
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,6,162,13,3
	.word	50128
	.byte	12,6,165,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36867
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,6,170,13,3
	.word	50193
	.byte	12,6,173,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36978
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,6,178,13,3
	.word	50256
	.byte	12,6,181,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37136
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,6,186,13,3
	.word	50317
	.byte	12,6,189,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37547
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,6,194,13,3
	.word	50381
	.byte	12,6,197,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37648
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,6,202,13,3
	.word	50442
	.byte	12,6,205,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37966
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,6,210,13,3
	.word	50506
	.byte	12,6,213,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38153
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,6,218,13,3
	.word	50573
	.byte	12,6,221,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38264
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,6,226,13,3
	.word	50636
	.byte	12,6,229,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38397
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,6,234,13,3
	.word	50697
	.byte	12,6,237,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38600
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON0',0,6,242,13,3
	.word	50759
	.byte	12,6,245,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38840
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON1',0,6,250,13,3
	.word	50827
	.byte	12,6,253,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38984
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLSTAT',0,6,130,14,3
	.word	50895
	.byte	12,6,133,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39206
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR0',0,6,138,14,3
	.word	50963
	.byte	12,6,141,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39342
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR1',0,6,146,14,3
	.word	51027
	.byte	12,6,149,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39478
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR2',0,6,154,14,3
	.word	51091
	.byte	12,6,157,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39614
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR3',0,6,162,14,3
	.word	51155
	.byte	12,6,165,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39750
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR4',0,6,170,14,3
	.word	51219
	.byte	12,6,173,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39886
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR5',0,6,178,14,3
	.word	51283
	.byte	12,6,181,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40022
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSTAT0',0,6,186,14,3
	.word	51347
	.byte	12,6,189,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40294
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,6,194,14,3
	.word	51412
	.byte	12,6,197,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40539
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR0',0,6,202,14,3
	.word	51477
	.byte	12,6,205,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40927
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR1',0,6,210,14,3
	.word	51543
	.byte	12,6,213,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41045
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR2',0,6,218,14,3
	.word	51609
	.byte	12,6,221,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41288
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR3',0,6,226,14,3
	.word	51675
	.byte	12,6,229,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41555
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,6,234,14,3
	.word	51741
	.byte	12,6,237,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41814
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,6,242,14,3
	.word	51805
	.byte	12,6,245,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42119
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON3',0,6,250,14,3
	.word	51870
	.byte	12,6,253,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42200
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,6,130,15,3
	.word	51935
	.byte	12,6,133,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42749
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON0',0,6,138,15,3
	.word	52000
	.byte	12,6,141,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42879
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON1',0,6,146,15,3
	.word	52065
	.byte	12,6,149,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43070
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEISR',0,6,154,15,3
	.word	52130
	.byte	12,6,157,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43248
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STCON',0,6,162,15,3
	.word	52193
	.byte	12,6,165,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43399
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM1',0,6,170,15,3
	.word	52256
	.byte	12,6,173,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43471
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM2',0,6,178,15,3
	.word	52320
	.byte	12,6,181,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43543
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM3',0,6,186,15,3
	.word	52384
	.byte	12,6,189,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43615
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM4',0,6,194,15,3
	.word	52448
	.byte	12,6,197,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43687
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM5',0,6,202,15,3
	.word	52512
	.byte	12,6,205,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43759
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM6',0,6,210,15,3
	.word	52576
	.byte	12,6,213,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43831
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,6,218,15,3
	.word	52640
	.byte	12,6,221,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44160
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWAPCTRL',0,6,226,15,3
	.word	52704
	.byte	12,6,229,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44280
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,6,234,15,3
	.word	52770
	.byte	12,6,237,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44450
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,6,242,15,3
	.word	52836
	.byte	12,6,245,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44713
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON0',0,6,250,15,3
	.word	52900
	.byte	12,6,253,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44992
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON1',0,6,130,16,3
	.word	52968
	.byte	12,6,133,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45096
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON2',0,6,138,16,3
	.word	53036
	.byte	12,6,141,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45202
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLSTAT',0,6,146,16,3
	.word	53104
	.byte	12,6,149,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45425
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,6,154,16,3
	.word	53172
	.byte	12,6,157,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45573
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS0',0,6,162,16,3
	.word	53237
	.byte	12,6,165,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46061
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS1',0,6,170,16,3
	.word	53303
	.byte	12,6,173,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46358
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,6,178,16,3
	.word	53369
	.byte	12,6,181,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46506
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,6,186,16,3
	.word	53434
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,194,16,3
	.word	964
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,202,16,3
	.word	1252
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,210,16,3
	.word	1483
	.byte	12,6,213,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46756
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,6,218,16,3
	.word	53585
	.byte	12,6,221,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46882
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,6,226,16,3
	.word	53652
	.byte	12,6,229,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47134
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,6,234,16,3
	.word	53719
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,6,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	49158
	.byte	4,2,35,0,0,14
	.word	53784
	.byte	32
	.byte	'Ifx_SCU_ESRCFGX',0,6,249,16,3
	.word	53825
	.byte	14
	.word	1523
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,6,141,17,3
	.word	53855
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,6,156,17,25,12,13
	.byte	'CON0',0
	.word	53585
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	53652
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	53719
	.byte	4,2,35,8,0,14
	.word	53884
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,6,161,17,3
	.word	53945
	.byte	18,8
	.word	53784
	.byte	19,1,0,14
	.word	53972
	.byte	18,16
	.word	453
	.byte	19,15,0,18,20
	.word	453
	.byte	19,19,0,18,36
	.word	453
	.byte	19,35,0,18,16
	.word	48783
	.byte	19,3,0,18,16
	.word	49542
	.byte	19,3,0,18,72
	.word	1523
	.byte	19,5,0,14
	.word	54031
	.byte	14
	.word	53884
	.byte	18,176,2
	.word	453
	.byte	19,175,2,0,10
	.byte	'_Ifx_SCU',0,6,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	5306
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	49482
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3486
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	50317
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	53104
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	52900
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	52968
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	53036
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	50895
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	50759
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	50827
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	47678
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	47743
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	49360
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	49296
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	47940
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	48005
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	48070
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	48135
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	51935
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3486
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	51741
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	47613
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	52770
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	51805
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	51870
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	3486
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	53981
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	49231
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	52836
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	48200
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	48265
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	48330
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	48395
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	47808
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	47874
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3486
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	50636
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	49664
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	50381
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	50256
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	49604
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	53986
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	52640
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	52193
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	50963
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	51027
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	51091
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	51155
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	51219
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	51283
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	3486
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	51347
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	51412
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	53986
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	49033
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	49095
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	48589
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	48524
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	53995
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	53303
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	53434
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	53369
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	53172
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	53237
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	49998
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	50063
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	50128
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	48460
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	50193
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	3486
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	52704
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	53995
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	49726
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	49794
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	49862
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	49930
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	53986
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	52256
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	52320
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	50573
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	5306
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	51477
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	51543
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	51609
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	51675
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	4677
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	52384
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	52448
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	52512
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	52576
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	53986
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	50506
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	50442
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	54004
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	48845
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	54013
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	48909
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	49421
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	50697
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	54022
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	53986
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	54040
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	5306
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	48655
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	48719
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	48971
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	54045
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	52000
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	52065
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	52130
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	54050
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	47548
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	47483
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	47418
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	47353
	.byte	4,3,35,252,7,0,14
	.word	54061
	.byte	32
	.byte	'Ifx_SCU',0,6,166,18,3
	.word	56182
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,22,68,16,4,11
	.byte	'ADDR',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,22,71,3
	.word	56204
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,22,74,16,4,11
	.byte	'VSS',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	852
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,22,78,3
	.word	56265
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,22,81,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	852
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	852
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	852
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,22,87,3
	.word	56344
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,22,90,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	852
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	852
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,22,95,3
	.word	56482
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,22,98,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	852
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	852
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	852
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	852
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,22,106,3
	.word	56603
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,22,109,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	852
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,22,113,3
	.word	56779
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,22,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	852
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,22,120,3
	.word	56865
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,22,123,16,4,11
	.byte	'CM',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	852
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	852
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	852
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	852
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,22,131,1,3
	.word	56954
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,22,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	852
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,22,140,1,3
	.word	57101
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,22,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	852
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,22,147,1,3
	.word	57230
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,22,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	852
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,22,154,1,3
	.word	57330
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,22,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	852
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,22,161,1,3
	.word	57425
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,22,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	852
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	852
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,22,169,1,3
	.word	57520
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,22,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	852
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	852
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,22,176,1,3
	.word	57630
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,22,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	852
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	852
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,22,187,1,3
	.word	57722
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,22,190,1,16,4,11
	.byte	'CID',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	852
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,22,194,1,3
	.word	57876
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,22,197,1,16,4,11
	.byte	'DATA',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,22,200,1,3
	.word	57970
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,22,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	852
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	852
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,22,214,1,3
	.word	58033
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,22,217,1,16,4,11
	.byte	'DE',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	852
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	852
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	852
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,22,228,1,3
	.word	58259
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,22,231,1,16,4,11
	.byte	'DTA',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	852
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,22,235,1,3
	.word	58474
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,22,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	852
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0_Bits',0,22,243,1,3
	.word	58568
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,22,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	852
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,22,250,1,3
	.word	58684
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,22,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	852
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,22,129,2,3
	.word	58785
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,22,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,22,135,2,3
	.word	58878
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,22,138,2,16,4,11
	.byte	'TA',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,22,141,2,3
	.word	58958
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,22,144,2,16,4,11
	.byte	'IED',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	852
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	852
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,22,159,2,3
	.word	59027
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,22,162,2,16,4,11
	.byte	'EN0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,22,196,2,3
	.word	59311
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,22,199,2,16,4,11
	.byte	'EN0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,22,233,2,3
	.word	59902
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,22,236,2,16,4,11
	.byte	'EN32',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,22,142,3,3
	.word	60493
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,22,145,3,16,4,11
	.byte	'EN32',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,22,179,3,3
	.word	61094
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,22,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	852
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,22,186,3,3
	.word	61695
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,22,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	852
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,22,193,3,3
	.word	61810
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,22,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	852
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,22,200,3,3
	.word	61925
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,22,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	852
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	852
	.byte	14,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,22,207,3,3
	.word	62018
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,22,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	852
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,22,214,3,3
	.word	62110
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,22,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	852
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,22,221,3,3
	.word	62205
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,22,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	852
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	852
	.byte	14,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,22,228,3,3
	.word	62300
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,22,231,3,16,4,11
	.byte	'SRE',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	852
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	852
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	852
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	852
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,22,250,3,3
	.word	62392
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,22,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	852
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	852
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,22,133,4,3
	.word	62731
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,22,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	852
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	852
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	852
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,22,141,4,3
	.word	62885
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,22,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	852
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	852
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	852
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	852
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	852
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	852
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	852
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	852
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,22,154,4,3
	.word	62991
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,22,157,4,16,4,11
	.byte	'STALL',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	852
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	852
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	852
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	852
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	852
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,22,165,4,3
	.word	63209
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,22,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	852
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	852
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	852
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	852
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	852
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	852
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	852
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	852
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	852
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	852
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	852
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	852
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,22,182,4,3
	.word	63400
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,22,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	852
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,22,198,4,3
	.word	63700
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,22,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	852
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,22,205,4,3
	.word	64005
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,22,208,4,16,4,11
	.byte	'TST',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	852
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	852
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	852
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	852
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,22,227,4,3
	.word	64106
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,230,4,16,4,11
	.byte	'OPC',0,4
	.word	852
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	852
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	852
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	852
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,237,4,3
	.word	64455
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,22,240,4,16,4,11
	.byte	'PC',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,22,243,4,3
	.word	64615
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,249,4,3
	.word	64696
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,255,4,3
	.word	64783
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,133,5,3
	.word	64870
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,22,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	852
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,22,140,5,3
	.word	64957
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,22,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	852
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	852
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	852
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	852
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICR_Bits',0,22,150,5,3
	.word	65048
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,22,153,5,16,4,11
	.byte	'ISP',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,22,156,5,3
	.word	65190
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,22,159,5,16,4,11
	.byte	'RST',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	852
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	852
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRST0_Bits',0,22,164,5,3
	.word	65256
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,22,167,5,16,4,11
	.byte	'RST',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	852
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRST1_Bits',0,22,171,5,3
	.word	65367
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,22,174,5,16,4,11
	.byte	'CLR',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	852
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,22,178,5,3
	.word	65459
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,22,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	852
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	852
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	852
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,22,186,5,3
	.word	65555
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,22,189,5,16,4,11
	.byte	'EN0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,22,223,5,3
	.word	65661
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,22,226,5,16,4,11
	.byte	'EN32',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,22,132,6,3
	.word	66244
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,22,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	852
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,22,139,6,3
	.word	66837
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,22,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	852
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,22,146,6,3
	.word	66930
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,22,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	852
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,22,153,6,3
	.word	67023
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,22,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_OSEL_Bits',0,22,159,6,3
	.word	67116
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,22,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	852
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,22,166,6,3
	.word	67189
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,22,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	852
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0_Bits',0,22,174,6,3
	.word	67274
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,22,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	852
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1_Bits',0,22,182,6,3
	.word	67390
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,22,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	852
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,22,189,6,3
	.word	67501
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,22,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	852
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	852
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	852
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	852
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,22,200,6,3
	.word	67602
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,22,203,6,16,4,11
	.byte	'TA',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,22,206,6,3
	.word	67755
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,22,209,6,16,4,11
	.byte	'IED',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	852
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	852
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,22,224,6,3
	.word	67824
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,22,227,6,16,4,11
	.byte	'DAC',0,4
	.word	852
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,22,231,6,3
	.word	68108
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,22,234,6,16,4,11
	.byte	'CAC',0,4
	.word	852
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,22,238,6,3
	.word	68199
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,22,241,6,16,4,11
	.byte	'PSI',0,4
	.word	852
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,22,245,6,3
	.word	68290
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,22,248,6,16,4,11
	.byte	'FRE',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	852
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	852
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,22,130,7,3
	.word	68381
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,22,133,7,16,4,11
	.byte	'CDC',0,4
	.word	852
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	852
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	852
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	852
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	852
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,22,145,7,3
	.word	68584
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,22,148,7,16,4,11
	.byte	'EN0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,22,182,7,3
	.word	68789
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,22,185,7,16,4,11
	.byte	'EN32',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,22,219,7,3
	.word	69356
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,22,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	852
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_LA_Bits',0,22,226,7,3
	.word	69933
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,22,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	852
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_UA_Bits',0,22,233,7,3
	.word	70028
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,22,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	852
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	852
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	852
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,22,242,7,3
	.word	70123
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,22,245,7,16,4,11
	.byte	'EN0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,22,151,8,3
	.word	70251
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,22,154,8,16,4,11
	.byte	'EN32',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,22,188,8,3
	.word	70834
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,22,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	852
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,22,196,8,3
	.word	71427
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,22,199,8,16,4,11
	.byte	'EN0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,22,233,8,3
	.word	71545
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,22,236,8,16,4,11
	.byte	'EN32',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,22,142,9,3
	.word	72134
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,22,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	852
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	852
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,22,153,9,3
	.word	72733
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,22,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	852
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	852
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	852
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	852
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,22,171,9,3
	.word	72887
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,22,174,9,16,4,11
	.byte	'ASI',0,4
	.word	852
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	852
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,22,178,9,3
	.word	73186
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,22,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	852
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	852
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,22,189,9,3
	.word	73284
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,22,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	852
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	852
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,22,196,9,3
	.word	73456
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,22,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	852
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	852
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,22,203,9,3
	.word	73585
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,22,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	852
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	852
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,22,211,9,3
	.word	73715
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,22,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	852
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	852
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,22,218,9,3
	.word	73867
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,22,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	852
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	852
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	852
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,22,226,9,3
	.word	73994
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,22,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	852
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	852
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,22,233,9,3
	.word	74143
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,22,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	852
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	852
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	852
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	852
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	852
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	852
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,22,246,9,3
	.word	74257
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,22,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,22,252,9,3
	.word	74501
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,22,255,9,16,4,11
	.byte	'T0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	852
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,22,138,10,3
	.word	74581
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,22,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	852
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,22,144,10,3
	.word	74776
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,22,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	852
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	852
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	852
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	852
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	852
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,22,164,10,3
	.word	74849
	.byte	12,22,172,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56204
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,22,177,10,3
	.word	75167
	.byte	12,22,180,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56265
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,22,185,10,3
	.word	75226
	.byte	12,22,188,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56344
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OMASK',0,22,193,10,3
	.word	75287
	.byte	12,22,196,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56482
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OTAR',0,22,201,10,3
	.word	75354
	.byte	12,22,204,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56603
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_RABR',0,22,209,10,3
	.word	75420
	.byte	12,22,212,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56779
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,22,217,10,3
	.word	75486
	.byte	12,22,220,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56865
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,22,225,10,3
	.word	75547
	.byte	12,22,228,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56954
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,22,233,10,3
	.word	75609
	.byte	12,22,236,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57101
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,22,241,10,3
	.word	75672
	.byte	12,22,244,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57230
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID',0,22,249,10,3
	.word	75736
	.byte	12,22,252,10,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57330
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,22,129,11,3
	.word	75801
	.byte	12,22,132,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57425
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,22,137,11,3
	.word	75864
	.byte	12,22,140,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57520
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,22,145,11,3
	.word	75927
	.byte	12,22,148,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57630
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,22,153,11,3
	.word	75991
	.byte	12,22,156,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57722
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,22,161,11,3
	.word	76053
	.byte	12,22,164,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57876
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,22,169,11,3
	.word	76116
	.byte	12,22,172,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57970
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,22,177,11,3
	.word	76180
	.byte	12,22,180,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58033
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,22,185,11,3
	.word	76239
	.byte	12,22,188,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58259
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,22,193,11,3
	.word	76301
	.byte	12,22,196,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58474
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,22,201,11,3
	.word	76364
	.byte	12,22,204,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58568
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0',0,22,209,11,3
	.word	76428
	.byte	12,22,212,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58684
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,22,217,11,3
	.word	76491
	.byte	12,22,220,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58785
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,22,225,11,3
	.word	76554
	.byte	12,22,228,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58878
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,22,233,11,3
	.word	76615
	.byte	12,22,236,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58958
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,22,241,11,3
	.word	76678
	.byte	12,22,244,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59027
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,22,249,11,3
	.word	76741
	.byte	12,22,252,11,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59311
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,22,129,12,3
	.word	76804
	.byte	12,22,132,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59902
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,22,137,12,3
	.word	76884
	.byte	12,22,140,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60493
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,22,145,12,3
	.word	76964
	.byte	12,22,148,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61094
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,22,153,12,3
	.word	77044
	.byte	12,22,156,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61695
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,22,161,12,3
	.word	77124
	.byte	12,22,164,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61810
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,22,169,12,3
	.word	77198
	.byte	12,22,172,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61925
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,22,177,12,3
	.word	77272
	.byte	12,22,180,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62018
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,22,185,12,3
	.word	77333
	.byte	12,22,188,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62110
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,22,193,12,3
	.word	77395
	.byte	12,22,196,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62205
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,22,201,12,3
	.word	77458
	.byte	12,22,204,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62300
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,22,209,12,3
	.word	77521
	.byte	12,22,212,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62392
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,22,217,12,3
	.word	77583
	.byte	12,22,220,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62731
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,22,225,12,3
	.word	77645
	.byte	12,22,228,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62885
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,22,233,12,3
	.word	77708
	.byte	12,22,236,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62991
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON0',0,22,241,12,3
	.word	77769
	.byte	12,22,244,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63209
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON1',0,22,249,12,3
	.word	77836
	.byte	12,22,252,12,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63400
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON2',0,22,129,13,3
	.word	77903
	.byte	12,22,132,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63700
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON3',0,22,137,13,3
	.word	77970
	.byte	12,22,140,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64005
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON4',0,22,145,13,3
	.word	78037
	.byte	12,22,148,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64106
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,22,153,13,3
	.word	78104
	.byte	12,22,156,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64455
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,22,161,13,3
	.word	78174
	.byte	12,22,164,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64615
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,22,169,13,3
	.word	78244
	.byte	12,22,172,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64696
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,22,177,13,3
	.word	78313
	.byte	12,22,180,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64783
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,22,185,13,3
	.word	78384
	.byte	12,22,188,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64870
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,22,193,13,3
	.word	78455
	.byte	12,22,196,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64957
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,22,201,13,3
	.word	78526
	.byte	12,22,204,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65048
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICR',0,22,209,13,3
	.word	78588
	.byte	12,22,212,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65190
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,22,217,13,3
	.word	78649
	.byte	12,22,220,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65256
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRST0',0,22,225,13,3
	.word	78710
	.byte	12,22,228,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65367
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRST1',0,22,233,13,3
	.word	78773
	.byte	12,22,236,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65459
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRSTCLR',0,22,241,13,3
	.word	78836
	.byte	12,22,244,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65555
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,22,249,13,3
	.word	78901
	.byte	12,22,252,13,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65661
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,22,129,14,3
	.word	78962
	.byte	12,22,132,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66244
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,22,137,14,3
	.word	79038
	.byte	12,22,140,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66837
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,22,145,14,3
	.word	79114
	.byte	12,22,148,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66930
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,22,153,14,3
	.word	79177
	.byte	12,22,156,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67023
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,22,161,14,3
	.word	79240
	.byte	12,22,164,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67116
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_OSEL',0,22,169,14,3
	.word	79303
	.byte	12,22,172,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67189
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,22,177,14,3
	.word	79365
	.byte	12,22,180,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67274
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0',0,22,185,14,3
	.word	79425
	.byte	12,22,188,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67390
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1',0,22,193,14,3
	.word	79488
	.byte	12,22,196,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67501
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,22,201,14,3
	.word	79551
	.byte	12,22,204,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67602
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,22,209,14,3
	.word	79614
	.byte	12,22,212,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67755
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,22,217,14,3
	.word	79676
	.byte	12,22,220,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67824
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,22,225,14,3
	.word	79739
	.byte	12,22,228,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68108
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,22,233,14,3
	.word	79802
	.byte	12,22,236,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68199
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,22,241,14,3
	.word	79864
	.byte	12,22,244,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68290
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,22,249,14,3
	.word	79926
	.byte	12,22,252,14,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68381
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,22,129,15,3
	.word	79988
	.byte	12,22,132,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68584
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,22,137,15,3
	.word	80050
	.byte	12,22,140,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68789
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENA',0,22,145,15,3
	.word	80111
	.byte	12,22,148,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69356
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENB',0,22,153,15,3
	.word	80179
	.byte	12,22,156,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69933
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_LA',0,22,161,15,3
	.word	80247
	.byte	12,22,164,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70028
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_UA',0,22,169,15,3
	.word	80311
	.byte	12,22,172,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70123
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,22,177,15,3
	.word	80375
	.byte	12,22,180,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70251
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,22,185,15,3
	.word	80438
	.byte	12,22,188,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70834
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,22,193,15,3
	.word	80514
	.byte	12,22,196,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71427
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,22,201,15,3
	.word	80590
	.byte	12,22,204,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71545
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,22,209,15,3
	.word	80654
	.byte	12,22,212,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72134
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,22,217,15,3
	.word	80733
	.byte	12,22,220,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72733
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,22,225,15,3
	.word	80812
	.byte	12,22,228,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72887
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,22,233,15,3
	.word	80875
	.byte	12,22,236,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73186
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,22,241,15,3
	.word	80939
	.byte	12,22,244,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73284
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,22,249,15,3
	.word	81005
	.byte	12,22,252,15,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73456
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,22,129,16,3
	.word	81070
	.byte	12,22,132,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73585
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,22,137,16,3
	.word	81146
	.byte	12,22,140,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73715
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,22,145,16,3
	.word	81224
	.byte	12,22,148,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73867
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,22,153,16,3
	.word	81302
	.byte	12,22,156,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73994
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,22,161,16,3
	.word	81379
	.byte	12,22,164,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74143
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,22,169,16,3
	.word	81456
	.byte	12,22,172,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74257
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,22,177,16,3
	.word	81527
	.byte	12,22,180,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74501
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,22,185,16,3
	.word	81599
	.byte	12,22,188,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74581
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,22,193,16,3
	.word	81666
	.byte	12,22,196,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74776
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,22,201,16,3
	.word	81732
	.byte	12,22,204,16,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74849
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,22,209,16,3
	.word	81796
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,22,221,16,25,16,13
	.byte	'LA',0
	.word	80247
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	80311
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	80111
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	80179
	.byte	4,2,35,12,0,14
	.word	81860
	.byte	32
	.byte	'Ifx_CPU_RGN',0,22,227,16,3
	.word	81936
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,22,242,16,25,12,13
	.byte	'RABR',0
	.word	75420
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	75354
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	75287
	.byte	4,2,35,8,0,14
	.word	81962
	.byte	32
	.byte	'Ifx_CPU_BLK',0,22,247,16,3
	.word	82025
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,22,134,17,25,28,13
	.byte	'CON',0
	.word	78104
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	78244
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	78174
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3486
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	78313
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	78384
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	78455
	.byte	4,2,35,24,0,14
	.word	82051
	.byte	32
	.byte	'Ifx_CPU_FPU_TRAP',0,22,143,17,3
	.word	82176
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,22,158,17,25,8,13
	.byte	'L',0
	.word	77395
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	77458
	.byte	4,2,35,4,0,14
	.word	82207
	.byte	32
	.byte	'Ifx_CPU_DPR',0,22,162,17,3
	.word	82249
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,22,177,17,25,8,13
	.byte	'L',0
	.word	75801
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	75864
	.byte	4,2,35,4,0,14
	.word	82275
	.byte	32
	.byte	'Ifx_CPU_CPR',0,22,181,17,3
	.word	82317
	.byte	18,12
	.word	81599
	.byte	19,2,0,10
	.byte	'_Ifx_CPU_TPS',0,22,196,17,25,16,13
	.byte	'CON',0
	.word	81005
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	82343
	.byte	12,2,35,4,0,14
	.word	82352
	.byte	32
	.byte	'Ifx_CPU_TPS',0,22,200,17,3
	.word	82400
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,22,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	81224
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	81146
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	81379
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	81302
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	81070
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	81527
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	81456
	.byte	4,2,35,24,0,14
	.word	82426
	.byte	32
	.byte	'Ifx_CPU_TPS_EXTIM',0,22,224,17,3
	.word	82575
	.byte	10
	.byte	'_Ifx_CPU_TR',0,22,239,17,25,8,13
	.byte	'EVT',0
	.word	81796
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	81732
	.byte	4,2,35,4,0,14
	.word	82607
	.byte	32
	.byte	'Ifx_CPU_TR',0,22,243,17,3
	.word	82652
	.byte	18,128,34
	.word	453
	.byte	19,255,33,0,18,236,253,2
	.word	453
	.byte	19,235,253,2,0,18,244,31
	.word	453
	.byte	19,243,31,0,18,128,1
	.word	81860
	.byte	19,7,0,14
	.word	82712
	.byte	18,232,1
	.word	453
	.byte	19,231,1,0,18,128,48
	.word	453
	.byte	19,255,47,0,18,128,3
	.word	81962
	.byte	19,31,0,14
	.word	82749
	.byte	18,160,39
	.word	453
	.byte	19,159,39,0,18,208,223,1
	.word	453
	.byte	19,207,223,1,0,18,248,1
	.word	453
	.byte	19,247,1,0,18,244,29
	.word	453
	.byte	19,243,29,0,18,188,3
	.word	453
	.byte	19,187,3,0,18,232,3
	.word	453
	.byte	19,231,3,0,18,252,23
	.word	453
	.byte	19,251,23,0,14
	.word	82051
	.byte	18,228,63
	.word	453
	.byte	19,227,63,0,18,144,1
	.word	82207
	.byte	19,17,0,14
	.word	82859
	.byte	18,240,30
	.word	453
	.byte	19,239,30,0,18,80
	.word	82275
	.byte	19,9,0,14
	.word	82885
	.byte	18,176,31
	.word	453
	.byte	19,175,31,0,18,152,7
	.word	453
	.byte	19,151,7,0,14
	.word	82352
	.byte	18,48
	.word	453
	.byte	19,47,0,14
	.word	82426
	.byte	18,164,23
	.word	453
	.byte	19,163,23,0,18,64
	.word	82607
	.byte	19,7,0,14
	.word	82951
	.byte	18,192,23
	.word	453
	.byte	19,191,23,0,18,28
	.word	453
	.byte	19,27,0,18,180,1
	.word	453
	.byte	19,179,1,0,18,172,1
	.word	453
	.byte	19,171,1,0,18,64
	.word	76180
	.byte	19,15,0,18,64
	.word	453
	.byte	19,63,0,18,64
	.word	75167
	.byte	19,15,0,10
	.byte	'_Ifx_CPU',0,22,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	82677
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	77769
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	77836
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	77903
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	77970
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	78037
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	82688
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	78710
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	78773
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	78836
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	82701
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	82722
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	5306
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	80654
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	80733
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	5306
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	80654
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	80733
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	5306
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	80654
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	80733
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	5306
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	80654
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	80733
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	5306
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	80654
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	80733
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	5306
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	80654
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	80733
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	5306
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	80654
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	80733
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	5306
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	80654
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	80733
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	80438
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	80514
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	5306
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	78962
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	79038
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	82727
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	77124
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	77198
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	76884
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	77044
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	77124
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	77198
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	76884
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	77044
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	77124
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	77198
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	76884
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	77044
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	77124
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	77198
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	76884
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	77044
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	77124
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	77198
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	76884
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	77044
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	77124
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	77198
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	76884
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	77044
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	77124
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	77198
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	76884
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	77044
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	77124
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	77198
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	76884
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	77044
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	5306
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	76804
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	76964
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	5306
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	76804
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	76964
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	5306
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	76804
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	76964
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	5306
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	76804
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	76964
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	5306
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	76804
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	76964
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	5306
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	76804
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	76964
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	5306
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	76804
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	76964
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	5306
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	76804
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	76964
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	82738
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	79303
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	5646
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	82759
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	82764
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	80375
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	82775
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	80939
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	82788
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	79802
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	79864
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	79926
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	82799
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	76491
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	5306
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	80590
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	77583
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	3486
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	76239
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	76615
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	76678
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	76741
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	4677
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	76428
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	82810
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	79988
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	79488
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	79551
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	79425
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	79676
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	79739
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	82821
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	75672
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	82832
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	82843
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	82848
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	82869
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	82874
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	82894
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	82899
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	75991
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	75991
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	75991
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	75991
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	77333
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	77333
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	77333
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	77333
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	77521
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	77521
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	77521
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	77521
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	53986
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	75991
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	75991
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	5306
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	77333
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	77333
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	5306
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	77521
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	77521
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	82910
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	82921
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	82926
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	82935
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	82940
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	82960
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	82965
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	75609
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	75547
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	78526
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	79114
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	79177
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	79240
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	82727
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	76301
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	3486
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	77645
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	76053
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	80812
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	82976
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	81666
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	5646
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	77272
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	76554
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	76364
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	82985
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	79614
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	80050
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	79365
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	5306
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	80875
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	75927
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	75736
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	75226
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	75486
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	78649
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	78588
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	5306
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	77708
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	78901
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	53986
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	76116
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	82996
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	83007
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	83016
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	83025
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	83016
	.byte	64,4,35,192,255,7,0,14
	.word	83034
	.byte	32
	.byte	'Ifx_CPU',0,22,210,19,3
	.word	88132
	.byte	15,8,124,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_2',0,2,16
	.byte	'IfxCpu_Id_3',0,3,16
	.byte	'IfxCpu_Id_4',0,4,16
	.byte	'IfxCpu_Id_6',0,6,16
	.byte	'IfxCpu_Id_none',0,7,0,32
	.byte	'IfxCpu_Id',0,8,133,1,3
	.word	88154
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,8,170,1,3
	.word	2001
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,23,68,16,4,11
	.byte	'EN0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_STM_ACCEN0_Bits',0,23,102,3
	.word	88308
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,23,105,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1_Bits',0,23,108,3
	.word	88865
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,23,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAP_Bits',0,23,114,3
	.word	88942
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,23,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV_Bits',0,23,120,3
	.word	89015
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,23,123,16,4,11
	.byte	'DISR',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	430
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_CLC_Bits',0,23,130,1,3
	.word	89092
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,23,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	453
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	453
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	453
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	453
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	453
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	453
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	453
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	453
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_STM_CMCON_Bits',0,23,143,1,3
	.word	89234
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,23,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CMP_Bits',0,23,149,1,3
	.word	89454
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,23,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	430
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_STM_ICR_Bits',0,23,162,1,3
	.word	89523
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,23,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	453
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_STM_ID_Bits',0,23,170,1,3
	.word	89726
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,23,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	430
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_ISCR_Bits',0,23,180,1,3
	.word	89830
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,23,183,1,16,4,11
	.byte	'RST',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	430
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST0_Bits',0,23,188,1,3
	.word	89981
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,23,191,1,16,4,11
	.byte	'RST',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	430
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST1_Bits',0,23,195,1,3
	.word	90092
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,23,198,1,16,4,11
	.byte	'CLR',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	430
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,23,202,1,3
	.word	90184
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,23,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	453
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	430
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	453
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	453
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_STM_OCS_Bits',0,23,213,1,3
	.word	90280
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,23,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0_Bits',0,23,219,1,3
	.word	90448
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,23,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV_Bits',0,23,225,1,3
	.word	90521
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,23,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM1_Bits',0,23,231,1,3
	.word	90598
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,23,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM2_Bits',0,23,237,1,3
	.word	90671
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,23,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM3_Bits',0,23,243,1,3
	.word	90744
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,23,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM4_Bits',0,23,249,1,3
	.word	90818
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,23,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM5_Bits',0,23,255,1,3
	.word	90892
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,23,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM6_Bits',0,23,133,2,3
	.word	90966
	.byte	12,23,141,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88308
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN0',0,23,146,2,3
	.word	91040
	.byte	12,23,149,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88865
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1',0,23,154,2,3
	.word	91104
	.byte	12,23,157,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88942
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAP',0,23,162,2,3
	.word	91168
	.byte	12,23,165,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89015
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV',0,23,170,2,3
	.word	91229
	.byte	12,23,173,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89092
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CLC',0,23,178,2,3
	.word	91292
	.byte	12,23,181,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89234
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMCON',0,23,186,2,3
	.word	91353
	.byte	12,23,189,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89454
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMP',0,23,194,2,3
	.word	91416
	.byte	12,23,197,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89523
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ICR',0,23,202,2,3
	.word	91477
	.byte	12,23,205,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89726
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ID',0,23,210,2,3
	.word	91538
	.byte	12,23,213,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89830
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ISCR',0,23,218,2,3
	.word	91598
	.byte	12,23,221,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89981
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST0',0,23,226,2,3
	.word	91660
	.byte	12,23,229,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90092
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST1',0,23,234,2,3
	.word	91723
	.byte	12,23,237,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90184
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR',0,23,242,2,3
	.word	91786
	.byte	12,23,245,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90280
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_OCS',0,23,250,2,3
	.word	91851
	.byte	12,23,253,2,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90448
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0',0,23,130,3,3
	.word	91912
	.byte	12,23,133,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90521
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV',0,23,138,3,3
	.word	91974
	.byte	12,23,141,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90598
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM1',0,23,146,3,3
	.word	92038
	.byte	12,23,149,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90671
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM2',0,23,154,3,3
	.word	92100
	.byte	12,23,157,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90744
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM3',0,23,162,3,3
	.word	92162
	.byte	12,23,165,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90818
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM4',0,23,170,3,3
	.word	92224
	.byte	12,23,173,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90892
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM5',0,23,178,3,3
	.word	92286
	.byte	12,23,181,3,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90966
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM6',0,23,186,3,3
	.word	92348
	.byte	15,7,141,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,7,145,1,3
	.word	92410
	.byte	31,7,198,1,9,6,13
	.byte	'counter',0
	.word	2248
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	453
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,7,202,1,3
	.word	92499
	.byte	31,7,210,1,9,32,13
	.byte	'instruction',0
	.word	92499
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	92499
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	92499
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	92499
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	92499
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,7,217,1,3
	.word	92565
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,10,102,3
	.word	8834
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,10,108,3
	.word	8747
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,10,130,1,3
	.word	5315
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,10,138,1,3
	.word	3366
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,10,160,1,3
	.word	4362
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,10,173,1,3
	.word	3495
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,10,186,1,3
	.word	4142
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,10,199,1,3
	.word	3710
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,10,212,1,3
	.word	3925
	.byte	32
	.byte	'Ifx_P_LPCR_Bits',0,10,231,1,3
	.word	8409
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,10,253,1,3
	.word	8061
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,10,136,2,3
	.word	7048
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,10,146,2,3
	.word	7572
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,10,157,2,3
	.word	7222
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,10,168,2,3
	.word	7396
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,10,205,2,3
	.word	2795
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,10,227,2,3
	.word	7728
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,10,237,2,3
	.word	6385
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,10,248,2,3
	.word	6873
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,10,131,3,3
	.word	6532
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,10,142,3,3
	.word	6701
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,10,164,3,3
	.word	2479
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,10,187,3,3
	.word	6021
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,10,209,3,3
	.word	5655
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,10,230,3,3
	.word	4686
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,10,251,3,3
	.word	4990
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,10,136,4,3
	.word	9361
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,10,144,4,3
	.word	8794
	.byte	32
	.byte	'Ifx_P_ESR',0,10,152,4,3
	.word	5606
	.byte	32
	.byte	'Ifx_P_ID',0,10,160,4,3
	.word	3446
	.byte	32
	.byte	'Ifx_P_IN',0,10,168,4,3
	.word	4637
	.byte	32
	.byte	'Ifx_P_IOCR0',0,10,176,4,3
	.word	3670
	.byte	32
	.byte	'Ifx_P_IOCR12',0,10,184,4,3
	.word	4322
	.byte	32
	.byte	'Ifx_P_IOCR4',0,10,192,4,3
	.word	3885
	.byte	32
	.byte	'Ifx_P_IOCR8',0,10,200,4,3
	.word	4102
	.byte	32
	.byte	'Ifx_P_LPCR',0,10,208,4,3
	.word	8689
	.byte	32
	.byte	'Ifx_P_OMCR',0,10,216,4,3
	.word	8369
	.byte	32
	.byte	'Ifx_P_OMCR0',0,10,224,4,3
	.word	7182
	.byte	32
	.byte	'Ifx_P_OMCR12',0,10,232,4,3
	.word	7688
	.byte	32
	.byte	'Ifx_P_OMCR4',0,10,240,4,3
	.word	7356
	.byte	32
	.byte	'Ifx_P_OMCR8',0,10,248,4,3
	.word	7532
	.byte	32
	.byte	'Ifx_P_OMR',0,10,128,5,3
	.word	3326
	.byte	32
	.byte	'Ifx_P_OMSR',0,10,136,5,3
	.word	8021
	.byte	32
	.byte	'Ifx_P_OMSR0',0,10,144,5,3
	.word	6492
	.byte	32
	.byte	'Ifx_P_OMSR12',0,10,152,5,3
	.word	7008
	.byte	32
	.byte	'Ifx_P_OMSR4',0,10,160,5,3
	.word	6661
	.byte	32
	.byte	'Ifx_P_OMSR8',0,10,168,5,3
	.word	6833
	.byte	32
	.byte	'Ifx_P_OUT',0,10,176,5,3
	.word	2755
	.byte	32
	.byte	'Ifx_P_PCSR',0,10,184,5,3
	.word	6345
	.byte	32
	.byte	'Ifx_P_PDISC',0,10,192,5,3
	.word	5981
	.byte	32
	.byte	'Ifx_P_PDR0',0,10,200,5,3
	.word	4950
	.byte	32
	.byte	'Ifx_P_PDR1',0,10,208,5,3
	.word	5266
	.byte	14
	.word	9401
	.byte	32
	.byte	'Ifx_P',0,10,128,6,3
	.word	93877
	.byte	15,9,73,9,1,16
	.byte	'IfxPort_ControlledBy_port',0,0,16
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,32
	.byte	'IfxPort_ControlledBy',0,9,77,3
	.word	93897
	.byte	32
	.byte	'IfxPort_InputMode',0,9,87,3
	.word	9981
	.byte	15,9,91,9,1,16
	.byte	'IfxPort_LvdsMode_high',0,0,16
	.byte	'IfxPort_LvdsMode_medium',0,1,0,32
	.byte	'IfxPort_LvdsMode',0,9,95,3
	.word	94014
	.byte	32
	.byte	'IfxPort_OutputIdx',0,9,136,1,3
	.word	10282
	.byte	32
	.byte	'IfxPort_OutputMode',0,9,145,1,3
	.word	10186
	.byte	15,9,151,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,32
	.byte	'IfxPort_PadDriver',0,9,165,1,3
	.word	94150
	.byte	15,9,169,1,9,1,16
	.byte	'IfxPort_PadSupply_3v',0,0,16
	.byte	'IfxPort_PadSupply_5v',0,1,0,32
	.byte	'IfxPort_PadSupply',0,9,173,1,3
	.word	94600
	.byte	15,9,177,1,9,1,16
	.byte	'IfxPort_PinFunctionMode_digital',0,0,16
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,32
	.byte	'IfxPort_PinFunctionMode',0,9,181,1,3
	.word	94680
	.byte	32
	.byte	'IfxPort_State',0,9,193,1,3
	.word	10595
	.byte	31,9,246,1,9,8,13
	.byte	'port',0
	.word	9976
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	453
	.byte	1,2,35,4,0,32
	.byte	'IfxPort_Pin',0,9,250,1,3
	.word	94810
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,24,68,16,4,11
	.byte	'EN0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_ACCEN0_Bits',0,24,102,3
	.word	94870
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,24,105,16,4,11
	.byte	'reserved_0',0,4
	.word	430
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN1_Bits',0,24,108,3
	.word	95427
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,24,111,16,4,11
	.byte	'DF0',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	453
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	453
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	453
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	453
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_AD_Bits',0,24,145,1,3
	.word	95504
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,24,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	453
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	453
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	453
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	453
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	453
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	453
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	453
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	453
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	453
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	453
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	453
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	453
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	453
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	453
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	453
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	453
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	453
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	453
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	453
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	453
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	453
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	453
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SMU_AEX_Bits',0,24,176,1,3
	.word	96054
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,24,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	852
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	852
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_SMU_AEXCLR_Bits',0,24,207,1,3
	.word	96611
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,24,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	453
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	1004
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1004
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	453
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	453
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_AFCNT_Bits',0,24,217,1,3
	.word	97207
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,24,220,1,16,4,11
	.byte	'SF0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AG_Bits',0,24,254,1,3
	.word	97347
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,24,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	852
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	852
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	852
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	852
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	852
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	852
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	852
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGC_Bits',0,24,142,2,3
	.word	97898
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,24,145,2,16,4,11
	.byte	'CF0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGCF_Bits',0,24,179,2,3
	.word	98160
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,24,182,2,16,4,11
	.byte	'FE0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGFSP_Bits',0,24,216,2,3
	.word	98715
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,24,219,2,16,4,11
	.byte	'DISR',0,1
	.word	453
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	453
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	430
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SMU_CLC_Bits',0,24,226,2,3
	.word	99272
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,24,229,2,16,4,11
	.byte	'CMD',0,4
	.word	852
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	852
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	852
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SMU_CMD_Bits',0,24,234,2,3
	.word	99415
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,24,237,2,16,4,11
	.byte	'SSM',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	430
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SMU_DBG_Bits',0,24,241,2,3
	.word	99518
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,24,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	852
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	852
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	852
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	852
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	852
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_SMU_FSP_Bits',0,24,252,2,3
	.word	99606
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,24,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	453
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	453
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	1004
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SMU_ID_Bits',0,24,132,3,3
	.word	99761
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,24,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	852
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	852
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	852
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SMU_KEYS_Bits',0,24,140,3,3
	.word	99871
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,24,143,3,16,4,11
	.byte	'TGS',0,1
	.word	453
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	453
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	453
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	430
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	453
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	453
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	453
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	453
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SMU_OCS_Bits',0,24,153,3,3
	.word	99983
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,24,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	852
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	852
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	852
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	852
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	852
	.byte	9,0,2,35,0,0,32
	.byte	'Ifx_SMU_PCTL_Bits',0,24,167,3,3
	.word	100175
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,24,170,3,16,4,11
	.byte	'TE0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMCTL_Bits',0,24,204,3,3
	.word	100406
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,24,207,3,16,4,11
	.byte	'EF0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMEF_Bits',0,24,241,3,3
	.word	101110
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,24,244,3,16,4,11
	.byte	'STS0',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	852
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	852
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	852
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	852
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	852
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	852
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	852
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	852
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	852
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	852
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	852
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	852
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	852
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	852
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	852
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	852
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	852
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	852
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	852
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	852
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	852
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	852
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	852
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMSTS_Bits',0,24,150,4,3
	.word	101812
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,24,153,4,16,4,11
	.byte	'GID0',0,4
	.word	852
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	852
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	852
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	852
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	852
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	852
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC00_Bits',0,24,161,4,3
	.word	102527
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,24,164,4,16,4,11
	.byte	'GID2',0,4
	.word	852
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	852
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	852
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	852
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	852
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	852
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC01_Bits',0,24,172,4,3
	.word	102695
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,24,175,4,16,4,11
	.byte	'GID0',0,4
	.word	852
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	852
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	852
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	852
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	852
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	852
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC10_Bits',0,24,183,4,3
	.word	102863
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,24,186,4,16,4,11
	.byte	'GID2',0,4
	.word	852
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	852
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	852
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	852
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	852
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	852
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC11_Bits',0,24,194,4,3
	.word	103031
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,24,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	852
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	852
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	852
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	852
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTC_Bits',0,24,203,4,3
	.word	103199
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,24,206,4,16,4,11
	.byte	'CMD',0,4
	.word	852
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	852
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	852
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	852
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	852
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	852
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	852
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	852
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	852
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	852
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	852
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	852
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_SMU_STS_Bits',0,24,220,4,3
	.word	103319
	.byte	12,24,228,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94870
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN0',0,24,233,4,3
	.word	103574
	.byte	12,24,236,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95427
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN1',0,24,241,4,3
	.word	103638
	.byte	12,24,244,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95504
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AD',0,24,249,4,3
	.word	103702
	.byte	12,24,252,4,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96054
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AEX',0,24,129,5,3
	.word	103762
	.byte	12,24,132,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96611
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AEXCLR',0,24,137,5,3
	.word	103823
	.byte	12,24,140,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97207
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AFCNT',0,24,145,5,3
	.word	103887
	.byte	12,24,148,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97347
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AG',0,24,153,5,3
	.word	103950
	.byte	12,24,156,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97898
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGC',0,24,161,5,3
	.word	104010
	.byte	12,24,164,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98160
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGCF',0,24,169,5,3
	.word	104071
	.byte	12,24,172,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98715
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGFSP',0,24,177,5,3
	.word	104133
	.byte	12,24,180,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99272
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_CLC',0,24,185,5,3
	.word	104196
	.byte	12,24,188,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99415
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_CMD',0,24,193,5,3
	.word	104257
	.byte	12,24,196,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99518
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_DBG',0,24,201,5,3
	.word	104318
	.byte	12,24,204,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99606
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_FSP',0,24,209,5,3
	.word	104379
	.byte	12,24,212,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99761
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ID',0,24,217,5,3
	.word	104440
	.byte	12,24,220,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99871
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_KEYS',0,24,225,5,3
	.word	104500
	.byte	12,24,228,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99983
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_OCS',0,24,233,5,3
	.word	104562
	.byte	12,24,236,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100175
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_PCTL',0,24,241,5,3
	.word	104623
	.byte	12,24,244,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100406
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMCTL',0,24,249,5,3
	.word	104685
	.byte	12,24,252,5,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101110
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMEF',0,24,129,6,3
	.word	104748
	.byte	12,24,132,6,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101812
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMSTS',0,24,137,6,3
	.word	104810
	.byte	12,24,140,6,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102527
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC00',0,24,145,6,3
	.word	104873
	.byte	12,24,148,6,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102695
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC01',0,24,153,6,3
	.word	104937
	.byte	12,24,156,6,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102863
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC10',0,24,161,6,3
	.word	105001
	.byte	12,24,164,6,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103031
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC11',0,24,169,6,3
	.word	105065
	.byte	12,24,172,6,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103199
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTC',0,24,177,6,3
	.word	105129
	.byte	12,24,180,6,9,4,13
	.byte	'U',0
	.word	430
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	446
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103319
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_STS',0,24,185,6,3
	.word	105190
	.byte	15,11,210,2,9,1,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,32
	.byte	'IfxScuCcu_LowPowerDivRatio',0,11,216,2,3
	.word	105251
	.byte	15,11,220,2,9,1,16
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,16
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,16
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,16
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,32
	.byte	'IfxScuCcu_ModulationAmplitude',0,11,229,2,3
	.word	105444
	.byte	15,11,254,3,9,1,16
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,16
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,16
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,32
	.byte	'IfxScuCcu_PllInputClockSelection',0,11,131,4,3
	.word	105745
	.byte	15,11,135,4,9,1,16
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,16
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,16
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,16
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,32
	.byte	'IfxScuCcu_Traprequest',0,11,141,4,3
	.word	105919
	.byte	15,11,147,4,9,1,16
	.byte	'IfxScuCcu_ModEn_disabled',0,0,16
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,32
	.byte	'IfxScuCcu_ModEn',0,11,151,4,3
	.word	106073
	.byte	31,11,162,4,9,6,13
	.byte	'pDivider',0
	.word	453
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	453
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	453
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	453
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	453
	.byte	1,2,35,4,0,32
	.byte	'IfxScuCcu_PerPllConfig',0,11,171,4,3
	.word	106158
	.byte	31,11,176,4,9,4,13
	.byte	'pDivider',0
	.word	453
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	453
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	453
	.byte	1,2,35,2,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,11,181,4,3
	.word	106296
	.byte	31,11,189,4,9,8,13
	.byte	'value',0
	.word	2248
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	2248
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,11,193,4,3
	.word	106390
	.byte	31,11,197,4,9,6,13
	.byte	'k2Step',0
	.word	453
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	226
	.byte	4,2,35,2,0,32
	.byte	'IfxScuCcu_PllStepConfig',0,11,201,4,3
	.word	106461
	.byte	31,11,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	2248
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	105745
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	106296
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	106158
	.byte	6,2,35,10,0,32
	.byte	'IfxScuCcu_pllsParameterConfig',0,11,211,4,3
	.word	106535
	.byte	31,11,219,4,9,8,13
	.byte	'value',0
	.word	2248
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	2248
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,11,223,4,3
	.word	106680
	.byte	31,11,231,4,9,80,13
	.byte	'ccucon0',0
	.word	106390
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	106390
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	106390
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	106390
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	106390
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	106390
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	106390
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	106390
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	106390
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	106390
	.byte	8,2,35,72,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,11,243,4,3
	.word	106756
	.byte	31,11,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	106535
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	226
	.byte	4,2,35,16,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,11,251,4,3
	.word	106978
	.byte	20
	.word	106461
	.byte	3
	.word	107064
	.byte	31,11,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	453
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	107069
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_PllThrottleConfig',0,11,131,5,3
	.word	107074
	.byte	31,11,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	106073
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	105444
	.byte	1,2,35,1,0,32
	.byte	'IfxScuCcu_Mod_Config',0,11,141,5,3
	.word	107156
	.byte	31,25,56,15,16,13
	.byte	'module',0
	.word	16405
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	94810
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	19749
	.byte	1,2,35,12,0,20
	.word	107230
	.byte	32
	.byte	'IfxQspi_Mrst_In',0,25,61,3
	.word	107281
	.byte	31,25,64,15,16,13
	.byte	'module',0
	.word	16405
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	94810
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	19749
	.byte	1,2,35,12,0,20
	.word	107310
	.byte	32
	.byte	'IfxQspi_Mtsr_In',0,25,69,3
	.word	107361
	.byte	31,25,72,15,16,13
	.byte	'module',0
	.word	16405
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	94810
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	19749
	.byte	1,2,35,12,0,20
	.word	107390
	.byte	32
	.byte	'IfxQspi_Sclk_In',0,25,77,3
	.word	107441
	.byte	31,25,80,15,16,13
	.byte	'module',0
	.word	16405
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	94810
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	19749
	.byte	1,2,35,12,0,20
	.word	107470
	.byte	32
	.byte	'IfxQspi_Slsi_In',0,25,85,3
	.word	107521
	.byte	31,25,96,15,16,13
	.byte	'module',0
	.word	16405
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	94810
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10282
	.byte	1,2,35,12,0,20
	.word	107550
	.byte	32
	.byte	'IfxQspi_Mrst_Out',0,25,101,3
	.word	107601
	.byte	31,25,104,15,16,13
	.byte	'module',0
	.word	16405
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	94810
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10282
	.byte	1,2,35,12,0,20
	.word	107631
	.byte	32
	.byte	'IfxQspi_Mtsr_Out',0,25,109,3
	.word	107682
	.byte	31,25,112,15,16,13
	.byte	'module',0
	.word	16405
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	94810
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10282
	.byte	1,2,35,12,0,20
	.word	107712
	.byte	32
	.byte	'IfxQspi_Sclk_Out',0,25,117,3
	.word	107763
	.byte	31,25,120,15,20,13
	.byte	'module',0
	.word	16405
	.byte	4,2,35,0,13
	.byte	'slsoNr',0
	.word	18393
	.byte	4,2,35,4,13
	.byte	'pin',0
	.word	94810
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	10282
	.byte	1,2,35,16,0,20
	.word	107793
	.byte	32
	.byte	'IfxQspi_Slso_Out',0,25,126,3
	.word	107860
	.byte	15,12,94,9,1,16
	.byte	'IfxQspi_CaptureControlEdgeConfiguration_rrMode',0,0,16
	.byte	'IfxQspi_CaptureControlEdgeConfiguration_rfMode',0,1,16
	.byte	'IfxQspi_CaptureControlEdgeConfiguration_frMode',0,2,16
	.byte	'IfxQspi_CaptureControlEdgeConfiguration_ffMode',0,3,0,32
	.byte	'IfxQspi_CaptureControlEdgeConfiguration',0,12,100,3
	.word	107890
	.byte	15,12,104,9,1,16
	.byte	'IfxQspi_CaptureControlInputSelection_inputA',0,0,16
	.byte	'IfxQspi_CaptureControlInputSelection_inputB',0,1,16
	.byte	'IfxQspi_CaptureControlInputSelection_inputC',0,2,16
	.byte	'IfxQspi_CaptureControlInputSelection_inputD',0,3,0,32
	.byte	'IfxQspi_CaptureControlInputSelection',0,12,110,3
	.word	108140
	.byte	32
	.byte	'IfxQspi_ChannelId',0,12,131,1,3
	.word	17454
	.byte	15,12,181,1,9,1,16
	.byte	'IfxQspi_Mode_master',0,0,16
	.byte	'IfxQspi_Mode_pwmOverQspi',0,1,16
	.byte	'IfxQspi_Mode_slave',0,2,0,32
	.byte	'IfxQspi_Mode',0,12,186,1,3
	.word	108402
	.byte	32
	.byte	'IfxQspi_Phase',0,12,209,1,3
	.word	16465
	.byte	15,12,213,1,9,1,16
	.byte	'IfxQspi_PhaseTransitionEvent_endOfWait',0,0,16
	.byte	'IfxQspi_PhaseTransitionEvent_serialClockPolarityChange',0,1,16
	.byte	'IfxQspi_PhaseTransitionEvent_startOfFrame',0,2,16
	.byte	'IfxQspi_PhaseTransitionEvent_transmitBufferEmptied',0,3,16
	.byte	'IfxQspi_PhaseTransitionEvent_receiveBufferFilled',0,4,16
	.byte	'IfxQspi_PhaseTransitionEvent_endOfFrame',0,5,16
	.byte	'IfxQspi_PhaseTransitionEvent_dataNotAvailable',0,6,16
	.byte	'IfxQspi_PhaseTransitionEvent_endOfExpect',0,7,0,32
	.byte	'IfxQspi_PhaseTransitionEvent',0,12,223,1,3
	.word	108524
	.byte	15,12,227,1,9,1,16
	.byte	'IfxQspi_Reset_none',0,0,16
	.byte	'IfxQspi_Reset_stateMachineAndFifo',0,1,16
	.byte	'IfxQspi_Reset_registers',0,2,16
	.byte	'IfxQspi_Reset_kernel',0,3,0,32
	.byte	'IfxQspi_Reset',0,12,233,1,3
	.word	108948
	.byte	15,12,237,1,9,1,16
	.byte	'IfxQspi_RxFifoInt_0',0,0,16
	.byte	'IfxQspi_RxFifoInt_1',0,1,16
	.byte	'IfxQspi_RxFifoInt_2',0,2,16
	.byte	'IfxQspi_RxFifoInt_3',0,3,0,32
	.byte	'IfxQspi_RxFifoInt',0,12,243,1,3
	.word	109084
	.byte	15,12,248,1,9,1,16
	.byte	'IfxQspi_SleepMode_enable',0,0,16
	.byte	'IfxQspi_SleepMode_disable',0,1,0,32
	.byte	'IfxQspi_SleepMode',0,12,252,1,3
	.word	109206
	.byte	15,12,166,2,9,1,16
	.byte	'IfxQspi_TxFifoInt_1',0,0,16
	.byte	'IfxQspi_TxFifoInt_2',0,1,16
	.byte	'IfxQspi_TxFifoInt_3',0,2,16
	.byte	'IfxQspi_TxFifoInt_4',0,3,0,32
	.byte	'IfxQspi_TxFifoInt',0,12,172,2,3
	.word	109295
	.byte	15,12,178,2,9,1,16
	.byte	'IfxQspi_FifoMode_combinedMove',0,0,16
	.byte	'IfxQspi_FifoMode_singleMove',0,1,16
	.byte	'IfxQspi_FifoMode_batchMove',0,2,0,32
	.byte	'IfxQspi_FifoMode',0,12,183,2,3
	.word	109417
	.byte	15,12,187,2,9,1,16
	.byte	'IfxQspi_SuspendMode_none',0,0,16
	.byte	'IfxQspi_SuspendMode_hard',0,1,16
	.byte	'IfxQspi_SuspendMode_soft',0,2,0,32
	.byte	'IfxQspi_SuspendMode',0,12,192,2,3
	.word	109541
	.byte	32
	.byte	'IfxQspi_DelayConst',0,12,205,2,3
	.word	18172
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L108:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,1,49
	.byte	19,0,0,26,5,0,49,19,0,0,27,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,28,46,0,3,8,58,15,59
	.byte	15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,29,29,1,49,19,0,0,30,11,0,49,19,0,0,31,19,1,58,15,59,15,57
	.byte	15,11,15,0,0,32,22,0,3,8,58,15,59,15,57,15,73,19,0,0,33,21,1,54,15,39,12,0,0,34,21,1,73,19,54,15,39,12
	.byte	0,0,35,21,0,54,15,0,0,36,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L109:
	.word	.L455-.L454
.L454:
	.half	3
	.word	.L457-.L456
.L456:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxScuWdt.h',0,4,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxPort.h',0,6,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,4,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.h',0,0,0,0
	.byte	'IfxQspi_regdef.h',0,3,0,0
	.byte	'SpiIf.h',0,7,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxQspi_cfg.h',0,5,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,5,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0
	.byte	'IfxQspi_PinMap.h',0,8,0,0,0
.L457:
.L455:
	.sdecl	'.debug_info',debug,cluster('IfxQspi_read16')
	.sect	'.debug_info'
.L110:
	.word	293
	.half	3
	.word	.L111
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L113,.L112
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_read16',0,1,185,2,6,1,1,1
	.word	.L85,.L200,.L84
	.byte	4
	.byte	'qspi',0,1,185,2,31
	.word	.L201,.L202
	.byte	4
	.byte	'data',0,1,185,2,45
	.word	.L203,.L204
	.byte	4
	.byte	'count',0,1,185,2,61
	.word	.L205,.L206
	.byte	5
	.word	.L85,.L200
	.byte	6
	.byte	'rxFifo',0,1,187,2,31
	.word	.L207,.L208
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_read16')
	.sect	'.debug_abbrev'
.L111:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_read16')
	.sect	'.debug_line'
.L112:
	.word	.L459-.L458
.L458:
	.half	3
	.word	.L461-.L460
.L460:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L461:
	.byte	5,45,7,0,5,2
	.word	.L85
	.byte	3,186,2,1,5,21,9
	.half	.L425-.L85
	.byte	3,2,1,5,14,9
	.half	.L45-.L425
	.byte	3,3,1,5,35,3,127,1,5,19,9
	.half	.L462-.L45
	.byte	1,5,21,9
	.half	.L44-.L462
	.byte	3,126,1,5,1,7,9
	.half	.L463-.L44
	.byte	3,5,1,7,9
	.half	.L114-.L463
	.byte	0,1,1
.L459:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_read16')
	.sect	'.debug_ranges'
.L113:
	.word	-1,.L85,0,.L114-.L85,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_read32')
	.sect	'.debug_info'
.L115:
	.word	293
	.half	3
	.word	.L116
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L118,.L117
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_read32',0,1,197,2,6,1,1,1
	.word	.L87,.L209,.L86
	.byte	4
	.byte	'qspi',0,1,197,2,31
	.word	.L201,.L210
	.byte	4
	.byte	'data',0,1,197,2,45
	.word	.L211,.L212
	.byte	4
	.byte	'count',0,1,197,2,61
	.word	.L205,.L213
	.byte	5
	.word	.L87,.L209
	.byte	6
	.byte	'rxFifo',0,1,199,2,31
	.word	.L207,.L214
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_read32')
	.sect	'.debug_abbrev'
.L116:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_read32')
	.sect	'.debug_line'
.L117:
	.word	.L465-.L464
.L464:
	.half	3
	.word	.L467-.L466
.L466:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L467:
	.byte	5,45,7,0,5,2
	.word	.L87
	.byte	3,198,2,1,5,21,9
	.half	.L426-.L87
	.byte	3,2,1,5,14,9
	.half	.L47-.L426
	.byte	3,3,1,5,27,3,127,1,5,19,9
	.half	.L468-.L47
	.byte	1,5,21,9
	.half	.L46-.L468
	.byte	3,126,1,5,1,7,9
	.half	.L469-.L46
	.byte	3,5,1,7,9
	.half	.L119-.L469
	.byte	0,1,1
.L465:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_read32')
	.sect	'.debug_ranges'
.L118:
	.word	-1,.L87,0,.L119-.L87,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_read8')
	.sect	'.debug_info'
.L120:
	.word	292
	.half	3
	.word	.L121
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L123,.L122
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_read8',0,1,209,2,6,1,1,1
	.word	.L89,.L215,.L88
	.byte	4
	.byte	'qspi',0,1,209,2,30
	.word	.L201,.L216
	.byte	4
	.byte	'data',0,1,209,2,43
	.word	.L217,.L218
	.byte	4
	.byte	'count',0,1,209,2,59
	.word	.L205,.L219
	.byte	5
	.word	.L89,.L215
	.byte	6
	.byte	'rxFifo',0,1,211,2,31
	.word	.L207,.L220
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_read8')
	.sect	'.debug_abbrev'
.L121:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_read8')
	.sect	'.debug_line'
.L122:
	.word	.L471-.L470
.L470:
	.half	3
	.word	.L473-.L472
.L472:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L473:
	.byte	5,45,7,0,5,2
	.word	.L89
	.byte	3,210,2,1,5,21,9
	.half	.L427-.L89
	.byte	3,2,1,5,14,9
	.half	.L49-.L427
	.byte	3,3,1,5,34,3,127,1,5,19,9
	.half	.L474-.L49
	.byte	1,5,21,9
	.half	.L48-.L474
	.byte	3,126,1,5,1,7,9
	.half	.L475-.L48
	.byte	3,5,1,7,9
	.half	.L124-.L475
	.byte	0,1,1
.L471:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_read8')
	.sect	'.debug_ranges'
.L123:
	.word	-1,.L89,0,.L124-.L89,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_info'
.L125:
	.word	261
	.half	3
	.word	.L126
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L128,.L127
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_resetModule',0,1,237,2,6,1,1,1
	.word	.L93,.L221,.L92
	.byte	4
	.byte	'qspi',0,1,237,2,36
	.word	.L201,.L222
	.byte	5
	.word	.L93,.L221
	.byte	6
	.byte	'passwd',0,1,239,2,12
	.word	.L223,.L224
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_abbrev'
.L126:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_line'
.L127:
	.word	.L477-.L476
.L476:
	.half	3
	.word	.L479-.L478
.L478:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L479:
	.byte	5,6,7,0,5,2
	.word	.L93
	.byte	3,236,2,1,5,53,9
	.half	.L429-.L93
	.byte	3,2,1,5,19,9
	.half	.L428-.L429
	.byte	1,5,31,9
	.half	.L431-.L428
	.byte	3,1,1,5,18,9
	.half	.L430-.L431
	.byte	3,1,1,5,29,9
	.half	.L480-.L430
	.byte	3,2,1,5,23,9
	.half	.L432-.L480
	.byte	3,126,1,5,18,9
	.half	.L481-.L432
	.byte	3,1,1,5,23,9
	.half	.L482-.L481
	.byte	1,5,29,9
	.half	.L483-.L482
	.byte	3,1,1,5,30,9
	.half	.L52-.L483
	.byte	3,2,1,5,38,9
	.half	.L484-.L52
	.byte	1,5,31,7,9
	.half	.L485-.L484
	.byte	3,4,1,5,29,9
	.half	.L486-.L485
	.byte	3,2,1,5,20,3,127,1,5,25,9
	.half	.L433-.L486
	.byte	1,5,29,9
	.half	.L487-.L433
	.byte	3,1,1,5,1,7,9
	.half	.L129-.L487
	.byte	3,1,0,1,1
.L477:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_ranges'
.L128:
	.word	-1,.L93,0,.L129-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_write16')
	.sect	'.debug_info'
.L130:
	.word	332
	.half	3
	.word	.L131
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L133,.L132
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_write16',0,1,156,3,6,1,1,1
	.word	.L97,.L225,.L96
	.byte	4
	.byte	'qspi',0,1,156,3,32
	.word	.L201,.L226
	.byte	4
	.byte	'channelId',0,1,156,3,56
	.word	.L227,.L228
	.byte	4
	.byte	'data',0,1,156,3,75
	.word	.L203,.L229
	.byte	4
	.byte	'count',0,1,156,3,91
	.word	.L205,.L230
	.byte	5
	.word	.L231
	.byte	6
	.byte	'cs',0,1,158,3,34
	.word	.L232,.L233
	.byte	6
	.byte	'dataEntry',0,1,159,3,34
	.word	.L234,.L235
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_write16')
	.sect	'.debug_abbrev'
.L131:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_write16')
	.sect	'.debug_line'
.L132:
	.word	.L489-.L488
.L488:
	.half	3
	.word	.L491-.L490
.L490:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L491:
	.byte	5,46,7,0,5,2
	.word	.L97
	.byte	3,157,3,1,5,21,9
	.half	.L438-.L97
	.byte	3,3,1,5,14,9
	.half	.L58-.L438
	.byte	3,3,1,5,24,3,127,1,5,22,9
	.half	.L492-.L58
	.byte	1,5,21,9
	.half	.L57-.L492
	.byte	3,126,1,5,1,7,9
	.half	.L493-.L57
	.byte	3,5,1,7,9
	.half	.L134-.L493
	.byte	0,1,1
.L489:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_write16')
	.sect	'.debug_ranges'
.L133:
	.word	-1,.L97,0,.L134-.L97,0,0
.L231:
	.word	-1,.L97,0,.L225-.L97,-1,.L99,0,.L199-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_write32')
	.sect	'.debug_info'
.L135:
	.word	336
	.half	3
	.word	.L136
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L138,.L137
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_write32',0,1,169,3,6,1,1,1
	.word	.L101,.L236,.L100
	.byte	4
	.byte	'qspi',0,1,169,3,32
	.word	.L201,.L237
	.byte	4
	.byte	'channelId',0,1,169,3,56
	.word	.L227,.L238
	.byte	4
	.byte	'data',0,1,169,3,75
	.word	.L211,.L239
	.byte	4
	.byte	'count',0,1,169,3,91
	.word	.L205,.L240
	.byte	5
	.word	.L101,.L236
	.byte	6
	.byte	'cs',0,1,171,3,34
	.word	.L232,.L241
	.byte	6
	.byte	'dataEntry',0,1,172,3,34
	.word	.L234,.L242
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_write32')
	.sect	'.debug_abbrev'
.L136:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_write32')
	.sect	'.debug_line'
.L137:
	.word	.L495-.L494
.L494:
	.half	3
	.word	.L497-.L496
.L496:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L497:
	.byte	5,46,7,0,5,2
	.word	.L101
	.byte	3,170,3,1,5,21,9
	.half	.L440-.L101
	.byte	3,3,1,5,14,9
	.half	.L60-.L440
	.byte	3,3,1,5,24,3,127,1,5,22,9
	.half	.L498-.L60
	.byte	1,5,21,9
	.half	.L59-.L498
	.byte	3,126,1,5,1,7,9
	.half	.L499-.L59
	.byte	3,5,1,7,9
	.half	.L139-.L499
	.byte	0,1,1
.L495:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_write32')
	.sect	'.debug_ranges'
.L138:
	.word	-1,.L101,0,.L139-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_write8')
	.sect	'.debug_info'
.L140:
	.word	335
	.half	3
	.word	.L141
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L143,.L142
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_write8',0,1,182,3,6,1,1,1
	.word	.L103,.L243,.L102
	.byte	4
	.byte	'qspi',0,1,182,3,31
	.word	.L201,.L244
	.byte	4
	.byte	'channelId',0,1,182,3,55
	.word	.L227,.L245
	.byte	4
	.byte	'data',0,1,182,3,73
	.word	.L217,.L246
	.byte	4
	.byte	'count',0,1,182,3,89
	.word	.L205,.L247
	.byte	5
	.word	.L103,.L243
	.byte	6
	.byte	'cs',0,1,184,3,34
	.word	.L232,.L248
	.byte	6
	.byte	'dataEntry',0,1,185,3,34
	.word	.L234,.L249
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_write8')
	.sect	'.debug_abbrev'
.L141:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_write8')
	.sect	'.debug_line'
.L142:
	.word	.L501-.L500
.L500:
	.half	3
	.word	.L503-.L502
.L502:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L503:
	.byte	5,46,7,0,5,2
	.word	.L103
	.byte	3,183,3,1,5,21,9
	.half	.L441-.L103
	.byte	3,3,1,5,14,9
	.half	.L62-.L441
	.byte	3,3,1,5,24,3,127,1,5,22,9
	.half	.L504-.L62
	.byte	1,5,21,9
	.half	.L61-.L504
	.byte	3,126,1,5,1,7,9
	.half	.L505-.L61
	.byte	3,5,1,7,9
	.half	.L144-.L505
	.byte	0,1,1
.L501:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_write8')
	.sect	'.debug_ranges'
.L143:
	.word	-1,.L103,0,.L144-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_info'
.L145:
	.word	320
	.half	3
	.word	.L146
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L148,.L147
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calcRealBaudrate',0,1,54,7
	.word	.L250
	.byte	1,1,1
	.word	.L71,.L251,.L70
	.byte	4
	.byte	'qspi',0,1,54,42
	.word	.L201,.L252
	.byte	4
	.byte	'channelId',0,1,54,66
	.word	.L227,.L253
	.byte	5
	.word	.L71,.L251
	.byte	6
	.byte	'cs',0,1,56,19
	.word	.L232,.L254
	.byte	6
	.byte	'fQspi',0,1,57,19
	.word	.L250,.L255
	.byte	6
	.byte	'econ',0,1,58,19
	.word	.L256,.L257
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_abbrev'
.L146:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_line'
.L147:
	.word	.L507-.L506
.L506:
	.half	3
	.word	.L509-.L508
.L508:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L509:
	.byte	5,7,7,0,5,2
	.word	.L71
	.byte	3,53,1,5,27,9
	.half	.L377-.L71
	.byte	3,2,1,5,53,3,1,1,5,28,9
	.half	.L376-.L377
	.byte	3,2,1,5,9,9
	.half	.L510-.L376
	.byte	1,5,32,9
	.half	.L511-.L510
	.byte	1,5,16,9
	.half	.L378-.L511
	.byte	1,5,44,9
	.half	.L512-.L378
	.byte	3,1,1,5,38,9
	.half	.L513-.L512
	.byte	3,2,1,5,48,9
	.half	.L514-.L513
	.byte	3,126,1,5,73,3,2,1,5,48,9
	.half	.L515-.L514
	.byte	3,126,1,5,24,9
	.half	.L516-.L515
	.byte	1,5,37,9
	.half	.L379-.L516
	.byte	3,1,1,5,40,9
	.half	.L517-.L379
	.byte	1,5,38,9
	.half	.L518-.L517
	.byte	3,1,1,5,24,9
	.half	.L519-.L518
	.byte	3,127,1,5,58,9
	.half	.L520-.L519
	.byte	3,1,1,5,46,9
	.half	.L521-.L520
	.byte	1,5,73,9
	.half	.L522-.L521
	.byte	1,5,61,9
	.half	.L523-.L522
	.byte	1,5,41,9
	.half	.L524-.L523
	.byte	1,5,61,9
	.half	.L525-.L524
	.byte	1,5,24,9
	.half	.L526-.L525
	.byte	1,5,1,3,2,1,7,9
	.half	.L149-.L526
	.byte	0,1,1
.L507:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_ranges'
.L148:
	.word	-1,.L71,0,.L149-.L71,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_info'
.L150:
	.word	378
	.half	3
	.word	.L151
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L153,.L152
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calculateBasicConfigurationValue',0,1,67,8
	.word	.L258
	.byte	1,1,1
	.word	.L73,.L259,.L72
	.byte	4
	.byte	'qspi',0,1,67,59
	.word	.L201,.L260
	.byte	4
	.byte	'channelId',0,1,67,89
	.word	.L261,.L262
	.byte	4
	.byte	'chMode',0,1,67,120
	.word	.L263,.L264
	.byte	4
	.byte	'baudrate',0,1,67,140,1
	.word	.L265,.L266
	.byte	5
	.word	.L73,.L259
	.byte	5
	.word	.L267,.L259
	.byte	6
	.byte	'bacon',0,1,71,24
	.word	.L268,.L269
	.byte	6
	.byte	'delayConst',0,1,72,24
	.word	.L270,.L271
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_abbrev'
.L151:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_line'
.L152:
	.word	.L528-.L527
.L527:
	.half	3
	.word	.L530-.L529
.L529:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L530:
	.byte	5,8,7,0,5,2
	.word	.L73
	.byte	3,194,0,1,5,13,9
	.half	.L267-.L73
	.byte	3,6,1,5,62,3,2,1,5,12,9
	.half	.L381-.L267
	.byte	3,2,1,5,20,9
	.half	.L531-.L381
	.byte	1,5,35,3,2,1,5,20,9
	.half	.L532-.L531
	.byte	1,5,35,3,1,1,5,20,9
	.half	.L533-.L532
	.byte	1,5,35,9
	.half	.L534-.L533
	.byte	3,1,1,5,20,9
	.half	.L535-.L534
	.byte	1,5,12,9
	.half	.L536-.L535
	.byte	3,1,1,5,35,1,5,20,9
	.half	.L537-.L536
	.byte	1,5,35,3,1,1,5,20,9
	.half	.L538-.L537
	.byte	1,5,35,9
	.half	.L539-.L538
	.byte	3,1,1,5,20,9
	.half	.L540-.L539
	.byte	1,5,12,9
	.half	.L541-.L540
	.byte	3,1,1,5,29,1,5,20,9
	.half	.L542-.L541
	.byte	1,9
	.half	.L543-.L542
	.byte	3,1,1,5,29,3,1,1,5,20,9
	.half	.L544-.L543
	.byte	1,9
	.half	.L545-.L544
	.byte	3,1,1,5,28,9
	.half	.L546-.L545
	.byte	3,1,1,5,40,9
	.half	.L547-.L546
	.byte	1,5,20,9
	.half	.L548-.L547
	.byte	1,9
	.half	.L549-.L548
	.byte	3,1,1,5,1,3,3,1,7,9
	.half	.L154-.L549
	.byte	0,1,1
.L528:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_ranges'
.L153:
	.word	-1,.L73,0,.L154-.L73,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_info'
.L155:
	.word	682
	.half	3
	.word	.L156
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L158,.L157
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calculateExtendedConfigurationValue',0,1,96,8
	.word	.L258
	.byte	1,1,1
	.word	.L75,.L272,.L74
	.byte	4
	.byte	'qspi',0,1,96,62
	.word	.L201,.L273
	.byte	4
	.byte	'cs',0,1,96,80
	.word	.L274,.L275
	.byte	4
	.byte	'chConfig',0,1,96,106
	.word	.L276,.L277
	.byte	5
	.word	.L75,.L272
	.byte	5
	.word	.L278,.L272
	.byte	6
	.byte	'econ',0,1,100,19
	.word	.L279,.L280
	.byte	5
	.word	.L281,.L272
	.byte	6
	.byte	'tQspi',0,1,104,19
	.word	.L250,.L282
	.byte	6
	.byte	'fBaud',0,1,105,19
	.word	.L250,.L283
	.byte	6
	.byte	'q',0,1,108,19
	.word	.L232,.L284
	.byte	6
	.byte	'bestQ',0,1,108,22
	.word	.L232,.L285
	.byte	6
	.byte	'abc',0,1,108,33
	.word	.L232,.L286
	.byte	6
	.byte	'bestAbc',0,1,108,38
	.word	.L232,.L287
	.byte	6
	.byte	'halfBaud',0,1,108,56
	.word	.L232,.L288
	.byte	6
	.byte	'diffB',0,1,109,19
	.word	.L289,.L290
	.byte	6
	.byte	'bestError',0,1,110,26
	.word	.L250,.L291
	.byte	6
	.byte	'tTmp',0,1,111,19
	.word	.L250,.L292
	.byte	6
	.byte	'tBaudTmp',0,1,111,25
	.word	.L250,.L293
	.byte	7
	.word	.L294,.L281,.L295
	.byte	8
	.word	.L296,.L297
	.byte	9
	.word	.L298,.L299
	.byte	7
	.word	.L304,.L281,.L305
	.byte	8
	.word	.L306,.L307
	.byte	10
	.word	.L308,.L281,.L305
	.byte	0,0,0,7
	.word	.L294,.L300,.L301
	.byte	8
	.word	.L296,.L297
	.byte	0,7
	.word	.L294,.L302,.L303
	.byte	8
	.word	.L296,.L297
	.byte	0,11
	.word	.L309
	.byte	6
	.byte	'tBaud',0,1,120,13
	.word	.L250,.L312
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_abbrev'
.L156:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85
	.byte	6,0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_line'
.L157:
	.word	.L551-.L550
.L550:
	.half	3
	.word	.L553-.L552
.L552:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.h',0,0,0,0,0
.L553:
	.byte	5,8,7,0,5,2
	.word	.L75
	.byte	3,223,0,1,5,12,9
	.half	.L278-.L75
	.byte	3,5,1,4,2,5,5,3,230,7,1,5,38,9
	.half	.L281-.L278
	.byte	3,2,1,5,65,9
	.half	.L305-.L281
	.byte	3,31,1,4,1,5,37,9
	.half	.L295-.L305
	.byte	3,253,119,1,4,2,5,69,9
	.half	.L300-.L295
	.byte	3,131,8,1,4,1,5,17,3,142,120,1,4,2,5,69,9
	.half	.L384-.L300
	.byte	3,242,7,1,4,1,5,37,3,144,120,1,5,28,9
	.half	.L301-.L384
	.byte	3,108,1,4,2,5,45,9
	.half	.L302-.L301
	.byte	3,132,8,1,4,1,5,15,9
	.half	.L303-.L302
	.byte	3,134,120,1,5,46,9
	.half	.L554-.L303
	.byte	3,122,1,5,32,9
	.half	.L385-.L554
	.byte	3,124,1,5,15,9
	.half	.L386-.L385
	.byte	3,10,1,9
	.half	.L555-.L386
	.byte	3,3,1,5,25,9
	.half	.L310-.L555
	.byte	3,3,1,5,14,9
	.half	.L387-.L310
	.byte	3,4,1,5,28,9
	.half	.L311-.L387
	.byte	3,112,1,5,18,9
	.half	.L388-.L311
	.byte	3,6,1,5,24,9
	.half	.L5-.L388
	.byte	3,12,1,5,22,9
	.half	.L556-.L5
	.byte	1,5,29,9
	.half	.L389-.L556
	.byte	3,1,1,5,39,9
	.half	.L557-.L389
	.byte	1,5,37,9
	.half	.L558-.L557
	.byte	1,5,16,9
	.half	.L559-.L558
	.byte	1,5,17,9
	.half	.L391-.L559
	.byte	3,2,1,5,9,9
	.half	.L393-.L391
	.byte	1,5,21,7,9
	.half	.L560-.L393
	.byte	3,5,1,5,14,9
	.half	.L392-.L560
	.byte	1,5,15,7,9
	.half	.L561-.L392
	.byte	3,2,1,5,18,1,5,20,9
	.half	.L8-.L561
	.byte	3,3,1,5,27,9
	.half	.L7-.L8
	.byte	3,5,1,5,25,9
	.half	.L562-.L7
	.byte	1,5,20,9
	.half	.L390-.L562
	.byte	3,1,1,5,13,9
	.half	.L11-.L390
	.byte	3,2,1,5,17,9
	.half	.L563-.L11
	.byte	3,3,1,7,9
	.half	.L564-.L563
	.byte	1,5,78,7,9
	.half	.L396-.L564
	.byte	1,5,27,7,9
	.half	.L13-.L396
	.byte	3,2,1,9
	.half	.L565-.L13
	.byte	3,1,1,5,13,9
	.half	.L15-.L565
	.byte	3,5,1,5,20,7,9
	.half	.L397-.L15
	.byte	3,115,1,5,17,9
	.half	.L566-.L397
	.byte	3,17,1,5,42,7,9
	.half	.L12-.L566
	.byte	3,90,1,5,37,1,5,19,7,9
	.half	.L17-.L12
	.byte	3,50,1,5,9,9
	.half	.L398-.L17
	.byte	1,5,45,7,9
	.half	.L399-.L398
	.byte	3,1,1,5,43,7,9
	.half	.L400-.L399
	.byte	3,1,1,5,17,7,9
	.half	.L567-.L400
	.byte	3,2,1,9
	.half	.L394-.L567
	.byte	3,1,1,9
	.half	.L401-.L394
	.byte	3,1,1,5,26,9
	.half	.L18-.L401
	.byte	3,16,1,5,18,9
	.half	.L568-.L18
	.byte	1,5,32,9
	.half	.L402-.L568
	.byte	3,1,1,5,20,9
	.half	.L569-.L402
	.byte	3,124,1,5,29,9
	.half	.L403-.L569
	.byte	3,4,1,5,45,9
	.half	.L570-.L403
	.byte	1,5,18,9
	.half	.L571-.L570
	.byte	1,5,29,9
	.half	.L572-.L571
	.byte	3,125,1,5,18,9
	.half	.L405-.L572
	.byte	3,3,1,5,27,9
	.half	.L573-.L405
	.byte	3,1,1,5,18,9
	.half	.L574-.L573
	.byte	1,5,20,9
	.half	.L575-.L574
	.byte	3,1,1,5,32,9
	.half	.L576-.L575
	.byte	1,5,18,9
	.half	.L404-.L576
	.byte	1,5,35,3,2,1,5,47,9
	.half	.L577-.L404
	.byte	1,5,18,9
	.half	.L578-.L577
	.byte	1,5,35,9
	.half	.L579-.L578
	.byte	3,1,1,5,18,9
	.half	.L580-.L579
	.byte	1,5,34,3,1,1,5,18,9
	.half	.L581-.L580
	.byte	1,5,1,3,3,1,7,9
	.half	.L159-.L581
	.byte	0,1,1
.L551:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_ranges'
.L158:
	.word	-1,.L75,0,.L159-.L75,0,0
.L299:
	.word	-1,.L75,.L281-.L75,.L295-.L75,.L300-.L75,.L301-.L75,.L302-.L75,.L303-.L75,0,0
.L309:
	.word	-1,.L75,.L310-.L75,.L311-.L75,.L5-.L75,.L272-.L75,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_info'
.L160:
	.word	437
	.half	3
	.word	.L161
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L163,.L162
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calculatePrescaler',0,1,209,1,8
	.word	.L258
	.byte	1,1,1
	.word	.L77,.L313,.L76
	.byte	4
	.byte	'qspi',0,1,209,1,45
	.word	.L201,.L314
	.byte	4
	.byte	'baudrate',0,1,209,1,57
	.word	.L250,.L315
	.byte	5
	.word	.L77,.L313
	.byte	6
	.byte	'bestError',0,1,211,1,19
	.word	.L250,.L316
	.byte	6
	.byte	'halfBaud',0,1,212,1,12
	.word	.L250,.L317
	.byte	7
	.word	.L304,.L318,.L319
	.byte	8
	.word	.L306,.L320
	.byte	9
	.word	.L308,.L318,.L319
	.byte	0,5
	.word	.L319,.L313
	.byte	6
	.byte	'i',0,1,215,1,12
	.word	.L258,.L321
	.byte	6
	.byte	'bestPre',0,1,215,1,15
	.word	.L258,.L322
	.byte	5
	.word	.L24,.L25
	.byte	6
	.byte	'tempHalfBaud',0,1,219,1,15
	.word	.L250,.L323
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_abbrev'
.L161:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_line'
.L162:
	.word	.L583-.L582
.L582:
	.half	3
	.word	.L585-.L584
.L584:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.h',0,0,0,0,0
.L585:
	.byte	5,34,7,0,5,2
	.word	.L77
	.byte	3,211,1,1,5,23,9
	.half	.L586-.L77
	.byte	1,4,2,5,5,3,247,6,1,5,38,9
	.half	.L318-.L586
	.byte	3,2,1,4,1,5,23,9
	.half	.L319-.L318
	.byte	3,138,121,1,5,17,3,127,1,5,12,9
	.half	.L406-.L319
	.byte	3,3,1,5,22,1,5,41,9
	.half	.L24-.L406
	.byte	3,2,1,5,52,9
	.half	.L587-.L24
	.byte	1,5,44,9
	.half	.L588-.L587
	.byte	1,5,38,9
	.half	.L589-.L588
	.byte	1,5,17,9
	.half	.L407-.L589
	.byte	3,1,1,5,13,9
	.half	.L409-.L407
	.byte	3,2,1,5,23,9
	.half	.L590-.L409
	.byte	3,2,1,5,25,9
	.half	.L25-.L590
	.byte	3,121,1,5,22,1,5,5,7,9
	.half	.L411-.L25
	.byte	3,12,1,5,1,3,1,1,7,9
	.half	.L164-.L411
	.byte	0,1,1
.L583:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_ranges'
.L163:
	.word	-1,.L77,0,.L164-.L77,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_info'
.L165:
	.word	436
	.half	3
	.word	.L166
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L168,.L167
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calculateTimeQuantumLength',0,1,233,1,8
	.word	.L258
	.byte	1,1,1
	.word	.L79,.L324,.L78
	.byte	4
	.byte	'qspi',0,1,233,1,53
	.word	.L201,.L325
	.byte	4
	.byte	'maxBaudrate',0,1,233,1,65
	.word	.L250,.L326
	.byte	5
	.word	.L79,.L324
	.byte	5
	.word	.L327,.L324
	.byte	6
	.byte	'abcq',0,1,240,1,12
	.word	.L258,.L328
	.byte	6
	.byte	'tq',0,1,240,1,29
	.word	.L258,.L329
	.byte	6
	.byte	'bestTq',0,1,240,1,33
	.word	.L258,.L330
	.byte	6
	.byte	'realTQ',0,1,241,1,12
	.word	.L250,.L331
	.byte	6
	.byte	'bestDelta',0,1,241,1,30
	.word	.L250,.L332
	.byte	6
	.byte	'achievedMax',0,1,241,1,41
	.word	.L250,.L333
	.byte	6
	.byte	'fQspi',0,1,242,1,12
	.word	.L250,.L334
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_abbrev'
.L166:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_line'
.L167:
	.word	.L592-.L591
.L591:
	.half	3
	.word	.L594-.L593
.L593:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L594:
	.byte	5,8,7,0,5,2
	.word	.L79
	.byte	3,232,1,1,5,46,3,9,1,5,26,9
	.half	.L327-.L79
	.byte	3,7,1,5,30,9
	.half	.L595-.L327
	.byte	1,5,31,9
	.half	.L596-.L595
	.byte	3,1,1,5,23,9
	.half	.L597-.L596
	.byte	3,127,1,5,17,9
	.half	.L412-.L597
	.byte	3,2,1,5,31,9
	.half	.L598-.L412
	.byte	3,127,1,5,22,9
	.half	.L599-.L598
	.byte	1,5,17,9
	.half	.L414-.L599
	.byte	3,1,1,5,15,9
	.half	.L28-.L414
	.byte	3,2,1,5,41,1,5,46,9
	.half	.L29-.L28
	.byte	3,2,1,5,44,9
	.half	.L600-.L29
	.byte	1,5,29,9
	.half	.L601-.L600
	.byte	1,5,39,9
	.half	.L417-.L601
	.byte	3,1,1,5,23,9
	.half	.L418-.L417
	.byte	1,5,35,9
	.half	.L419-.L418
	.byte	3,1,1,5,29,9
	.half	.L602-.L419
	.byte	1,5,23,9
	.half	.L420-.L602
	.byte	3,1,1,5,13,9
	.half	.L31-.L420
	.byte	3,2,1,5,48,9
	.half	.L603-.L31
	.byte	1,5,23,7,9
	.half	.L604-.L603
	.byte	3,2,1,9
	.half	.L605-.L604
	.byte	3,1,1,5,13,9
	.half	.L32-.L605
	.byte	3,3,1,5,37,9
	.half	.L606-.L32
	.byte	1,5,47,7,9
	.half	.L607-.L606
	.byte	3,115,1,5,41,1,5,25,7,9
	.half	.L34-.L607
	.byte	3,19,1,5,17,9
	.half	.L415-.L34
	.byte	1,5,1,3,1,1,7,9
	.half	.L169-.L415
	.byte	0,1,1
.L592:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_ranges'
.L168:
	.word	-1,.L79,0,.L169-.L79,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_info'
.L170:
	.word	264
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L173,.L172
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_getAddress',0,1,148,2,11
	.word	.L201
	.byte	1,1,1
	.word	.L81,.L335,.L80
	.byte	4
	.byte	'qspi',0,1,148,2,44
	.word	.L336,.L337
	.byte	5
	.word	.L81,.L335
	.byte	6
	.byte	'module',0,1,150,2,15
	.word	.L201,.L338
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_line'
.L172:
	.word	.L609-.L608
.L608:
	.half	3
	.word	.L611-.L610
.L610:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L611:
	.byte	5,5,7,0,5,2
	.word	.L81
	.byte	3,151,2,1,5,30,7,9
	.half	.L612-.L81
	.byte	3,2,1,5,50,9
	.half	.L613-.L612
	.byte	1,5,56,9
	.half	.L614-.L613
	.byte	1,5,1,9
	.half	.L422-.L614
	.byte	3,8,1,5,16,7,9
	.half	.L37-.L422
	.byte	3,124,1,5,1,9
	.half	.L423-.L37
	.byte	3,4,1,7,9
	.half	.L174-.L423
	.byte	0,1,1
.L609:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_ranges'
.L173:
	.word	-1,.L81,0,.L174-.L81,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_info'
.L175:
	.word	281
	.half	3
	.word	.L176
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L178,.L177
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_getIndex',0,1,165,2,15
	.word	.L336
	.byte	1,1,1
	.word	.L83,.L339,.L82
	.byte	4
	.byte	'qspi',0,1,165,2,42
	.word	.L201,.L340
	.byte	5
	.word	.L83,.L339
	.byte	6
	.byte	'index',0,1,167,2,19
	.word	.L258,.L341
	.byte	6
	.byte	'result',0,1,168,2,19
	.word	.L336,.L342
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_abbrev'
.L176:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_line'
.L177:
	.word	.L616-.L615
.L615:
	.half	3
	.word	.L618-.L617
.L617:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L618:
	.byte	5,12,7,0,5,2
	.word	.L83
	.byte	3,169,2,1,5,13,3,4,1,5,48,9
	.half	.L619-.L83
	.byte	3,126,1,5,40,9
	.half	.L40-.L619
	.byte	3,2,1,5,9,9
	.half	.L620-.L40
	.byte	1,5,64,7,9
	.half	.L621-.L620
	.byte	3,2,1,5,22,9
	.half	.L622-.L621
	.byte	1,5,1,3,6,1,5,55,7,9
	.half	.L41-.L622
	.byte	3,118,1,5,48,1,5,1,7,9
	.half	.L623-.L41
	.byte	3,10,1,7,9
	.half	.L179-.L623
	.byte	0,1,1
.L616:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_ranges'
.L178:
	.word	-1,.L83,0,.L179-.L83,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_info'
.L180:
	.word	349
	.half	3
	.word	.L181
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L183,.L182
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_recalcBasicConfiguration',0,1,221,2,8
	.word	.L258
	.byte	1,1,1
	.word	.L91,.L343,.L90
	.byte	4
	.byte	'oldBACON',0,1,221,2,48
	.word	.L258,.L344
	.byte	4
	.byte	'numOfData',0,1,221,2,68
	.word	.L205,.L345
	.byte	4
	.byte	'shortData',0,1,221,2,87
	.word	.L346,.L347
	.byte	4
	.byte	'lastData',0,1,221,2,106
	.word	.L346,.L348
	.byte	5
	.word	.L91,.L343
	.byte	6
	.byte	'bacon',0,1,223,2,20
	.word	.L268,.L349
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_line'
.L182:
	.word	.L625-.L624
.L624:
	.half	3
	.word	.L627-.L626
.L626:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L627:
	.byte	5,5,7,0,5,2
	.word	.L91
	.byte	3,225,2,1,5,22,7,9
	.half	.L628-.L91
	.byte	3,2,1,9
	.half	.L629-.L628
	.byte	3,1,1,5,18,9
	.half	.L50-.L629
	.byte	3,3,1,5,1,3,2,1,7,9
	.half	.L184-.L50
	.byte	0,1,1
.L625:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_ranges'
.L183:
	.word	-1,.L91,0,.L184-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_info'
.L185:
	.word	367
	.half	3
	.word	.L186
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L188,.L187
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_setSlaveSelectOutputControl',0,1,255,2,6,1,1,1
	.word	.L95,.L350,.L94
	.byte	4
	.byte	'qspi',0,1,255,2,52
	.word	.L201,.L351
	.byte	4
	.byte	'channelId',0,1,255,2,76
	.word	.L227,.L352
	.byte	4
	.byte	'outputEnable',0,1,255,2,95
	.word	.L346,.L353
	.byte	4
	.byte	'activeLevel',0,1,255,2,117
	.word	.L346,.L354
	.byte	5
	.word	.L95,.L350
	.byte	6
	.byte	'mask',0,1,129,3,19
	.word	.L223,.L355
	.byte	6
	.byte	'ssoc',0,1,131,3,19
	.word	.L356,.L357
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_abbrev'
.L186:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_line'
.L187:
	.word	.L631-.L630
.L630:
	.half	3
	.word	.L633-.L632
.L632:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L633:
	.byte	5,26,7,0,5,2
	.word	.L95
	.byte	3,128,3,1,5,24,3,3,1,5,28,9
	.half	.L434-.L95
	.byte	3,125,1,5,15,9
	.half	.L435-.L434
	.byte	3,7,1,5,5,9
	.half	.L634-.L435
	.byte	3,126,1,5,20,7,9
	.half	.L635-.L634
	.byte	3,2,1,5,27,1,5,23,9
	.half	.L53-.L635
	.byte	3,4,1,5,20,9
	.half	.L636-.L53
	.byte	1,5,5,9
	.half	.L54-.L636
	.byte	3,3,1,5,15,9
	.half	.L637-.L54
	.byte	3,2,1,5,5,9
	.half	.L638-.L637
	.byte	3,126,1,5,20,7,9
	.half	.L639-.L638
	.byte	3,2,1,5,27,1,5,23,9
	.half	.L55-.L639
	.byte	3,4,1,5,20,9
	.half	.L436-.L55
	.byte	1,5,26,9
	.half	.L56-.L436
	.byte	3,3,1,5,18,1,5,1,9
	.half	.L640-.L56
	.byte	3,1,1,7,9
	.half	.L189-.L640
	.byte	0,1,1
.L631:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_ranges'
.L188:
	.word	-1,.L95,0,.L189-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_info'
.L190:
	.word	516
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L193,.L192
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calculateDelayConstants',0,1,195,3,6,1,1,1
	.word	.L105,.L358,.L104
	.byte	4
	.byte	'qspi',0,1,195,3,54
	.word	.L359,.L360
	.byte	4
	.byte	'channelId',0,1,195,3,84
	.word	.L361,.L362
	.byte	4
	.byte	'chMode',0,1,195,3,115
	.word	.L263,.L363
	.byte	4
	.byte	'delayConst',0,1,195,3,143,1
	.word	.L364,.L365
	.byte	5
	.word	.L105,.L358
	.byte	6
	.byte	'divFactor',0,1,197,3,39
	.word	.L258,.L366
	.byte	6
	.byte	'scaleTemp',0,1,199,3,39
	.word	.L250,.L367
	.byte	6
	.byte	'preTemp',0,1,200,3,39
	.word	.L346,.L368
	.byte	6
	.byte	'preFinal',0,1,201,3,39
	.word	.L346,.L369
	.byte	6
	.byte	'delayTemp',0,1,202,3,39
	.word	.L346,.L370
	.byte	6
	.byte	'delayFinal',0,1,203,3,39
	.word	.L346,.L371
	.byte	6
	.byte	'matchFound',0,1,204,3,39
	.word	.L346,.L372
	.byte	6
	.byte	'index',0,1,205,3,39
	.word	.L346,.L373
	.byte	6
	.byte	'cs',0,1,206,3,39
	.word	.L346,.L374
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_line'
.L192:
	.word	.L642-.L641
.L641:
	.half	3
	.word	.L644-.L643
.L643:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L644:
	.byte	5,44,7,0,5,2
	.word	.L105
	.byte	3,205,3,1,5,35,3,3,1,5,130,1,9
	.half	.L442-.L105
	.byte	1,5,39,9
	.half	.L645-.L442
	.byte	1,5,28,3,3,1,5,63,9
	.half	.L646-.L645
	.byte	3,125,1,5,50,9
	.half	.L443-.L646
	.byte	3,120,1,5,39,3,13,1,5,63,9
	.half	.L444-.L443
	.byte	3,123,1,5,30,3,5,1,5,66,9
	.half	.L647-.L444
	.byte	3,123,1,5,90,1,5,44,9
	.half	.L648-.L647
	.byte	1,5,90,9
	.half	.L649-.L648
	.byte	1,5,115,1,5,50,9
	.half	.L650-.L649
	.byte	3,122,1,5,115,9
	.half	.L445-.L650
	.byte	3,6,1,5,97,9
	.half	.L651-.L445
	.byte	1,5,136,1,1,5,39,9
	.half	.L652-.L651
	.byte	3,5,1,5,136,1,9
	.half	.L653-.L652
	.byte	3,123,1,5,118,9
	.half	.L654-.L653
	.byte	1,5,93,9
	.half	.L655-.L654
	.byte	1,5,71,9
	.half	.L656-.L655
	.byte	1,5,66,9
	.half	.L63-.L656
	.byte	3,8,1,5,38,3,5,1,5,34,9
	.half	.L657-.L63
	.byte	3,123,1,5,20,9
	.half	.L658-.L657
	.byte	3,3,1,5,42,9
	.half	.L446-.L658
	.byte	3,125,1,5,22,9
	.half	.L659-.L446
	.byte	3,5,1,5,42,9
	.half	.L447-.L659
	.byte	3,123,1,5,57,9
	.half	.L64-.L447
	.byte	3,7,1,5,47,9
	.half	.L660-.L64
	.byte	1,5,49,9
	.half	.L661-.L660
	.byte	1,5,44,9
	.half	.L662-.L661
	.byte	1,5,70,9
	.half	.L663-.L662
	.byte	1,5,68,9
	.half	.L664-.L663
	.byte	1,5,25,1,5,13,9
	.half	.L448-.L664
	.byte	3,2,1,5,41,7,9
	.half	.L665-.L448
	.byte	3,2,1,5,21,9
	.half	.L449-.L665
	.byte	1,5,59,9
	.half	.L666-.L449
	.byte	1,5,17,9
	.half	.L667-.L666
	.byte	1,5,22,7,9
	.half	.L450-.L667
	.byte	3,7,1,5,31,7,9
	.half	.L668-.L450
	.byte	3,2,1,5,50,9
	.half	.L66-.L668
	.byte	3,1,1,5,39,9
	.half	.L669-.L66
	.byte	1,5,32,9
	.half	.L670-.L669
	.byte	3,1,1,9
	.half	.L671-.L670
	.byte	3,1,1,5,21,3,1,1,5,47,9
	.half	.L65-.L671
	.byte	3,109,1,5,38,1,5,9,7,9
	.half	.L68-.L65
	.byte	3,28,1,5,24,7,9
	.half	.L672-.L68
	.byte	3,3,1,9
	.half	.L673-.L672
	.byte	3,1,1,5,33,9
	.half	.L69-.L673
	.byte	3,4,1,9
	.half	.L674-.L69
	.byte	3,1,1,5,30,3,83,1,5,1,7,9
	.half	.L675-.L674
	.byte	3,47,1,7,9
	.half	.L194-.L675
	.byte	0,1,1
.L642:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_ranges'
.L193:
	.word	-1,.L105,0,.L194-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L195:
	.word	201
	.half	3
	.word	.L196
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L198,.L197
	.byte	2
	.word	.L106
	.byte	3
	.byte	'.cocofun_4',0,1,156,3,6,1
	.word	.L99,.L199,.L98
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L196:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L197:
	.word	.L677-.L676
.L676:
	.half	3
	.word	.L679-.L678
.L678:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L679:
	.byte	5,46,7,0,5,2
	.word	.L99
	.byte	3,157,3,1,5,62,9
	.half	.L437-.L99
	.byte	3,1,1,9
	.half	.L199-.L437
	.byte	0,1,1,5,46,0,5,2
	.word	.L99
	.byte	3,170,3,1,5,62,9
	.half	.L437-.L99
	.byte	3,1,1,9
	.half	.L439-.L437
	.byte	3,115,1,7,9
	.half	.L199-.L439
	.byte	0,1,1,5,46,0,5,2
	.word	.L99
	.byte	3,183,3,1,5,62,9
	.half	.L437-.L99
	.byte	3,1,1,9
	.half	.L439-.L437
	.byte	3,102,1,7,9
	.half	.L199-.L439
	.byte	0,1,1
.L677:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L198:
	.word	-1,.L99,0,.L199-.L99,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L199-.L99
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_loc'
.L70:
	.word	-1,.L71,0,.L375-.L71
	.half	2
	.byte	138,0
	.word	.L375-.L71,.L251-.L71
	.half	2
	.byte	138,32
	.word	.L251-.L71,.L251-.L71
	.half	2
	.byte	138,0
	.word	0,0
.L253:
	.word	-1,.L71,0,.L376-.L71
	.half	1
	.byte	84
	.word	0,0
.L254:
	.word	-1,.L71,.L376-.L71,.L378-.L71
	.half	1
	.byte	95
	.word	0,0
.L257:
	.word	-1,.L71,0,.L251-.L71
	.half	2
	.byte	145,96
	.word	0,0
.L255:
	.word	-1,.L71,.L376-.L71,.L379-.L71
	.half	1
	.byte	82
	.word	0,0
.L252:
	.word	-1,.L71,0,.L376-.L71
	.half	1
	.byte	100
	.word	.L377-.L71,.L251-.L71
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_loc'
.L72:
	.word	-1,.L73,0,.L380-.L73
	.half	2
	.byte	138,0
	.word	.L380-.L73,.L259-.L73
	.half	2
	.byte	138,8
	.word	.L259-.L73,.L259-.L73
	.half	2
	.byte	138,0
	.word	0,0
.L269:
	.word	-1,.L73,.L382-.L73,.L259-.L73
	.half	1
	.byte	89
	.word	0,0
.L266:
	.word	-1,.L73,0,.L381-.L73
	.half	1
	.byte	85
	.word	0,0
.L264:
	.word	-1,.L73,0,.L381-.L73
	.half	1
	.byte	101
	.word	.L267-.L73,.L259-.L73
	.half	1
	.byte	111
	.word	0,0
.L262:
	.word	-1,.L73,0,.L381-.L73
	.half	1
	.byte	84
	.word	.L267-.L73,.L259-.L73
	.half	1
	.byte	88
	.word	0,0
.L271:
	.word	-1,.L73,0,.L259-.L73
	.half	2
	.byte	145,120
	.word	0,0
.L260:
	.word	-1,.L73,0,.L381-.L73
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L358-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L363:
	.word	-1,.L105,0,.L63-.L105
	.half	1
	.byte	101
	.word	0,0
.L362:
	.word	-1,.L105,0,.L63-.L105
	.half	1
	.byte	84
	.word	0,0
.L374:
	.word	-1,.L105,.L442-.L105,.L443-.L105
	.half	1
	.byte	95
	.word	0,0
.L365:
	.word	-1,.L105,0,.L63-.L105
	.half	1
	.byte	102
	.word	0,0
.L371:
	.word	-1,.L105,.L445-.L105,.L358-.L105
	.half	1
	.byte	89
	.word	0,0
.L370:
	.word	-1,.L105,.L448-.L105,.L449-.L105
	.half	1
	.byte	82
	.word	.L450-.L105,.L66-.L105
	.half	1
	.byte	82
	.word	0,0
.L366:
	.word	-1,.L105,.L63-.L105,.L358-.L105
	.half	1
	.byte	90
	.word	0,0
.L373:
	.word	0,0
.L372:
	.word	-1,.L105,.L446-.L105,.L358-.L105
	.half	1
	.byte	92
	.word	0,0
.L369:
	.word	-1,.L105,.L444-.L105,.L358-.L105
	.half	1
	.byte	88
	.word	0,0
.L368:
	.word	-1,.L105,.L447-.L105,.L358-.L105
	.half	1
	.byte	93
	.word	0,0
.L360:
	.word	-1,.L105,0,.L63-.L105
	.half	1
	.byte	100
	.word	0,0
.L367:
	.word	-1,.L105,.L64-.L105,.L358-.L105
	.half	1
	.byte	91
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_loc'
.L74:
	.word	-1,.L75,0,.L272-.L75
	.half	2
	.byte	138,0
	.word	0,0
.L286:
	.word	-1,.L75,.L311-.L75,.L272-.L75
	.half	1
	.byte	90
	.word	0,0
.L287:
	.word	-1,.L75,.L385-.L75,.L5-.L75
	.half	1
	.byte	85
	.word	.L396-.L75,.L13-.L75
	.half	1
	.byte	85
	.word	.L15-.L75,.L397-.L75
	.half	1
	.byte	85
	.word	.L399-.L75,.L400-.L75
	.half	1
	.byte	85
	.word	.L394-.L75,.L401-.L75
	.half	1
	.byte	85
	.word	.L402-.L75,.L403-.L75
	.half	1
	.byte	85
	.word	0,0
.L291:
	.word	-1,.L75,.L384-.L75,.L272-.L75
	.half	1
	.byte	89
	.word	0,0
.L285:
	.word	-1,.L75,.L388-.L75,.L5-.L75
	.half	1
	.byte	84
	.word	.L398-.L75,.L399-.L75
	.half	1
	.byte	84
	.word	.L400-.L75,.L394-.L75
	.half	1
	.byte	84
	.word	.L401-.L75,.L18-.L75
	.half	1
	.byte	84
	.word	0,0
.L277:
	.word	-1,.L75,0,.L305-.L75
	.half	1
	.byte	101
	.word	.L278-.L75,.L272-.L75
	.half	1
	.byte	111
	.word	0,0
.L275:
	.word	-1,.L75,0,.L305-.L75
	.half	1
	.byte	84
	.word	0,0
.L290:
	.word	-1,.L75,.L405-.L75,.L272-.L75
	.half	1
	.byte	81
	.word	0,0
.L280:
	.word	-1,.L75,.L281-.L75,.L272-.L75
	.half	1
	.byte	88
	.word	0,0
.L283:
	.word	-1,.L75,.L300-.L75,.L5-.L75
	.half	1
	.byte	81
	.word	0,0
.L288:
	.word	-1,.L75,.L403-.L75,.L404-.L75
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L284:
	.word	-1,.L75,.L391-.L75,.L392-.L75
	.half	1
	.byte	81
	.word	.L393-.L75,.L392-.L75
	.half	1
	.byte	82
	.word	.L8-.L75,.L7-.L75
	.half	1
	.byte	81
	.word	.L7-.L75,.L394-.L75
	.half	1
	.byte	82
	.word	.L394-.L75,.L18-.L75
	.half	1
	.byte	95
	.word	0,0
.L273:
	.word	-1,.L75,0,.L305-.L75
	.half	1
	.byte	100
	.word	.L383-.L75,.L272-.L75
	.half	1
	.byte	108
	.word	0,0
.L307:
	.word	0,0
.L297:
	.word	0,0
.L312:
	.word	-1,.L75,.L387-.L75,.L272-.L75
	.half	1
	.byte	87
	.word	0,0
.L293:
	.word	-1,.L75,.L390-.L75,.L395-.L75
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L282:
	.word	-1,.L75,.L386-.L75,.L272-.L75
	.half	1
	.byte	83
	.word	0,0
.L292:
	.word	-1,.L75,.L389-.L75,.L390-.L75
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_loc'
.L76:
	.word	-1,.L77,0,.L313-.L77
	.half	2
	.byte	138,0
	.word	0,0
.L315:
	.word	-1,.L77,0,.L319-.L77
	.half	1
	.byte	84
	.word	0,0
.L316:
	.word	-1,.L77,.L406-.L77,.L24-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	.L409-.L77,.L410-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L322:
	.word	-1,.L77,.L406-.L77,.L24-.L77
	.half	1
	.byte	81
	.word	.L411-.L77,.L313-.L77
	.half	1
	.byte	81
	.word	0,0
.L317:
	.word	-1,.L77,.L318-.L77,.L313-.L77
	.half	1
	.byte	88
	.word	0,0
.L321:
	.word	-1,.L77,.L24-.L77,.L313-.L77
	.half	1
	.byte	83
	.word	0,0
.L314:
	.word	-1,.L77,0,.L319-.L77
	.half	1
	.byte	100
	.word	0,0
.L320:
	.word	0,0
.L323:
	.word	-1,.L77,.L407-.L77,.L408-.L77
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_loc'
.L78:
	.word	-1,.L79,0,.L324-.L79
	.half	2
	.byte	138,0
	.word	0,0
.L328:
	.word	-1,.L79,.L29-.L79,.L324-.L79
	.half	1
	.byte	87
	.word	0,0
.L333:
	.word	-1,.L79,.L420-.L79,.L421-.L79
	.half	1
	.byte	95
	.word	0,0
.L332:
	.word	-1,.L79,.L416-.L79,.L324-.L79
	.half	1
	.byte	86
	.word	0,0
.L330:
	.word	-1,.L79,.L414-.L79,.L415-.L79
	.half	1
	.byte	81
	.word	0,0
.L334:
	.word	-1,.L79,.L327-.L79,.L324-.L79
	.half	1
	.byte	82
	.word	0,0
.L326:
	.word	-1,.L79,0,.L327-.L79
	.half	1
	.byte	84
	.word	.L327-.L79,.L324-.L79
	.half	1
	.byte	88
	.word	0,0
.L325:
	.word	-1,.L79,0,.L327-.L79
	.half	1
	.byte	100
	.word	0,0
.L331:
	.word	-1,.L79,.L412-.L79,.L413-.L79
	.half	5
	.byte	144,32,157,32,0
	.word	.L417-.L79,.L418-.L79
	.half	1
	.byte	95
	.word	0,0
.L329:
	.word	-1,.L79,.L419-.L79,.L324-.L79
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_loc'
.L80:
	.word	-1,.L81,0,.L335-.L81
	.half	2
	.byte	138,0
	.word	0,0
.L338:
	.word	-1,.L81,.L422-.L81,.L37-.L81
	.half	1
	.byte	98
	.word	.L423-.L81,.L335-.L81
	.half	1
	.byte	98
	.word	0,0
.L337:
	.word	-1,.L81,0,.L335-.L81
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_loc'
.L82:
	.word	-1,.L83,0,.L339-.L83
	.half	2
	.byte	138,0
	.word	0,0
.L341:
	.word	0,0
.L340:
	.word	-1,.L83,0,.L339-.L83
	.half	1
	.byte	100
	.word	0,0
.L342:
	.word	-1,.L83,.L424-.L83,.L339-.L83
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_read16')
	.sect	'.debug_loc'
.L84:
	.word	-1,.L85,0,.L200-.L85
	.half	2
	.byte	138,0
	.word	0,0
.L206:
	.word	-1,.L85,0,.L200-.L85
	.half	1
	.byte	84
	.word	0,0
.L204:
	.word	-1,.L85,0,.L200-.L85
	.half	1
	.byte	101
	.word	0,0
.L202:
	.word	-1,.L85,0,.L200-.L85
	.half	1
	.byte	100
	.word	0,0
.L208:
	.word	-1,.L85,.L425-.L85,.L200-.L85
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_read32')
	.sect	'.debug_loc'
.L86:
	.word	-1,.L87,0,.L209-.L87
	.half	2
	.byte	138,0
	.word	0,0
.L213:
	.word	-1,.L87,0,.L209-.L87
	.half	1
	.byte	84
	.word	0,0
.L212:
	.word	-1,.L87,0,.L209-.L87
	.half	1
	.byte	101
	.word	0,0
.L210:
	.word	-1,.L87,0,.L209-.L87
	.half	1
	.byte	100
	.word	0,0
.L214:
	.word	-1,.L87,.L426-.L87,.L209-.L87
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_read8')
	.sect	'.debug_loc'
.L88:
	.word	-1,.L89,0,.L215-.L89
	.half	2
	.byte	138,0
	.word	0,0
.L219:
	.word	-1,.L89,0,.L215-.L89
	.half	1
	.byte	84
	.word	0,0
.L218:
	.word	-1,.L89,0,.L215-.L89
	.half	1
	.byte	101
	.word	0,0
.L216:
	.word	-1,.L89,0,.L215-.L89
	.half	1
	.byte	100
	.word	0,0
.L220:
	.word	-1,.L89,.L427-.L89,.L215-.L89
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_loc'
.L90:
	.word	-1,.L91,0,.L343-.L91
	.half	2
	.byte	138,0
	.word	0,0
.L349:
	.word	-1,.L91,0,.L343-.L91
	.half	1
	.byte	84
	.word	0,0
.L348:
	.word	-1,.L91,0,.L343-.L91
	.half	1
	.byte	87
	.word	0,0
.L345:
	.word	-1,.L91,0,.L343-.L91
	.half	1
	.byte	85
	.word	0,0
.L344:
	.word	-1,.L91,0,.L343-.L91
	.half	1
	.byte	84
	.word	0,0
.L347:
	.word	-1,.L91,0,.L343-.L91
	.half	1
	.byte	86
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L221-.L93
	.half	2
	.byte	138,0
	.word	0,0
.L224:
	.word	-1,.L93,.L428-.L93,.L430-.L93
	.half	1
	.byte	82
	.word	.L431-.L93,.L221-.L93
	.half	1
	.byte	88
	.word	.L432-.L93,.L52-.L93
	.half	1
	.byte	84
	.word	.L433-.L93,.L221-.L93
	.half	1
	.byte	84
	.word	0,0
.L222:
	.word	-1,.L93,0,.L428-.L93
	.half	1
	.byte	100
	.word	.L429-.L93,.L221-.L93
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L350-.L95
	.half	2
	.byte	138,0
	.word	0,0
.L354:
	.word	-1,.L95,0,.L350-.L95
	.half	1
	.byte	86
	.word	0,0
.L352:
	.word	-1,.L95,0,.L350-.L95
	.half	1
	.byte	84
	.word	0,0
.L355:
	.word	-1,.L95,.L435-.L95,.L436-.L95
	.half	1
	.byte	95
	.word	0,0
.L353:
	.word	-1,.L95,0,.L350-.L95
	.half	1
	.byte	85
	.word	0,0
.L351:
	.word	-1,.L95,0,.L350-.L95
	.half	1
	.byte	100
	.word	0,0
.L357:
	.word	-1,.L95,.L434-.L95,.L350-.L95
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_write16')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L225-.L97
	.half	2
	.byte	138,0
	.word	0,0
.L228:
	.word	-1,.L97,.L99-.L97,.L199-.L97
	.half	1
	.byte	84
	.word	.L438-.L97,.L225-.L97
	.half	1
	.byte	84
	.word	0,0
.L230:
	.word	-1,.L97,.L99-.L97,.L199-.L97
	.half	1
	.byte	85
	.word	.L438-.L97,.L225-.L97
	.half	1
	.byte	85
	.word	0,0
.L233:
	.word	-1,.L97,.L437-.L97,.L199-.L97
	.half	1
	.byte	95
	.word	.L438-.L97,.L58-.L97
	.half	1
	.byte	95
	.word	0,0
.L229:
	.word	-1,.L97,.L99-.L97,.L199-.L97
	.half	1
	.byte	101
	.word	.L438-.L97,.L225-.L97
	.half	1
	.byte	101
	.word	0,0
.L235:
	.word	-1,.L97,.L439-.L97,.L199-.L97
	.half	1
	.byte	111
	.word	.L438-.L97,.L225-.L97
	.half	1
	.byte	111
	.word	0,0
.L226:
	.word	-1,.L97,.L99-.L97,.L199-.L97
	.half	1
	.byte	100
	.word	.L438-.L97,.L225-.L97
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_write32')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L236-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L238:
	.word	-1,.L101,.L99-.L101,.L199-.L101
	.half	1
	.byte	84
	.word	.L440-.L101,.L236-.L101
	.half	1
	.byte	84
	.word	0,0
.L240:
	.word	-1,.L101,.L99-.L101,.L199-.L101
	.half	1
	.byte	85
	.word	.L440-.L101,.L236-.L101
	.half	1
	.byte	85
	.word	0,0
.L241:
	.word	-1,.L101,.L437-.L101,.L199-.L101
	.half	1
	.byte	95
	.word	.L440-.L101,.L60-.L101
	.half	1
	.byte	95
	.word	0,0
.L239:
	.word	-1,.L101,.L99-.L101,.L199-.L101
	.half	1
	.byte	101
	.word	.L440-.L101,.L236-.L101
	.half	1
	.byte	101
	.word	0,0
.L242:
	.word	-1,.L101,.L439-.L101,.L199-.L101
	.half	1
	.byte	111
	.word	.L440-.L101,.L236-.L101
	.half	1
	.byte	111
	.word	0,0
.L237:
	.word	-1,.L101,.L99-.L101,.L199-.L101
	.half	1
	.byte	100
	.word	.L440-.L101,.L236-.L101
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_write8')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L243-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L245:
	.word	-1,.L103,.L99-.L103,.L199-.L103
	.half	1
	.byte	84
	.word	.L441-.L103,.L243-.L103
	.half	1
	.byte	84
	.word	0,0
.L247:
	.word	-1,.L103,.L99-.L103,.L199-.L103
	.half	1
	.byte	85
	.word	.L441-.L103,.L243-.L103
	.half	1
	.byte	85
	.word	0,0
.L248:
	.word	-1,.L103,.L437-.L103,.L199-.L103
	.half	1
	.byte	95
	.word	.L441-.L103,.L62-.L103
	.half	1
	.byte	95
	.word	0,0
.L246:
	.word	-1,.L103,.L99-.L103,.L199-.L103
	.half	1
	.byte	101
	.word	.L441-.L103,.L243-.L103
	.half	1
	.byte	101
	.word	0,0
.L249:
	.word	-1,.L103,.L439-.L103,.L199-.L103
	.half	1
	.byte	111
	.word	.L441-.L103,.L243-.L103
	.half	1
	.byte	111
	.word	0,0
.L244:
	.word	-1,.L103,.L99-.L103,.L199-.L103
	.half	1
	.byte	100
	.word	.L441-.L103,.L243-.L103
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L680:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_frame'
	.word	36
	.word	.L680,.L71,.L251-.L71
	.byte	4
	.word	(.L375-.L71)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L251-.L375)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_frame'
	.word	36
	.word	.L680,.L73,.L259-.L73
	.byte	4
	.word	(.L380-.L73)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L259-.L380)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_frame'
	.word	12
	.word	.L680,.L75,.L272-.L75
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_frame'
	.word	12
	.word	.L680,.L77,.L313-.L77
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_frame'
	.word	12
	.word	.L680,.L79,.L324-.L79
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L680,.L81,.L335-.L81
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_frame'
	.word	20
	.word	.L680,.L83,.L339-.L83
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_read16')
	.sect	'.debug_frame'
	.word	20
	.word	.L680,.L85,.L200-.L85
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_read32')
	.sect	'.debug_frame'
	.word	20
	.word	.L680,.L87,.L209-.L87
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_read8')
	.sect	'.debug_frame'
	.word	20
	.word	.L680,.L89,.L215-.L89
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_frame'
	.word	24
	.word	.L680,.L91,.L343-.L91
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L680,.L93,.L221-.L93
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_frame'
	.word	24
	.word	.L680,.L95,.L350-.L95
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_write16')
	.sect	'.debug_frame'
	.word	20
	.word	.L680,.L97,.L225-.L97
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_write32')
	.sect	'.debug_frame'
	.word	20
	.word	.L680,.L101,.L236-.L101
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_write8')
	.sect	'.debug_frame'
	.word	20
	.word	.L680,.L103,.L243-.L103
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_frame'
	.word	12
	.word	.L680,.L105,.L358-.L105
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L681:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L681,.L99,.L199-.L99
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
