	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\.IfxHspdm.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.src ..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c'

	
$TC162
	
	.sdecl	'.text.IfxHspdm.IfxHspdm_setStartAddress',code,cluster('IfxHspdm_setStartAddress')
	.sect	'.text.IfxHspdm.IfxHspdm_setStartAddress'
	.align	2
	
	.global	IfxHspdm_setStartAddress

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	     2   * \file IfxHspdm.c
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	     3   * \brief HSPDM  basic functionality
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	     4   *
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	     7   *
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	     8   *
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    10   *
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    15   *
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    17   *
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    23   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    24   *
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    30   * language processor.
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    31   *
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    39   *
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    40   *
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    41   */
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    42  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    43  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    44  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    45  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    46  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    47  #include "IfxHspdm.h"
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    48  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    49  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    50  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    51  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    52  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    53  void IfxHspdm_setStartAddress(Ifx_HSPDM *hspdm, IfxHspdm_Buffer buffer, uint32 address)
; Function IfxHspdm_setStartAddress
.L21:
IfxHspdm_setStartAddress:	.type	func

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    54  {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    55      if (address < IFXHSPDM_BUFFER_MAX_SIZE)
	mov	d15,#8192
.L162:
	jge.u	d5,d15,.L2
.L163:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    56      {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    57          switch (buffer)
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    58          {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    59          case IfxHspdm_Buffer_a:
	jeq	d4,#0,.L3
.L164:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    60              hspdm->BUFA0.B.STARTA = address;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    61              break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    62          case IfxHspdm_Buffer_b:
	jeq	d4,#1,.L4
.L2:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    63              hspdm->BUFB0.B.STARTB = address;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    64              break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    65          default:
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    66              break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    67          }
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    68      }
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    69      else
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    70      {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    71          /* do nothin */
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    72      }
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    73  }
	ret
.L3:
	ld.hu	d15,[a4]8208
.L165:
	insert	d15,d15,d5,#0,#13
	st.h	[a4]8208,d15
.L166:
	ret
.L4:
	ld.hu	d15,[a4]8216
.L167:
	insert	d15,d15,d5,#0,#13
	st.h	[a4]8216,d15
.L168:
	ret
.L111:
	
__IfxHspdm_setStartAddress_function_end:
	.size	IfxHspdm_setStartAddress,__IfxHspdm_setStartAddress_function_end-IfxHspdm_setStartAddress
.L57:
	; End of function
	
	.sdecl	'.text.IfxHspdm.IfxHspdm_setEndAddress',code,cluster('IfxHspdm_setEndAddress')
	.sect	'.text.IfxHspdm.IfxHspdm_setEndAddress'
	.align	2
	
	.global	IfxHspdm_setEndAddress

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    74  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    75  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    76  void IfxHspdm_setEndAddress(Ifx_HSPDM *hspdm, IfxHspdm_Buffer buffer, uint32 address)
; Function IfxHspdm_setEndAddress
.L23:
IfxHspdm_setEndAddress:	.type	func

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    77  {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    78      if (address < IFXHSPDM_BUFFER_MAX_SIZE)
	mov	d15,#8192
.L173:
	jge.u	d5,d15,.L7
.L174:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    79      {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    80          switch (buffer)
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    81          {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    82          case IfxHspdm_Buffer_a:
	jeq	d4,#0,.L8
.L175:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    83              hspdm->BUFA0.B.ENDA = address;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    84              break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    85          case IfxHspdm_Buffer_b:
	jeq	d4,#1,.L9
.L7:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    86              hspdm->BUFB0.B.ENDB = address;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    87              break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    88          default:
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    89              break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    90          }
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    91      }
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    92      else
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    93      {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    94          /* do nothin */
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    95      }
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    96  }
	ret
.L8:
	ld.hu	d15,[a4]8210
.L176:
	insert	d15,d15,d5,#0,#13
	st.h	[a4]8210,d15
.L177:
	ret
.L9:
	ld.hu	d15,[a4]8218
.L178:
	insert	d15,d15,d5,#0,#13
	st.h	[a4]8218,d15
.L179:
	ret
.L117:
	
__IfxHspdm_setEndAddress_function_end:
	.size	IfxHspdm_setEndAddress,__IfxHspdm_setEndAddress_function_end-IfxHspdm_setEndAddress
.L62:
	; End of function
	
	.sdecl	'.text.IfxHspdm.IfxHspdm_setMuteAddresses',code,cluster('IfxHspdm_setMuteAddresses')
	.sect	'.text.IfxHspdm.IfxHspdm_setMuteAddresses'
	.align	2
	
	.global	IfxHspdm_setMuteAddresses

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    97  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    98  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	    99  void IfxHspdm_setMuteAddresses(Ifx_HSPDM *hspdm, IfxHspdm_MuteRange muteRange, uint32 startAddress, uint32 endAddress)
; Function IfxHspdm_setMuteAddresses
.L25:
IfxHspdm_setMuteAddresses:	.type	func

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   100  {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   101      switch (muteRange)
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   102      {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   103      case IfxHspdm_MuteRange_0:
	jeq	d4,#0,.L12
.L184:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   104          hspdm->MUTE0.B.START0 = startAddress;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   105          hspdm->MUTE0.B.END0   = endAddress;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   106          break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   107      case IfxHspdm_MuteRange_1:
	jeq	d4,#1,.L13
.L185:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   108          hspdm->MUTE1.B.START1 = startAddress;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   109          hspdm->MUTE1.B.END1   = endAddress;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   110          break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   111      default:
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   112          /* do nothing */
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   113          break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   114      }
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   115  }
	ret
.L12:
	ld.hu	d15,[a4]8224
.L186:
	insert	d15,d15,d5,#0,#13
	st.h	[a4]8224,d15
.L187:
	ld.hu	d15,[a4]8226
.L188:
	insert	d15,d15,d6,#0,#13
	st.h	[a4]8226,d15
.L189:
	ret
.L13:
	ld.hu	d15,[a4]8228
.L190:
	insert	d15,d15,d5,#0,#13
	st.h	[a4]8228,d15
.L191:
	ld.hu	d15,[a4]8230
.L192:
	insert	d15,d15,d6,#0,#13
	st.h	[a4]8230,d15
.L193:
	ret
.L121:
	
__IfxHspdm_setMuteAddresses_function_end:
	.size	IfxHspdm_setMuteAddresses,__IfxHspdm_setMuteAddresses_function_end-IfxHspdm_setMuteAddresses
.L67:
	; End of function
	
	.sdecl	'.text.IfxHspdm.IfxHspdm_enableBSB',code,cluster('IfxHspdm_enableBSB')
	.sect	'.text.IfxHspdm.IfxHspdm_enableBSB'
	.align	2
	
	.global	IfxHspdm_enableBSB

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   116  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   117  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   118  void IfxHspdm_enableBSB(Ifx_HSPDM *hspdm, IfxHspdm_BSB bsb, boolean enable)
; Function IfxHspdm_enableBSB
.L27:
IfxHspdm_enableBSB:	.type	func

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   119  {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   120      switch (bsb)
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   121      {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   122      case IfxHspdm_BSB_0:
	jeq	d4,#0,.L16
.L141:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   123          hspdm->CON.B.EN0 = (uint32)enable;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   124          break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   125      case IfxHspdm_BSB_1:
	jeq	d4,#1,.L17
.L142:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   126          hspdm->CON.B.EN1 = (uint32)enable;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   127          break;
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   128      default:
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   129          break; /* do nothing here */
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   130      }
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   131  }
	ret
.L16:
	ld.bu	d15,[a4]8248
.L143:
	insert	d15,d15,d5,#0,#1
	j	.L19
.L17:
	ld.bu	d15,[a4]8248
.L144:
	insert	d15,d15,d5,#1,#1
.L19:
	st.b	[a4]8248,d15
.L145:
	ret
.L73:
	
__IfxHspdm_enableBSB_function_end:
	.size	IfxHspdm_enableBSB,__IfxHspdm_enableBSB_function_end-IfxHspdm_enableBSB
.L42:
	; End of function
	
	.sdecl	'.text.IfxHspdm.IfxHspdm_initBsPin',code,cluster('IfxHspdm_initBsPin')
	.sect	'.text.IfxHspdm.IfxHspdm_initBsPin'
	.align	2
	
	.global	IfxHspdm_initBsPin

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   132  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   133  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   134  void IfxHspdm_initBsPin(IfxHspdm_Bs_Out *bsPin, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; Function IfxHspdm_initBsPin
.L29:
IfxHspdm_initBsPin:	.type	func
	fcall	.cocofun_1
.L89:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89  /** \brief specifies LVDS-M or LVDS-H mode as declare in Register MODULE_PORT.LPCRx.LVDSM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_LvdsMode_high   = 0, /**< \brief LVDS-H Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_LvdsMode_medium = 1  /**< \brief LVDS-M Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95  } IfxPort_LvdsMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143          IfxPort_OutputMode_openDrain = 0x18U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144          IfxPort_OutputMode_none      = 0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160      IfxPort_PadDriver_ttlSpeed4            = 11, /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161      IfxPort_PadDriver_ttl3v3Speed1         = 12, /**< \brief 3.3v Pad supply speed1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162      IfxPort_PadDriver_ttl3v3Speed2         = 13, /**< \brief 3.3v Pad supply speed2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163      IfxPort_PadDriver_ttl3v3Speed3         = 14, /**< \brief 3.3v Pad supply speed3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadDriver_ttl3v3Speed4         = 15  /**< \brief 3.3v Pad supply speed4 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171      IfxPort_PadSupply_3v = 0,  /**< \brief select,3.3v */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      IfxPort_PadSupply_5v = 1   /**< \brief select,5V */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  /** \brief enable analog/digital mode for port pin, as Defined in MODULE_PORTx.PDISC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179      IfxPort_PinFunctionMode_digital = 0,  /**< \brief Pad Pn.x is enabled and can be selected for digital function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      IfxPort_PinFunctionMode_analog  = 1   /**< \brief Pad Pn.x is enabled and can be selected for analog function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181  } IfxPort_PinFunctionMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197  /** \brief Enable/DIsable LVDS direction TX or RX
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201      IfxPort_LvdsDirection_rx = 0,  /**< \brief LVDS direction RX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202      IfxPort_LvdsDirection_tx = 1   /**< \brief LVDS direction TX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203  } IfxPort_LvdsDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205  /** \brief Enable/DIsable LVDS Path.declared in MODULE_PORTx.LPCRx.TX_EN and MODULE_PORTx.LPCRx.RX_EN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209      IfxPort_LvdsPath_enable  = 0, /**< \brief LVDS enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210      IfxPort_LvdsPath_disable = 1  /**< \brief LVDS disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211  } IfxPort_LvdsPath;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213  /** \brief Specifies whether LVDS pull down resistor must be enabled/disabled as declared in Register MODULE_PORT.LPCRx.PWDPD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217      IfxPort_LvdsPullDown_disable = 0,  /**< \brief Disable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218      IfxPort_LvdsPullDown_enable  = 1   /**< \brief Enable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219  } IfxPort_LvdsPullDown;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221  /** \brief Specifies LVDS-Termination mode as declare in Register MODULE_PORT.LPCRx.TERM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225      IfxPort_LvdsTerminationMode_external = 0,  /**< \brief Termination Mode External */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226      IfxPort_LvdsTerminationMode_internal = 1   /**< \brief Termination Mode Internal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227  } IfxPort_LvdsTerminationMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235  /** \brief To Configure LVDS mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239      IfxPort_LvdsMode     lvdsMode;                   /**< \brief specifies LVDS-M or LVDS-H mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240      IfxPort_ControlledBy enablePortControlled;       /**< \brief specifies whether LVDS is controlled by PORT or HSCT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241      IfxPort_PadSupply    padSupply;                  /**< \brief specify supply voltage */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242  } IfxPort_LvdsConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286  /** \brief set analog/digital mode for pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param port Pointer to Port register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \param pinIndex specifies the pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   * \param mode set analog/digital mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395   * /code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   *     {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief set lvds mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port pointer to Port Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex specifies pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param pinMode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param lvds config LVDS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448  IFX_EXTERN void IfxPort_setPinModeLVDS(Ifx_P *port, uint8 pinIndex, IfxPort_Mode pinMode, IfxPort_LvdsConfig *lvds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465  /** \brief Enable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470  IFX_EXTERN void IfxPort_setPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  /** \brief Disable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474   * \param pinIndex Specifies the pin for which the mode has to be cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477  IFX_EXTERN void IfxPort_resetPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526  /** \brief Returns the module address of the selected Port module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527   * \param port Pointer to PORT module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528   * \return PORT module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   563   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   564   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   565   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   566   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   567   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   568   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   569  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   571  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   572   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   573   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   574   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   575   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   578   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   579   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   580   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   581   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   582   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   583   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   585  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   590  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   593  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   594   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   595   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   596   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   599   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   600   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   601   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   602  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   604  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   605   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   606   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   607   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   609   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   610   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   611   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   613  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   615  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   616   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   617   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   618   * \param mode Selects the controller for the port pin(Tricore,EVADC,GETH,SCR etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   619   * 0-> normal function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   620   * 1-> Alternate functionality(SCR pin,EVADC PDD,GETH RGMII/MII etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   621   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   622   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   623  IFX_EXTERN void IfxPort_modifyPinControllerSelection(Ifx_P *port, uint8 pinIndex, boolean mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   625  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   626  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   627  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   628  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   629  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   630  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   631      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   632  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   634  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   635  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   636  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   637      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   638  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   640  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   641  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   642  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   643      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   647  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   649      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   651      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   652      port->PDISC.U |= (mode << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   653      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   654  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   657  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   658  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   659      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   663  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   665      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   669  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   671      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   675  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   677      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	call	IfxPort_setPinMode
.L90:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   135  {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   136      IfxPort_setPinModeOutput(bsPin->pin.port, bsPin->pin.pinIndex, outputMode, bsPin->select);
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   137      IfxPort_setPinPadDriver(bsPin->pin.port, bsPin->pin.pinIndex, padDriver);
	ld.a	a4,[a15]4
.L150:
	ld.bu	d4,[a15]8
.L151:
	mov	d5,d8
.L131:
	j	IfxPort_setPinPadDriver
.L80:
	
__IfxHspdm_initBsPin_function_end:
	.size	IfxHspdm_initBsPin,__IfxHspdm_initBsPin_function_end-IfxHspdm_initBsPin
.L47:
	; End of function
	
	.sdecl	'.text.IfxHspdm..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.IfxHspdm..cocofun_1'
	.align	2
; Function .cocofun_1
.L31:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	mov.aa	a15,a4
.L129:
	mov	d8,d5
	ld.bu	d0,[a15]8
.L130:
	ld.bu	d15,[a15]12
.L198:
	ld.a	a4,[a15]4
.L127:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89  /** \brief specifies LVDS-M or LVDS-H mode as declare in Register MODULE_PORT.LPCRx.LVDSM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_LvdsMode_high   = 0, /**< \brief LVDS-H Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_LvdsMode_medium = 1  /**< \brief LVDS-M Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95  } IfxPort_LvdsMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143          IfxPort_OutputMode_openDrain = 0x18U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144          IfxPort_OutputMode_none      = 0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160      IfxPort_PadDriver_ttlSpeed4            = 11, /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161      IfxPort_PadDriver_ttl3v3Speed1         = 12, /**< \brief 3.3v Pad supply speed1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162      IfxPort_PadDriver_ttl3v3Speed2         = 13, /**< \brief 3.3v Pad supply speed2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163      IfxPort_PadDriver_ttl3v3Speed3         = 14, /**< \brief 3.3v Pad supply speed3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadDriver_ttl3v3Speed4         = 15  /**< \brief 3.3v Pad supply speed4 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171      IfxPort_PadSupply_3v = 0,  /**< \brief select,3.3v */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      IfxPort_PadSupply_5v = 1   /**< \brief select,5V */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  /** \brief enable analog/digital mode for port pin, as Defined in MODULE_PORTx.PDISC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179      IfxPort_PinFunctionMode_digital = 0,  /**< \brief Pad Pn.x is enabled and can be selected for digital function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      IfxPort_PinFunctionMode_analog  = 1   /**< \brief Pad Pn.x is enabled and can be selected for analog function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181  } IfxPort_PinFunctionMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197  /** \brief Enable/DIsable LVDS direction TX or RX
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201      IfxPort_LvdsDirection_rx = 0,  /**< \brief LVDS direction RX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202      IfxPort_LvdsDirection_tx = 1   /**< \brief LVDS direction TX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203  } IfxPort_LvdsDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205  /** \brief Enable/DIsable LVDS Path.declared in MODULE_PORTx.LPCRx.TX_EN and MODULE_PORTx.LPCRx.RX_EN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209      IfxPort_LvdsPath_enable  = 0, /**< \brief LVDS enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210      IfxPort_LvdsPath_disable = 1  /**< \brief LVDS disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211  } IfxPort_LvdsPath;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213  /** \brief Specifies whether LVDS pull down resistor must be enabled/disabled as declared in Register MODULE_PORT.LPCRx.PWDPD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217      IfxPort_LvdsPullDown_disable = 0,  /**< \brief Disable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218      IfxPort_LvdsPullDown_enable  = 1   /**< \brief Enable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219  } IfxPort_LvdsPullDown;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221  /** \brief Specifies LVDS-Termination mode as declare in Register MODULE_PORT.LPCRx.TERM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225      IfxPort_LvdsTerminationMode_external = 0,  /**< \brief Termination Mode External */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226      IfxPort_LvdsTerminationMode_internal = 1   /**< \brief Termination Mode Internal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227  } IfxPort_LvdsTerminationMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235  /** \brief To Configure LVDS mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239      IfxPort_LvdsMode     lvdsMode;                   /**< \brief specifies LVDS-M or LVDS-H mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240      IfxPort_ControlledBy enablePortControlled;       /**< \brief specifies whether LVDS is controlled by PORT or HSCT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241      IfxPort_PadSupply    padSupply;                  /**< \brief specify supply voltage */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242  } IfxPort_LvdsConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286  /** \brief set analog/digital mode for pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param port Pointer to Port register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \param pinIndex specifies the pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   * \param mode set analog/digital mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395   * /code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   *     {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief set lvds mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port pointer to Port Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex specifies pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param pinMode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param lvds config LVDS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448  IFX_EXTERN void IfxPort_setPinModeLVDS(Ifx_P *port, uint8 pinIndex, IfxPort_Mode pinMode, IfxPort_LvdsConfig *lvds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465  /** \brief Enable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470  IFX_EXTERN void IfxPort_setPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  /** \brief Disable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474   * \param pinIndex Specifies the pin for which the mode has to be cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477  IFX_EXTERN void IfxPort_resetPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526  /** \brief Returns the module address of the selected Port module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527   * \param port Pointer to PORT module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528   * \return PORT module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   563   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   564   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   565   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   566   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   567   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   568   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   569  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   571  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   572   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   573   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   574   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   575   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   578   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   579   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   580   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   581   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   582   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   583   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   585  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   590  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   593  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   594   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   595   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   596   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   599   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   600   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   601   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   602  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   604  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   605   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   606   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   607   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   609   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   610   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   611   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   613  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   615  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   616   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   617   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   618   * \param mode Selects the controller for the port pin(Tricore,EVADC,GETH,SCR etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   619   * 0-> normal function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   620   * 1-> Alternate functionality(SCR pin,EVADC PDD,GETH RGMII/MII etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   621   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   622   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   623  IFX_EXTERN void IfxPort_modifyPinControllerSelection(Ifx_P *port, uint8 pinIndex, boolean mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   625  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   626  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   627  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   628  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   629  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   630  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   631      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   632  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   634  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   635  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   636  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   637      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   638  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   640  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   641  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   642  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   643      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   647  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   649      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   651      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   652      port->PDISC.U |= (mode << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   653      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   654  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   657  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   658  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   659      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   663  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   665      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   669  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   671      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   675  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   677      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	or	d5,d15,d4
.L128:
	mov	d4,d0
	fret
.L72:
	; End of function
	.sdecl	'.text.IfxHspdm.IfxHspdm_initMutePin',code,cluster('IfxHspdm_initMutePin')
	.sect	'.text.IfxHspdm.IfxHspdm_initMutePin'
	.align	2
	
	.global	IfxHspdm_initMutePin

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   138  }
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   139  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   140  
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   141  void IfxHspdm_initMutePin(IfxHspdm_Mute_Out *mutePin, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; Function IfxHspdm_initMutePin
.L33:
IfxHspdm_initMutePin:	.type	func
	fcall	.cocofun_1
.L105:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89  /** \brief specifies LVDS-M or LVDS-H mode as declare in Register MODULE_PORT.LPCRx.LVDSM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_LvdsMode_high   = 0, /**< \brief LVDS-H Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_LvdsMode_medium = 1  /**< \brief LVDS-M Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95  } IfxPort_LvdsMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143          IfxPort_OutputMode_openDrain = 0x18U << 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144          IfxPort_OutputMode_none      = 0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160      IfxPort_PadDriver_ttlSpeed4            = 11, /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161      IfxPort_PadDriver_ttl3v3Speed1         = 12, /**< \brief 3.3v Pad supply speed1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162      IfxPort_PadDriver_ttl3v3Speed2         = 13, /**< \brief 3.3v Pad supply speed2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163      IfxPort_PadDriver_ttl3v3Speed3         = 14, /**< \brief 3.3v Pad supply speed3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadDriver_ttl3v3Speed4         = 15  /**< \brief 3.3v Pad supply speed4 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171      IfxPort_PadSupply_3v = 0,  /**< \brief select,3.3v */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      IfxPort_PadSupply_5v = 1   /**< \brief select,5V */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  /** \brief enable analog/digital mode for port pin, as Defined in MODULE_PORTx.PDISC
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179      IfxPort_PinFunctionMode_digital = 0,  /**< \brief Pad Pn.x is enabled and can be selected for digital function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      IfxPort_PinFunctionMode_analog  = 1   /**< \brief Pad Pn.x is enabled and can be selected for analog function */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181  } IfxPort_PinFunctionMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197  /** \brief Enable/DIsable LVDS direction TX or RX
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201      IfxPort_LvdsDirection_rx = 0,  /**< \brief LVDS direction RX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202      IfxPort_LvdsDirection_tx = 1   /**< \brief LVDS direction TX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203  } IfxPort_LvdsDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205  /** \brief Enable/DIsable LVDS Path.declared in MODULE_PORTx.LPCRx.TX_EN and MODULE_PORTx.LPCRx.RX_EN
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209      IfxPort_LvdsPath_enable  = 0, /**< \brief LVDS enabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210      IfxPort_LvdsPath_disable = 1  /**< \brief LVDS disabled */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211  } IfxPort_LvdsPath;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213  /** \brief Specifies whether LVDS pull down resistor must be enabled/disabled as declared in Register MODULE_PORT.LPCRx.PWDPD
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217      IfxPort_LvdsPullDown_disable = 0,  /**< \brief Disable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218      IfxPort_LvdsPullDown_enable  = 1   /**< \brief Enable Pull Down resistor */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219  } IfxPort_LvdsPullDown;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221  /** \brief Specifies LVDS-Termination mode as declare in Register MODULE_PORT.LPCRx.TERM
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225      IfxPort_LvdsTerminationMode_external = 0,  /**< \brief Termination Mode External */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226      IfxPort_LvdsTerminationMode_internal = 1   /**< \brief Termination Mode Internal */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227  } IfxPort_LvdsTerminationMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235  /** \brief To Configure LVDS mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239      IfxPort_LvdsMode     lvdsMode;                   /**< \brief specifies LVDS-M or LVDS-H mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240      IfxPort_ControlledBy enablePortControlled;       /**< \brief specifies whether LVDS is controlled by PORT or HSCT */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241      IfxPort_PadSupply    padSupply;                  /**< \brief specify supply voltage */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242  } IfxPort_LvdsConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286  /** \brief set analog/digital mode for pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param port Pointer to Port register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \param pinIndex specifies the pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   * \param mode set analog/digital mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395   * /code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   *     {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417   *     }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief set lvds mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port pointer to Port Register space
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex specifies pin index
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param pinMode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param lvds config LVDS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448  IFX_EXTERN void IfxPort_setPinModeLVDS(Ifx_P *port, uint8 pinIndex, IfxPort_Mode pinMode, IfxPort_LvdsConfig *lvds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465  /** \brief Enable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470  IFX_EXTERN void IfxPort_setPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  /** \brief Disable the Pin Controller Selection.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474   * \param pinIndex Specifies the pin for which the mode has to be cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477  IFX_EXTERN void IfxPort_resetPinControllerSelection(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526  /** \brief Returns the module address of the selected Port module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527   * \param port Pointer to PORT module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528   * \return PORT module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   557   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   558   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   559   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   561   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   562   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   563   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   564   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   565   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   566   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   567   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   568   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   569  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   571  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   572   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   573   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   574   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   575   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   578   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   579   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   580   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   581   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   582   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   583   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   584   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   585  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   590  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   593  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   594   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   595   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   596   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   597   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   599   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   600   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   601   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   602  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   604  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   605   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   606   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   607   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   609   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   610   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   611   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   612   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   613  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   615  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   616   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   617   * \param pinIndex Specifies the pin for which the mode has to be set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   618   * \param mode Selects the controller for the port pin(Tricore,EVADC,GETH,SCR etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   619   * 0-> normal function
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   620   * 1-> Alternate functionality(SCR pin,EVADC PDD,GETH RGMII/MII etc)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   621   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   622   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   623  IFX_EXTERN void IfxPort_modifyPinControllerSelection(Ifx_P *port, uint8 pinIndex, boolean mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   625  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   626  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   627  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   628  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   629  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   630  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   631      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   632  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   634  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   635  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   636  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   637      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   638  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   640  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   641  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   642  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   643      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   644  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   647  IFX_INLINE void IfxPort_setPinFunctionMode(Ifx_P *port, uint8 pinIndex, IfxPort_PinFunctionMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   648  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   649      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   651      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   652      port->PDISC.U |= (mode << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   653      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   654  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   657  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   658  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   659      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   663  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   665      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   669  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   671      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   675  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   677      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	call	IfxPort_setPinMode
.L106:

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   142  {
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   143      IfxPort_setPinModeOutput(mutePin->pin.port, mutePin->pin.pinIndex, outputMode, mutePin->select);
; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   144      IfxPort_setPinPadDriver(mutePin->pin.port, mutePin->pin.pinIndex, padDriver);
	ld.a	a4,[a15]4
.L156:
	ld.bu	d4,[a15]8
.L157:
	mov	d5,d8
.L132:
	j	IfxPort_setPinPadDriver
.L100:
	
__IfxHspdm_initMutePin_function_end:
	.size	IfxHspdm_initMutePin,__IfxHspdm_initMutePin_function_end-IfxHspdm_initMutePin
.L52:
	; End of function
	
	.calls	'IfxHspdm_initBsPin','IfxPort_setPinMode'
	.calls	'IfxHspdm_initBsPin','IfxPort_setPinPadDriver'
	.calls	'IfxHspdm_initMutePin','IfxPort_setPinMode'
	.calls	'IfxHspdm_initMutePin','IfxPort_setPinPadDriver'
	.calls	'IfxHspdm_initBsPin','.cocofun_1'
	.calls	'IfxHspdm_initMutePin','.cocofun_1'
	.calls	'IfxHspdm_setStartAddress','',0
	.calls	'IfxHspdm_setEndAddress','',0
	.calls	'IfxHspdm_setMuteAddresses','',0
	.calls	'IfxHspdm_enableBSB','',0
	.calls	'IfxHspdm_initBsPin','',0
	.calls	'.cocofun_1','',0
	.extern	IfxPort_setPinMode
	.extern	IfxPort_setPinPadDriver
	.calls	'IfxHspdm_initMutePin','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L35:
	.word	52851
	.half	3
	.word	.L36
	.byte	4
.L34:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L37
	.byte	2,1,1,3
	.word	168
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	171
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	216
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	228
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	308
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	282
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	314
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	314
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	282
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5
.L78:
	.byte	7
	.byte	'unsigned char',0,1,8,7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_P_OUT_Bits',0,4,145,3,16,4,11
	.byte	'P0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,4,171,5,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	462
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,4,171,2,16,4,11
	.byte	'PS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,4,251,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	778
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,4,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,4,155,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1349
	.byte	4,2,35,0,0,14,4
	.word	423
	.byte	15,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,4,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	423
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	423
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	423
	.byte	5,0,2,35,3,0,12,4,171,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1478
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,4,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	423
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	423
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	423
	.byte	5,0,2,35,3,0,12,4,187,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1693
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,4,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	423
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	423
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	423
	.byte	5,0,2,35,3,0,12,4,195,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1908
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,4,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	423
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	423
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	423
	.byte	5,0,2,35,3,0,12,4,179,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2125
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,4,141,1,16,4,11
	.byte	'P0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,4,163,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2345
	.byte	4,2,35,0,0,14,24
	.word	423
	.byte	15,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,4,212,3,16,4,11
	.byte	'PD0',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	423
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	423
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	423
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	423
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	423
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	423
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	423
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	423
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	423
	.byte	2,0,2,35,3,0,12,4,195,5,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2669
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,4,233,3,16,4,11
	.byte	'PD8',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	423
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	423
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	423
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	423
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	423
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	423
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	423
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	423
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	423
	.byte	2,0,2,35,3,0,12,4,203,5,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2973
	.byte	4,2,35,0,0,14,8
	.word	423
	.byte	15,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,4,111,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,4,147,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3298
	.byte	4,2,35,0,0,14,12
	.word	423
	.byte	15,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,4,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,4,187,5,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3638
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,4,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,4,179,5,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4004
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,4,230,2,16,4,11
	.byte	'PS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	400
	.byte	28,0,2,35,0,0,12,4,139,5,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4368
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,4,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	400
	.byte	24,0,2,35,0,0,12,4,155,5,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4515
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,4,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	400
	.byte	20,0,2,35,0,0,12,4,163,5,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4684
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,4,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	440
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,4,147,5,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4856
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,4,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	440
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	440
	.byte	12,0,2,35,2,0,12,4,219,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5031
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,4,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	400
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	8,0,2,35,3,0,12,4,235,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5205
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,4,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	400
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	4,0,2,35,3,0,12,4,243,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5379
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,4,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	400
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,4,227,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5555
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,4,208,2,16,4,11
	.byte	'PS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,4,131,5,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5711
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,4,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	440
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,4,211,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6044
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,4,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	423
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	423
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,4,203,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6392
	.byte	4,2,35,0,0,14,32
	.word	6672
	.byte	15,7,0,14,56
	.word	423
	.byte	15,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,4,105,16,4,11
	.byte	'reserved_0',0,4
	.word	400
	.byte	32,0,2,35,0,0,12,4,139,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6730
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,4,68,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,4,131,4,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6817
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,4,220,5,25,128,2,13
	.byte	'OUT',0
	.word	738
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	1309
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	1429
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	1469
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	1653
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	1868
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	2085
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	2305
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	1469
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	2620
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	2660
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	2933
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	3249
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	3289
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	3589
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3629
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	3964
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	4328
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3289
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	4475
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	4644
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	4816
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	4991
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	5165
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	5339
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	5515
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	5671
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	6004
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	6352
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3289
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	6712
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	6721
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	6777
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	7344
	.byte	4,3,35,252,1,0,16
	.word	7384
	.byte	3
	.word	7954
.L83:
	.byte	17,3,140,1,9,1,18
	.byte	'IfxPort_OutputMode_none',0,0,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,17,3,126,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0
.L88:
	.byte	4
	.byte	'IfxPort_setPinModeOutput',0,3,3,163,5,17,1,1
.L91:
	.byte	5
	.byte	'port',0,3,163,5,49
	.word	7959
.L93:
	.byte	5
	.byte	'pinIndex',0,3,163,5,61
	.word	423
.L95:
	.byte	5
	.byte	'mode',0,3,163,5,90
	.word	7964
.L97:
	.byte	5
	.byte	'index',0,3,163,5,114
	.word	8060
.L99:
	.byte	6,0,17,3,187,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,3,169,5,17,1,1,5
	.byte	'port',0,3,169,5,44
	.word	7959
	.byte	5
	.byte	'pinIndex',0,3,169,5,56
	.word	423
	.byte	5
	.byte	'action',0,3,169,5,80
	.word	8373
	.byte	6,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,6,68,16,4,11
	.byte	'SRPN',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	423
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	423
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,6,93,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8554
	.byte	4,2,35,0,0,16
	.word	8844
	.byte	3
	.word	8883
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,5,247,1,17,1,1,5
	.byte	'src',0,5,247,1,60
	.word	8888
	.byte	6,0,19
	.word	416
	.byte	20
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,21
	.word	8936
	.byte	0,16
	.word	400
	.byte	3
	.word	400
	.byte	22
	.byte	'__cmpswapw',0
	.word	8978
	.byte	1,1,1,1,23
	.byte	'p',0
	.word	8983
	.byte	23
	.byte	'value',0
	.word	400
	.byte	23
	.byte	'compare',0
	.word	400
	.byte	0,24
	.word	176
	.byte	25
	.word	202
	.byte	6,0,24
	.word	237
	.byte	25
	.word	269
	.byte	6,0,24
	.word	319
	.byte	25
	.word	338
	.byte	6,0,24
	.word	354
	.byte	25
	.word	369
	.byte	25
	.word	383
	.byte	6,0,24
	.word	8277
	.byte	25
	.word	8310
	.byte	25
	.word	8324
	.byte	25
	.word	8342
	.byte	25
	.word	8356
	.byte	6,0,24
	.word	8476
	.byte	25
	.word	8504
	.byte	25
	.word	8518
	.byte	25
	.word	8536
	.byte	6,0,17,3,101,9,1,18
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,18
	.byte	'IfxPort_Mode_inputPullDown',0,8,18
	.byte	'IfxPort_Mode_inputPullUp',0,16,18
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,18
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,26
	.byte	'IfxPort_setPinMode',0,3,183,3,17,1,1,1,1,5
	.byte	'port',0,3,183,3,43
	.word	7959
	.byte	5
	.byte	'pinIndex',0,3,183,3,55
	.word	423
	.byte	5
	.byte	'mode',0,3,183,3,78
	.word	9142
	.byte	0
.L85:
	.byte	17,3,151,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,26
	.byte	'IfxPort_setPinPadDriver',0,3,207,3,17,1,1,1,1,5
	.byte	'port',0,3,207,3,48
	.word	7959
	.byte	5
	.byte	'pinIndex',0,3,207,3,60
	.word	423
	.byte	5
	.byte	'padDriver',0,3,207,3,88
	.word	9886
	.byte	0,24
	.word	8893
	.byte	25
	.word	8921
	.byte	6,0,14,128,64
	.word	400
	.byte	15,255,15,0,10
	.byte	'_Ifx_HSPDM_CLC_Bits',0,7,143,1,16,4,11
	.byte	'DISR',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	400
	.byte	28,0,2,35,0,0,12,7,226,2,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10417
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_ID_Bits',0,7,243,1,16,4,11
	.byte	'MODREV',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,7,154,3,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10576
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_BUFA0_Bits',0,7,125,16,4,11
	.byte	'STARTA',0,2
	.word	440
	.byte	13,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	423
	.byte	3,0,2,35,1,11
	.byte	'ENDA',0,2
	.word	440
	.byte	13,3,2,35,2,11
	.byte	'reserved_29',0,1
	.word	423
	.byte	3,0,2,35,3,0,12,7,210,2,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10700
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_BUFB0_Bits',0,7,134,1,16,4,11
	.byte	'STARTB',0,2
	.word	440
	.byte	13,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	423
	.byte	3,0,2,35,1,11
	.byte	'ENDB',0,2
	.word	440
	.byte	13,3,2,35,2,11
	.byte	'reserved_29',0,1
	.word	423
	.byte	3,0,2,35,3,0,12,7,218,2,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10848
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_CURRAD_Bits',0,7,175,1,16,4,11
	.byte	'CURRAD',0,2
	.word	440
	.byte	13,3,2,35,0,11
	.byte	'reserved_13',0,4
	.word	400
	.byte	19,0,2,35,0,0,12,7,242,2,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10997
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_MUTE0_Bits',0,7,145,2,16,4,11
	.byte	'START0',0,2
	.word	440
	.byte	13,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	423
	.byte	3,0,2,35,1,11
	.byte	'END0',0,2
	.word	440
	.byte	13,3,2,35,2,11
	.byte	'reserved_29',0,1
	.word	423
	.byte	3,0,2,35,3,0,12,7,186,3,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11108
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_MUTE1_Bits',0,7,154,2,16,4,11
	.byte	'START1',0,2
	.word	440
	.byte	13,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	423
	.byte	3,0,2,35,1,11
	.byte	'END1',0,2
	.word	440
	.byte	13,3,2,35,2,11
	.byte	'reserved_29',0,1
	.word	423
	.byte	3,0,2,35,3,0,12,7,194,3,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11257
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_ADCTG_Bits',0,7,111,16,4,11
	.byte	'OFFSET',0,2
	.word	440
	.byte	16,0,2,35,0,11
	.byte	'PERIOD',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,7,194,2,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11406
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_ADCTGCNT_Bits',0,7,118,16,4,11
	.byte	'TGCNT',0,2
	.word	440
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,12,7,202,2,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11510
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_CON_Bits',0,7,153,1,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'SM',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'PAC',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'ITMDIV',0,1
	.word	423
	.byte	2,1,2,35,0,11
	.byte	'MM',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'RUN',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'MPOL',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'ADCTGEN',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'DITH',0,1
	.word	423
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'RUNC',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'RUNS',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'HREN',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'HRAE',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'HRSEL',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,2
	.word	440
	.byte	11,0,2,35,2,0,12,7,234,2,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11621
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_FLAGS_Bits',0,7,182,1,16,4,11
	.byte	'BAS',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'BAE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'BBS',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'BBE',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'M0S',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'M0E',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'M1S',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'M1E',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'ER',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'MUTE',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	400
	.byte	22,0,2,35,0,0,12,7,250,2,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11972
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_FLAGSSET_Bits',0,7,228,1,16,4,11
	.byte	'BAS',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'BAE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'BBS',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'BBE',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'M0S',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'M0E',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'M1S',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'M1E',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'ER',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	400
	.byte	23,0,2,35,0,0,12,7,146,3,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12214
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_FLAGSCLEAR_Bits',0,7,198,1,16,4,11
	.byte	'BAS',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'BAE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'BBS',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'BBE',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'M0S',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'M0E',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'M1S',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'M1E',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'ER',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	400
	.byte	23,0,2,35,0,0,12,7,130,3,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12442
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_FLAGSEN_Bits',0,7,213,1,16,4,11
	.byte	'BAS',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'BAE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'BBS',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'BBE',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'M0S',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'M0E',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'M1S',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'M1E',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'ER',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	400
	.byte	23,0,2,35,0,0,12,7,138,3,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12672
	.byte	4,2,35,0,0,14,148,1
	.word	423
	.byte	15,147,1,0,10
	.byte	'_Ifx_HSPDM_OCS_Bits',0,7,163,2,16,4,11
	.byte	'reserved_0',0,4
	.word	400
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	423
	.byte	2,0,2,35,3,0,12,7,202,3,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12910
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_KRSTCLR_Bits',0,7,138,2,16,4,11
	.byte	'CLR',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	400
	.byte	31,0,2,35,0,0,12,7,178,3,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13072
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_KRST1_Bits',0,7,131,2,16,4,11
	.byte	'RST',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	400
	.byte	31,0,2,35,0,0,12,7,170,3,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13180
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_KRST0_Bits',0,7,251,1,16,4,11
	.byte	'RST',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	400
	.byte	30,0,2,35,0,0,12,7,162,3,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13286
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_ACCEN1_Bits',0,7,105,16,4,11
	.byte	'reserved_0',0,4
	.word	400
	.byte	32,0,2,35,0,0,12,7,186,2,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13411
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM_ACCEN0_Bits',0,7,68,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	423
	.byte	1,0,2,35,3,0,12,7,178,2,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13502
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSPDM',0,7,219,3,25,128,66,13
	.byte	'SRAM',0
	.word	10406
	.byte	128,64,2,35,0,13
	.byte	'CLC',0
	.word	10536
	.byte	4,3,35,128,64,13
	.byte	'reserved_2004',0
	.word	1469
	.byte	4,3,35,132,64,13
	.byte	'ID',0
	.word	10660
	.byte	4,3,35,136,64,13
	.byte	'reserved_200C',0
	.word	1469
	.byte	4,3,35,140,64,13
	.byte	'BUFA0',0
	.word	10808
	.byte	4,3,35,144,64,13
	.byte	'reserved_2014',0
	.word	1469
	.byte	4,3,35,148,64,13
	.byte	'BUFB0',0
	.word	10957
	.byte	4,3,35,152,64,13
	.byte	'CURRAD',0
	.word	11068
	.byte	4,3,35,156,64,13
	.byte	'MUTE0',0
	.word	11217
	.byte	4,3,35,160,64,13
	.byte	'MUTE1',0
	.word	11366
	.byte	4,3,35,164,64,13
	.byte	'reserved_2028',0
	.word	3289
	.byte	8,3,35,168,64,13
	.byte	'ADCTG',0
	.word	11470
	.byte	4,3,35,176,64,13
	.byte	'ADCTGCNT',0
	.word	11581
	.byte	4,3,35,180,64,13
	.byte	'CON',0
	.word	11932
	.byte	4,3,35,184,64,13
	.byte	'reserved_203C',0
	.word	3289
	.byte	8,3,35,188,64,13
	.byte	'FLAGS',0
	.word	12174
	.byte	4,3,35,196,64,13
	.byte	'FLAGSSET',0
	.word	12402
	.byte	4,3,35,200,64,13
	.byte	'FLAGSCLEAR',0
	.word	12632
	.byte	4,3,35,204,64,13
	.byte	'FLAGSEN',0
	.word	12859
	.byte	4,3,35,208,64,13
	.byte	'reserved_2054',0
	.word	12899
	.byte	148,1,3,35,212,64,13
	.byte	'OCS',0
	.word	13032
	.byte	4,3,35,232,65,13
	.byte	'KRSTCLR',0
	.word	13140
	.byte	4,3,35,236,65,13
	.byte	'KRST1',0
	.word	13246
	.byte	4,3,35,240,65,13
	.byte	'KRST0',0
	.word	13371
	.byte	4,3,35,244,65,13
	.byte	'ACCEN1',0
	.word	13462
	.byte	4,3,35,248,65,13
	.byte	'ACCEN0',0
	.word	14033
	.byte	4,3,35,252,65,0,16
	.word	14073
.L74:
	.byte	3
	.word	14581
.L76:
	.byte	17,8,74,9,1,18
	.byte	'IfxHspdm_BSB_0',0,0,18
	.byte	'IfxHspdm_BSB_1',0,1,0,27,3,246,1,9,8,13
	.byte	'port',0
	.word	7959
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	423
	.byte	1,2,35,4,0,27,9,56,15,16,13
	.byte	'module',0
	.word	14586
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	14631
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	8060
	.byte	1,2,35,12,0,19
	.word	14670
.L81:
	.byte	3
	.word	14721
	.byte	27,9,64,15,16,13
	.byte	'module',0
	.word	14586
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	14631
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	8060
	.byte	1,2,35,12,0,19
	.word	14731
.L101:
	.byte	3
	.word	14782
.L113:
	.byte	17,8,82,9,1,18
	.byte	'IfxHspdm_Buffer_a',0,0,18
	.byte	'IfxHspdm_Buffer_b',0,1,18
	.byte	'IfxHspdm_Buffer_bufferCount',0,2,0
.L115:
	.byte	7
	.byte	'unsigned long int',0,4,7
.L123:
	.byte	17,8,201,1,9,1,18
	.byte	'IfxHspdm_MuteRange_0',0,0,18
	.byte	'IfxHspdm_MuteRange_1',0,1,0,7
	.byte	'short int',0,2,5,28
	.byte	'__wchar_t',0,10,1,1
	.word	14942
	.byte	28
	.byte	'__size_t',0,10,1,1
	.word	400
	.byte	28
	.byte	'__ptrdiff_t',0,10,1,1
	.word	416
	.byte	29,1,3
	.word	15010
	.byte	28
	.byte	'__codeptr',0,10,1,1
	.word	15012
	.byte	28
	.byte	'boolean',0,11,104,29
	.word	423
	.byte	28
	.byte	'uint8',0,11,108,29
	.word	423
	.byte	28
	.byte	'uint16',0,11,112,29
	.word	440
	.byte	28
	.byte	'uint32',0,11,116,29
	.word	14868
	.byte	28
	.byte	'uint64',0,11,121,29
	.word	282
	.byte	28
	.byte	'sint16',0,11,129,1,29
	.word	14942
	.byte	7
	.byte	'long int',0,4,5,28
	.byte	'sint32',0,11,134,1,29
	.word	15126
	.byte	7
	.byte	'long long int',0,8,5,28
	.byte	'sint64',0,11,141,1,29
	.word	15154
	.byte	28
	.byte	'float32',0,11,170,1,29
	.word	228
	.byte	28
	.byte	'pvoid',0,12,54,28
	.word	314
	.byte	28
	.byte	'Ifx_TickTime',0,12,76,28
	.word	15154
	.byte	28
	.byte	'Ifx_Priority',0,12,100,16
	.word	440
	.byte	28
	.byte	'Ifx_UReg_8Bit',0,13,96,24
	.word	423
	.byte	28
	.byte	'Ifx_UReg_32Bit',0,13,98,24
	.word	400
	.byte	28
	.byte	'Ifx_SReg_32Bit',0,13,101,24
	.word	416
	.byte	28
	.byte	'Ifx_HSPDM_ACCEN0_Bits',0,7,102,3
	.word	13502
	.byte	28
	.byte	'Ifx_HSPDM_ACCEN1_Bits',0,7,108,3
	.word	13411
	.byte	28
	.byte	'Ifx_HSPDM_ADCTG_Bits',0,7,115,3
	.word	11406
	.byte	28
	.byte	'Ifx_HSPDM_ADCTGCNT_Bits',0,7,122,3
	.word	11510
	.byte	28
	.byte	'Ifx_HSPDM_BUFA0_Bits',0,7,131,1,3
	.word	10700
	.byte	28
	.byte	'Ifx_HSPDM_BUFB0_Bits',0,7,140,1,3
	.word	10848
	.byte	28
	.byte	'Ifx_HSPDM_CLC_Bits',0,7,150,1,3
	.word	10417
	.byte	28
	.byte	'Ifx_HSPDM_CON_Bits',0,7,172,1,3
	.word	11621
	.byte	28
	.byte	'Ifx_HSPDM_CURRAD_Bits',0,7,179,1,3
	.word	10997
	.byte	28
	.byte	'Ifx_HSPDM_FLAGS_Bits',0,7,195,1,3
	.word	11972
	.byte	28
	.byte	'Ifx_HSPDM_FLAGSCLEAR_Bits',0,7,210,1,3
	.word	12442
	.byte	28
	.byte	'Ifx_HSPDM_FLAGSEN_Bits',0,7,225,1,3
	.word	12672
	.byte	28
	.byte	'Ifx_HSPDM_FLAGSSET_Bits',0,7,240,1,3
	.word	12214
	.byte	28
	.byte	'Ifx_HSPDM_ID_Bits',0,7,248,1,3
	.word	10576
	.byte	28
	.byte	'Ifx_HSPDM_KRST0_Bits',0,7,128,2,3
	.word	13286
	.byte	28
	.byte	'Ifx_HSPDM_KRST1_Bits',0,7,135,2,3
	.word	13180
	.byte	28
	.byte	'Ifx_HSPDM_KRSTCLR_Bits',0,7,142,2,3
	.word	13072
	.byte	28
	.byte	'Ifx_HSPDM_MUTE0_Bits',0,7,151,2,3
	.word	11108
	.byte	28
	.byte	'Ifx_HSPDM_MUTE1_Bits',0,7,160,2,3
	.word	11257
	.byte	28
	.byte	'Ifx_HSPDM_OCS_Bits',0,7,170,2,3
	.word	12910
	.byte	28
	.byte	'Ifx_HSPDM_ACCEN0',0,7,183,2,3
	.word	14033
	.byte	28
	.byte	'Ifx_HSPDM_ACCEN1',0,7,191,2,3
	.word	13462
	.byte	28
	.byte	'Ifx_HSPDM_ADCTG',0,7,199,2,3
	.word	11470
	.byte	28
	.byte	'Ifx_HSPDM_ADCTGCNT',0,7,207,2,3
	.word	11581
	.byte	28
	.byte	'Ifx_HSPDM_BUFA0',0,7,215,2,3
	.word	10808
	.byte	28
	.byte	'Ifx_HSPDM_BUFB0',0,7,223,2,3
	.word	10957
	.byte	28
	.byte	'Ifx_HSPDM_CLC',0,7,231,2,3
	.word	10536
	.byte	28
	.byte	'Ifx_HSPDM_CON',0,7,239,2,3
	.word	11932
	.byte	28
	.byte	'Ifx_HSPDM_CURRAD',0,7,247,2,3
	.word	11068
	.byte	28
	.byte	'Ifx_HSPDM_FLAGS',0,7,255,2,3
	.word	12174
	.byte	28
	.byte	'Ifx_HSPDM_FLAGSCLEAR',0,7,135,3,3
	.word	12632
	.byte	28
	.byte	'Ifx_HSPDM_FLAGSEN',0,7,143,3,3
	.word	12859
	.byte	28
	.byte	'Ifx_HSPDM_FLAGSSET',0,7,151,3,3
	.word	12402
	.byte	28
	.byte	'Ifx_HSPDM_ID',0,7,159,3,3
	.word	10660
	.byte	28
	.byte	'Ifx_HSPDM_KRST0',0,7,167,3,3
	.word	13371
	.byte	28
	.byte	'Ifx_HSPDM_KRST1',0,7,175,3,3
	.word	13246
	.byte	28
	.byte	'Ifx_HSPDM_KRSTCLR',0,7,183,3,3
	.word	13140
	.byte	28
	.byte	'Ifx_HSPDM_MUTE0',0,7,191,3,3
	.word	11217
	.byte	28
	.byte	'Ifx_HSPDM_MUTE1',0,7,199,3,3
	.word	11366
	.byte	28
	.byte	'Ifx_HSPDM_OCS',0,7,207,3,3
	.word	13032
	.byte	16
	.word	14073
	.byte	28
	.byte	'Ifx_HSPDM',0,7,248,3,3
	.word	16442
	.byte	17,14,76,9,1,18
	.byte	'IfxHspdm_HwTriggerSource_CCU6',0,0,0,28
	.byte	'IfxHspdm_HwTriggerSource',0,14,79,3
	.word	16466
	.byte	28
	.byte	'Ifx_P_ACCEN0_Bits',0,4,102,3
	.word	6817
	.byte	28
	.byte	'Ifx_P_ACCEN1_Bits',0,4,108,3
	.word	6730
	.byte	28
	.byte	'Ifx_P_ESR_Bits',0,4,130,1,3
	.word	3298
	.byte	28
	.byte	'Ifx_P_ID_Bits',0,4,138,1,3
	.word	1349
	.byte	28
	.byte	'Ifx_P_IN_Bits',0,4,160,1,3
	.word	2345
	.byte	28
	.byte	'Ifx_P_IOCR0_Bits',0,4,173,1,3
	.word	1478
	.byte	28
	.byte	'Ifx_P_IOCR12_Bits',0,4,186,1,3
	.word	2125
	.byte	28
	.byte	'Ifx_P_IOCR4_Bits',0,4,199,1,3
	.word	1693
	.byte	28
	.byte	'Ifx_P_IOCR8_Bits',0,4,212,1,3
	.word	1908
	.byte	28
	.byte	'Ifx_P_LPCR_Bits',0,4,231,1,3
	.word	6392
	.byte	28
	.byte	'Ifx_P_OMCR_Bits',0,4,253,1,3
	.word	6044
	.byte	28
	.byte	'Ifx_P_OMCR0_Bits',0,4,136,2,3
	.word	5031
	.byte	28
	.byte	'Ifx_P_OMCR12_Bits',0,4,146,2,3
	.word	5555
	.byte	28
	.byte	'Ifx_P_OMCR4_Bits',0,4,157,2,3
	.word	5205
	.byte	28
	.byte	'Ifx_P_OMCR8_Bits',0,4,168,2,3
	.word	5379
	.byte	28
	.byte	'Ifx_P_OMR_Bits',0,4,205,2,3
	.word	778
	.byte	28
	.byte	'Ifx_P_OMSR_Bits',0,4,227,2,3
	.word	5711
	.byte	28
	.byte	'Ifx_P_OMSR0_Bits',0,4,237,2,3
	.word	4368
	.byte	28
	.byte	'Ifx_P_OMSR12_Bits',0,4,248,2,3
	.word	4856
	.byte	28
	.byte	'Ifx_P_OMSR4_Bits',0,4,131,3,3
	.word	4515
	.byte	28
	.byte	'Ifx_P_OMSR8_Bits',0,4,142,3,3
	.word	4684
	.byte	28
	.byte	'Ifx_P_OUT_Bits',0,4,164,3,3
	.word	462
	.byte	28
	.byte	'Ifx_P_PCSR_Bits',0,4,187,3,3
	.word	4004
	.byte	28
	.byte	'Ifx_P_PDISC_Bits',0,4,209,3,3
	.word	3638
	.byte	28
	.byte	'Ifx_P_PDR0_Bits',0,4,230,3,3
	.word	2669
	.byte	28
	.byte	'Ifx_P_PDR1_Bits',0,4,251,3,3
	.word	2973
	.byte	28
	.byte	'Ifx_P_ACCEN0',0,4,136,4,3
	.word	7344
	.byte	28
	.byte	'Ifx_P_ACCEN1',0,4,144,4,3
	.word	6777
	.byte	28
	.byte	'Ifx_P_ESR',0,4,152,4,3
	.word	3589
	.byte	28
	.byte	'Ifx_P_ID',0,4,160,4,3
	.word	1429
	.byte	28
	.byte	'Ifx_P_IN',0,4,168,4,3
	.word	2620
	.byte	28
	.byte	'Ifx_P_IOCR0',0,4,176,4,3
	.word	1653
	.byte	28
	.byte	'Ifx_P_IOCR12',0,4,184,4,3
	.word	2305
	.byte	28
	.byte	'Ifx_P_IOCR4',0,4,192,4,3
	.word	1868
	.byte	28
	.byte	'Ifx_P_IOCR8',0,4,200,4,3
	.word	2085
	.byte	28
	.byte	'Ifx_P_LPCR',0,4,208,4,3
	.word	6672
	.byte	28
	.byte	'Ifx_P_OMCR',0,4,216,4,3
	.word	6352
	.byte	28
	.byte	'Ifx_P_OMCR0',0,4,224,4,3
	.word	5165
	.byte	28
	.byte	'Ifx_P_OMCR12',0,4,232,4,3
	.word	5671
	.byte	28
	.byte	'Ifx_P_OMCR4',0,4,240,4,3
	.word	5339
	.byte	28
	.byte	'Ifx_P_OMCR8',0,4,248,4,3
	.word	5515
	.byte	28
	.byte	'Ifx_P_OMR',0,4,128,5,3
	.word	1309
	.byte	28
	.byte	'Ifx_P_OMSR',0,4,136,5,3
	.word	6004
	.byte	28
	.byte	'Ifx_P_OMSR0',0,4,144,5,3
	.word	4475
	.byte	28
	.byte	'Ifx_P_OMSR12',0,4,152,5,3
	.word	4991
	.byte	28
	.byte	'Ifx_P_OMSR4',0,4,160,5,3
	.word	4644
	.byte	28
	.byte	'Ifx_P_OMSR8',0,4,168,5,3
	.word	4816
	.byte	28
	.byte	'Ifx_P_OUT',0,4,176,5,3
	.word	738
	.byte	28
	.byte	'Ifx_P_PCSR',0,4,184,5,3
	.word	4328
	.byte	28
	.byte	'Ifx_P_PDISC',0,4,192,5,3
	.word	3964
	.byte	28
	.byte	'Ifx_P_PDR0',0,4,200,5,3
	.word	2933
	.byte	28
	.byte	'Ifx_P_PDR1',0,4,208,5,3
	.word	3249
	.byte	16
	.word	7384
	.byte	28
	.byte	'Ifx_P',0,4,128,6,3
	.word	17731
	.byte	17,15,162,11,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,28
	.byte	'IfxScu_WDTCON1_IR',0,15,167,11,3
	.word	17751
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,16,68,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_ACCEN00_Bits',0,16,102,3
	.word	17873
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,16,105,16,4,11
	.byte	'reserved_0',0,4
	.word	400
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN01_Bits',0,16,108,3
	.word	18432
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,16,111,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_ACCEN10_Bits',0,16,145,1,3
	.word	18511
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,16,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	400
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN11_Bits',0,16,151,1,3
	.word	19071
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,16,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	400
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,16,164,1,3
	.word	19152
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,16,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	423
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	423
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	423
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	423
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	423
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	423
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON0_Bits',0,16,181,1,3
	.word	19369
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,16,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	423
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	423
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	423
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON1_Bits',0,16,199,1,3
	.word	19642
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,16,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	400
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON10_Bits',0,16,206,1,3
	.word	19968
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,16,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	400
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON11_Bits',0,16,213,1,3
	.word	20070
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,16,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	423
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	400
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	423
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON2_Bits',0,16,228,1,3
	.word	20172
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,16,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	423
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	400
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON3_Bits',0,16,248,1,3
	.word	20446
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,16,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	440
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	400
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON4_Bits',0,16,132,2,3
	.word	20815
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,16,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	400
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON5_Bits',0,16,143,2,3
	.word	20995
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,16,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	400
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6_Bits',0,16,150,2,3
	.word	21164
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,16,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	400
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON7_Bits',0,16,157,2,3
	.word	21264
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,16,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	400
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON8_Bits',0,16,164,2,3
	.word	21364
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,16,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	400
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON9_Bits',0,16,171,2,3
	.word	21464
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,16,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	423
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	423
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	423
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CHIPID_Bits',0,16,185,2,3
	.word	21564
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,16,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	440
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	440
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,16,200,2,3
	.word	21767
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,16,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	440
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	400
	.byte	20,0,2,35,0,0,28
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,16,207,2,3
	.word	21999
	.byte	7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_EICON0_Bits',0,16,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	22101
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	22101
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	22101
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	22101
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SCU_EICON0_Bits',0,16,216,2,3
	.word	22117
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,16,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	400
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_EICON1_Bits',0,16,228,2,3
	.word	22245
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,16,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	423
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	423
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	400
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	423
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	423
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EICR_Bits',0,16,250,2,3
	.word	22434
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,16,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	423
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	423
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	423
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_EIFILT_Bits',0,16,147,3,3
	.word	22798
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,16,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	400
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR_Bits',0,16,161,3,3
	.word	23237
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,16,164,3,16,4,11
	.byte	'AE',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	440
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_EISR_Bits',0,16,174,3,3
	.word	23448
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,16,177,3,16,4,11
	.byte	'POL',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	440
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	440
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_EMSR_Bits',0,16,187,3,3
	.word	23624
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,16,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	400
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	423
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	423
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_EMSSW_Bits',0,16,196,3,3
	.word	23818
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,16,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	440
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	400
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,16,204,3,3
	.word	23953
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,16,207,3,16,4,11
	.byte	'ARI',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	400
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG_Bits',0,16,212,3,3
	.word	24089
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,16,215,3,16,4,11
	.byte	'EN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	423
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	440
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	423
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	423
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	423
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_EXTCON_Bits',0,16,226,3,3
	.word	24200
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,16,229,3,16,4,11
	.byte	'STEP',0,2
	.word	440
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	423
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	440
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_FDR_Bits',0,16,237,3,3
	.word	24418
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,16,240,3,16,4,11
	.byte	'FS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_FMR_Bits',0,16,132,4,3
	.word	24581
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,16,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_ID_Bits',0,16,140,4,3
	.word	24917
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,16,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	423
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	423
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_SCU_IGCR_Bits',0,16,167,4,3
	.word	25024
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,16,170,4,16,4,11
	.byte	'P0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	400
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_IN_Bits',0,16,175,4,3
	.word	25476
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,16,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_IOCR_Bits',0,16,185,4,3
	.word	25575
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,16,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	400
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	440
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,16,198,4,3
	.word	25725
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,16,201,4,16,4,11
	.byte	'SEED',0,4
	.word	400
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	423
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,16,208,4,3
	.word	25963
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,16,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	440
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	400
	.byte	20,0,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,16,215,4,3
	.word	26124
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,16,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	400
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,16,221,4,3
	.word	26230
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,16,224,4,16,4,11
	.byte	'LS2',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	440
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	440
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LCLCON0_Bits',0,16,232,4,3
	.word	26316
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,16,235,4,16,4,11
	.byte	'LS3',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	440
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	440
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LCLCON1_Bits',0,16,243,4,3
	.word	26484
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,16,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	440
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	440
	.byte	10,0,2,35,2,0,28
	.byte	'Ifx_SCU_LCLTEST_Bits',0,16,134,5,3
	.word	26652
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,16,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	423
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	440
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_MANID_Bits',0,16,142,5,3
	.word	26966
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,16,145,5,16,4,11
	.byte	'PS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	440
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	440
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_OMR_Bits',0,16,153,5,3
	.word	27077
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,16,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	423
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	423
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	423
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	423
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	423
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_OSCCON_Bits',0,16,177,5,3
	.word	27235
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,16,180,5,16,4,11
	.byte	'P0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	400
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_OUT_Bits',0,16,185,5,3
	.word	27646
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,16,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	440
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	6,0,2,35,3,0,28
	.byte	'Ifx_SCU_OVCCON_Bits',0,16,204,5,3
	.word	27747
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,16,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	400
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,16,216,5,3
	.word	28065
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,16,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	400
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC_Bits',0,16,224,5,3
	.word	28252
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,16,227,5,16,4,11
	.byte	'PD0',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	400
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDR_Bits',0,16,234,5,3
	.word	28363
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,16,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	400
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR_Bits',0,16,248,5,3
	.word	28496
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,16,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	440
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	423
	.byte	5,0,2,35,3,0,28
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,16,134,6,3
	.word	28699
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,16,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	400
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,16,143,6,3
	.word	28939
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,16,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	400
	.byte	25,0,2,35,0,0,28
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,16,156,6,3
	.word	29083
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,16,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	400
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR0_Bits',0,16,165,6,3
	.word	29305
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,16,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	400
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR1_Bits',0,16,174,6,3
	.word	29441
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,16,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	400
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR2_Bits',0,16,183,6,3
	.word	29577
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,16,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	400
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR3_Bits',0,16,192,6,3
	.word	29713
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,16,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	400
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR4_Bits',0,16,201,6,3
	.word	29849
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,16,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	400
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR5_Bits',0,16,210,6,3
	.word	29985
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,16,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	440
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	440
	.byte	12,0,2,35,2,0,28
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,16,227,6,3
	.word	30121
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,16,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	423
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	400
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	423
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,16,241,6,3
	.word	30393
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,16,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	440
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	440
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	423
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,16,135,7,3
	.word	30638
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,16,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	440
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	440
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	6,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,16,143,7,3
	.word	31026
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,16,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	423
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	423
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,16,157,7,3
	.word	31144
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,16,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	423
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	423
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	423
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	440
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	423
	.byte	6,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,16,172,7,3
	.word	31387
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,16,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	423
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	423
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	423
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	423
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	423
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	423
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	423
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	423
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	440
	.byte	10,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON_Bits',0,16,189,7,3
	.word	31654
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,16,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	440
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON2_Bits',0,16,206,7,3
	.word	31913
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,16,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	400
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON3_Bits',0,16,212,7,3
	.word	32218
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,16,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	423
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	423
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	423
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	423
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	423
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,16,245,7,3
	.word	32299
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,16,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	22101
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	22101
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	22101
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	22101
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SCU_SEICON0_Bits',0,16,254,7,3
	.word	32848
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,16,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	400
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_SEICON1_Bits',0,16,138,8,3
	.word	32978
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,16,141,8,16,4,11
	.byte	'AE',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	440
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_SEISR_Bits',0,16,151,8,3
	.word	33169
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,16,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	440
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	423
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	423
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_STCON_Bits',0,16,161,8,3
	.word	33347
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,16,164,8,16,4,11
	.byte	'MEM',0,4
	.word	400
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM1_Bits',0,16,167,8,3
	.word	33498
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,16,170,8,16,4,11
	.byte	'MEM',0,4
	.word	400
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM2_Bits',0,16,173,8,3
	.word	33570
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,16,176,8,16,4,11
	.byte	'MEM',0,4
	.word	400
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM3_Bits',0,16,179,8,3
	.word	33642
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,16,182,8,16,4,11
	.byte	'MEM',0,4
	.word	400
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM4_Bits',0,16,185,8,3
	.word	33714
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,16,188,8,16,4,11
	.byte	'MEM',0,4
	.word	400
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM5_Bits',0,16,191,8,3
	.word	33786
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,16,194,8,16,4,11
	.byte	'MEM',0,4
	.word	400
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM6_Bits',0,16,197,8,3
	.word	33858
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,16,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	423
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	423
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	423
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	423
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	423
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	423
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	423
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	423
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_STSTAT_Bits',0,16,216,8,3
	.word	33930
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,16,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	440
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,16,224,8,3
	.word	34259
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,16,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	423
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	423
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,16,234,8,3
	.word	34379
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,16,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	423
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_SYSCON_Bits',0,16,249,8,3
	.word	34549
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,16,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	440
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	423
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	423
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	423
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	423
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,16,137,9,3
	.word	34812
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,16,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	423
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	400
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,16,144,9,3
	.word	35091
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,16,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	440
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,16,151,9,3
	.word	35195
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,16,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	423
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	400
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,16,164,9,3
	.word	35301
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,16,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	400
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,16,174,9,3
	.word	35524
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,16,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	423
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	423
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	423
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	423
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	423
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	423
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	423
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	423
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	423
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	423
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,16,199,9,3
	.word	35672
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,16,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	423
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	423
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	423
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	423
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,16,215,9,3
	.word	36160
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,16,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	400
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET_Bits',0,16,225,9,3
	.word	36457
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,16,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	400
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,16,235,9,3
	.word	36605
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,16,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	22101
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	22101
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	22101
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	22101
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,16,244,9,3
	.word	36755
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,16,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,16,132,10,3
	.word	36885
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,16,135,10,16,4,11
	.byte	'AE',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,16,148,10,3
	.word	37145
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,16,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	22101
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	22101
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	22101
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	22101
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,16,157,10,3
	.word	37368
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,16,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,16,173,10,3
	.word	37494
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,16,176,10,16,4,11
	.byte	'AE',0,1
	.word	423
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	423
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	423
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	423
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	423
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	423
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	423
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	423
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	423
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	423
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	440
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,16,189,10,3
	.word	37746
	.byte	12,16,197,10,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17873
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN00',0,16,202,10,3
	.word	37965
	.byte	12,16,205,10,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18432
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN01',0,16,210,10,3
	.word	38030
	.byte	12,16,213,10,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18511
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN10',0,16,218,10,3
	.word	38095
	.byte	12,16,221,10,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19071
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN11',0,16,226,10,3
	.word	38160
	.byte	12,16,229,10,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19152
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS',0,16,234,10,3
	.word	38225
	.byte	12,16,237,10,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19369
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON0',0,16,242,10,3
	.word	38290
	.byte	12,16,245,10,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19642
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON1',0,16,250,10,3
	.word	38355
	.byte	12,16,253,10,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19968
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON10',0,16,130,11,3
	.word	38420
	.byte	12,16,133,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20070
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON11',0,16,138,11,3
	.word	38486
	.byte	12,16,141,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20172
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON2',0,16,146,11,3
	.word	38552
	.byte	12,16,149,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20446
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON3',0,16,154,11,3
	.word	38617
	.byte	12,16,157,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20815
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON4',0,16,162,11,3
	.word	38682
	.byte	12,16,165,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20995
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON5',0,16,170,11,3
	.word	38747
	.byte	12,16,173,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21164
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6',0,16,178,11,3
	.word	38812
	.byte	12,16,181,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21264
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON7',0,16,186,11,3
	.word	38877
	.byte	12,16,189,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21364
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON8',0,16,194,11,3
	.word	38942
	.byte	12,16,197,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21464
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON9',0,16,202,11,3
	.word	39007
	.byte	12,16,205,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21564
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CHIPID',0,16,210,11,3
	.word	39072
	.byte	12,16,213,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21767
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSCLIM',0,16,218,11,3
	.word	39136
	.byte	12,16,221,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21999
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSCSTAT',0,16,226,11,3
	.word	39201
	.byte	12,16,229,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22117
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EICON0',0,16,234,11,3
	.word	39267
	.byte	12,16,237,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22245
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EICON1',0,16,242,11,3
	.word	39331
	.byte	12,16,245,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22434
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EICR',0,16,250,11,3
	.word	39395
	.byte	12,16,253,11,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22798
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EIFILT',0,16,130,12,3
	.word	39457
	.byte	12,16,133,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23237
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR',0,16,138,12,3
	.word	39521
	.byte	12,16,141,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23448
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EISR',0,16,146,12,3
	.word	39583
	.byte	12,16,149,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23624
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EMSR',0,16,154,12,3
	.word	39645
	.byte	12,16,157,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23818
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EMSSW',0,16,162,12,3
	.word	39707
	.byte	12,16,165,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23953
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,16,170,12,3
	.word	39770
	.byte	12,16,173,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24089
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG',0,16,178,12,3
	.word	39843
	.byte	12,16,181,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24200
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EXTCON',0,16,186,12,3
	.word	39908
	.byte	12,16,189,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24418
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FDR',0,16,194,12,3
	.word	39972
	.byte	12,16,197,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24581
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FMR',0,16,202,12,3
	.word	40033
	.byte	12,16,205,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24917
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ID',0,16,210,12,3
	.word	40094
	.byte	12,16,213,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25024
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IGCR',0,16,218,12,3
	.word	40154
	.byte	12,16,221,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25476
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IN',0,16,226,12,3
	.word	40216
	.byte	12,16,229,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25575
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IOCR',0,16,234,12,3
	.word	40276
	.byte	12,16,237,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25725
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL0',0,16,242,12,3
	.word	40338
	.byte	12,16,245,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25963
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL1',0,16,250,12,3
	.word	40406
	.byte	12,16,253,12,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26124
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL2',0,16,130,13,3
	.word	40474
	.byte	12,16,133,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26230
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL3',0,16,138,13,3
	.word	40542
	.byte	12,16,141,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26316
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLCON0',0,16,146,13,3
	.word	40610
	.byte	12,16,149,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26484
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLCON1',0,16,154,13,3
	.word	40675
	.byte	12,16,157,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26652
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST',0,16,162,13,3
	.word	40740
	.byte	12,16,165,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26966
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_MANID',0,16,170,13,3
	.word	40805
	.byte	12,16,173,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27077
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OMR',0,16,178,13,3
	.word	40868
	.byte	12,16,181,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27235
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OSCCON',0,16,186,13,3
	.word	40929
	.byte	12,16,189,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27646
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OUT',0,16,194,13,3
	.word	40993
	.byte	12,16,197,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27747
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCCON',0,16,202,13,3
	.word	41054
	.byte	12,16,205,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28065
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE',0,16,210,13,3
	.word	41118
	.byte	12,16,213,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28252
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC',0,16,218,13,3
	.word	41185
	.byte	12,16,221,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28363
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDR',0,16,226,13,3
	.word	41248
	.byte	12,16,229,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28496
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR',0,16,234,13,3
	.word	41309
	.byte	12,16,237,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28699
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PERPLLCON0',0,16,242,13,3
	.word	41371
	.byte	12,16,245,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28939
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PERPLLCON1',0,16,250,13,3
	.word	41439
	.byte	12,16,253,13,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29083
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PERPLLSTAT',0,16,130,14,3
	.word	41507
	.byte	12,16,133,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29305
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR0',0,16,138,14,3
	.word	41575
	.byte	12,16,141,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29441
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR1',0,16,146,14,3
	.word	41639
	.byte	12,16,149,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29577
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR2',0,16,154,14,3
	.word	41703
	.byte	12,16,157,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29713
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR3',0,16,162,14,3
	.word	41767
	.byte	12,16,165,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29849
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR4',0,16,170,14,3
	.word	41831
	.byte	12,16,173,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29985
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR5',0,16,178,14,3
	.word	41895
	.byte	12,16,181,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30121
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSTAT0',0,16,186,14,3
	.word	41959
	.byte	12,16,189,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30393
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR1',0,16,194,14,3
	.word	42024
	.byte	12,16,197,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30638
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMTRCSR0',0,16,202,14,3
	.word	42089
	.byte	12,16,205,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31026
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMTRCSR1',0,16,210,14,3
	.word	42155
	.byte	12,16,213,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31144
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMTRCSR2',0,16,218,14,3
	.word	42221
	.byte	12,16,221,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31387
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMTRCSR3',0,16,226,14,3
	.word	42287
	.byte	12,16,229,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31654
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON',0,16,234,14,3
	.word	42353
	.byte	12,16,237,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31913
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON2',0,16,242,14,3
	.word	42417
	.byte	12,16,245,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32218
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON3',0,16,250,14,3
	.word	42482
	.byte	12,16,253,14,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32299
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTSTAT',0,16,130,15,3
	.word	42547
	.byte	12,16,133,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32848
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SEICON0',0,16,138,15,3
	.word	42612
	.byte	12,16,141,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32978
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SEICON1',0,16,146,15,3
	.word	42677
	.byte	12,16,149,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33169
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SEISR',0,16,154,15,3
	.word	42742
	.byte	12,16,157,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33347
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STCON',0,16,162,15,3
	.word	42805
	.byte	12,16,165,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33498
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM1',0,16,170,15,3
	.word	42868
	.byte	12,16,173,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33570
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM2',0,16,178,15,3
	.word	42932
	.byte	12,16,181,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33642
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM3',0,16,186,15,3
	.word	42996
	.byte	12,16,189,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33714
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM4',0,16,194,15,3
	.word	43060
	.byte	12,16,197,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33786
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM5',0,16,202,15,3
	.word	43124
	.byte	12,16,205,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33858
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STMEM6',0,16,210,15,3
	.word	43188
	.byte	12,16,213,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33930
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STSTAT',0,16,218,15,3
	.word	43252
	.byte	12,16,221,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34259
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SWAPCTRL',0,16,226,15,3
	.word	43316
	.byte	12,16,229,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34379
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON',0,16,234,15,3
	.word	43382
	.byte	12,16,237,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34549
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON',0,16,242,15,3
	.word	43448
	.byte	12,16,245,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34812
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSPLLCON0',0,16,250,15,3
	.word	43512
	.byte	12,16,253,15,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35091
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSPLLCON1',0,16,130,16,3
	.word	43580
	.byte	12,16,133,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35195
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSPLLCON2',0,16,138,16,3
	.word	43648
	.byte	12,16,141,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35301
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSPLLSTAT',0,16,146,16,3
	.word	43716
	.byte	12,16,149,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35524
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR',0,16,154,16,3
	.word	43784
	.byte	12,16,157,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35672
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS0',0,16,162,16,3
	.word	43849
	.byte	12,16,165,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36160
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS1',0,16,170,16,3
	.word	43915
	.byte	12,16,173,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36457
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET',0,16,178,16,3
	.word	43981
	.byte	12,16,181,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36605
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT',0,16,186,16,3
	.word	44046
	.byte	12,16,189,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36755
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTCPU_CON0',0,16,194,16,3
	.word	44112
	.byte	12,16,197,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36885
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTCPU_CON1',0,16,202,16,3
	.word	44181
	.byte	12,16,205,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37145
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTCPU_SR',0,16,210,16,3
	.word	44250
	.byte	12,16,213,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37368
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0',0,16,218,16,3
	.word	44317
	.byte	12,16,221,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37494
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON1',0,16,226,16,3
	.word	44384
	.byte	12,16,229,16,9,4,13
	.byte	'U',0
	.word	400
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	416
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37746
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_SR',0,16,234,16,3
	.word	44451
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,16,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	39770
	.byte	4,2,35,0,0,16
	.word	44516
	.byte	28
	.byte	'Ifx_SCU_ESRCFGX',0,16,249,16,3
	.word	44557
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU',0,16,136,17,25,12,13
	.byte	'CON0',0
	.word	44112
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	44181
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	44250
	.byte	4,2,35,8,0,16
	.word	44587
	.byte	28
	.byte	'Ifx_SCU_WDTCPU',0,16,141,17,3
	.word	44650
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,16,156,17,25,12,13
	.byte	'CON0',0
	.word	44317
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	44384
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	44451
	.byte	4,2,35,8,0,16
	.word	44679
	.byte	28
	.byte	'Ifx_SCU_WDTS',0,16,161,17,3
	.word	44740
	.byte	17,3,73,9,1,18
	.byte	'IfxPort_ControlledBy_port',0,0,18
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,28
	.byte	'IfxPort_ControlledBy',0,3,77,3
	.word	44767
	.byte	17,3,81,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,28
	.byte	'IfxPort_InputMode',0,3,87,3
	.word	44858
	.byte	17,3,91,9,1,18
	.byte	'IfxPort_LvdsMode_high',0,0,18
	.byte	'IfxPort_LvdsMode_medium',0,1,0,28
	.byte	'IfxPort_LvdsMode',0,3,95,3
	.word	45009
	.byte	28
	.byte	'IfxPort_Mode',0,3,122,3
	.word	9142
	.byte	28
	.byte	'IfxPort_OutputIdx',0,3,136,1,3
	.word	8060
	.byte	28
	.byte	'IfxPort_OutputMode',0,3,145,1,3
	.word	7964
	.byte	28
	.byte	'IfxPort_PadDriver',0,3,165,1,3
	.word	9886
	.byte	17,3,169,1,9,1,18
	.byte	'IfxPort_PadSupply_3v',0,0,18
	.byte	'IfxPort_PadSupply_5v',0,1,0,28
	.byte	'IfxPort_PadSupply',0,3,173,1,3
	.word	45193
	.byte	17,3,177,1,9,1,18
	.byte	'IfxPort_PinFunctionMode_digital',0,0,18
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,28
	.byte	'IfxPort_PinFunctionMode',0,3,181,1,3
	.word	45273
	.byte	28
	.byte	'IfxPort_State',0,3,193,1,3
	.word	8373
	.byte	28
	.byte	'IfxPort_Pin',0,3,250,1,3
	.word	14631
	.byte	19
	.word	14670
	.byte	28
	.byte	'IfxHspdm_Bs_Out',0,9,61,3
	.word	45424
	.byte	19
	.word	14731
	.byte	28
	.byte	'IfxHspdm_Mute_Out',0,9,69,3
	.word	45453
	.byte	17,17,66,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_dma',0,1,18
	.byte	'IfxSrc_Tos_cpu1',0,2,18
	.byte	'IfxSrc_Tos_cpu2',0,3,18
	.byte	'IfxSrc_Tos_cpu3',0,4,18
	.byte	'IfxSrc_Tos_cpu4',0,5,18
	.byte	'IfxSrc_Tos_cpu5',0,6,0,28
	.byte	'IfxSrc_Tos',0,17,75,3
	.word	45484
	.byte	28
	.byte	'Ifx_SRC_SRCR_Bits',0,6,85,3
	.word	8554
	.byte	28
	.byte	'Ifx_SRC_SRCR',0,6,98,3
	.word	8844
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,6,110,25,4,13
	.byte	'SB',0
	.word	8844
	.byte	4,2,35,0,0,16
	.word	45681
	.byte	28
	.byte	'Ifx_SRC_CPU_CPU',0,6,113,3
	.word	45716
	.byte	14,24
	.word	45681
	.byte	15,5,0,16
	.word	45745
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,6,128,1,25,24,13
	.byte	'CPU',0
	.word	45754
	.byte	24,2,35,0,0,16
	.word	45759
	.byte	28
	.byte	'Ifx_SRC_CPU',0,6,131,1,3
	.word	45792
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,6,146,1,25,4,13
	.byte	'SR',0
	.word	8844
	.byte	4,2,35,0,0,16
	.word	45818
	.byte	28
	.byte	'Ifx_SRC_AGBT_AGBT',0,6,149,1,3
	.word	45856
	.byte	14,4
	.word	45818
	.byte	15,0,0,16
	.word	45888
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,6,164,1,25,4,13
	.byte	'AGBT',0
	.word	45897
	.byte	4,2,35,0,0,16
	.word	45902
	.byte	28
	.byte	'Ifx_SRC_AGBT',0,6,167,1,3
	.word	45937
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,6,182,1,25,4,13
	.byte	'SR',0
	.word	8844
	.byte	4,2,35,0,0,16
	.word	45964
	.byte	28
	.byte	'Ifx_SRC_XBAR_XBAR',0,6,185,1,3
	.word	46002
	.byte	14,12
	.word	45964
	.byte	15,2,0,16
	.word	46034
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,6,200,1,25,12,13
	.byte	'XBAR',0
	.word	46043
	.byte	12,2,35,0,0,16
	.word	46048
	.byte	28
	.byte	'Ifx_SRC_XBAR',0,6,203,1,3
	.word	46083
	.byte	14,8
	.word	8844
	.byte	15,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,6,218,1,25,8,13
	.byte	'SR',0
	.word	46110
	.byte	8,2,35,0,0,16
	.word	46119
	.byte	28
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,6,221,1,3
	.word	46165
	.byte	16
	.word	46119
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,6,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	46205
	.byte	8,2,35,0,0,16
	.word	46210
	.byte	28
	.byte	'Ifx_SRC_CERBERUS',0,6,239,1,3
	.word	46253
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,6,254,1,25,12,13
	.byte	'TX',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	8844
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	8844
	.byte	4,2,35,8,0,16
	.word	46284
	.byte	28
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,6,131,2,3
	.word	46351
	.byte	14,144,1
	.word	46284
	.byte	15,11,0,16
	.word	46387
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,6,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	46397
	.byte	144,1,2,35,0,0,16
	.word	46402
	.byte	28
	.byte	'Ifx_SRC_ASCLIN',0,6,149,2,3
	.word	46443
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,6,164,2,25,20,13
	.byte	'TX',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	8844
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	8844
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	8844
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	8844
	.byte	4,2,35,16,0,16
	.word	46472
	.byte	28
	.byte	'Ifx_SRC_QSPI_QSPI',0,6,171,2,3
	.word	46558
	.byte	14,120
	.word	46472
	.byte	15,5,0,16
	.word	46590
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,6,186,2,25,120,13
	.byte	'QSPI',0
	.word	46599
	.byte	120,2,35,0,0,16
	.word	46604
	.byte	28
	.byte	'Ifx_SRC_QSPI',0,6,189,2,3
	.word	46639
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,6,204,2,25,4,13
	.byte	'SR',0
	.word	8844
	.byte	4,2,35,0,0,16
	.word	46666
	.byte	28
	.byte	'Ifx_SRC_HSCT_HSCT',0,6,207,2,3
	.word	46704
	.byte	14,8
	.word	46666
	.byte	15,1,0,16
	.word	46736
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,6,222,2,25,8,13
	.byte	'HSCT',0
	.word	46745
	.byte	8,2,35,0,0,16
	.word	46750
	.byte	28
	.byte	'Ifx_SRC_HSCT',0,6,225,2,3
	.word	46785
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,6,240,2,25,16,13
	.byte	'COK',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	8844
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	8844
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	8844
	.byte	4,2,35,12,0,16
	.word	46812
	.byte	28
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,6,246,2,3
	.word	46893
	.byte	14,64
	.word	46812
	.byte	15,3,0,16
	.word	46928
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,6,133,3,25,68,13
	.byte	'CH',0
	.word	46937
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	8844
	.byte	4,2,35,64,0,16
	.word	46942
	.byte	28
	.byte	'Ifx_SRC_HSSL_HSSL',0,6,137,3,3
	.word	46993
	.byte	14,136,1
	.word	46942
	.byte	15,1,0,16
	.word	47025
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,6,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	47035
	.byte	136,1,2,35,0,0,16
	.word	47040
	.byte	28
	.byte	'Ifx_SRC_HSSL',0,6,155,3,3
	.word	47077
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,6,170,3,25,16,13
	.byte	'DTR',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	8844
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	8844
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	1469
	.byte	4,2,35,12,0,16
	.word	47104
	.byte	28
	.byte	'Ifx_SRC_I2C_I2C',0,6,176,3,3
	.word	47185
	.byte	14,32
	.word	47104
	.byte	15,1,0,16
	.word	47215
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,6,191,3,25,32,13
	.byte	'I2C',0
	.word	47224
	.byte	32,2,35,0,0,16
	.word	47229
	.byte	28
	.byte	'Ifx_SRC_I2C',0,6,194,3,3
	.word	47262
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,6,209,3,25,4,13
	.byte	'SR',0
	.word	8844
	.byte	4,2,35,0,0,16
	.word	47288
	.byte	28
	.byte	'Ifx_SRC_SENT_SENT',0,6,212,3,3
	.word	47326
	.byte	14,40
	.word	47288
	.byte	15,9,0,16
	.word	47358
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,6,227,3,25,40,13
	.byte	'SENT',0
	.word	47367
	.byte	40,2,35,0,0,16
	.word	47372
	.byte	28
	.byte	'Ifx_SRC_SENT',0,6,230,3,3
	.word	47407
	.byte	14,20
	.word	8844
	.byte	15,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,6,245,3,25,20,13
	.byte	'SR',0
	.word	47434
	.byte	20,2,35,0,0,16
	.word	47443
	.byte	28
	.byte	'Ifx_SRC_MSC_MSC',0,6,248,3,3
	.word	47479
	.byte	14,80
	.word	47443
	.byte	15,3,0,16
	.word	47509
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,6,135,4,25,80,13
	.byte	'MSC',0
	.word	47518
	.byte	80,2,35,0,0,16
	.word	47523
	.byte	28
	.byte	'Ifx_SRC_MSC',0,6,138,4,3
	.word	47556
	.byte	14,16
	.word	8844
	.byte	15,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,6,153,4,25,16,13
	.byte	'SR',0
	.word	47582
	.byte	16,2,35,0,0,16
	.word	47591
	.byte	28
	.byte	'Ifx_SRC_CCU6_CCU',0,6,156,4,3
	.word	47628
	.byte	14,32
	.word	47591
	.byte	15,1,0,16
	.word	47659
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,6,171,4,25,32,13
	.byte	'CCU',0
	.word	47668
	.byte	32,2,35,0,0,16
	.word	47673
	.byte	28
	.byte	'Ifx_SRC_CCU6',0,6,174,4,3
	.word	47707
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,6,189,4,25,24,13
	.byte	'CIRQ',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	8844
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	8844
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	8844
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	8844
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	8844
	.byte	4,2,35,20,0,16
	.word	47734
	.byte	28
	.byte	'Ifx_SRC_GPT12_GPT12',0,6,197,4,3
	.word	47836
	.byte	14,24
	.word	47734
	.byte	15,0,0,16
	.word	47870
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,6,212,4,25,24,13
	.byte	'GPT12',0
	.word	47879
	.byte	24,2,35,0,0,16
	.word	47884
	.byte	28
	.byte	'Ifx_SRC_GPT12',0,6,215,4,3
	.word	47921
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,6,230,4,25,8,13
	.byte	'SR',0
	.word	46110
	.byte	8,2,35,0,0,16
	.word	47949
	.byte	28
	.byte	'Ifx_SRC_STM_STM',0,6,233,4,3
	.word	47985
	.byte	14,48
	.word	47949
	.byte	15,5,0,16
	.word	48015
	.byte	10
	.byte	'_Ifx_SRC_STM',0,6,248,4,25,48,13
	.byte	'STM',0
	.word	48024
	.byte	48,2,35,0,0,16
	.word	48029
	.byte	28
	.byte	'Ifx_SRC_STM',0,6,251,4,3
	.word	48062
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,6,138,5,25,4,13
	.byte	'SR',0
	.word	8844
	.byte	4,2,35,0,0,16
	.word	48088
	.byte	28
	.byte	'Ifx_SRC_FCE_FCE0',0,6,141,5,3
	.word	48125
	.byte	16
	.word	48088
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,6,156,5,25,4,13
	.byte	'FCE0',0
	.word	48156
	.byte	4,2,35,0,0,16
	.word	48161
	.byte	28
	.byte	'Ifx_SRC_FCE',0,6,159,5,3
	.word	48195
	.byte	14,32
	.word	423
	.byte	15,31,0,14,128,4
	.word	8844
	.byte	15,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,6,174,5,25,176,4,13
	.byte	'ERR',0
	.word	47582
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	48221
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	48230
	.byte	128,4,2,35,48,0,16
	.word	48240
	.byte	28
	.byte	'Ifx_SRC_DMA_DMA',0,6,179,5,3
	.word	48312
	.byte	14,176,4
	.word	48240
	.byte	15,0,0,16
	.word	48342
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,6,194,5,25,176,4,13
	.byte	'DMA',0
	.word	48352
	.byte	176,4,2,35,0,0,16
	.word	48357
	.byte	28
	.byte	'Ifx_SRC_DMA',0,6,197,5,3
	.word	48392
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,6,212,5,25,8,13
	.byte	'ERR',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	8844
	.byte	4,2,35,4,0,16
	.word	48418
	.byte	28
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,6,216,5,3
	.word	48472
	.byte	14,8
	.word	48418
	.byte	15,0,0,16
	.word	48506
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,6,231,5,25,8,13
	.byte	'SDMMC',0
	.word	48515
	.byte	8,2,35,0,0,16
	.word	48520
	.byte	28
	.byte	'Ifx_SRC_SDMMC',0,6,234,5,3
	.word	48557
	.byte	14,40
	.word	8844
	.byte	15,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,6,249,5,25,40,13
	.byte	'SR',0
	.word	48585
	.byte	40,2,35,0,0,16
	.word	48594
	.byte	28
	.byte	'Ifx_SRC_GETH_GETH',0,6,252,5,3
	.word	48632
	.byte	14,40
	.word	48594
	.byte	15,0,0,16
	.word	48664
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,6,139,6,25,40,13
	.byte	'GETH',0
	.word	48673
	.byte	40,2,35,0,0,16
	.word	48678
	.byte	28
	.byte	'Ifx_SRC_GETH',0,6,142,6,3
	.word	48713
	.byte	14,64
	.word	8844
	.byte	15,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,6,157,6,25,64,13
	.byte	'INT',0
	.word	48740
	.byte	64,2,35,0,0,16
	.word	48749
	.byte	28
	.byte	'Ifx_SRC_CAN_CAN',0,6,160,6,3
	.word	48786
	.byte	14,192,1
	.word	48749
	.byte	15,2,0,16
	.word	48816
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,6,175,6,25,192,1,13
	.byte	'CAN',0
	.word	48826
	.byte	192,1,2,35,0,0,16
	.word	48831
	.byte	28
	.byte	'Ifx_SRC_CAN',0,6,178,6,3
	.word	48866
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,6,193,6,25,16,13
	.byte	'SR0',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	8844
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	8844
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	8844
	.byte	4,2,35,12,0,16
	.word	48892
	.byte	28
	.byte	'Ifx_SRC_VADC_G',0,6,199,6,3
	.word	48967
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,6,214,6,25,4,13
	.byte	'SR0',0
	.word	8844
	.byte	4,2,35,0,0,16
	.word	48996
	.byte	28
	.byte	'Ifx_SRC_VADC_FC',0,6,217,6,3
	.word	49033
	.byte	14,192,1
	.word	48892
	.byte	15,11,0,16
	.word	49063
	.byte	14,32
	.word	48996
	.byte	15,7,0,16
	.word	49078
	.byte	14,32
	.word	48892
	.byte	15,1,0,16
	.word	49092
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,6,233,6,25,128,2,13
	.byte	'G',0
	.word	49073
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	49087
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	49101
	.byte	32,3,35,224,1,0,16
	.word	49106
	.byte	28
	.byte	'Ifx_SRC_VADC',0,6,238,6,3
	.word	49166
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,6,253,6,25,8,13
	.byte	'SRM',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	8844
	.byte	4,2,35,4,0,16
	.word	49193
	.byte	28
	.byte	'Ifx_SRC_DSADC_DSADC',0,6,129,7,3
	.word	49247
	.byte	14,112
	.word	49193
	.byte	15,13,0,16
	.word	49281
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,6,144,7,25,112,13
	.byte	'DSADC',0
	.word	49290
	.byte	112,2,35,0,0,16
	.word	49295
	.byte	28
	.byte	'Ifx_SRC_DSADC',0,6,147,7,3
	.word	49332
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,6,162,7,25,48,13
	.byte	'INT0',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	8844
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	8844
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	8844
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	8844
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	8844
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	8844
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	8844
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	8844
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	8844
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3289
	.byte	8,2,35,40,0,16
	.word	49360
	.byte	28
	.byte	'Ifx_SRC_ERAY_ERAY',0,6,175,7,3
	.word	49555
	.byte	14,96
	.word	49360
	.byte	15,1,0,16
	.word	49587
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,6,190,7,25,96,13
	.byte	'ERAY',0
	.word	49596
	.byte	96,2,35,0,0,16
	.word	49601
	.byte	28
	.byte	'Ifx_SRC_ERAY',0,6,193,7,3
	.word	49636
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,6,208,7,25,8,13
	.byte	'HSM',0
	.word	46110
	.byte	8,2,35,0,0,16
	.word	49663
	.byte	28
	.byte	'Ifx_SRC_HSM_HSM',0,6,211,7,3
	.word	49700
	.byte	14,8
	.word	49663
	.byte	15,0,0,16
	.word	49730
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,6,226,7,25,8,13
	.byte	'HSM',0
	.word	49739
	.byte	8,2,35,0,0,16
	.word	49744
	.byte	28
	.byte	'Ifx_SRC_HSM',0,6,229,7,3
	.word	49777
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,6,244,7,25,16,13
	.byte	'SCUERU',0
	.word	47582
	.byte	16,2,35,0,0,16
	.word	49803
	.byte	28
	.byte	'Ifx_SRC_SCU',0,6,247,7,3
	.word	49839
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,6,134,8,25,4,13
	.byte	'SR',0
	.word	8844
	.byte	4,2,35,0,0,16
	.word	49865
	.byte	28
	.byte	'Ifx_SRC_PMS_PMS',0,6,137,8,3
	.word	49901
	.byte	14,16
	.word	49865
	.byte	15,3,0,16
	.word	49931
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,6,152,8,25,16,13
	.byte	'PMS',0
	.word	49940
	.byte	16,2,35,0,0,16
	.word	49945
	.byte	28
	.byte	'Ifx_SRC_PMS',0,6,155,8,3
	.word	49978
	.byte	14,12
	.word	8844
	.byte	15,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,6,170,8,25,12,13
	.byte	'SR',0
	.word	50004
	.byte	12,2,35,0,0,16
	.word	50013
	.byte	28
	.byte	'Ifx_SRC_SMU_SMU',0,6,173,8,3
	.word	50049
	.byte	14,12
	.word	50013
	.byte	15,0,0,16
	.word	50079
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,6,188,8,25,12,13
	.byte	'SMU',0
	.word	50088
	.byte	12,2,35,0,0,16
	.word	50093
	.byte	28
	.byte	'Ifx_SRC_SMU',0,6,191,8,3
	.word	50126
	.byte	14,32
	.word	8844
	.byte	15,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,6,206,8,25,32,13
	.byte	'SR',0
	.word	50152
	.byte	32,2,35,0,0,16
	.word	50161
	.byte	28
	.byte	'Ifx_SRC_PSI5_PSI5',0,6,209,8,3
	.word	50199
	.byte	14,32
	.word	50161
	.byte	15,0,0,16
	.word	50231
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,6,224,8,25,32,13
	.byte	'PSI5',0
	.word	50240
	.byte	32,2,35,0,0,16
	.word	50245
	.byte	28
	.byte	'Ifx_SRC_PSI5',0,6,227,8,3
	.word	50280
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,6,242,8,25,12,13
	.byte	'BFR',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	8844
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	8844
	.byte	4,2,35,8,0,16
	.word	50307
	.byte	28
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,6,247,8,3
	.word	50376
	.byte	16
	.word	50307
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,6,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	50411
	.byte	12,2,35,0,0,16
	.word	50416
	.byte	28
	.byte	'Ifx_SRC_HSPDM',0,6,137,9,3
	.word	50454
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,6,152,9,25,24,13
	.byte	'LI0',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	8844
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	8844
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	8844
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	8844
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	8844
	.byte	4,2,35,20,0,16
	.word	50482
	.byte	28
	.byte	'Ifx_SRC_DAM_DAM',0,6,160,9,3
	.word	50583
	.byte	14,48
	.word	50482
	.byte	15,1,0,16
	.word	50613
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,6,175,9,25,48,13
	.byte	'DAM',0
	.word	50622
	.byte	48,2,35,0,0,16
	.word	50627
	.byte	28
	.byte	'Ifx_SRC_DAM',0,6,178,9,3
	.word	50660
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,6,193,9,25,32,13
	.byte	'SR',0
	.word	50152
	.byte	32,2,35,0,0,16
	.word	50686
	.byte	28
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,6,196,9,3
	.word	50726
	.byte	14,32
	.word	50686
	.byte	15,0,0,16
	.word	50760
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,6,211,9,25,32,13
	.byte	'PSI5S',0
	.word	50769
	.byte	32,2,35,0,0,16
	.word	50774
	.byte	28
	.byte	'Ifx_SRC_PSI5S',0,6,214,9,3
	.word	50811
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,6,229,9,25,8,13
	.byte	'ERR',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	8844
	.byte	4,2,35,4,0,16
	.word	50839
	.byte	28
	.byte	'Ifx_SRC_RIF_RIF',0,6,233,9,3
	.word	50889
	.byte	14,16
	.word	50839
	.byte	15,1,0,16
	.word	50919
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,6,248,9,25,16,13
	.byte	'RIF',0
	.word	50928
	.byte	16,2,35,0,0,16
	.word	50933
	.byte	28
	.byte	'Ifx_SRC_RIF',0,6,251,9,3
	.word	50966
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,6,138,10,25,8,13
	.byte	'INT',0
	.word	8844
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	8844
	.byte	4,2,35,4,0,16
	.word	50992
	.byte	28
	.byte	'Ifx_SRC_SPU_SPU',0,6,142,10,3
	.word	51042
	.byte	14,16
	.word	50992
	.byte	15,1,0,16
	.word	51072
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,6,157,10,25,16,13
	.byte	'SPU',0
	.word	51081
	.byte	16,2,35,0,0,16
	.word	51086
	.byte	28
	.byte	'Ifx_SRC_SPU',0,6,160,10,3
	.word	51119
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,6,175,10,25,32,13
	.byte	'SR',0
	.word	50152
	.byte	32,2,35,0,0,16
	.word	51145
	.byte	28
	.byte	'Ifx_SRC_GPSR_GPSR',0,6,178,10,3
	.word	51183
	.byte	14,192,1
	.word	51145
	.byte	15,5,0,16
	.word	51215
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,6,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	51225
	.byte	192,1,2,35,0,0,16
	.word	51230
	.byte	28
	.byte	'Ifx_SRC_GPSR',0,6,196,10,3
	.word	51267
	.byte	28
	.byte	'IfxHspdm_BSB',0,8,78,3
	.word	14591
	.byte	28
	.byte	'IfxHspdm_Buffer',0,8,87,3
	.word	14792
	.byte	17,8,92,9,1,18
	.byte	'IfxHspdm_BufferMode_singleBuffer',0,0,18
	.byte	'IfxHspdm_BufferMode_dualBuffer',0,1,0,28
	.byte	'IfxHspdm_BufferMode',0,8,96,3
	.word	51339
	.byte	17,8,101,9,1,18
	.byte	'IfxHspdm_DitherLevel_disabled',0,0,18
	.byte	'IfxHspdm_DitherLevel_minimum',0,1,18
	.byte	'IfxHspdm_DitherLevel_low',0,2,18
	.byte	'IfxHspdm_DitherLevel_lowMedium',0,3,18
	.byte	'IfxHspdm_DitherLevel_medium',0,4,18
	.byte	'IfxHspdm_DitherLevel_mediumHigh',0,5,18
	.byte	'IfxHspdm_DitherLevel_high',0,6,18
	.byte	'IfxHspdm_DitherLevel_highest',0,7,0,28
	.byte	'IfxHspdm_DitherLevel',0,8,111,3
	.word	51441
	.byte	17,8,116,9,1,18
	.byte	'IfxHspdm_Flag_buffAStart',0,0,18
	.byte	'IfxHspdm_Flag_buffAEnd',0,1,18
	.byte	'IfxHspdm_Flag_buffBStart',0,2,18
	.byte	'IfxHspdm_Flag_buffBEnd',0,3,18
	.byte	'IfxHspdm_Flag_mute0Start',0,4,18
	.byte	'IfxHspdm_Flag_mute0End',0,5,18
	.byte	'IfxHspdm_Flag_mute1Start',0,6,18
	.byte	'IfxHspdm_Flag_mute1End',0,7,18
	.byte	'IfxHspdm_Flag_ramOverflow',0,8,0,28
	.byte	'IfxHspdm_Flag',0,8,127,3
	.word	51722
	.byte	17,8,132,1,9,1,18
	.byte	'IfxHspdm_HwRunActiveEdge_rising',0,0,18
	.byte	'IfxHspdm_HwRunActiveEdge_falling',0,1,0,28
	.byte	'IfxHspdm_HwRunActiveEdge',0,8,136,1,3
	.word	51986
	.byte	17,8,141,1,9,1,18
	.byte	'IfxHspdm_MutePolarity_activeHigh',0,0,18
	.byte	'IfxHspdm_MutePolarity_activeLow',0,1,0,28
	.byte	'IfxHspdm_MutePolarity',0,8,145,1,3
	.word	52096
	.byte	17,8,150,1,9,1,18
	.byte	'IfxHspdm_RunState_stopped',0,0,18
	.byte	'IfxHspdm_RunState_running',0,1,0,28
	.byte	'IfxHspdm_RunState',0,8,154,1,3
	.word	52203
	.byte	17,8,159,1,9,1,18
	.byte	'IfxHspdm_SleepMode_enabled',0,0,18
	.byte	'IfxHspdm_SleepMode_disabled',0,1,0,28
	.byte	'IfxHspdm_SleepMode',0,8,163,1,3
	.word	52293
	.byte	17,8,168,1,9,1,18
	.byte	'IfxHspdm_StreamingMode_deltaSigmaCICEnabled',0,0,18
	.byte	'IfxHspdm_StreamingMode_deltaSigmaCICDisabled',0,1,18
	.byte	'IfxHspdm_StreamingMode_shiftRegister',0,2,0,28
	.byte	'IfxHspdm_StreamingMode',0,8,173,1,3
	.word	52387
	.byte	17,8,178,1,9,1,18
	.byte	'IfxHspdm_SuspendMode_none',0,0,18
	.byte	'IfxHspdm_SuspendMode_hard',0,1,18
	.byte	'IfxHspdm_SuspendMode_soft',0,2,0,28
	.byte	'IfxHspdm_SuspendMode',0,8,183,1,3
	.word	52558
	.byte	17,8,188,1,9,1,18
	.byte	'IfxHspdm_UpdateFreq_1MHz',0,0,18
	.byte	'IfxHspdm_UpdateFreq_0p5MHz',0,1,18
	.byte	'IfxHspdm_UpdateFreq_2MHz',0,2,18
	.byte	'IfxHspdm_UpdateFreq_10MHz',0,3,0,28
	.byte	'IfxHspdm_UpdateFreq',0,8,194,1,3
	.word	52679
	.byte	28
	.byte	'IfxHspdm_MuteRange',0,8,205,1,3
	.word	14889
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L36:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,53,0,73,19,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,38,0,73,19,0,0,20,46,1,3,8,54,15,39,12,63,12,60,12,0,0,21
	.byte	5,0,73,19,0,0,22,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,23,5,0,3,8,73,19,0,0,24,46,1,49,19,0,0,25
	.byte	5,0,49,19,0,0,26,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,27,19,1,58,15,59,15,57,15,11,15
	.byte	0,0,28,22,0,3,8,58,15,59,15,57,15,73,19,0,0,29,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L37:
	.word	.L134-.L133
.L133:
	.half	3
	.word	.L136-.L135
.L135:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxPort.h',0,2,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxSrc.h',0,4,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxHspdm_regdef.h',0,3,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.h',0,0,0,0
	.byte	'IfxHspdm_PinMap.h',0,5,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxHspdm_cfg.h',0,6,0,0
	.byte	'IfxScu_cfg.h',0,6,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,6,0,0,0
.L136:
.L134:
	.sdecl	'.debug_info',debug,cluster('IfxHspdm_enableBSB')
	.sect	'.debug_info'
.L38:
	.word	275
	.half	3
	.word	.L39
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L41,.L40
	.byte	2
	.word	.L34
	.byte	3
	.byte	'IfxHspdm_enableBSB',0,1,118,6,1,1,1
	.word	.L27,.L73,.L26
	.byte	4
	.byte	'hspdm',0,1,118,36
	.word	.L74,.L75
	.byte	4
	.byte	'bsb',0,1,118,56
	.word	.L76,.L77
	.byte	4
	.byte	'enable',0,1,118,69
	.word	.L78,.L79
	.byte	5
	.word	.L27,.L73
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHspdm_enableBSB')
	.sect	'.debug_abbrev'
.L39:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHspdm_enableBSB')
	.sect	'.debug_line'
.L40:
	.word	.L138-.L137
.L137:
	.half	3
	.word	.L140-.L139
.L139:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0,0,0,0,0
.L140:
	.byte	5,10,7,0,5,2
	.word	.L27
	.byte	3,249,0,1,7,9
	.half	.L141-.L27
	.byte	3,3,1,5,1,7,9
	.half	.L142-.L141
	.byte	3,6,1,5,21,7,9
	.half	.L16-.L142
	.byte	3,120,1,5,26,9
	.half	.L143-.L16
	.byte	1,5,9,3,1,1,5,21,9
	.half	.L17-.L143
	.byte	3,2,1,5,26,9
	.half	.L144-.L17
	.byte	1,5,1,9
	.half	.L145-.L144
	.byte	3,5,1,7,9
	.half	.L42-.L145
	.byte	0,1,1
.L138:
	.sdecl	'.debug_ranges',debug,cluster('IfxHspdm_enableBSB')
	.sect	'.debug_ranges'
.L41:
	.word	-1,.L27,0,.L42-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHspdm_initBsPin')
	.sect	'.debug_info'
.L43:
	.word	349
	.half	3
	.word	.L44
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L46,.L45
	.byte	2
	.word	.L34
	.byte	3
	.byte	'IfxHspdm_initBsPin',0,1,134,1,6,1,1,1
	.word	.L29,.L80,.L28
	.byte	4
	.byte	'bsPin',0,1,134,1,42
	.word	.L81,.L82
	.byte	4
	.byte	'outputMode',0,1,134,1,68
	.word	.L83,.L84
	.byte	4
	.byte	'padDriver',0,1,134,1,98
	.word	.L85,.L86
	.byte	5
	.word	.L87
	.byte	6
	.word	.L88,.L89,.L90
	.byte	7
	.word	.L91,.L92
	.byte	7
	.word	.L93,.L94
	.byte	7
	.word	.L95,.L96
	.byte	7
	.word	.L97,.L98
	.byte	8
	.word	.L99,.L89,.L90
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHspdm_initBsPin')
	.sect	'.debug_abbrev'
.L44:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHspdm_initBsPin')
	.sect	'.debug_line'
.L45:
	.word	.L147-.L146
.L146:
	.half	3
	.word	.L149-.L148
.L148:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0,0,0,0
	.byte	'IfxPort.h',0,1,0,0,0
.L149:
	.byte	5,6,7,0,5,2
	.word	.L29
	.byte	3,133,1,1,4,2,5,40,9
	.half	.L89-.L29
	.byte	3,159,4,1,4,1,5,39,9
	.half	.L90-.L89
	.byte	3,228,123,1,5,56,9
	.half	.L150-.L90
	.byte	1,5,67,9
	.half	.L151-.L150
	.byte	1,5,1,9
	.half	.L47-.L151
	.byte	3,1,0,1,1
.L147:
	.sdecl	'.debug_ranges',debug,cluster('IfxHspdm_initBsPin')
	.sect	'.debug_ranges'
.L46:
	.word	-1,.L29,0,.L47-.L29,0,0
.L87:
	.word	-1,.L29,0,.L80-.L29,-1,.L31,0,.L72-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHspdm_initMutePin')
	.sect	'.debug_info'
.L48:
	.word	357
	.half	3
	.word	.L49
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L51,.L50
	.byte	2
	.word	.L34
	.byte	3
	.byte	'IfxHspdm_initMutePin',0,1,141,1,6,1,1,1
	.word	.L33,.L100,.L32
	.byte	4
	.byte	'mutePin',0,1,141,1,46
	.word	.L101,.L102
	.byte	4
	.byte	'outputMode',0,1,141,1,74
	.word	.L83,.L103
	.byte	4
	.byte	'padDriver',0,1,141,1,104
	.word	.L85,.L104
	.byte	5
	.word	.L33,.L100
	.byte	6
	.word	.L88,.L105,.L106
	.byte	7
	.word	.L91,.L107
	.byte	7
	.word	.L93,.L108
	.byte	7
	.word	.L95,.L109
	.byte	7
	.word	.L97,.L110
	.byte	8
	.word	.L99,.L105,.L106
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHspdm_initMutePin')
	.sect	'.debug_abbrev'
.L49:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHspdm_initMutePin')
	.sect	'.debug_line'
.L50:
	.word	.L153-.L152
.L152:
	.half	3
	.word	.L155-.L154
.L154:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0,0,0,0
	.byte	'IfxPort.h',0,1,0,0,0
.L155:
	.byte	5,6,7,0,5,2
	.word	.L33
	.byte	3,140,1,1,4,2,5,40,9
	.half	.L105-.L33
	.byte	3,152,4,1,4,1,5,41,9
	.half	.L106-.L105
	.byte	3,235,123,1,5,60,9
	.half	.L156-.L106
	.byte	1,5,71,9
	.half	.L157-.L156
	.byte	1,5,1,9
	.half	.L52-.L157
	.byte	3,1,0,1,1
.L153:
	.sdecl	'.debug_ranges',debug,cluster('IfxHspdm_initMutePin')
	.sect	'.debug_ranges'
.L51:
	.word	-1,.L33,0,.L52-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHspdm_setStartAddress')
	.sect	'.debug_info'
.L53:
	.word	285
	.half	3
	.word	.L54
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L56,.L55
	.byte	2
	.word	.L34
	.byte	3
	.byte	'IfxHspdm_setStartAddress',0,1,53,6,1,1,1
	.word	.L21,.L111,.L20
	.byte	4
	.byte	'hspdm',0,1,53,42
	.word	.L74,.L112
	.byte	4
	.byte	'buffer',0,1,53,65
	.word	.L113,.L114
	.byte	4
	.byte	'address',0,1,53,80
	.word	.L115,.L116
	.byte	5
	.word	.L21,.L111
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHspdm_setStartAddress')
	.sect	'.debug_abbrev'
.L54:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHspdm_setStartAddress')
	.sect	'.debug_line'
.L55:
	.word	.L159-.L158
.L158:
	.half	3
	.word	.L161-.L160
.L160:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0,0,0,0,0
.L161:
	.byte	5,19,7,0,5,2
	.word	.L21
	.byte	3,54,1,5,5,9
	.half	.L162-.L21
	.byte	1,5,14,7,9
	.half	.L163-.L162
	.byte	3,4,1,7,9
	.half	.L164-.L163
	.byte	3,3,1,5,1,7,9
	.half	.L2-.L164
	.byte	3,11,1,5,27,7,9
	.half	.L3-.L2
	.byte	3,115,1,5,35,9
	.half	.L165-.L3
	.byte	1,5,1,9
	.half	.L166-.L165
	.byte	3,13,1,5,27,7,9
	.half	.L4-.L166
	.byte	3,118,1,5,35,9
	.half	.L167-.L4
	.byte	1,5,1,9
	.half	.L168-.L167
	.byte	3,10,1,7,9
	.half	.L57-.L168
	.byte	0,1,1
.L159:
	.sdecl	'.debug_ranges',debug,cluster('IfxHspdm_setStartAddress')
	.sect	'.debug_ranges'
.L56:
	.word	-1,.L21,0,.L57-.L21,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHspdm_setEndAddress')
	.sect	'.debug_info'
.L58:
	.word	283
	.half	3
	.word	.L59
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L61,.L60
	.byte	2
	.word	.L34
	.byte	3
	.byte	'IfxHspdm_setEndAddress',0,1,76,6,1,1,1
	.word	.L23,.L117,.L22
	.byte	4
	.byte	'hspdm',0,1,76,40
	.word	.L74,.L118
	.byte	4
	.byte	'buffer',0,1,76,63
	.word	.L113,.L119
	.byte	4
	.byte	'address',0,1,76,78
	.word	.L115,.L120
	.byte	5
	.word	.L23,.L117
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHspdm_setEndAddress')
	.sect	'.debug_abbrev'
.L59:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHspdm_setEndAddress')
	.sect	'.debug_line'
.L60:
	.word	.L170-.L169
.L169:
	.half	3
	.word	.L172-.L171
.L171:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0,0,0,0,0
.L172:
	.byte	5,19,7,0,5,2
	.word	.L23
	.byte	3,205,0,1,5,5,9
	.half	.L173-.L23
	.byte	1,5,14,7,9
	.half	.L174-.L173
	.byte	3,4,1,7,9
	.half	.L175-.L174
	.byte	3,3,1,5,1,7,9
	.half	.L7-.L175
	.byte	3,11,1,5,27,7,9
	.half	.L8-.L7
	.byte	3,115,1,5,33,9
	.half	.L176-.L8
	.byte	1,5,1,9
	.half	.L177-.L176
	.byte	3,13,1,5,27,7,9
	.half	.L9-.L177
	.byte	3,118,1,5,33,9
	.half	.L178-.L9
	.byte	1,5,1,9
	.half	.L179-.L178
	.byte	3,10,1,7,9
	.half	.L62-.L179
	.byte	0,1,1
.L170:
	.sdecl	'.debug_ranges',debug,cluster('IfxHspdm_setEndAddress')
	.sect	'.debug_ranges'
.L61:
	.word	-1,.L23,0,.L62-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHspdm_setMuteAddresses')
	.sect	'.debug_info'
.L63:
	.word	317
	.half	3
	.word	.L64
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L66,.L65
	.byte	2
	.word	.L34
	.byte	3
	.byte	'IfxHspdm_setMuteAddresses',0,1,99,6,1,1,1
	.word	.L25,.L121,.L24
	.byte	4
	.byte	'hspdm',0,1,99,43
	.word	.L74,.L122
	.byte	4
	.byte	'muteRange',0,1,99,69
	.word	.L123,.L124
	.byte	4
	.byte	'startAddress',0,1,99,87
	.word	.L115,.L125
	.byte	4
	.byte	'endAddress',0,1,99,108
	.word	.L115,.L126
	.byte	5
	.word	.L25,.L121
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHspdm_setMuteAddresses')
	.sect	'.debug_abbrev'
.L64:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHspdm_setMuteAddresses')
	.sect	'.debug_line'
.L65:
	.word	.L181-.L180
.L180:
	.half	3
	.word	.L183-.L182
.L182:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0,0,0,0,0
.L183:
	.byte	5,10,7,0,5,2
	.word	.L25
	.byte	3,230,0,1,7,9
	.half	.L184-.L25
	.byte	3,4,1,5,1,7,9
	.half	.L185-.L184
	.byte	3,8,1,5,23,7,9
	.half	.L12-.L185
	.byte	3,117,1,5,31,9
	.half	.L186-.L12
	.byte	1,5,23,9
	.half	.L187-.L186
	.byte	3,1,1,5,31,9
	.half	.L188-.L187
	.byte	1,5,1,9
	.half	.L189-.L188
	.byte	3,10,1,5,23,7,9
	.half	.L13-.L189
	.byte	3,121,1,5,31,9
	.half	.L190-.L13
	.byte	1,5,23,9
	.half	.L191-.L190
	.byte	3,1,1,5,31,9
	.half	.L192-.L191
	.byte	1,5,1,9
	.half	.L193-.L192
	.byte	3,6,1,7,9
	.half	.L67-.L193
	.byte	0,1,1
.L181:
	.sdecl	'.debug_ranges',debug,cluster('IfxHspdm_setMuteAddresses')
	.sect	'.debug_ranges'
.L66:
	.word	-1,.L25,0,.L67-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L68:
	.word	203
	.half	3
	.word	.L69
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L71,.L70
	.byte	2
	.word	.L34
	.byte	3
	.byte	'.cocofun_1',0,1,134,1,6,1
	.word	.L31,.L72,.L30
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L69:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L70:
	.word	.L195-.L194
.L194:
	.half	3
	.word	.L197-.L196
.L196:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std\\IfxHspdm.c',0,0,0,0
	.byte	'IfxPort.h',0,1,0,0,0
.L197:
	.byte	5,6,7,0,5,2
	.word	.L31
	.byte	3,133,1,1,5,57,9
	.half	.L129-.L31
	.byte	3,2,1,5,85,9
	.half	.L130-.L129
	.byte	1,5,40,9
	.half	.L198-.L130
	.byte	1,4,2,5,61,9
	.half	.L127-.L198
	.byte	3,157,4,1,5,40,9
	.half	.L128-.L127
	.byte	1,9
	.half	.L72-.L128
	.byte	0,1,1,5,6,0,5,2
	.word	.L31
	.byte	3,140,1,1,5,61,9
	.half	.L129-.L31
	.byte	3,2,1,5,91,9
	.half	.L130-.L129
	.byte	1,5,42,9
	.half	.L198-.L130
	.byte	1,4,2,5,61,9
	.half	.L127-.L198
	.byte	3,150,4,1,5,40,9
	.half	.L128-.L127
	.byte	1,9
	.half	.L72-.L128
	.byte	0,1,1
.L195:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L71:
	.word	-1,.L31,0,.L72-.L31,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L72-.L31
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHspdm_enableBSB')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L73-.L27
	.half	2
	.byte	138,0
	.word	0,0
.L77:
	.word	-1,.L27,0,.L73-.L27
	.half	1
	.byte	84
	.word	0,0
.L79:
	.word	-1,.L27,0,.L73-.L27
	.half	1
	.byte	85
	.word	0,0
.L75:
	.word	-1,.L27,0,.L73-.L27
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHspdm_initBsPin')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L80-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L82:
	.word	-1,.L29,.L31-.L29,.L127-.L29
	.half	1
	.byte	100
	.word	.L129-.L29,.L72-.L29
	.half	1
	.byte	111
	.word	.L90-.L29,.L80-.L29
	.half	1
	.byte	111
	.word	0,0
.L98:
	.word	0,0
.L96:
	.word	0,0
.L84:
	.word	-1,.L29,.L31-.L29,.L72-.L29
	.half	1
	.byte	84
	.word	0,0
.L86:
	.word	-1,.L29,.L31-.L29,.L128-.L29
	.half	1
	.byte	85
	.word	.L130-.L29,.L72-.L29
	.half	1
	.byte	88
	.word	.L90-.L29,.L80-.L29
	.half	1
	.byte	88
	.word	.L131-.L29,.L80-.L29
	.half	1
	.byte	85
	.word	0,0
.L94:
	.word	0,0
.L92:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHspdm_initMutePin')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L33,0,.L100-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L110:
	.word	0,0
.L109:
	.word	0,0
.L102:
	.word	-1,.L33,.L31-.L33,.L127-.L33
	.half	1
	.byte	100
	.word	.L129-.L33,.L72-.L33
	.half	1
	.byte	111
	.word	.L105-.L33,.L100-.L33
	.half	1
	.byte	111
	.word	0,0
.L103:
	.word	-1,.L33,.L31-.L33,.L72-.L33
	.half	1
	.byte	84
	.word	0,0
.L104:
	.word	-1,.L33,.L31-.L33,.L128-.L33
	.half	1
	.byte	85
	.word	.L129-.L33,.L72-.L33
	.half	1
	.byte	88
	.word	.L105-.L33,.L100-.L33
	.half	1
	.byte	88
	.word	.L132-.L33,.L100-.L33
	.half	1
	.byte	85
	.word	0,0
.L108:
	.word	0,0
.L107:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHspdm_setEndAddress')
	.sect	'.debug_loc'
.L22:
	.word	-1,.L23,0,.L117-.L23
	.half	2
	.byte	138,0
	.word	0,0
.L120:
	.word	-1,.L23,0,.L117-.L23
	.half	1
	.byte	85
	.word	0,0
.L119:
	.word	-1,.L23,0,.L117-.L23
	.half	1
	.byte	84
	.word	0,0
.L118:
	.word	-1,.L23,0,.L117-.L23
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHspdm_setMuteAddresses')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L121-.L25
	.half	2
	.byte	138,0
	.word	0,0
.L126:
	.word	-1,.L25,0,.L121-.L25
	.half	1
	.byte	86
	.word	0,0
.L122:
	.word	-1,.L25,0,.L121-.L25
	.half	1
	.byte	100
	.word	0,0
.L124:
	.word	-1,.L25,0,.L121-.L25
	.half	1
	.byte	84
	.word	0,0
.L125:
	.word	-1,.L25,0,.L121-.L25
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHspdm_setStartAddress')
	.sect	'.debug_loc'
.L20:
	.word	-1,.L21,0,.L111-.L21
	.half	2
	.byte	138,0
	.word	0,0
.L116:
	.word	-1,.L21,0,.L111-.L21
	.half	1
	.byte	85
	.word	0,0
.L114:
	.word	-1,.L21,0,.L111-.L21
	.half	1
	.byte	84
	.word	0,0
.L112:
	.word	-1,.L21,0,.L111-.L21
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L199:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxHspdm_setStartAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L21,.L111-.L21
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHspdm_setEndAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L23,.L117-.L23
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHspdm_setMuteAddresses')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L25,.L121-.L25
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHspdm_enableBSB')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L27,.L73-.L27
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHspdm_initBsPin')
	.sect	'.debug_frame'
	.word	12
	.word	.L199,.L29,.L80-.L29
	.sdecl	'.debug_frame',debug,cluster('IfxHspdm_initMutePin')
	.sect	'.debug_frame'
	.word	12
	.word	.L199,.L33,.L100-.L33
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L200:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L200,.L31,.L72-.L31
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\0_Src\4_McHal\Tricore\Hspdm\Std\IfxHspdm.c	   145  }

	; Module end
