	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\.IfxEbu_Dram.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\include\\libc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\libcpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\rt-thread\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.src ..\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.c'

	
$TC162
	.sdecl	'.zrodata.IfxEbu_Dram..3.cnt',data,rom
	.sect	'.zrodata.IfxEbu_Dram..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	-268192512
	.sdecl	'.zrodata.IfxEbu_Dram..4.cnt',data,rom
	.sect	'.zrodata.IfxEbu_Dram..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	-268191488
	.sdecl	'.zrodata.IfxStm..5.cnt',data,rom
	.sect	'.zrodata.IfxStm..5.cnt'
	.align	4
.5.cnt:	.type	object
	.size	.5.cnt,8
	.word	-1,2147483647
	
	.sdecl	'.text.IfxEbu_Dram.IfxEbu_Dram_initMemory',code,cluster('IfxEbu_Dram_initMemory')
	.sect	'.text.IfxEbu_Dram.IfxEbu_Dram_initMemory'
	.align	2
	
	.global	IfxEbu_Dram_initMemory

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	     2   * \file IfxEbu_Dram.c
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	     3   * \brief EBU DRAM details
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	     4   *
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	     6   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	     7   *
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	     8   *
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    10   *
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    15   *
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    17   *
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    23   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    24   *
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    30   * language processor.
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    31   *
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    39   *
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    40   */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    41  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    43  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    44  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    45  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    46  #include "IfxEbu_Dram.h"
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    47  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    48  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    49  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    51  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    52  void IfxEbu_Dram_initMemory(IfxEbu_Dram *dram, const IfxEbu_Dram_Config *config)
; Function IfxEbu_Dram_initMemory
.L24:
IfxEbu_Dram_initMemory:	.type	func
	mov.aa	a15,a5
.L165:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    53  {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    54      Ifx_EBU *ebu = config->module;
	ld.a	a12,[a15]
.L166:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    55      dram->ebu         = ebu;
	st.a	[a4],a12
.L220:
	sub.a	a10,#24
.L163:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    56      dram->chipSelect  = config->chipSelect;
	ld.bu	d15,[a15]4
.L221:
	st.b	[a4]4,d15
.L49:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    57      dram->baseAddress = config->memoryRegionConfig.baseAddress;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    58  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    59  /* Array for selecting Bank Address and Awidth depending on the size of memory */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    60      const uint8 deviceAddressSelection[IfxEbu_Dram_SDRAMDevice_4Mx32 + 1][2] = {
	movh.a	a2,#@his(.2.ini)
.L50:
	ld.w	d15,[a15]146
.L222:
	st.w	[a4]6,d15
.L51:
	lea	a2,[a2]@los(.2.ini)
.L223:
	mov.aa	a4,a10
.L164:
	lea	a5,19
.L2:
	ld.bu	d15,[a2+]
	st.b	[a4+],d15
	loop	a5,.L2
.L54:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    61          {6, 3},
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    62          {5, 3},
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    63          {4, 2},
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    64          {3, 2},
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    65          {2, 1},
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    66          {1, 1},
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    67          {6, 3},
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    68          {5, 2},
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    69          {4, 2},
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    70          {3, 1}
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    71      };
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    72  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    73      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    74          uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L167:
	mov	d15,d2
.L169:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    75          IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d15
	call	IfxScuWdt_clearCpuEndinit
.L168:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    76  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    77          IfxEbu_setExternalClockRatio(ebu, config->externalClockRatio);
	ld.bu	d4,[a15]152
	mov.aa	a4,a12
.L171:
	call	IfxEbu_setExternalClockRatio
.L172:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    78  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    79          IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d15
	call	IfxScuWdt_setCpuEndinit
.L55:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    80      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    81  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    82      /* Port Initialization for Dram */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    83      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    84          /* Sdram Address Lines */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    85          uint8 pin;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    86  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    87          for (pin = 2; pin < 16; ++pin)
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    88          {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    89              if (pin < 8)
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    90              {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    91                  IfxPort_setPinMode(&MODULE_P21, pin, IfxPort_Mode_outputPushPullAlt6);
	mov	d15,#2
	ld.w	d0,.3.cnt
.L170:
	mov.a	a14,#13
.L224:
	mov.a	a13,d0
.L3:
	jge.u	d15,#8,.L4
.L225:
	mov.aa	a4,a13
.L226:
	j	.L5
.L4:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    92              }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    93              else
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    94              {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    95                  IfxPort_setPinMode(&MODULE_P25, pin, IfxPort_Mode_outputPushPullAlt6);
	ld.w	d0,.4.cnt
	mov.a	a4,d0
.L5:
	mov	d5,#176
	mov	d4,d15
	call	IfxPort_setPinMode
.L227:
	add	d15,#1
	loop	a14,.L3
.L228:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    96              }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    97          }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    98  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	    99          /* Lines for BA0 & BA1 */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   100          IfxPort_setPinMode(&MODULE_P21, 0, IfxPort_Mode_outputPushPullAlt7);
	mov	d4,#0
	mov.aa	a4,a13
	mov	d5,#184
	call	IfxPort_setPinMode
.L229:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   101          IfxPort_setPinMode(&MODULE_P21, 1, IfxPort_Mode_outputPushPullAlt7);
	mov	d4,#1
	mov.aa	a4,a13
	mov	d5,#184
	call	IfxPort_setPinMode
.L58:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   102      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   103  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   104      /* configuring Base and Alternate segment Address for EBU to Access External Memory */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   105      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   106          Ifx_EBU_ADDRSEL addrsel;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   107          addrsel.U                          = 0;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   108          addrsel.B.REGENAB                  = config->memoryRegionConfig.regionEnabled;
	mov	d1,#0
	ld.bu	d15,[a15]140
.L173:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   109          addrsel.B.ALTENAB                  = config->memoryRegionConfig.alternateSegmentEnabled;
	ld.bu	d0,[a15]141
.L230:
	insert	d15,d1,d15,#0,#1
.L174:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   110          addrsel.B.WPROT                    = config->memoryRegionConfig.writeProtection;
	insert	d15,d15,d0,#1,#1
	ld.bu	d0,[a15]142
.L231:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   111          addrsel.B.GLOBALCS                 = config->memoryRegionConfig.combinedChipSelect;
	insert	d15,d15,d0,#2,#1
	ld.bu	d0,[a15]143
.L232:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   112          addrsel.B.MASK                     = config->memoryRegionConfig.addressMask;
	insert	d15,d15,d0,#3,#1
	ld.bu	d0,[a15]144
.L233:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   113          addrsel.B.ALTSEG                   = config->memoryRegionConfig.alternateSegment;
	insert	d15,d15,d0,#4,#4
	ld.bu	d0,[a15]145
.L234:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   114          addrsel.B.BASE                     = (config->memoryRegionConfig.baseAddress >> 12); /* Address bits are only 20 hence we need to shift */
	insert	d15,d15,d0,#8,#4
	ld.w	d0,[a15]146
.L235:
	sh	d0,d0,#-12
.L236:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   115  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   116          ebu->ADDRSEL[config->chipSelect].U = addrsel.U;
	insert	d0,d15,d0,#12,#20
	ld.bu	d15,[a15]4
.L175:
	addsc.a	a2,a12,d15,#2
.L237:
	st.w	[a2]24,d0
.L61:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   117      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   118  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   119      /* Configuring Module Configuration Register */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   120      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   121          Ifx_EBU_MODCON modcon;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   122          modcon.U             = 0;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   123          modcon.B.LOCKTIMEOUT = config->moduleConfig.lockTimeout;
	ld.bu	d15,[a15]158
.L238:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   124          modcon.B.ARBMODE     = config->moduleConfig.arbMode;
	ld.bu	d0,[a15]155
.L176:
	insert	d15,d1,d15,#16,#8
.L65:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   125          modcon.B.ARBSYNC     = config->moduleConfig.arbSignalSynchronization;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   126          modcon.B.CLK_COMB    = config->moduleConfig.clockComb;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   127          ebu->MODCON.U        = modcon.U;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   128      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   129  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   130      /* The Read Register such as BUSRCON, BUSRAP are configured for DRAM hence they are dependent on Clock Ratio
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   131       * For Clock Ratio 0 it is in Asynchronous mode for the rest it is in Synchronous Mode */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   132      uint32 deviceInterface = 1;
	mov	d1,#1
.L66:
	insert	d15,d15,d0,#6,#2
	ld.bu	d0,[a15]156
.L239:
	insert	d15,d15,d0,#5,#1
	ld.bu	d0,[a15]159
.L240:
	insert	d15,d15,d0,#3,#1
	st.w	[a12]4,d15
.L67:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   133  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   134      if ((config->sdramDevice == IfxEbu_Dram_SDRAMDevice_32Mx32) || (config->sdramDevice == IfxEbu_Dram_SDRAMDevice_16Mx32) || (config->sdramDevice == IfxEbu_Dram_SDRAMDevice_8Mx32) || (config->sdramDevice == IfxEbu_Dram_SDRAMDevice_4Mx32))
	ld.bu	d15,[a15]104
.L177:
	jeq	d15,#6,.L6
.L241:
	jeq	d15,#7,.L7
.L242:
	mov	d0,#8
.L243:
	jeq	d15,d0,.L8
.L244:
	mov	d0,#9
.L245:
	jne	d15,d0,.L9
.L8:
.L7:
.L6:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   135      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   136          deviceInterface = 3;
	mov	d1,#3
.L9:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   137      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   138  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   139      if (config->syncReadAccessParameter.externalClock == 0)
	ld.bu	d15,[a15]60
.L246:
	jne	d15,#0,.L10
.L73:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   140      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   141          Ifx_EBU_BUS_RCON busrcon;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   142          busrcon.U                           = 0;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   143          busrcon.B.PORTW                     = deviceInterface; // config->asyncReadConfig.deviceInterface;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   144          busrcon.B.AGEN                      = config->asyncReadConfig.deviceType;
	insert	d15,d15,d1,#22,#2
	ld.bu	d0,[a15]32
.L247:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   145          busrcon.B.FETBLEN                   = config->asyncReadConfig.burstLength;
	insert	d15,d15,d0,#28,#4
	ld.bu	d0,[a15]42
.L74:
	j	.L11
.L10:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   146          ebu->BUS[config->chipSelect].RCON.U = busrcon.U;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   147      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   148      else
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   149      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   150          Ifx_EBU_BUS_RCON busrcon;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   151          busrcon.U                           = 0;
	mov	d15,#0
.L178:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   152          busrcon.B.PORTW                     = deviceInterface; // config->syncReadConfig.deviceInterface;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   153          busrcon.B.AGEN                      = config->syncReadConfig.deviceType;
	insert	d0,d15,d1,#22,#2
	ld.bu	d15,[a15]8
.L179:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   154          busrcon.B.FETBLEN                   = config->syncReadConfig.burstLength;
	insert	d15,d0,d15,#28,#4
	ld.bu	d0,[a15]18
.L11:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   155          ebu->BUS[config->chipSelect].RCON.U = busrcon.U;
	insert	d0,d15,d0,#0,#3
	ld.bu	d15,[a15]4
.L180:
	sha	d15,#4
.L248:
	addsc.a	a2,a12,d15,#0
.L249:
	st.w	[a2]40,d0
.L77:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   156      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   157  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   158      if (config->syncWriteAccessParameter.externalClock == 0)
	ld.bu	d15,[a15]72
.L250:
	jne	d15,#0,.L12
.L79:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   159      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   160          Ifx_EBU_BUS_WCON buswcon;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   161          buswcon.U                           = 0;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   162          buswcon.B.PORTW                     = deviceInterface; // config->asyncWriteConfig.deviceInterface;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   163          buswcon.B.AGEN                      = config->asyncWriteConfig.deviceType;
	insert	d15,d15,d1,#22,#2
	ld.bu	d0,[a15]44
.L181:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   164          buswcon.B.FETBLEN                   = config->asyncWriteConfig.burstLength;
	insert	d15,d15,d0,#28,#4
	ld.bu	d0,[a15]52
.L80:
	j	.L13
.L12:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   165          ebu->BUS[config->chipSelect].WCON.U = buswcon.U;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   166      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   167      else
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   168      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   169          Ifx_EBU_BUS_WCON buswcon;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   170          buswcon.U                           = 0;
	mov	d15,#0
.L183:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   171          buswcon.B.PORTW                     = deviceInterface; // config->syncWriteConfig.deviceInterface;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   172          buswcon.B.AGEN                      = config->syncWriteConfig.deviceType;
	insert	d15,d15,d1,#22,#2
	ld.bu	d0,[a15]20
.L182:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   173          buswcon.B.FETBLEN                   = config->syncWriteConfig.burstLength;
	insert	d15,d15,d0,#28,#4
	ld.bu	d0,[a15]28
.L13:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   174          ebu->BUS[config->chipSelect].WCON.U = buswcon.U;
	insert	d0,d15,d0,#0,#3
	ld.bu	d15,[a15]4
.L184:
	sha	d15,#4
.L251:
	addsc.a	a2,a12,d15,#0
.L252:
	st.w	[a2]48,d0
.L83:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   175      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   176  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   177      /* SDRAM s in Asynchronous mode when Clock ratio is equal to '0' */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   178      if (config->syncReadAccessParameter.externalClock == 0)
	ld.bu	d15,[a15]60
.L253:
	jne	d15,#0,.L14
.L85:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   179      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   180          Ifx_EBU_BUS_RAP busrap;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   181          busrap.U                           = 0;
	mov	d0,#0
.L185:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   182          busrap.B.EXTCLOCK                  = config->syncReadAccessParameter.externalClock;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   183          busrap.B.WAITRDC                   = config->asyncReadAccessParameter.waitState;
	insert	d15,d0,d15,#16,#2
	ld.bu	d0,[a15]86
.L186:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   184          busrap.B.RDRECOVC                  = config->asyncReadAccessParameter.recoveryAccess;
	insert	d15,d15,d0,#7,#5
	ld.bu	d0,[a15]87
.L254:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   185          busrap.B.RDDTACS                   = config->asyncReadAccessParameter.recoveryRegion;
	insert	d15,d15,d0,#4,#3
	ld.bu	d0,[a15]88
.L86:
	j	.L15
.L14:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   186  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   187          ebu->BUS[config->chipSelect].RAP.U = busrap.U;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   188      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   189      else
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   190      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   191          /* SDRAM is in Synchronous mode  */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   192          Ifx_EBU_BUS_RAP busrap;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   193          busrap.U                           = 0;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   194          busrap.B.EXTCLOCK                  = config->syncReadAccessParameter.externalClock;
	mov	d15,#0
	ld.bu	d0,[a15]60
.L187:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   195          busrap.B.CMDDELAY                  = config->syncReadAccessParameter.commandDelay;
	insert	d15,d15,d0,#16,#2
	ld.bu	d0,[a15]58
.L255:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   196          busrap.B.RDRECOVC                  = config->syncReadAccessParameter.recoveryAccess;
	insert	d15,d15,d0,#20,#4
	ld.bu	d0,[a15]63
.L256:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   197          busrap.B.RDDTACS                   = config->syncReadAccessParameter.recoveryRegion;
	insert	d15,d15,d0,#4,#3
	ld.bu	d0,[a15]64
.L15:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   198  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   199          ebu->BUS[config->chipSelect].RAP.U = busrap.U;
	insert	d0,d15,d0,#0,#4
	ld.bu	d15,[a15]4
.L188:
	sha	d15,#4
.L257:
	addsc.a	a2,a12,d15,#0
.L258:
	st.w	[a2]44,d0
.L89:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   200      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   201  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   202      /* SDRAM s in Asynchronous mode when Clock ratio is equal to '0' */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   203      if (config->syncWriteAccessParameter.externalClock == 0)
	ld.bu	d15,[a15]72
.L259:
	jne	d15,#0,.L16
.L91:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   204      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   205          Ifx_EBU_BUS_WAP buswap;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   206          buswap.U                           = 0;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   207          buswap.B.EXTCLOCK                  = config->asyncWriteAccessParameter.externalClock;
	ld.bu	d0,[a15]96
.L189:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   208          buswap.B.WAITWRC                   = config->asyncWriteAccessParameter.waitState;
	insert	d15,d15,d0,#16,#2
	ld.bu	d0,[a15]98
.L260:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   209          buswap.B.WRRECOVC                  = config->asyncWriteAccessParameter.recoveryAccess;
	insert	d15,d15,d0,#7,#5
	ld.bu	d0,[a15]99
.L261:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   210          buswap.B.WRDTACS                   = config->asyncWriteAccessParameter.recoveryRegion;
	insert	d15,d15,d0,#4,#3
	ld.bu	d0,[a15]100
.L92:
	j	.L17
.L16:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   211  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   212          ebu->BUS[config->chipSelect].WAP.U = buswap.U;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   213      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   214      else
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   215      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   216          /* SDRAM is in Synchronous mode  */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   217          Ifx_EBU_BUS_WAP buswap;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   218          buswap.U                           = 0;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   219          buswap.B.EXTCLOCK                  = config->syncWriteAccessParameter.externalClock;
	mov	d15,#0
	ld.bu	d0,[a15]72
.L190:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   220          buswap.B.CMDDELAY                  = config->syncWriteAccessParameter.commandDelay;
	insert	d15,d15,d0,#16,#2
	ld.bu	d0,[a15]70
.L262:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   221          buswap.B.WRRECOVC                  = config->syncWriteAccessParameter.recoveryAccess;
	insert	d15,d15,d0,#20,#4
	ld.bu	d0,[a15]75
.L263:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   222          buswap.B.WRDTACS                   = config->syncWriteAccessParameter.recoveryRegion;
	insert	d15,d15,d0,#4,#3
	ld.bu	d0,[a15]76
.L17:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   223  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   224          ebu->BUS[config->chipSelect].WAP.U = buswap.U;
	insert	d0,d15,d0,#0,#4
	ld.bu	d15,[a15]4
.L191:
	sha	d15,#4
.L264:
	addsc.a	a2,a12,d15,#0
.L265:
	st.w	[a2]52,d0
.L95:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   225      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   226  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   227      /* configuring SDRAM Registers */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   228      /* SDRAM is configured for Warm Start */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   229      /* SDRAM setting are dependent on the size of memory for example 4Mx16bit SDRAM
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   230       * Asri[22:21] is BANKM, Asri[20:9] is Row Address and Asri[8:1] is Column Address */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   231      uint32 maskForBankTag     = deviceAddressSelection[config->sdramDevice][0];
	ld.bu	d15,[a15]104
.L266:
	addsc.a	a2,a10,d15,#1
.L267:
	ld.bu	d4,[a2]
.L193:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   232      uint32 columnAddressWidth = deviceAddressSelection[config->sdramDevice][1];
	ld.bu	d5,[a2]1
.L100:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85   *  \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98   *   \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117  /** \brief Event used for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  typedef unsigned int IfxCpu_syncEvent;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147  /** \brief Overlay Address Mask: determines the overlay block size and the bits used for address comparison and translation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151      IfxCpu_OverlayAddressMask_32byte  = 0xFFF,  /**< \brief 32 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152      IfxCpu_OverlayAddressMask_64byte  = 0xFFE,  /**< \brief 64 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153      IfxCpu_OverlayAddressMask_128byte = 0xFFC,  /**< \brief 128 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154      IfxCpu_OverlayAddressMask_256byte = 0xFF8,  /**< \brief 256 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155      IfxCpu_OverlayAddressMask_512byte = 0xFF0,  /**< \brief 512 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156      IfxCpu_OverlayAddressMask_1KB     = 0xFE0,  /**< \brief 1K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157      IfxCpu_OverlayAddressMask_2KB     = 0xFC0,  /**< \brief 2K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158      IfxCpu_OverlayAddressMask_4KB     = 0xF80,  /**< \brief 4K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159      IfxCpu_OverlayAddressMask_8KB     = 0xF00,  /**< \brief 8K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160      IfxCpu_OverlayAddressMask_16KB    = 0xE00,  /**< \brief 16K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161      IfxCpu_OverlayAddressMask_32KB    = 0xC00,  /**< \brief 32K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162      IfxCpu_OverlayAddressMask_64KB    = 0x800,  /**< \brief 64K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163      IfxCpu_OverlayAddressMask_128KB   = 0x0     /**< \brief 128K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_OverlayAddressMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166  /** \brief Selects overlay memory used for redirection
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170      IfxCpu_OverlayMemorySelect_core0DsprPspr = 0,  /**< \brief Redirection to Core 0 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171      IfxCpu_OverlayMemorySelect_core1DsprPspr = 1,  /**< \brief Redirection to Core 1 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172      IfxCpu_OverlayMemorySelect_core2DsprPspr = 2,  /**< \brief Redirection to Core 2 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173      IfxCpu_OverlayMemorySelect_core3DsprPspr = 3,  /**< \brief Redirection to Core 3 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_OverlayMemorySelect_core4DsprPspr = 4,  /**< \brief Redirection to Core 4 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_OverlayMemorySelect_core5DsprPspr = 5,  /**< \brief Redirection to Core 5 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_OverlayMemorySelect_lmu           = 8,  /**< \brief Redirection to LMU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_OverlayMemorySelect_emem          = 9,  /**< \brief Redirection to EMEM memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_OverlayMemorySelect_ebu           = 10  /**< \brief Redirection to EBU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_OverlayMemorySelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183      IfxCpu_ResetStatus_notCpuReset   = 0,  /**< \brief No Kernel Reset was executed */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184      IfxCpu_ResetStatus_cpuResetBySmu = 1,  /**< \brief Kernel reset was requested by hardware since last clear (SMU) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185      IfxCpu_ResetStatus_cpuResetBySw  = 2   /**< \brief Kernel reset was requested by software since last clear (by writing KRST0.RST=1 and KRST1.RST=1) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186  } IfxCpu_ResetStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200      uint32  counter;        /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201      boolean overlfow;       /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief To request reset of a particular core, given by coreId
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313  IFX_EXTERN void IfxCpu_triggerCpuReset(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315  /** \brief Retrieve the cause of reset(no reset, hardware(SMU) or software) since last clear by reading KRST0.RSTSTAT and clear it.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_EXTERN IfxCpu_ResetStatus IfxCpu_getCpuResetStatus(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  /** \brief This function disables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631  IFX_EXTERN void IfxCpu_disableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633  /** \brief This function configures and enables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635   * The data overlay provides the capability to redirect selected data accesses to the Overlay memory. Data accesses made by the TriCore to Program Flash, Online Data Acquisition space, or EBU space can be redirected. Overlay memory may be located in the Local Memory (if present), in the Emulation Memory (Emulation Device only), or in the EBU space,or in the DPSR/PSPR memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637   * How the overlay Memory works?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638   * Any data access to segment 8 or segment A is checked against all the activated overlay blocks. For each activated overlay block, address bits 27..5 are compared with the target base address , and this bit-wise comparison is qualified by the content of address mask. Address bits participate in the comparison if the corresponding mask bits are set to one. The access is redirected, if all the address bits selected by mask equal to the corresponding bits in target address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639   * The address for redirection is constructed as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640   * 1. Address bits 31..22 are set according to the overlay memory selection and the cache-ability of the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641   * 2. For address bits 21..5:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642   * - If the corresponding address mask bit is set, the address bit value is taken from overlay base address .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643   * - If the corresponding address mask bit is cleared, the address bit value is taken from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644   * 3. Address bits 4..0 are always taken directly from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645   * If there is no redirection, the original address is used to perform the access.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646   * Target address ranges for activated overlay blocks should not overlap or an exception may occur.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649   * \param overlayMemorySelect Overlay Memory Select
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650   * \param overlayAddressMask overlay Address Mask
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651   * \param targetBaseAddress Target Base address (i.e Source address to be re-directed)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652   * \param overlayBaseAddress Overlay or Re-directed Base address (Bits 21..5 of the base address the overlay memory block in the overlay memory)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  IFX_EXTERN void IfxCpu_enableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock, IfxCpu_OverlayMemorySelect overlayMemorySelect, IfxCpu_OverlayAddressMask overlayAddressMask, uint32 targetBaseAddress, uint32 overlayBaseAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675   * CORE_ID register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678   * e.g:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679   * 1. Check for synchronisation between core 0 and core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680   * # define 0x41U
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681   * 2. Check for synchronisation between core 0 to core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682   * # define 0x5FU
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686   * Core 0: 0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687   * Core 1: 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688   * Core 2: 2
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689   * Core 3: 3
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690   * Core 4: 4
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691   * Core 5: 6
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693   * \param timeoutMilliSec timeout in millisec
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694   * \return Error condition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699   * // Global variable. preferably located in  shared memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700   * IfxCpu_syncEvent event;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701   * boolean errorVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703   * // Below code should be repeated in Each core
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705   * // Upon reaching Synchonisation point
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706   * IfxCpu_emitEvent(&event);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  /** \brief This function sets a bit corresponding to the core in the event.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718   * A coding example can be found in \ref IfxCpu_waitEvent
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729  /** \brief Sets all CPUs to Idle mode except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730   * \param masterCpu Master CPU Index- All except this will be set to Idle Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_EXTERN void IfxCpu_setAllIdleExceptMasterCpu(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  /** \brief Disables interrupts for all CPUs except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736   * \param masterCpu Master CPU Index- All except this will have their interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  IFX_EXTERN void IfxCpu_disableInterruptsAllExceptMaster(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      reg.U = __mfcr(CPU_ICR);
	mfcr	d0,#65068
.L192:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749      return reg.B.IE != 0;
	extr.u	d0,d0,#15,#1
.L194:
	ne	d15,d0,#0
.L118:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757      __disable();
	disable
.L268:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758      __nop();
	nop
.L115:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   * }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  #include "IfxCbs_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  #ifndef IFXSTM_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146  #define IFXSTM_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263  } IfxStm_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Disables the Stm module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * Note: The API will write into the OCS register only if OCDS is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340  /** \brief Returns the module index of the selected STM module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return STM module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \return system timer module index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   464  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   465  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   466  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Disables the compare interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   479   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   481  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   482  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   489  /** \brief get the interrupt source pointer for the comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to the STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   491   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   492   * \return pointer to the interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   497   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   498   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   499   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   501  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   503  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   504   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Indicates if the compare interrupt flag is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   512   * \return TRUE if the comparator flag is set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   514  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   516  /** \brief Set the compare behavior
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   517   * \param stm pointer to System timer module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   518   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   519   * \param offset Comparator start bit position
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   520   * \param size Size of compare value to compare with timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   521   * \param interrupt Comparator Interrupt request source defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   522   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   524  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   526  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   529  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   530  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   532  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   533   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   534   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   535   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   536   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   537  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   539  /** \brief Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   540   * \return Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   542  IFX_INLINE sint64 IfxStm_now(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   544  /** \brief Get the deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   545   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   546   * \return Return the deadline
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   548  IFX_INLINE sint64 IfxStm_getDeadLine(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   550  /** \brief Checked if deadline has occured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   551   * \param deadLine Deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   552   * \return Return if deadline occured or not
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   553   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   554  IFX_INLINE boolean IfxStm_isDeadLine(sint64 deadLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   555  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   556  /** \brief Waits for a specific time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   557   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   558   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   559   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   560  IFX_INLINE void IfxStm_wait(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   561  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   562  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   563  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   564  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   566  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   567   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   570  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   572  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   573  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   574  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   576  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   577  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   578      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   579  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   580      result  = stm->TIM0.U;
	lea	a2,0xf0001010
	ld.w	d0,[a2]
.L269:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   581      result |= ((uint64)stm->CAP.U) << 32;
	lea	a4,0xf000102c
	ld.w	d1,[a4]
.L123:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   583      return result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   584  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   587  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   588  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   589      return stm->CMP[comparator].B.CMPVAL;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   590  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   591  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   593  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   594  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   595      IFX_UNUSED_PARAMETER(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   596      float32 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   598      result = IfxScuCcu_getStmFrequency();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   599  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   600      return result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   601  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   604  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   605  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   606      return stm->TIM0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   607  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   609  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   610  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   611  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   612      return stm->TIM3.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   613  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   616  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   617  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   618      return stm->TIM4.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   619  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   622  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   623  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   624      return stm->TIM5.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   625  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   627  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   628  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   630      return stm->TIM6.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   634  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   636      return stm->TIM1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   640  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   642      return stm->TIM2.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   643  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   646  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   647  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   648      uint64 now;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   650      now = IfxStm_get(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   652      return (uint32)(now >> offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   656  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   658      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   659      return (freq / (1000000)) * microSeconds;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   663  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   665      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   666      return (freq / (1000)) * milliSeconds;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   667  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   670  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   671  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   672      stm->CMP[comparator].B.CMPVAL = stm->CMP[comparator].B.CMPVAL + ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   673  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   675  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   676  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   677  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   678      Ifx_STM_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   680      // read the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   681      ocs.U = stm->OCS.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   682  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   683      // return the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   684      return ocs.B.SUSSTA;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   685  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   687  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   688  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   689  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   690      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   691      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   692      stm->CLC.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   693      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   697  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   699      Ifx_STM_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   700  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   701      /* Only if OCDS is enabled write into the OCS register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   702      if (MODULE_CBS.OSTATE.B.OEN == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   703      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   704          // remove protection and configure the suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   705          ocs.B.SUS_P      = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   706          ocs.B.SUS        = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   707          stm->OCS.U       = ocs.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   708          stm->OCS.B.SUS_P = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   709      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   710  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   713  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   714  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   715      stm->CMP[comparator].B.CMPVAL = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   716  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   717  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   719  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   720  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   721      uint32 beginTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   723      beginTime = IfxStm_getLower(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   725      /*below code will work because of unsigned 32 bit calculation even at timer wrapping condition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   726       * As an example if beginTime = 0xFFFFFFFE and current time = 2 (after overflow), unsigned calculation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   727       * 2 - 0xFFFFFFFE will be 4*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   728      while ((IfxStm_getLower(stm) - beginTime) < ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   729      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   730  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   731  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   732  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   733  IFX_INLINE sint64 IfxStm_now(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   734  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   735      sint64  stmNow;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   736      boolean interruptState;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   737  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   738      interruptState = IfxCpu_disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   739      stmNow         = (Ifx_TickTime)IfxStm_get(IFXSTM_DEFAULT_TIMER) & TIME_INFINITE;
	ld.d	e2,.5.cnt
.L270:
	and	d0,d2
.L195:
	and	d1,d3
.L130:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L18
.L271:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   759      return enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   760  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   762  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   763  IFX_INLINE void IfxCpu_enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   765      __enable();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   769  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   771      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   772      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   773      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   774      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   776      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   777      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   778      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   780      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   781      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   782          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   783      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   785      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   787      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   789      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   790      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   791      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   792      /*Write to PMA0 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   793      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794      __mtcr(CPU_PMA0, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   795      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   796      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   797  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   799  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   800  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   801  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   802      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   803      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   804      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   805      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   806  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   807      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   808      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   809      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   811      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   812      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   813          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   814      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   816      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   818      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   819  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   820      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   821      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   822      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   823      /*Write to PMA1 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   824      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   825      __mtcr(CPU_PMA1, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   826      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   827      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   828  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   829  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   830  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   831  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   832  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   833      __disable();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   834      __nop();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   835  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   837  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   838  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   839  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   840      Ifx_CPU *module;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   841  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   842      if (cpu < IfxCpu_ResourceCpu_none)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   843      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   844          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   845      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   846      else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   847      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   848          module = NULL_PTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   849      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   851      return module;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   852  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   854  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   855  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   856  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   857      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   858  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   860  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   861  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   862  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   863      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   864  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   866  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   867  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   868  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   869      Ifx_CPU_CORE_ID reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   870      reg.U = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   871      return (IfxCpu_Id)reg.B.CORE_ID;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   872  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   874  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   875  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   876  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   877      uint32 reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   878      reg = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   879      return (IfxCpu_ResourceCpu)__minu(reg, 5);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   880  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   883  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   884  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   885      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   886  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   887  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   889  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   890  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   891      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   892  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   895  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   896  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   897      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   898  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   899      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   900      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   901          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   902      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   903      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   904      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   905          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   906      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   907      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   908      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   909          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   910      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   911      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   912      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   913          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   914      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   915      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   916      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   917          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   918      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   920      return ccnt.B.COUNTVALUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   921  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   922  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   923  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   924  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   925  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   926      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   928      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   929      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   930          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   931      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   932      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   933      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   934          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   935      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   936      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   937      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   938          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   939      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   940      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   941      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   942          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   943      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   944      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   945      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   946          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   947      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   948  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   949      return ccnt.B.SOVF;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   950  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   951  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   952  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   953  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   954  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   955      uint32  k;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   956      uint32  nxt_cxi_val = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   957      uint32 *prvCsa      = 0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   958      uint32 *nxtCsa      = csaBegin;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   959      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   961      for (k = 0; k < numOfCsa; k++)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   962      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   963          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   964  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   965          if (k == 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   966          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   967              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   968          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   969          else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   970          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   971              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   972          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   974          if (k == (numOfCsa - 3U))
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   975          {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   976              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   977          }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   978  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   979          prvCsa  = (uint32 *)nxtCsa;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   980          nxtCsa += 16;           /* next CSA */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   981      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   982  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   983      *prvCsa = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   984  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   985  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   987  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   988  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   989      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   990      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   991          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   992          Ifx_CPU_PCON1 pcon1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   993          pcon1.U       = __mfcr(CPU_PCON1);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   994          pcon1.B.PCINV = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   995          __mtcr(CPU_PCON1, pcon1.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   996          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   997      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   998  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   999  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1001  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1002  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1003      uint8 segment = (uint32)address >> 24;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1004      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1005  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1006  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1007  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1008  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1009  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1010      Ifx_CPU_CCTRL cctrl;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1011      cctrl.U    = __mfcr(CPU_CCTRL);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1012      /*Disable the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1013      cctrl.B.CE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1014      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1016      /* reset the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1017      __mtcr(CPU_CCNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1018      __mtcr(CPU_ICNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1019      __mtcr(CPU_M1CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1020      __mtcr(CPU_M2CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1021      __mtcr(CPU_M3CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1022  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1023      /*Enable the counters, set the counter mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1024      cctrl.B.CE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1025      cctrl.B.CM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1026      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1027  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1029  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1030  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1031  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1033      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1034          __enable();
	enable

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
.L18:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   * }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  #include "IfxCbs_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  #ifndef IFXSTM_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146  #define IFXSTM_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263  } IfxStm_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Disables the Stm module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * Note: The API will write into the OCS register only if OCDS is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340  /** \brief Returns the module index of the selected STM module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return STM module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \return system timer module index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   464  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   465  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   466  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Disables the compare interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   479   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   481  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   482  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   489  /** \brief get the interrupt source pointer for the comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to the STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   491   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   492   * \return pointer to the interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   497   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   498   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   499   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   501  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   503  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   504   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Indicates if the compare interrupt flag is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   512   * \return TRUE if the comparator flag is set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   514  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   516  /** \brief Set the compare behavior
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   517   * \param stm pointer to System timer module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   518   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   519   * \param offset Comparator start bit position
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   520   * \param size Size of compare value to compare with timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   521   * \param interrupt Comparator Interrupt request source defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   522   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   524  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   526  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   529  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   530  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   532  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   533   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   534   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   535   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   536   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   537  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   539  /** \brief Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   540   * \return Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   542  IFX_INLINE sint64 IfxStm_now(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   544  /** \brief Get the deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   545   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   546   * \return Return the deadline
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   548  IFX_INLINE sint64 IfxStm_getDeadLine(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   550  /** \brief Checked if deadline has occured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   551   * \param deadLine Deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   552   * \return Return if deadline occured or not
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   553   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   554  IFX_INLINE boolean IfxStm_isDeadLine(sint64 deadLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   555  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   556  /** \brief Waits for a specific time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   557   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   558   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   559   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   560  IFX_INLINE void IfxStm_wait(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   561  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   562  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   563  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   564  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   566  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   567   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   570  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   572  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   573  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   574  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   576  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   577  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   578      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   579  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   580      result  = stm->TIM0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   581      result |= ((uint64)stm->CAP.U) << 32;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   583      return result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   584  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   587  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   588  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   589      return stm->CMP[comparator].B.CMPVAL;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   590  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   591  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   593  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   594  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   595      IFX_UNUSED_PARAMETER(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   596      float32 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   598      result = IfxScuCcu_getStmFrequency();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   599  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   600      return result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   601  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   604  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   605  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   606      return stm->TIM0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   607  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   609  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   610  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   611  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   612      return stm->TIM3.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   613  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   616  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   617  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   618      return stm->TIM4.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   619  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   622  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   623  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   624      return stm->TIM5.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   625  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   627  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   628  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   630      return stm->TIM6.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   634  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   636      return stm->TIM1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   640  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   642      return stm->TIM2.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   643  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   646  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   647  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   648      uint64 now;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   650      now = IfxStm_get(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   652      return (uint32)(now >> offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   656  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   658      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   659      return (freq / (1000000)) * microSeconds;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   663  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   665      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   666      return (freq / (1000)) * milliSeconds;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   667  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   670  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   671  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   672      stm->CMP[comparator].B.CMPVAL = stm->CMP[comparator].B.CMPVAL + ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   673  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   675  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   676  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   677  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   678      Ifx_STM_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   680      // read the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   681      ocs.U = stm->OCS.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   682  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   683      // return the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   684      return ocs.B.SUSSTA;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   685  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   687  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   688  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   689  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   690      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   691      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   692      stm->CLC.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   693      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   697  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   699      Ifx_STM_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   700  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   701      /* Only if OCDS is enabled write into the OCS register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   702      if (MODULE_CBS.OSTATE.B.OEN == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   703      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   704          // remove protection and configure the suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   705          ocs.B.SUS_P      = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   706          ocs.B.SUS        = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   707          stm->OCS.U       = ocs.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   708          stm->OCS.B.SUS_P = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   709      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   710  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   713  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   714  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   715      stm->CMP[comparator].B.CMPVAL = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   716  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   717  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   719  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   720  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   721      uint32 beginTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   723      beginTime = IfxStm_getLower(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   725      /*below code will work because of unsigned 32 bit calculation even at timer wrapping condition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   726       * As an example if beginTime = 0xFFFFFFFE and current time = 2 (after overflow), unsigned calculation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   727       * 2 - 0xFFFFFFFE will be 4*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   728      while ((IfxStm_getLower(stm) - beginTime) < ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   729      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   730  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   731  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   732  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   733  IFX_INLINE sint64 IfxStm_now(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   734  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   735      sint64  stmNow;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   736      boolean interruptState;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   737  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   738      interruptState = IfxCpu_disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   739      stmNow         = (Ifx_TickTime)IfxStm_get(IFXSTM_DEFAULT_TIMER) & TIME_INFINITE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   740      IfxCpu_restoreInterrupts(interruptState);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   742      return stmNow;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   743  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   745  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   746  IFX_INLINE sint64 IfxStm_getDeadLine(sint64 timeout)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   747  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   748      sint64 deadLine;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   749  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   750      if (timeout == TIME_INFINITE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   751      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   752          deadLine = TIME_INFINITE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   753      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   754      else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   755      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   756          deadLine = IfxStm_now() + timeout;
	mov	e2,#21000
.L272:
	addx	d2,d0,d2
	addc	d3,d1,d3

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   784      while (IfxStm_isDeadLine(deadLine) == FALSE)      (inlined)
.L19:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   757      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   758  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   759      return deadLine;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   760  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   762  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   763  IFX_INLINE boolean IfxStm_isDeadLine(sint64 deadLine)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   765      boolean result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   767      if (deadLine == TIME_INFINITE)
	ld.d	e0,.5.cnt
.L273:
	ne	d15,d2,d0
	or.ne	d15,d3,d1
.L274:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   767      if (deadLine == TIME_INFINITE)      (inlined)
	jeq	d15,#0,.L21
.L139:
	mfcr	d15,#65068
.L196:
	extr.u	d15,d15,#15,#1
.L197:
	ne	d15,d15,#0
.L142:
	disable
.L275:
	nop
.L141:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   * }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  #include "IfxCbs_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  #ifndef IFXSTM_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146  #define IFXSTM_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263  } IfxStm_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Disables the Stm module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * Note: The API will write into the OCS register only if OCDS is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340  /** \brief Returns the module index of the selected STM module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return STM module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \return system timer module index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   464  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   465  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   466  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Disables the compare interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   479   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   481  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   482  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   489  /** \brief get the interrupt source pointer for the comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to the STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   491   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   492   * \return pointer to the interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   497   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   498   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   499   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   501  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   503  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   504   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Indicates if the compare interrupt flag is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   512   * \return TRUE if the comparator flag is set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   514  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   516  /** \brief Set the compare behavior
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   517   * \param stm pointer to System timer module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   518   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   519   * \param offset Comparator start bit position
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   520   * \param size Size of compare value to compare with timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   521   * \param interrupt Comparator Interrupt request source defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   522   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   524  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   526  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   529  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   530  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   532  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   533   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   534   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   535   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   536   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   537  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   539  /** \brief Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   540   * \return Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   542  IFX_INLINE sint64 IfxStm_now(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   544  /** \brief Get the deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   545   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   546   * \return Return the deadline
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   548  IFX_INLINE sint64 IfxStm_getDeadLine(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   550  /** \brief Checked if deadline has occured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   551   * \param deadLine Deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   552   * \return Return if deadline occured or not
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   553   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   554  IFX_INLINE boolean IfxStm_isDeadLine(sint64 deadLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   555  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   556  /** \brief Waits for a specific time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   557   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   558   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   559   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   560  IFX_INLINE void IfxStm_wait(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   561  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   562  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   563  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   564  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   566  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   567   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   570  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   572  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   573  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   574  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   576  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   577  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   578      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   579  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   580      result  = stm->TIM0.U;
	ld.w	d0,[a2]
.L144:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   581      result |= ((uint64)stm->CAP.U) << 32;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   583      return result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   584  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   587  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   588  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   589      return stm->CMP[comparator].B.CMPVAL;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   590  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   591  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   593  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   594  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   595      IFX_UNUSED_PARAMETER(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   596      float32 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   598      result = IfxScuCcu_getStmFrequency();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   599  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   600      return result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   601  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   604  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   605  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   606      return stm->TIM0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   607  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   609  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   610  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   611  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   612      return stm->TIM3.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   613  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   616  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   617  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   618      return stm->TIM4.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   619  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   622  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   623  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   624      return stm->TIM5.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   625  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   627  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   628  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   630      return stm->TIM6.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   634  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   636      return stm->TIM1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   640  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   642      return stm->TIM2.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   643  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   646  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   647  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   648      uint64 now;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   650      now = IfxStm_get(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   652      return (uint32)(now >> offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   656  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   658      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   659      return (freq / (1000000)) * microSeconds;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   663  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   665      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   666      return (freq / (1000)) * milliSeconds;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   667  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   670  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   671  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   672      stm->CMP[comparator].B.CMPVAL = stm->CMP[comparator].B.CMPVAL + ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   673  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   675  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   676  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   677  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   678      Ifx_STM_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   680      // read the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   681      ocs.U = stm->OCS.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   682  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   683      // return the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   684      return ocs.B.SUSSTA;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   685  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   687  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   688  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   689  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   690      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   691      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   692      stm->CLC.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   693      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   697  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   699      Ifx_STM_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   700  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   701      /* Only if OCDS is enabled write into the OCS register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   702      if (MODULE_CBS.OSTATE.B.OEN == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   703      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   704          // remove protection and configure the suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   705          ocs.B.SUS_P      = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   706          ocs.B.SUS        = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   707          stm->OCS.U       = ocs.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   708          stm->OCS.B.SUS_P = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   709      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   710  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   713  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   714  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   715      stm->CMP[comparator].B.CMPVAL = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   716  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   717  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   719  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   720  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   721      uint32 beginTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   723      beginTime = IfxStm_getLower(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   725      /*below code will work because of unsigned 32 bit calculation even at timer wrapping condition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   726       * As an example if beginTime = 0xFFFFFFFE and current time = 2 (after overflow), unsigned calculation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   727       * 2 - 0xFFFFFFFE will be 4*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   728      while ((IfxStm_getLower(stm) - beginTime) < ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   729      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   730  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   731  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   732  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   733  IFX_INLINE sint64 IfxStm_now(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   734  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   735      sint64  stmNow;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   736      boolean interruptState;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   737  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   738      interruptState = IfxCpu_disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   739      stmNow         = (Ifx_TickTime)IfxStm_get(IFXSTM_DEFAULT_TIMER) & TIME_INFINITE;
	ld.d	e6,.5.cnt
.L146:
	ld.w	d1,[a4]
.L147:
	and	d0,d6
.L198:
	and	d1,d7
.L149:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L22
.L276:
	enable

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
.L22:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   * }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  #include "IfxCbs_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  #ifndef IFXSTM_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146  #define IFXSTM_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263  } IfxStm_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Disables the Stm module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * Note: The API will write into the OCS register only if OCDS is enabled
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340  /** \brief Returns the module index of the selected STM module
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return STM module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \return system timer module index.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   464  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   465  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   466  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Disables the compare interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   479   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   481  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   482  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   489  /** \brief get the interrupt source pointer for the comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to the STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   491   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   492   * \return pointer to the interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   497   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   498   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   499   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   501  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   503  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   504   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Indicates if the compare interrupt flag is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   512   * \return TRUE if the comparator flag is set
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   514  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   516  /** \brief Set the compare behavior
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   517   * \param stm pointer to System timer module registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   518   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   519   * \param offset Comparator start bit position
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   520   * \param size Size of compare value to compare with timer
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   521   * \param interrupt Comparator Interrupt request source defined
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   522   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   524  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   526  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   529  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   530  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   532  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   533   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   534   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   535   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   536   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   537  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   539  /** \brief Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   540   * \return Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   542  IFX_INLINE sint64 IfxStm_now(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   544  /** \brief Get the deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   545   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   546   * \return Return the deadline
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   548  IFX_INLINE sint64 IfxStm_getDeadLine(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   550  /** \brief Checked if deadline has occured
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   551   * \param deadLine Deadline value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   552   * \return Return if deadline occured or not
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   553   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   554  IFX_INLINE boolean IfxStm_isDeadLine(sint64 deadLine);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   555  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   556  /** \brief Waits for a specific time
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   557   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   558   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   559   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   560  IFX_INLINE void IfxStm_wait(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   561  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   562  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   563  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   564  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   566  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   567   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   570  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   572  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   573  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   574  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   576  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   577  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   578      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   579  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   580      result  = stm->TIM0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   581      result |= ((uint64)stm->CAP.U) << 32;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   583      return result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   584  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   587  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   588  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   589      return stm->CMP[comparator].B.CMPVAL;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   590  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   591  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   593  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   594  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   595      IFX_UNUSED_PARAMETER(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   596      float32 result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   598      result = IfxScuCcu_getStmFrequency();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   599  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   600      return result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   601  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   604  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   605  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   606      return stm->TIM0.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   607  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   609  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   610  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   611  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   612      return stm->TIM3.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   613  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   616  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   617  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   618      return stm->TIM4.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   619  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   622  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   623  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   624      return stm->TIM5.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   625  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   627  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   628  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   630      return stm->TIM6.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   634  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   636      return stm->TIM1.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   640  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   642      return stm->TIM2.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   643  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   646  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   647  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   648      uint64 now;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   650      now = IfxStm_get(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   652      return (uint32)(now >> offset);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   656  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   658      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   659      return (freq / (1000000)) * microSeconds;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   663  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   665      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   666      return (freq / (1000)) * milliSeconds;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   667  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   670  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   671  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   672      stm->CMP[comparator].B.CMPVAL = stm->CMP[comparator].B.CMPVAL + ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   673  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   675  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   676  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   677  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   678      Ifx_STM_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   680      // read the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   681      ocs.U = stm->OCS.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   682  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   683      // return the status
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   684      return ocs.B.SUSSTA;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   685  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   687  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   688  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   689  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   690      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   691      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   692      stm->CLC.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   693      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   697  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   699      Ifx_STM_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   700  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   701      /* Only if OCDS is enabled write into the OCS register */
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   702      if (MODULE_CBS.OSTATE.B.OEN == 1U)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   703      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   704          // remove protection and configure the suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   705          ocs.B.SUS_P      = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   706          ocs.B.SUS        = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   707          stm->OCS.U       = ocs.U;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   708          stm->OCS.B.SUS_P = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   709      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   710  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   713  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   714  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   715      stm->CMP[comparator].B.CMPVAL = ticks;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   716  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   717  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   719  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   720  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   721      uint32 beginTime;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   723      beginTime = IfxStm_getLower(stm);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   725      /*below code will work because of unsigned 32 bit calculation even at timer wrapping condition
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   726       * As an example if beginTime = 0xFFFFFFFE and current time = 2 (after overflow), unsigned calculation
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   727       * 2 - 0xFFFFFFFE will be 4*/
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   728      while ((IfxStm_getLower(stm) - beginTime) < ticks)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   729      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   730  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   731  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   732  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   733  IFX_INLINE sint64 IfxStm_now(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   734  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   735      sint64  stmNow;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   736      boolean interruptState;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   737  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   738      interruptState = IfxCpu_disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   739      stmNow         = (Ifx_TickTime)IfxStm_get(IFXSTM_DEFAULT_TIMER) & TIME_INFINITE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   740      IfxCpu_restoreInterrupts(interruptState);
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   742      return stmNow;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   743  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   745  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   746  IFX_INLINE sint64 IfxStm_getDeadLine(sint64 timeout)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   747  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   748      sint64 deadLine;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   749  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   750      if (timeout == TIME_INFINITE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   751      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   752          deadLine = TIME_INFINITE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   753      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   754      else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   755      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   756          deadLine = IfxStm_now() + timeout;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   757      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   758  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   759      return deadLine;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   760  }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   762  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   763  IFX_INLINE boolean IfxStm_isDeadLine(sint64 deadLine)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   765      boolean result;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   767      if (deadLine == TIME_INFINITE)
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   768      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   769          result = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   770      }
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   771      else
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   772      {
; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   773          result = IfxStm_now() >= deadLine;
	ge.u	d15,d0,d2
.L199:
	and.eq	d15,d1,d3
	or.lt	d15,d3,d1

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   771      else      (inlined)
.L21:

; D:\WorkSpace\Tasking\Tasking_TC397_MultiCore_RTThread\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   784      while (IfxStm_isDeadLine(deadLine) == FALSE)      (inlined)
	jeq	d15,#0,.L19
.L101:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   233  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   234      /* The Model requires us to wait for 20us before Transactions can be started, we have modified
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   235       * the model for 2us */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   236      /* The Sequence of writes to SDRAM Registers depends on Warm or Cold Start */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   237      IfxStm_wait(21000);
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   238  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   239      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   240          Ifx_EBU_SDRMCON sdrmcon;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   241  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   242          sdrmcon.U          = 0;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   243          sdrmcon.B.SDCMSEL  = config->sdramControlConfig.clockModeSelect;
	mov	d1,#0
	ld.bu	d15,[a15]138
.L200:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   244          sdrmcon.B.PWR_MODE = config->sdramControlConfig.powerSaveMode;
	ld.bu	d0,[a15]137
.L277:
	insert	d15,d1,d15,#31,#1
.L201:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   245          sdrmcon.B.CLKDIS   = config->sdramControlConfig.disableClockOutput;
	insert	d15,d15,d0,#29,#2
	ld.bu	d0,[a15]136
.L278:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   246          sdrmcon.B.BANKM    = maskForBankTag;     // config->sdramControlConfig.maskForBankTag;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   247          sdrmcon.B.CRC      = config->sdramControlConfig.refreshCycleTime;
	insert	d15,d15,d0,#28,#1
	ld.bu	d0,[a15]134
.L202:
	insert	d15,d15,d4,#22,#3
.L203:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   248          sdrmcon.B.CRCD     = config->sdramControlConfig.rowToColumnDelay;
	insert	d15,d15,d0,#16,#6
	ld.bu	d0,[a15]133
.L279:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   249          sdrmcon.B.AWIDTH   = columnAddressWidth; // config->sdramControlConfig.columnAddressWidth;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   250          sdrmcon.B.CRP      = config->sdramControlConfig.rowPrechargeTime;
	insert	d15,d15,d0,#14,#2
	ld.bu	d0,[a15]131
.L204:
	insert	d15,d15,d5,#12,#2
.L205:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   251          sdrmcon.B.CRSC     = config->sdramControlConfig.modeRegSetupTime;
	insert	d15,d15,d0,#10,#2
	ld.bu	d0,[a15]130
.L280:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   252          sdrmcon.B.CRFSH    = config->sdramControlConfig.initializationRefreshCommand;
	insert	d15,d15,d0,#8,#2
	ld.bu	d0,[a15]129
.L281:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   253          sdrmcon.B.CRAS     = config->sdramControlConfig.rowToPrechargeDelay;
	insert	d15,d15,d0,#4,#4
	ld.bu	d0,[a15]128
.L282:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   254  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   255          ebu->SDRMCON.U     = sdrmcon.U;
	insert	d15,d15,d0,#0,#4
	st.w	[a12]104,d15
.L150:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   256      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   257      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   258          Ifx_EBU_SDRMOD sdrmmod;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   259          sdrmmod.U           = 0;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   260          sdrmmod.B.XBA       = config->sdramModConfig.extendedBankSelect;
	ld.bu	d15,[a15]108
.L206:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   261          sdrmmod.B.XOPM      = config->sdramModConfig.extendedOperationMode;
	ld.hu	d0,[a15]110
.L207:
	insert	d15,d1,d15,#30,#2
.L208:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   262          sdrmmod.B.COLDSTART = config->sdramModConfig.coldStart;
	insert	d15,d15,d0,#16,#14
	ld.bu	d0,[a15]112
.L283:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   263          sdrmmod.B.OPMODE    = config->sdramModConfig.opmode;
	insert	d15,d15,d0,#15,#1
	ld.bu	d0,[a15]115
.L284:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   264          sdrmmod.B.CASLAT    = config->sdramModConfig.casLatency;
	insert	d15,d15,d0,#7,#7
	ld.bu	d0,[a15]113
.L285:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   265          sdrmmod.B.BURSTL    = config->sdramModConfig.burstLength;
	insert	d15,d15,d0,#4,#3
	ld.bu	d0,[a15]114
.L286:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   266          ebu->SDRMOD.U       = sdrmmod.U;
	insert	d15,d15,d0,#0,#3
	st.w	[a12]108,d15
.L153:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   267      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   268      {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   269          Ifx_EBU_SDRMREF sdrmref;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   270  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   271          sdrmref.U             = 0;
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   272          sdrmref.B.RES_DLY     = config->sdramRefreshConfig.delayOnPowerDownExit;
	ld.bu	d15,[a15]116
.L209:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   273          sdrmref.B.ARFSH       = config->sdramRefreshConfig.autoRefresh;
	ld.bu	d0,[a15]117
.L210:
	insert	d15,d1,d15,#25,#3
.L211:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   274          sdrmref.B.SELFREX_DLY = config->sdramRefreshConfig.selfRefreshExitDelay;
	insert	d15,d15,d0,#24,#1
	ld.bu	d0,[a15]118
.L287:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   275          sdrmref.B.ERFSHC      = config->sdramRefreshConfig.extendedRefresh;
	insert	d15,d15,d0,#16,#8
	ld.bu	d0,[a15]119
.L288:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   276          sdrmref.B.AUTOSELFR   = config->sdramRefreshConfig.automaticSelfRefresh;
	insert	d15,d15,d0,#14,#2
	ld.bu	d0,[a15]120
.L289:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   277          sdrmref.B.SELFREN     = config->sdramRefreshConfig.selfRefreshEntry;
	insert	d15,d15,d0,#13,#1
	ld.bu	d0,[a15]121
.L290:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   278          sdrmref.B.SELFREX     = config->sdramRefreshConfig.selfRefreshExit;
	insert	d15,d15,d0,#12,#1
	ld.bu	d0,[a15]122
.L291:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   279          sdrmref.B.REFRESHR    = config->sdramRefreshConfig.refreshCommands;
	insert	d15,d15,d0,#10,#1
	ld.bu	d0,[a15]123
.L292:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   280          sdrmref.B.REFRESHC    = config->sdramRefreshConfig.refreshPeriod;
	insert	d15,d15,d0,#6,#3
	ld.bu	d0,[a15]124
.L293:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   281  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   282          ebu->SDRMREF.U        = sdrmref.U;
	insert	d15,d15,d0,#0,#6
	st.w	[a12]112,d15
.L294:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   283  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   284          /* read back to ensure that EBU is configured before first external access */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   285          if (ebu->SDRMREF.U)
	ld.w	d15,[a12]112
.L156:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   286          {}
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   287      }
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   288  }
	ret
.L41:
	
__IfxEbu_Dram_initMemory_function_end:
	.size	IfxEbu_Dram_initMemory,__IfxEbu_Dram_initMemory_function_end-IfxEbu_Dram_initMemory
.L35:
	; End of function
	
	.sdecl	'.text.IfxEbu_Dram.IfxEbu_Dram_initMemoryConfig',code,cluster('IfxEbu_Dram_initMemoryConfig')
	.sect	'.text.IfxEbu_Dram.IfxEbu_Dram_initMemoryConfig'
	.align	2
	
	.global	IfxEbu_Dram_initMemoryConfig

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   289  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   290  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   291  void IfxEbu_Dram_initMemoryConfig(IfxEbu_Dram_Config *config, Ifx_EBU *ebu)
; Function IfxEbu_Dram_initMemoryConfig
.L26:
IfxEbu_Dram_initMemoryConfig:	.type	func

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   292  {
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   293      config->module             = ebu;
	st.a	[a4],a5
.L299:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   294      config->externalClockRatio = IfxEbu_ExternalClockRatio_4;
	mov	d0,#3
	st.b	[a4]152,d0
.L300:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   295      config->chipSelect         = IfxEbu_ChipSelect_0;
	mov	d1,#0
	st.b	[a4]4,d1
.L301:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   296  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   297      /* Synchronous Read Configuration */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   298  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   299      config->syncReadConfig.deviceType      = IfxEbu_DeviceType_sdram;
	mov	d15,#8
	st.b	[a4]8,d15
.L302:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   300      config->syncReadConfig.deviceInterface = IfxEbu_ExternalDeviceInterface_16bitMultiplexed;
	mov	d2,#1
	st.b	[a4]10,d2
.L303:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   301      config->syncReadConfig.burstLength     = IfxEbu_SynchronousBurstLength_8;
	st.b	[a4]18,d0
.L304:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   302  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   303      /* Asynchronous Read Configuration */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   304      config->asyncReadConfig.deviceType      = IfxEbu_DeviceType_demuxedAsynchronousType;
	mov	d3,#4
	st.b	[a4]32,d3
.L305:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   305      config->asyncReadConfig.deviceInterface = IfxEbu_ExternalDeviceInterface_16bitMultiplexed;
	st.b	[a4]34,d2
.L306:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   306      config->asyncReadConfig.burstLength     = IfxEbu_SynchronousBurstLength_1;
	st.b	[a4]42,d1
.L307:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   307  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   308      /* Synchronous Write Configuration */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   309  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   310      config->syncWriteConfig.deviceType      = IfxEbu_DeviceType_sdram;
	st.b	[a4]20,d15
.L308:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   311      config->syncWriteConfig.deviceInterface = IfxEbu_ExternalDeviceInterface_16bitMultiplexed;
	st.b	[a4]22,d2
.L309:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   312      config->syncWriteConfig.burstLength     = IfxEbu_SynchronousBurstLength_8;
	st.b	[a4]28,d0
.L310:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   313  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   314      /* Asynchronous Write Configuration */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   315      config->asyncWriteConfig.deviceType      = IfxEbu_DeviceType_demuxedAsynchronousType;
	st.b	[a4]44,d3
.L311:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   316      config->asyncWriteConfig.deviceInterface = IfxEbu_ExternalDeviceInterface_16bitMultiplexed;
	st.b	[a4]46,d2
.L312:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   317      config->asyncWriteConfig.burstLength     = IfxEbu_SynchronousBurstLength_1;
	st.b	[a4]52,d1
.L313:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   318  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   319      /* Synchronous Read Access Parameters */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   320      config->syncReadAccessParameter.commandDelay   = 3;
	st.b	[a4]58,d0
.L314:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   321      config->syncReadAccessParameter.externalClock  = 2;
	mov	d4,#2
	st.b	[a4]60,d4
.L315:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   322      config->syncReadAccessParameter.recoveryAccess = 3;
	st.b	[a4]63,d0
.L316:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   323      config->syncReadAccessParameter.recoveryRegion = 3;
	st.b	[a4]64,d0
.L317:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   324  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   325      /* Asynchronous Read Access Parameters */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   326      config->asyncReadAccessParameter.waitState      = 10;
	mov	d5,#10
	st.b	[a4]86,d5
.L318:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   327      config->asyncReadAccessParameter.recoveryAccess = 0;
	st.b	[a4]87,d1
.L319:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   328      config->asyncReadAccessParameter.recoveryRegion = 1;
	st.b	[a4]88,d2
.L320:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   329  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   330      /* Synchronous Write Access Parameters */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   331      config->syncWriteAccessParameter.commandDelay   = 3;
	st.b	[a4]70,d0
.L321:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   332      config->syncWriteAccessParameter.externalClock  = 2;
	st.b	[a4]72,d4
.L322:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   333      config->syncWriteAccessParameter.recoveryAccess = 3;
	st.b	[a4]75,d0
.L323:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   334      config->syncWriteAccessParameter.recoveryRegion = 3;
	st.b	[a4]76,d0
.L324:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   335  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   336      /* Asynchronous Write Access Parameters */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   337      config->asyncWriteAccessParameter.waitState      = 10;
	st.b	[a4]98,d5
.L325:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   338      config->asyncWriteAccessParameter.recoveryAccess = 0;
	st.b	[a4]99,d1
.L326:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   339      config->asyncWriteAccessParameter.recoveryRegion = 1;
	st.b	[a4]100,d2
.L327:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   340  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   341      /* Memory Region configuration */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   342      config->memoryRegionConfig.regionEnabled           = TRUE;
	st.b	[a4]140,d2
.L328:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   343      config->memoryRegionConfig.alternateSegmentEnabled = TRUE;
	st.b	[a4]141,d2
.L329:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   344      config->memoryRegionConfig.writeProtection         = FALSE;
	st.b	[a4]142,d1
.L330:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   345      config->memoryRegionConfig.combinedChipSelect      = FALSE;
	st.b	[a4]143,d1
.L331:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   346      config->memoryRegionConfig.addressMask             = IfxEbu_MemoryRegionMask_5;
	mov	d6,#5
	st.b	[a4]144,d6
.L332:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   347      config->memoryRegionConfig.alternateSegment        = 0x8;
	st.b	[a4]145,d15
.L333:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   348      config->memoryRegionConfig.baseAddress             = 0xA4000000;
	movh	d15,#41984
	st.w	[a4]146,d15
.L334:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   349  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   350      /* EBU Configuration parameters */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   351      config->moduleConfig.arbMode                  = IfxEbu_ExternalBusMode_soleMaster;
	st.b	[a4]155,d0
.L335:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   352      config->moduleConfig.lockTimeout              = 0xff;
	mov	d15,#255
	st.b	[a4]158,d15
.L336:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   353      config->moduleConfig.arbSignalSynchronization = IfxEbu_ArbitrationSignalSynchronization_asynchronous;
	st.b	[a4]156,d2
.L337:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   354      config->moduleConfig.clockComb                = 1;
	st.b	[a4]159,d2
.L338:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   355  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   356      /* Sdram Control Parameters */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   357      config->sdramControlConfig.rowToPrechargeDelay          = 0xa;
	st.b	[a4]128,d5
.L339:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   358      /* The Values can be optimized for SDRAM, currently it is set for the maximum value */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   359      config->sdramControlConfig.initializationRefreshCommand = 0xf;                         /* This value can be optimized it is currently set to max to suite all SDRAMs */
	mov	d15,#15
	st.b	[a4]129,d15
.L340:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   360      config->sdramControlConfig.modeRegSetupTime             = IfxEbu_ModeRegisterSetupTime_2;
	st.b	[a4]130,d4
.L341:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   361      config->sdramControlConfig.rowPrechargeTime             = IfxEbu_RowPrechargeTime_3;
	st.b	[a4]131,d0
.L342:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   362      config->sdramControlConfig.columnAddressWidth           = IfxEbu_ColumnAddressWidth_1; /* This is device Size Specific */
	st.b	[a4]132,d2
.L343:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   363      config->sdramControlConfig.rowToColumnDelay             = IfxEbu_RowToColumnDelay_3;
	st.b	[a4]133,d0
.L344:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   364      config->sdramControlConfig.refreshCycleTime             = 0x13;
	mov	d15,#19
	st.b	[a4]134,d15
.L345:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   365      config->sdramControlConfig.maskForBankTag               = IfxEbu_MaskForBankTag_4;     /* This is device size Specific */
	st.b	[a4]135,d3
.L346:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   366      config->sdramControlConfig.disableClockOutput           = 0;
	st.b	[a4]136,d1
.L347:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   367      config->sdramControlConfig.powerSaveMode                = IfxEbu_PowerSaveMode_0;
	st.b	[a4]137,d1
.L348:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   368      config->sdramControlConfig.clockModeSelect              = 0;
	st.b	[a4]138,d1
.L349:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   369  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   370      /* SDRAM Mod Register is mainly for Mobile SDRAM */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   371      config->sdramModConfig.extendedBankSelect    = IfxEbu_ExtendedOperationBankSelect_0; /* Applicable for Mobile SDRAM */
	st.b	[a4]108,d1
.L350:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   372      config->sdramModConfig.extendedOperationMode = 0;                                    /* Applicable for Mobile SDRAM */
	st.h	[a4]110,d1
.L351:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   373      /* We are selecting Warm Start */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   374      config->sdramModConfig.coldStart             = 0;
	st.b	[a4]112,d1
.L352:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   375      config->sdramModConfig.opmode                = 0;
	st.b	[a4]115,d1
.L353:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   376      config->sdramModConfig.casLatency            = IfxEbu_CASLatency_Latency3;
	st.b	[a4]113,d0
.L354:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   377      config->sdramModConfig.burstLength           = IfxEbu_SDRAMBurstLength_8;
	st.b	[a4]114,d0
.L355:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   378  
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   379      /* Values for Refresh Register */
; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   380      config->sdramRefreshConfig.delayOnPowerDownExit = IfxEbu_DelayOnPowerDownExit_2;
	st.b	[a4]116,d4
.L356:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   381      config->sdramRefreshConfig.autoRefresh          = 1;
	st.b	[a4]117,d2
.L357:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   382      config->sdramRefreshConfig.selfRefreshExitDelay = 2;
	st.b	[a4]118,d4
.L358:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   383      config->sdramRefreshConfig.extendedRefresh      = IfxEbu_ExtendedRefresh_0;
	st.b	[a4]119,d1
.L359:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   384      config->sdramRefreshConfig.automaticSelfRefresh = 1;
	st.b	[a4]120,d2
.L360:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   385      config->sdramRefreshConfig.selfRefreshEntry     = 0;
	st.b	[a4]121,d1
.L361:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   386      config->sdramRefreshConfig.selfRefreshExit      = 0;
	st.b	[a4]122,d1
.L362:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   387      config->sdramRefreshConfig.refreshCommands      = IfxEbu_RefreshCommands_7;
	mov	d15,#7
	st.b	[a4]123,d15
.L363:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   388      config->sdramRefreshConfig.refreshPeriod        = 63;
	mov	d15,#63
	st.b	[a4]124,d15
.L364:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   389      config->sdramDevice                             = IfxEbu_Dram_SDRAMDevice_4Mx16;
	st.b	[a4]104,d3
.L365:

; ..\0_Src\4_McHal\Tricore\Ebu\Dram\IfxEbu_Dram.c	   390  }
	ret
.L159:
	
__IfxEbu_Dram_initMemoryConfig_function_end:
	.size	IfxEbu_Dram_initMemoryConfig,__IfxEbu_Dram_initMemoryConfig_function_end-IfxEbu_Dram_initMemoryConfig
.L40:
	; End of function
	
	.sdecl	'.rodata.IfxEbu_Dram..2.ini',data,rom
	.sect	'.rodata.IfxEbu_Dram..2.ini'
.2.ini:	.type	object
	.size	.2.ini,20
	.byte	6,3,5,3
	.byte	4,2,3,2
	.byte	2,1,1,1
	.byte	6,3,5,2
	.byte	4,2,3,1
	.calls	'IfxEbu_Dram_initMemory','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxEbu_Dram_initMemory','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxEbu_Dram_initMemory','IfxEbu_setExternalClockRatio'
	.calls	'IfxEbu_Dram_initMemory','IfxScuWdt_setCpuEndinit'
	.calls	'IfxEbu_Dram_initMemory','IfxPort_setPinMode'
	.calls	'IfxEbu_Dram_initMemory','',24
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxEbu_setExternalClockRatio
	.extern	IfxPort_setPinMode
	.calls	'IfxEbu_Dram_initMemoryConfig','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L28:
	.word	126529
	.half	3
	.word	.L29
	.byte	4
.L27:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L30
	.byte	2,1,1,3
	.word	170
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	173
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	218
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	230
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,169,2,17,1,1,6,0
.L127:
	.byte	7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	342
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	316
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	348
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	348
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	316
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	457
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	457
	.byte	16,0,2,35,0,0,12,4,189,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	473
	.byte	4,2,35,0,0
.L59:
	.byte	7
	.byte	'unsigned char',0,1,8
.L56:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,4,197,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	648
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,135,10,16,4,11
	.byte	'AE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,4,205,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	914
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,136,17,25,12,13
	.byte	'CON0',0
	.word	569
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	874
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1105
	.byte	4,2,35,8,0,14
	.word	1145
	.byte	3
	.word	1208
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,164,4,17,1,1,5
	.byte	'watchdog',0,3,164,4,65
	.word	1213
	.byte	5
	.byte	'password',0,3,164,4,82
	.word	626
	.byte	6,0,4
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,3,197,4,17,1,1,5
	.byte	'password',0,3,197,4,59
	.word	626
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,144,5,17,1,1,5
	.byte	'watchdog',0,3,144,5,63
	.word	1213
	.byte	5
	.byte	'password',0,3,144,5,80
	.word	626
	.byte	6,0,4
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,3,177,5,17,1,1,5
	.byte	'password',0,3,177,5,57
	.word	626
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,220,4,19
	.word	626
	.byte	1,1,5
	.byte	'watchdog',0,3,220,4,74
	.word	1213
	.byte	6,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,3,129,5,19
	.word	626
	.byte	1,1,6,0,15,6,161,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_2',0,2,16
	.byte	'IfxCpu_ResourceCpu_3',0,3,16
	.byte	'IfxCpu_ResourceCpu_4',0,4,16
	.byte	'IfxCpu_ResourceCpu_5',0,5,16
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,5,235,6,31
	.word	1623
	.byte	1,1,6,0
.L117:
	.byte	8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,5,233,5,20
	.word	609
	.byte	1,1
.L119:
	.byte	6,0
.L114:
	.byte	8
	.byte	'IfxCpu_disableInterrupts',0,3,5,241,5,20
	.word	609
	.byte	1,1
.L116:
	.byte	17,6,0,0
.L129:
	.byte	4
	.byte	'IfxCpu_restoreInterrupts',0,3,5,134,8,17,1,1
.L131:
	.byte	5
	.byte	'enabled',0,5,134,8,50
	.word	609
.L133:
	.byte	6,0
.L71:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,5,255,6,19
	.word	1963
	.byte	1,1,5
	.byte	'address',0,5,255,6,55
	.word	626
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,5,156,7,20
	.word	609
	.byte	1,1,5
	.byte	'address',0,5,156,7,70
	.word	626
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,5,138,9,17,1,1,5
	.byte	'address',0,5,138,9,56
	.word	1963
	.byte	5
	.byte	'count',0,5,138,9,72
	.word	1963
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,8,145,3,16,4,11
	.byte	'P0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,8,171,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2194
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,8,171,2,16,4,11
	.byte	'PS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,8,251,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2510
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,8,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,8,155,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3081
	.byte	4,2,35,0,0,18,4
	.word	609
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,8,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	609
	.byte	5,0,2,35,3,0,12,8,171,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3210
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,8,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	609
	.byte	5,0,2,35,3,0,12,8,187,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3425
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,8,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	609
	.byte	5,0,2,35,3,0,12,8,195,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3640
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,8,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	609
	.byte	5,0,2,35,3,0,12,8,179,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3857
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,8,141,1,16,4,11
	.byte	'P0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,8,163,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4077
	.byte	4,2,35,0,0,18,24
	.word	609
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,8,212,3,16,4,11
	.byte	'PD0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	609
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	609
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	609
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,8,195,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4401
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,8,233,3,16,4,11
	.byte	'PD8',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	609
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	609
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	609
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,8,203,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4705
	.byte	4,2,35,0,0,18,8
	.word	609
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,8,111,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,8,147,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5030
	.byte	4,2,35,0,0,18,12
	.word	609
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,8,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,8,187,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5370
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,8,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,8,179,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5736
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,8,230,2,16,4,11
	.byte	'PS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,12,8,139,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6100
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,8,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,12,8,155,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6247
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,8,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,12,8,163,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6416
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,8,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,8,147,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6588
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,8,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	12,0,2,35,2,0,12,8,219,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6763
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,8,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	8,0,2,35,3,0,12,8,235,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6937
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,8,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,12,8,243,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7111
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,8,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,8,227,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7287
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,8,208,2,16,4,11
	.byte	'PS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,8,131,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7443
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,8,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,8,211,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7776
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,8,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	609
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,8,203,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8124
	.byte	4,2,35,0,0,18,32
	.word	8404
	.byte	19,7,0,18,56
	.word	609
	.byte	19,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,105,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,8,139,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8462
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,68,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,8,131,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8549
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,8,220,5,25,128,2,13
	.byte	'OUT',0
	.word	2470
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	3041
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	3161
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3201
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3385
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3600
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3817
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	4037
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3201
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4352
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4392
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4665
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4981
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	5021
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5321
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5361
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5696
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	6060
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	5021
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	6207
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6376
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6548
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6723
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6897
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	7071
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7247
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7403
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7736
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	8084
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	5021
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	8444
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	8453
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	8509
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	9076
	.byte	4,3,35,252,1,0,14
	.word	9116
	.byte	3
	.word	9686
	.byte	15,7,187,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,7,169,5,17,1,1,5
	.byte	'port',0,7,169,5,44
	.word	9691
	.byte	5
	.byte	'pinIndex',0,7,169,5,56
	.word	609
	.byte	5
	.byte	'action',0,7,169,5,80
	.word	9696
	.byte	6,0,4
	.byte	'IfxScuCcu_wait',0,3,9,157,14,17,1,1,5
	.byte	'timeSec',0,9,157,14,40
	.word	230
	.byte	17,6,0,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,9,188,13,20
	.word	230
	.byte	1,1,6,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,11,68,16,4,11
	.byte	'SRPN',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	609
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	609
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,11,93,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9961
	.byte	4,2,35,0,0,14
	.word	10251
	.byte	3
	.word	10290
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,10,247,1,17,1,1,5
	.byte	'src',0,10,247,1,60
	.word	10295
	.byte	6,0,10
	.byte	'_Ifx_STM_CLC_Bits',0,13,123,16,4,11
	.byte	'DISR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,12,13,173,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10343
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ID_Bits',0,13,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	626
	.byte	16,0,2,35,2,0,12,13,205,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10499
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0_Bits',0,13,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,253,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10618
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM1_Bits',0,13,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,141,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10704
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM2_Bits',0,13,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,149,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10790
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM3_Bits',0,13,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,157,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10876
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM4_Bits',0,13,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,165,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10963
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM5_Bits',0,13,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,173,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11050
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM6_Bits',0,13,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,181,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11137
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAP_Bits',0,13,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,157,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11224
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CMP_Bits',0,13,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,189,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11312
	.byte	4,2,35,0,0,18,8
	.word	11355
	.byte	19,1,0,10
	.byte	'_Ifx_STM_CMCON_Bits',0,13,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	609
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	609
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	609
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	609
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	609
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	3,0,2,35,3,0,12,13,181,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11404
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ICR_Bits',0,13,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	434
	.byte	25,0,2,35,0,0,12,13,197,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11636
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ISCR_Bits',0,13,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,12,13,213,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11853
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,13,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,133,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12017
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAPSV_Bits',0,13,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,165,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12105
	.byte	4,2,35,0,0,18,144,1
	.word	609
	.byte	19,143,1,0,10
	.byte	'_Ifx_STM_OCS_Bits',0,13,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	434
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,12,13,245,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12206
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,13,198,1,16,4,11
	.byte	'CLR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	434
	.byte	31,0,2,35,0,0,12,13,237,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12388
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST1_Bits',0,13,191,1,16,4,11
	.byte	'RST',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	434
	.byte	31,0,2,35,0,0,12,13,229,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12494
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST0_Bits',0,13,183,1,16,4,11
	.byte	'RST',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,12,13,221,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12598
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,13,105,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,12,13,149,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12721
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,13,68,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,12,13,141,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12810
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM',0,13,198,3,25,128,2,13
	.byte	'CLC',0
	.word	10459
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	3201
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	10578
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3201
	.byte	4,2,35,12,13
	.byte	'TIM0',0
	.word	10664
	.byte	4,2,35,16,13
	.byte	'TIM1',0
	.word	10750
	.byte	4,2,35,20,13
	.byte	'TIM2',0
	.word	10836
	.byte	4,2,35,24,13
	.byte	'TIM3',0
	.word	10923
	.byte	4,2,35,28,13
	.byte	'TIM4',0
	.word	11010
	.byte	4,2,35,32,13
	.byte	'TIM5',0
	.word	11097
	.byte	4,2,35,36,13
	.byte	'TIM6',0
	.word	11184
	.byte	4,2,35,40,13
	.byte	'CAP',0
	.word	11272
	.byte	4,2,35,44,13
	.byte	'CMP',0
	.word	11395
	.byte	8,2,35,48,13
	.byte	'CMCON',0
	.word	11596
	.byte	4,2,35,56,13
	.byte	'ICR',0
	.word	11813
	.byte	4,2,35,60,13
	.byte	'ISCR',0
	.word	11977
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	5361
	.byte	12,2,35,68,13
	.byte	'TIM0SV',0
	.word	12065
	.byte	4,2,35,80,13
	.byte	'CAPSV',0
	.word	12155
	.byte	4,2,35,84,13
	.byte	'reserved_58',0
	.word	12195
	.byte	144,1,2,35,88,13
	.byte	'OCS',0
	.word	12348
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	12454
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	12558
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	12681
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	12770
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	13339
	.byte	4,3,35,252,1,0,14
	.word	13379
	.byte	3
	.word	13799
.L122:
	.byte	8
	.byte	'IfxStm_get',0,3,12,192,4,19
	.word	316
	.byte	1,1
.L124:
	.byte	5
	.byte	'stm',0,12,192,4,39
	.word	13804
.L126:
	.byte	6,0,8
	.byte	'IfxStm_getFrequency',0,3,12,209,4,20
	.word	230
	.byte	1,1,5
	.byte	'stm',0,12,209,4,49
	.word	13804
	.byte	17,6,6,0,0,8
	.byte	'IfxStm_getLower',0,3,12,220,4,19
	.word	1963
	.byte	1,1,5
	.byte	'stm',0,12,220,4,44
	.word	13804
	.byte	6,0
.L105:
	.byte	7
	.byte	'long long int',0,8,5
.L111:
	.byte	8
	.byte	'IfxStm_now',0,3,12,221,5,19
	.word	13940
	.byte	1,1
.L112:
	.byte	17,6,6,6,0,0
.L107:
	.byte	8
	.byte	'IfxStm_getDeadLine',0,3,12,234,5,19
	.word	13940
	.byte	1,1
.L108:
	.byte	5
	.byte	'timeout',0,12,234,5,45
	.word	13940
.L110:
	.byte	17,6,0,0
.L134:
	.byte	8
	.byte	'IfxStm_isDeadLine',0,3,12,251,5,20
	.word	609
	.byte	1,1
.L135:
	.byte	5
	.byte	'deadLine',0,12,251,5,45
	.word	13940
.L137:
	.byte	17,6,0,0
.L99:
	.byte	4
	.byte	'IfxStm_wait',0,3,12,140,6,17,1,1
.L102:
	.byte	5
	.byte	'timeout',0,12,140,6,36
	.word	13940
.L104:
	.byte	17,6,6,0,0,20
	.word	450
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	14132
	.byte	0,14
	.word	434
	.byte	3
	.word	434
	.byte	23
	.byte	'__cmpswapw',0
	.word	14174
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	14179
	.byte	24
	.byte	'value',0
	.word	434
	.byte	24
	.byte	'compare',0
	.word	434
	.byte	0,14
	.word	450
	.byte	23
	.byte	'__mfcr',0
	.word	14236
	.byte	1,1,1,1,22
	.word	450
	.byte	0,25
	.byte	'__nop',0,1,1,1,1,25
	.byte	'__disable',0,1,1,1,1,25
	.byte	'__enable',0,1,1,1,1,26
	.word	178
	.byte	27
	.word	204
	.byte	6,0,26
	.word	239
	.byte	27
	.word	271
	.byte	6,0,26
	.word	284
	.byte	6,0,26
	.word	353
	.byte	27
	.word	372
	.byte	6,0,26
	.word	388
	.byte	27
	.word	403
	.byte	27
	.word	417
	.byte	6,0,26
	.word	1218
	.byte	27
	.word	1258
	.byte	27
	.word	1276
	.byte	6,0,26
	.word	1296
	.byte	27
	.word	1339
	.byte	6,0,26
	.word	1359
	.byte	27
	.word	1397
	.byte	27
	.word	1415
	.byte	6,0,26
	.word	1435
	.byte	27
	.word	1476
	.byte	6,0,28
	.byte	'IfxScuWdt_clearCpuEndinit',0,3,237,1,17,1,1,1,1,5
	.byte	'password',0,3,237,1,50
	.word	626
	.byte	0,28
	.byte	'IfxScuWdt_setCpuEndinit',0,3,157,2,17,1,1,1,1,5
	.byte	'password',0,3,157,2,48
	.word	626
	.byte	0,26
	.word	1496
	.byte	27
	.word	1547
	.byte	6,0,26
	.word	1567
	.byte	6,0,29
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,3,215,3,19
	.word	626
	.byte	1,1,1,1,10
	.byte	'_Ifx_EBU_CLC_Bits',0,15,193,1,16,4,11
	.byte	'DISR',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'DISS',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	6,24,2,35,0,11
	.byte	'EPE',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'SYNC',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'DIV2',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EBUDIV',0,4
	.word	457
	.byte	2,12,2,35,0,11
	.byte	'SYNCACK',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'DIV2ACK',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EBUDIVACK',0,4
	.word	457
	.byte	2,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	8,0,2,35,0,0,12,15,247,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14592
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_MODCON_Bits',0,15,219,1,16,4,11
	.byte	'STS',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'LCKABRT',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'SDTRI',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'CLK_COMB',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EXTLOCK',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'ARBSYNC',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'ARBMODE',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'TIMEOUTC',0,4
	.word	457
	.byte	8,16,2,35,0,11
	.byte	'LOCKTIMEOUT',0,4
	.word	457
	.byte	8,8,2,35,0,11
	.byte	'FIFO_BYPASS',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'FAST_SRI',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'OCDS_SUSP_DIS',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	457
	.byte	3,2,2,35,0,11
	.byte	'BUSSTATE',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'ALE',0,4
	.word	457
	.byte	1,0,2,35,0,0
.L68:
	.byte	12,15,135,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14880
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_MODID_Bits',0,15,239,1,16,4,11
	.byte	'ID_VALUE',0,4
	.word	457
	.byte	32,0,2,35,0,0,12,15,143,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15245
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_USERCON_Bits',0,15,173,2,16,4,11
	.byte	'DIP',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'NAF',0,4
	.word	457
	.byte	7,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	8,16,2,35,0,11
	.byte	'ADDIO',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	8,4,2,35,0,11
	.byte	'BCEN',0,4
	.word	457
	.byte	2,2,2,35,0,11
	.byte	'ADVIO',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'ADDLSW',0,4
	.word	457
	.byte	1,0,2,35,0,0,12,15,183,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15332
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_EXTBOOT_Bits',0,15,210,1,16,4,11
	.byte	'CFGEND',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'CFGERR',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	29,1,2,35,0,11
	.byte	'EBUCFG',0,4
	.word	457
	.byte	1,0,2,35,0,0,12,15,255,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15544
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_ADDRSEL_Bits',0,15,111,16,4,11
	.byte	'REGENAB',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'ALTENAB',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'WPROT',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'GLOBALCS',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'MASK',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'ALTSEG',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'BASE',0,4
	.word	457
	.byte	20,0,2,35,0,0
.L62:
	.byte	12,15,207,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15689
	.byte	4,2,35,0,0,18,12
	.word	15842
	.byte	19,2,0,10
	.byte	'_Ifx_EBU_BUS_RCON_Bits',0,15,137,1,16,4,11
	.byte	'FETBLEN',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'FBBMSEL',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'FDBKEN',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'BFCMSEL',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'NAA',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	8,16,2,35,0,11
	.byte	'ECSE',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EBSE',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'DBA',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'WAITINV',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'BCGEN',0,4
	.word	457
	.byte	2,10,2,35,0,11
	.byte	'PORTW',0,4
	.word	457
	.byte	2,8,2,35,0,11
	.byte	'WAIT',0,4
	.word	457
	.byte	2,6,2,35,0,11
	.byte	'AAP',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'LCKABRT',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'AGEN',0,4
	.word	457
	.byte	4,0,2,35,0,0
.L75:
	.byte	12,15,223,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15891
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_BUS_RAP_Bits',0,15,123,16,4,11
	.byte	'RDDTACS',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'RDRECOVC',0,4
	.word	457
	.byte	3,25,2,35,0,11
	.byte	'WAITRDC',0,4
	.word	457
	.byte	5,20,2,35,0,11
	.byte	'DATAC',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'EXTCLOCK',0,4
	.word	457
	.byte	2,14,2,35,0,11
	.byte	'EXTDATA',0,4
	.word	457
	.byte	2,12,2,35,0,11
	.byte	'CMDDELAY',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'AHOLDC',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'ADDRC',0,4
	.word	457
	.byte	4,0,2,35,0,0
.L87:
	.byte	12,15,215,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16261
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_BUS_WCON_Bits',0,15,173,1,16,4,11
	.byte	'FETBLEN',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'FBBMSEL',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	3,25,2,35,0,11
	.byte	'NAA',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	8,16,2,35,0,11
	.byte	'ECSE',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EBSE',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'WAITINV',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'BCGEN',0,4
	.word	457
	.byte	2,10,2,35,0,11
	.byte	'PORTW',0,4
	.word	457
	.byte	2,8,2,35,0,11
	.byte	'WAIT',0,4
	.word	457
	.byte	2,6,2,35,0,11
	.byte	'AAP',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'LOCKCS',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'AGEN',0,4
	.word	457
	.byte	4,0,2,35,0,0
.L81:
	.byte	12,15,239,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16498
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_BUS_WAP_Bits',0,15,159,1,16,4,11
	.byte	'WRDTACS',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'WRRECOVC',0,4
	.word	457
	.byte	3,25,2,35,0,11
	.byte	'WAITWRC',0,4
	.word	457
	.byte	5,20,2,35,0,11
	.byte	'DATAC',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'EXTCLOCK',0,4
	.word	457
	.byte	2,14,2,35,0,11
	.byte	'EXTDATA',0,4
	.word	457
	.byte	2,12,2,35,0,11
	.byte	'CMDDELAY',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'AHOLDC',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'ADDRC',0,4
	.word	457
	.byte	4,0,2,35,0,0
.L93:
	.byte	12,15,231,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16838
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_BUS',0,15,200,3,25,16,13
	.byte	'RCON',0
	.word	16221
	.byte	4,2,35,0,13
	.byte	'RAP',0
	.word	16458
	.byte	4,2,35,4,13
	.byte	'WCON',0
	.word	16798
	.byte	4,2,35,8,13
	.byte	'WAP',0
	.word	17036
	.byte	4,2,35,12,0,18,48
	.word	17076
	.byte	19,2,0,14
	.word	17150
	.byte	18,16
	.word	609
	.byte	19,15,0,10
	.byte	'_Ifx_EBU_SDRMCON_Bits',0,15,245,1,16,4,11
	.byte	'CRAS',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'CRFSH',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'CRSC',0,4
	.word	457
	.byte	2,22,2,35,0,11
	.byte	'CRP',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'AWIDTH',0,4
	.word	457
	.byte	2,18,2,35,0,11
	.byte	'CRCD',0,4
	.word	457
	.byte	2,16,2,35,0,11
	.byte	'CRC',0,4
	.word	457
	.byte	6,10,2,35,0,11
	.byte	'BANKM',0,4
	.word	457
	.byte	3,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	3,4,2,35,0,11
	.byte	'CLKDIS',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'PWR_MODE',0,4
	.word	457
	.byte	2,1,2,35,0,11
	.byte	'SDCMSEL',0,4
	.word	457
	.byte	1,0,2,35,0,0
.L151:
	.byte	12,15,151,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17173
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_SDRMOD_Bits',0,15,134,2,16,4,11
	.byte	'BURSTL',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'BTYP',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'CASLAT',0,4
	.word	457
	.byte	3,25,2,35,0,11
	.byte	'OPMODE',0,4
	.word	457
	.byte	7,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'COLDSTART',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'XOPM',0,4
	.word	457
	.byte	14,2,2,35,0,11
	.byte	'XBA',0,4
	.word	457
	.byte	2,0,2,35,0,0
.L154:
	.byte	12,15,159,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17452
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_SDRMREF_Bits',0,15,147,2,16,4,11
	.byte	'REFRESHC',0,4
	.word	457
	.byte	6,26,2,35,0,11
	.byte	'REFRESHR',0,4
	.word	457
	.byte	3,23,2,35,0,11
	.byte	'SELFREXST',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'SELFREX',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'SELFRENST',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'SELFREN',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'AUTOSELFR',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'ERFSHC',0,4
	.word	457
	.byte	2,16,2,35,0,11
	.byte	'SELFREX_DLY',0,4
	.word	457
	.byte	8,8,2,35,0,11
	.byte	'ARFSH',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'RES_DLY',0,4
	.word	457
	.byte	3,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	4,0,2,35,0,0
.L157:
	.byte	12,15,167,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17665
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_SDRSTAT_Bits',0,15,164,2,16,4,11
	.byte	'REFERR',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'SDRMBUSY',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'SDERR',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	29,0,2,35,0,0,12,15,175,3,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17975
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_ACCEN0_Bits',0,15,68,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,12,15,191,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18121
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_EBU_ACCEN1_Bits',0,15,105,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	32,0,2,35,0,0,12,15,199,2,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18690
	.byte	4,2,35,0,0,18,200,254,3
	.word	609
	.byte	19,199,254,3,0,10
	.byte	'_Ifx_EBU',0,15,221,3,25,128,128,4,13
	.byte	'CLC',0
	.word	14840
	.byte	4,2,35,0,13
	.byte	'MODCON',0
	.word	15205
	.byte	4,2,35,4,13
	.byte	'MODID',0
	.word	15292
	.byte	4,2,35,8,13
	.byte	'USERCON',0
	.word	15504
	.byte	4,2,35,12,13
	.byte	'EXTBOOT',0
	.word	15649
	.byte	4,2,35,16,13
	.byte	'reserved_14',0
	.word	3201
	.byte	4,2,35,20,13
	.byte	'ADDRSEL',0
	.word	15882
	.byte	12,2,35,24,13
	.byte	'reserved_24',0
	.word	3201
	.byte	4,2,35,36,13
	.byte	'BUS',0
	.word	17159
	.byte	48,2,35,40,13
	.byte	'reserved_58',0
	.word	17164
	.byte	16,2,35,88,13
	.byte	'SDRMCON',0
	.word	17412
	.byte	4,2,35,104,13
	.byte	'SDRMOD',0
	.word	17625
	.byte	4,2,35,108,13
	.byte	'SDRMREF',0
	.word	17935
	.byte	4,2,35,112,13
	.byte	'SDRSTAT',0
	.word	18081
	.byte	4,2,35,116,13
	.byte	'reserved_78',0
	.word	8453
	.byte	56,2,35,120,13
	.byte	'ACCEN0',0
	.word	18650
	.byte	4,3,35,176,1,13
	.byte	'ACCEN1',0
	.word	18739
	.byte	4,3,35,180,1,13
	.byte	'reserved_B8',0
	.word	18779
	.byte	200,254,3,3,35,184,1,0,14
	.word	18792
.L46:
	.byte	3
	.word	19127
	.byte	15,14,73,9,1,16
	.byte	'IfxEbu_ExternalClockRatio_1',0,0,16
	.byte	'IfxEbu_ExternalClockRatio_2',0,1,16
	.byte	'IfxEbu_ExternalClockRatio_3',0,2,16
	.byte	'IfxEbu_ExternalClockRatio_4',0,3,16
	.byte	'IfxEbu_ExternalClockRatio_6',0,4,16
	.byte	'IfxEbu_ExternalClockRatio_8',0,5,0,28
	.byte	'IfxEbu_setExternalClockRatio',0,14,204,3,17,1,1,1,1,5
	.byte	'ebu',0,14,204,3,55
	.word	19132
	.byte	5
	.byte	'ratio',0,14,204,3,86
	.word	19137
	.byte	0,26
	.word	1794
	.byte	6,0,26
	.word	1828
	.byte	6,0,26
	.word	1870
	.byte	17,30
	.word	1828
	.byte	31
	.word	1868
	.byte	0,6,0,0,26
	.word	1911
	.byte	27
	.word	1944
	.byte	6,0,26
	.word	1984
	.byte	27
	.word	2025
	.byte	6,0,26
	.word	2044
	.byte	27
	.word	2099
	.byte	6,0,26
	.word	2118
	.byte	27
	.word	2158
	.byte	27
	.word	2175
	.byte	17,6,0,0,26
	.word	9799
	.byte	27
	.word	9827
	.byte	27
	.word	9841
	.byte	27
	.word	9859
	.byte	6,0,15,7,101,9,1,16
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,16
	.byte	'IfxPort_Mode_inputPullDown',0,8,16
	.byte	'IfxPort_Mode_inputPullUp',0,16,16
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,16
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,28
	.byte	'IfxPort_setPinMode',0,7,183,3,17,1,1,1,1,5
	.byte	'port',0,7,183,3,43
	.word	9691
	.byte	5
	.byte	'pinIndex',0,7,183,3,55
	.word	609
	.byte	5
	.byte	'mode',0,7,183,3,78
	.word	19501
	.byte	0,26
	.word	9877
	.byte	27
	.word	9900
	.byte	17,30
	.word	9921
	.byte	31
	.word	9959
	.byte	0,6,0,0,26
	.word	9921
	.byte	6,0,26
	.word	10300
	.byte	27
	.word	10328
	.byte	6,0,26
	.word	13809
	.byte	27
	.word	13832
	.byte	6,0,26
	.word	13847
	.byte	27
	.word	13879
	.byte	17,17,30
	.word	9921
	.byte	31
	.word	9959
	.byte	0,0,6,0,0,26
	.word	13897
	.byte	27
	.word	13925
	.byte	6,0,26
	.word	13957
	.byte	17,30
	.word	1911
	.byte	27
	.word	1944
	.byte	31
	.word	1961
	.byte	0,6,30
	.word	1870
	.byte	32
	.word	1907
	.byte	30
	.word	1828
	.byte	31
	.word	1868
	.byte	0,31
	.word	1908
	.byte	0,0,6,30
	.word	13809
	.byte	27
	.word	13832
	.byte	31
	.word	13845
	.byte	0,6,0,0,26
	.word	13986
	.byte	27
	.word	14017
	.byte	17,30
	.word	13957
	.byte	32
	.word	13980
	.byte	30
	.word	1911
	.byte	27
	.word	1944
	.byte	31
	.word	1961
	.byte	0,31
	.word	13981
	.byte	30
	.word	1870
	.byte	32
	.word	1907
	.byte	30
	.word	1828
	.byte	31
	.word	1868
	.byte	0,31
	.word	1908
	.byte	0,0,31
	.word	13982
	.byte	30
	.word	13809
	.byte	27
	.word	13832
	.byte	31
	.word	13845
	.byte	0,31
	.word	13983
	.byte	0,0,6,0,0,26
	.word	14038
	.byte	27
	.word	14068
	.byte	17,30
	.word	13957
	.byte	32
	.word	13980
	.byte	30
	.word	1911
	.byte	27
	.word	1944
	.byte	31
	.word	1961
	.byte	0,31
	.word	13981
	.byte	30
	.word	1870
	.byte	32
	.word	1907
	.byte	30
	.word	1828
	.byte	31
	.word	1868
	.byte	0,31
	.word	1908
	.byte	0,0,31
	.word	13982
	.byte	30
	.word	13809
	.byte	27
	.word	13832
	.byte	31
	.word	13845
	.byte	0,31
	.word	13983
	.byte	0,0,6,0,0,26
	.word	14090
	.byte	27
	.word	14110
	.byte	17,30
	.word	13986
	.byte	27
	.word	14017
	.byte	32
	.word	14034
	.byte	30
	.word	13957
	.byte	32
	.word	13980
	.byte	30
	.word	1911
	.byte	27
	.word	1944
	.byte	31
	.word	1961
	.byte	0,31
	.word	13981
	.byte	30
	.word	1870
	.byte	32
	.word	1907
	.byte	30
	.word	1828
	.byte	31
	.word	1868
	.byte	0,31
	.word	1908
	.byte	0,0,31
	.word	13982
	.byte	30
	.word	13809
	.byte	27
	.word	13832
	.byte	31
	.word	13845
	.byte	0,31
	.word	13983
	.byte	0,0,31
	.word	14035
	.byte	0,0,6,30
	.word	14038
	.byte	27
	.word	14068
	.byte	32
	.word	14086
	.byte	30
	.word	13957
	.byte	32
	.word	13980
	.byte	30
	.word	1911
	.byte	27
	.word	1944
	.byte	31
	.word	1961
	.byte	0,31
	.word	13981
	.byte	30
	.word	1870
	.byte	32
	.word	1907
	.byte	30
	.word	1828
	.byte	31
	.word	1868
	.byte	0,31
	.word	1908
	.byte	0,0,31
	.word	13982
	.byte	30
	.word	13809
	.byte	27
	.word	13832
	.byte	31
	.word	13845
	.byte	0,31
	.word	13983
	.byte	0,0,31
	.word	14087
	.byte	0,0,6,0,0,15,14,66,9,1,16
	.byte	'IfxEbu_ChipSelect_0',0,0,16
	.byte	'IfxEbu_ChipSelect_1',0,1,16
	.byte	'IfxEbu_ChipSelect_2',0,2,0,33,16,142,1,9,12,13
	.byte	'ebu',0
	.word	19132
	.byte	4,2,35,0,13
	.byte	'chipSelect',0
	.word	20846
	.byte	1,2,35,4,13
	.byte	'baseAddress',0
	.word	1963
	.byte	4,2,35,6,0
.L42:
	.byte	3
	.word	20918
	.byte	15,14,157,1,9,1,16
	.byte	'IfxEbu_DeviceType_muxedAsynchronousType',0,0,16
	.byte	'IfxEbu_DeviceType_muxedBurstType',0,1,16
	.byte	'IfxEbu_DeviceType_nandFlash',0,2,16
	.byte	'IfxEbu_DeviceType_muxedCellularRam',0,3,16
	.byte	'IfxEbu_DeviceType_demuxedAsynchronousType',0,4,16
	.byte	'IfxEbu_DeviceType_demuxedBurstType',0,5,16
	.byte	'IfxEbu_DeviceType_demuxedPageMode',0,6,16
	.byte	'IfxEbu_DeviceType_demuxedCellularRam',0,7,16
	.byte	'IfxEbu_DeviceType_sdram',0,8,0,15,14,185,2,9,1,16
	.byte	'IfxEbu_WaitControl_off',0,0,16
	.byte	'IfxEbu_WaitControl_asynchronous',0,1,16
	.byte	'IfxEbu_WaitControl_synchronous',0,2,0,15,14,202,1,9,1,16
	.byte	'IfxEbu_ExternalDeviceInterface_8bitMultiplexed',0,0,16
	.byte	'IfxEbu_ExternalDeviceInterface_16bitMultiplexed',0,1,16
	.byte	'IfxEbu_ExternalDeviceInterface_twin16bitMultiplexed',0,2,16
	.byte	'IfxEbu_ExternalDeviceInterface_32bitMultiplexed',0,3,0,15,14,177,2,9,1,16
	.byte	'IfxEbu_SynchronousBurstLength_1',0,0,16
	.byte	'IfxEbu_SynchronousBurstLength_2',0,1,16
	.byte	'IfxEbu_SynchronousBurstLength_4',0,2,16
	.byte	'IfxEbu_SynchronousBurstLength_8',0,3,0,33,14,230,2,9,12,13
	.byte	'deviceType',0
	.word	20984
	.byte	1,2,35,0,13
	.byte	'waitControl',0
	.word	21317
	.byte	1,2,35,1,13
	.byte	'deviceInterface',0
	.word	21416
	.byte	1,2,35,2,13
	.byte	'byteControl',0
	.word	609
	.byte	1,2,35,3,13
	.byte	'polarityWait',0
	.word	609
	.byte	1,2,35,4,13
	.byte	'earlyBurst',0
	.word	609
	.byte	1,2,35,5,13
	.byte	'earlyChipSelect',0
	.word	609
	.byte	1,2,35,6,13
	.byte	'burstFlashClockMode',0
	.word	609
	.byte	1,2,35,7,13
	.byte	'burstFlashClockFeedback',0
	.word	609
	.byte	1,2,35,8,13
	.byte	'synchronousBurstBuffer',0
	.word	609
	.byte	1,2,35,9,13
	.byte	'burstLength',0
	.word	21626
	.byte	1,2,35,10,0,33,14,168,3,9,12,13
	.byte	'deviceType',0
	.word	20984
	.byte	1,2,35,0,13
	.byte	'waitControl',0
	.word	21317
	.byte	1,2,35,1,13
	.byte	'deviceInterface',0
	.word	21416
	.byte	1,2,35,2,13
	.byte	'byteControl',0
	.word	609
	.byte	1,2,35,3,13
	.byte	'polarityWait',0
	.word	609
	.byte	1,2,35,4,13
	.byte	'earlyBurst',0
	.word	609
	.byte	1,2,35,5,13
	.byte	'earlyChipSelect',0
	.word	609
	.byte	1,2,35,6,13
	.byte	'synchronousBurstBuffer',0
	.word	609
	.byte	1,2,35,7,13
	.byte	'burstLength',0
	.word	21626
	.byte	1,2,35,8,0,15,14,170,1,9,1,16
	.byte	'IfxEbu_ExtendedData_0',0,0,16
	.byte	'IfxEbu_ExtendedData_1',0,1,16
	.byte	'IfxEbu_ExtendedData_2',0,2,16
	.byte	'IfxEbu_ExtendedData_3',0,3,0,33,14,217,2,9,12,13
	.byte	'addressCycle',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'addressHold',0
	.word	609
	.byte	1,2,35,1,13
	.byte	'commandDelay',0
	.word	609
	.byte	1,2,35,2,13
	.byte	'extendedData',0
	.word	22259
	.byte	1,2,35,3,13
	.byte	'externalClock',0
	.word	609
	.byte	1,2,35,4,13
	.byte	'dataHold',0
	.word	609
	.byte	1,2,35,5,13
	.byte	'waitState',0
	.word	609
	.byte	1,2,35,6,13
	.byte	'recoveryAccess',0
	.word	609
	.byte	1,2,35,7,13
	.byte	'recoveryRegion',0
	.word	609
	.byte	1,2,35,8,0,33,14,155,3,9,12,13
	.byte	'addressCycle',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'addressHold',0
	.word	609
	.byte	1,2,35,1,13
	.byte	'commandDelay',0
	.word	609
	.byte	1,2,35,2,13
	.byte	'extendedData',0
	.word	22259
	.byte	1,2,35,3,13
	.byte	'externalClock',0
	.word	609
	.byte	1,2,35,4,13
	.byte	'dataHold',0
	.word	609
	.byte	1,2,35,5,13
	.byte	'waitState',0
	.word	609
	.byte	1,2,35,6,13
	.byte	'recoveryAccess',0
	.word	609
	.byte	1,2,35,7,13
	.byte	'recoveryRegion',0
	.word	609
	.byte	1,2,35,8,0,15,16,120,9,1,16
	.byte	'IfxEbu_Dram_SDRAMDevice_64Mx16bit',0,0,16
	.byte	'IfxEbu_Dram_SDRAMDevice_32Mx16bit',0,1,16
	.byte	'IfxEbu_Dram_SDRAMDevice_16Mx16',0,2,16
	.byte	'IfxEbu_Dram_SDRAMDevice_8Mx16',0,3,16
	.byte	'IfxEbu_Dram_SDRAMDevice_4Mx16',0,4,16
	.byte	'IfxEbu_Dram_SDRAMDevice_1Mx16',0,5,16
	.byte	'IfxEbu_Dram_SDRAMDevice_32Mx32',0,6,16
	.byte	'IfxEbu_Dram_SDRAMDevice_16Mx32',0,7,16
	.byte	'IfxEbu_Dram_SDRAMDevice_8Mx32',0,8,16
	.byte	'IfxEbu_Dram_SDRAMDevice_4Mx32',0,9,0,15,14,178,1,9,1,16
	.byte	'IfxEbu_ExtendedOperationBankSelect_0',0,0,16
	.byte	'IfxEbu_ExtendedOperationBankSelect_1',0,1,16
	.byte	'IfxEbu_ExtendedOperationBankSelect_2',0,2,16
	.byte	'IfxEbu_ExtendedOperationBankSelect_3',0,3,0,15,14,118,9,1,16
	.byte	'IfxEbu_CASLatency_Latency2',0,2,16
	.byte	'IfxEbu_CASLatency_Latency3',0,3,0,15,14,162,2,9,1,16
	.byte	'IfxEbu_SDRAMBurstLength_1',0,0,16
	.byte	'IfxEbu_SDRAMBurstLength_2',0,1,16
	.byte	'IfxEbu_SDRAMBurstLength_4',0,2,16
	.byte	'IfxEbu_SDRAMBurstLength_8',0,3,16
	.byte	'IfxEbu_SDRAMBurstLength_16',0,4,0,33,14,132,3,9,8,13
	.byte	'extendedBankSelect',0
	.word	23103
	.byte	1,2,35,0,13
	.byte	'extendedOperationMode',0
	.word	626
	.byte	2,2,35,2,13
	.byte	'coldStart',0
	.word	609
	.byte	1,2,35,4,13
	.byte	'casLatency',0
	.word	23266
	.byte	1,2,35,5,13
	.byte	'burstLength',0
	.word	23330
	.byte	1,2,35,6,13
	.byte	'opmode',0
	.word	609
	.byte	1,2,35,7,0,15,14,145,1,9,1,16
	.byte	'IfxEbu_DelayOnPowerDownExit_0',0,0,16
	.byte	'IfxEbu_DelayOnPowerDownExit_1',0,1,16
	.byte	'IfxEbu_DelayOnPowerDownExit_2',0,2,16
	.byte	'IfxEbu_DelayOnPowerDownExit_3',0,3,16
	.byte	'IfxEbu_DelayOnPowerDownExit_4',0,4,16
	.byte	'IfxEbu_DelayOnPowerDownExit_5',0,5,16
	.byte	'IfxEbu_DelayOnPowerDownExit_6',0,6,16
	.byte	'IfxEbu_DelayOnPowerDownExit_7',0,7,0,15,14,186,1,9,1,16
	.byte	'IfxEbu_ExtendedRefresh_0',0,0,16
	.byte	'IfxEbu_ExtendedRefresh_1',0,1,16
	.byte	'IfxEbu_ExtendedRefresh_2',0,2,16
	.byte	'IfxEbu_ExtendedRefresh_3',0,3,0,15,14,134,2,9,1,16
	.byte	'IfxEbu_RefreshCommands_0',0,0,16
	.byte	'IfxEbu_RefreshCommands_1',0,1,16
	.byte	'IfxEbu_RefreshCommands_2',0,2,16
	.byte	'IfxEbu_RefreshCommands_3',0,3,16
	.byte	'IfxEbu_RefreshCommands_4',0,4,16
	.byte	'IfxEbu_RefreshCommands_5',0,5,16
	.byte	'IfxEbu_RefreshCommands_6',0,6,16
	.byte	'IfxEbu_RefreshCommands_7',0,7,0,33,14,142,3,9,12,13
	.byte	'delayOnPowerDownExit',0
	.word	23620
	.byte	1,2,35,0,13
	.byte	'autoRefresh',0
	.word	609
	.byte	1,2,35,1,13
	.byte	'selfRefreshExitDelay',0
	.word	609
	.byte	1,2,35,2,13
	.byte	'extendedRefresh',0
	.word	23883
	.byte	1,2,35,3,13
	.byte	'automaticSelfRefresh',0
	.word	609
	.byte	1,2,35,4,13
	.byte	'selfRefreshEntry',0
	.word	609
	.byte	1,2,35,5,13
	.byte	'selfRefreshExit',0
	.word	609
	.byte	1,2,35,6,13
	.byte	'refreshCommands',0
	.word	23998
	.byte	1,2,35,7,13
	.byte	'refreshPeriod',0
	.word	609
	.byte	1,2,35,8,0,15,14,246,1,9,1,16
	.byte	'IfxEbu_ModeRegisterSetupTime_0',0,0,16
	.byte	'IfxEbu_ModeRegisterSetupTime_1',0,1,16
	.byte	'IfxEbu_ModeRegisterSetupTime_2',0,2,16
	.byte	'IfxEbu_ModeRegisterSetupTime_3',0,3,0,15,14,146,2,9,1,16
	.byte	'IfxEbu_RowPrechargeTime_0',0,0,16
	.byte	'IfxEbu_RowPrechargeTime_1',0,1,16
	.byte	'IfxEbu_RowPrechargeTime_2',0,2,16
	.byte	'IfxEbu_RowPrechargeTime_3',0,3,0,15,14,138,1,9,1,16
	.byte	'IfxEbu_ColumnAddressWidth_1',0,1,16
	.byte	'IfxEbu_ColumnAddressWidth_2',0,2,16
	.byte	'IfxEbu_ColumnAddressWidth_3',0,3,0,15,14,154,2,9,1,16
	.byte	'IfxEbu_RowToColumnDelay_0',0,0,16
	.byte	'IfxEbu_RowToColumnDelay_1',0,1,16
	.byte	'IfxEbu_RowToColumnDelay_2',0,2,16
	.byte	'IfxEbu_RowToColumnDelay_3',0,3,0,15,14,216,1,9,1,16
	.byte	'IfxEbu_MaskForBankTag_1',0,1,16
	.byte	'IfxEbu_MaskForBankTag_2',0,2,16
	.byte	'IfxEbu_MaskForBankTag_3',0,3,16
	.byte	'IfxEbu_MaskForBankTag_4',0,4,16
	.byte	'IfxEbu_MaskForBankTag_5',0,5,16
	.byte	'IfxEbu_MaskForBankTag_6',0,6,0,15,14,254,1,9,1,16
	.byte	'IfxEbu_PowerSaveMode_0',0,0,16
	.byte	'IfxEbu_PowerSaveMode_1',0,1,16
	.byte	'IfxEbu_PowerSaveMode_2',0,2,16
	.byte	'IfxEbu_PowerSaveMode_3',0,3,0,33,14,245,2,9,12,13
	.byte	'rowToPrechargeDelay',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'initializationRefreshCommand',0
	.word	609
	.byte	1,2,35,1,13
	.byte	'modeRegSetupTime',0
	.word	24463
	.byte	1,2,35,2,13
	.byte	'rowPrechargeTime',0
	.word	24602
	.byte	1,2,35,3,13
	.byte	'columnAddressWidth',0
	.word	24721
	.byte	1,2,35,4,13
	.byte	'rowToColumnDelay',0
	.word	24818
	.byte	1,2,35,5,13
	.byte	'refreshCycleTime',0
	.word	609
	.byte	1,2,35,6,13
	.byte	'maskForBankTag',0
	.word	24937
	.byte	1,2,35,7,13
	.byte	'disableClockOutput',0
	.word	609
	.byte	1,2,35,8,13
	.byte	'powerSaveMode',0
	.word	25100
	.byte	1,2,35,9,13
	.byte	'clockModeSelect',0
	.word	609
	.byte	1,2,35,10,0,15,14,226,1,9,1,16
	.byte	'IfxEbu_MemoryRegionMask_0',0,0,16
	.byte	'IfxEbu_MemoryRegionMask_1',0,1,16
	.byte	'IfxEbu_MemoryRegionMask_2',0,2,16
	.byte	'IfxEbu_MemoryRegionMask_3',0,3,16
	.byte	'IfxEbu_MemoryRegionMask_4',0,4,16
	.byte	'IfxEbu_MemoryRegionMask_5',0,5,16
	.byte	'IfxEbu_MemoryRegionMask_6',0,6,16
	.byte	'IfxEbu_MemoryRegionMask_7',0,7,16
	.byte	'IfxEbu_MemoryRegionMask_8',0,8,16
	.byte	'IfxEbu_MemoryRegionMask_9',0,9,16
	.byte	'IfxEbu_MemoryRegionMask_10',0,10,16
	.byte	'IfxEbu_MemoryRegionMask_11',0,11,16
	.byte	'IfxEbu_MemoryRegionMask_12',0,12,16
	.byte	'IfxEbu_MemoryRegionMask_13',0,13,16
	.byte	'IfxEbu_MemoryRegionMask_14',0,14,16
	.byte	'IfxEbu_MemoryRegionMask_15',0,15,0,33,14,196,2,9,12,13
	.byte	'regionEnabled',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'alternateSegmentEnabled',0
	.word	609
	.byte	1,2,35,1,13
	.byte	'writeProtection',0
	.word	609
	.byte	1,2,35,2,13
	.byte	'combinedChipSelect',0
	.word	609
	.byte	1,2,35,3,13
	.byte	'addressMask',0
	.word	25513
	.byte	1,2,35,4,13
	.byte	'alternateSegment',0
	.word	609
	.byte	1,2,35,5,13
	.byte	'baseAddress',0
	.word	1963
	.byte	4,2,35,6,0,15,14,194,1,9,1,16
	.byte	'IfxEbu_ExternalBusMode_noBus',0,0,16
	.byte	'IfxEbu_ExternalBusMode_arbiter',0,1,16
	.byte	'IfxEbu_ExternalBusMode_participant',0,2,16
	.byte	'IfxEbu_ExternalBusMode_soleMaster',0,3,0,15,14,91,9,1,16
	.byte	'IfxEbu_ArbitrationSignalSynchronization_synchronous',0,0,16
	.byte	'IfxEbu_ArbitrationSignalSynchronization_asynchronous',0,1,0,33,14,207,2,9,6,13
	.byte	'aleMode',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'arbMode',0
	.word	26158
	.byte	1,2,35,1,13
	.byte	'arbSignalSynchronization',0
	.word	26302
	.byte	1,2,35,2,13
	.byte	'sdramTri',0
	.word	609
	.byte	1,2,35,3,13
	.byte	'lockTimeout',0
	.word	609
	.byte	1,2,35,4,13
	.byte	'clockComb',0
	.word	609
	.byte	1,2,35,5,0,33,16,149,1,9,160,1,13
	.byte	'module',0
	.word	19132
	.byte	4,2,35,0,13
	.byte	'chipSelect',0
	.word	20846
	.byte	1,2,35,4,13
	.byte	'syncReadConfig',0
	.word	21769
	.byte	12,2,35,8,13
	.byte	'syncWriteConfig',0
	.word	22045
	.byte	12,2,35,20,13
	.byte	'asyncReadConfig',0
	.word	21769
	.byte	12,2,35,32,13
	.byte	'asyncWriteConfig',0
	.word	22045
	.byte	12,2,35,44,13
	.byte	'syncReadAccessParameter',0
	.word	22362
	.byte	12,2,35,56,13
	.byte	'syncWriteAccessParameter',0
	.word	22564
	.byte	12,2,35,68,13
	.byte	'asyncReadAccessParameter',0
	.word	22362
	.byte	12,2,35,80,13
	.byte	'asyncWriteAccessParameter',0
	.word	22564
	.byte	12,2,35,92,13
	.byte	'sdramDevice',0
	.word	22766
	.byte	1,2,35,104,13
	.byte	'sdramModConfig',0
	.word	23478
	.byte	8,2,35,108,13
	.byte	'sdramRefreshConfig',0
	.word	24221
	.byte	12,2,35,116,13
	.byte	'sdramControlConfig',0
	.word	25207
	.byte	12,3,35,128,1,13
	.byte	'memoryRegionConfig',0
	.word	25974
	.byte	12,3,35,140,1,13
	.byte	'externalClockRatio',0
	.word	19137
	.byte	1,3,35,152,1,13
	.byte	'moduleConfig',0
	.word	26417
	.byte	6,3,35,154,1,0,20
	.word	26550
.L44:
	.byte	3
	.word	27013
	.byte	18,2
	.word	609
	.byte	19,1,0,18,20
	.word	27023
	.byte	19,9,0
.L52:
	.byte	20
	.word	27032
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,17,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	457
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	8,0,2,35,0,0
.L120:
	.byte	12,17,204,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27046
	.byte	4,2,35,0,0
.L160:
	.byte	3
	.word	26550
	.byte	7
	.byte	'short int',0,2,5,34
	.byte	'__wchar_t',0,18,1,1
	.word	27207
	.byte	34
	.byte	'__size_t',0,18,1,1
	.word	434
	.byte	34
	.byte	'__ptrdiff_t',0,18,1,1
	.word	450
	.byte	35,1,3
	.word	27275
	.byte	34
	.byte	'__codeptr',0,18,1,1
	.word	27277
	.byte	34
	.byte	'boolean',0,19,104,29
	.word	609
	.byte	34
	.byte	'uint8',0,19,108,29
	.word	609
	.byte	34
	.byte	'uint16',0,19,112,29
	.word	626
	.byte	34
	.byte	'uint32',0,19,116,29
	.word	1963
	.byte	34
	.byte	'uint64',0,19,121,29
	.word	316
	.byte	34
	.byte	'sint16',0,19,129,1,29
	.word	27207
	.byte	7
	.byte	'long int',0,4,5,34
	.byte	'sint32',0,19,134,1,29
	.word	27391
	.byte	34
	.byte	'sint64',0,19,141,1,29
	.word	13940
	.byte	34
	.byte	'float32',0,19,170,1,29
	.word	230
	.byte	34
	.byte	'pvoid',0,20,54,28
	.word	348
	.byte	34
	.byte	'Ifx_TickTime',0,20,76,28
	.word	13940
	.byte	34
	.byte	'Ifx_Priority',0,20,100,16
	.word	626
	.byte	15,20,127,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,34
	.byte	'Ifx_RxSel',0,20,137,1,3
	.word	27508
	.byte	34
	.byte	'Ifx_UReg_8Bit',0,21,96,24
	.word	609
	.byte	34
	.byte	'Ifx_UReg_32Bit',0,21,98,24
	.word	434
	.byte	34
	.byte	'Ifx_SReg_32Bit',0,21,101,24
	.word	450
	.byte	34
	.byte	'Ifx_EBU_ACCEN0_Bits',0,15,102,3
	.word	18121
	.byte	34
	.byte	'Ifx_EBU_ACCEN1_Bits',0,15,108,3
	.word	18690
	.byte	34
	.byte	'Ifx_EBU_ADDRSEL_Bits',0,15,120,3
	.word	15689
	.byte	34
	.byte	'Ifx_EBU_BUS_RAP_Bits',0,15,134,1,3
	.word	16261
	.byte	34
	.byte	'Ifx_EBU_BUS_RCON_Bits',0,15,156,1,3
	.word	15891
	.byte	34
	.byte	'Ifx_EBU_BUS_WAP_Bits',0,15,170,1,3
	.word	16838
	.byte	34
	.byte	'Ifx_EBU_BUS_WCON_Bits',0,15,190,1,3
	.word	16498
	.byte	34
	.byte	'Ifx_EBU_CLC_Bits',0,15,207,1,3
	.word	14592
	.byte	34
	.byte	'Ifx_EBU_EXTBOOT_Bits',0,15,216,1,3
	.word	15544
	.byte	34
	.byte	'Ifx_EBU_MODCON_Bits',0,15,236,1,3
	.word	14880
	.byte	34
	.byte	'Ifx_EBU_MODID_Bits',0,15,242,1,3
	.word	15245
	.byte	34
	.byte	'Ifx_EBU_SDRMCON_Bits',0,15,131,2,3
	.word	17173
	.byte	34
	.byte	'Ifx_EBU_SDRMOD_Bits',0,15,144,2,3
	.word	17452
	.byte	34
	.byte	'Ifx_EBU_SDRMREF_Bits',0,15,161,2,3
	.word	17665
	.byte	34
	.byte	'Ifx_EBU_SDRSTAT_Bits',0,15,170,2,3
	.word	17975
	.byte	34
	.byte	'Ifx_EBU_USERCON_Bits',0,15,183,2,3
	.word	15332
	.byte	34
	.byte	'Ifx_EBU_ACCEN0',0,15,196,2,3
	.word	18650
	.byte	34
	.byte	'Ifx_EBU_ACCEN1',0,15,204,2,3
	.word	18739
	.byte	34
	.byte	'Ifx_EBU_ADDRSEL',0,15,212,2,3
	.word	15842
	.byte	34
	.byte	'Ifx_EBU_BUS_RAP',0,15,220,2,3
	.word	16458
	.byte	34
	.byte	'Ifx_EBU_BUS_RCON',0,15,228,2,3
	.word	16221
	.byte	34
	.byte	'Ifx_EBU_BUS_WAP',0,15,236,2,3
	.word	17036
	.byte	34
	.byte	'Ifx_EBU_BUS_WCON',0,15,244,2,3
	.word	16798
	.byte	34
	.byte	'Ifx_EBU_CLC',0,15,252,2,3
	.word	14840
	.byte	34
	.byte	'Ifx_EBU_EXTBOOT',0,15,132,3,3
	.word	15649
	.byte	34
	.byte	'Ifx_EBU_MODCON',0,15,140,3,3
	.word	15205
	.byte	34
	.byte	'Ifx_EBU_MODID',0,15,148,3,3
	.word	15292
	.byte	34
	.byte	'Ifx_EBU_SDRMCON',0,15,156,3,3
	.word	17412
	.byte	34
	.byte	'Ifx_EBU_SDRMOD',0,15,164,3,3
	.word	17625
	.byte	34
	.byte	'Ifx_EBU_SDRMREF',0,15,172,3,3
	.word	17935
	.byte	34
	.byte	'Ifx_EBU_SDRSTAT',0,15,180,3,3
	.word	18081
	.byte	34
	.byte	'Ifx_EBU_USERCON',0,15,188,3,3
	.word	15504
	.byte	14
	.word	17076
	.byte	34
	.byte	'Ifx_EBU_BUS',0,15,206,3,3
	.word	28574
	.byte	14
	.word	18792
	.byte	34
	.byte	'Ifx_EBU',0,15,241,3,3
	.word	28600
	.byte	15,22,162,11,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,34
	.byte	'IfxScu_WDTCON1_IR',0,22,167,11,3
	.word	28622
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,4,68,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_ACCEN00_Bits',0,4,102,3
	.word	28744
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,4,105,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SCU_ACCEN01_Bits',0,4,108,3
	.word	29303
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,4,111,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_ACCEN10_Bits',0,4,145,1,3
	.word	29382
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,4,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SCU_ACCEN11_Bits',0,4,151,1,3
	.word	29942
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,164,1,3
	.word	30023
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	609
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	609
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	609
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	609
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	609
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,181,1,3
	.word	30240
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	609
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	609
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	609
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,199,1,3
	.word	30513
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,4,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON10_Bits',0,4,206,1,3
	.word	30839
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,4,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON11_Bits',0,4,213,1,3
	.word	30941
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	434
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,228,1,3
	.word	31043
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	609
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	434
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,248,1,3
	.word	31317
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	434
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,132,2,3
	.word	31686
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,143,2,3
	.word	31866
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,150,2,3
	.word	32035
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,157,2,3
	.word	32135
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,4,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON8_Bits',0,4,164,2,3
	.word	32235
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,4,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON9_Bits',0,4,171,2,3
	.word	32335
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	609
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	609
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	609
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,185,2,3
	.word	32435
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,4,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	626
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,4,200,2,3
	.word	32638
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,4,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,34
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,4,207,2,3
	.word	32870
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,4,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	457
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_SCU_EICON0_Bits',0,4,216,2,3
	.word	32972
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,4,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,34
	.byte	'Ifx_SCU_EICON1_Bits',0,4,228,2,3
	.word	33100
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	609
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	609
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	434
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	609
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	609
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_EICR_Bits',0,4,250,2,3
	.word	33289
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,4,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	609
	.byte	4,0,2,35,3,0,34
	.byte	'Ifx_SCU_EIFILT_Bits',0,4,147,3,3
	.word	33653
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_SCU_EIFR_Bits',0,4,161,3,3
	.word	34092
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,4,164,3,16,4,11
	.byte	'AE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_EISR_Bits',0,4,174,3,3
	.word	34303
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,177,3,16,4,11
	.byte	'POL',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	626
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	626
	.byte	14,0,2,35,2,0,34
	.byte	'Ifx_SCU_EMSR_Bits',0,4,187,3,3
	.word	34479
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,4,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	609
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	609
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,34
	.byte	'Ifx_SCU_EMSSW_Bits',0,4,196,3,3
	.word	34673
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	626
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	434
	.byte	23,0,2,35,0,0,34
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,204,3,3
	.word	34808
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,207,3,16,4,11
	.byte	'ARI',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,34
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,212,3,3
	.word	34944
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,215,3,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	609
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	609
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	609
	.byte	8,0,2,35,3,0,34
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,226,3,3
	.word	35055
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,229,3,16,4,11
	.byte	'STEP',0,2
	.word	626
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	626
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_FDR_Bits',0,4,237,3,3
	.word	35273
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,240,3,16,4,11
	.byte	'FS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	8,0,2,35,3,0,34
	.byte	'Ifx_SCU_FMR_Bits',0,4,132,4,3
	.word	35436
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_ID_Bits',0,4,140,4,3
	.word	35772
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	609
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	609
	.byte	2,0,2,35,3,0,34
	.byte	'Ifx_SCU_IGCR_Bits',0,4,167,4,3
	.word	35879
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,170,4,16,4,11
	.byte	'P0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,34
	.byte	'Ifx_SCU_IN_Bits',0,4,175,4,3
	.word	36331
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_IOCR_Bits',0,4,185,4,3
	.word	36430
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	434
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,198,4,3
	.word	36580
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,201,4,16,4,11
	.byte	'SEED',0,4
	.word	434
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	609
	.byte	4,0,2,35,3,0,34
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,208,4,3
	.word	36818
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	626
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,34
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,215,4,3
	.word	36979
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,4,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,4,221,4,3
	.word	37085
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,4,224,4,16,4,11
	.byte	'LS2',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	626
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	626
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_LCLCON0_Bits',0,4,232,4,3
	.word	37171
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,4,235,4,16,4,11
	.byte	'LS3',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	626
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	626
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_LCLCON1_Bits',0,4,243,4,3
	.word	37339
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	626
	.byte	10,0,2,35,2,0,34
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,134,5,3
	.word	37507
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	609
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	626
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_MANID_Bits',0,4,142,5,3
	.word	37821
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,145,5,16,4,11
	.byte	'PS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	626
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	626
	.byte	14,0,2,35,2,0,34
	.byte	'Ifx_SCU_OMR_Bits',0,4,153,5,3
	.word	37932
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	609
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	609
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	609
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,34
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,177,5,3
	.word	38090
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,180,5,16,4,11
	.byte	'P0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,34
	.byte	'Ifx_SCU_OUT_Bits',0,4,185,5,3
	.word	38501
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	6,0,2,35,3,0,34
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,204,5,3
	.word	38602
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,34
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,216,5,3
	.word	38920
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,34
	.byte	'Ifx_SCU_PDISC_Bits',0,4,224,5,3
	.word	39107
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,227,5,16,4,11
	.byte	'PD0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_SCU_PDR_Bits',0,4,234,5,3
	.word	39218
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_SCU_PDRR_Bits',0,4,248,5,3
	.word	39351
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,4,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	626
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	5,0,2,35,3,0,34
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,4,134,6,3
	.word	39554
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,4,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,34
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,4,143,6,3
	.word	39794
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,4,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	434
	.byte	25,0,2,35,0,0,34
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,4,156,6,3
	.word	39938
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,4,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR0_Bits',0,4,165,6,3
	.word	40160
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,4,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR1_Bits',0,4,174,6,3
	.word	40296
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,4,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR2_Bits',0,4,183,6,3
	.word	40432
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,4,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR3_Bits',0,4,192,6,3
	.word	40568
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,4,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR4_Bits',0,4,201,6,3
	.word	40704
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,4,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	434
	.byte	21,0,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR5_Bits',0,4,210,6,3
	.word	40840
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,4,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	12,0,2,35,2,0,34
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,4,227,6,3
	.word	40976
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	609
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	434
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	609
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,241,6,3
	.word	41248
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,4,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	626
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,34
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,4,135,7,3
	.word	41493
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,4,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	626
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	6,0,2,35,3,0,34
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,4,143,7,3
	.word	41881
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,4,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	609
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,4,157,7,3
	.word	41999
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,4,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	609
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	626
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	6,0,2,35,3,0,34
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,4,172,7,3
	.word	42242
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	609
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	609
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	609
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	609
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	609
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	609
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	609
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	609
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	626
	.byte	10,0,2,35,2,0,34
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,189,7,3
	.word	42509
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	626
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,206,7,3
	.word	42768
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,4,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SCU_RSTCON3_Bits',0,4,212,7,3
	.word	43073
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	609
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,245,7,3
	.word	43154
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,4,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	457
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_SCU_SEICON0_Bits',0,4,254,7,3
	.word	43703
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,4,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	26,0,2,35,0,0,34
	.byte	'Ifx_SCU_SEICON1_Bits',0,4,138,8,3
	.word	43833
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,4,141,8,16,4,11
	.byte	'AE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	626
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_SEISR_Bits',0,4,151,8,3
	.word	44024
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,4,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	626
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_STCON_Bits',0,4,161,8,3
	.word	44202
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,4,164,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM1_Bits',0,4,167,8,3
	.word	44353
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,4,170,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM2_Bits',0,4,173,8,3
	.word	44425
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,4,176,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM3_Bits',0,4,179,8,3
	.word	44497
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,4,182,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM4_Bits',0,4,185,8,3
	.word	44569
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,4,188,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM5_Bits',0,4,191,8,3
	.word	44641
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,4,194,8,16,4,11
	.byte	'MEM',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM6_Bits',0,4,197,8,3
	.word	44713
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	609
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	609
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,34
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,216,8,3
	.word	44785
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,4,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	626
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,4,224,8,3
	.word	45114
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,234,8,3
	.word	45234
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	609
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,249,8,3
	.word	45404
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,4,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	626
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	609
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	609
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	609
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	609
	.byte	2,0,2,35,3,0,34
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,4,137,9,3
	.word	45667
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,4,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	609
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	434
	.byte	29,0,2,35,0,0,34
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,4,144,9,3
	.word	45946
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,4,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,4,151,9,3
	.word	46050
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,4,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	609
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,4,164,9,3
	.word	46156
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,34
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,174,9,3
	.word	46379
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,4,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	609
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,34
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,4,199,9,3
	.word	46527
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,4,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,4,215,9,3
	.word	47015
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,34
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,225,9,3
	.word	47312
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,34
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,235,9,3
	.word	47460
	.byte	34
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,244,9,3
	.word	473
	.byte	34
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,132,10,3
	.word	648
	.byte	34
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,148,10,3
	.word	914
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	457
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,157,10,3
	.word	47710
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,173,10,3
	.word	47836
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,176,10,16,4,11
	.byte	'AE',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	609
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,189,10,3
	.word	48088
	.byte	12,4,197,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28744
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_ACCEN00',0,4,202,10,3
	.word	48307
	.byte	12,4,205,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29303
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_ACCEN01',0,4,210,10,3
	.word	48372
	.byte	12,4,213,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29382
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_ACCEN10',0,4,218,10,3
	.word	48437
	.byte	12,4,221,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29942
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_ACCEN11',0,4,226,10,3
	.word	48502
	.byte	12,4,229,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30023
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_ARSTDIS',0,4,234,10,3
	.word	48567
	.byte	12,4,237,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30240
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON0',0,4,242,10,3
	.word	48632
	.byte	12,4,245,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30513
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON1',0,4,250,10,3
	.word	48697
	.byte	12,4,253,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30839
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON10',0,4,130,11,3
	.word	48762
	.byte	12,4,133,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30941
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON11',0,4,138,11,3
	.word	48828
	.byte	12,4,141,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31043
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON2',0,4,146,11,3
	.word	48894
	.byte	12,4,149,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31317
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON3',0,4,154,11,3
	.word	48959
	.byte	12,4,157,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31686
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON4',0,4,162,11,3
	.word	49024
	.byte	12,4,165,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31866
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON5',0,4,170,11,3
	.word	49089
	.byte	12,4,173,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32035
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON6',0,4,178,11,3
	.word	49154
	.byte	12,4,181,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32135
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON7',0,4,186,11,3
	.word	49219
	.byte	12,4,189,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32235
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON8',0,4,194,11,3
	.word	49284
	.byte	12,4,197,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32335
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CCUCON9',0,4,202,11,3
	.word	49349
	.byte	12,4,205,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32435
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_CHIPID',0,4,210,11,3
	.word	49414
	.byte	12,4,213,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32638
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_DTSCLIM',0,4,218,11,3
	.word	49478
	.byte	12,4,221,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32870
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_DTSCSTAT',0,4,226,11,3
	.word	49543
	.byte	12,4,229,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32972
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_EICON0',0,4,234,11,3
	.word	49609
	.byte	12,4,237,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33100
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_EICON1',0,4,242,11,3
	.word	49673
	.byte	12,4,245,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33289
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_EICR',0,4,250,11,3
	.word	49737
	.byte	12,4,253,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33653
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_EIFILT',0,4,130,12,3
	.word	49799
	.byte	12,4,133,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34092
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_EIFR',0,4,138,12,3
	.word	49863
	.byte	12,4,141,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34303
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_EISR',0,4,146,12,3
	.word	49925
	.byte	12,4,149,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34479
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_EMSR',0,4,154,12,3
	.word	49987
	.byte	12,4,157,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34673
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_EMSSW',0,4,162,12,3
	.word	50049
	.byte	12,4,165,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34808
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,4,170,12,3
	.word	50112
	.byte	12,4,173,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34944
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_ESROCFG',0,4,178,12,3
	.word	50185
	.byte	12,4,181,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35055
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_EXTCON',0,4,186,12,3
	.word	50250
	.byte	12,4,189,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35273
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_FDR',0,4,194,12,3
	.word	50314
	.byte	12,4,197,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35436
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_FMR',0,4,202,12,3
	.word	50375
	.byte	12,4,205,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35772
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_ID',0,4,210,12,3
	.word	50436
	.byte	12,4,213,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35879
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_IGCR',0,4,218,12,3
	.word	50496
	.byte	12,4,221,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36331
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_IN',0,4,226,12,3
	.word	50558
	.byte	12,4,229,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36430
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_IOCR',0,4,234,12,3
	.word	50618
	.byte	12,4,237,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36580
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,242,12,3
	.word	50680
	.byte	12,4,245,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36818
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,250,12,3
	.word	50748
	.byte	12,4,253,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36979
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,130,13,3
	.word	50816
	.byte	12,4,133,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37085
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_LBISTCTRL3',0,4,138,13,3
	.word	50884
	.byte	12,4,141,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37171
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_LCLCON0',0,4,146,13,3
	.word	50952
	.byte	12,4,149,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37339
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_LCLCON1',0,4,154,13,3
	.word	51017
	.byte	12,4,157,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37507
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_LCLTEST',0,4,162,13,3
	.word	51082
	.byte	12,4,165,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37821
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_MANID',0,4,170,13,3
	.word	51147
	.byte	12,4,173,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37932
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_OMR',0,4,178,13,3
	.word	51210
	.byte	12,4,181,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38090
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_OSCCON',0,4,186,13,3
	.word	51271
	.byte	12,4,189,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38501
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_OUT',0,4,194,13,3
	.word	51335
	.byte	12,4,197,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38602
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_OVCCON',0,4,202,13,3
	.word	51396
	.byte	12,4,205,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38920
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_OVCENABLE',0,4,210,13,3
	.word	51460
	.byte	12,4,213,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39107
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PDISC',0,4,218,13,3
	.word	51527
	.byte	12,4,221,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39218
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PDR',0,4,226,13,3
	.word	51590
	.byte	12,4,229,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39351
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PDRR',0,4,234,13,3
	.word	51651
	.byte	12,4,237,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39554
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PERPLLCON0',0,4,242,13,3
	.word	51713
	.byte	12,4,245,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39794
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PERPLLCON1',0,4,250,13,3
	.word	51781
	.byte	12,4,253,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39938
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PERPLLSTAT',0,4,130,14,3
	.word	51849
	.byte	12,4,133,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40160
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR0',0,4,138,14,3
	.word	51917
	.byte	12,4,141,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40296
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR1',0,4,146,14,3
	.word	51981
	.byte	12,4,149,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40432
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR2',0,4,154,14,3
	.word	52045
	.byte	12,4,157,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40568
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR3',0,4,162,14,3
	.word	52109
	.byte	12,4,165,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40704
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR4',0,4,170,14,3
	.word	52173
	.byte	12,4,173,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40840
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMCSR5',0,4,178,14,3
	.word	52237
	.byte	12,4,181,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40976
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMSTAT0',0,4,186,14,3
	.word	52301
	.byte	12,4,189,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41248
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMSWCR1',0,4,194,14,3
	.word	52366
	.byte	12,4,197,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41493
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMTRCSR0',0,4,202,14,3
	.word	52431
	.byte	12,4,205,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41881
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMTRCSR1',0,4,210,14,3
	.word	52497
	.byte	12,4,213,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41999
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMTRCSR2',0,4,218,14,3
	.word	52563
	.byte	12,4,221,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42242
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_PMTRCSR3',0,4,226,14,3
	.word	52629
	.byte	12,4,229,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42509
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_RSTCON',0,4,234,14,3
	.word	52695
	.byte	12,4,237,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42768
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_RSTCON2',0,4,242,14,3
	.word	52759
	.byte	12,4,245,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43073
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_RSTCON3',0,4,250,14,3
	.word	52824
	.byte	12,4,253,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43154
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_RSTSTAT',0,4,130,15,3
	.word	52889
	.byte	12,4,133,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43703
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_SEICON0',0,4,138,15,3
	.word	52954
	.byte	12,4,141,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43833
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_SEICON1',0,4,146,15,3
	.word	53019
	.byte	12,4,149,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44024
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_SEISR',0,4,154,15,3
	.word	53084
	.byte	12,4,157,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44202
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_STCON',0,4,162,15,3
	.word	53147
	.byte	12,4,165,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44353
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM1',0,4,170,15,3
	.word	53210
	.byte	12,4,173,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44425
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM2',0,4,178,15,3
	.word	53274
	.byte	12,4,181,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44497
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM3',0,4,186,15,3
	.word	53338
	.byte	12,4,189,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44569
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM4',0,4,194,15,3
	.word	53402
	.byte	12,4,197,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44641
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM5',0,4,202,15,3
	.word	53466
	.byte	12,4,205,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44713
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_STMEM6',0,4,210,15,3
	.word	53530
	.byte	12,4,213,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44785
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_STSTAT',0,4,218,15,3
	.word	53594
	.byte	12,4,221,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45114
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_SWAPCTRL',0,4,226,15,3
	.word	53658
	.byte	12,4,229,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45234
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_SWRSTCON',0,4,234,15,3
	.word	53724
	.byte	12,4,237,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45404
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_SYSCON',0,4,242,15,3
	.word	53790
	.byte	12,4,245,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45667
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_SYSPLLCON0',0,4,250,15,3
	.word	53854
	.byte	12,4,253,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45946
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_SYSPLLCON1',0,4,130,16,3
	.word	53922
	.byte	12,4,133,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46050
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_SYSPLLCON2',0,4,138,16,3
	.word	53990
	.byte	12,4,141,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46156
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_SYSPLLSTAT',0,4,146,16,3
	.word	54058
	.byte	12,4,149,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46379
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_TRAPCLR',0,4,154,16,3
	.word	54126
	.byte	12,4,157,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46527
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_TRAPDIS0',0,4,162,16,3
	.word	54191
	.byte	12,4,165,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47015
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_TRAPDIS1',0,4,170,16,3
	.word	54257
	.byte	12,4,173,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47312
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_TRAPSET',0,4,178,16,3
	.word	54323
	.byte	12,4,181,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47460
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_TRAPSTAT',0,4,186,16,3
	.word	54388
	.byte	34
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,194,16,3
	.word	569
	.byte	34
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,202,16,3
	.word	874
	.byte	34
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,210,16,3
	.word	1105
	.byte	12,4,213,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47710
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_WDTS_CON0',0,4,218,16,3
	.word	54539
	.byte	12,4,221,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47836
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_WDTS_CON1',0,4,226,16,3
	.word	54606
	.byte	12,4,229,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48088
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SCU_WDTS_SR',0,4,234,16,3
	.word	54673
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,4,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	50112
	.byte	4,2,35,0,0,14
	.word	54738
	.byte	34
	.byte	'Ifx_SCU_ESRCFGX',0,4,249,16,3
	.word	54779
	.byte	14
	.word	1145
	.byte	34
	.byte	'Ifx_SCU_WDTCPU',0,4,141,17,3
	.word	54809
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,156,17,25,12,13
	.byte	'CON0',0
	.word	54539
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	54606
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	54673
	.byte	4,2,35,8,0,14
	.word	54838
	.byte	34
	.byte	'Ifx_SCU_WDTS',0,4,161,17,3
	.word	54899
	.byte	18,8
	.word	54738
	.byte	19,1,0,14
	.word	54926
	.byte	18,20
	.word	609
	.byte	19,19,0,18,36
	.word	609
	.byte	19,35,0,18,16
	.word	49737
	.byte	19,3,0,18,16
	.word	50496
	.byte	19,3,0,18,72
	.word	1145
	.byte	19,5,0,14
	.word	54976
	.byte	14
	.word	54838
	.byte	18,176,2
	.word	609
	.byte	19,175,2,0,10
	.byte	'_Ifx_SCU',0,4,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	5021
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	50436
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3201
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	51271
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	54058
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	53854
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	53922
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	53990
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	51849
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	51713
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	51781
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	48632
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	48697
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	50314
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	50250
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	48894
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	48959
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	49024
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	49089
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	52889
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3201
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	52695
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	48567
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	53724
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	52759
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	52824
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	3201
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	54935
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	50185
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	53790
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	49154
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	49219
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	49284
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	49349
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	48762
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	48828
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3201
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	51590
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	50618
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	51335
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	51210
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	50558
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	17164
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	53594
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	53147
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	51917
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	51981
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	52045
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	52109
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	52173
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	52237
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	3201
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	52301
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	52366
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	17164
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	49987
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	50049
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	49543
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	49478
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	54940
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	54257
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	54388
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	54323
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	54126
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	54191
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	50952
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	51017
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	51082
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	49414
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	51147
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	3201
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	53658
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	54940
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	50680
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	50748
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	50816
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	50884
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	17164
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	53210
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	53274
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	51527
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	5021
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	52431
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	52497
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	52563
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	52629
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	4392
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	53338
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	53402
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	53466
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	53530
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	17164
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	51460
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	51396
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	54949
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	49799
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	54958
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	49863
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	50375
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	51651
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	54967
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	17164
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	54985
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	5021
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	49609
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	49673
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	49925
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	54990
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	52954
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	53019
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	53084
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	54995
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	48502
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	48437
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	48372
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	48307
	.byte	4,3,35,252,7,0,14
	.word	55006
	.byte	34
	.byte	'Ifx_SCU',0,4,166,18,3
	.word	57127
	.byte	34
	.byte	'IfxEbu_ChipSelect',0,14,71,3
	.word	20846
	.byte	34
	.byte	'IfxEbu_ExternalClockRatio',0,14,81,3
	.word	19137
	.byte	34
	.byte	'IfxEbu_ArbitrationSignalSynchronization',0,14,95,3
	.word	26302
	.byte	34
	.byte	'IfxEbu_CASLatency',0,14,122,3
	.word	23266
	.byte	34
	.byte	'IfxEbu_ColumnAddressWidth',0,14,143,1,3
	.word	24721
	.byte	34
	.byte	'IfxEbu_DelayOnPowerDownExit',0,14,155,1,3
	.word	23620
	.byte	34
	.byte	'IfxEbu_DeviceType',0,14,168,1,3
	.word	20984
	.byte	34
	.byte	'IfxEbu_ExtendedData',0,14,176,1,3
	.word	22259
	.byte	34
	.byte	'IfxEbu_ExtendedOperationBankSelect',0,14,184,1,3
	.word	23103
	.byte	34
	.byte	'IfxEbu_ExtendedRefresh',0,14,192,1,3
	.word	23883
	.byte	34
	.byte	'IfxEbu_ExternalBusMode',0,14,200,1,3
	.word	26158
	.byte	34
	.byte	'IfxEbu_ExternalDeviceInterface',0,14,208,1,3
	.word	21416
	.byte	34
	.byte	'IfxEbu_MaskForBankTag',0,14,224,1,3
	.word	24937
	.byte	34
	.byte	'IfxEbu_MemoryRegionMask',0,14,244,1,3
	.word	25513
	.byte	34
	.byte	'IfxEbu_ModeRegisterSetupTime',0,14,252,1,3
	.word	24463
	.byte	34
	.byte	'IfxEbu_PowerSaveMode',0,14,132,2,3
	.word	25100
	.byte	34
	.byte	'IfxEbu_RefreshCommands',0,14,144,2,3
	.word	23998
	.byte	34
	.byte	'IfxEbu_RowPrechargeTime',0,14,152,2,3
	.word	24602
	.byte	34
	.byte	'IfxEbu_RowToColumnDelay',0,14,160,2,3
	.word	24818
	.byte	34
	.byte	'IfxEbu_SDRAMBurstLength',0,14,169,2,3
	.word	23330
	.byte	34
	.byte	'IfxEbu_SynchronousBurstLength',0,14,183,2,3
	.word	21626
	.byte	34
	.byte	'IfxEbu_WaitControl',0,14,190,2,3
	.word	21317
	.byte	34
	.byte	'IfxEbu_MemoryRegionConfig',0,14,205,2,3
	.word	25974
	.byte	34
	.byte	'IfxEbu_ModuleConfig',0,14,215,2,3
	.word	26417
	.byte	34
	.byte	'IfxEbu_ReadAccessParameter',0,14,228,2,3
	.word	22362
	.byte	34
	.byte	'IfxEbu_ReadConfig',0,14,243,2,3
	.word	21769
	.byte	34
	.byte	'IfxEbu_SDRAMControlConfig',0,14,130,3,3
	.word	25207
	.byte	34
	.byte	'IfxEbu_SDRAMModConfig',0,14,140,3,3
	.word	23478
	.byte	34
	.byte	'IfxEbu_SDRAMRefreshConfig',0,14,153,3,3
	.word	24221
	.byte	34
	.byte	'IfxEbu_WriteAccessParameter',0,14,166,3,3
	.word	22564
	.byte	34
	.byte	'IfxEbu_WriteConfig',0,14,179,3,3
	.word	22045
	.byte	34
	.byte	'Ifx_STM_ACCEN0_Bits',0,13,102,3
	.word	12810
	.byte	34
	.byte	'Ifx_STM_ACCEN1_Bits',0,13,108,3
	.word	12721
	.byte	34
	.byte	'Ifx_STM_CAP_Bits',0,13,114,3
	.word	11224
	.byte	34
	.byte	'Ifx_STM_CAPSV_Bits',0,13,120,3
	.word	12105
	.byte	34
	.byte	'Ifx_STM_CLC_Bits',0,13,130,1,3
	.word	10343
	.byte	34
	.byte	'Ifx_STM_CMCON_Bits',0,13,143,1,3
	.word	11404
	.byte	34
	.byte	'Ifx_STM_CMP_Bits',0,13,149,1,3
	.word	11312
	.byte	34
	.byte	'Ifx_STM_ICR_Bits',0,13,162,1,3
	.word	11636
	.byte	34
	.byte	'Ifx_STM_ID_Bits',0,13,170,1,3
	.word	10499
	.byte	34
	.byte	'Ifx_STM_ISCR_Bits',0,13,180,1,3
	.word	11853
	.byte	34
	.byte	'Ifx_STM_KRST0_Bits',0,13,188,1,3
	.word	12598
	.byte	34
	.byte	'Ifx_STM_KRST1_Bits',0,13,195,1,3
	.word	12494
	.byte	34
	.byte	'Ifx_STM_KRSTCLR_Bits',0,13,202,1,3
	.word	12388
	.byte	34
	.byte	'Ifx_STM_OCS_Bits',0,13,213,1,3
	.word	12206
	.byte	34
	.byte	'Ifx_STM_TIM0_Bits',0,13,219,1,3
	.word	10618
	.byte	34
	.byte	'Ifx_STM_TIM0SV_Bits',0,13,225,1,3
	.word	12017
	.byte	34
	.byte	'Ifx_STM_TIM1_Bits',0,13,231,1,3
	.word	10704
	.byte	34
	.byte	'Ifx_STM_TIM2_Bits',0,13,237,1,3
	.word	10790
	.byte	34
	.byte	'Ifx_STM_TIM3_Bits',0,13,243,1,3
	.word	10876
	.byte	34
	.byte	'Ifx_STM_TIM4_Bits',0,13,249,1,3
	.word	10963
	.byte	34
	.byte	'Ifx_STM_TIM5_Bits',0,13,255,1,3
	.word	11050
	.byte	34
	.byte	'Ifx_STM_TIM6_Bits',0,13,133,2,3
	.word	11137
	.byte	34
	.byte	'Ifx_STM_ACCEN0',0,13,146,2,3
	.word	13339
	.byte	34
	.byte	'Ifx_STM_ACCEN1',0,13,154,2,3
	.word	12770
	.byte	34
	.byte	'Ifx_STM_CAP',0,13,162,2,3
	.word	11272
	.byte	34
	.byte	'Ifx_STM_CAPSV',0,13,170,2,3
	.word	12155
	.byte	34
	.byte	'Ifx_STM_CLC',0,13,178,2,3
	.word	10459
	.byte	34
	.byte	'Ifx_STM_CMCON',0,13,186,2,3
	.word	11596
	.byte	34
	.byte	'Ifx_STM_CMP',0,13,194,2,3
	.word	11355
	.byte	34
	.byte	'Ifx_STM_ICR',0,13,202,2,3
	.word	11813
	.byte	34
	.byte	'Ifx_STM_ID',0,13,210,2,3
	.word	10578
	.byte	34
	.byte	'Ifx_STM_ISCR',0,13,218,2,3
	.word	11977
	.byte	34
	.byte	'Ifx_STM_KRST0',0,13,226,2,3
	.word	12681
	.byte	34
	.byte	'Ifx_STM_KRST1',0,13,234,2,3
	.word	12558
	.byte	34
	.byte	'Ifx_STM_KRSTCLR',0,13,242,2,3
	.word	12454
	.byte	34
	.byte	'Ifx_STM_OCS',0,13,250,2,3
	.word	12348
	.byte	34
	.byte	'Ifx_STM_TIM0',0,13,130,3,3
	.word	10664
	.byte	34
	.byte	'Ifx_STM_TIM0SV',0,13,138,3,3
	.word	12065
	.byte	34
	.byte	'Ifx_STM_TIM1',0,13,146,3,3
	.word	10750
	.byte	34
	.byte	'Ifx_STM_TIM2',0,13,154,3,3
	.word	10836
	.byte	34
	.byte	'Ifx_STM_TIM3',0,13,162,3,3
	.word	10923
	.byte	34
	.byte	'Ifx_STM_TIM4',0,13,170,3,3
	.word	11010
	.byte	34
	.byte	'Ifx_STM_TIM5',0,13,178,3,3
	.word	11097
	.byte	34
	.byte	'Ifx_STM_TIM6',0,13,186,3,3
	.word	11184
	.byte	14
	.word	13379
	.byte	34
	.byte	'Ifx_STM',0,13,226,3,3
	.word	59268
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,17,68,16,4,11
	.byte	'ADDR',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_A_Bits',0,17,71,3
	.word	59290
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,17,74,16,4,11
	.byte	'VSS',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	457
	.byte	31,0,2,35,0,0,34
	.byte	'Ifx_CPU_BIV_Bits',0,17,78,3
	.word	59351
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,17,81,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	457
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	457
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,17,87,3
	.word	59430
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,17,90,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	457
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,17,95,3
	.word	59568
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,17,98,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	457
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,17,106,3
	.word	59689
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,17,109,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	457
	.byte	31,0,2,35,0,0,34
	.byte	'Ifx_CPU_BTV_Bits',0,17,113,3
	.word	59865
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,17,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	457
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_CCNT_Bits',0,17,120,3
	.word	59951
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,17,123,16,4,11
	.byte	'CM',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	457
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	457
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	457
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	21,0,2,35,0,0,34
	.byte	'Ifx_CPU_CCTRL_Bits',0,17,131,1,3
	.word	60040
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,17,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	457
	.byte	27,0,2,35,0,0,34
	.byte	'Ifx_CPU_COMPAT_Bits',0,17,140,1,3
	.word	60187
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,17,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	29,0,2,35,0,0,34
	.byte	'Ifx_CPU_CORE_ID_Bits',0,17,147,1,3
	.word	60316
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,17,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	457
	.byte	27,0,2,35,0,0,34
	.byte	'Ifx_CPU_CPR_L_Bits',0,17,154,1,3
	.word	60416
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,17,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	457
	.byte	27,0,2,35,0,0,34
	.byte	'Ifx_CPU_CPR_U_Bits',0,17,161,1,3
	.word	60511
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,17,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	457
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CPU_CPU_ID_Bits',0,17,169,1,3
	.word	60606
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,17,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	457
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	22,0,2,35,0,0,34
	.byte	'Ifx_CPU_CPXE_Bits',0,17,176,1,3
	.word	60716
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,17,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_CPU_CREVT_Bits',0,17,187,1,3
	.word	60808
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,17,190,1,16,4,11
	.byte	'CID',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	29,0,2,35,0,0,34
	.byte	'Ifx_CPU_CUS_ID_Bits',0,17,194,1,3
	.word	60962
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,17,197,1,16,4,11
	.byte	'DATA',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_D_Bits',0,17,200,1,3
	.word	61056
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,17,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CPU_DATR_Bits',0,17,214,1,3
	.word	61119
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,17,217,1,16,4,11
	.byte	'DE',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	457
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	457
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	19,0,2,35,0,0,34
	.byte	'Ifx_CPU_DBGSR_Bits',0,17,228,1,3
	.word	61345
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,17,231,1,16,4,11
	.byte	'DTA',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	31,0,2,35,0,0,34
	.byte	'Ifx_CPU_DBGTCR_Bits',0,17,235,1,3
	.word	61560
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,17,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	30,0,2,35,0,0,34
	.byte	'Ifx_CPU_DCON0_Bits',0,17,243,1,3
	.word	61654
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,17,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CPU_DCON2_Bits',0,17,250,1,3
	.word	61770
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,17,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	457
	.byte	26,0,2,35,0,0,34
	.byte	'Ifx_CPU_DCX_Bits',0,17,129,2,3
	.word	61871
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,17,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_DEADD_Bits',0,17,135,2,3
	.word	61964
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,17,138,2,16,4,11
	.byte	'TA',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_DIEAR_Bits',0,17,141,2,3
	.word	62044
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,17,144,2,16,4,11
	.byte	'IED',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	457
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	15,0,2,35,0,0,34
	.byte	'Ifx_CPU_DIETR_Bits',0,17,159,2,3
	.word	62113
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,17,162,2,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,17,196,2,3
	.word	62397
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,17,199,2,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,17,233,2,3
	.word	62988
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,17,236,2,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,17,142,3,3
	.word	63579
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,17,145,3,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,17,179,3,3
	.word	64180
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,17,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	457
	.byte	27,0,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,17,186,3,3
	.word	64781
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,17,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	457
	.byte	27,0,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,17,193,3,3
	.word	64896
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,17,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	457
	.byte	31,0,2,35,0,0,34
	.byte	'Ifx_CPU_DMS_Bits',0,17,200,3,3
	.word	65011
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,17,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	457
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	14,0,2,35,0,0,34
	.byte	'Ifx_CPU_DPRE_Bits',0,17,207,3,3
	.word	65104
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,17,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	457
	.byte	29,0,2,35,0,0,34
	.byte	'Ifx_CPU_DPR_L_Bits',0,17,214,3,3
	.word	65196
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,17,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	457
	.byte	29,0,2,35,0,0,34
	.byte	'Ifx_CPU_DPR_U_Bits',0,17,221,3,3
	.word	65291
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,17,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	457
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	14,0,2,35,0,0,34
	.byte	'Ifx_CPU_DPWE_Bits',0,17,228,3,3
	.word	65386
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,17,231,3,16,4,11
	.byte	'SRE',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	457
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	457
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,34
	.byte	'Ifx_CPU_DSTR_Bits',0,17,250,3,3
	.word	65478
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,17,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_CPU_EXEVT_Bits',0,17,133,4,3
	.word	65817
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,17,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,34
	.byte	'Ifx_CPU_FCX_Bits',0,17,141,4,3
	.word	65971
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,17,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	457
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	457
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	457
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	457
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	2,0,2,35,0,0,34
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,17,154,4,3
	.word	66077
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,17,157,4,16,4,11
	.byte	'STALL',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	457
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	6,0,2,35,0,0,34
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,17,165,4,3
	.word	66295
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,17,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	457
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	457
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	457
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	457
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	457
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	457
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	457
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	457
	.byte	2,0,2,35,0,0,34
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,17,182,4,3
	.word	66486
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,17,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	22,0,2,35,0,0,34
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,17,198,4,3
	.word	66786
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,17,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	31,0,2,35,0,0,34
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,17,205,4,3
	.word	67091
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,17,208,4,16,4,11
	.byte	'TST',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	457
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,17,227,4,3
	.word	67192
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,17,230,4,16,4,11
	.byte	'OPC',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,17,237,4,3
	.word	67541
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,17,240,4,16,4,11
	.byte	'PC',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,17,243,4,3
	.word	67701
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,17,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,17,249,4,3
	.word	67782
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,17,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,17,255,4,3
	.word	67869
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,17,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,17,133,5,3
	.word	67956
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,17,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	457
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_ICNT_Bits',0,17,140,5,3
	.word	68043
	.byte	34
	.byte	'Ifx_CPU_ICR_Bits',0,17,150,5,3
	.word	27046
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,17,153,5,16,4,11
	.byte	'ISP',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_ISP_Bits',0,17,156,5,3
	.word	68160
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,17,159,5,16,4,11
	.byte	'RST',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	457
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	29,0,2,35,0,0,34
	.byte	'Ifx_CPU_KRST0_Bits',0,17,164,5,3
	.word	68226
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,17,167,5,16,4,11
	.byte	'RST',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	31,0,2,35,0,0,34
	.byte	'Ifx_CPU_KRST1_Bits',0,17,171,5,3
	.word	68337
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,17,174,5,16,4,11
	.byte	'CLR',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	31,0,2,35,0,0,34
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,17,178,5,3
	.word	68429
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,17,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,34
	.byte	'Ifx_CPU_LCX_Bits',0,17,186,5,3
	.word	68525
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,17,189,5,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,17,223,5,3
	.word	68631
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,17,226,5,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,17,132,6,3
	.word	69214
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,17,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	457
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_M1CNT_Bits',0,17,139,6,3
	.word	69807
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,17,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	457
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_M2CNT_Bits',0,17,146,6,3
	.word	69900
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,17,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	457
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_M3CNT_Bits',0,17,153,6,3
	.word	69993
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,17,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_OSEL_Bits',0,17,159,6,3
	.word	70086
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,17,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	457
	.byte	31,0,2,35,0,0,34
	.byte	'Ifx_CPU_PC_Bits',0,17,166,6,3
	.word	70159
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,17,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	30,0,2,35,0,0,34
	.byte	'Ifx_CPU_PCON0_Bits',0,17,174,6,3
	.word	70244
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,17,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	30,0,2,35,0,0,34
	.byte	'Ifx_CPU_PCON1_Bits',0,17,182,6,3
	.word	70360
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,17,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CPU_PCON2_Bits',0,17,189,6,3
	.word	70471
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,17,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	457
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	2,0,2,35,0,0,34
	.byte	'Ifx_CPU_PCXI_Bits',0,17,200,6,3
	.word	70572
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,17,203,6,16,4,11
	.byte	'TA',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_PIEAR_Bits',0,17,206,6,3
	.word	70725
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,17,209,6,16,4,11
	.byte	'IED',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	457
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	15,0,2,35,0,0,34
	.byte	'Ifx_CPU_PIETR_Bits',0,17,224,6,3
	.word	70794
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,17,227,6,16,4,11
	.byte	'DAC',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CPU_PMA0_Bits',0,17,231,6,3
	.word	71078
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,17,234,6,16,4,11
	.byte	'CAC',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CPU_PMA1_Bits',0,17,238,6,3
	.word	71169
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,17,241,6,16,4,11
	.byte	'PSI',0,4
	.word	457
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CPU_PMA2_Bits',0,17,245,6,3
	.word	71260
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,17,248,6,16,4,11
	.byte	'FRE',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	17,0,2,35,0,0,34
	.byte	'Ifx_CPU_PSTR_Bits',0,17,130,7,3
	.word	71351
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,17,133,7,16,4,11
	.byte	'CDC',0,4
	.word	457
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	457
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	457
	.byte	8,0,2,35,0,0,34
	.byte	'Ifx_CPU_PSW_Bits',0,17,145,7,3
	.word	71554
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,17,148,7,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,17,182,7,3
	.word	71759
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,17,185,7,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,17,219,7,3
	.word	72326
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,17,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	457
	.byte	27,0,2,35,0,0,34
	.byte	'Ifx_CPU_RGN_LA_Bits',0,17,226,7,3
	.word	72903
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,17,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	457
	.byte	27,0,2,35,0,0,34
	.byte	'Ifx_CPU_RGN_UA_Bits',0,17,233,7,3
	.word	72998
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,17,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	457
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_SEGEN_Bits',0,17,242,7,3
	.word	73093
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,17,245,7,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,17,151,8,3
	.word	73221
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,17,154,8,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,17,188,8,3
	.word	73804
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,17,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,34
	.byte	'Ifx_CPU_SMACON_Bits',0,17,196,8,3
	.word	74397
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,17,199,8,16,4,11
	.byte	'EN0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,17,233,8,3
	.word	74515
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,17,236,8,16,4,11
	.byte	'EN32',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,17,142,9,3
	.word	75104
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,17,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_CPU_SWEVT_Bits',0,17,153,9,3
	.word	75703
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,17,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	457
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,34
	.byte	'Ifx_CPU_SYSCON_Bits',0,17,171,9,3
	.word	75857
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,17,174,9,16,4,11
	.byte	'ASI',0,4
	.word	457
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	457
	.byte	27,0,2,35,0,0,34
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,17,178,9,3
	.word	76156
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,17,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	15,0,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_CON_Bits',0,17,189,9,3
	.word	76254
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,17,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,17,196,9,3
	.word	76426
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,17,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	457
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	20,0,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,17,203,9,3
	.word	76555
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,17,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	457
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	20,0,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,17,211,9,3
	.word	76685
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,17,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	457
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	8,0,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,17,218,9,3
	.word	76837
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,17,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	457
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	8,0,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,17,226,9,3
	.word	76964
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,17,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	457
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,17,233,9,3
	.word	77113
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,17,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	457
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	457
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	457
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	457
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,17,246,9,3
	.word	77227
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,17,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,17,252,9,3
	.word	77471
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,17,255,9,16,4,11
	.byte	'T0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,17,138,10,3
	.word	77551
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,17,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CPU_TR_ADR_Bits',0,17,144,10,3
	.word	77746
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,17,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	457
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	457
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	457
	.byte	3,0,2,35,0,0,34
	.byte	'Ifx_CPU_TR_EVT_Bits',0,17,164,10,3
	.word	77819
	.byte	12,17,172,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59290
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_A',0,17,177,10,3
	.word	78137
	.byte	12,17,180,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59351
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_BIV',0,17,185,10,3
	.word	78196
	.byte	12,17,188,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59430
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_BLK_OMASK',0,17,193,10,3
	.word	78257
	.byte	12,17,196,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59568
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_BLK_OTAR',0,17,201,10,3
	.word	78324
	.byte	12,17,204,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59689
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_BLK_RABR',0,17,209,10,3
	.word	78390
	.byte	12,17,212,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59865
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_BTV',0,17,217,10,3
	.word	78456
	.byte	12,17,220,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59951
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_CCNT',0,17,225,10,3
	.word	78517
	.byte	12,17,228,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60040
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_CCTRL',0,17,233,10,3
	.word	78579
	.byte	12,17,236,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60187
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_COMPAT',0,17,241,10,3
	.word	78642
	.byte	12,17,244,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60316
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_CORE_ID',0,17,249,10,3
	.word	78706
	.byte	12,17,252,10,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60416
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_CPR_L',0,17,129,11,3
	.word	78771
	.byte	12,17,132,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60511
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_CPR_U',0,17,137,11,3
	.word	78834
	.byte	12,17,140,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60606
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_CPU_ID',0,17,145,11,3
	.word	78897
	.byte	12,17,148,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60716
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_CPXE',0,17,153,11,3
	.word	78961
	.byte	12,17,156,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60808
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_CREVT',0,17,161,11,3
	.word	79023
	.byte	12,17,164,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60962
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_CUS_ID',0,17,169,11,3
	.word	79086
	.byte	12,17,172,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61056
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_D',0,17,177,11,3
	.word	79150
	.byte	12,17,180,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61119
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DATR',0,17,185,11,3
	.word	79209
	.byte	12,17,188,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61345
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DBGSR',0,17,193,11,3
	.word	79271
	.byte	12,17,196,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61560
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DBGTCR',0,17,201,11,3
	.word	79334
	.byte	12,17,204,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61654
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DCON0',0,17,209,11,3
	.word	79398
	.byte	12,17,212,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61770
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DCON2',0,17,217,11,3
	.word	79461
	.byte	12,17,220,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61871
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DCX',0,17,225,11,3
	.word	79524
	.byte	12,17,228,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61964
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DEADD',0,17,233,11,3
	.word	79585
	.byte	12,17,236,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62044
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DIEAR',0,17,241,11,3
	.word	79648
	.byte	12,17,244,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62113
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DIETR',0,17,249,11,3
	.word	79711
	.byte	12,17,252,11,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62397
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,17,129,12,3
	.word	79774
	.byte	12,17,132,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62988
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,17,137,12,3
	.word	79854
	.byte	12,17,140,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63579
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,17,145,12,3
	.word	79934
	.byte	12,17,148,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64180
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,17,153,12,3
	.word	80014
	.byte	12,17,156,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64781
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,17,161,12,3
	.word	80094
	.byte	12,17,164,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64896
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,17,169,12,3
	.word	80168
	.byte	12,17,172,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65011
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DMS',0,17,177,12,3
	.word	80242
	.byte	12,17,180,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65104
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DPRE',0,17,185,12,3
	.word	80303
	.byte	12,17,188,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65196
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DPR_L',0,17,193,12,3
	.word	80365
	.byte	12,17,196,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65291
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DPR_U',0,17,201,12,3
	.word	80428
	.byte	12,17,204,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65386
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DPWE',0,17,209,12,3
	.word	80491
	.byte	12,17,212,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65478
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_DSTR',0,17,217,12,3
	.word	80553
	.byte	12,17,220,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65817
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_EXEVT',0,17,225,12,3
	.word	80615
	.byte	12,17,228,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65971
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FCX',0,17,233,12,3
	.word	80678
	.byte	12,17,236,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66077
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FLASHCON0',0,17,241,12,3
	.word	80739
	.byte	12,17,244,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66295
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FLASHCON1',0,17,249,12,3
	.word	80806
	.byte	12,17,252,12,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66486
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FLASHCON2',0,17,129,13,3
	.word	80873
	.byte	12,17,132,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66786
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FLASHCON3',0,17,137,13,3
	.word	80940
	.byte	12,17,140,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67091
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FLASHCON4',0,17,145,13,3
	.word	81007
	.byte	12,17,148,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67192
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,17,153,13,3
	.word	81074
	.byte	12,17,156,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67541
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,17,161,13,3
	.word	81144
	.byte	12,17,164,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67701
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,17,169,13,3
	.word	81214
	.byte	12,17,172,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67782
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,17,177,13,3
	.word	81283
	.byte	12,17,180,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67869
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,17,185,13,3
	.word	81354
	.byte	12,17,188,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67956
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,17,193,13,3
	.word	81425
	.byte	12,17,196,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68043
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_ICNT',0,17,201,13,3
	.word	81496
	.byte	34
	.byte	'Ifx_CPU_ICR',0,17,209,13,3
	.word	27162
	.byte	12,17,212,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68160
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_ISP',0,17,217,13,3
	.word	81579
	.byte	12,17,220,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68226
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_KRST0',0,17,225,13,3
	.word	81640
	.byte	12,17,228,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68337
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_KRST1',0,17,233,13,3
	.word	81703
	.byte	12,17,236,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68429
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_KRSTCLR',0,17,241,13,3
	.word	81766
	.byte	12,17,244,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68525
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_LCX',0,17,249,13,3
	.word	81831
	.byte	12,17,252,13,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68631
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,17,129,14,3
	.word	81892
	.byte	12,17,132,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69214
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,17,137,14,3
	.word	81968
	.byte	12,17,140,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69807
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_M1CNT',0,17,145,14,3
	.word	82044
	.byte	12,17,148,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69900
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_M2CNT',0,17,153,14,3
	.word	82107
	.byte	12,17,156,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69993
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_M3CNT',0,17,161,14,3
	.word	82170
	.byte	12,17,164,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70086
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_OSEL',0,17,169,14,3
	.word	82233
	.byte	12,17,172,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70159
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PC',0,17,177,14,3
	.word	82295
	.byte	12,17,180,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70244
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PCON0',0,17,185,14,3
	.word	82355
	.byte	12,17,188,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70360
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PCON1',0,17,193,14,3
	.word	82418
	.byte	12,17,196,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70471
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PCON2',0,17,201,14,3
	.word	82481
	.byte	12,17,204,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70572
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PCXI',0,17,209,14,3
	.word	82544
	.byte	12,17,212,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70725
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PIEAR',0,17,217,14,3
	.word	82606
	.byte	12,17,220,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70794
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PIETR',0,17,225,14,3
	.word	82669
	.byte	12,17,228,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71078
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PMA0',0,17,233,14,3
	.word	82732
	.byte	12,17,236,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71169
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PMA1',0,17,241,14,3
	.word	82794
	.byte	12,17,244,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71260
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PMA2',0,17,249,14,3
	.word	82856
	.byte	12,17,252,14,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71351
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PSTR',0,17,129,15,3
	.word	82918
	.byte	12,17,132,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71554
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_PSW',0,17,137,15,3
	.word	82980
	.byte	12,17,140,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71759
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_RGN_ACCENA',0,17,145,15,3
	.word	83041
	.byte	12,17,148,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72326
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_RGN_ACCENB',0,17,153,15,3
	.word	83109
	.byte	12,17,156,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72903
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_RGN_LA',0,17,161,15,3
	.word	83177
	.byte	12,17,164,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72998
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_RGN_UA',0,17,169,15,3
	.word	83241
	.byte	12,17,172,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73093
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_SEGEN',0,17,177,15,3
	.word	83305
	.byte	12,17,180,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73221
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,17,185,15,3
	.word	83368
	.byte	12,17,188,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73804
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,17,193,15,3
	.word	83444
	.byte	12,17,196,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74397
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_SMACON',0,17,201,15,3
	.word	83520
	.byte	12,17,204,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74515
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,17,209,15,3
	.word	83584
	.byte	12,17,212,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75104
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,17,217,15,3
	.word	83663
	.byte	12,17,220,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75703
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_SWEVT',0,17,225,15,3
	.word	83742
	.byte	12,17,228,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75857
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_SYSCON',0,17,233,15,3
	.word	83805
	.byte	12,17,236,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76156
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TASK_ASI',0,17,241,15,3
	.word	83869
	.byte	12,17,244,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76254
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_CON',0,17,249,15,3
	.word	83935
	.byte	12,17,252,15,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76426
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,17,129,16,3
	.word	84000
	.byte	12,17,132,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76555
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,17,137,16,3
	.word	84076
	.byte	12,17,140,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76685
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,17,145,16,3
	.word	84154
	.byte	12,17,148,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76837
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,17,153,16,3
	.word	84232
	.byte	12,17,156,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76964
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,17,161,16,3
	.word	84309
	.byte	12,17,164,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77113
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,17,169,16,3
	.word	84386
	.byte	12,17,172,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77227
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,17,177,16,3
	.word	84457
	.byte	12,17,180,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77471
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TPS_TIMER',0,17,185,16,3
	.word	84529
	.byte	12,17,188,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77551
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TRIG_ACC',0,17,193,16,3
	.word	84596
	.byte	12,17,196,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77746
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TR_ADR',0,17,201,16,3
	.word	84662
	.byte	12,17,204,16,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77819
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CPU_TR_EVT',0,17,209,16,3
	.word	84726
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,17,221,16,25,16,13
	.byte	'LA',0
	.word	83177
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	83241
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	83041
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	83109
	.byte	4,2,35,12,0,14
	.word	84790
	.byte	34
	.byte	'Ifx_CPU_RGN',0,17,227,16,3
	.word	84866
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,17,242,16,25,12,13
	.byte	'RABR',0
	.word	78390
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	78324
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	78257
	.byte	4,2,35,8,0,14
	.word	84892
	.byte	34
	.byte	'Ifx_CPU_BLK',0,17,247,16,3
	.word	84955
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,17,134,17,25,28,13
	.byte	'CON',0
	.word	81074
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	81214
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	81144
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3201
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	81283
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	81354
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	81425
	.byte	4,2,35,24,0,14
	.word	84981
	.byte	34
	.byte	'Ifx_CPU_FPU_TRAP',0,17,143,17,3
	.word	85106
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,17,158,17,25,8,13
	.byte	'L',0
	.word	80365
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	80428
	.byte	4,2,35,4,0,14
	.word	85137
	.byte	34
	.byte	'Ifx_CPU_DPR',0,17,162,17,3
	.word	85179
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,17,177,17,25,8,13
	.byte	'L',0
	.word	78771
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	78834
	.byte	4,2,35,4,0,14
	.word	85205
	.byte	34
	.byte	'Ifx_CPU_CPR',0,17,181,17,3
	.word	85247
	.byte	18,12
	.word	84529
	.byte	19,2,0,10
	.byte	'_Ifx_CPU_TPS',0,17,196,17,25,16,13
	.byte	'CON',0
	.word	83935
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	85273
	.byte	12,2,35,4,0,14
	.word	85282
	.byte	34
	.byte	'Ifx_CPU_TPS',0,17,200,17,3
	.word	85330
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,17,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	84154
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	84076
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	84309
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	84232
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	84000
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	84457
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	84386
	.byte	4,2,35,24,0,14
	.word	85356
	.byte	34
	.byte	'Ifx_CPU_TPS_EXTIM',0,17,224,17,3
	.word	85505
	.byte	10
	.byte	'_Ifx_CPU_TR',0,17,239,17,25,8,13
	.byte	'EVT',0
	.word	84726
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	84662
	.byte	4,2,35,4,0,14
	.word	85537
	.byte	34
	.byte	'Ifx_CPU_TR',0,17,243,17,3
	.word	85582
	.byte	18,128,34
	.word	609
	.byte	19,255,33,0,18,236,253,2
	.word	609
	.byte	19,235,253,2,0,18,244,31
	.word	609
	.byte	19,243,31,0,18,128,1
	.word	84790
	.byte	19,7,0,14
	.word	85642
	.byte	18,232,1
	.word	609
	.byte	19,231,1,0,18,128,48
	.word	609
	.byte	19,255,47,0,18,128,3
	.word	84892
	.byte	19,31,0,14
	.word	85679
	.byte	18,160,39
	.word	609
	.byte	19,159,39,0,18,208,223,1
	.word	609
	.byte	19,207,223,1,0,18,248,1
	.word	609
	.byte	19,247,1,0,18,244,29
	.word	609
	.byte	19,243,29,0,18,188,3
	.word	609
	.byte	19,187,3,0,18,232,3
	.word	609
	.byte	19,231,3,0,18,252,23
	.word	609
	.byte	19,251,23,0,14
	.word	84981
	.byte	18,228,63
	.word	609
	.byte	19,227,63,0,18,144,1
	.word	85137
	.byte	19,17,0,14
	.word	85789
	.byte	18,240,30
	.word	609
	.byte	19,239,30,0,18,80
	.word	85205
	.byte	19,9,0,14
	.word	85815
	.byte	18,176,31
	.word	609
	.byte	19,175,31,0,18,152,7
	.word	609
	.byte	19,151,7,0,14
	.word	85282
	.byte	18,48
	.word	609
	.byte	19,47,0,14
	.word	85356
	.byte	18,164,23
	.word	609
	.byte	19,163,23,0,18,64
	.word	85537
	.byte	19,7,0,14
	.word	85881
	.byte	18,192,23
	.word	609
	.byte	19,191,23,0,18,28
	.word	609
	.byte	19,27,0,18,180,1
	.word	609
	.byte	19,179,1,0,18,172,1
	.word	609
	.byte	19,171,1,0,18,64
	.word	79150
	.byte	19,15,0,18,64
	.word	609
	.byte	19,63,0,18,64
	.word	78137
	.byte	19,15,0,10
	.byte	'_Ifx_CPU',0,17,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	85607
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	80739
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	80806
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	80873
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	80940
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	81007
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	85618
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	81640
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	81703
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	81766
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	85631
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	85652
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	5021
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	83584
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	83663
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	5021
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	83584
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	83663
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	5021
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	83584
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	83663
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	5021
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	83584
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	83663
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	5021
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	83584
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	83663
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	5021
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	83584
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	83663
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	5021
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	83584
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	83663
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	5021
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	83584
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	83663
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	83368
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	83444
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	5021
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	81892
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	81968
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	85657
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	80094
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	80168
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	79854
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	80014
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	80094
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	80168
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	79854
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	80014
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	80094
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	80168
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	79854
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	80014
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	80094
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	80168
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	79854
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	80014
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	80094
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	80168
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	79854
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	80014
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	80094
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	80168
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	79854
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	80014
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	80094
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	80168
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	79854
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	80014
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	80094
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	80168
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	79854
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	80014
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	5021
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	79774
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	79934
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	5021
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	79774
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	79934
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	5021
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	79774
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	79934
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	5021
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	79774
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	79934
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	5021
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	79774
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	79934
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	5021
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	79774
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	79934
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	5021
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	79774
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	79934
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	5021
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	79774
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	79934
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	85668
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	82233
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	5361
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	85689
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	85694
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	83305
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	85705
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	83869
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	85718
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	82732
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	82794
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	82856
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	85729
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	79461
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	5021
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	83520
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	80553
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	3201
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	79209
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	79585
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	79648
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	79711
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	4392
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	79398
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	85740
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	82918
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	82418
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	82481
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	82355
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	82606
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	82669
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	85751
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	78642
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	85762
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	85773
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	85778
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	85799
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	85804
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	85824
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	85829
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	78961
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	78961
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	78961
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	78961
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	80303
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	80303
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	80303
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	80303
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	80491
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	80491
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	80491
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	80491
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	17164
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	78961
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	78961
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	5021
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	80303
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	80303
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	5021
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	80491
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	80491
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	85840
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	85851
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	85856
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	85865
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	85870
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	85890
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	85895
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	78579
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	78517
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	81496
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	82044
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	82107
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	82170
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	85657
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	79271
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	3201
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	80615
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	79023
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	83742
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	85906
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	84596
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	5361
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	80242
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	79524
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	79334
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	85915
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	82544
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	82980
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	82295
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	5021
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	83805
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	78897
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	78706
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	78196
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	78456
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	81579
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	27162
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	5021
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	80678
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	81831
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	17164
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	79086
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	85926
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	85937
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	85946
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	85955
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	85946
	.byte	64,4,35,192,255,7,0,14
	.word	85964
	.byte	34
	.byte	'Ifx_CPU',0,17,210,19,3
	.word	91062
	.byte	15,6,124,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_2',0,2,16
	.byte	'IfxCpu_Id_3',0,3,16
	.byte	'IfxCpu_Id_4',0,4,16
	.byte	'IfxCpu_Id_6',0,6,16
	.byte	'IfxCpu_Id_none',0,7,0,34
	.byte	'IfxCpu_Id',0,6,133,1,3
	.word	91084
	.byte	34
	.byte	'IfxCpu_ResourceCpu',0,6,170,1,3
	.word	1623
	.byte	34
	.byte	'Ifx_SRC_SRCR_Bits',0,11,85,3
	.word	9961
	.byte	34
	.byte	'Ifx_SRC_SRCR',0,11,98,3
	.word	10251
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,11,110,25,4,13
	.byte	'SB',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	91285
	.byte	34
	.byte	'Ifx_SRC_CPU_CPU',0,11,113,3
	.word	91320
	.byte	18,24
	.word	91285
	.byte	19,5,0,14
	.word	91349
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,11,128,1,25,24,13
	.byte	'CPU',0
	.word	91358
	.byte	24,2,35,0,0,14
	.word	91363
	.byte	34
	.byte	'Ifx_SRC_CPU',0,11,131,1,3
	.word	91396
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,11,146,1,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	91422
	.byte	34
	.byte	'Ifx_SRC_AGBT_AGBT',0,11,149,1,3
	.word	91460
	.byte	18,4
	.word	91422
	.byte	19,0,0,14
	.word	91492
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,11,164,1,25,4,13
	.byte	'AGBT',0
	.word	91501
	.byte	4,2,35,0,0,14
	.word	91506
	.byte	34
	.byte	'Ifx_SRC_AGBT',0,11,167,1,3
	.word	91541
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,11,182,1,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	91568
	.byte	34
	.byte	'Ifx_SRC_XBAR_XBAR',0,11,185,1,3
	.word	91606
	.byte	18,12
	.word	91568
	.byte	19,2,0,14
	.word	91638
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,11,200,1,25,12,13
	.byte	'XBAR',0
	.word	91647
	.byte	12,2,35,0,0,14
	.word	91652
	.byte	34
	.byte	'Ifx_SRC_XBAR',0,11,203,1,3
	.word	91687
	.byte	18,8
	.word	10251
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,11,218,1,25,8,13
	.byte	'SR',0
	.word	91714
	.byte	8,2,35,0,0,14
	.word	91723
	.byte	34
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,11,221,1,3
	.word	91769
	.byte	14
	.word	91723
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,11,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	91809
	.byte	8,2,35,0,0,14
	.word	91814
	.byte	34
	.byte	'Ifx_SRC_CERBERUS',0,11,239,1,3
	.word	91857
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,11,254,1,25,12,13
	.byte	'TX',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,8,0,14
	.word	91888
	.byte	34
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,11,131,2,3
	.word	91955
	.byte	18,144,1
	.word	91888
	.byte	19,11,0,14
	.word	91991
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,11,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	92001
	.byte	144,1,2,35,0,0,14
	.word	92006
	.byte	34
	.byte	'Ifx_SRC_ASCLIN',0,11,149,2,3
	.word	92047
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,11,164,2,25,20,13
	.byte	'TX',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	10251
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	10251
	.byte	4,2,35,16,0,14
	.word	92076
	.byte	34
	.byte	'Ifx_SRC_QSPI_QSPI',0,11,171,2,3
	.word	92162
	.byte	18,120
	.word	92076
	.byte	19,5,0,14
	.word	92194
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,11,186,2,25,120,13
	.byte	'QSPI',0
	.word	92203
	.byte	120,2,35,0,0,14
	.word	92208
	.byte	34
	.byte	'Ifx_SRC_QSPI',0,11,189,2,3
	.word	92243
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,11,204,2,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	92270
	.byte	34
	.byte	'Ifx_SRC_HSCT_HSCT',0,11,207,2,3
	.word	92308
	.byte	18,8
	.word	92270
	.byte	19,1,0,14
	.word	92340
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,11,222,2,25,8,13
	.byte	'HSCT',0
	.word	92349
	.byte	8,2,35,0,0,14
	.word	92354
	.byte	34
	.byte	'Ifx_SRC_HSCT',0,11,225,2,3
	.word	92389
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,11,240,2,25,16,13
	.byte	'COK',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	10251
	.byte	4,2,35,12,0,14
	.word	92416
	.byte	34
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,11,246,2,3
	.word	92497
	.byte	18,64
	.word	92416
	.byte	19,3,0,14
	.word	92532
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,11,133,3,25,68,13
	.byte	'CH',0
	.word	92541
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	10251
	.byte	4,2,35,64,0,14
	.word	92546
	.byte	34
	.byte	'Ifx_SRC_HSSL_HSSL',0,11,137,3,3
	.word	92597
	.byte	18,136,1
	.word	92546
	.byte	19,1,0,14
	.word	92629
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,11,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	92639
	.byte	136,1,2,35,0,0,14
	.word	92644
	.byte	34
	.byte	'Ifx_SRC_HSSL',0,11,155,3,3
	.word	92681
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,11,170,3,25,16,13
	.byte	'DTR',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3201
	.byte	4,2,35,12,0,14
	.word	92708
	.byte	34
	.byte	'Ifx_SRC_I2C_I2C',0,11,176,3,3
	.word	92789
	.byte	18,32
	.word	92708
	.byte	19,1,0,14
	.word	92819
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,11,191,3,25,32,13
	.byte	'I2C',0
	.word	92828
	.byte	32,2,35,0,0,14
	.word	92833
	.byte	34
	.byte	'Ifx_SRC_I2C',0,11,194,3,3
	.word	92866
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,11,209,3,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	92892
	.byte	34
	.byte	'Ifx_SRC_SENT_SENT',0,11,212,3,3
	.word	92930
	.byte	18,40
	.word	92892
	.byte	19,9,0,14
	.word	92962
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,11,227,3,25,40,13
	.byte	'SENT',0
	.word	92971
	.byte	40,2,35,0,0,14
	.word	92976
	.byte	34
	.byte	'Ifx_SRC_SENT',0,11,230,3,3
	.word	93011
	.byte	18,20
	.word	10251
	.byte	19,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,11,245,3,25,20,13
	.byte	'SR',0
	.word	93038
	.byte	20,2,35,0,0,14
	.word	93047
	.byte	34
	.byte	'Ifx_SRC_MSC_MSC',0,11,248,3,3
	.word	93083
	.byte	18,80
	.word	93047
	.byte	19,3,0,14
	.word	93113
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,11,135,4,25,80,13
	.byte	'MSC',0
	.word	93122
	.byte	80,2,35,0,0,14
	.word	93127
	.byte	34
	.byte	'Ifx_SRC_MSC',0,11,138,4,3
	.word	93160
	.byte	18,16
	.word	10251
	.byte	19,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,11,153,4,25,16,13
	.byte	'SR',0
	.word	93186
	.byte	16,2,35,0,0,14
	.word	93195
	.byte	34
	.byte	'Ifx_SRC_CCU6_CCU',0,11,156,4,3
	.word	93232
	.byte	18,32
	.word	93195
	.byte	19,1,0,14
	.word	93263
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,11,171,4,25,32,13
	.byte	'CCU',0
	.word	93272
	.byte	32,2,35,0,0,14
	.word	93277
	.byte	34
	.byte	'Ifx_SRC_CCU6',0,11,174,4,3
	.word	93311
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,11,189,4,25,24,13
	.byte	'CIRQ',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	10251
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	10251
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	10251
	.byte	4,2,35,20,0,14
	.word	93338
	.byte	34
	.byte	'Ifx_SRC_GPT12_GPT12',0,11,197,4,3
	.word	93440
	.byte	18,24
	.word	93338
	.byte	19,0,0,14
	.word	93474
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,11,212,4,25,24,13
	.byte	'GPT12',0
	.word	93483
	.byte	24,2,35,0,0,14
	.word	93488
	.byte	34
	.byte	'Ifx_SRC_GPT12',0,11,215,4,3
	.word	93525
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,11,230,4,25,8,13
	.byte	'SR',0
	.word	91714
	.byte	8,2,35,0,0,14
	.word	93553
	.byte	34
	.byte	'Ifx_SRC_STM_STM',0,11,233,4,3
	.word	93589
	.byte	18,48
	.word	93553
	.byte	19,5,0,14
	.word	93619
	.byte	10
	.byte	'_Ifx_SRC_STM',0,11,248,4,25,48,13
	.byte	'STM',0
	.word	93628
	.byte	48,2,35,0,0,14
	.word	93633
	.byte	34
	.byte	'Ifx_SRC_STM',0,11,251,4,3
	.word	93666
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,11,138,5,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	93692
	.byte	34
	.byte	'Ifx_SRC_FCE_FCE0',0,11,141,5,3
	.word	93729
	.byte	14
	.word	93692
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,11,156,5,25,4,13
	.byte	'FCE0',0
	.word	93760
	.byte	4,2,35,0,0,14
	.word	93765
	.byte	34
	.byte	'Ifx_SRC_FCE',0,11,159,5,3
	.word	93799
	.byte	18,32
	.word	609
	.byte	19,31,0,18,128,4
	.word	10251
	.byte	19,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,11,174,5,25,176,4,13
	.byte	'ERR',0
	.word	93186
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	93825
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	93834
	.byte	128,4,2,35,48,0,14
	.word	93844
	.byte	34
	.byte	'Ifx_SRC_DMA_DMA',0,11,179,5,3
	.word	93916
	.byte	18,176,4
	.word	93844
	.byte	19,0,0,14
	.word	93946
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,11,194,5,25,176,4,13
	.byte	'DMA',0
	.word	93956
	.byte	176,4,2,35,0,0,14
	.word	93961
	.byte	34
	.byte	'Ifx_SRC_DMA',0,11,197,5,3
	.word	93996
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,11,212,5,25,8,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	10251
	.byte	4,2,35,4,0,14
	.word	94022
	.byte	34
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,11,216,5,3
	.word	94076
	.byte	18,8
	.word	94022
	.byte	19,0,0,14
	.word	94110
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,11,231,5,25,8,13
	.byte	'SDMMC',0
	.word	94119
	.byte	8,2,35,0,0,14
	.word	94124
	.byte	34
	.byte	'Ifx_SRC_SDMMC',0,11,234,5,3
	.word	94161
	.byte	18,40
	.word	10251
	.byte	19,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,11,249,5,25,40,13
	.byte	'SR',0
	.word	94189
	.byte	40,2,35,0,0,14
	.word	94198
	.byte	34
	.byte	'Ifx_SRC_GETH_GETH',0,11,252,5,3
	.word	94236
	.byte	18,40
	.word	94198
	.byte	19,0,0,14
	.word	94268
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,11,139,6,25,40,13
	.byte	'GETH',0
	.word	94277
	.byte	40,2,35,0,0,14
	.word	94282
	.byte	34
	.byte	'Ifx_SRC_GETH',0,11,142,6,3
	.word	94317
	.byte	18,64
	.word	10251
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,11,157,6,25,64,13
	.byte	'INT',0
	.word	94344
	.byte	64,2,35,0,0,14
	.word	94353
	.byte	34
	.byte	'Ifx_SRC_CAN_CAN',0,11,160,6,3
	.word	94390
	.byte	18,192,1
	.word	94353
	.byte	19,2,0,14
	.word	94420
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,11,175,6,25,192,1,13
	.byte	'CAN',0
	.word	94430
	.byte	192,1,2,35,0,0,14
	.word	94435
	.byte	34
	.byte	'Ifx_SRC_CAN',0,11,178,6,3
	.word	94470
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,11,193,6,25,16,13
	.byte	'SR0',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10251
	.byte	4,2,35,12,0,14
	.word	94496
	.byte	34
	.byte	'Ifx_SRC_VADC_G',0,11,199,6,3
	.word	94571
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,11,214,6,25,4,13
	.byte	'SR0',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	94600
	.byte	34
	.byte	'Ifx_SRC_VADC_FC',0,11,217,6,3
	.word	94637
	.byte	18,192,1
	.word	94496
	.byte	19,11,0,14
	.word	94667
	.byte	18,32
	.word	94600
	.byte	19,7,0,14
	.word	94682
	.byte	18,32
	.word	94496
	.byte	19,1,0,14
	.word	94696
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,11,233,6,25,128,2,13
	.byte	'G',0
	.word	94677
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	94691
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	94705
	.byte	32,3,35,224,1,0,14
	.word	94710
	.byte	34
	.byte	'Ifx_SRC_VADC',0,11,238,6,3
	.word	94770
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,11,253,6,25,8,13
	.byte	'SRM',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	10251
	.byte	4,2,35,4,0,14
	.word	94797
	.byte	34
	.byte	'Ifx_SRC_DSADC_DSADC',0,11,129,7,3
	.word	94851
	.byte	18,112
	.word	94797
	.byte	19,13,0,14
	.word	94885
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,11,144,7,25,112,13
	.byte	'DSADC',0
	.word	94894
	.byte	112,2,35,0,0,14
	.word	94899
	.byte	34
	.byte	'Ifx_SRC_DSADC',0,11,147,7,3
	.word	94936
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,11,162,7,25,48,13
	.byte	'INT0',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	10251
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	10251
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	10251
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	10251
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	10251
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	10251
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	10251
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	5021
	.byte	8,2,35,40,0,14
	.word	94964
	.byte	34
	.byte	'Ifx_SRC_ERAY_ERAY',0,11,175,7,3
	.word	95159
	.byte	18,96
	.word	94964
	.byte	19,1,0,14
	.word	95191
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,11,190,7,25,96,13
	.byte	'ERAY',0
	.word	95200
	.byte	96,2,35,0,0,14
	.word	95205
	.byte	34
	.byte	'Ifx_SRC_ERAY',0,11,193,7,3
	.word	95240
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,11,208,7,25,8,13
	.byte	'HSM',0
	.word	91714
	.byte	8,2,35,0,0,14
	.word	95267
	.byte	34
	.byte	'Ifx_SRC_HSM_HSM',0,11,211,7,3
	.word	95304
	.byte	18,8
	.word	95267
	.byte	19,0,0,14
	.word	95334
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,11,226,7,25,8,13
	.byte	'HSM',0
	.word	95343
	.byte	8,2,35,0,0,14
	.word	95348
	.byte	34
	.byte	'Ifx_SRC_HSM',0,11,229,7,3
	.word	95381
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,11,244,7,25,16,13
	.byte	'SCUERU',0
	.word	93186
	.byte	16,2,35,0,0,14
	.word	95407
	.byte	34
	.byte	'Ifx_SRC_SCU',0,11,247,7,3
	.word	95443
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,11,134,8,25,4,13
	.byte	'SR',0
	.word	10251
	.byte	4,2,35,0,0,14
	.word	95469
	.byte	34
	.byte	'Ifx_SRC_PMS_PMS',0,11,137,8,3
	.word	95505
	.byte	18,16
	.word	95469
	.byte	19,3,0,14
	.word	95535
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,11,152,8,25,16,13
	.byte	'PMS',0
	.word	95544
	.byte	16,2,35,0,0,14
	.word	95549
	.byte	34
	.byte	'Ifx_SRC_PMS',0,11,155,8,3
	.word	95582
	.byte	18,12
	.word	10251
	.byte	19,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,11,170,8,25,12,13
	.byte	'SR',0
	.word	95608
	.byte	12,2,35,0,0,14
	.word	95617
	.byte	34
	.byte	'Ifx_SRC_SMU_SMU',0,11,173,8,3
	.word	95653
	.byte	18,12
	.word	95617
	.byte	19,0,0,14
	.word	95683
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,11,188,8,25,12,13
	.byte	'SMU',0
	.word	95692
	.byte	12,2,35,0,0,14
	.word	95697
	.byte	34
	.byte	'Ifx_SRC_SMU',0,11,191,8,3
	.word	95730
	.byte	18,32
	.word	10251
	.byte	19,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,11,206,8,25,32,13
	.byte	'SR',0
	.word	95756
	.byte	32,2,35,0,0,14
	.word	95765
	.byte	34
	.byte	'Ifx_SRC_PSI5_PSI5',0,11,209,8,3
	.word	95803
	.byte	18,32
	.word	95765
	.byte	19,0,0,14
	.word	95835
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,11,224,8,25,32,13
	.byte	'PSI5',0
	.word	95844
	.byte	32,2,35,0,0,14
	.word	95849
	.byte	34
	.byte	'Ifx_SRC_PSI5',0,11,227,8,3
	.word	95884
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,11,242,8,25,12,13
	.byte	'BFR',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,8,0,14
	.word	95911
	.byte	34
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,11,247,8,3
	.word	95980
	.byte	14
	.word	95911
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,11,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	96015
	.byte	12,2,35,0,0,14
	.word	96020
	.byte	34
	.byte	'Ifx_SRC_HSPDM',0,11,137,9,3
	.word	96058
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,11,152,9,25,24,13
	.byte	'LI0',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	10251
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	10251
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	10251
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	10251
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,20,0,14
	.word	96086
	.byte	34
	.byte	'Ifx_SRC_DAM_DAM',0,11,160,9,3
	.word	96187
	.byte	18,48
	.word	96086
	.byte	19,1,0,14
	.word	96217
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,11,175,9,25,48,13
	.byte	'DAM',0
	.word	96226
	.byte	48,2,35,0,0,14
	.word	96231
	.byte	34
	.byte	'Ifx_SRC_DAM',0,11,178,9,3
	.word	96264
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,11,193,9,25,32,13
	.byte	'SR',0
	.word	95756
	.byte	32,2,35,0,0,14
	.word	96290
	.byte	34
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,11,196,9,3
	.word	96330
	.byte	18,32
	.word	96290
	.byte	19,0,0,14
	.word	96364
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,11,211,9,25,32,13
	.byte	'PSI5S',0
	.word	96373
	.byte	32,2,35,0,0,14
	.word	96378
	.byte	34
	.byte	'Ifx_SRC_PSI5S',0,11,214,9,3
	.word	96415
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,11,229,9,25,8,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	10251
	.byte	4,2,35,4,0,14
	.word	96443
	.byte	34
	.byte	'Ifx_SRC_RIF_RIF',0,11,233,9,3
	.word	96493
	.byte	18,16
	.word	96443
	.byte	19,1,0,14
	.word	96523
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,11,248,9,25,16,13
	.byte	'RIF',0
	.word	96532
	.byte	16,2,35,0,0,14
	.word	96537
	.byte	34
	.byte	'Ifx_SRC_RIF',0,11,251,9,3
	.word	96570
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,11,138,10,25,8,13
	.byte	'INT',0
	.word	10251
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10251
	.byte	4,2,35,4,0,14
	.word	96596
	.byte	34
	.byte	'Ifx_SRC_SPU_SPU',0,11,142,10,3
	.word	96646
	.byte	18,16
	.word	96596
	.byte	19,1,0,14
	.word	96676
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,11,157,10,25,16,13
	.byte	'SPU',0
	.word	96685
	.byte	16,2,35,0,0,14
	.word	96690
	.byte	34
	.byte	'Ifx_SRC_SPU',0,11,160,10,3
	.word	96723
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,11,175,10,25,32,13
	.byte	'SR',0
	.word	95756
	.byte	32,2,35,0,0,14
	.word	96749
	.byte	34
	.byte	'Ifx_SRC_GPSR_GPSR',0,11,178,10,3
	.word	96787
	.byte	18,192,1
	.word	96749
	.byte	19,5,0,14
	.word	96819
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,11,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	96829
	.byte	192,1,2,35,0,0,14
	.word	96834
	.byte	34
	.byte	'Ifx_SRC_GPSR',0,11,196,10,3
	.word	96871
	.byte	15,5,141,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,34
	.byte	'IfxCpu_CounterMode',0,5,145,1,3
	.word	96898
	.byte	33,5,198,1,9,6,13
	.byte	'counter',0
	.word	1963
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	609
	.byte	1,2,35,4,0,34
	.byte	'IfxCpu_Counter',0,5,202,1,3
	.word	96987
	.byte	33,5,210,1,9,32,13
	.byte	'instruction',0
	.word	96987
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	96987
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	96987
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	96987
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	96987
	.byte	6,2,35,24,0,34
	.byte	'IfxCpu_Perf',0,5,217,1,3
	.word	97053
	.byte	34
	.byte	'Ifx_P_ACCEN0_Bits',0,8,102,3
	.word	8549
	.byte	34
	.byte	'Ifx_P_ACCEN1_Bits',0,8,108,3
	.word	8462
	.byte	34
	.byte	'Ifx_P_ESR_Bits',0,8,130,1,3
	.word	5030
	.byte	34
	.byte	'Ifx_P_ID_Bits',0,8,138,1,3
	.word	3081
	.byte	34
	.byte	'Ifx_P_IN_Bits',0,8,160,1,3
	.word	4077
	.byte	34
	.byte	'Ifx_P_IOCR0_Bits',0,8,173,1,3
	.word	3210
	.byte	34
	.byte	'Ifx_P_IOCR12_Bits',0,8,186,1,3
	.word	3857
	.byte	34
	.byte	'Ifx_P_IOCR4_Bits',0,8,199,1,3
	.word	3425
	.byte	34
	.byte	'Ifx_P_IOCR8_Bits',0,8,212,1,3
	.word	3640
	.byte	34
	.byte	'Ifx_P_LPCR_Bits',0,8,231,1,3
	.word	8124
	.byte	34
	.byte	'Ifx_P_OMCR_Bits',0,8,253,1,3
	.word	7776
	.byte	34
	.byte	'Ifx_P_OMCR0_Bits',0,8,136,2,3
	.word	6763
	.byte	34
	.byte	'Ifx_P_OMCR12_Bits',0,8,146,2,3
	.word	7287
	.byte	34
	.byte	'Ifx_P_OMCR4_Bits',0,8,157,2,3
	.word	6937
	.byte	34
	.byte	'Ifx_P_OMCR8_Bits',0,8,168,2,3
	.word	7111
	.byte	34
	.byte	'Ifx_P_OMR_Bits',0,8,205,2,3
	.word	2510
	.byte	34
	.byte	'Ifx_P_OMSR_Bits',0,8,227,2,3
	.word	7443
	.byte	34
	.byte	'Ifx_P_OMSR0_Bits',0,8,237,2,3
	.word	6100
	.byte	34
	.byte	'Ifx_P_OMSR12_Bits',0,8,248,2,3
	.word	6588
	.byte	34
	.byte	'Ifx_P_OMSR4_Bits',0,8,131,3,3
	.word	6247
	.byte	34
	.byte	'Ifx_P_OMSR8_Bits',0,8,142,3,3
	.word	6416
	.byte	34
	.byte	'Ifx_P_OUT_Bits',0,8,164,3,3
	.word	2194
	.byte	34
	.byte	'Ifx_P_PCSR_Bits',0,8,187,3,3
	.word	5736
	.byte	34
	.byte	'Ifx_P_PDISC_Bits',0,8,209,3,3
	.word	5370
	.byte	34
	.byte	'Ifx_P_PDR0_Bits',0,8,230,3,3
	.word	4401
	.byte	34
	.byte	'Ifx_P_PDR1_Bits',0,8,251,3,3
	.word	4705
	.byte	34
	.byte	'Ifx_P_ACCEN0',0,8,136,4,3
	.word	9076
	.byte	34
	.byte	'Ifx_P_ACCEN1',0,8,144,4,3
	.word	8509
	.byte	34
	.byte	'Ifx_P_ESR',0,8,152,4,3
	.word	5321
	.byte	34
	.byte	'Ifx_P_ID',0,8,160,4,3
	.word	3161
	.byte	34
	.byte	'Ifx_P_IN',0,8,168,4,3
	.word	4352
	.byte	34
	.byte	'Ifx_P_IOCR0',0,8,176,4,3
	.word	3385
	.byte	34
	.byte	'Ifx_P_IOCR12',0,8,184,4,3
	.word	4037
	.byte	34
	.byte	'Ifx_P_IOCR4',0,8,192,4,3
	.word	3600
	.byte	34
	.byte	'Ifx_P_IOCR8',0,8,200,4,3
	.word	3817
	.byte	34
	.byte	'Ifx_P_LPCR',0,8,208,4,3
	.word	8404
	.byte	34
	.byte	'Ifx_P_OMCR',0,8,216,4,3
	.word	8084
	.byte	34
	.byte	'Ifx_P_OMCR0',0,8,224,4,3
	.word	6897
	.byte	34
	.byte	'Ifx_P_OMCR12',0,8,232,4,3
	.word	7403
	.byte	34
	.byte	'Ifx_P_OMCR4',0,8,240,4,3
	.word	7071
	.byte	34
	.byte	'Ifx_P_OMCR8',0,8,248,4,3
	.word	7247
	.byte	34
	.byte	'Ifx_P_OMR',0,8,128,5,3
	.word	3041
	.byte	34
	.byte	'Ifx_P_OMSR',0,8,136,5,3
	.word	7736
	.byte	34
	.byte	'Ifx_P_OMSR0',0,8,144,5,3
	.word	6207
	.byte	34
	.byte	'Ifx_P_OMSR12',0,8,152,5,3
	.word	6723
	.byte	34
	.byte	'Ifx_P_OMSR4',0,8,160,5,3
	.word	6376
	.byte	34
	.byte	'Ifx_P_OMSR8',0,8,168,5,3
	.word	6548
	.byte	34
	.byte	'Ifx_P_OUT',0,8,176,5,3
	.word	2470
	.byte	34
	.byte	'Ifx_P_PCSR',0,8,184,5,3
	.word	6060
	.byte	34
	.byte	'Ifx_P_PDISC',0,8,192,5,3
	.word	5696
	.byte	34
	.byte	'Ifx_P_PDR0',0,8,200,5,3
	.word	4665
	.byte	34
	.byte	'Ifx_P_PDR1',0,8,208,5,3
	.word	4981
	.byte	14
	.word	9116
	.byte	34
	.byte	'Ifx_P',0,8,128,6,3
	.word	98365
	.byte	15,7,73,9,1,16
	.byte	'IfxPort_ControlledBy_port',0,0,16
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,34
	.byte	'IfxPort_ControlledBy',0,7,77,3
	.word	98385
	.byte	15,7,81,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0,34
	.byte	'IfxPort_InputMode',0,7,87,3
	.word	98476
	.byte	15,7,91,9,1,16
	.byte	'IfxPort_LvdsMode_high',0,0,16
	.byte	'IfxPort_LvdsMode_medium',0,1,0,34
	.byte	'IfxPort_LvdsMode',0,7,95,3
	.word	98627
	.byte	34
	.byte	'IfxPort_Mode',0,7,122,3
	.word	19501
	.byte	15,7,126,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,34
	.byte	'IfxPort_OutputIdx',0,7,136,1,3
	.word	98729
	.byte	15,7,140,1,9,1,16
	.byte	'IfxPort_OutputMode_none',0,0,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,34
	.byte	'IfxPort_OutputMode',0,7,145,1,3
	.word	98973
	.byte	15,7,151,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,34
	.byte	'IfxPort_PadDriver',0,7,165,1,3
	.word	99097
	.byte	15,7,169,1,9,1,16
	.byte	'IfxPort_PadSupply_3v',0,0,16
	.byte	'IfxPort_PadSupply_5v',0,1,0,34
	.byte	'IfxPort_PadSupply',0,7,173,1,3
	.word	99547
	.byte	15,7,177,1,9,1,16
	.byte	'IfxPort_PinFunctionMode_digital',0,0,16
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,34
	.byte	'IfxPort_PinFunctionMode',0,7,181,1,3
	.word	99627
	.byte	34
	.byte	'IfxPort_State',0,7,193,1,3
	.word	9696
	.byte	33,7,246,1,9,8,13
	.byte	'port',0
	.word	9691
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	609
	.byte	1,2,35,4,0,34
	.byte	'IfxPort_Pin',0,7,250,1,3
	.word	99757
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,23,68,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SMU_ACCEN0_Bits',0,23,102,3
	.word	99817
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,23,105,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_SMU_ACCEN1_Bits',0,23,108,3
	.word	100374
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,23,111,16,4,11
	.byte	'DF0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SMU_AD_Bits',0,23,145,1,3
	.word	100451
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,23,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	609
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	609
	.byte	4,0,2,35,3,0,34
	.byte	'Ifx_SMU_AEX_Bits',0,23,176,1,3
	.word	101001
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,23,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_SMU_AEXCLR_Bits',0,23,207,1,3
	.word	101558
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,23,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	609
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	626
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	626
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_SMU_AFCNT_Bits',0,23,217,1,3
	.word	102154
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,23,220,1,16,4,11
	.byte	'SF0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_SMU_AG_Bits',0,23,254,1,3
	.word	102294
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,23,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	457
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	457
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	457
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	457
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	2,0,2,35,0,0,34
	.byte	'Ifx_SMU_AGC_Bits',0,23,142,2,3
	.word	102845
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,23,145,2,16,4,11
	.byte	'CF0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_SMU_AGCF_Bits',0,23,179,2,3
	.word	103107
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,23,182,2,16,4,11
	.byte	'FE0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_SMU_AGFSP_Bits',0,23,216,2,3
	.word	103662
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,23,219,2,16,4,11
	.byte	'DISR',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	28,0,2,35,0,0,34
	.byte	'Ifx_SMU_CLC_Bits',0,23,226,2,3
	.word	104219
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,23,229,2,16,4,11
	.byte	'CMD',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_SMU_CMD_Bits',0,23,234,2,3
	.word	104362
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,23,237,2,16,4,11
	.byte	'SSM',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	434
	.byte	30,0,2,35,0,0,34
	.byte	'Ifx_SMU_DBG_Bits',0,23,241,2,3
	.word	104465
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,23,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	457
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	457
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	457
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	457
	.byte	10,0,2,35,0,0,34
	.byte	'Ifx_SMU_FSP_Bits',0,23,252,2,3
	.word	104553
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,23,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_SMU_ID_Bits',0,23,132,3,3
	.word	104708
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,23,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	457
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_SMU_KEYS_Bits',0,23,140,3,3
	.word	104818
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,23,143,3,16,4,11
	.byte	'TGS',0,1
	.word	609
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	434
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	609
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	609
	.byte	2,0,2,35,3,0,34
	.byte	'Ifx_SMU_OCS_Bits',0,23,153,3,3
	.word	104930
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,23,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	457
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	457
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	9,0,2,35,0,0,34
	.byte	'Ifx_SMU_PCTL_Bits',0,23,167,3,3
	.word	105122
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,23,170,3,16,4,11
	.byte	'TE0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_SMU_RMCTL_Bits',0,23,204,3,3
	.word	105353
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,23,207,3,16,4,11
	.byte	'EF0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_SMU_RMEF_Bits',0,23,241,3,3
	.word	106057
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,23,244,3,16,4,11
	.byte	'STS0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_SMU_RMSTS_Bits',0,23,150,4,3
	.word	106759
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,23,153,4,16,4,11
	.byte	'GID0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	457
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	457
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,34
	.byte	'Ifx_SMU_RTAC00_Bits',0,23,161,4,3
	.word	107474
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,23,164,4,16,4,11
	.byte	'GID2',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	457
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	457
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,34
	.byte	'Ifx_SMU_RTAC01_Bits',0,23,172,4,3
	.word	107642
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,23,175,4,16,4,11
	.byte	'GID0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	457
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	457
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,34
	.byte	'Ifx_SMU_RTAC10_Bits',0,23,183,4,3
	.word	107810
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,23,186,4,16,4,11
	.byte	'GID2',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	457
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	457
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	457
	.byte	7,0,2,35,0,0,34
	.byte	'Ifx_SMU_RTAC11_Bits',0,23,194,4,3
	.word	107978
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,23,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	457
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	457
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_SMU_RTC_Bits',0,23,203,4,3
	.word	108146
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,23,206,4,16,4,11
	.byte	'CMD',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	457
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,34
	.byte	'Ifx_SMU_STS_Bits',0,23,220,4,3
	.word	108266
	.byte	12,23,228,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99817
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_ACCEN0',0,23,233,4,3
	.word	108521
	.byte	12,23,236,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100374
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_ACCEN1',0,23,241,4,3
	.word	108585
	.byte	12,23,244,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100451
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_AD',0,23,249,4,3
	.word	108649
	.byte	12,23,252,4,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101001
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_AEX',0,23,129,5,3
	.word	108709
	.byte	12,23,132,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101558
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_AEXCLR',0,23,137,5,3
	.word	108770
	.byte	12,23,140,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102154
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_AFCNT',0,23,145,5,3
	.word	108834
	.byte	12,23,148,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102294
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_AG',0,23,153,5,3
	.word	108897
	.byte	12,23,156,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102845
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_AGC',0,23,161,5,3
	.word	108957
	.byte	12,23,164,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103107
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_AGCF',0,23,169,5,3
	.word	109018
	.byte	12,23,172,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103662
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_AGFSP',0,23,177,5,3
	.word	109080
	.byte	12,23,180,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104219
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_CLC',0,23,185,5,3
	.word	109143
	.byte	12,23,188,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104362
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_CMD',0,23,193,5,3
	.word	109204
	.byte	12,23,196,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104465
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_DBG',0,23,201,5,3
	.word	109265
	.byte	12,23,204,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104553
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_FSP',0,23,209,5,3
	.word	109326
	.byte	12,23,212,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104708
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_ID',0,23,217,5,3
	.word	109387
	.byte	12,23,220,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104818
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_KEYS',0,23,225,5,3
	.word	109447
	.byte	12,23,228,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104930
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_OCS',0,23,233,5,3
	.word	109509
	.byte	12,23,236,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105122
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_PCTL',0,23,241,5,3
	.word	109570
	.byte	12,23,244,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105353
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_RMCTL',0,23,249,5,3
	.word	109632
	.byte	12,23,252,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106057
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_RMEF',0,23,129,6,3
	.word	109695
	.byte	12,23,132,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106759
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_RMSTS',0,23,137,6,3
	.word	109757
	.byte	12,23,140,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107474
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_RTAC00',0,23,145,6,3
	.word	109820
	.byte	12,23,148,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107642
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_RTAC01',0,23,153,6,3
	.word	109884
	.byte	12,23,156,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107810
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_RTAC10',0,23,161,6,3
	.word	109948
	.byte	12,23,164,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107978
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_RTAC11',0,23,169,6,3
	.word	110012
	.byte	12,23,172,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108146
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_RTC',0,23,177,6,3
	.word	110076
	.byte	12,23,180,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108266
	.byte	4,2,35,0,0,34
	.byte	'Ifx_SMU_STS',0,23,185,6,3
	.word	110137
	.byte	15,9,210,2,9,1,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,34
	.byte	'IfxScuCcu_LowPowerDivRatio',0,9,216,2,3
	.word	110198
	.byte	15,9,220,2,9,1,16
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,16
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,16
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,16
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,34
	.byte	'IfxScuCcu_ModulationAmplitude',0,9,229,2,3
	.word	110391
	.byte	15,9,254,3,9,1,16
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,16
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,16
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,34
	.byte	'IfxScuCcu_PllInputClockSelection',0,9,131,4,3
	.word	110692
	.byte	15,9,135,4,9,1,16
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,16
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,16
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,16
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,34
	.byte	'IfxScuCcu_Traprequest',0,9,141,4,3
	.word	110866
	.byte	15,9,147,4,9,1,16
	.byte	'IfxScuCcu_ModEn_disabled',0,0,16
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,34
	.byte	'IfxScuCcu_ModEn',0,9,151,4,3
	.word	111020
	.byte	33,9,162,4,9,6,13
	.byte	'pDivider',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	609
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	609
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	609
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	609
	.byte	1,2,35,4,0,34
	.byte	'IfxScuCcu_PerPllConfig',0,9,171,4,3
	.word	111105
	.byte	33,9,176,4,9,4,13
	.byte	'pDivider',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	609
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	609
	.byte	1,2,35,2,0,34
	.byte	'IfxScuCcu_SysPllConfig',0,9,181,4,3
	.word	111243
	.byte	33,9,189,4,9,8,13
	.byte	'value',0
	.word	1963
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1963
	.byte	4,2,35,4,0,34
	.byte	'IfxScuCcu_CcuconRegConfig',0,9,193,4,3
	.word	111337
	.byte	33,9,197,4,9,6,13
	.byte	'k2Step',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	230
	.byte	4,2,35,2,0,34
	.byte	'IfxScuCcu_PllStepConfig',0,9,201,4,3
	.word	111408
	.byte	33,9,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	1963
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	110692
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	111243
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	111105
	.byte	6,2,35,10,0,34
	.byte	'IfxScuCcu_pllsParameterConfig',0,9,211,4,3
	.word	111482
	.byte	33,9,219,4,9,8,13
	.byte	'value',0
	.word	1963
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1963
	.byte	4,2,35,4,0,34
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,9,223,4,3
	.word	111627
	.byte	33,9,231,4,9,80,13
	.byte	'ccucon0',0
	.word	111337
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	111337
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	111337
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	111337
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	111337
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	111337
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	111337
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	111337
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	111337
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	111337
	.byte	8,2,35,72,0,34
	.byte	'IfxScuCcu_ClockDistributionConfig',0,9,243,4,3
	.word	111703
	.byte	33,9,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	111482
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	230
	.byte	4,2,35,16,0,34
	.byte	'IfxScuCcu_InitialStepConfig',0,9,251,4,3
	.word	111925
	.byte	20
	.word	111408
	.byte	3
	.word	112011
	.byte	33,9,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	609
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	112016
	.byte	4,2,35,4,0,34
	.byte	'IfxScuCcu_PllThrottleConfig',0,9,131,5,3
	.word	112021
	.byte	33,9,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	111020
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	110391
	.byte	1,2,35,1,0,34
	.byte	'IfxScuCcu_Mod_Config',0,9,141,5,3
	.word	112103
	.byte	15,24,66,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_dma',0,1,16
	.byte	'IfxSrc_Tos_cpu1',0,2,16
	.byte	'IfxSrc_Tos_cpu2',0,3,16
	.byte	'IfxSrc_Tos_cpu3',0,4,16
	.byte	'IfxSrc_Tos_cpu4',0,5,16
	.byte	'IfxSrc_Tos_cpu5',0,6,0,34
	.byte	'IfxSrc_Tos',0,24,75,3
	.word	112177
	.byte	10
	.byte	'_Ifx_CBS_ACCEN0_Bits',0,25,68,16,4,11
	.byte	'EN0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	609
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	609
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	609
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	609
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	609
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	609
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	609
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	609
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	609
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	609
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	609
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_CBS_ACCEN0_Bits',0,25,102,3
	.word	112327
	.byte	10
	.byte	'_Ifx_CBS_ACCEN1_Bits',0,25,105,16,4,11
	.byte	'reserved_0',0,4
	.word	434
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CBS_ACCEN1_Bits',0,25,108,3
	.word	112884
	.byte	10
	.byte	'_Ifx_CBS_COMDATA_Bits',0,25,111,16,4,11
	.byte	'DATA',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CBS_COMDATA_Bits',0,25,114,3
	.word	112961
	.byte	10
	.byte	'_Ifx_CBS_ICTSA_Bits',0,25,117,16,4,11
	.byte	'ADDR',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CBS_ICTSA_Bits',0,25,120,3
	.word	113034
	.byte	10
	.byte	'_Ifx_CBS_ICTTA_Bits',0,25,123,16,4,11
	.byte	'ADDR',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CBS_ICTTA_Bits',0,25,126,3
	.word	113103
	.byte	10
	.byte	'_Ifx_CBS_IFSA_Bits',0,25,129,1,16,4,11
	.byte	'ADDR',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CBS_IFSA_Bits',0,25,132,1,3
	.word	113172
	.byte	10
	.byte	'_Ifx_CBS_IFSC_Bits',0,25,135,1,16,4,11
	.byte	'GO',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'OTGS',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'MODE',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'PRIO',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'RSREP',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'BM0',0,4
	.word	457
	.byte	2,14,2,35,0,11
	.byte	'BM1',0,4
	.word	457
	.byte	2,12,2,35,0,11
	.byte	'BM2',0,4
	.word	457
	.byte	2,10,2,35,0,11
	.byte	'BM3',0,4
	.word	457
	.byte	2,8,2,35,0,11
	.byte	'BM4',0,4
	.word	457
	.byte	2,6,2,35,0,11
	.byte	'BM5',0,4
	.word	457
	.byte	2,4,2,35,0,11
	.byte	'BM6',0,4
	.word	457
	.byte	2,2,2,35,0,11
	.byte	'BM7',0,4
	.word	457
	.byte	2,0,2,35,0,0,34
	.byte	'Ifx_CBS_IFSC_Bits',0,25,152,1,3
	.word	113241
	.byte	10
	.byte	'_Ifx_CBS_INTMOD_Bits',0,25,155,1,16,4,11
	.byte	'SET_CRS',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'SET_CWS',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'SET_CS',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'CLR_CS',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'CHANNEL_P',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'CHANNEL',0,4
	.word	457
	.byte	3,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	8,16,2,35,0,11
	.byte	'SET_INT_MOD',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'SET_INT_TRC',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'CLR_INT_TRC',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'TRC_MOD_P',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'TRC_MOD',0,4
	.word	457
	.byte	2,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'INT_MOD',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'INT_TRC',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	457
	.byte	6,0,2,35,0,0,34
	.byte	'Ifx_CBS_INTMOD_Bits',0,25,174,1,3
	.word	113538
	.byte	10
	.byte	'_Ifx_CBS_IOSR_Bits',0,25,177,1,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'CRSYNC',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'CWSYNC',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'CW_ACK',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'COM_SYNC',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'HOSTED',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	3,20,2,35,0,11
	.byte	'CHANNEL',0,4
	.word	457
	.byte	3,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	457
	.byte	17,0,2,35,0,0,34
	.byte	'Ifx_CBS_IOSR_Bits',0,25,188,1,3
	.word	113947
	.byte	10
	.byte	'_Ifx_CBS_JDPID_Bits',0,25,191,1,16,4,11
	.byte	'MOD_REV',0,1
	.word	609
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	609
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_CBS_JDPID_Bits',0,25,196,1,3
	.word	114178
	.byte	10
	.byte	'_Ifx_CBS_JTAGID_Bits',0,25,199,1,16,4,11
	.byte	'JTAG_ID',0,4
	.word	457
	.byte	32,0,2,35,0,0,34
	.byte	'Ifx_CBS_JTAGID_Bits',0,25,202,1,3
	.word	114294
	.byte	10
	.byte	'_Ifx_CBS_OCNTRL_Bits',0,25,205,1,16,4,11
	.byte	'OC0_P',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'OC0',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'OC1_P',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'OC1',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'OC2_P',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'OC2',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'OC3_P',0,4
	.word	457
	.byte	1,25,2,35,0,11
	.byte	'OC3',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'OC4_P',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'OC4',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'OC5_P',0,4
	.word	457
	.byte	1,21,2,35,0,11
	.byte	'OC5',0,4
	.word	457
	.byte	1,20,2,35,0,11
	.byte	'WDTSUS_P',0,4
	.word	457
	.byte	1,19,2,35,0,11
	.byte	'WDTSUS',0,4
	.word	457
	.byte	1,18,2,35,0,11
	.byte	'STABLE_P',0,4
	.word	457
	.byte	1,17,2,35,0,11
	.byte	'STABLE',0,4
	.word	457
	.byte	1,16,2,35,0,11
	.byte	'OJC0_P',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'OJC0',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'OJC1_P',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'OJC1',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'OJC2_P',0,4
	.word	457
	.byte	1,11,2,35,0,11
	.byte	'OJC2',0,4
	.word	457
	.byte	1,10,2,35,0,11
	.byte	'OJC3_P',0,4
	.word	457
	.byte	1,9,2,35,0,11
	.byte	'OJC3',0,4
	.word	457
	.byte	1,8,2,35,0,11
	.byte	'OJC4_P',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'OJC4',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'OJC5_P',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'OJC5',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'OJC6_P',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'OJC6',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'OJC7_P',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'OJC7',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CBS_OCNTRL_Bits',0,25,239,1,3
	.word	114370
	.byte	10
	.byte	'_Ifx_CBS_OEC_Bits',0,25,242,1,16,4,11
	.byte	'PAT',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'DS',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'OCO',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	6,16,2,35,0,11
	.byte	'IF_LCK_P',0,4
	.word	457
	.byte	1,15,2,35,0,11
	.byte	'IF_LCK',0,4
	.word	457
	.byte	1,14,2,35,0,11
	.byte	'AUT_OK_P',0,4
	.word	457
	.byte	1,13,2,35,0,11
	.byte	'AUT_OK',0,4
	.word	457
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	12,0,2,35,0,0,34
	.byte	'Ifx_CBS_OEC_Bits',0,25,253,1,3
	.word	114967
	.byte	10
	.byte	'_Ifx_CBS_OIFM_Bits',0,25,128,2,16,4,11
	.byte	'DAPMODE',0,4
	.word	457
	.byte	3,29,2,35,0,11
	.byte	'DAPRST',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'F_JTAG',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'N_JTAG',0,4
	.word	457
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'PADCTL',0,4
	.word	457
	.byte	2,18,2,35,0,11
	.byte	'PADCTLI',0,4
	.word	457
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CBS_OIFM_Bits',0,25,139,2,3
	.word	115184
	.byte	10
	.byte	'_Ifx_CBS_OSTATE_Bits',0,25,142,2,16,4,11
	.byte	'OEN',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'OC0',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'OC1',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'OC2',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'ENIDIS',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'EECTRC',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'EECDIS',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'WDTSUS',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'HARR',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'OJC1',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'OJC2',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'OJC3',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'RSTCL0',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'RSTCL1',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'OJC6',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'RSTCL3',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'IF_LCK',0,1
	.word	609
	.byte	1,7,2,35,2,11
	.byte	'AUT_OK',0,1
	.word	609
	.byte	1,6,2,35,2,11
	.byte	'STABLE',0,1
	.word	609
	.byte	1,5,2,35,2,11
	.byte	'OCO',0,1
	.word	609
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	626
	.byte	12,0,2,35,2,0,34
	.byte	'Ifx_CBS_OSTATE_Bits',0,25,165,2,3
	.word	115415
	.byte	10
	.byte	'_Ifx_CBS_TCCB_Bits',0,25,168,2,16,4,11
	.byte	'C0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'C1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'C2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'C3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'C4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'C5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	25,1,2,35,0,11
	.byte	'HSM',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_CBS_TCCB_Bits',0,25,178,2,3
	.word	115830
	.byte	10
	.byte	'_Ifx_CBS_TCCH_Bits',0,25,181,2,16,4,11
	.byte	'C0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'C1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'C2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'C3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'C4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'C5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	434
	.byte	25,1,2,35,0,11
	.byte	'HSM',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_CBS_TCCH_Bits',0,25,191,2,3
	.word	116004
	.byte	10
	.byte	'_Ifx_CBS_TCIP_Bits',0,25,194,2,16,4,11
	.byte	'P0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_CBS_TCIP_Bits',0,25,205,2,3
	.word	116178
	.byte	10
	.byte	'_Ifx_CBS_TCM_Bits',0,25,208,2,16,4,11
	.byte	'BRK',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'SUS',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	609
	.byte	6,0,2,35,0,11
	.byte	'T0',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'T1',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'T2',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'T3',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	434
	.byte	20,0,2,35,0,0,34
	.byte	'Ifx_CBS_TCM_Bits',0,25,218,2,3
	.word	116365
	.byte	10
	.byte	'_Ifx_CBS_TCTGB_Bits',0,25,221,2,16,4,11
	.byte	'OTGB0',0,2
	.word	626
	.byte	16,0,2,35,0,11
	.byte	'OTGB1',0,2
	.word	626
	.byte	16,0,2,35,2,0,34
	.byte	'Ifx_CBS_TCTGB_Bits',0,25,225,2,3
	.word	116547
	.byte	10
	.byte	'_Ifx_CBS_TCTL_Bits',0,25,228,2,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TL1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TL2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'TL3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TL4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TL5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'TL6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'TL7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_CBS_TCTL_Bits',0,25,239,2,3
	.word	116636
	.byte	10
	.byte	'_Ifx_CBS_TIPR_Bits',0,25,242,2,16,4,11
	.byte	'PIN0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'PIN1',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'PIN2',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'PIN3',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'PIN4',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'PIN5',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'PIN6',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'PIN7',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_CBS_TIPR_Bits',0,25,252,2,3
	.word	116838
	.byte	10
	.byte	'_Ifx_CBS_TL1ST_Bits',0,25,255,2,16,4,11
	.byte	'C0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'C1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'C2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'C3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'C4',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'C5',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	457
	.byte	18,8,2,35,0,11
	.byte	'M0',0,4
	.word	457
	.byte	1,7,2,35,0,11
	.byte	'M1',0,4
	.word	457
	.byte	1,6,2,35,0,11
	.byte	'M2',0,4
	.word	457
	.byte	1,5,2,35,0,11
	.byte	'HSS1',0,4
	.word	457
	.byte	1,4,2,35,0,11
	.byte	'HSS0',0,4
	.word	457
	.byte	1,3,2,35,0,11
	.byte	'DMA',0,4
	.word	457
	.byte	1,2,2,35,0,11
	.byte	'DMA1',0,4
	.word	457
	.byte	1,1,2,35,0,11
	.byte	'HSM',0,4
	.word	457
	.byte	1,0,2,35,0,0,34
	.byte	'Ifx_CBS_TL1ST_Bits',0,25,144,3,3
	.word	117019
	.byte	10
	.byte	'_Ifx_CBS_TLC_Bits',0,25,147,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'TLSP1',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'TLSP2',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'TLSP3',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'TLSP4',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'TLSP5',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'TLSP6',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'TLSP7',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_CBS_TLC_Bits',0,25,157,3,3
	.word	117300
	.byte	10
	.byte	'_Ifx_CBS_TLCC_Bits',0,25,160,3,16,4,11
	.byte	'TGL',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'LE',0,4
	.word	457
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	457
	.byte	1,24,2,35,0,11
	.byte	'CLR',0,4
	.word	457
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'STOP',0,4
	.word	457
	.byte	2,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	457
	.byte	18,0,2,35,0,0,34
	.byte	'Ifx_CBS_TLCC_Bits',0,25,169,3,3
	.word	117492
	.byte	10
	.byte	'_Ifx_CBS_TLCHE_Bits',0,25,172,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'TL1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'TL2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'TL3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	28,0,2,35,0,0,34
	.byte	'Ifx_CBS_TLCHE_Bits',0,25,179,3,3
	.word	117673
	.byte	10
	.byte	'_Ifx_CBS_TLCHS_Bits',0,25,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	1,31,2,35,0,11
	.byte	'TL1',0,4
	.word	457
	.byte	1,30,2,35,0,11
	.byte	'TL2',0,4
	.word	457
	.byte	1,29,2,35,0,11
	.byte	'TL3',0,4
	.word	457
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	28,0,2,35,0,0,34
	.byte	'Ifx_CBS_TLCHS_Bits',0,25,189,3,3
	.word	117817
	.byte	10
	.byte	'_Ifx_CBS_TLCV_Bits',0,25,192,3,16,4,11
	.byte	'CV',0,4
	.word	434
	.byte	31,1,2,35,0,11
	.byte	'SO',0,1
	.word	609
	.byte	1,0,2,35,3,0,34
	.byte	'Ifx_CBS_TLCV_Bits',0,25,196,3,3
	.word	117961
	.byte	10
	.byte	'_Ifx_CBS_TLS_Bits',0,25,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TL1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TL2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'TL3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TL4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TL5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'TL6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'TL7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	434
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_CBS_TLS_Bits',0,25,210,3,3
	.word	118042
	.byte	10
	.byte	'_Ifx_CBS_TLT_Bits',0,25,213,3,16,4,11
	.byte	'TGL',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'VTZ',0,4
	.word	457
	.byte	1,27,2,35,0,11
	.byte	'RL',0,4
	.word	457
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	457
	.byte	10,16,2,35,0,11
	.byte	'TIM',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CBS_TLT_Bits',0,25,220,3,3
	.word	118242
	.byte	10
	.byte	'_Ifx_CBS_TLTTH_Bits',0,25,223,3,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	2,30,2,35,0,11
	.byte	'TL1',0,4
	.word	457
	.byte	2,28,2,35,0,11
	.byte	'TL2',0,4
	.word	457
	.byte	2,26,2,35,0,11
	.byte	'TL3',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'TL4',0,4
	.word	457
	.byte	2,22,2,35,0,11
	.byte	'TL5',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'TL6',0,4
	.word	457
	.byte	2,18,2,35,0,11
	.byte	'TL7',0,4
	.word	457
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CBS_TLTTH_Bits',0,25,234,3,3
	.word	118374
	.byte	10
	.byte	'_Ifx_CBS_TOPPS_Bits',0,25,237,3,16,4,11
	.byte	'PIN0',0,4
	.word	457
	.byte	2,30,2,35,0,11
	.byte	'PIN1',0,4
	.word	457
	.byte	2,28,2,35,0,11
	.byte	'PIN2',0,4
	.word	457
	.byte	2,26,2,35,0,11
	.byte	'PIN3',0,4
	.word	457
	.byte	2,24,2,35,0,11
	.byte	'PIN4',0,4
	.word	457
	.byte	2,22,2,35,0,11
	.byte	'PIN5',0,4
	.word	457
	.byte	2,20,2,35,0,11
	.byte	'PIN6',0,4
	.word	457
	.byte	2,18,2,35,0,11
	.byte	'PIN7',0,4
	.word	457
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CBS_TOPPS_Bits',0,25,248,3,3
	.word	118579
	.byte	10
	.byte	'_Ifx_CBS_TOPR_Bits',0,25,251,3,16,4,11
	.byte	'PIN0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'PIN1',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'PIN2',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'PIN3',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'PIN4',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'PIN5',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'PIN6',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'PIN7',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_CBS_TOPR_Bits',0,25,133,4,3
	.word	118785
	.byte	10
	.byte	'_Ifx_CBS_TRC_Bits',0,25,136,4,16,4,11
	.byte	'HALT',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'BRKOUT',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'BT1',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	11,12,2,35,0,11
	.byte	'BRKIN',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'SUSIN',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_CBS_TRC_Bits',0,25,145,4,3
	.word	118966
	.byte	10
	.byte	'_Ifx_CBS_TREC_Bits',0,25,148,4,16,4,11
	.byte	'TR0EV',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'TR2EV',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'TR4EV',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'TR6EV',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_CBS_TREC_Bits',0,25,158,4,3
	.word	119145
	.byte	10
	.byte	'_Ifx_CBS_TRHSM_Bits',0,25,161,4,16,4,11
	.byte	'HALT',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'BRKOUT',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'BT1',0,4
	.word	457
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	457
	.byte	11,12,2,35,0,11
	.byte	'BRKIN',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'SUSIN',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_CBS_TRHSM_Bits',0,25,170,4,3
	.word	119357
	.byte	10
	.byte	'_Ifx_CBS_TRIG_Bits',0,25,173,4,16,4,11
	.byte	'TRGX_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TRGX_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TRGX_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'TRGX_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TRGX_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TRGX_5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'TRGX_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'TRGX_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TRGX_8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TRGX_9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'TRGX_10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'TRGX_11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'TRGX_12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'TRGX_13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'TRGX_14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'TRGX_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	8,0,2,35,2,11
	.byte	'X',0,1
	.word	609
	.byte	8,0,2,35,3,0,34
	.byte	'Ifx_CBS_TRIG_Bits',0,25,193,4,3
	.word	119540
	.byte	10
	.byte	'_Ifx_CBS_TRIGC_Bits',0,25,196,4,16,4,11
	.byte	'TRGX_0',0,1
	.word	609
	.byte	1,7,2,35,0,11
	.byte	'TRGX_1',0,1
	.word	609
	.byte	1,6,2,35,0,11
	.byte	'TRGX_2',0,1
	.word	609
	.byte	1,5,2,35,0,11
	.byte	'TRGX_3',0,1
	.word	609
	.byte	1,4,2,35,0,11
	.byte	'TRGX_4',0,1
	.word	609
	.byte	1,3,2,35,0,11
	.byte	'TRGX_5',0,1
	.word	609
	.byte	1,2,2,35,0,11
	.byte	'TRGX_6',0,1
	.word	609
	.byte	1,1,2,35,0,11
	.byte	'TRGX_7',0,1
	.word	609
	.byte	1,0,2,35,0,11
	.byte	'TRGX_8',0,1
	.word	609
	.byte	1,7,2,35,1,11
	.byte	'TRGX_9',0,1
	.word	609
	.byte	1,6,2,35,1,11
	.byte	'TRGX_10',0,1
	.word	609
	.byte	1,5,2,35,1,11
	.byte	'TRGX_11',0,1
	.word	609
	.byte	1,4,2,35,1,11
	.byte	'TRGX_12',0,1
	.word	609
	.byte	1,3,2,35,1,11
	.byte	'TRGX_13',0,1
	.word	609
	.byte	1,2,2,35,1,11
	.byte	'TRGX_14',0,1
	.word	609
	.byte	1,1,2,35,1,11
	.byte	'TRGX_15',0,1
	.word	609
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	609
	.byte	8,0,2,35,2,11
	.byte	'X',0,1
	.word	609
	.byte	8,0,2,35,3,0,34
	.byte	'Ifx_CBS_TRIGC_Bits',0,25,216,4,3
	.word	119923
	.byte	10
	.byte	'_Ifx_CBS_TRIGS_Bits',0,25,219,4,16,4,11
	.byte	'BITNUM',0,4
	.word	457
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	24,0,2,35,0,0,34
	.byte	'Ifx_CBS_TRIGS_Bits',0,25,223,4,3
	.word	120308
	.byte	10
	.byte	'_Ifx_CBS_TRMC_Bits',0,25,226,4,16,4,11
	.byte	'reserved_0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'BRKOUT',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'SUSOUT',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'BRKIN',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	8,0,2,35,0,0,34
	.byte	'Ifx_CBS_TRMC_Bits',0,25,235,4,3
	.word	120403
	.byte	10
	.byte	'_Ifx_CBS_TRMT_Bits',0,25,238,4,16,4,11
	.byte	'TG0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'TG1',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'TG2',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'TG3',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	457
	.byte	16,0,2,35,0,0,34
	.byte	'Ifx_CBS_TRMT_Bits',0,25,245,4,3
	.word	120600
	.byte	10
	.byte	'_Ifx_CBS_TRSS_Bits',0,25,248,4,16,4,11
	.byte	'TT',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'IFS',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	457
	.byte	8,16,2,35,0,11
	.byte	'SRC0',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'SRC1',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	457
	.byte	8,0,2,35,0,0,34
	.byte	'Ifx_CBS_TRSS_Bits',0,25,128,5,3
	.word	120736
	.byte	10
	.byte	'_Ifx_CBS_TRTGB_H_Bits',0,25,131,5,16,4,11
	.byte	'TG8',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'TG9',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'TG10',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'TG11',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'TG12',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'TG13',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'TG14',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'TG15',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_CBS_TRTGB_H_Bits',0,25,141,5,3
	.word	120895
	.byte	10
	.byte	'_Ifx_CBS_TRTGB_L_Bits',0,25,144,5,16,4,11
	.byte	'TG0',0,4
	.word	457
	.byte	4,28,2,35,0,11
	.byte	'TG1',0,4
	.word	457
	.byte	4,24,2,35,0,11
	.byte	'TG2',0,4
	.word	457
	.byte	4,20,2,35,0,11
	.byte	'TG3',0,4
	.word	457
	.byte	4,16,2,35,0,11
	.byte	'TG4',0,4
	.word	457
	.byte	4,12,2,35,0,11
	.byte	'TG5',0,4
	.word	457
	.byte	4,8,2,35,0,11
	.byte	'TG6',0,4
	.word	457
	.byte	4,4,2,35,0,11
	.byte	'TG7',0,4
	.word	457
	.byte	4,0,2,35,0,0,34
	.byte	'Ifx_CBS_TRTGB_L_Bits',0,25,154,5,3
	.word	121080
	.byte	12,25,162,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112327
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_ACCEN0',0,25,167,5,3
	.word	121259
	.byte	12,25,170,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112884
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_ACCEN1',0,25,175,5,3
	.word	121323
	.byte	12,25,178,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	112961
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_COMDATA',0,25,183,5,3
	.word	121387
	.byte	12,25,186,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113034
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_ICTSA',0,25,191,5,3
	.word	121452
	.byte	12,25,194,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113103
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_ICTTA',0,25,199,5,3
	.word	121515
	.byte	12,25,202,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113172
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_IFSA',0,25,207,5,3
	.word	121578
	.byte	12,25,210,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113241
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_IFSC',0,25,215,5,3
	.word	121640
	.byte	12,25,218,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113538
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_INTMOD',0,25,223,5,3
	.word	121702
	.byte	12,25,226,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	113947
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_IOSR',0,25,231,5,3
	.word	121766
	.byte	12,25,234,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114178
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_JDPID',0,25,239,5,3
	.word	121828
	.byte	12,25,242,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114294
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_JTAGID',0,25,247,5,3
	.word	121891
	.byte	12,25,250,5,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114370
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_OCNTRL',0,25,255,5,3
	.word	121955
	.byte	12,25,130,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	114967
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_OEC',0,25,135,6,3
	.word	122019
	.byte	12,25,138,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115184
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_OIFM',0,25,143,6,3
	.word	122080
	.byte	12,25,146,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115415
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_OSTATE',0,25,151,6,3
	.word	122142
	.byte	12,25,154,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	115830
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TCCB',0,25,159,6,3
	.word	122206
	.byte	12,25,162,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116004
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TCCH',0,25,167,6,3
	.word	122268
	.byte	12,25,170,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116178
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TCIP',0,25,175,6,3
	.word	122330
	.byte	12,25,178,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116365
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TCM',0,25,183,6,3
	.word	122392
	.byte	12,25,186,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116547
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TCTGB',0,25,191,6,3
	.word	122453
	.byte	12,25,194,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116636
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TCTL',0,25,199,6,3
	.word	122516
	.byte	12,25,202,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	116838
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TIPR',0,25,207,6,3
	.word	122578
	.byte	12,25,210,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117019
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TL1ST',0,25,215,6,3
	.word	122640
	.byte	12,25,218,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117300
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TLC',0,25,223,6,3
	.word	122703
	.byte	12,25,226,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117492
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TLCC',0,25,231,6,3
	.word	122764
	.byte	12,25,234,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117673
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TLCHE',0,25,239,6,3
	.word	122826
	.byte	12,25,242,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117817
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TLCHS',0,25,247,6,3
	.word	122889
	.byte	12,25,250,6,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	117961
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TLCV',0,25,255,6,3
	.word	122952
	.byte	12,25,130,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118042
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TLS',0,25,135,7,3
	.word	123014
	.byte	12,25,138,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118242
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TLT',0,25,143,7,3
	.word	123075
	.byte	12,25,146,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118374
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TLTTH',0,25,151,7,3
	.word	123136
	.byte	12,25,154,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118579
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TOPPS',0,25,159,7,3
	.word	123199
	.byte	12,25,162,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118785
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TOPR',0,25,167,7,3
	.word	123262
	.byte	12,25,170,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	118966
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TRC',0,25,175,7,3
	.word	123324
	.byte	12,25,178,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119145
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TREC',0,25,183,7,3
	.word	123385
	.byte	12,25,186,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119357
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TRHSM',0,25,191,7,3
	.word	123447
	.byte	12,25,194,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119540
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TRIG',0,25,199,7,3
	.word	123510
	.byte	12,25,202,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	119923
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TRIGC',0,25,207,7,3
	.word	123572
	.byte	12,25,210,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	120308
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TRIGS',0,25,215,7,3
	.word	123635
	.byte	12,25,218,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	120403
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TRMC',0,25,223,7,3
	.word	123698
	.byte	12,25,226,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	120600
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TRMT',0,25,231,7,3
	.word	123760
	.byte	12,25,234,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	120736
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TRSS',0,25,239,7,3
	.word	123822
	.byte	12,25,242,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	120895
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TRTGB_H',0,25,247,7,3
	.word	123884
	.byte	12,25,250,7,9,4,13
	.byte	'U',0
	.word	434
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	450
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	121080
	.byte	4,2,35,0,0,34
	.byte	'Ifx_CBS_TRTGB_L',0,25,255,7,3
	.word	123949
	.byte	10
	.byte	'_Ifx_CBS_TRTGB',0,25,139,8,25,8,13
	.byte	'L',0
	.word	123949
	.byte	4,2,35,0,13
	.byte	'H',0
	.word	123884
	.byte	4,2,35,4,0,14
	.word	124014
	.byte	34
	.byte	'Ifx_CBS_TRTGB',0,25,143,8,3
	.word	124058
	.byte	15,12,157,1,9,1,16
	.byte	'IfxStm_Comparator_0',0,0,16
	.byte	'IfxStm_Comparator_1',0,1,0,34
	.byte	'IfxStm_Comparator',0,12,161,1,3
	.word	124086
	.byte	15,12,165,1,9,1,16
	.byte	'IfxStm_ComparatorInterrupt_ir0',0,0,16
	.byte	'IfxStm_ComparatorInterrupt_ir1',0,1,0,34
	.byte	'IfxStm_ComparatorInterrupt',0,12,169,1,3
	.word	124164
	.byte	15,12,173,1,9,1,16
	.byte	'IfxStm_ComparatorOffset_0',0,0,16
	.byte	'IfxStm_ComparatorOffset_1',0,1,16
	.byte	'IfxStm_ComparatorOffset_2',0,2,16
	.byte	'IfxStm_ComparatorOffset_3',0,3,16
	.byte	'IfxStm_ComparatorOffset_4',0,4,16
	.byte	'IfxStm_ComparatorOffset_5',0,5,16
	.byte	'IfxStm_ComparatorOffset_6',0,6,16
	.byte	'IfxStm_ComparatorOffset_7',0,7,16
	.byte	'IfxStm_ComparatorOffset_8',0,8,16
	.byte	'IfxStm_ComparatorOffset_9',0,9,16
	.byte	'IfxStm_ComparatorOffset_10',0,10,16
	.byte	'IfxStm_ComparatorOffset_11',0,11,16
	.byte	'IfxStm_ComparatorOffset_12',0,12,16
	.byte	'IfxStm_ComparatorOffset_13',0,13,16
	.byte	'IfxStm_ComparatorOffset_14',0,14,16
	.byte	'IfxStm_ComparatorOffset_15',0,15,16
	.byte	'IfxStm_ComparatorOffset_16',0,16,16
	.byte	'IfxStm_ComparatorOffset_17',0,17,16
	.byte	'IfxStm_ComparatorOffset_18',0,18,16
	.byte	'IfxStm_ComparatorOffset_19',0,19,16
	.byte	'IfxStm_ComparatorOffset_20',0,20,16
	.byte	'IfxStm_ComparatorOffset_21',0,21,16
	.byte	'IfxStm_ComparatorOffset_22',0,22,16
	.byte	'IfxStm_ComparatorOffset_23',0,23,16
	.byte	'IfxStm_ComparatorOffset_24',0,24,16
	.byte	'IfxStm_ComparatorOffset_25',0,25,16
	.byte	'IfxStm_ComparatorOffset_26',0,26,16
	.byte	'IfxStm_ComparatorOffset_27',0,27,16
	.byte	'IfxStm_ComparatorOffset_28',0,28,16
	.byte	'IfxStm_ComparatorOffset_29',0,29,16
	.byte	'IfxStm_ComparatorOffset_30',0,30,16
	.byte	'IfxStm_ComparatorOffset_31',0,31,0,34
	.byte	'IfxStm_ComparatorOffset',0,12,207,1,3
	.word	124273
	.byte	15,12,211,1,9,1,16
	.byte	'IfxStm_ComparatorSize_1Bit',0,0,16
	.byte	'IfxStm_ComparatorSize_2Bits',0,1,16
	.byte	'IfxStm_ComparatorSize_3Bits',0,2,16
	.byte	'IfxStm_ComparatorSize_4Bits',0,3,16
	.byte	'IfxStm_ComparatorSize_5Bits',0,4,16
	.byte	'IfxStm_ComparatorSize_6Bits',0,5,16
	.byte	'IfxStm_ComparatorSize_7Bits',0,6,16
	.byte	'IfxStm_ComparatorSize_8Bits',0,7,16
	.byte	'IfxStm_ComparatorSize_9Bits',0,8,16
	.byte	'IfxStm_ComparatorSize_10Bits',0,9,16
	.byte	'IfxStm_ComparatorSize_11Bits',0,10,16
	.byte	'IfxStm_ComparatorSize_12Bits',0,11,16
	.byte	'IfxStm_ComparatorSize_13Bits',0,12,16
	.byte	'IfxStm_ComparatorSize_14Bits',0,13,16
	.byte	'IfxStm_ComparatorSize_15Bits',0,14,16
	.byte	'IfxStm_ComparatorSize_16Bits',0,15,16
	.byte	'IfxStm_ComparatorSize_17Bits',0,16,16
	.byte	'IfxStm_ComparatorSize_18Bits',0,17,16
	.byte	'IfxStm_ComparatorSize_19Bits',0,18,16
	.byte	'IfxStm_ComparatorSize_20Bits',0,19,16
	.byte	'IfxStm_ComparatorSize_21Bits',0,20,16
	.byte	'IfxStm_ComparatorSize_22Bits',0,21,16
	.byte	'IfxStm_ComparatorSize_23Bits',0,22,16
	.byte	'IfxStm_ComparatorSize_24Bits',0,23,16
	.byte	'IfxStm_ComparatorSize_25Bits',0,24,16
	.byte	'IfxStm_ComparatorSize_26Bits',0,25,16
	.byte	'IfxStm_ComparatorSize_27Bits',0,26,16
	.byte	'IfxStm_ComparatorSize_28Bits',0,27,16
	.byte	'IfxStm_ComparatorSize_29Bits',0,28,16
	.byte	'IfxStm_ComparatorSize_30Bits',0,29,16
	.byte	'IfxStm_ComparatorSize_31Bits',0,30,16
	.byte	'IfxStm_ComparatorSize_32Bits',0,31,0,34
	.byte	'IfxStm_ComparatorSize',0,12,245,1,3
	.word	125231
	.byte	15,12,250,1,9,1,16
	.byte	'IfxStm_SleepMode_enable',0,0,16
	.byte	'IfxStm_SleepMode_disable',0,1,0,34
	.byte	'IfxStm_SleepMode',0,12,254,1,3
	.word	126251
	.byte	15,12,130,2,9,1,16
	.byte	'IfxStm_SuspendMode_none',0,0,16
	.byte	'IfxStm_SuspendMode_hard',0,1,16
	.byte	'IfxStm_SuspendMode_soft',0,2,0,34
	.byte	'IfxStm_SuspendMode',0,12,135,2,3
	.word	126337
	.byte	34
	.byte	'IfxEbu_Dram_SDRAMDevice',0,16,132,1,3
	.word	22766
	.byte	34
	.byte	'IfxEbu_Dram',0,16,147,1,3
	.word	20918
	.byte	34
	.byte	'IfxEbu_Dram_Config',0,16,168,1,3
	.word	26550
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L29:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,46,1,3,8,58,15,59,15,57,15,54,15,39
	.byte	12,63,12,60,12,0,0,29,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,30,29,1,49,19,0,0,31
	.byte	11,0,49,19,0,0,32,11,1,49,19,0,0,33,19,1,58,15,59,15,57,15,11,15,0,0,34,22,0,3,8,58,15,59,15,57,15,73
	.byte	19,0,0,35,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L30:
	.word	.L213-.L212
.L212:
	.half	3
	.word	.L215-.L214
.L214:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Ebu\\Std',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,4,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxSrc.h',0,6,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm.h',0,7,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxEbu.h',0,8,0,0
	.byte	'IfxEbu_regdef.h',0,3,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,4,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,4,0,0
	.byte	'IfxCbs_regdef.h',0,3,0,0,0
.L215:
.L213:
	.sdecl	'.debug_info',debug,cluster('IfxEbu_Dram_initMemory')
	.sect	'.debug_info'
.L31:
	.word	1474
	.half	3
	.word	.L32
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L34,.L33
	.byte	2
	.word	.L27
	.byte	3
	.byte	'IfxEbu_Dram_initMemory',0,1,52,6,1,1,1
	.word	.L24,.L41,.L23
	.byte	4
	.byte	'dram',0,1,52,42
	.word	.L42,.L43
	.byte	4
	.byte	'config',0,1,52,74
	.word	.L44,.L45
	.byte	5
	.word	.L24,.L41
	.byte	6
	.byte	'ebu',0,1,54,14
	.word	.L46,.L47
	.byte	7
	.word	.L48
	.byte	6
	.byte	'deviceAddressSelection',0,1,60,17
	.word	.L52,.L53
	.byte	5
	.word	.L54,.L55
	.byte	6
	.byte	'passwd',0,1,74,16
	.word	.L56,.L57
	.byte	0,5
	.word	.L55,.L58
	.byte	6
	.byte	'pin',0,1,85,15
	.word	.L59,.L60
	.byte	0,5
	.word	.L58,.L61
	.byte	6
	.byte	'addrsel',0,1,106,25
	.word	.L62,.L63
	.byte	0,7
	.word	.L64
	.byte	6
	.byte	'modcon',0,1,121,24
	.word	.L68,.L69
	.byte	0,7
	.word	.L70
	.byte	6
	.byte	'deviceInterface',0,1,132,1,12
	.word	.L71,.L72
	.byte	5
	.word	.L73,.L74
	.byte	6
	.byte	'busrcon',0,1,141,1,26
	.word	.L75,.L76
	.byte	0,5
	.word	.L10,.L77
	.byte	6
	.byte	'busrcon',0,1,150,1,26
	.word	.L75,.L78
	.byte	0,5
	.word	.L79,.L80
	.byte	6
	.byte	'buswcon',0,1,160,1,26
	.word	.L81,.L82
	.byte	0,5
	.word	.L12,.L83
	.byte	6
	.byte	'buswcon',0,1,169,1,26
	.word	.L81,.L84
	.byte	0,5
	.word	.L85,.L86
	.byte	6
	.byte	'busrap',0,1,180,1,25
	.word	.L87,.L88
	.byte	0,5
	.word	.L14,.L89
	.byte	6
	.byte	'busrap',0,1,192,1,25
	.word	.L87,.L90
	.byte	0,5
	.word	.L91,.L92
	.byte	6
	.byte	'buswap',0,1,205,1,25
	.word	.L93,.L94
	.byte	0,5
	.word	.L16,.L95
	.byte	6
	.byte	'buswap',0,1,217,1,25
	.word	.L93,.L96
	.byte	0,5
	.word	.L95,.L41
	.byte	6
	.byte	'maskForBankTag',0,1,231,1,12
	.word	.L71,.L97
	.byte	6
	.byte	'columnAddressWidth',0,1,232,1,12
	.word	.L71,.L98
	.byte	8
	.word	.L99,.L100,.L101
	.byte	9
	.word	.L102,.L103
	.byte	10
	.word	.L104,.L100,.L101
	.byte	6
	.byte	'deadLine',0,2,142,6,12
	.word	.L105,.L106
	.byte	8
	.word	.L107,.L100,.L19
	.byte	9
	.word	.L108,.L109
	.byte	10
	.word	.L110,.L100,.L19
	.byte	8
	.word	.L111,.L100,.L18
	.byte	10
	.word	.L112,.L100,.L18
	.byte	6
	.byte	'stmNow',0,2,223,5,13
	.word	.L105,.L113
	.byte	8
	.word	.L114,.L100,.L115
	.byte	10
	.word	.L116,.L100,.L115
	.byte	8
	.word	.L117,.L100,.L118
	.byte	10
	.word	.L119,.L100,.L118
	.byte	6
	.byte	'reg',0,3,235,5,17
	.word	.L120,.L121
	.byte	0,0,0,0,8
	.word	.L122,.L115,.L123
	.byte	9
	.word	.L124,.L125
	.byte	10
	.word	.L126,.L115,.L123
	.byte	6
	.byte	'result',0,2,194,4,12
	.word	.L127,.L128
	.byte	0,0,8
	.word	.L129,.L130,.L18
	.byte	9
	.word	.L131,.L132
	.byte	11
	.word	.L133,.L130,.L18
	.byte	0,0,0,0,0,8
	.word	.L134,.L19,.L101
	.byte	9
	.word	.L135,.L136
	.byte	10
	.word	.L137,.L19,.L101
	.byte	6
	.byte	'result',0,2,253,5,13
	.word	.L59,.L138
	.byte	8
	.word	.L111,.L139,.L22
	.byte	10
	.word	.L112,.L139,.L22
	.byte	6
	.byte	'stmNow',0,2,223,5,13
	.word	.L105,.L140
	.byte	8
	.word	.L114,.L139,.L141
	.byte	10
	.word	.L116,.L139,.L141
	.byte	8
	.word	.L117,.L139,.L142
	.byte	10
	.word	.L119,.L139,.L142
	.byte	6
	.byte	'reg',0,3,235,5,17
	.word	.L120,.L143
	.byte	0,0,0,0,8
	.word	.L122,.L141,.L144
	.byte	9
	.word	.L124,.L125
	.byte	12
	.word	.L126,.L145
	.byte	6
	.byte	'result',0,2,194,4,12
	.word	.L127,.L148
	.byte	0,0,8
	.word	.L122,.L146,.L147
	.byte	9
	.word	.L124,.L125
	.byte	0,8
	.word	.L129,.L149,.L22
	.byte	9
	.word	.L131,.L132
	.byte	11
	.word	.L133,.L149,.L22
	.byte	0,0,0,0,0,0,0,5
	.word	.L101,.L150
	.byte	6
	.byte	'sdrmcon',0,1,240,1,25
	.word	.L151,.L152
	.byte	0,5
	.word	.L150,.L153
	.byte	6
	.byte	'sdrmmod',0,1,130,2,24
	.word	.L154,.L155
	.byte	0,5
	.word	.L153,.L156
	.byte	6
	.byte	'sdrmref',0,1,141,2,25
	.word	.L157,.L158
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEbu_Dram_initMemory')
	.sect	'.debug_abbrev'
.L32:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0,0,10,11
	.byte	1,49,16,17,1,18,1,0,0,11,11,0,49,16,17,1,18,1,0,0,12,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEbu_Dram_initMemory')
	.sect	'.debug_line'
.L33:
	.word	.L217-.L216
.L216:
	.half	3
	.word	.L219-.L218
.L218:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Stm\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.c',0,0,0,0
	.byte	'IfxStm.h',0,1,0,0
	.byte	'IfxCpu.h',0,2,0,0,0
.L219:
	.byte	5,6,7,0,5,2
	.word	.L24
	.byte	3,51,1,5,26,9
	.half	.L165-.L24
	.byte	3,2,1,5,23,9
	.half	.L166-.L165
	.byte	3,1,1,5,6,9
	.half	.L220-.L166
	.byte	3,125,1,5,31,9
	.half	.L163-.L220
	.byte	3,4,1,5,23,9
	.half	.L221-.L163
	.byte	1,5,80,9
	.half	.L49-.L221
	.byte	3,4,1,5,51,9
	.half	.L50-.L49
	.byte	3,125,1,5,23,9
	.half	.L222-.L50
	.byte	1,5,80,9
	.half	.L51-.L222
	.byte	3,3,1,5,78,9
	.half	.L223-.L51
	.byte	1,5,57,9
	.half	.L54-.L223
	.byte	3,14,1,5,23,9
	.half	.L167-.L54
	.byte	1,5,35,9
	.half	.L169-.L167
	.byte	3,1,1,5,49,9
	.half	.L168-.L169
	.byte	3,2,1,5,33,9
	.half	.L172-.L168
	.byte	3,2,1,5,18,9
	.half	.L55-.L172
	.byte	3,8,1,5,37,3,4,1,5,31,9
	.half	.L170-.L55
	.byte	3,124,1,5,18,9
	.half	.L224-.L170
	.byte	3,95,1,5,13,9
	.half	.L3-.L224
	.byte	3,35,1,5,54,7,9
	.half	.L225-.L3
	.byte	3,2,1,5,86,9
	.half	.L226-.L225
	.byte	1,5,37,9
	.half	.L4-.L226
	.byte	3,4,1,5,54,9
	.half	.L5-.L4
	.byte	1,5,33,9
	.half	.L227-.L5
	.byte	3,120,1,5,31,1,5,41,7,9
	.half	.L228-.L227
	.byte	3,13,1,5,44,1,5,41,9
	.half	.L229-.L228
	.byte	3,1,1,5,44,1,9
	.half	.L58-.L229
	.byte	3,6,1,5,72,3,1,1,9
	.half	.L173-.L58
	.byte	3,1,1,5,44,9
	.half	.L230-.L173
	.byte	3,127,1,9
	.half	.L174-.L230
	.byte	3,1,1,5,72,3,1,1,5,44,9
	.half	.L231-.L174
	.byte	1,5,72,3,1,1,5,44,9
	.half	.L232-.L231
	.byte	1,5,72,3,1,1,5,44,9
	.half	.L233-.L232
	.byte	1,5,72,3,1,1,5,44,9
	.half	.L234-.L233
	.byte	1,5,73,3,1,1,5,86,9
	.half	.L235-.L234
	.byte	1,5,44,9
	.half	.L236-.L235
	.byte	1,5,28,3,2,1,5,21,9
	.half	.L175-.L236
	.byte	1,5,44,9
	.half	.L237-.L175
	.byte	1,5,52,9
	.half	.L61-.L237
	.byte	3,7,1,9
	.half	.L238-.L61
	.byte	3,1,1,5,30,9
	.half	.L176-.L238
	.byte	3,127,1,5,28,9
	.half	.L65-.L176
	.byte	3,9,1,5,30,9
	.half	.L66-.L65
	.byte	3,120,1,5,52,3,1,1,5,30,9
	.half	.L239-.L66
	.byte	1,5,52,3,1,1,5,30,9
	.half	.L240-.L239
	.byte	1,3,1,1,5,16,9
	.half	.L67-.L240
	.byte	3,7,1,5,9,9
	.half	.L177-.L67
	.byte	1,5,89,7,9
	.half	.L241-.L177
	.byte	1,5,151,1,7,9
	.half	.L242-.L241
	.byte	1,5,148,1,9
	.half	.L243-.L242
	.byte	1,5,209,1,7,9
	.half	.L244-.L243
	.byte	1,5,206,1,9
	.half	.L245-.L244
	.byte	1,5,25,7,9
	.half	.L6-.L245
	.byte	3,2,1,5,40,9
	.half	.L9-.L6
	.byte	3,3,1,5,5,9
	.half	.L246-.L9
	.byte	1,5,45,7,9
	.half	.L73-.L246
	.byte	3,4,1,5,70,3,1,1,5,45,9
	.half	.L247-.L73
	.byte	1,5,70,3,1,1,5,48,9
	.half	.L74-.L247
	.byte	3,125,1,5,45,9
	.half	.L10-.L74
	.byte	3,9,1,9
	.half	.L178-.L10
	.byte	3,1,1,5,69,3,1,1,5,45,9
	.half	.L179-.L178
	.byte	1,5,69,3,1,1,5,45,9
	.half	.L11-.L179
	.byte	1,5,24,3,1,1,5,17,9
	.half	.L248-.L11
	.byte	1,5,45,9
	.half	.L249-.L248
	.byte	1,5,41,9
	.half	.L77-.L249
	.byte	3,3,1,5,5,9
	.half	.L250-.L77
	.byte	1,5,45,7,9
	.half	.L79-.L250
	.byte	3,4,1,5,71,3,1,1,5,45,9
	.half	.L181-.L79
	.byte	1,5,71,3,1,1,5,48,9
	.half	.L80-.L181
	.byte	3,125,1,5,45,9
	.half	.L12-.L80
	.byte	3,9,1,9
	.half	.L183-.L12
	.byte	3,1,1,5,70,3,1,1,5,45,9
	.half	.L182-.L183
	.byte	1,5,70,3,1,1,5,45,9
	.half	.L13-.L182
	.byte	1,5,24,3,1,1,5,17,9
	.half	.L251-.L13
	.byte	1,5,45,9
	.half	.L252-.L251
	.byte	1,5,40,9
	.half	.L83-.L252
	.byte	3,4,1,5,5,9
	.half	.L253-.L83
	.byte	1,5,44,7,9
	.half	.L85-.L253
	.byte	3,3,1,9
	.half	.L185-.L85
	.byte	3,1,1,5,78,3,1,1,5,44,9
	.half	.L186-.L185
	.byte	1,5,78,3,1,1,5,44,9
	.half	.L254-.L186
	.byte	1,5,78,3,1,1,5,47,9
	.half	.L86-.L254
	.byte	3,124,1,5,44,9
	.half	.L14-.L86
	.byte	3,12,1,5,77,3,1,1,5,44,9
	.half	.L187-.L14
	.byte	1,5,77,3,1,1,5,44,9
	.half	.L255-.L187
	.byte	1,5,77,3,1,1,5,44,9
	.half	.L256-.L255
	.byte	1,5,77,3,1,1,5,44,9
	.half	.L15-.L256
	.byte	1,5,24,3,2,1,5,17,9
	.half	.L257-.L15
	.byte	1,5,44,9
	.half	.L258-.L257
	.byte	1,5,41,9
	.half	.L89-.L258
	.byte	3,4,1,5,5,9
	.half	.L259-.L89
	.byte	1,5,79,7,9
	.half	.L91-.L259
	.byte	3,4,1,5,44,9
	.half	.L189-.L91
	.byte	1,5,79,3,1,1,5,44,9
	.half	.L260-.L189
	.byte	1,5,79,3,1,1,5,44,9
	.half	.L261-.L260
	.byte	1,5,79,3,1,1,5,47,9
	.half	.L92-.L261
	.byte	3,124,1,5,44,9
	.half	.L16-.L92
	.byte	3,12,1,5,78,3,1,1,5,44,9
	.half	.L190-.L16
	.byte	1,5,78,3,1,1,5,44,9
	.half	.L262-.L190
	.byte	1,5,78,3,1,1,5,44,9
	.half	.L263-.L262
	.byte	1,5,78,3,1,1,5,44,9
	.half	.L17-.L263
	.byte	1,5,24,3,2,1,5,17,9
	.half	.L264-.L17
	.byte	1,5,44,9
	.half	.L265-.L264
	.byte	1,5,62,9
	.half	.L95-.L265
	.byte	3,7,1,5,55,9
	.half	.L266-.L95
	.byte	1,5,76,9
	.half	.L267-.L266
	.byte	1,9
	.half	.L193-.L267
	.byte	3,1,1,4,3,5,19,9
	.half	.L100-.L193
	.byte	3,132,4,1,5,17,9
	.half	.L192-.L100
	.byte	3,1,1,5,21,9
	.half	.L194-.L192
	.byte	1,5,14,9
	.half	.L118-.L194
	.byte	3,8,1,5,10,9
	.half	.L268-.L118
	.byte	3,1,1,4,2,5,24,9
	.half	.L115-.L268
	.byte	3,206,126,1,5,32,9
	.half	.L269-.L115
	.byte	3,1,1,5,71,9
	.half	.L123-.L269
	.byte	3,158,1,1,5,69,9
	.half	.L270-.L123
	.byte	1,4,3,5,5,9
	.half	.L130-.L270
	.byte	3,165,2,1,5,17,7,9
	.half	.L271-.L130
	.byte	3,2,1,4,2,5,35,9
	.half	.L18-.L271
	.byte	3,234,125,1,5,33,9
	.half	.L272-.L18
	.byte	1,5,21,9
	.half	.L19-.L272
	.byte	3,11,1,5,18,9
	.half	.L273-.L19
	.byte	1,5,5,9
	.half	.L274-.L273
	.byte	1,4,3,5,19,7,9
	.half	.L139-.L274
	.byte	3,109,1,5,17,9
	.half	.L196-.L139
	.byte	3,1,1,5,21,9
	.half	.L197-.L196
	.byte	1,5,14,9
	.half	.L142-.L197
	.byte	3,8,1,5,10,9
	.half	.L275-.L142
	.byte	3,1,1,4,2,5,24,9
	.half	.L141-.L275
	.byte	3,206,126,1,5,71,9
	.half	.L144-.L141
	.byte	3,159,1,1,5,32,9
	.half	.L146-.L144
	.byte	3,226,126,1,5,69,9
	.half	.L147-.L146
	.byte	3,158,1,1,4,3,5,5,9
	.half	.L149-.L147
	.byte	3,165,2,1,5,17,7,9
	.half	.L276-.L149
	.byte	3,2,1,4,2,5,31,9
	.half	.L22-.L276
	.byte	3,251,125,1,5,48,9
	.half	.L21-.L22
	.byte	3,11,1,4,1,5,28,7,9
	.half	.L101-.L21
	.byte	3,226,123,1,5,56,3,1,1,9
	.half	.L200-.L101
	.byte	3,1,1,5,28,9
	.half	.L277-.L200
	.byte	3,127,1,9
	.half	.L201-.L277
	.byte	3,1,1,5,56,3,1,1,5,28,9
	.half	.L278-.L201
	.byte	1,5,56,3,2,1,5,28,9
	.half	.L202-.L278
	.byte	3,127,1,9
	.half	.L203-.L202
	.byte	3,1,1,5,56,3,1,1,5,28,9
	.half	.L279-.L203
	.byte	1,5,56,3,2,1,5,28,9
	.half	.L204-.L279
	.byte	3,127,1,9
	.half	.L205-.L204
	.byte	3,1,1,5,56,3,1,1,5,28,9
	.half	.L280-.L205
	.byte	1,5,56,3,1,1,5,28,9
	.half	.L281-.L280
	.byte	1,5,56,3,1,1,5,28,9
	.half	.L282-.L281
	.byte	1,3,2,1,5,53,9
	.half	.L150-.L282
	.byte	3,5,1,9
	.half	.L206-.L150
	.byte	3,1,1,5,29,9
	.half	.L207-.L206
	.byte	3,127,1,9
	.half	.L208-.L207
	.byte	3,1,1,5,53,3,1,1,5,29,9
	.half	.L283-.L208
	.byte	1,5,53,3,1,1,5,29,9
	.half	.L284-.L283
	.byte	1,5,53,3,1,1,5,29,9
	.half	.L285-.L284
	.byte	1,5,53,3,1,1,5,29,9
	.half	.L286-.L285
	.byte	1,3,1,1,5,59,9
	.half	.L153-.L286
	.byte	3,6,1,9
	.half	.L209-.L153
	.byte	3,1,1,5,31,9
	.half	.L210-.L209
	.byte	3,127,1,9
	.half	.L211-.L210
	.byte	3,1,1,5,59,3,1,1,5,31,9
	.half	.L287-.L211
	.byte	1,5,59,3,1,1,5,31,9
	.half	.L288-.L287
	.byte	1,5,59,3,1,1,5,31,9
	.half	.L289-.L288
	.byte	1,5,59,3,1,1,5,31,9
	.half	.L290-.L289
	.byte	1,5,59,3,1,1,5,31,9
	.half	.L291-.L290
	.byte	1,5,59,3,1,1,5,31,9
	.half	.L292-.L291
	.byte	1,5,59,3,1,1,5,31,9
	.half	.L293-.L292
	.byte	1,3,2,1,5,25,9
	.half	.L294-.L293
	.byte	3,3,1,5,1,9
	.half	.L156-.L294
	.byte	3,3,1,7,9
	.half	.L35-.L156
	.byte	0,1,1
.L217:
	.sdecl	'.debug_ranges',debug,cluster('IfxEbu_Dram_initMemory')
	.sect	'.debug_ranges'
.L34:
	.word	-1,.L24,0,.L35-.L24,0,0
.L48:
	.word	-1,.L24,.L49-.L24,.L50-.L24,.L51-.L24,.L41-.L24,0,0
.L64:
	.word	-1,.L24,.L61-.L24,.L65-.L24,.L66-.L24,.L67-.L24,0,0
.L70:
	.word	-1,.L24,.L65-.L24,.L66-.L24,.L67-.L24,.L41-.L24,0,0
.L145:
	.word	-1,.L24,.L141-.L24,.L144-.L24,.L146-.L24,.L147-.L24,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEbu_Dram_initMemoryConfig')
	.sect	'.debug_info'
.L36:
	.word	272
	.half	3
	.word	.L37
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MultiCore_RTThread\\Debug\\',0,12,1
	.word	.L39,.L38
	.byte	2
	.word	.L27
	.byte	3
	.byte	'IfxEbu_Dram_initMemoryConfig',0,1,163,2,6,1,1,1
	.word	.L26,.L159,.L25
	.byte	4
	.byte	'config',0,1,163,2,55
	.word	.L160,.L161
	.byte	4
	.byte	'ebu',0,1,163,2,72
	.word	.L46,.L162
	.byte	5
	.word	.L26,.L159
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEbu_Dram_initMemoryConfig')
	.sect	'.debug_abbrev'
.L37:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEbu_Dram_initMemoryConfig')
	.sect	'.debug_line'
.L38:
	.word	.L296-.L295
.L295:
	.half	3
	.word	.L298-.L297
.L297:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram\\IfxEbu_Dram.c',0,0,0,0,0
.L298:
	.byte	5,32,7,0,5,2
	.word	.L26
	.byte	3,164,2,1,5,34,9
	.half	.L299-.L26
	.byte	3,1,1,5,32,1,5,34,9
	.half	.L300-.L299
	.byte	3,1,1,5,32,1,5,46,9
	.half	.L301-.L300
	.byte	3,4,1,5,44,1,5,46,9
	.half	.L302-.L301
	.byte	3,1,1,5,44,1,9
	.half	.L303-.L302
	.byte	3,1,1,5,47,9
	.half	.L304-.L303
	.byte	3,3,1,5,45,1,9
	.half	.L305-.L304
	.byte	3,1,1,9
	.half	.L306-.L305
	.byte	3,1,1,9
	.half	.L307-.L306
	.byte	3,4,1,9
	.half	.L308-.L307
	.byte	3,1,1,9
	.half	.L309-.L308
	.byte	3,1,1,5,46,9
	.half	.L310-.L309
	.byte	3,3,1,9
	.half	.L311-.L310
	.byte	3,1,1,9
	.half	.L312-.L311
	.byte	3,1,1,5,52,9
	.half	.L313-.L312
	.byte	3,3,1,5,54,9
	.half	.L314-.L313
	.byte	3,1,1,5,52,1,9
	.half	.L315-.L314
	.byte	3,1,1,9
	.half	.L316-.L315
	.byte	3,1,1,5,55,9
	.half	.L317-.L316
	.byte	3,3,1,5,53,1,9
	.half	.L318-.L317
	.byte	3,1,1,9
	.half	.L319-.L318
	.byte	3,1,1,9
	.half	.L320-.L319
	.byte	3,3,1,9
	.half	.L321-.L320
	.byte	3,1,1,9
	.half	.L322-.L321
	.byte	3,1,1,9
	.half	.L323-.L322
	.byte	3,1,1,5,54,9
	.half	.L324-.L323
	.byte	3,3,1,9
	.half	.L325-.L324
	.byte	3,1,1,9
	.half	.L326-.L325
	.byte	3,1,1,5,56,9
	.half	.L327-.L326
	.byte	3,3,1,9
	.half	.L328-.L327
	.byte	3,1,1,9
	.half	.L329-.L328
	.byte	3,1,1,9
	.half	.L330-.L329
	.byte	3,1,1,5,58,9
	.half	.L331-.L330
	.byte	3,1,1,5,56,1,9
	.half	.L332-.L331
	.byte	3,1,1,5,58,9
	.half	.L333-.L332
	.byte	3,1,1,5,56,1,5,51,9
	.half	.L334-.L333
	.byte	3,3,1,5,53,9
	.half	.L335-.L334
	.byte	3,1,1,5,51,1,9
	.half	.L336-.L335
	.byte	3,1,1,9
	.half	.L337-.L336
	.byte	3,1,1,5,61,9
	.half	.L338-.L337
	.byte	3,3,1,5,63,9
	.half	.L339-.L338
	.byte	3,2,1,5,61,1,9
	.half	.L340-.L339
	.byte	3,1,1,9
	.half	.L341-.L340
	.byte	3,1,1,9
	.half	.L342-.L341
	.byte	3,1,1,9
	.half	.L343-.L342
	.byte	3,1,1,5,63,9
	.half	.L344-.L343
	.byte	3,1,1,5,61,1,9
	.half	.L345-.L344
	.byte	3,1,1,9
	.half	.L346-.L345
	.byte	3,1,1,9
	.half	.L347-.L346
	.byte	3,1,1,9
	.half	.L348-.L347
	.byte	3,1,1,5,50,9
	.half	.L349-.L348
	.byte	3,3,1,9
	.half	.L350-.L349
	.byte	3,1,1,9
	.half	.L351-.L350
	.byte	3,2,1,9
	.half	.L352-.L351
	.byte	3,1,1,9
	.half	.L353-.L352
	.byte	3,1,1,9
	.half	.L354-.L353
	.byte	3,1,1,5,53,9
	.half	.L355-.L354
	.byte	3,3,1,9
	.half	.L356-.L355
	.byte	3,1,1,9
	.half	.L357-.L356
	.byte	3,1,1,9
	.half	.L358-.L357
	.byte	3,1,1,9
	.half	.L359-.L358
	.byte	3,1,1,9
	.half	.L360-.L359
	.byte	3,1,1,9
	.half	.L361-.L360
	.byte	3,1,1,5,55,9
	.half	.L362-.L361
	.byte	3,1,1,5,53,1,5,55,9
	.half	.L363-.L362
	.byte	3,1,1,5,53,1,9
	.half	.L364-.L363
	.byte	3,1,1,5,1,9
	.half	.L365-.L364
	.byte	3,1,1,7,9
	.half	.L40-.L365
	.byte	0,1,1
.L296:
	.sdecl	'.debug_ranges',debug,cluster('IfxEbu_Dram_initMemoryConfig')
	.sect	'.debug_ranges'
.L39:
	.word	-1,.L26,0,.L40-.L26,0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEbu_Dram_initMemory')
	.sect	'.debug_loc'
.L23:
	.word	-1,.L24,0,.L163-.L24
	.half	2
	.byte	138,0
	.word	.L163-.L24,.L41-.L24
	.half	2
	.byte	138,24
	.word	.L41-.L24,.L41-.L24
	.half	2
	.byte	138,0
	.word	0,0
.L63:
	.word	-1,.L24,.L173-.L24,.L174-.L24
	.half	1
	.byte	81
	.word	.L174-.L24,.L175-.L24
	.half	1
	.byte	95
	.word	.L175-.L24,.L176-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	.L176-.L24,.L65-.L24
	.half	1
	.byte	81
	.word	0,0
.L88:
	.word	-1,.L24,.L185-.L24,.L186-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	.L186-.L24,.L14-.L24
	.half	1
	.byte	95
	.word	0,0
.L90:
	.word	-1,.L24,.L187-.L24,.L188-.L24
	.half	1
	.byte	95
	.word	.L188-.L24,.L189-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	.L16-.L24,.L190-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L76:
	.word	-1,.L24,.L73-.L24,.L10-.L24
	.half	1
	.byte	95
	.word	0,0
.L78:
	.word	-1,.L24,.L178-.L24,.L179-.L24
	.half	1
	.byte	95
	.word	.L179-.L24,.L11-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	.L11-.L24,.L180-.L24
	.half	1
	.byte	95
	.word	.L180-.L24,.L181-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	.L12-.L24,.L182-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L94:
	.word	-1,.L24,.L189-.L24,.L16-.L24
	.half	1
	.byte	95
	.word	0,0
.L96:
	.word	-1,.L24,.L190-.L24,.L191-.L24
	.half	1
	.byte	95
	.word	.L191-.L24,.L192-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L82:
	.word	-1,.L24,.L79-.L24,.L12-.L24
	.half	1
	.byte	95
	.word	0,0
.L84:
	.word	-1,.L24,.L183-.L24,.L184-.L24
	.half	1
	.byte	95
	.word	.L184-.L24,.L185-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	.L14-.L24,.L187-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L98:
	.word	-1,.L24,.L100-.L24,.L41-.L24
	.half	1
	.byte	85
	.word	0,0
.L45:
	.word	-1,.L24,0,.L2-.L24
	.half	1
	.byte	101
	.word	.L165-.L24,.L41-.L24
	.half	1
	.byte	111
	.word	0,0
.L136:
	.word	0,0
.L106:
	.word	-1,.L24,.L19-.L24,.L41-.L24
	.half	2
	.byte	144,33
	.word	0,0
.L53:
	.word	-1,.L24,0,.L41-.L24
	.half	2
	.byte	145,104
	.word	0,0
.L72:
	.word	-1,.L24,.L66-.L24,.L123-.L24
	.half	1
	.byte	81
	.word	0,0
.L43:
	.word	-1,.L24,0,.L164-.L24
	.half	1
	.byte	100
	.word	0,0
.L47:
	.word	-1,.L24,.L166-.L24,.L41-.L24
	.half	1
	.byte	108
	.word	.L171-.L24,.L172-.L24
	.half	1
	.byte	100
	.word	0,0
.L132:
	.word	0,0
.L97:
	.word	-1,.L24,.L193-.L24,.L41-.L24
	.half	1
	.byte	84
	.word	0,0
.L69:
	.word	-1,.L24,.L65-.L24,.L177-.L24
	.half	1
	.byte	95
	.word	0,0
.L57:
	.word	-1,.L24,.L167-.L24,.L168-.L24
	.half	1
	.byte	82
	.word	.L169-.L24,.L170-.L24
	.half	1
	.byte	95
	.word	0,0
.L60:
	.word	-1,.L24,.L170-.L24,.L173-.L24
	.half	1
	.byte	95
	.word	0,0
.L121:
	.word	-1,.L24,.L192-.L24,.L194-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L143:
	.word	-1,.L24,.L196-.L24,.L197-.L24
	.half	1
	.byte	95
	.word	0,0
.L128:
	.word	-1,.L24,.L123-.L24,.L195-.L24
	.half	2
	.byte	144,32
	.word	0,0
.L148:
	.word	-1,.L24,.L147-.L24,.L198-.L24
	.half	2
	.byte	144,32
	.word	0,0
.L138:
	.word	-1,.L24,.L199-.L24,.L101-.L24
	.half	1
	.byte	95
	.word	0,0
.L152:
	.word	-1,.L24,.L200-.L24,.L201-.L24
	.half	1
	.byte	81
	.word	.L201-.L24,.L202-.L24
	.half	1
	.byte	95
	.word	.L203-.L24,.L204-.L24
	.half	1
	.byte	95
	.word	.L205-.L24,.L206-.L24
	.half	1
	.byte	95
	.word	.L207-.L24,.L208-.L24
	.half	1
	.byte	81
	.word	.L210-.L24,.L211-.L24
	.half	1
	.byte	81
	.word	0,0
.L155:
	.word	-1,.L24,.L208-.L24,.L209-.L24
	.half	1
	.byte	95
	.word	0,0
.L158:
	.word	-1,.L24,.L211-.L24,.L156-.L24
	.half	1
	.byte	95
	.word	0,0
.L125:
	.word	0,0
.L113:
	.word	-1,.L24,.L195-.L24,.L19-.L24
	.half	2
	.byte	144,32
	.word	0,0
.L140:
	.word	-1,.L24,.L198-.L24,.L21-.L24
	.half	2
	.byte	144,32
	.word	0,0
.L109:
	.word	0,0
.L103:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEbu_Dram_initMemoryConfig')
	.sect	'.debug_loc'
.L25:
	.word	-1,.L26,0,.L159-.L26
	.half	2
	.byte	138,0
	.word	0,0
.L161:
	.word	-1,.L26,0,.L159-.L26
	.half	1
	.byte	100
	.word	0,0
.L162:
	.word	-1,.L26,0,.L159-.L26
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L366:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxEbu_Dram_initMemory')
	.sect	'.debug_frame'
	.word	36
	.word	.L366,.L24,.L41-.L24
	.byte	4
	.word	(.L163-.L24)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L41-.L163)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEbu_Dram_initMemoryConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L366,.L26,.L159-.L26
	.byte	8,18,8,19,8,22,8,23


	; Module end
